// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StackInstancesDeploymentTargets {
    /**
     * @return Limit deployment targets to individual accounts or include additional accounts with provided OUs. Valid values: `INTERSECTION`, `DIFFERENCE`, `UNION`, `NONE`.
     * 
     */
    private @Nullable String accountFilterType;
    /**
     * @return List of accounts to deploy stack set updates.
     * 
     */
    private @Nullable List<String> accounts;
    /**
     * @return S3 URL of the file containing the list of accounts.
     * 
     */
    private @Nullable String accountsUrl;
    /**
     * @return Organization root ID or organizational unit (OU) IDs to which stack sets deploy.
     * 
     */
    private @Nullable List<String> organizationalUnitIds;

    private StackInstancesDeploymentTargets() {}
    /**
     * @return Limit deployment targets to individual accounts or include additional accounts with provided OUs. Valid values: `INTERSECTION`, `DIFFERENCE`, `UNION`, `NONE`.
     * 
     */
    public Optional<String> accountFilterType() {
        return Optional.ofNullable(this.accountFilterType);
    }
    /**
     * @return List of accounts to deploy stack set updates.
     * 
     */
    public List<String> accounts() {
        return this.accounts == null ? List.of() : this.accounts;
    }
    /**
     * @return S3 URL of the file containing the list of accounts.
     * 
     */
    public Optional<String> accountsUrl() {
        return Optional.ofNullable(this.accountsUrl);
    }
    /**
     * @return Organization root ID or organizational unit (OU) IDs to which stack sets deploy.
     * 
     */
    public List<String> organizationalUnitIds() {
        return this.organizationalUnitIds == null ? List.of() : this.organizationalUnitIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackInstancesDeploymentTargets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountFilterType;
        private @Nullable List<String> accounts;
        private @Nullable String accountsUrl;
        private @Nullable List<String> organizationalUnitIds;
        public Builder() {}
        public Builder(StackInstancesDeploymentTargets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountFilterType = defaults.accountFilterType;
    	      this.accounts = defaults.accounts;
    	      this.accountsUrl = defaults.accountsUrl;
    	      this.organizationalUnitIds = defaults.organizationalUnitIds;
        }

        @CustomType.Setter
        public Builder accountFilterType(@Nullable String accountFilterType) {

            this.accountFilterType = accountFilterType;
            return this;
        }
        @CustomType.Setter
        public Builder accounts(@Nullable List<String> accounts) {

            this.accounts = accounts;
            return this;
        }
        public Builder accounts(String... accounts) {
            return accounts(List.of(accounts));
        }
        @CustomType.Setter
        public Builder accountsUrl(@Nullable String accountsUrl) {

            this.accountsUrl = accountsUrl;
            return this;
        }
        @CustomType.Setter
        public Builder organizationalUnitIds(@Nullable List<String> organizationalUnitIds) {

            this.organizationalUnitIds = organizationalUnitIds;
            return this;
        }
        public Builder organizationalUnitIds(String... organizationalUnitIds) {
            return organizationalUnitIds(List.of(organizationalUnitIds));
        }
        public StackInstancesDeploymentTargets build() {
            final var _resultValue = new StackInstancesDeploymentTargets();
            _resultValue.accountFilterType = accountFilterType;
            _resultValue.accounts = accounts;
            _resultValue.accountsUrl = accountsUrl;
            _resultValue.organizationalUnitIds = organizationalUnitIds;
            return _resultValue;
        }
    }
}
