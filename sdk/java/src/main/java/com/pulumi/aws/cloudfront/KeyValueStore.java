// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cloudfront.KeyValueStoreArgs;
import com.pulumi.aws.cloudfront.inputs.KeyValueStoreState;
import com.pulumi.aws.cloudfront.outputs.KeyValueStoreTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS CloudFront Key Value Store.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.cloudfront.KeyValueStore;
 * import com.pulumi.aws.cloudfront.KeyValueStoreArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new KeyValueStore(&#34;example&#34;, KeyValueStoreArgs.builder()        
 *             .name(&#34;ExampleKeyValueStore&#34;)
 *             .comment(&#34;This is an example key value store&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import CloudFront Key Value Store using the `name`. For example:
 * 
 * ```sh
 * $ pulumi import aws:cloudfront/keyValueStore:KeyValueStore example example_store
 * ```
 * 
 */
@ResourceType(type="aws:cloudfront/keyValueStore:KeyValueStore")
public class KeyValueStore extends com.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Comment.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Comment.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * ETag hash of the KeyValueStore.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return ETag hash of the KeyValueStore.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    @Export(name="lastModifiedTime", refs={String.class}, tree="[0]")
    private Output<String> lastModifiedTime;

    public Output<String> lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="timeouts", refs={KeyValueStoreTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ KeyValueStoreTimeouts> timeouts;

    public Output<Optional<KeyValueStoreTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KeyValueStore(String name) {
        this(name, KeyValueStoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KeyValueStore(String name, @Nullable KeyValueStoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KeyValueStore(String name, @Nullable KeyValueStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/keyValueStore:KeyValueStore", name, args == null ? KeyValueStoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KeyValueStore(String name, Output<String> id, @Nullable KeyValueStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/keyValueStore:KeyValueStore", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KeyValueStore get(String name, Output<String> id, @Nullable KeyValueStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KeyValueStore(name, id, state, options);
    }
}
