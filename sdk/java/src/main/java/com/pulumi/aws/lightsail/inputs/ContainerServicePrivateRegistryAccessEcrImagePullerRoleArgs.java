// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs Empty = new ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs();

    /**
     * A Boolean value that indicates whether to activate the role. The default is `false`.
     * 
     */
    @Import(name="isActive")
    private @Nullable Output<Boolean> isActive;

    /**
     * @return A Boolean value that indicates whether to activate the role. The default is `false`.
     * 
     */
    public Optional<Output<Boolean>> isActive() {
        return Optional.ofNullable(this.isActive);
    }

    /**
     * The principal ARN of the container service. The principal ARN can be used to create a trust
     * relationship between your standard AWS account and your Lightsail container service. This allows you to give your
     * service permission to access resources in your standard AWS account.
     * 
     */
    @Import(name="principalArn")
    private @Nullable Output<String> principalArn;

    /**
     * @return The principal ARN of the container service. The principal ARN can be used to create a trust
     * relationship between your standard AWS account and your Lightsail container service. This allows you to give your
     * service permission to access resources in your standard AWS account.
     * 
     */
    public Optional<Output<String>> principalArn() {
        return Optional.ofNullable(this.principalArn);
    }

    private ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs() {}

    private ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs(ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs $) {
        this.isActive = $.isActive;
        this.principalArn = $.principalArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs $;

        public Builder() {
            $ = new ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs();
        }

        public Builder(ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs defaults) {
            $ = new ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isActive A Boolean value that indicates whether to activate the role. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder isActive(@Nullable Output<Boolean> isActive) {
            $.isActive = isActive;
            return this;
        }

        /**
         * @param isActive A Boolean value that indicates whether to activate the role. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder isActive(Boolean isActive) {
            return isActive(Output.of(isActive));
        }

        /**
         * @param principalArn The principal ARN of the container service. The principal ARN can be used to create a trust
         * relationship between your standard AWS account and your Lightsail container service. This allows you to give your
         * service permission to access resources in your standard AWS account.
         * 
         * @return builder
         * 
         */
        public Builder principalArn(@Nullable Output<String> principalArn) {
            $.principalArn = principalArn;
            return this;
        }

        /**
         * @param principalArn The principal ARN of the container service. The principal ARN can be used to create a trust
         * relationship between your standard AWS account and your Lightsail container service. This allows you to give your
         * service permission to access resources in your standard AWS account.
         * 
         * @return builder
         * 
         */
        public Builder principalArn(String principalArn) {
            return principalArn(Output.of(principalArn));
        }

        public ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs build() {
            return $;
        }
    }

}
