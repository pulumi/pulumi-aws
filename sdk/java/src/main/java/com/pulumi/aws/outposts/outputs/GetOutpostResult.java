// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outposts.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOutpostResult {
    private String arn;
    /**
     * @return Availability Zone name.
     * 
     */
    private String availabilityZone;
    /**
     * @return Availability Zone identifier.
     * 
     */
    private String availabilityZoneId;
    /**
     * @return The description of the Outpost.
     * 
     */
    private String description;
    private String id;
    /**
     * @return The life cycle status.
     * 
     */
    private String lifecycleStatus;
    private String name;
    private @Nullable String ownerId;
    /**
     * @return The Amazon Resource Name (ARN) of the site.
     * 
     */
    private String siteArn;
    /**
     * @return The ID of the site.
     * 
     */
    private String siteId;
    /**
     * @return The hardware type.
     * 
     */
    private String supportedHardwareType;
    /**
     * @return The Outpost tags.
     * 
     */
    private Map<String,String> tags;

    private GetOutpostResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return Availability Zone name.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return Availability Zone identifier.
     * 
     */
    public String availabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * @return The description of the Outpost.
     * 
     */
    public String description() {
        return this.description;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The life cycle status.
     * 
     */
    public String lifecycleStatus() {
        return this.lifecycleStatus;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the site.
     * 
     */
    public String siteArn() {
        return this.siteArn;
    }
    /**
     * @return The ID of the site.
     * 
     */
    public String siteId() {
        return this.siteId;
    }
    /**
     * @return The hardware type.
     * 
     */
    public String supportedHardwareType() {
        return this.supportedHardwareType;
    }
    /**
     * @return The Outpost tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOutpostResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String availabilityZone;
        private String availabilityZoneId;
        private String description;
        private String id;
        private String lifecycleStatus;
        private String name;
        private @Nullable String ownerId;
        private String siteArn;
        private String siteId;
        private String supportedHardwareType;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetOutpostResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.lifecycleStatus = defaults.lifecycleStatus;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.siteArn = defaults.siteArn;
    	      this.siteId = defaults.siteId;
    	      this.supportedHardwareType = defaults.supportedHardwareType;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(String availabilityZoneId) {
            this.availabilityZoneId = Objects.requireNonNull(availabilityZoneId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStatus(String lifecycleStatus) {
            this.lifecycleStatus = Objects.requireNonNull(lifecycleStatus);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder siteArn(String siteArn) {
            this.siteArn = Objects.requireNonNull(siteArn);
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            this.siteId = Objects.requireNonNull(siteId);
            return this;
        }
        @CustomType.Setter
        public Builder supportedHardwareType(String supportedHardwareType) {
            this.supportedHardwareType = Objects.requireNonNull(supportedHardwareType);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetOutpostResult build() {
            final var _resultValue = new GetOutpostResult();
            _resultValue.arn = arn;
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.availabilityZoneId = availabilityZoneId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.lifecycleStatus = lifecycleStatus;
            _resultValue.name = name;
            _resultValue.ownerId = ownerId;
            _resultValue.siteArn = siteArn;
            _resultValue.siteId = siteId;
            _resultValue.supportedHardwareType = supportedHardwareType;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
