// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.rds.inputs.GetCertificateArgs;
import com.pulumi.aws.rds.inputs.GetCertificatePlainArgs;
import com.pulumi.aws.rds.inputs.GetClusterArgs;
import com.pulumi.aws.rds.inputs.GetClusterPlainArgs;
import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
import com.pulumi.aws.rds.inputs.GetClusterSnapshotPlainArgs;
import com.pulumi.aws.rds.inputs.GetEngineVersionArgs;
import com.pulumi.aws.rds.inputs.GetEngineVersionPlainArgs;
import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
import com.pulumi.aws.rds.inputs.GetEventCategoriesPlainArgs;
import com.pulumi.aws.rds.inputs.GetInstanceArgs;
import com.pulumi.aws.rds.inputs.GetInstancePlainArgs;
import com.pulumi.aws.rds.inputs.GetOrderableDbInstanceArgs;
import com.pulumi.aws.rds.inputs.GetOrderableDbInstancePlainArgs;
import com.pulumi.aws.rds.inputs.GetProxyArgs;
import com.pulumi.aws.rds.inputs.GetProxyPlainArgs;
import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingArgs;
import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingPlainArgs;
import com.pulumi.aws.rds.inputs.GetSnapshotArgs;
import com.pulumi.aws.rds.inputs.GetSnapshotPlainArgs;
import com.pulumi.aws.rds.inputs.GetSubnetGroupArgs;
import com.pulumi.aws.rds.inputs.GetSubnetGroupPlainArgs;
import com.pulumi.aws.rds.outputs.GetCertificateResult;
import com.pulumi.aws.rds.outputs.GetClusterResult;
import com.pulumi.aws.rds.outputs.GetClusterSnapshotResult;
import com.pulumi.aws.rds.outputs.GetEngineVersionResult;
import com.pulumi.aws.rds.outputs.GetEventCategoriesResult;
import com.pulumi.aws.rds.outputs.GetInstanceResult;
import com.pulumi.aws.rds.outputs.GetOrderableDbInstanceResult;
import com.pulumi.aws.rds.outputs.GetProxyResult;
import com.pulumi.aws.rds.outputs.GetReservedInstanceOfferingResult;
import com.pulumi.aws.rds.outputs.GetSnapshotResult;
import com.pulumi.aws.rds.outputs.GetSubnetGroupResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RdsFunctions {
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCertificateResult> getCertificate() {
        return getCertificate(GetCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain() {
        return getCertificatePlain(GetCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about an RDS Certificate.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.acm.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RdsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .latestValidTill(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides information about an RDS cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var clusterName = RdsFunctions.getCluster(GetClusterArgs.builder()
     *             .clusterIdentifier(&#34;clusterName&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClusterResult> getCluster(GetClusterArgs args) {
        return getCluster(args, InvokeOptions.Empty);
    }
    /**
     * Provides information about an RDS cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var clusterName = RdsFunctions.getCluster(GetClusterArgs.builder()
     *             .clusterIdentifier(&#34;clusterName&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClusterResult> getClusterPlain(GetClusterPlainArgs args) {
        return getClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides information about an RDS cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var clusterName = RdsFunctions.getCluster(GetClusterArgs.builder()
     *             .clusterIdentifier(&#34;clusterName&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClusterResult> getCluster(GetClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getCluster:getCluster", TypeShape.of(GetClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides information about an RDS cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var clusterName = RdsFunctions.getCluster(GetClusterArgs.builder()
     *             .clusterIdentifier(&#34;clusterName&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClusterResult> getClusterPlain(GetClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getCluster:getCluster", TypeShape.of(GetClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClusterSnapshotResult> getClusterSnapshot() {
        return getClusterSnapshot(GetClusterSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClusterSnapshotResult> getClusterSnapshotPlain() {
        return getClusterSnapshotPlain(GetClusterSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClusterSnapshotResult> getClusterSnapshot(GetClusterSnapshotArgs args) {
        return getClusterSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClusterSnapshotResult> getClusterSnapshotPlain(GetClusterSnapshotPlainArgs args) {
        return getClusterSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClusterSnapshotResult> getClusterSnapshot(GetClusterSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getClusterSnapshot:getClusterSnapshot", TypeShape.of(GetClusterSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on DB Instances.
     * See the `aws.rds.Snapshot` data source for DB Instance snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetClusterSnapshotArgs;
     * import com.pulumi.aws.rds.Cluster;
     * import com.pulumi.aws.rds.ClusterArgs;
     * import com.pulumi.aws.rds.ClusterInstance;
     * import com.pulumi.aws.rds.ClusterInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var developmentFinalSnapshot = RdsFunctions.getClusterSnapshot(GetClusterSnapshotArgs.builder()
     *             .dbClusterIdentifier(&#34;development_cluster&#34;)
     *             .mostRecent(true)
     *             .build());
     * 
     *         var auroraCluster = new Cluster(&#34;auroraCluster&#34;, ClusterArgs.builder()        
     *             .clusterIdentifier(&#34;development_cluster&#34;)
     *             .snapshotIdentifier(developmentFinalSnapshot.applyValue(getClusterSnapshotResult -&gt; getClusterSnapshotResult.id()))
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *         var auroraClusterInstance = new ClusterInstance(&#34;auroraClusterInstance&#34;, ClusterInstanceArgs.builder()        
     *             .clusterIdentifier(auroraCluster.id())
     *             .instanceClass(&#34;db.t2.small&#34;)
     *             .dbSubnetGroupName(&#34;my_db_subnet_group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClusterSnapshotResult> getClusterSnapshotPlain(GetClusterSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getClusterSnapshot:getClusterSnapshot", TypeShape.of(GetClusterSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about an RDS engine version.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetEngineVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getEngineVersion(GetEngineVersionArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .filters(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .preferredVersions(            
     *                 &#34;5.7.42&#34;,
     *                 &#34;5.7.19&#34;,
     *                 &#34;5.7.17&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEngineVersionResult> getEngineVersion(GetEngineVersionArgs args) {
        return getEngineVersion(args, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS engine version.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetEngineVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getEngineVersion(GetEngineVersionArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .filters(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .preferredVersions(            
     *                 &#34;5.7.42&#34;,
     *                 &#34;5.7.19&#34;,
     *                 &#34;5.7.17&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEngineVersionResult> getEngineVersionPlain(GetEngineVersionPlainArgs args) {
        return getEngineVersionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Information about an RDS engine version.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetEngineVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getEngineVersion(GetEngineVersionArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .filters(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .preferredVersions(            
     *                 &#34;5.7.42&#34;,
     *                 &#34;5.7.19&#34;,
     *                 &#34;5.7.17&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEngineVersionResult> getEngineVersion(GetEngineVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getEngineVersion:getEngineVersion", TypeShape.of(GetEngineVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about an RDS engine version.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetEngineVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getEngineVersion(GetEngineVersionArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .filters(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .preferredVersions(            
     *                 &#34;5.7.42&#34;,
     *                 &#34;5.7.19&#34;,
     *                 &#34;5.7.17&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEngineVersionResult> getEngineVersionPlain(GetEngineVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getEngineVersion:getEngineVersion", TypeShape.of(GetEngineVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEventCategoriesResult> getEventCategories() {
        return getEventCategories(GetEventCategoriesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEventCategoriesResult> getEventCategoriesPlain() {
        return getEventCategoriesPlain(GetEventCategoriesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEventCategoriesResult> getEventCategories(GetEventCategoriesArgs args) {
        return getEventCategories(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEventCategoriesResult> getEventCategoriesPlain(GetEventCategoriesPlainArgs args) {
        return getEventCategoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEventCategoriesResult> getEventCategories(GetEventCategoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getEventCategories:getEventCategories", TypeShape.of(GetEventCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * List the event categories of all the RDS resources.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories();
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     * List the event categories specific to the RDS resource `db-snapshot`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetEventCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEventCategories = RdsFunctions.getEventCategories(GetEventCategoriesArgs.builder()
     *             .sourceType(&#34;db-snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleEventCategories.applyValue(getEventCategoriesResult -&gt; getEventCategoriesResult.eventCategories()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEventCategoriesResult> getEventCategoriesPlain(GetEventCategoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getEventCategories:getEventCategories", TypeShape.of(GetEventCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an RDS instance
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.connect.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getInstance(GetInstanceArgs.builder()
     *             .dbInstanceIdentifier(&#34;my-test-database&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an RDS instance
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.connect.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getInstance(GetInstanceArgs.builder()
     *             .dbInstanceIdentifier(&#34;my-test-database&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args) {
        return getInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an RDS instance
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.connect.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getInstance(GetInstanceArgs.builder()
     *             .dbInstanceIdentifier(&#34;my-test-database&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an RDS instance
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.connect.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getInstance(GetInstanceArgs.builder()
     *             .dbInstanceIdentifier(&#34;my-test-database&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about RDS orderable DB instances and valid parameter combinations.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.7.22&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.r6.xlarge&#34;,
     *                 &#34;db.m4.large&#34;,
     *                 &#34;db.t3.small&#34;)
     *             .storageType(&#34;standard&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Valid parameter combinations can also be found with `preferred_engine_versions` and/or `preferred_instance_classes`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredEngineVersions(            
     *                 &#34;5.6.35&#34;,
     *                 &#34;5.6.41&#34;,
     *                 &#34;5.6.44&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.t2.small&#34;,
     *                 &#34;db.t3.medium&#34;,
     *                 &#34;db.t3.large&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrderableDbInstanceResult> getOrderableDbInstance(GetOrderableDbInstanceArgs args) {
        return getOrderableDbInstance(args, InvokeOptions.Empty);
    }
    /**
     * Information about RDS orderable DB instances and valid parameter combinations.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.7.22&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.r6.xlarge&#34;,
     *                 &#34;db.m4.large&#34;,
     *                 &#34;db.t3.small&#34;)
     *             .storageType(&#34;standard&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Valid parameter combinations can also be found with `preferred_engine_versions` and/or `preferred_instance_classes`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredEngineVersions(            
     *                 &#34;5.6.35&#34;,
     *                 &#34;5.6.41&#34;,
     *                 &#34;5.6.44&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.t2.small&#34;,
     *                 &#34;db.t3.medium&#34;,
     *                 &#34;db.t3.large&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrderableDbInstanceResult> getOrderableDbInstancePlain(GetOrderableDbInstancePlainArgs args) {
        return getOrderableDbInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Information about RDS orderable DB instances and valid parameter combinations.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.7.22&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.r6.xlarge&#34;,
     *                 &#34;db.m4.large&#34;,
     *                 &#34;db.t3.small&#34;)
     *             .storageType(&#34;standard&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Valid parameter combinations can also be found with `preferred_engine_versions` and/or `preferred_instance_classes`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredEngineVersions(            
     *                 &#34;5.6.35&#34;,
     *                 &#34;5.6.41&#34;,
     *                 &#34;5.6.44&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.t2.small&#34;,
     *                 &#34;db.t3.medium&#34;,
     *                 &#34;db.t3.large&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrderableDbInstanceResult> getOrderableDbInstance(GetOrderableDbInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getOrderableDbInstance:getOrderableDbInstance", TypeShape.of(GetOrderableDbInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about RDS orderable DB instances and valid parameter combinations.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.7.22&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.r6.xlarge&#34;,
     *                 &#34;db.m4.large&#34;,
     *                 &#34;db.t3.small&#34;)
     *             .storageType(&#34;standard&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Valid parameter combinations can also be found with `preferred_engine_versions` and/or `preferred_instance_classes`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.docdb.inputs.GetOrderableDbInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getOrderableDbInstance(GetOrderableDbInstanceArgs.builder()
     *             .engine(&#34;mysql&#34;)
     *             .licenseModel(&#34;general-public-license&#34;)
     *             .preferredEngineVersions(            
     *                 &#34;5.6.35&#34;,
     *                 &#34;5.6.41&#34;,
     *                 &#34;5.6.44&#34;)
     *             .preferredInstanceClasses(            
     *                 &#34;db.t2.small&#34;,
     *                 &#34;db.t3.medium&#34;,
     *                 &#34;db.t3.large&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrderableDbInstanceResult> getOrderableDbInstancePlain(GetOrderableDbInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getOrderableDbInstance:getOrderableDbInstance", TypeShape.of(GetOrderableDbInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Proxy.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetProxyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
     *             .name(&#34;my-test-db-proxy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProxyResult> getProxy(GetProxyArgs args) {
        return getProxy(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Proxy.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetProxyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
     *             .name(&#34;my-test-db-proxy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProxyResult> getProxyPlain(GetProxyPlainArgs args) {
        return getProxyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Proxy.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetProxyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
     *             .name(&#34;my-test-db-proxy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProxyResult> getProxy(GetProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getProxy:getProxy", TypeShape.of(GetProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Proxy.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetProxyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
     *             .name(&#34;my-test-db-proxy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProxyResult> getProxyPlain(GetProxyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getProxy:getProxy", TypeShape.of(GetProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about a single RDS Reserved Instance Offering.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getReservedInstanceOffering(GetReservedInstanceOfferingArgs.builder()
     *             .dbInstanceClass(&#34;db.t2.micro&#34;)
     *             .duration(31536000)
     *             .multiAz(false)
     *             .offeringType(&#34;All Upfront&#34;)
     *             .productDescription(&#34;mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetReservedInstanceOfferingResult> getReservedInstanceOffering(GetReservedInstanceOfferingArgs args) {
        return getReservedInstanceOffering(args, InvokeOptions.Empty);
    }
    /**
     * Information about a single RDS Reserved Instance Offering.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getReservedInstanceOffering(GetReservedInstanceOfferingArgs.builder()
     *             .dbInstanceClass(&#34;db.t2.micro&#34;)
     *             .duration(31536000)
     *             .multiAz(false)
     *             .offeringType(&#34;All Upfront&#34;)
     *             .productDescription(&#34;mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetReservedInstanceOfferingResult> getReservedInstanceOfferingPlain(GetReservedInstanceOfferingPlainArgs args) {
        return getReservedInstanceOfferingPlain(args, InvokeOptions.Empty);
    }
    /**
     * Information about a single RDS Reserved Instance Offering.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getReservedInstanceOffering(GetReservedInstanceOfferingArgs.builder()
     *             .dbInstanceClass(&#34;db.t2.micro&#34;)
     *             .duration(31536000)
     *             .multiAz(false)
     *             .offeringType(&#34;All Upfront&#34;)
     *             .productDescription(&#34;mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetReservedInstanceOfferingResult> getReservedInstanceOffering(GetReservedInstanceOfferingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getReservedInstanceOffering:getReservedInstanceOffering", TypeShape.of(GetReservedInstanceOfferingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Information about a single RDS Reserved Instance Offering.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.rds.inputs.GetReservedInstanceOfferingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = RdsFunctions.getReservedInstanceOffering(GetReservedInstanceOfferingArgs.builder()
     *             .dbInstanceClass(&#34;db.t2.micro&#34;)
     *             .duration(31536000)
     *             .multiAz(false)
     *             .offeringType(&#34;All Upfront&#34;)
     *             .productDescription(&#34;mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetReservedInstanceOfferingResult> getReservedInstanceOfferingPlain(GetReservedInstanceOfferingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getReservedInstanceOffering:getReservedInstanceOffering", TypeShape.of(GetReservedInstanceOfferingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot() {
        return getSnapshot(GetSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain() {
        return getSnapshotPlain(GetSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args) {
        return getSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
     * 
     * &gt; **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
     * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.Instance;
     * import com.pulumi.aws.rds.InstanceArgs;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var prod = new Instance(&#34;prod&#34;, InstanceArgs.builder()        
     *             .allocatedStorage(10)
     *             .engine(&#34;mysql&#34;)
     *             .engineVersion(&#34;5.6.17&#34;)
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydb&#34;)
     *             .username(&#34;foo&#34;)
     *             .password(&#34;bar&#34;)
     *             .dbSubnetGroupName(&#34;my_database_subnet_group&#34;)
     *             .parameterGroupName(&#34;default.mysql5.6&#34;)
     *             .build());
     * 
     *         final var latestProdSnapshot = RdsFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .dbInstanceIdentifier(prod.id())
     *             .mostRecent(true)
     *             .build());
     * 
     *         var dev = new Instance(&#34;dev&#34;, InstanceArgs.builder()        
     *             .instanceClass(&#34;db.t2.micro&#34;)
     *             .name(&#34;mydbdev&#34;)
     *             .snapshotIdentifier(latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult).applyValue(latestProdSnapshot -&gt; latestProdSnapshot.applyValue(getSnapshotResult -&gt; getSnapshotResult.id())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an RDS subnet group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.elasticache.inputs.GetSubnetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getSubnetGroup(GetSubnetGroupArgs.builder()
     *             .name(&#34;my-test-database-subnet-group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSubnetGroupResult> getSubnetGroup(GetSubnetGroupArgs args) {
        return getSubnetGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an RDS subnet group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.elasticache.inputs.GetSubnetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getSubnetGroup(GetSubnetGroupArgs.builder()
     *             .name(&#34;my-test-database-subnet-group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSubnetGroupResult> getSubnetGroupPlain(GetSubnetGroupPlainArgs args) {
        return getSubnetGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an RDS subnet group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.elasticache.inputs.GetSubnetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getSubnetGroup(GetSubnetGroupArgs.builder()
     *             .name(&#34;my-test-database-subnet-group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSubnetGroupResult> getSubnetGroup(GetSubnetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:rds/getSubnetGroup:getSubnetGroup", TypeShape.of(GetSubnetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an RDS subnet group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.rds.RdsFunctions;
     * import com.pulumi.aws.elasticache.inputs.GetSubnetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var database = RdsFunctions.getSubnetGroup(GetSubnetGroupArgs.builder()
     *             .name(&#34;my-test-database-subnet-group&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSubnetGroupResult> getSubnetGroupPlain(GetSubnetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:rds/getSubnetGroup:getSubnetGroup", TypeShape.of(GetSubnetGroupResult.class), args, Utilities.withVersion(options));
    }
}
