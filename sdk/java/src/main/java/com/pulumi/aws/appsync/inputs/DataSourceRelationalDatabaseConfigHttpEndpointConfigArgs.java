// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs Empty = new DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs();

    @Import(name="awsSecretStoreArn", required=true)
    private Output<String> awsSecretStoreArn;

    public Output<String> awsSecretStoreArn() {
        return this.awsSecretStoreArn;
    }

    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    @Import(name="dbClusterIdentifier", required=true)
    private Output<String> dbClusterIdentifier;

    public Output<String> dbClusterIdentifier() {
        return this.dbClusterIdentifier;
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="schema")
    private @Nullable Output<String> schema;

    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    private DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs() {}

    private DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs(DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs $) {
        this.awsSecretStoreArn = $.awsSecretStoreArn;
        this.databaseName = $.databaseName;
        this.dbClusterIdentifier = $.dbClusterIdentifier;
        this.region = $.region;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs $;

        public Builder() {
            $ = new DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs();
        }

        public Builder(DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs defaults) {
            $ = new DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsSecretStoreArn(Output<String> awsSecretStoreArn) {
            $.awsSecretStoreArn = awsSecretStoreArn;
            return this;
        }

        public Builder awsSecretStoreArn(String awsSecretStoreArn) {
            return awsSecretStoreArn(Output.of(awsSecretStoreArn));
        }

        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder dbClusterIdentifier(Output<String> dbClusterIdentifier) {
            $.dbClusterIdentifier = dbClusterIdentifier;
            return this;
        }

        public Builder dbClusterIdentifier(String dbClusterIdentifier) {
            return dbClusterIdentifier(Output.of(dbClusterIdentifier));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs build() {
            $.awsSecretStoreArn = Objects.requireNonNull($.awsSecretStoreArn, "expected parameter 'awsSecretStoreArn' to be non-null");
            $.dbClusterIdentifier = Objects.requireNonNull($.dbClusterIdentifier, "expected parameter 'dbClusterIdentifier' to be non-null");
            return $;
        }
    }

}
