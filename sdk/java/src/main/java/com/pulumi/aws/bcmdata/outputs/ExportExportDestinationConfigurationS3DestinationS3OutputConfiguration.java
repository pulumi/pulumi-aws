// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bcmdata.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration {
    /**
     * @return Compression type for the data export. Valid values `GZIP`, `PARQUET`.
     * 
     */
    private String compression;
    /**
     * @return File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
     * 
     */
    private String format;
    /**
     * @return Output type for the data export. Valid value `CUSTOM`.
     * 
     */
    private String outputType;
    /**
     * @return The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
     * 
     */
    private String overwrite;

    private ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration() {}
    /**
     * @return Compression type for the data export. Valid values `GZIP`, `PARQUET`.
     * 
     */
    public String compression() {
        return this.compression;
    }
    /**
     * @return File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return Output type for the data export. Valid value `CUSTOM`.
     * 
     */
    public String outputType() {
        return this.outputType;
    }
    /**
     * @return The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
     * 
     */
    public String overwrite() {
        return this.overwrite;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compression;
        private String format;
        private String outputType;
        private String overwrite;
        public Builder() {}
        public Builder(ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.format = defaults.format;
    	      this.outputType = defaults.outputType;
    	      this.overwrite = defaults.overwrite;
        }

        @CustomType.Setter
        public Builder compression(String compression) {
            if (compression == null) {
              throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration", "compression");
            }
            this.compression = compression;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder outputType(String outputType) {
            if (outputType == null) {
              throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration", "outputType");
            }
            this.outputType = outputType;
            return this;
        }
        @CustomType.Setter
        public Builder overwrite(String overwrite) {
            if (overwrite == null) {
              throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration", "overwrite");
            }
            this.overwrite = overwrite;
            return this;
        }
        public ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration build() {
            final var _resultValue = new ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration();
            _resultValue.compression = compression;
            _resultValue.format = format;
            _resultValue.outputType = outputType;
            _resultValue.overwrite = overwrite;
            return _resultValue;
        }
    }
}
