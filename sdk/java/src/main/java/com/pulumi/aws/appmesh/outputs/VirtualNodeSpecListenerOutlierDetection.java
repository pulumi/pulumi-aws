// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetectionInterval;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class VirtualNodeSpecListenerOutlierDetection {
    private VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration baseEjectionDuration;
    private VirtualNodeSpecListenerOutlierDetectionInterval interval;
    private Integer maxEjectionPercent;
    private Integer maxServerErrors;

    private VirtualNodeSpecListenerOutlierDetection() {}
    public VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration baseEjectionDuration() {
        return this.baseEjectionDuration;
    }
    public VirtualNodeSpecListenerOutlierDetectionInterval interval() {
        return this.interval;
    }
    public Integer maxEjectionPercent() {
        return this.maxEjectionPercent;
    }
    public Integer maxServerErrors() {
        return this.maxServerErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNodeSpecListenerOutlierDetection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration baseEjectionDuration;
        private VirtualNodeSpecListenerOutlierDetectionInterval interval;
        private Integer maxEjectionPercent;
        private Integer maxServerErrors;
        public Builder() {}
        public Builder(VirtualNodeSpecListenerOutlierDetection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseEjectionDuration = defaults.baseEjectionDuration;
    	      this.interval = defaults.interval;
    	      this.maxEjectionPercent = defaults.maxEjectionPercent;
    	      this.maxServerErrors = defaults.maxServerErrors;
        }

        @CustomType.Setter
        public Builder baseEjectionDuration(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration baseEjectionDuration) {
            this.baseEjectionDuration = Objects.requireNonNull(baseEjectionDuration);
            return this;
        }
        @CustomType.Setter
        public Builder interval(VirtualNodeSpecListenerOutlierDetectionInterval interval) {
            this.interval = Objects.requireNonNull(interval);
            return this;
        }
        @CustomType.Setter
        public Builder maxEjectionPercent(Integer maxEjectionPercent) {
            this.maxEjectionPercent = Objects.requireNonNull(maxEjectionPercent);
            return this;
        }
        @CustomType.Setter
        public Builder maxServerErrors(Integer maxServerErrors) {
            this.maxServerErrors = Objects.requireNonNull(maxServerErrors);
            return this;
        }
        public VirtualNodeSpecListenerOutlierDetection build() {
            final var o = new VirtualNodeSpecListenerOutlierDetection();
            o.baseEjectionDuration = baseEjectionDuration;
            o.interval = interval;
            o.maxEjectionPercent = maxEjectionPercent;
            o.maxServerErrors = maxServerErrors;
            return o;
        }
    }
}
