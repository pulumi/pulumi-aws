// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PolicyTableAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyTableAssociationArgs Empty = new PolicyTableAssociationArgs();

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId", required=true)
    private Output<String> transitGatewayAttachmentId;

    /**
     * @return Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    public Output<String> transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }

    /**
     * Identifier of EC2 Transit Gateway Policy Table.
     * 
     */
    @Import(name="transitGatewayPolicyTableId", required=true)
    private Output<String> transitGatewayPolicyTableId;

    /**
     * @return Identifier of EC2 Transit Gateway Policy Table.
     * 
     */
    public Output<String> transitGatewayPolicyTableId() {
        return this.transitGatewayPolicyTableId;
    }

    private PolicyTableAssociationArgs() {}

    private PolicyTableAssociationArgs(PolicyTableAssociationArgs $) {
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayPolicyTableId = $.transitGatewayPolicyTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyTableAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyTableAssociationArgs $;

        public Builder() {
            $ = new PolicyTableAssociationArgs();
        }

        public Builder(PolicyTableAssociationArgs defaults) {
            $ = new PolicyTableAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        /**
         * @param transitGatewayPolicyTableId Identifier of EC2 Transit Gateway Policy Table.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayPolicyTableId(Output<String> transitGatewayPolicyTableId) {
            $.transitGatewayPolicyTableId = transitGatewayPolicyTableId;
            return this;
        }

        /**
         * @param transitGatewayPolicyTableId Identifier of EC2 Transit Gateway Policy Table.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayPolicyTableId(String transitGatewayPolicyTableId) {
            return transitGatewayPolicyTableId(Output.of(transitGatewayPolicyTableId));
        }

        public PolicyTableAssociationArgs build() {
            if ($.transitGatewayAttachmentId == null) {
                throw new MissingRequiredPropertyException("PolicyTableAssociationArgs", "transitGatewayAttachmentId");
            }
            if ($.transitGatewayPolicyTableId == null) {
                throw new MissingRequiredPropertyException("PolicyTableAssociationArgs", "transitGatewayPolicyTableId");
            }
            return $;
        }
    }

}
