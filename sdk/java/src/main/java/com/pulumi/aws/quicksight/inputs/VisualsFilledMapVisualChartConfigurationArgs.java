// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.LegendOptionsArgs;
import com.pulumi.aws.quicksight.inputs.TooltipOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualChartConfigurationMapStyleOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualChartConfigurationSortConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualChartConfigurationWindowOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsFilledMapVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsFilledMapVisualChartConfigurationArgs Empty = new VisualsFilledMapVisualChartConfigurationArgs();

    @Import(name="fieldWells")
    private @Nullable Output<VisualsFilledMapVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsFilledMapVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="legend")
    private @Nullable Output<LegendOptionsArgs> legend;

    public Optional<Output<LegendOptionsArgs>> legend() {
        return Optional.ofNullable(this.legend);
    }

    @Import(name="mapStyleOptions")
    private @Nullable Output<VisualsFilledMapVisualChartConfigurationMapStyleOptionsArgs> mapStyleOptions;

    public Optional<Output<VisualsFilledMapVisualChartConfigurationMapStyleOptionsArgs>> mapStyleOptions() {
        return Optional.ofNullable(this.mapStyleOptions);
    }

    @Import(name="sortConfiguration")
    private @Nullable Output<VisualsFilledMapVisualChartConfigurationSortConfigurationArgs> sortConfiguration;

    public Optional<Output<VisualsFilledMapVisualChartConfigurationSortConfigurationArgs>> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }

    @Import(name="tooltip")
    private @Nullable Output<TooltipOptionsArgs> tooltip;

    public Optional<Output<TooltipOptionsArgs>> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    @Import(name="windowOptions")
    private @Nullable Output<VisualsFilledMapVisualChartConfigurationWindowOptionsArgs> windowOptions;

    public Optional<Output<VisualsFilledMapVisualChartConfigurationWindowOptionsArgs>> windowOptions() {
        return Optional.ofNullable(this.windowOptions);
    }

    private VisualsFilledMapVisualChartConfigurationArgs() {}

    private VisualsFilledMapVisualChartConfigurationArgs(VisualsFilledMapVisualChartConfigurationArgs $) {
        this.fieldWells = $.fieldWells;
        this.legend = $.legend;
        this.mapStyleOptions = $.mapStyleOptions;
        this.sortConfiguration = $.sortConfiguration;
        this.tooltip = $.tooltip;
        this.windowOptions = $.windowOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsFilledMapVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsFilledMapVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsFilledMapVisualChartConfigurationArgs();
        }

        public Builder(VisualsFilledMapVisualChartConfigurationArgs defaults) {
            $ = new VisualsFilledMapVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder fieldWells(@Nullable Output<VisualsFilledMapVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsFilledMapVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder legend(@Nullable Output<LegendOptionsArgs> legend) {
            $.legend = legend;
            return this;
        }

        public Builder legend(LegendOptionsArgs legend) {
            return legend(Output.of(legend));
        }

        public Builder mapStyleOptions(@Nullable Output<VisualsFilledMapVisualChartConfigurationMapStyleOptionsArgs> mapStyleOptions) {
            $.mapStyleOptions = mapStyleOptions;
            return this;
        }

        public Builder mapStyleOptions(VisualsFilledMapVisualChartConfigurationMapStyleOptionsArgs mapStyleOptions) {
            return mapStyleOptions(Output.of(mapStyleOptions));
        }

        public Builder sortConfiguration(@Nullable Output<VisualsFilledMapVisualChartConfigurationSortConfigurationArgs> sortConfiguration) {
            $.sortConfiguration = sortConfiguration;
            return this;
        }

        public Builder sortConfiguration(VisualsFilledMapVisualChartConfigurationSortConfigurationArgs sortConfiguration) {
            return sortConfiguration(Output.of(sortConfiguration));
        }

        public Builder tooltip(@Nullable Output<TooltipOptionsArgs> tooltip) {
            $.tooltip = tooltip;
            return this;
        }

        public Builder tooltip(TooltipOptionsArgs tooltip) {
            return tooltip(Output.of(tooltip));
        }

        public Builder windowOptions(@Nullable Output<VisualsFilledMapVisualChartConfigurationWindowOptionsArgs> windowOptions) {
            $.windowOptions = windowOptions;
            return this;
        }

        public Builder windowOptions(VisualsFilledMapVisualChartConfigurationWindowOptionsArgs windowOptions) {
            return windowOptions(Output.of(windowOptions));
        }

        public VisualsFilledMapVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
