// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.FlowTaskConnectorOperatorArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowTaskArgs Empty = new FlowTaskArgs();

    @Import(name="connectorOperators")
    private @Nullable Output<List<FlowTaskConnectorOperatorArgs>> connectorOperators;

    public Optional<Output<List<FlowTaskConnectorOperatorArgs>>> connectorOperators() {
        return Optional.ofNullable(this.connectorOperators);
    }

    @Import(name="destinationField")
    private @Nullable Output<String> destinationField;

    public Optional<Output<String>> destinationField() {
        return Optional.ofNullable(this.destinationField);
    }

    @Import(name="sourceFields", required=true)
    private Output<List<String>> sourceFields;

    public Output<List<String>> sourceFields() {
        return this.sourceFields;
    }

    @Import(name="taskProperties")
    private @Nullable Output<Map<String,String>> taskProperties;

    public Optional<Output<Map<String,String>>> taskProperties() {
        return Optional.ofNullable(this.taskProperties);
    }

    @Import(name="taskType", required=true)
    private Output<String> taskType;

    public Output<String> taskType() {
        return this.taskType;
    }

    private FlowTaskArgs() {}

    private FlowTaskArgs(FlowTaskArgs $) {
        this.connectorOperators = $.connectorOperators;
        this.destinationField = $.destinationField;
        this.sourceFields = $.sourceFields;
        this.taskProperties = $.taskProperties;
        this.taskType = $.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowTaskArgs $;

        public Builder() {
            $ = new FlowTaskArgs();
        }

        public Builder(FlowTaskArgs defaults) {
            $ = new FlowTaskArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectorOperators(@Nullable Output<List<FlowTaskConnectorOperatorArgs>> connectorOperators) {
            $.connectorOperators = connectorOperators;
            return this;
        }

        public Builder connectorOperators(List<FlowTaskConnectorOperatorArgs> connectorOperators) {
            return connectorOperators(Output.of(connectorOperators));
        }

        public Builder connectorOperators(FlowTaskConnectorOperatorArgs... connectorOperators) {
            return connectorOperators(List.of(connectorOperators));
        }

        public Builder destinationField(@Nullable Output<String> destinationField) {
            $.destinationField = destinationField;
            return this;
        }

        public Builder destinationField(String destinationField) {
            return destinationField(Output.of(destinationField));
        }

        public Builder sourceFields(Output<List<String>> sourceFields) {
            $.sourceFields = sourceFields;
            return this;
        }

        public Builder sourceFields(List<String> sourceFields) {
            return sourceFields(Output.of(sourceFields));
        }

        public Builder sourceFields(String... sourceFields) {
            return sourceFields(List.of(sourceFields));
        }

        public Builder taskProperties(@Nullable Output<Map<String,String>> taskProperties) {
            $.taskProperties = taskProperties;
            return this;
        }

        public Builder taskProperties(Map<String,String> taskProperties) {
            return taskProperties(Output.of(taskProperties));
        }

        public Builder taskType(Output<String> taskType) {
            $.taskType = taskType;
            return this;
        }

        public Builder taskType(String taskType) {
            return taskType(Output.of(taskType));
        }

        public FlowTaskArgs build() {
            $.sourceFields = Objects.requireNonNull($.sourceFields, "expected parameter 'sourceFields' to be non-null");
            $.taskType = Objects.requireNonNull($.taskType, "expected parameter 'taskType' to be non-null");
            return $;
        }
    }

}
