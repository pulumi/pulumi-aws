// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    @Import(name="autoResolveBestVoicesEnabled")
    private @Nullable Output<Boolean> autoResolveBestVoicesEnabled;

    public Optional<Output<Boolean>> autoResolveBestVoicesEnabled() {
        return Optional.ofNullable(this.autoResolveBestVoicesEnabled);
    }

    @Import(name="contactFlowLogsEnabled")
    private @Nullable Output<Boolean> contactFlowLogsEnabled;

    public Optional<Output<Boolean>> contactFlowLogsEnabled() {
        return Optional.ofNullable(this.contactFlowLogsEnabled);
    }

    @Import(name="contactLensEnabled")
    private @Nullable Output<Boolean> contactLensEnabled;

    public Optional<Output<Boolean>> contactLensEnabled() {
        return Optional.ofNullable(this.contactLensEnabled);
    }

    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    @Import(name="earlyMediaEnabled")
    private @Nullable Output<Boolean> earlyMediaEnabled;

    public Optional<Output<Boolean>> earlyMediaEnabled() {
        return Optional.ofNullable(this.earlyMediaEnabled);
    }

    @Import(name="identityManagementType", required=true)
    private Output<String> identityManagementType;

    public Output<String> identityManagementType() {
        return this.identityManagementType;
    }

    @Import(name="inboundCallsEnabled", required=true)
    private Output<Boolean> inboundCallsEnabled;

    public Output<Boolean> inboundCallsEnabled() {
        return this.inboundCallsEnabled;
    }

    @Import(name="instanceAlias")
    private @Nullable Output<String> instanceAlias;

    public Optional<Output<String>> instanceAlias() {
        return Optional.ofNullable(this.instanceAlias);
    }

    @Import(name="multiPartyConferenceEnabled")
    private @Nullable Output<Boolean> multiPartyConferenceEnabled;

    public Optional<Output<Boolean>> multiPartyConferenceEnabled() {
        return Optional.ofNullable(this.multiPartyConferenceEnabled);
    }

    @Import(name="outboundCallsEnabled", required=true)
    private Output<Boolean> outboundCallsEnabled;

    public Output<Boolean> outboundCallsEnabled() {
        return this.outboundCallsEnabled;
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.autoResolveBestVoicesEnabled = $.autoResolveBestVoicesEnabled;
        this.contactFlowLogsEnabled = $.contactFlowLogsEnabled;
        this.contactLensEnabled = $.contactLensEnabled;
        this.directoryId = $.directoryId;
        this.earlyMediaEnabled = $.earlyMediaEnabled;
        this.identityManagementType = $.identityManagementType;
        this.inboundCallsEnabled = $.inboundCallsEnabled;
        this.instanceAlias = $.instanceAlias;
        this.multiPartyConferenceEnabled = $.multiPartyConferenceEnabled;
        this.outboundCallsEnabled = $.outboundCallsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoResolveBestVoicesEnabled(@Nullable Output<Boolean> autoResolveBestVoicesEnabled) {
            $.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            return this;
        }

        public Builder autoResolveBestVoicesEnabled(Boolean autoResolveBestVoicesEnabled) {
            return autoResolveBestVoicesEnabled(Output.of(autoResolveBestVoicesEnabled));
        }

        public Builder contactFlowLogsEnabled(@Nullable Output<Boolean> contactFlowLogsEnabled) {
            $.contactFlowLogsEnabled = contactFlowLogsEnabled;
            return this;
        }

        public Builder contactFlowLogsEnabled(Boolean contactFlowLogsEnabled) {
            return contactFlowLogsEnabled(Output.of(contactFlowLogsEnabled));
        }

        public Builder contactLensEnabled(@Nullable Output<Boolean> contactLensEnabled) {
            $.contactLensEnabled = contactLensEnabled;
            return this;
        }

        public Builder contactLensEnabled(Boolean contactLensEnabled) {
            return contactLensEnabled(Output.of(contactLensEnabled));
        }

        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder earlyMediaEnabled(@Nullable Output<Boolean> earlyMediaEnabled) {
            $.earlyMediaEnabled = earlyMediaEnabled;
            return this;
        }

        public Builder earlyMediaEnabled(Boolean earlyMediaEnabled) {
            return earlyMediaEnabled(Output.of(earlyMediaEnabled));
        }

        public Builder identityManagementType(Output<String> identityManagementType) {
            $.identityManagementType = identityManagementType;
            return this;
        }

        public Builder identityManagementType(String identityManagementType) {
            return identityManagementType(Output.of(identityManagementType));
        }

        public Builder inboundCallsEnabled(Output<Boolean> inboundCallsEnabled) {
            $.inboundCallsEnabled = inboundCallsEnabled;
            return this;
        }

        public Builder inboundCallsEnabled(Boolean inboundCallsEnabled) {
            return inboundCallsEnabled(Output.of(inboundCallsEnabled));
        }

        public Builder instanceAlias(@Nullable Output<String> instanceAlias) {
            $.instanceAlias = instanceAlias;
            return this;
        }

        public Builder instanceAlias(String instanceAlias) {
            return instanceAlias(Output.of(instanceAlias));
        }

        public Builder multiPartyConferenceEnabled(@Nullable Output<Boolean> multiPartyConferenceEnabled) {
            $.multiPartyConferenceEnabled = multiPartyConferenceEnabled;
            return this;
        }

        public Builder multiPartyConferenceEnabled(Boolean multiPartyConferenceEnabled) {
            return multiPartyConferenceEnabled(Output.of(multiPartyConferenceEnabled));
        }

        public Builder outboundCallsEnabled(Output<Boolean> outboundCallsEnabled) {
            $.outboundCallsEnabled = outboundCallsEnabled;
            return this;
        }

        public Builder outboundCallsEnabled(Boolean outboundCallsEnabled) {
            return outboundCallsEnabled(Output.of(outboundCallsEnabled));
        }

        public InstanceArgs build() {
            $.identityManagementType = Objects.requireNonNull($.identityManagementType, "expected parameter 'identityManagementType' to be non-null");
            $.inboundCallsEnabled = Objects.requireNonNull($.inboundCallsEnabled, "expected parameter 'inboundCallsEnabled' to be non-null");
            $.outboundCallsEnabled = Objects.requireNonNull($.outboundCallsEnabled, "expected parameter 'outboundCallsEnabled' to be non-null");
            return $;
        }
    }

}
