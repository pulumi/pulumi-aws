// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.bedrock.AgentAgentArgs;
import com.pulumi.aws.bedrock.inputs.AgentAgentState;
import com.pulumi.aws.bedrock.outputs.AgentAgentPromptOverrideConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentAgentTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Agents for Amazon Bedrock Agent.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
 * import com.pulumi.aws.inputs.GetRegionArgs;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.iam.Role;
 * import com.pulumi.aws.iam.RoleArgs;
 * import com.pulumi.aws.iam.RolePolicy;
 * import com.pulumi.aws.iam.RolePolicyArgs;
 * import com.pulumi.aws.bedrock.AgentAgent;
 * import com.pulumi.aws.bedrock.AgentAgentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = AwsFunctions.getCallerIdentity();
 * 
 *         final var currentGetRegion = AwsFunctions.getRegion();
 * 
 *         final var exampleAgentTrust = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .actions(&#34;sts:AssumeRole&#34;)
 *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                     .identifiers(&#34;bedrock.amazonaws.com&#34;)
 *                     .type(&#34;Service&#34;)
 *                     .build())
 *                 .conditions(                
 *                     GetPolicyDocumentStatementConditionArgs.builder()
 *                         .test(&#34;StringEquals&#34;)
 *                         .values(current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId()))
 *                         .variable(&#34;aws:SourceAccount&#34;)
 *                         .build(),
 *                     GetPolicyDocumentStatementConditionArgs.builder()
 *                         .test(&#34;ArnLike&#34;)
 *                         .values(String.format(&#34;arn:aws:bedrock:%s:%s:agent/*&#34;, currentGetRegion.applyValue(getRegionResult -&gt; getRegionResult.name()),current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId())))
 *                         .variable(&#34;AWS:SourceArn&#34;)
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new Role(&#34;example&#34;, RoleArgs.builder()        
 *             .assumeRolePolicy(exampleAgentTrust.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
 *             .namePrefix(&#34;AmazonBedrockExecutionRoleForAgents_&#34;)
 *             .build());
 * 
 *         final var exampleAgentPermissions = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .actions(&#34;bedrock:InvokeModel&#34;)
 *                 .resources(String.format(&#34;arn:aws:bedrock:%s::foundation-model/anthropic.claude-v2&#34;, currentGetRegion.applyValue(getRegionResult -&gt; getRegionResult.name())))
 *                 .build())
 *             .build());
 * 
 *         var exampleRolePolicy = new RolePolicy(&#34;exampleRolePolicy&#34;, RolePolicyArgs.builder()        
 *             .policy(exampleAgentPermissions.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
 *             .role(example.id())
 *             .build());
 * 
 *         var test = new AgentAgent(&#34;test&#34;, AgentAgentArgs.builder()        
 *             .agentName(&#34;my-agent-name&#34;)
 *             .agentResourceRoleArn(example.arn())
 *             .idleSessionTtlInSeconds(500)
 *             .foundationModel(&#34;anthropic.claude-v2&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Agents for Amazon Bedrock Agent using the `abcdef1234`. For example:
 * 
 * ```sh
 * $ pulumi import aws:bedrock/agentAgent:AgentAgent example abcdef1234
 * ```
 * 
 */
@ResourceType(type="aws:bedrock/agentAgent:AgentAgent")
public class AgentAgent extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the Agent.
     * 
     */
    @Export(name="agentArn", refs={String.class}, tree="[0]")
    private Output<String> agentArn;

    /**
     * @return ARN of the Agent.
     * 
     */
    public Output<String> agentArn() {
        return this.agentArn;
    }
    /**
     * ID of the Agent.
     * 
     */
    @Export(name="agentId", refs={String.class}, tree="[0]")
    private Output<String> agentId;

    /**
     * @return ID of the Agent.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }
    /**
     * Name for the agent.
     * 
     */
    @Export(name="agentName", refs={String.class}, tree="[0]")
    private Output<String> agentName;

    /**
     * @return Name for the agent.
     * 
     */
    public Output<String> agentName() {
        return this.agentName;
    }
    /**
     * ARN of the Role for the agent.
     * 
     */
    @Export(name="agentResourceRoleArn", refs={String.class}, tree="[0]")
    private Output<String> agentResourceRoleArn;

    /**
     * @return ARN of the Role for the agent.
     * 
     */
    public Output<String> agentResourceRoleArn() {
        return this.agentResourceRoleArn;
    }
    /**
     * Version of the Agent.
     * 
     */
    @Export(name="agentVersion", refs={String.class}, tree="[0]")
    private Output<String> agentVersion;

    /**
     * @return Version of the Agent.
     * 
     */
    public Output<String> agentVersion() {
        return this.agentVersion;
    }
    /**
     * ARN of customer manager key to use for encryption.
     * 
     */
    @Export(name="customerEncryptionKeyArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customerEncryptionKeyArn;

    /**
     * @return ARN of customer manager key to use for encryption.
     * 
     */
    public Output<Optional<String>> customerEncryptionKeyArn() {
        return Codegen.optional(this.customerEncryptionKeyArn);
    }
    /**
     * Description of the agent.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the agent.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Foundation model for the agent to use.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="foundationModel", refs={String.class}, tree="[0]")
    private Output<String> foundationModel;

    /**
     * @return Foundation model for the agent to use.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> foundationModel() {
        return this.foundationModel;
    }
    /**
     * TTL in seconds for the agent to idle.
     * 
     */
    @Export(name="idleSessionTtlInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> idleSessionTtlInSeconds;

    /**
     * @return TTL in seconds for the agent to idle.
     * 
     */
    public Output<Integer> idleSessionTtlInSeconds() {
        return this.idleSessionTtlInSeconds;
    }
    /**
     * Instructions to tell agent what it should do.
     * 
     */
    @Export(name="instruction", refs={String.class}, tree="[0]")
    private Output<String> instruction;

    /**
     * @return Instructions to tell agent what it should do.
     * 
     */
    public Output<String> instruction() {
        return this.instruction;
    }
    @Export(name="prepareAgent", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> prepareAgent;

    public Output<Boolean> prepareAgent() {
        return this.prepareAgent;
    }
    /**
     * Prompt Override Configuration
     * 
     */
    @Export(name="promptOverrideConfigurations", refs={List.class,AgentAgentPromptOverrideConfiguration.class}, tree="[0,1]")
    private Output<List<AgentAgentPromptOverrideConfiguration>> promptOverrideConfigurations;

    /**
     * @return Prompt Override Configuration
     * 
     */
    public Output<List<AgentAgentPromptOverrideConfiguration>> promptOverrideConfigurations() {
        return this.promptOverrideConfigurations;
    }
    /**
     * Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={AgentAgentTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ AgentAgentTimeouts> timeouts;

    public Output<Optional<AgentAgentTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AgentAgent(String name) {
        this(name, AgentAgentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AgentAgent(String name, AgentAgentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AgentAgent(String name, AgentAgentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentAgent:AgentAgent", name, args == null ? AgentAgentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AgentAgent(String name, Output<String> id, @Nullable AgentAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentAgent:AgentAgent", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AgentAgent get(String name, Output<String> id, @Nullable AgentAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AgentAgent(name, id, state, options);
    }
}
