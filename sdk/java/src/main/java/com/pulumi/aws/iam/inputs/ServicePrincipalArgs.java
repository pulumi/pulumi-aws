// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * IAM roles that can be assumed by an AWS service are called service roles. Service roles must include a trust policy. A service principal is an identifier that is used to grant permissions to a service.
 * 
 */
public final class ServicePrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePrincipalArgs Empty = new ServicePrincipalArgs();

    /**
     * The service principal identifier.
     * 
     */
    @Import(name="Service", required=true)
    private Output<Either<String,List<String>>> Service;

    /**
     * @return The service principal identifier.
     * 
     */
    public Output<Either<String,List<String>>> Service() {
        return this.Service;
    }

    private ServicePrincipalArgs() {}

    private ServicePrincipalArgs(ServicePrincipalArgs $) {
        this.Service = $.Service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicePrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicePrincipalArgs $;

        public Builder() {
            $ = new ServicePrincipalArgs();
        }

        public Builder(ServicePrincipalArgs defaults) {
            $ = new ServicePrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param Service The service principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Service(Output<Either<String,List<String>>> Service) {
            $.Service = Service;
            return this;
        }

        /**
         * @param Service The service principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Service(Either<String,List<String>> Service) {
            return Service(Output.of(Service));
        }

        /**
         * @param Service The service principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Service(String Service) {
            return Service(Either.ofLeft(Service));
        }

        /**
         * @param Service The service principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Service(List<String> Service) {
            return Service(Either.ofRight(Service));
        }

        public ServicePrincipalArgs build() {
            if ($.Service == null) {
                throw new MissingRequiredPropertyException("ServicePrincipalArgs", "Service");
            }
            return $;
        }
    }

}
