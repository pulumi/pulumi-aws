// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs Empty = new ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs();

    @Import(name="checkpointInterval")
    private @Nullable Output<Integer> checkpointInterval;

    public Optional<Output<Integer>> checkpointInterval() {
        return Optional.ofNullable(this.checkpointInterval);
    }

    @Import(name="checkpointingEnabled")
    private @Nullable Output<Boolean> checkpointingEnabled;

    public Optional<Output<Boolean>> checkpointingEnabled() {
        return Optional.ofNullable(this.checkpointingEnabled);
    }

    @Import(name="configurationType", required=true)
    private Output<String> configurationType;

    public Output<String> configurationType() {
        return this.configurationType;
    }

    @Import(name="minPauseBetweenCheckpoints")
    private @Nullable Output<Integer> minPauseBetweenCheckpoints;

    public Optional<Output<Integer>> minPauseBetweenCheckpoints() {
        return Optional.ofNullable(this.minPauseBetweenCheckpoints);
    }

    private ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs() {}

    private ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs $) {
        this.checkpointInterval = $.checkpointInterval;
        this.checkpointingEnabled = $.checkpointingEnabled;
        this.configurationType = $.configurationType;
        this.minPauseBetweenCheckpoints = $.minPauseBetweenCheckpoints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs $;

        public Builder() {
            $ = new ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs();
        }

        public Builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs defaults) {
            $ = new ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder checkpointInterval(@Nullable Output<Integer> checkpointInterval) {
            $.checkpointInterval = checkpointInterval;
            return this;
        }

        public Builder checkpointInterval(Integer checkpointInterval) {
            return checkpointInterval(Output.of(checkpointInterval));
        }

        public Builder checkpointingEnabled(@Nullable Output<Boolean> checkpointingEnabled) {
            $.checkpointingEnabled = checkpointingEnabled;
            return this;
        }

        public Builder checkpointingEnabled(Boolean checkpointingEnabled) {
            return checkpointingEnabled(Output.of(checkpointingEnabled));
        }

        public Builder configurationType(Output<String> configurationType) {
            $.configurationType = configurationType;
            return this;
        }

        public Builder configurationType(String configurationType) {
            return configurationType(Output.of(configurationType));
        }

        public Builder minPauseBetweenCheckpoints(@Nullable Output<Integer> minPauseBetweenCheckpoints) {
            $.minPauseBetweenCheckpoints = minPauseBetweenCheckpoints;
            return this;
        }

        public Builder minPauseBetweenCheckpoints(Integer minPauseBetweenCheckpoints) {
            return minPauseBetweenCheckpoints(Output.of(minPauseBetweenCheckpoints));
        }

        public ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs build() {
            $.configurationType = Objects.requireNonNull($.configurationType, "expected parameter 'configurationType' to be non-null");
            return $;
        }
    }

}
