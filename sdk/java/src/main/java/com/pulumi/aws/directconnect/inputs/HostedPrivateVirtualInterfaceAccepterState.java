// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostedPrivateVirtualInterfaceAccepterState extends com.pulumi.resources.ResourceArgs {

    public static final HostedPrivateVirtualInterfaceAccepterState Empty = new HostedPrivateVirtualInterfaceAccepterState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="dxGatewayId")
    private @Nullable Output<String> dxGatewayId;

    public Optional<Output<String>> dxGatewayId() {
        return Optional.ofNullable(this.dxGatewayId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="virtualInterfaceId")
    private @Nullable Output<String> virtualInterfaceId;

    public Optional<Output<String>> virtualInterfaceId() {
        return Optional.ofNullable(this.virtualInterfaceId);
    }

    @Import(name="vpnGatewayId")
    private @Nullable Output<String> vpnGatewayId;

    public Optional<Output<String>> vpnGatewayId() {
        return Optional.ofNullable(this.vpnGatewayId);
    }

    private HostedPrivateVirtualInterfaceAccepterState() {}

    private HostedPrivateVirtualInterfaceAccepterState(HostedPrivateVirtualInterfaceAccepterState $) {
        this.arn = $.arn;
        this.dxGatewayId = $.dxGatewayId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.virtualInterfaceId = $.virtualInterfaceId;
        this.vpnGatewayId = $.vpnGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostedPrivateVirtualInterfaceAccepterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostedPrivateVirtualInterfaceAccepterState $;

        public Builder() {
            $ = new HostedPrivateVirtualInterfaceAccepterState();
        }

        public Builder(HostedPrivateVirtualInterfaceAccepterState defaults) {
            $ = new HostedPrivateVirtualInterfaceAccepterState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder dxGatewayId(@Nullable Output<String> dxGatewayId) {
            $.dxGatewayId = dxGatewayId;
            return this;
        }

        public Builder dxGatewayId(String dxGatewayId) {
            return dxGatewayId(Output.of(dxGatewayId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder virtualInterfaceId(@Nullable Output<String> virtualInterfaceId) {
            $.virtualInterfaceId = virtualInterfaceId;
            return this;
        }

        public Builder virtualInterfaceId(String virtualInterfaceId) {
            return virtualInterfaceId(Output.of(virtualInterfaceId));
        }

        public Builder vpnGatewayId(@Nullable Output<String> vpnGatewayId) {
            $.vpnGatewayId = vpnGatewayId;
            return this;
        }

        public Builder vpnGatewayId(String vpnGatewayId) {
            return vpnGatewayId(Output.of(vpnGatewayId));
        }

        public HostedPrivateVirtualInterfaceAccepterState build() {
            return $;
        }
    }

}
