// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.aws.lakeformation.inputs.GetPermissionsDataLocation;
import com.pulumi.aws.lakeformation.inputs.GetPermissionsDatabase;
import com.pulumi.aws.lakeformation.inputs.GetPermissionsLfTag;
import com.pulumi.aws.lakeformation.inputs.GetPermissionsLfTagPolicy;
import com.pulumi.aws.lakeformation.inputs.GetPermissionsTable;
import com.pulumi.aws.lakeformation.inputs.GetPermissionsTableWithColumns;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPermissionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionsPlainArgs Empty = new GetPermissionsPlainArgs();

    @Import(name="catalogId")
    private @Nullable String catalogId;

    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="catalogResource")
    private @Nullable Boolean catalogResource;

    public Optional<Boolean> catalogResource() {
        return Optional.ofNullable(this.catalogResource);
    }

    @Import(name="dataLocation")
    private @Nullable GetPermissionsDataLocation dataLocation;

    public Optional<GetPermissionsDataLocation> dataLocation() {
        return Optional.ofNullable(this.dataLocation);
    }

    @Import(name="database")
    private @Nullable GetPermissionsDatabase database;

    public Optional<GetPermissionsDatabase> database() {
        return Optional.ofNullable(this.database);
    }

    @Import(name="lfTag")
    private @Nullable GetPermissionsLfTag lfTag;

    public Optional<GetPermissionsLfTag> lfTag() {
        return Optional.ofNullable(this.lfTag);
    }

    @Import(name="lfTagPolicy")
    private @Nullable GetPermissionsLfTagPolicy lfTagPolicy;

    public Optional<GetPermissionsLfTagPolicy> lfTagPolicy() {
        return Optional.ofNullable(this.lfTagPolicy);
    }

    @Import(name="principal", required=true)
    private String principal;

    public String principal() {
        return this.principal;
    }

    @Import(name="table")
    private @Nullable GetPermissionsTable table;

    public Optional<GetPermissionsTable> table() {
        return Optional.ofNullable(this.table);
    }

    @Import(name="tableWithColumns")
    private @Nullable GetPermissionsTableWithColumns tableWithColumns;

    public Optional<GetPermissionsTableWithColumns> tableWithColumns() {
        return Optional.ofNullable(this.tableWithColumns);
    }

    private GetPermissionsPlainArgs() {}

    private GetPermissionsPlainArgs(GetPermissionsPlainArgs $) {
        this.catalogId = $.catalogId;
        this.catalogResource = $.catalogResource;
        this.dataLocation = $.dataLocation;
        this.database = $.database;
        this.lfTag = $.lfTag;
        this.lfTagPolicy = $.lfTagPolicy;
        this.principal = $.principal;
        this.table = $.table;
        this.tableWithColumns = $.tableWithColumns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionsPlainArgs $;

        public Builder() {
            $ = new GetPermissionsPlainArgs();
        }

        public Builder(GetPermissionsPlainArgs defaults) {
            $ = new GetPermissionsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable String catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogResource(@Nullable Boolean catalogResource) {
            $.catalogResource = catalogResource;
            return this;
        }

        public Builder dataLocation(@Nullable GetPermissionsDataLocation dataLocation) {
            $.dataLocation = dataLocation;
            return this;
        }

        public Builder database(@Nullable GetPermissionsDatabase database) {
            $.database = database;
            return this;
        }

        public Builder lfTag(@Nullable GetPermissionsLfTag lfTag) {
            $.lfTag = lfTag;
            return this;
        }

        public Builder lfTagPolicy(@Nullable GetPermissionsLfTagPolicy lfTagPolicy) {
            $.lfTagPolicy = lfTagPolicy;
            return this;
        }

        public Builder principal(String principal) {
            $.principal = principal;
            return this;
        }

        public Builder table(@Nullable GetPermissionsTable table) {
            $.table = table;
            return this;
        }

        public Builder tableWithColumns(@Nullable GetPermissionsTableWithColumns tableWithColumns) {
            $.tableWithColumns = tableWithColumns;
            return this;
        }

        public GetPermissionsPlainArgs build() {
            $.principal = Objects.requireNonNull($.principal, "expected parameter 'principal' to be non-null");
            return $;
        }
    }

}
