// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TimeRangeFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TimeRangeFilterArgs Empty = new TimeRangeFilterArgs();

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="rangeMaximum", required=true)
    private Output<String> rangeMaximum;

    public Output<String> rangeMaximum() {
        return this.rangeMaximum;
    }

    @Import(name="rangeMinimum", required=true)
    private Output<String> rangeMinimum;

    public Output<String> rangeMinimum() {
        return this.rangeMinimum;
    }

    @Import(name="timeGranularity", required=true)
    private Output<String> timeGranularity;

    public Output<String> timeGranularity() {
        return this.timeGranularity;
    }

    private TimeRangeFilterArgs() {}

    private TimeRangeFilterArgs(TimeRangeFilterArgs $) {
        this.column = $.column;
        this.rangeMaximum = $.rangeMaximum;
        this.rangeMinimum = $.rangeMinimum;
        this.timeGranularity = $.timeGranularity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeRangeFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeRangeFilterArgs $;

        public Builder() {
            $ = new TimeRangeFilterArgs();
        }

        public Builder(TimeRangeFilterArgs defaults) {
            $ = new TimeRangeFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder rangeMaximum(Output<String> rangeMaximum) {
            $.rangeMaximum = rangeMaximum;
            return this;
        }

        public Builder rangeMaximum(String rangeMaximum) {
            return rangeMaximum(Output.of(rangeMaximum));
        }

        public Builder rangeMinimum(Output<String> rangeMinimum) {
            $.rangeMinimum = rangeMinimum;
            return this;
        }

        public Builder rangeMinimum(String rangeMinimum) {
            return rangeMinimum(Output.of(rangeMinimum));
        }

        public Builder timeGranularity(Output<String> timeGranularity) {
            $.timeGranularity = timeGranularity;
            return this;
        }

        public Builder timeGranularity(String timeGranularity) {
            return timeGranularity(Output.of(timeGranularity));
        }

        public TimeRangeFilterArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("TimeRangeFilterArgs", "column");
            }
            if ($.rangeMaximum == null) {
                throw new MissingRequiredPropertyException("TimeRangeFilterArgs", "rangeMaximum");
            }
            if ($.rangeMinimum == null) {
                throw new MissingRequiredPropertyException("TimeRangeFilterArgs", "rangeMinimum");
            }
            if ($.timeGranularity == null) {
                throw new MissingRequiredPropertyException("TimeRangeFilterArgs", "timeGranularity");
            }
            return $;
        }
    }

}
