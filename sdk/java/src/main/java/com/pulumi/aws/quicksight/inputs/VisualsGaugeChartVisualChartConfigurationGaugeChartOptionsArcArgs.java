// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs Empty = new VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs();

    @Import(name="arcAngle")
    private @Nullable Output<Double> arcAngle;

    public Optional<Output<Double>> arcAngle() {
        return Optional.ofNullable(this.arcAngle);
    }

    @Import(name="arcThickness")
    private @Nullable Output<String> arcThickness;

    public Optional<Output<String>> arcThickness() {
        return Optional.ofNullable(this.arcThickness);
    }

    private VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs() {}

    private VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs(VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs $) {
        this.arcAngle = $.arcAngle;
        this.arcThickness = $.arcThickness;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs $;

        public Builder() {
            $ = new VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs();
        }

        public Builder(VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs defaults) {
            $ = new VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs(Objects.requireNonNull(defaults));
        }

        public Builder arcAngle(@Nullable Output<Double> arcAngle) {
            $.arcAngle = arcAngle;
            return this;
        }

        public Builder arcAngle(Double arcAngle) {
            return arcAngle(Output.of(arcAngle));
        }

        public Builder arcThickness(@Nullable Output<String> arcThickness) {
            $.arcThickness = arcThickness;
            return this;
        }

        public Builder arcThickness(String arcThickness) {
            return arcThickness(Output.of(arcThickness));
        }

        public VisualsGaugeChartVisualChartConfigurationGaugeChartOptionsArcArgs build() {
            return $;
        }
    }

}
