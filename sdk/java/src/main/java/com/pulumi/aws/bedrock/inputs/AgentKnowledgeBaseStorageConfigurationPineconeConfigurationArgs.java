// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationPineconeConfigurationFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs Empty = new AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs();

    /**
     * The endpoint URL for your index management page.
     * 
     */
    @Import(name="connectionString", required=true)
    private Output<String> connectionString;

    /**
     * @return The endpoint URL for your index management page.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }

    /**
     * The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    @Import(name="credentialsSecretArn", required=true)
    private Output<String> credentialsSecretArn;

    /**
     * @return The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    public Output<String> credentialsSecretArn() {
        return this.credentialsSecretArn;
    }

    /**
     * Contains the names of the fields to which to map information about the vector store.
     * 
     */
    @Import(name="fieldMapping")
    private @Nullable Output<AgentKnowledgeBaseStorageConfigurationPineconeConfigurationFieldMappingArgs> fieldMapping;

    /**
     * @return Contains the names of the fields to which to map information about the vector store.
     * 
     */
    public Optional<Output<AgentKnowledgeBaseStorageConfigurationPineconeConfigurationFieldMappingArgs>> fieldMapping() {
        return Optional.ofNullable(this.fieldMapping);
    }

    /**
     * The namespace to be used to write new data to your database.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to be used to write new data to your database.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs() {}

    private AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs(AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs $) {
        this.connectionString = $.connectionString;
        this.credentialsSecretArn = $.credentialsSecretArn;
        this.fieldMapping = $.fieldMapping;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs $;

        public Builder() {
            $ = new AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs();
        }

        public Builder(AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs defaults) {
            $ = new AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionString The endpoint URL for your index management page.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString The endpoint URL for your index management page.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param credentialsSecretArn The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(Output<String> credentialsSecretArn) {
            $.credentialsSecretArn = credentialsSecretArn;
            return this;
        }

        /**
         * @param credentialsSecretArn The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            return credentialsSecretArn(Output.of(credentialsSecretArn));
        }

        /**
         * @param fieldMapping Contains the names of the fields to which to map information about the vector store.
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(@Nullable Output<AgentKnowledgeBaseStorageConfigurationPineconeConfigurationFieldMappingArgs> fieldMapping) {
            $.fieldMapping = fieldMapping;
            return this;
        }

        /**
         * @param fieldMapping Contains the names of the fields to which to map information about the vector store.
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(AgentKnowledgeBaseStorageConfigurationPineconeConfigurationFieldMappingArgs fieldMapping) {
            return fieldMapping(Output.of(fieldMapping));
        }

        /**
         * @param namespace The namespace to be used to write new data to your database.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to be used to write new data to your database.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs build() {
            if ($.connectionString == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs", "connectionString");
            }
            if ($.credentialsSecretArn == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationPineconeConfigurationArgs", "credentialsSecretArn");
            }
            return $;
        }
    }

}
