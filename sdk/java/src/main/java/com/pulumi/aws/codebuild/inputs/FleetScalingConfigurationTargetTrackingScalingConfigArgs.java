// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetScalingConfigurationTargetTrackingScalingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetScalingConfigurationTargetTrackingScalingConfigArgs Empty = new FleetScalingConfigurationTargetTrackingScalingConfigArgs();

    /**
     * Metric type to determine auto-scaling. Valid value: `FLEET_UTILIZATION_RATE`.
     * 
     */
    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    /**
     * @return Metric type to determine auto-scaling. Valid value: `FLEET_UTILIZATION_RATE`.
     * 
     */
    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    /**
     * Value of metricType when to start scaling.
     * 
     */
    @Import(name="targetValue")
    private @Nullable Output<Double> targetValue;

    /**
     * @return Value of metricType when to start scaling.
     * 
     */
    public Optional<Output<Double>> targetValue() {
        return Optional.ofNullable(this.targetValue);
    }

    private FleetScalingConfigurationTargetTrackingScalingConfigArgs() {}

    private FleetScalingConfigurationTargetTrackingScalingConfigArgs(FleetScalingConfigurationTargetTrackingScalingConfigArgs $) {
        this.metricType = $.metricType;
        this.targetValue = $.targetValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetScalingConfigurationTargetTrackingScalingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetScalingConfigurationTargetTrackingScalingConfigArgs $;

        public Builder() {
            $ = new FleetScalingConfigurationTargetTrackingScalingConfigArgs();
        }

        public Builder(FleetScalingConfigurationTargetTrackingScalingConfigArgs defaults) {
            $ = new FleetScalingConfigurationTargetTrackingScalingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricType Metric type to determine auto-scaling. Valid value: `FLEET_UTILIZATION_RATE`.
         * 
         * @return builder
         * 
         */
        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType Metric type to determine auto-scaling. Valid value: `FLEET_UTILIZATION_RATE`.
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        /**
         * @param targetValue Value of metricType when to start scaling.
         * 
         * @return builder
         * 
         */
        public Builder targetValue(@Nullable Output<Double> targetValue) {
            $.targetValue = targetValue;
            return this;
        }

        /**
         * @param targetValue Value of metricType when to start scaling.
         * 
         * @return builder
         * 
         */
        public Builder targetValue(Double targetValue) {
            return targetValue(Output.of(targetValue));
        }

        public FleetScalingConfigurationTargetTrackingScalingConfigArgs build() {
            return $;
        }
    }

}
