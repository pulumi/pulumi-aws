// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AxisDisplayOptionsDataOptions;
import com.pulumi.aws.quicksight.outputs.AxisDisplayOptionsScrollbarOptions;
import com.pulumi.aws.quicksight.outputs.AxisDisplayOptionsTickLabelOptions;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AxisDisplayOptions {
    private @Nullable String axisLineVisibility;
    private @Nullable String axisOffset;
    private @Nullable AxisDisplayOptionsDataOptions dataOptions;
    private @Nullable String gridLineVisibility;
    private @Nullable AxisDisplayOptionsScrollbarOptions scrollbarOptions;
    private @Nullable AxisDisplayOptionsTickLabelOptions tickLabelOptions;

    private AxisDisplayOptions() {}
    public Optional<String> axisLineVisibility() {
        return Optional.ofNullable(this.axisLineVisibility);
    }
    public Optional<String> axisOffset() {
        return Optional.ofNullable(this.axisOffset);
    }
    public Optional<AxisDisplayOptionsDataOptions> dataOptions() {
        return Optional.ofNullable(this.dataOptions);
    }
    public Optional<String> gridLineVisibility() {
        return Optional.ofNullable(this.gridLineVisibility);
    }
    public Optional<AxisDisplayOptionsScrollbarOptions> scrollbarOptions() {
        return Optional.ofNullable(this.scrollbarOptions);
    }
    public Optional<AxisDisplayOptionsTickLabelOptions> tickLabelOptions() {
        return Optional.ofNullable(this.tickLabelOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AxisDisplayOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String axisLineVisibility;
        private @Nullable String axisOffset;
        private @Nullable AxisDisplayOptionsDataOptions dataOptions;
        private @Nullable String gridLineVisibility;
        private @Nullable AxisDisplayOptionsScrollbarOptions scrollbarOptions;
        private @Nullable AxisDisplayOptionsTickLabelOptions tickLabelOptions;
        public Builder() {}
        public Builder(AxisDisplayOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.axisLineVisibility = defaults.axisLineVisibility;
    	      this.axisOffset = defaults.axisOffset;
    	      this.dataOptions = defaults.dataOptions;
    	      this.gridLineVisibility = defaults.gridLineVisibility;
    	      this.scrollbarOptions = defaults.scrollbarOptions;
    	      this.tickLabelOptions = defaults.tickLabelOptions;
        }

        @CustomType.Setter
        public Builder axisLineVisibility(@Nullable String axisLineVisibility) {

            this.axisLineVisibility = axisLineVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder axisOffset(@Nullable String axisOffset) {

            this.axisOffset = axisOffset;
            return this;
        }
        @CustomType.Setter
        public Builder dataOptions(@Nullable AxisDisplayOptionsDataOptions dataOptions) {

            this.dataOptions = dataOptions;
            return this;
        }
        @CustomType.Setter
        public Builder gridLineVisibility(@Nullable String gridLineVisibility) {

            this.gridLineVisibility = gridLineVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder scrollbarOptions(@Nullable AxisDisplayOptionsScrollbarOptions scrollbarOptions) {

            this.scrollbarOptions = scrollbarOptions;
            return this;
        }
        @CustomType.Setter
        public Builder tickLabelOptions(@Nullable AxisDisplayOptionsTickLabelOptions tickLabelOptions) {

            this.tickLabelOptions = tickLabelOptions;
            return this;
        }
        public AxisDisplayOptions build() {
            final var _resultValue = new AxisDisplayOptions();
            _resultValue.axisLineVisibility = axisLineVisibility;
            _resultValue.axisOffset = axisOffset;
            _resultValue.dataOptions = dataOptions;
            _resultValue.gridLineVisibility = gridLineVisibility;
            _resultValue.scrollbarOptions = scrollbarOptions;
            _resultValue.tickLabelOptions = tickLabelOptions;
            return _resultValue;
        }
    }
}
