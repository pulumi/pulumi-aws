// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleDestinationVpcConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleDestinationVpcConfigurationArgs Empty = new TopicRuleDestinationVpcConfigurationArgs();

    /**
     * The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The security groups of the VPC destination.
     * 
     */
    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    /**
     * @return The security groups of the VPC destination.
     * 
     */
    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    /**
     * The subnet IDs of the VPC destination.
     * 
     */
    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    /**
     * @return The subnet IDs of the VPC destination.
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    /**
     * The ID of the VPC.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private TopicRuleDestinationVpcConfigurationArgs() {}

    private TopicRuleDestinationVpcConfigurationArgs(TopicRuleDestinationVpcConfigurationArgs $) {
        this.roleArn = $.roleArn;
        this.securityGroups = $.securityGroups;
        this.subnetIds = $.subnetIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleDestinationVpcConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleDestinationVpcConfigurationArgs $;

        public Builder() {
            $ = new TopicRuleDestinationVpcConfigurationArgs();
        }

        public Builder(TopicRuleDestinationVpcConfigurationArgs defaults) {
            $ = new TopicRuleDestinationVpcConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleArn The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param securityGroups The security groups of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        /**
         * @param securityGroups The security groups of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        /**
         * @param securityGroups The security groups of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        /**
         * @param subnetIds The subnet IDs of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds The subnet IDs of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds The subnet IDs of the VPC destination.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public TopicRuleDestinationVpcConfigurationArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
