// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessGrantsLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessGrantsLocationArgs Empty = new AccessGrantsLocationArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
     * requests to the location.
     * 
     */
    @Import(name="iamRoleArn", required=true)
    private Output<String> iamRoleArn;

    /**
     * @return The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
     * requests to the location.
     * 
     */
    public Output<String> iamRoleArn() {
        return this.iamRoleArn;
    }

    /**
     * The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
     * 
     */
    @Import(name="locationScope", required=true)
    private Output<String> locationScope;

    /**
     * @return The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
     * 
     */
    public Output<String> locationScope() {
        return this.locationScope;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AccessGrantsLocationArgs() {}

    private AccessGrantsLocationArgs(AccessGrantsLocationArgs $) {
        this.accountId = $.accountId;
        this.iamRoleArn = $.iamRoleArn;
        this.locationScope = $.locationScope;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessGrantsLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessGrantsLocationArgs $;

        public Builder() {
            $ = new AccessGrantsLocationArgs();
        }

        public Builder(AccessGrantsLocationArgs defaults) {
            $ = new AccessGrantsLocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param iamRoleArn The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
         * requests to the location.
         * 
         * @return builder
         * 
         */
        public Builder iamRoleArn(Output<String> iamRoleArn) {
            $.iamRoleArn = iamRoleArn;
            return this;
        }

        /**
         * @param iamRoleArn The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
         * requests to the location.
         * 
         * @return builder
         * 
         */
        public Builder iamRoleArn(String iamRoleArn) {
            return iamRoleArn(Output.of(iamRoleArn));
        }

        /**
         * @param locationScope The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
         * 
         * @return builder
         * 
         */
        public Builder locationScope(Output<String> locationScope) {
            $.locationScope = locationScope;
            return this;
        }

        /**
         * @param locationScope The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
         * 
         * @return builder
         * 
         */
        public Builder locationScope(String locationScope) {
            return locationScope(Output.of(locationScope));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AccessGrantsLocationArgs build() {
            if ($.iamRoleArn == null) {
                throw new MissingRequiredPropertyException("AccessGrantsLocationArgs", "iamRoleArn");
            }
            if ($.locationScope == null) {
                throw new MissingRequiredPropertyException("AccessGrantsLocationArgs", "locationScope");
            }
            return $;
        }
    }

}
