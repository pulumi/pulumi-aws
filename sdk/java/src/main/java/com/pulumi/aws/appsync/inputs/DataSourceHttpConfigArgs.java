// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.DataSourceHttpConfigAuthorizationConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceHttpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceHttpConfigArgs Empty = new DataSourceHttpConfigArgs();

    /**
     * Authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
     * 
     */
    @Import(name="authorizationConfig")
    private @Nullable Output<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig;

    /**
     * @return Authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
     * 
     */
    public Optional<Output<DataSourceHttpConfigAuthorizationConfigArgs>> authorizationConfig() {
        return Optional.ofNullable(this.authorizationConfig);
    }

    /**
     * HTTP URL.
     * 
     */
    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    /**
     * @return HTTP URL.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }

    private DataSourceHttpConfigArgs() {}

    private DataSourceHttpConfigArgs(DataSourceHttpConfigArgs $) {
        this.authorizationConfig = $.authorizationConfig;
        this.endpoint = $.endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceHttpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceHttpConfigArgs $;

        public Builder() {
            $ = new DataSourceHttpConfigArgs();
        }

        public Builder(DataSourceHttpConfigArgs defaults) {
            $ = new DataSourceHttpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationConfig Authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfig(@Nullable Output<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig) {
            $.authorizationConfig = authorizationConfig;
            return this;
        }

        /**
         * @param authorizationConfig Authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfig(DataSourceHttpConfigAuthorizationConfigArgs authorizationConfig) {
            return authorizationConfig(Output.of(authorizationConfig));
        }

        /**
         * @param endpoint HTTP URL.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint HTTP URL.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public DataSourceHttpConfigArgs build() {
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            return $;
        }
    }

}
