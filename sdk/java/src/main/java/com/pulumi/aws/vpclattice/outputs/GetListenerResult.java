// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.outputs;

import com.pulumi.aws.vpclattice.outputs.GetListenerDefaultAction;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerResult {
    /**
     * @return ARN of the listener.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The date and time that the listener was created.
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return The actions for the default listener rule.
     * 
     */
    private @Nullable List<GetListenerDefaultAction> defaultActions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The date and time the listener was last updated.
     * 
     */
    private @Nullable String lastUpdatedAt;
    /**
     * @return The ID of the listener.
     * 
     */
    private @Nullable String listenerId;
    private String listenerIdentifier;
    /**
     * @return The name of the listener.
     * 
     */
    private @Nullable String name;
    /**
     * @return The listener port.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return The listener protocol. Either `HTTPS` or `HTTP`.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return The ARN of the service.
     * 
     */
    private @Nullable String serviceArn;
    /**
     * @return The ID of the service.
     * 
     */
    private @Nullable String serviceId;
    private String serviceIdentifier;
    /**
     * @return List of tags associated with the listener.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetListenerResult() {}
    /**
     * @return ARN of the listener.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The date and time that the listener was created.
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return The actions for the default listener rule.
     * 
     */
    public List<GetListenerDefaultAction> defaultActions() {
        return this.defaultActions == null ? List.of() : this.defaultActions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The date and time the listener was last updated.
     * 
     */
    public Optional<String> lastUpdatedAt() {
        return Optional.ofNullable(this.lastUpdatedAt);
    }
    /**
     * @return The ID of the listener.
     * 
     */
    public Optional<String> listenerId() {
        return Optional.ofNullable(this.listenerId);
    }
    public String listenerIdentifier() {
        return this.listenerIdentifier;
    }
    /**
     * @return The name of the listener.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The listener port.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The listener protocol. Either `HTTPS` or `HTTP`.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return The ARN of the service.
     * 
     */
    public Optional<String> serviceArn() {
        return Optional.ofNullable(this.serviceArn);
    }
    /**
     * @return The ID of the service.
     * 
     */
    public Optional<String> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }
    public String serviceIdentifier() {
        return this.serviceIdentifier;
    }
    /**
     * @return List of tags associated with the listener.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdAt;
        private @Nullable List<GetListenerDefaultAction> defaultActions;
        private @Nullable String id;
        private @Nullable String lastUpdatedAt;
        private @Nullable String listenerId;
        private String listenerIdentifier;
        private @Nullable String name;
        private @Nullable Integer port;
        private @Nullable String protocol;
        private @Nullable String serviceArn;
        private @Nullable String serviceId;
        private String serviceIdentifier;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetListenerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.defaultActions = defaults.defaultActions;
    	      this.id = defaults.id;
    	      this.lastUpdatedAt = defaults.lastUpdatedAt;
    	      this.listenerId = defaults.listenerId;
    	      this.listenerIdentifier = defaults.listenerIdentifier;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.serviceArn = defaults.serviceArn;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceIdentifier = defaults.serviceIdentifier;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder defaultActions(@Nullable List<GetListenerDefaultAction> defaultActions) {
            this.defaultActions = defaultActions;
            return this;
        }
        public Builder defaultActions(GetListenerDefaultAction... defaultActions) {
            return defaultActions(List.of(defaultActions));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedAt(@Nullable String lastUpdatedAt) {
            this.lastUpdatedAt = lastUpdatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(@Nullable String listenerId) {
            this.listenerId = listenerId;
            return this;
        }
        @CustomType.Setter
        public Builder listenerIdentifier(String listenerIdentifier) {
            this.listenerIdentifier = Objects.requireNonNull(listenerIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder serviceArn(@Nullable String serviceArn) {
            this.serviceArn = serviceArn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(@Nullable String serviceId) {
            this.serviceId = serviceId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceIdentifier(String serviceIdentifier) {
            this.serviceIdentifier = Objects.requireNonNull(serviceIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetListenerResult build() {
            final var o = new GetListenerResult();
            o.arn = arn;
            o.createdAt = createdAt;
            o.defaultActions = defaultActions;
            o.id = id;
            o.lastUpdatedAt = lastUpdatedAt;
            o.listenerId = listenerId;
            o.listenerIdentifier = listenerIdentifier;
            o.name = name;
            o.port = port;
            o.protocol = protocol;
            o.serviceArn = serviceArn;
            o.serviceId = serviceId;
            o.serviceIdentifier = serviceIdentifier;
            o.tags = tags;
            return o;
        }
    }
}
