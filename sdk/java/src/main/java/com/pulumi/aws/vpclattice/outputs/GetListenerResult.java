// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.outputs;

import com.pulumi.aws.vpclattice.outputs.GetListenerDefaultAction;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetListenerResult {
    /**
     * @return ARN of the listener.
     * 
     */
    private String arn;
    /**
     * @return The date and time that the listener was created.
     * 
     */
    private String createdAt;
    /**
     * @return The actions for the default listener rule.
     * 
     */
    private List<GetListenerDefaultAction> defaultActions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The date and time the listener was last updated.
     * 
     */
    private String lastUpdatedAt;
    /**
     * @return The ID of the listener.
     * 
     */
    private String listenerId;
    private String listenerIdentifier;
    /**
     * @return The name of the listener.
     * 
     */
    private String name;
    /**
     * @return The listener port.
     * 
     */
    private Integer port;
    /**
     * @return The listener protocol. Either `HTTPS` or `HTTP`.
     * 
     */
    private String protocol;
    /**
     * @return The ARN of the service.
     * 
     */
    private String serviceArn;
    /**
     * @return The ID of the service.
     * 
     */
    private String serviceId;
    private String serviceIdentifier;
    /**
     * @return List of tags associated with the listener.
     * 
     */
    private Map<String,String> tags;

    private GetListenerResult() {}
    /**
     * @return ARN of the listener.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The date and time that the listener was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The actions for the default listener rule.
     * 
     */
    public List<GetListenerDefaultAction> defaultActions() {
        return this.defaultActions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time the listener was last updated.
     * 
     */
    public String lastUpdatedAt() {
        return this.lastUpdatedAt;
    }
    /**
     * @return The ID of the listener.
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    public String listenerIdentifier() {
        return this.listenerIdentifier;
    }
    /**
     * @return The name of the listener.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The listener port.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The listener protocol. Either `HTTPS` or `HTTP`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The ARN of the service.
     * 
     */
    public String serviceArn() {
        return this.serviceArn;
    }
    /**
     * @return The ID of the service.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }
    public String serviceIdentifier() {
        return this.serviceIdentifier;
    }
    /**
     * @return List of tags associated with the listener.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String createdAt;
        private List<GetListenerDefaultAction> defaultActions;
        private String id;
        private String lastUpdatedAt;
        private String listenerId;
        private String listenerIdentifier;
        private String name;
        private Integer port;
        private String protocol;
        private String serviceArn;
        private String serviceId;
        private String serviceIdentifier;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetListenerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.defaultActions = defaults.defaultActions;
    	      this.id = defaults.id;
    	      this.lastUpdatedAt = defaults.lastUpdatedAt;
    	      this.listenerId = defaults.listenerId;
    	      this.listenerIdentifier = defaults.listenerIdentifier;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.serviceArn = defaults.serviceArn;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceIdentifier = defaults.serviceIdentifier;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder defaultActions(List<GetListenerDefaultAction> defaultActions) {
            this.defaultActions = Objects.requireNonNull(defaultActions);
            return this;
        }
        public Builder defaultActions(GetListenerDefaultAction... defaultActions) {
            return defaultActions(List.of(defaultActions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedAt(String lastUpdatedAt) {
            this.lastUpdatedAt = Objects.requireNonNull(lastUpdatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(String listenerId) {
            this.listenerId = Objects.requireNonNull(listenerId);
            return this;
        }
        @CustomType.Setter
        public Builder listenerIdentifier(String listenerIdentifier) {
            this.listenerIdentifier = Objects.requireNonNull(listenerIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder serviceArn(String serviceArn) {
            this.serviceArn = Objects.requireNonNull(serviceArn);
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceIdentifier(String serviceIdentifier) {
            this.serviceIdentifier = Objects.requireNonNull(serviceIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetListenerResult build() {
            final var _resultValue = new GetListenerResult();
            _resultValue.arn = arn;
            _resultValue.createdAt = createdAt;
            _resultValue.defaultActions = defaultActions;
            _resultValue.id = id;
            _resultValue.lastUpdatedAt = lastUpdatedAt;
            _resultValue.listenerId = listenerId;
            _resultValue.listenerIdentifier = listenerIdentifier;
            _resultValue.name = name;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.serviceArn = serviceArn;
            _resultValue.serviceId = serviceId;
            _resultValue.serviceIdentifier = serviceIdentifier;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
