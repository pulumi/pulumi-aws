// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs Empty = new AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs();

    /**
     * The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    @Import(name="credentialsSecretArn", required=true)
    private Output<String> credentialsSecretArn;

    /**
     * @return The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    public Output<String> credentialsSecretArn() {
        return this.credentialsSecretArn;
    }

    /**
     * The name of your Amazon RDS database.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of your Amazon RDS database.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * Contains the names of the fields to which to map information about the vector store.
     * 
     */
    @Import(name="fieldMapping")
    private @Nullable Output<AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMappingArgs> fieldMapping;

    /**
     * @return Contains the names of the fields to which to map information about the vector store.
     * 
     */
    public Optional<Output<AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMappingArgs>> fieldMapping() {
        return Optional.ofNullable(this.fieldMapping);
    }

    /**
     * The namespace to be used to write new data to your database.
     * 
     */
    @Import(name="resourceArn", required=true)
    private Output<String> resourceArn;

    /**
     * @return The namespace to be used to write new data to your database.
     * 
     */
    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    /**
     * The name of the table in the database.
     * 
     */
    @Import(name="tableName", required=true)
    private Output<String> tableName;

    /**
     * @return The name of the table in the database.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    private AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs() {}

    private AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs(AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs $) {
        this.credentialsSecretArn = $.credentialsSecretArn;
        this.databaseName = $.databaseName;
        this.fieldMapping = $.fieldMapping;
        this.resourceArn = $.resourceArn;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs $;

        public Builder() {
            $ = new AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs();
        }

        public Builder(AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs defaults) {
            $ = new AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialsSecretArn The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(Output<String> credentialsSecretArn) {
            $.credentialsSecretArn = credentialsSecretArn;
            return this;
        }

        /**
         * @param credentialsSecretArn The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            return credentialsSecretArn(Output.of(credentialsSecretArn));
        }

        /**
         * @param databaseName The name of your Amazon RDS database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of your Amazon RDS database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param fieldMapping Contains the names of the fields to which to map information about the vector store.
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(@Nullable Output<AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMappingArgs> fieldMapping) {
            $.fieldMapping = fieldMapping;
            return this;
        }

        /**
         * @param fieldMapping Contains the names of the fields to which to map information about the vector store.
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMappingArgs fieldMapping) {
            return fieldMapping(Output.of(fieldMapping));
        }

        /**
         * @param resourceArn The namespace to be used to write new data to your database.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn The namespace to be used to write new data to your database.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        /**
         * @param tableName The name of the table in the database.
         * 
         * @return builder
         * 
         */
        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the table in the database.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs build() {
            if ($.credentialsSecretArn == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs", "credentialsSecretArn");
            }
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs", "databaseName");
            }
            if ($.resourceArn == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs", "resourceArn");
            }
            if ($.tableName == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfigurationArgs", "tableName");
            }
            return $;
        }
    }

}
