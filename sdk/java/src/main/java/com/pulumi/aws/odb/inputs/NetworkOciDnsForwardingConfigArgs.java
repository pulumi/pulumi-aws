// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NetworkOciDnsForwardingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkOciDnsForwardingConfigArgs Empty = new NetworkOciDnsForwardingConfigArgs();

    @Import(name="domainName", required=true)
    private Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }

    @Import(name="ociDnsListenerIp", required=true)
    private Output<String> ociDnsListenerIp;

    public Output<String> ociDnsListenerIp() {
        return this.ociDnsListenerIp;
    }

    private NetworkOciDnsForwardingConfigArgs() {}

    private NetworkOciDnsForwardingConfigArgs(NetworkOciDnsForwardingConfigArgs $) {
        this.domainName = $.domainName;
        this.ociDnsListenerIp = $.ociDnsListenerIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkOciDnsForwardingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkOciDnsForwardingConfigArgs $;

        public Builder() {
            $ = new NetworkOciDnsForwardingConfigArgs();
        }

        public Builder(NetworkOciDnsForwardingConfigArgs defaults) {
            $ = new NetworkOciDnsForwardingConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder ociDnsListenerIp(Output<String> ociDnsListenerIp) {
            $.ociDnsListenerIp = ociDnsListenerIp;
            return this;
        }

        public Builder ociDnsListenerIp(String ociDnsListenerIp) {
            return ociDnsListenerIp(Output.of(ociDnsListenerIp));
        }

        public NetworkOciDnsForwardingConfigArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("NetworkOciDnsForwardingConfigArgs", "domainName");
            }
            if ($.ociDnsListenerIp == null) {
                throw new MissingRequiredPropertyException("NetworkOciDnsForwardingConfigArgs", "ociDnsListenerIp");
            }
            return $;
        }
    }

}
