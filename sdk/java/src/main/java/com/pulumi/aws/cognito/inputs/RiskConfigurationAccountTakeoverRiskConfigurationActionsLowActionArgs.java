// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs Empty = new RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs();

    /**
     * The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
     * 
     */
    @Import(name="eventAction", required=true)
    private Output<String> eventAction;

    /**
     * @return The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
     * 
     */
    public Output<String> eventAction() {
        return this.eventAction;
    }

    @Import(name="notify", required=true)
    private Output<Boolean> notify;

    public Output<Boolean> notify_() {
        return this.notify;
    }

    private RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs() {}

    private RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs $) {
        this.eventAction = $.eventAction;
        this.notify = $.notify;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs $;

        public Builder() {
            $ = new RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs();
        }

        public Builder(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs defaults) {
            $ = new RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventAction The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
         * 
         * @return builder
         * 
         */
        public Builder eventAction(Output<String> eventAction) {
            $.eventAction = eventAction;
            return this;
        }

        /**
         * @param eventAction The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
         * 
         * @return builder
         * 
         */
        public Builder eventAction(String eventAction) {
            return eventAction(Output.of(eventAction));
        }

        public Builder notify_(Output<Boolean> notify) {
            $.notify = notify;
            return this;
        }

        public Builder notify_(Boolean notify) {
            return notify_(Output.of(notify));
        }

        public RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs build() {
            $.eventAction = Objects.requireNonNull($.eventAction, "expected parameter 'eventAction' to be non-null");
            $.notify = Objects.requireNonNull($.notify, "expected parameter 'notify' to be non-null");
            return $;
        }
    }

}
