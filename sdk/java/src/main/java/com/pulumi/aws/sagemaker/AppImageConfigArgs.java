// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.aws.sagemaker.inputs.AppImageConfigCodeEditorAppImageConfigArgs;
import com.pulumi.aws.sagemaker.inputs.AppImageConfigJupyterLabImageConfigArgs;
import com.pulumi.aws.sagemaker.inputs.AppImageConfigKernelGatewayImageConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppImageConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppImageConfigArgs Empty = new AppImageConfigArgs();

    /**
     * The name of the App Image Config.
     * 
     */
    @Import(name="appImageConfigName", required=true)
    private Output<String> appImageConfigName;

    /**
     * @return The name of the App Image Config.
     * 
     */
    public Output<String> appImageConfigName() {
        return this.appImageConfigName;
    }

    /**
     * The CodeEditorAppImageConfig. See Code Editor App Image Config details below.
     * 
     */
    @Import(name="codeEditorAppImageConfig")
    private @Nullable Output<AppImageConfigCodeEditorAppImageConfigArgs> codeEditorAppImageConfig;

    /**
     * @return The CodeEditorAppImageConfig. See Code Editor App Image Config details below.
     * 
     */
    public Optional<Output<AppImageConfigCodeEditorAppImageConfigArgs>> codeEditorAppImageConfig() {
        return Optional.ofNullable(this.codeEditorAppImageConfig);
    }

    /**
     * The JupyterLabAppImageConfig. See Jupyter Lab Image Config details below.
     * 
     */
    @Import(name="jupyterLabImageConfig")
    private @Nullable Output<AppImageConfigJupyterLabImageConfigArgs> jupyterLabImageConfig;

    /**
     * @return The JupyterLabAppImageConfig. See Jupyter Lab Image Config details below.
     * 
     */
    public Optional<Output<AppImageConfigJupyterLabImageConfigArgs>> jupyterLabImageConfig() {
        return Optional.ofNullable(this.jupyterLabImageConfig);
    }

    /**
     * The configuration for the file system and kernels in a SageMaker AI image running as a KernelGateway app. See Kernel Gateway Image Config details below.
     * 
     */
    @Import(name="kernelGatewayImageConfig")
    private @Nullable Output<AppImageConfigKernelGatewayImageConfigArgs> kernelGatewayImageConfig;

    /**
     * @return The configuration for the file system and kernels in a SageMaker AI image running as a KernelGateway app. See Kernel Gateway Image Config details below.
     * 
     */
    public Optional<Output<AppImageConfigKernelGatewayImageConfigArgs>> kernelGatewayImageConfig() {
        return Optional.ofNullable(this.kernelGatewayImageConfig);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * &gt; **NOTE:** Exactly one of `code_editor_app_image_config`, `jupyter_lab_image_config`, or `kernel_gateway_image_config` must be configured. Empty blocks (e.g., `code_editor_app_image_config {}`) are valid configurations.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * &gt; **NOTE:** Exactly one of `code_editor_app_image_config`, `jupyter_lab_image_config`, or `kernel_gateway_image_config` must be configured. Empty blocks (e.g., `code_editor_app_image_config {}`) are valid configurations.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AppImageConfigArgs() {}

    private AppImageConfigArgs(AppImageConfigArgs $) {
        this.appImageConfigName = $.appImageConfigName;
        this.codeEditorAppImageConfig = $.codeEditorAppImageConfig;
        this.jupyterLabImageConfig = $.jupyterLabImageConfig;
        this.kernelGatewayImageConfig = $.kernelGatewayImageConfig;
        this.region = $.region;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppImageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppImageConfigArgs $;

        public Builder() {
            $ = new AppImageConfigArgs();
        }

        public Builder(AppImageConfigArgs defaults) {
            $ = new AppImageConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appImageConfigName The name of the App Image Config.
         * 
         * @return builder
         * 
         */
        public Builder appImageConfigName(Output<String> appImageConfigName) {
            $.appImageConfigName = appImageConfigName;
            return this;
        }

        /**
         * @param appImageConfigName The name of the App Image Config.
         * 
         * @return builder
         * 
         */
        public Builder appImageConfigName(String appImageConfigName) {
            return appImageConfigName(Output.of(appImageConfigName));
        }

        /**
         * @param codeEditorAppImageConfig The CodeEditorAppImageConfig. See Code Editor App Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder codeEditorAppImageConfig(@Nullable Output<AppImageConfigCodeEditorAppImageConfigArgs> codeEditorAppImageConfig) {
            $.codeEditorAppImageConfig = codeEditorAppImageConfig;
            return this;
        }

        /**
         * @param codeEditorAppImageConfig The CodeEditorAppImageConfig. See Code Editor App Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder codeEditorAppImageConfig(AppImageConfigCodeEditorAppImageConfigArgs codeEditorAppImageConfig) {
            return codeEditorAppImageConfig(Output.of(codeEditorAppImageConfig));
        }

        /**
         * @param jupyterLabImageConfig The JupyterLabAppImageConfig. See Jupyter Lab Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder jupyterLabImageConfig(@Nullable Output<AppImageConfigJupyterLabImageConfigArgs> jupyterLabImageConfig) {
            $.jupyterLabImageConfig = jupyterLabImageConfig;
            return this;
        }

        /**
         * @param jupyterLabImageConfig The JupyterLabAppImageConfig. See Jupyter Lab Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder jupyterLabImageConfig(AppImageConfigJupyterLabImageConfigArgs jupyterLabImageConfig) {
            return jupyterLabImageConfig(Output.of(jupyterLabImageConfig));
        }

        /**
         * @param kernelGatewayImageConfig The configuration for the file system and kernels in a SageMaker AI image running as a KernelGateway app. See Kernel Gateway Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder kernelGatewayImageConfig(@Nullable Output<AppImageConfigKernelGatewayImageConfigArgs> kernelGatewayImageConfig) {
            $.kernelGatewayImageConfig = kernelGatewayImageConfig;
            return this;
        }

        /**
         * @param kernelGatewayImageConfig The configuration for the file system and kernels in a SageMaker AI image running as a KernelGateway app. See Kernel Gateway Image Config details below.
         * 
         * @return builder
         * 
         */
        public Builder kernelGatewayImageConfig(AppImageConfigKernelGatewayImageConfigArgs kernelGatewayImageConfig) {
            return kernelGatewayImageConfig(Output.of(kernelGatewayImageConfig));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * &gt; **NOTE:** Exactly one of `code_editor_app_image_config`, `jupyter_lab_image_config`, or `kernel_gateway_image_config` must be configured. Empty blocks (e.g., `code_editor_app_image_config {}`) are valid configurations.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * &gt; **NOTE:** Exactly one of `code_editor_app_image_config`, `jupyter_lab_image_config`, or `kernel_gateway_image_config` must be configured. Empty blocks (e.g., `code_editor_app_image_config {}`) are valid configurations.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AppImageConfigArgs build() {
            if ($.appImageConfigName == null) {
                throw new MissingRequiredPropertyException("AppImageConfigArgs", "appImageConfigName");
            }
            return $;
        }
    }

}
