// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location;

import com.pulumi.aws.location.inputs.MapConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MapArgs extends com.pulumi.resources.ResourceArgs {

    public static final MapArgs Empty = new MapArgs();

    @Import(name="configuration", required=true)
    private Output<MapConfigurationArgs> configuration;

    public Output<MapConfigurationArgs> configuration() {
        return this.configuration;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="mapName", required=true)
    private Output<String> mapName;

    public Output<String> mapName() {
        return this.mapName;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private MapArgs() {}

    private MapArgs(MapArgs $) {
        this.configuration = $.configuration;
        this.description = $.description;
        this.mapName = $.mapName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MapArgs $;

        public Builder() {
            $ = new MapArgs();
        }

        public Builder(MapArgs defaults) {
            $ = new MapArgs(Objects.requireNonNull(defaults));
        }

        public Builder configuration(Output<MapConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        public Builder configuration(MapConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder mapName(Output<String> mapName) {
            $.mapName = mapName;
            return this;
        }

        public Builder mapName(String mapName) {
            return mapName(Output.of(mapName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public MapArgs build() {
            $.configuration = Objects.requireNonNull($.configuration, "expected parameter 'configuration' to be non-null");
            $.mapName = Objects.requireNonNull($.mapName, "expected parameter 'mapName' to be non-null");
            return $;
        }
    }

}
