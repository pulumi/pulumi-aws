// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.GetOntapFileSystemDiskIopsConfiguration;
import com.pulumi.aws.fsx.outputs.GetOntapFileSystemEndpoint;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOntapFileSystemResult {
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The number of days to retain automatic backups.
     * 
     */
    private @Nullable Integer automaticBackupRetentionDays;
    /**
     * @return The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    private @Nullable String dailyAutomaticBackupStartTime;
    /**
     * @return The file system deployment type.
     * 
     */
    private @Nullable String deploymentType;
    /**
     * @return The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system, specifying the number of provisioned IOPS and the provision mode. See Disk IOPS Below.
     * 
     */
    private @Nullable List<GetOntapFileSystemDiskIopsConfiguration> diskIopsConfigurations;
    /**
     * @return DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system exist.
     * 
     */
    private @Nullable String endpointIpAddressRange;
    /**
     * @return The Management and Intercluster FileSystemEndpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See FileSystemEndpoints below.
     * 
     */
    private @Nullable List<GetOntapFileSystemEndpoint> endpoints;
    /**
     * @return Identifier of the file system (e.g. `fs-12345678`).
     * 
     */
    private String id;
    /**
     * @return ARN for the KMS Key to encrypt the file system at rest.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return The IDs of the elastic network interfaces from which a specific file system is accessible.
     * 
     */
    private @Nullable List<String> networkInterfaceIds;
    /**
     * @return AWS account identifier that created the file system.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return Specifies the subnet in which you want the preferred file server to be located.
     * 
     */
    private @Nullable String preferredSubnetId;
    /**
     * @return (Multi-AZ only) The VPC route tables in which your file system&#39;s endpoints exist.
     * 
     */
    private @Nullable List<String> routeTableIds;
    /**
     * @return The storage capacity of the file system in gibibytes (GiB).
     * 
     */
    private @Nullable Integer storageCapacity;
    /**
     * @return The type of storage the file system is using. If set to `SSD`, the file system uses solid state drive storage. If set to `HDD`, the file system uses hard disk drive storage.
     * 
     */
    private @Nullable String storageType;
    /**
     * @return Specifies the IDs of the subnets that the file system is accessible from. For the MULTI_AZ_1 file system deployment type, there are two subnet IDs, one for the preferred file server and one for the standby file server. The preferred file server subnet identified in the `preferred_subnet_id` property.
     * 
     */
    private @Nullable List<String> subnetIds;
    /**
     * @return The tags associated with the file system.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The sustained throughput of an Amazon FSx file system in Megabytes per second (MBps).
     * 
     */
    private @Nullable Integer throughputCapacity;
    /**
     * @return The ID of the primary virtual private cloud (VPC) for the file system.
     * 
     */
    private @Nullable String vpcId;
    /**
     * @return The preferred start time (in `D:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    private @Nullable String weeklyMaintenanceStartTime;

    private GetOntapFileSystemResult() {}
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The number of days to retain automatic backups.
     * 
     */
    public Optional<Integer> automaticBackupRetentionDays() {
        return Optional.ofNullable(this.automaticBackupRetentionDays);
    }
    /**
     * @return The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    public Optional<String> dailyAutomaticBackupStartTime() {
        return Optional.ofNullable(this.dailyAutomaticBackupStartTime);
    }
    /**
     * @return The file system deployment type.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system, specifying the number of provisioned IOPS and the provision mode. See Disk IOPS Below.
     * 
     */
    public List<GetOntapFileSystemDiskIopsConfiguration> diskIopsConfigurations() {
        return this.diskIopsConfigurations == null ? List.of() : this.diskIopsConfigurations;
    }
    /**
     * @return DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system exist.
     * 
     */
    public Optional<String> endpointIpAddressRange() {
        return Optional.ofNullable(this.endpointIpAddressRange);
    }
    /**
     * @return The Management and Intercluster FileSystemEndpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See FileSystemEndpoints below.
     * 
     */
    public List<GetOntapFileSystemEndpoint> endpoints() {
        return this.endpoints == null ? List.of() : this.endpoints;
    }
    /**
     * @return Identifier of the file system (e.g. `fs-12345678`).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ARN for the KMS Key to encrypt the file system at rest.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return The IDs of the elastic network interfaces from which a specific file system is accessible.
     * 
     */
    public List<String> networkInterfaceIds() {
        return this.networkInterfaceIds == null ? List.of() : this.networkInterfaceIds;
    }
    /**
     * @return AWS account identifier that created the file system.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return Specifies the subnet in which you want the preferred file server to be located.
     * 
     */
    public Optional<String> preferredSubnetId() {
        return Optional.ofNullable(this.preferredSubnetId);
    }
    /**
     * @return (Multi-AZ only) The VPC route tables in which your file system&#39;s endpoints exist.
     * 
     */
    public List<String> routeTableIds() {
        return this.routeTableIds == null ? List.of() : this.routeTableIds;
    }
    /**
     * @return The storage capacity of the file system in gibibytes (GiB).
     * 
     */
    public Optional<Integer> storageCapacity() {
        return Optional.ofNullable(this.storageCapacity);
    }
    /**
     * @return The type of storage the file system is using. If set to `SSD`, the file system uses solid state drive storage. If set to `HDD`, the file system uses hard disk drive storage.
     * 
     */
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }
    /**
     * @return Specifies the IDs of the subnets that the file system is accessible from. For the MULTI_AZ_1 file system deployment type, there are two subnet IDs, one for the preferred file server and one for the standby file server. The preferred file server subnet identified in the `preferred_subnet_id` property.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds == null ? List.of() : this.subnetIds;
    }
    /**
     * @return The tags associated with the file system.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The sustained throughput of an Amazon FSx file system in Megabytes per second (MBps).
     * 
     */
    public Optional<Integer> throughputCapacity() {
        return Optional.ofNullable(this.throughputCapacity);
    }
    /**
     * @return The ID of the primary virtual private cloud (VPC) for the file system.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return The preferred start time (in `D:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    public Optional<String> weeklyMaintenanceStartTime() {
        return Optional.ofNullable(this.weeklyMaintenanceStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOntapFileSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Integer automaticBackupRetentionDays;
        private @Nullable String dailyAutomaticBackupStartTime;
        private @Nullable String deploymentType;
        private @Nullable List<GetOntapFileSystemDiskIopsConfiguration> diskIopsConfigurations;
        private @Nullable String dnsName;
        private @Nullable String endpointIpAddressRange;
        private @Nullable List<GetOntapFileSystemEndpoint> endpoints;
        private String id;
        private @Nullable String kmsKeyId;
        private @Nullable List<String> networkInterfaceIds;
        private @Nullable String ownerId;
        private @Nullable String preferredSubnetId;
        private @Nullable List<String> routeTableIds;
        private @Nullable Integer storageCapacity;
        private @Nullable String storageType;
        private @Nullable List<String> subnetIds;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer throughputCapacity;
        private @Nullable String vpcId;
        private @Nullable String weeklyMaintenanceStartTime;
        public Builder() {}
        public Builder(GetOntapFileSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.automaticBackupRetentionDays = defaults.automaticBackupRetentionDays;
    	      this.dailyAutomaticBackupStartTime = defaults.dailyAutomaticBackupStartTime;
    	      this.deploymentType = defaults.deploymentType;
    	      this.diskIopsConfigurations = defaults.diskIopsConfigurations;
    	      this.dnsName = defaults.dnsName;
    	      this.endpointIpAddressRange = defaults.endpointIpAddressRange;
    	      this.endpoints = defaults.endpoints;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.networkInterfaceIds = defaults.networkInterfaceIds;
    	      this.ownerId = defaults.ownerId;
    	      this.preferredSubnetId = defaults.preferredSubnetId;
    	      this.routeTableIds = defaults.routeTableIds;
    	      this.storageCapacity = defaults.storageCapacity;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.throughputCapacity = defaults.throughputCapacity;
    	      this.vpcId = defaults.vpcId;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder automaticBackupRetentionDays(@Nullable Integer automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder dailyAutomaticBackupStartTime(@Nullable String dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder diskIopsConfigurations(@Nullable List<GetOntapFileSystemDiskIopsConfiguration> diskIopsConfigurations) {
            this.diskIopsConfigurations = diskIopsConfigurations;
            return this;
        }
        public Builder diskIopsConfigurations(GetOntapFileSystemDiskIopsConfiguration... diskIopsConfigurations) {
            return diskIopsConfigurations(List.of(diskIopsConfigurations));
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder endpointIpAddressRange(@Nullable String endpointIpAddressRange) {
            this.endpointIpAddressRange = endpointIpAddressRange;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(@Nullable List<GetOntapFileSystemEndpoint> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetOntapFileSystemEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceIds(@Nullable List<String> networkInterfaceIds) {
            this.networkInterfaceIds = networkInterfaceIds;
            return this;
        }
        public Builder networkInterfaceIds(String... networkInterfaceIds) {
            return networkInterfaceIds(List.of(networkInterfaceIds));
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder preferredSubnetId(@Nullable String preferredSubnetId) {
            this.preferredSubnetId = preferredSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableIds(@Nullable List<String> routeTableIds) {
            this.routeTableIds = routeTableIds;
            return this;
        }
        public Builder routeTableIds(String... routeTableIds) {
            return routeTableIds(List.of(routeTableIds));
        }
        @CustomType.Setter
        public Builder storageCapacity(@Nullable Integer storageCapacity) {
            this.storageCapacity = storageCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {
            this.storageType = storageType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder throughputCapacity(@Nullable Integer throughputCapacity) {
            this.throughputCapacity = throughputCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder weeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }
        public GetOntapFileSystemResult build() {
            final var o = new GetOntapFileSystemResult();
            o.arn = arn;
            o.automaticBackupRetentionDays = automaticBackupRetentionDays;
            o.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            o.deploymentType = deploymentType;
            o.diskIopsConfigurations = diskIopsConfigurations;
            o.dnsName = dnsName;
            o.endpointIpAddressRange = endpointIpAddressRange;
            o.endpoints = endpoints;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.networkInterfaceIds = networkInterfaceIds;
            o.ownerId = ownerId;
            o.preferredSubnetId = preferredSubnetId;
            o.routeTableIds = routeTableIds;
            o.storageCapacity = storageCapacity;
            o.storageType = storageType;
            o.subnetIds = subnetIds;
            o.tags = tags;
            o.throughputCapacity = throughputCapacity;
            o.vpcId = vpcId;
            o.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return o;
        }
    }
}
