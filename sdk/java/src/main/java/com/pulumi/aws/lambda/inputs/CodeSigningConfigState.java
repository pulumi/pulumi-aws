// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.aws.lambda.inputs.CodeSigningConfigAllowedPublishersArgs;
import com.pulumi.aws.lambda.inputs.CodeSigningConfigPoliciesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CodeSigningConfigState extends com.pulumi.resources.ResourceArgs {

    public static final CodeSigningConfigState Empty = new CodeSigningConfigState();

    /**
     * A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
     * 
     */
    @Import(name="allowedPublishers")
    private @Nullable Output<CodeSigningConfigAllowedPublishersArgs> allowedPublishers;

    /**
     * @return A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
     * 
     */
    public Optional<Output<CodeSigningConfigAllowedPublishersArgs>> allowedPublishers() {
        return Optional.ofNullable(this.allowedPublishers);
    }

    /**
     * The Amazon Resource Name (ARN) of the code signing configuration.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the code signing configuration.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Unique identifier for the code signing configuration.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<String> configId;

    /**
     * @return Unique identifier for the code signing configuration.
     * 
     */
    public Optional<Output<String>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Descriptive name for this code signing configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Descriptive name for this code signing configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The date and time that the code signing configuration was last modified.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return The date and time that the code signing configuration was last modified.
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
     * 
     */
    @Import(name="policies")
    private @Nullable Output<CodeSigningConfigPoliciesArgs> policies;

    /**
     * @return A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
     * 
     */
    public Optional<Output<CodeSigningConfigPoliciesArgs>> policies() {
        return Optional.ofNullable(this.policies);
    }

    /**
     * Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private CodeSigningConfigState() {}

    private CodeSigningConfigState(CodeSigningConfigState $) {
        this.allowedPublishers = $.allowedPublishers;
        this.arn = $.arn;
        this.configId = $.configId;
        this.description = $.description;
        this.lastModified = $.lastModified;
        this.policies = $.policies;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeSigningConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeSigningConfigState $;

        public Builder() {
            $ = new CodeSigningConfigState();
        }

        public Builder(CodeSigningConfigState defaults) {
            $ = new CodeSigningConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedPublishers A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder allowedPublishers(@Nullable Output<CodeSigningConfigAllowedPublishersArgs> allowedPublishers) {
            $.allowedPublishers = allowedPublishers;
            return this;
        }

        /**
         * @param allowedPublishers A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder allowedPublishers(CodeSigningConfigAllowedPublishersArgs allowedPublishers) {
            return allowedPublishers(Output.of(allowedPublishers));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param configId Unique identifier for the code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier for the code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param description Descriptive name for this code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Descriptive name for this code signing configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param lastModified The date and time that the code signing configuration was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified The date and time that the code signing configuration was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param policies A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder policies(@Nullable Output<CodeSigningConfigPoliciesArgs> policies) {
            $.policies = policies;
            return this;
        }

        /**
         * @param policies A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder policies(CodeSigningConfigPoliciesArgs policies) {
            return policies(Output.of(policies));
        }

        /**
         * @param tags Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public CodeSigningConfigState build() {
            return $;
        }
    }

}
