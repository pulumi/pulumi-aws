// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPullThroughCacheRuleResult {
    /**
     * @return ARN of the Secret which will be used to authenticate against the registry.
     * 
     */
    private String credentialArn;
    private String ecrRepositoryPrefix;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The registry ID where the repository was created.
     * 
     */
    private String registryId;
    /**
     * @return The registry URL of the upstream public registry to use as the source.
     * 
     */
    private String upstreamRegistryUrl;

    private GetPullThroughCacheRuleResult() {}
    /**
     * @return ARN of the Secret which will be used to authenticate against the registry.
     * 
     */
    public String credentialArn() {
        return this.credentialArn;
    }
    public String ecrRepositoryPrefix() {
        return this.ecrRepositoryPrefix;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The registry ID where the repository was created.
     * 
     */
    public String registryId() {
        return this.registryId;
    }
    /**
     * @return The registry URL of the upstream public registry to use as the source.
     * 
     */
    public String upstreamRegistryUrl() {
        return this.upstreamRegistryUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPullThroughCacheRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credentialArn;
        private String ecrRepositoryPrefix;
        private String id;
        private String registryId;
        private String upstreamRegistryUrl;
        public Builder() {}
        public Builder(GetPullThroughCacheRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialArn = defaults.credentialArn;
    	      this.ecrRepositoryPrefix = defaults.ecrRepositoryPrefix;
    	      this.id = defaults.id;
    	      this.registryId = defaults.registryId;
    	      this.upstreamRegistryUrl = defaults.upstreamRegistryUrl;
        }

        @CustomType.Setter
        public Builder credentialArn(String credentialArn) {
            if (credentialArn == null) {
              throw new MissingRequiredPropertyException("GetPullThroughCacheRuleResult", "credentialArn");
            }
            this.credentialArn = credentialArn;
            return this;
        }
        @CustomType.Setter
        public Builder ecrRepositoryPrefix(String ecrRepositoryPrefix) {
            if (ecrRepositoryPrefix == null) {
              throw new MissingRequiredPropertyException("GetPullThroughCacheRuleResult", "ecrRepositoryPrefix");
            }
            this.ecrRepositoryPrefix = ecrRepositoryPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPullThroughCacheRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder registryId(String registryId) {
            if (registryId == null) {
              throw new MissingRequiredPropertyException("GetPullThroughCacheRuleResult", "registryId");
            }
            this.registryId = registryId;
            return this;
        }
        @CustomType.Setter
        public Builder upstreamRegistryUrl(String upstreamRegistryUrl) {
            if (upstreamRegistryUrl == null) {
              throw new MissingRequiredPropertyException("GetPullThroughCacheRuleResult", "upstreamRegistryUrl");
            }
            this.upstreamRegistryUrl = upstreamRegistryUrl;
            return this;
        }
        public GetPullThroughCacheRuleResult build() {
            final var _resultValue = new GetPullThroughCacheRuleResult();
            _resultValue.credentialArn = credentialArn;
            _resultValue.ecrRepositoryPrefix = ecrRepositoryPrefix;
            _resultValue.id = id;
            _resultValue.registryId = registryId;
            _resultValue.upstreamRegistryUrl = upstreamRegistryUrl;
            return _resultValue;
        }
    }
}
