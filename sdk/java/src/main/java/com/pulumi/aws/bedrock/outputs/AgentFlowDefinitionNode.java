// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionNodeConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionNodeInput;
import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionNodeOutput;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentFlowDefinitionNode {
    /**
     * @return Contains configurations for the node. See Node Configuration for more information.
     * 
     */
    private @Nullable AgentFlowDefinitionNodeConfiguration configuration;
    /**
     * @return A list of objects containing information about an input into the node. See Node Input for more information.
     * 
     */
    private @Nullable List<AgentFlowDefinitionNodeInput> inputs;
    /**
     * @return A name for the node.
     * 
     */
    private String name;
    /**
     * @return A list of objects containing information about an output from the node. See Node Output for more information.
     * 
     */
    private @Nullable List<AgentFlowDefinitionNodeOutput> outputs;
    /**
     * @return The type of node. This value must match the name of the key that you provide in the configuration. Valid values: `Agent`, `Collector`, `Condition`, `Input`, `Iterator`, `KnowledgeBase`, `LambdaFunction`, `Lex`, `Output`, `Prompt`, `Retrieval`, `Storage`
     * 
     */
    private String type;

    private AgentFlowDefinitionNode() {}
    /**
     * @return Contains configurations for the node. See Node Configuration for more information.
     * 
     */
    public Optional<AgentFlowDefinitionNodeConfiguration> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * @return A list of objects containing information about an input into the node. See Node Input for more information.
     * 
     */
    public List<AgentFlowDefinitionNodeInput> inputs() {
        return this.inputs == null ? List.of() : this.inputs;
    }
    /**
     * @return A name for the node.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of objects containing information about an output from the node. See Node Output for more information.
     * 
     */
    public List<AgentFlowDefinitionNodeOutput> outputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    /**
     * @return The type of node. This value must match the name of the key that you provide in the configuration. Valid values: `Agent`, `Collector`, `Condition`, `Input`, `Iterator`, `KnowledgeBase`, `LambdaFunction`, `Lex`, `Output`, `Prompt`, `Retrieval`, `Storage`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentFlowDefinitionNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AgentFlowDefinitionNodeConfiguration configuration;
        private @Nullable List<AgentFlowDefinitionNodeInput> inputs;
        private String name;
        private @Nullable List<AgentFlowDefinitionNodeOutput> outputs;
        private String type;
        public Builder() {}
        public Builder(AgentFlowDefinitionNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.inputs = defaults.inputs;
    	      this.name = defaults.name;
    	      this.outputs = defaults.outputs;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configuration(@Nullable AgentFlowDefinitionNodeConfiguration configuration) {

            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(@Nullable List<AgentFlowDefinitionNodeInput> inputs) {

            this.inputs = inputs;
            return this;
        }
        public Builder inputs(AgentFlowDefinitionNodeInput... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionNode", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder outputs(@Nullable List<AgentFlowDefinitionNodeOutput> outputs) {

            this.outputs = outputs;
            return this;
        }
        public Builder outputs(AgentFlowDefinitionNodeOutput... outputs) {
            return outputs(List.of(outputs));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionNode", "type");
            }
            this.type = type;
            return this;
        }
        public AgentFlowDefinitionNode build() {
            final var _resultValue = new AgentFlowDefinitionNode();
            _resultValue.configuration = configuration;
            _resultValue.inputs = inputs;
            _resultValue.name = name;
            _resultValue.outputs = outputs;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
