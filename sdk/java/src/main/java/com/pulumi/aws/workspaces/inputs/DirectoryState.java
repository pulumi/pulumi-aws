// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.aws.workspaces.inputs.DirectorySelfServicePermissionsArgs;
import com.pulumi.aws.workspaces.inputs.DirectoryWorkspaceAccessPropertiesArgs;
import com.pulumi.aws.workspaces.inputs.DirectoryWorkspaceCreationPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryState extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryState Empty = new DirectoryState();

    @Import(name="alias")
    private @Nullable Output<String> alias;

    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    @Import(name="customerUserName")
    private @Nullable Output<String> customerUserName;

    public Optional<Output<String>> customerUserName() {
        return Optional.ofNullable(this.customerUserName);
    }

    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    @Import(name="directoryName")
    private @Nullable Output<String> directoryName;

    public Optional<Output<String>> directoryName() {
        return Optional.ofNullable(this.directoryName);
    }

    @Import(name="directoryType")
    private @Nullable Output<String> directoryType;

    public Optional<Output<String>> directoryType() {
        return Optional.ofNullable(this.directoryType);
    }

    @Import(name="dnsIpAddresses")
    private @Nullable Output<List<String>> dnsIpAddresses;

    public Optional<Output<List<String>>> dnsIpAddresses() {
        return Optional.ofNullable(this.dnsIpAddresses);
    }

    @Import(name="iamRoleId")
    private @Nullable Output<String> iamRoleId;

    public Optional<Output<String>> iamRoleId() {
        return Optional.ofNullable(this.iamRoleId);
    }

    @Import(name="ipGroupIds")
    private @Nullable Output<List<String>> ipGroupIds;

    public Optional<Output<List<String>>> ipGroupIds() {
        return Optional.ofNullable(this.ipGroupIds);
    }

    @Import(name="registrationCode")
    private @Nullable Output<String> registrationCode;

    public Optional<Output<String>> registrationCode() {
        return Optional.ofNullable(this.registrationCode);
    }

    @Import(name="selfServicePermissions")
    private @Nullable Output<DirectorySelfServicePermissionsArgs> selfServicePermissions;

    public Optional<Output<DirectorySelfServicePermissionsArgs>> selfServicePermissions() {
        return Optional.ofNullable(this.selfServicePermissions);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="workspaceAccessProperties")
    private @Nullable Output<DirectoryWorkspaceAccessPropertiesArgs> workspaceAccessProperties;

    public Optional<Output<DirectoryWorkspaceAccessPropertiesArgs>> workspaceAccessProperties() {
        return Optional.ofNullable(this.workspaceAccessProperties);
    }

    @Import(name="workspaceCreationProperties")
    private @Nullable Output<DirectoryWorkspaceCreationPropertiesArgs> workspaceCreationProperties;

    public Optional<Output<DirectoryWorkspaceCreationPropertiesArgs>> workspaceCreationProperties() {
        return Optional.ofNullable(this.workspaceCreationProperties);
    }

    @Import(name="workspaceSecurityGroupId")
    private @Nullable Output<String> workspaceSecurityGroupId;

    public Optional<Output<String>> workspaceSecurityGroupId() {
        return Optional.ofNullable(this.workspaceSecurityGroupId);
    }

    private DirectoryState() {}

    private DirectoryState(DirectoryState $) {
        this.alias = $.alias;
        this.customerUserName = $.customerUserName;
        this.directoryId = $.directoryId;
        this.directoryName = $.directoryName;
        this.directoryType = $.directoryType;
        this.dnsIpAddresses = $.dnsIpAddresses;
        this.iamRoleId = $.iamRoleId;
        this.ipGroupIds = $.ipGroupIds;
        this.registrationCode = $.registrationCode;
        this.selfServicePermissions = $.selfServicePermissions;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.workspaceAccessProperties = $.workspaceAccessProperties;
        this.workspaceCreationProperties = $.workspaceCreationProperties;
        this.workspaceSecurityGroupId = $.workspaceSecurityGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryState $;

        public Builder() {
            $ = new DirectoryState();
        }

        public Builder(DirectoryState defaults) {
            $ = new DirectoryState(Objects.requireNonNull(defaults));
        }

        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        public Builder customerUserName(@Nullable Output<String> customerUserName) {
            $.customerUserName = customerUserName;
            return this;
        }

        public Builder customerUserName(String customerUserName) {
            return customerUserName(Output.of(customerUserName));
        }

        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder directoryName(@Nullable Output<String> directoryName) {
            $.directoryName = directoryName;
            return this;
        }

        public Builder directoryName(String directoryName) {
            return directoryName(Output.of(directoryName));
        }

        public Builder directoryType(@Nullable Output<String> directoryType) {
            $.directoryType = directoryType;
            return this;
        }

        public Builder directoryType(String directoryType) {
            return directoryType(Output.of(directoryType));
        }

        public Builder dnsIpAddresses(@Nullable Output<List<String>> dnsIpAddresses) {
            $.dnsIpAddresses = dnsIpAddresses;
            return this;
        }

        public Builder dnsIpAddresses(List<String> dnsIpAddresses) {
            return dnsIpAddresses(Output.of(dnsIpAddresses));
        }

        public Builder dnsIpAddresses(String... dnsIpAddresses) {
            return dnsIpAddresses(List.of(dnsIpAddresses));
        }

        public Builder iamRoleId(@Nullable Output<String> iamRoleId) {
            $.iamRoleId = iamRoleId;
            return this;
        }

        public Builder iamRoleId(String iamRoleId) {
            return iamRoleId(Output.of(iamRoleId));
        }

        public Builder ipGroupIds(@Nullable Output<List<String>> ipGroupIds) {
            $.ipGroupIds = ipGroupIds;
            return this;
        }

        public Builder ipGroupIds(List<String> ipGroupIds) {
            return ipGroupIds(Output.of(ipGroupIds));
        }

        public Builder ipGroupIds(String... ipGroupIds) {
            return ipGroupIds(List.of(ipGroupIds));
        }

        public Builder registrationCode(@Nullable Output<String> registrationCode) {
            $.registrationCode = registrationCode;
            return this;
        }

        public Builder registrationCode(String registrationCode) {
            return registrationCode(Output.of(registrationCode));
        }

        public Builder selfServicePermissions(@Nullable Output<DirectorySelfServicePermissionsArgs> selfServicePermissions) {
            $.selfServicePermissions = selfServicePermissions;
            return this;
        }

        public Builder selfServicePermissions(DirectorySelfServicePermissionsArgs selfServicePermissions) {
            return selfServicePermissions(Output.of(selfServicePermissions));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder workspaceAccessProperties(@Nullable Output<DirectoryWorkspaceAccessPropertiesArgs> workspaceAccessProperties) {
            $.workspaceAccessProperties = workspaceAccessProperties;
            return this;
        }

        public Builder workspaceAccessProperties(DirectoryWorkspaceAccessPropertiesArgs workspaceAccessProperties) {
            return workspaceAccessProperties(Output.of(workspaceAccessProperties));
        }

        public Builder workspaceCreationProperties(@Nullable Output<DirectoryWorkspaceCreationPropertiesArgs> workspaceCreationProperties) {
            $.workspaceCreationProperties = workspaceCreationProperties;
            return this;
        }

        public Builder workspaceCreationProperties(DirectoryWorkspaceCreationPropertiesArgs workspaceCreationProperties) {
            return workspaceCreationProperties(Output.of(workspaceCreationProperties));
        }

        public Builder workspaceSecurityGroupId(@Nullable Output<String> workspaceSecurityGroupId) {
            $.workspaceSecurityGroupId = workspaceSecurityGroupId;
            return this;
        }

        public Builder workspaceSecurityGroupId(String workspaceSecurityGroupId) {
            return workspaceSecurityGroupId(Output.of(workspaceSecurityGroupId));
        }

        public DirectoryState build() {
            return $;
        }
    }

}
