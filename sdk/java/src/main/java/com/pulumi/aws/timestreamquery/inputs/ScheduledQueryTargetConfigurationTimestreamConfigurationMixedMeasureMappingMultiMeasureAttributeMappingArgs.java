// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs Empty = new ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs();

    /**
     * Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
     * 
     */
    @Import(name="measureValueType", required=true)
    private Output<String> measureValueType;

    /**
     * @return Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
     * 
     */
    public Output<String> measureValueType() {
        return this.measureValueType;
    }

    /**
     * Source column from where the attribute value is to be read.
     * 
     */
    @Import(name="sourceColumn", required=true)
    private Output<String> sourceColumn;

    /**
     * @return Source column from where the attribute value is to be read.
     * 
     */
    public Output<String> sourceColumn() {
        return this.sourceColumn;
    }

    /**
     * Custom name to be used for attribute name in derived table. If not provided, `source_column` is used.
     * 
     */
    @Import(name="targetMultiMeasureAttributeName")
    private @Nullable Output<String> targetMultiMeasureAttributeName;

    /**
     * @return Custom name to be used for attribute name in derived table. If not provided, `source_column` is used.
     * 
     */
    public Optional<Output<String>> targetMultiMeasureAttributeName() {
        return Optional.ofNullable(this.targetMultiMeasureAttributeName);
    }

    private ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs() {}

    private ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs $) {
        this.measureValueType = $.measureValueType;
        this.sourceColumn = $.sourceColumn;
        this.targetMultiMeasureAttributeName = $.targetMultiMeasureAttributeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs $;

        public Builder() {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs();
        }

        public Builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs defaults) {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param measureValueType Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
         * 
         * @return builder
         * 
         */
        public Builder measureValueType(Output<String> measureValueType) {
            $.measureValueType = measureValueType;
            return this;
        }

        /**
         * @param measureValueType Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
         * 
         * @return builder
         * 
         */
        public Builder measureValueType(String measureValueType) {
            return measureValueType(Output.of(measureValueType));
        }

        /**
         * @param sourceColumn Source column from where the attribute value is to be read.
         * 
         * @return builder
         * 
         */
        public Builder sourceColumn(Output<String> sourceColumn) {
            $.sourceColumn = sourceColumn;
            return this;
        }

        /**
         * @param sourceColumn Source column from where the attribute value is to be read.
         * 
         * @return builder
         * 
         */
        public Builder sourceColumn(String sourceColumn) {
            return sourceColumn(Output.of(sourceColumn));
        }

        /**
         * @param targetMultiMeasureAttributeName Custom name to be used for attribute name in derived table. If not provided, `source_column` is used.
         * 
         * @return builder
         * 
         */
        public Builder targetMultiMeasureAttributeName(@Nullable Output<String> targetMultiMeasureAttributeName) {
            $.targetMultiMeasureAttributeName = targetMultiMeasureAttributeName;
            return this;
        }

        /**
         * @param targetMultiMeasureAttributeName Custom name to be used for attribute name in derived table. If not provided, `source_column` is used.
         * 
         * @return builder
         * 
         */
        public Builder targetMultiMeasureAttributeName(String targetMultiMeasureAttributeName) {
            return targetMultiMeasureAttributeName(Output.of(targetMultiMeasureAttributeName));
        }

        public ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs build() {
            if ($.measureValueType == null) {
                throw new MissingRequiredPropertyException("ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs", "measureValueType");
            }
            if ($.sourceColumn == null) {
                throw new MissingRequiredPropertyException("ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs", "sourceColumn");
            }
            return $;
        }
    }

}
