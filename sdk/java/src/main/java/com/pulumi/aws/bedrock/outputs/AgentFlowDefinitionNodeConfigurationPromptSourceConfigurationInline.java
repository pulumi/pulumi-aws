// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline {
    /**
     * @return Additional fields to be included in the model request for the Prompt node.
     * 
     */
    private @Nullable String additionalModelRequestFields;
    /**
     * @return Contains inference configurations for the prompt. See Prompt Inference Configuration for more information.
     * 
     */
    private @Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfiguration inferenceConfiguration;
    private String modelId;
    /**
     * @return Contains a prompt and variables in the prompt that can be replaced with values at runtime. See Prompt Template Configuration for more information.
     * 
     */
    private @Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfiguration templateConfiguration;
    /**
     * @return The type of prompt template. Valid values: `TEXT`, `CHAT`.
     * 
     */
    private String templateType;

    private AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline() {}
    /**
     * @return Additional fields to be included in the model request for the Prompt node.
     * 
     */
    public Optional<String> additionalModelRequestFields() {
        return Optional.ofNullable(this.additionalModelRequestFields);
    }
    /**
     * @return Contains inference configurations for the prompt. See Prompt Inference Configuration for more information.
     * 
     */
    public Optional<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfiguration> inferenceConfiguration() {
        return Optional.ofNullable(this.inferenceConfiguration);
    }
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return Contains a prompt and variables in the prompt that can be replaced with values at runtime. See Prompt Template Configuration for more information.
     * 
     */
    public Optional<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfiguration> templateConfiguration() {
        return Optional.ofNullable(this.templateConfiguration);
    }
    /**
     * @return The type of prompt template. Valid values: `TEXT`, `CHAT`.
     * 
     */
    public String templateType() {
        return this.templateType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String additionalModelRequestFields;
        private @Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfiguration inferenceConfiguration;
        private String modelId;
        private @Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfiguration templateConfiguration;
        private String templateType;
        public Builder() {}
        public Builder(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalModelRequestFields = defaults.additionalModelRequestFields;
    	      this.inferenceConfiguration = defaults.inferenceConfiguration;
    	      this.modelId = defaults.modelId;
    	      this.templateConfiguration = defaults.templateConfiguration;
    	      this.templateType = defaults.templateType;
        }

        @CustomType.Setter
        public Builder additionalModelRequestFields(@Nullable String additionalModelRequestFields) {

            this.additionalModelRequestFields = additionalModelRequestFields;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceConfiguration(@Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfiguration inferenceConfiguration) {

            this.inferenceConfiguration = inferenceConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            if (modelId == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline", "modelId");
            }
            this.modelId = modelId;
            return this;
        }
        @CustomType.Setter
        public Builder templateConfiguration(@Nullable AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfiguration templateConfiguration) {

            this.templateConfiguration = templateConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        public AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline build() {
            final var _resultValue = new AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInline();
            _resultValue.additionalModelRequestFields = additionalModelRequestFields;
            _resultValue.inferenceConfiguration = inferenceConfiguration;
            _resultValue.modelId = modelId;
            _resultValue.templateConfiguration = templateConfiguration;
            _resultValue.templateType = templateType;
            return _resultValue;
        }
    }
}
