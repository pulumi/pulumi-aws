// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointConnectionNotificationState extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointConnectionNotificationState Empty = new VpcEndpointConnectionNotificationState();

    @Import(name="connectionEvents")
    private @Nullable Output<List<String>> connectionEvents;

    public Optional<Output<List<String>>> connectionEvents() {
        return Optional.ofNullable(this.connectionEvents);
    }

    @Import(name="connectionNotificationArn")
    private @Nullable Output<String> connectionNotificationArn;

    public Optional<Output<String>> connectionNotificationArn() {
        return Optional.ofNullable(this.connectionNotificationArn);
    }

    @Import(name="notificationType")
    private @Nullable Output<String> notificationType;

    public Optional<Output<String>> notificationType() {
        return Optional.ofNullable(this.notificationType);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="vpcEndpointId")
    private @Nullable Output<String> vpcEndpointId;

    public Optional<Output<String>> vpcEndpointId() {
        return Optional.ofNullable(this.vpcEndpointId);
    }

    @Import(name="vpcEndpointServiceId")
    private @Nullable Output<String> vpcEndpointServiceId;

    public Optional<Output<String>> vpcEndpointServiceId() {
        return Optional.ofNullable(this.vpcEndpointServiceId);
    }

    private VpcEndpointConnectionNotificationState() {}

    private VpcEndpointConnectionNotificationState(VpcEndpointConnectionNotificationState $) {
        this.connectionEvents = $.connectionEvents;
        this.connectionNotificationArn = $.connectionNotificationArn;
        this.notificationType = $.notificationType;
        this.state = $.state;
        this.vpcEndpointId = $.vpcEndpointId;
        this.vpcEndpointServiceId = $.vpcEndpointServiceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointConnectionNotificationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointConnectionNotificationState $;

        public Builder() {
            $ = new VpcEndpointConnectionNotificationState();
        }

        public Builder(VpcEndpointConnectionNotificationState defaults) {
            $ = new VpcEndpointConnectionNotificationState(Objects.requireNonNull(defaults));
        }

        public Builder connectionEvents(@Nullable Output<List<String>> connectionEvents) {
            $.connectionEvents = connectionEvents;
            return this;
        }

        public Builder connectionEvents(List<String> connectionEvents) {
            return connectionEvents(Output.of(connectionEvents));
        }

        public Builder connectionEvents(String... connectionEvents) {
            return connectionEvents(List.of(connectionEvents));
        }

        public Builder connectionNotificationArn(@Nullable Output<String> connectionNotificationArn) {
            $.connectionNotificationArn = connectionNotificationArn;
            return this;
        }

        public Builder connectionNotificationArn(String connectionNotificationArn) {
            return connectionNotificationArn(Output.of(connectionNotificationArn));
        }

        public Builder notificationType(@Nullable Output<String> notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        public Builder notificationType(String notificationType) {
            return notificationType(Output.of(notificationType));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder vpcEndpointId(@Nullable Output<String> vpcEndpointId) {
            $.vpcEndpointId = vpcEndpointId;
            return this;
        }

        public Builder vpcEndpointId(String vpcEndpointId) {
            return vpcEndpointId(Output.of(vpcEndpointId));
        }

        public Builder vpcEndpointServiceId(@Nullable Output<String> vpcEndpointServiceId) {
            $.vpcEndpointServiceId = vpcEndpointServiceId;
            return this;
        }

        public Builder vpcEndpointServiceId(String vpcEndpointServiceId) {
            return vpcEndpointServiceId(Output.of(vpcEndpointServiceId));
        }

        public VpcEndpointConnectionNotificationState build() {
            return $;
        }
    }

}
