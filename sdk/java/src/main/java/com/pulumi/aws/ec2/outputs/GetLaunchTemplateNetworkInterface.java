// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLaunchTemplateNetworkInterface {
    private @Nullable String associateCarrierIpAddress;
    private @Nullable Boolean associatePublicIpAddress;
    private @Nullable Boolean deleteOnTermination;
    private @Nullable String description;
    private @Nullable Integer deviceIndex;
    private @Nullable String interfaceType;
    private @Nullable Integer ipv4AddressCount;
    private @Nullable List<String> ipv4Addresses;
    private @Nullable Integer ipv4PrefixCount;
    private @Nullable List<String> ipv4Prefixes;
    private @Nullable Integer ipv6AddressCount;
    private @Nullable List<String> ipv6Addresses;
    private @Nullable Integer ipv6PrefixCount;
    private @Nullable List<String> ipv6Prefixes;
    private @Nullable Integer networkCardIndex;
    private @Nullable String networkInterfaceId;
    private @Nullable String privateIpAddress;
    private @Nullable List<String> securityGroups;
    private @Nullable String subnetId;

    private GetLaunchTemplateNetworkInterface() {}
    public Optional<String> associateCarrierIpAddress() {
        return Optional.ofNullable(this.associateCarrierIpAddress);
    }
    public Optional<Boolean> associatePublicIpAddress() {
        return Optional.ofNullable(this.associatePublicIpAddress);
    }
    public Optional<Boolean> deleteOnTermination() {
        return Optional.ofNullable(this.deleteOnTermination);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Integer> deviceIndex() {
        return Optional.ofNullable(this.deviceIndex);
    }
    public Optional<String> interfaceType() {
        return Optional.ofNullable(this.interfaceType);
    }
    public Optional<Integer> ipv4AddressCount() {
        return Optional.ofNullable(this.ipv4AddressCount);
    }
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses == null ? List.of() : this.ipv4Addresses;
    }
    public Optional<Integer> ipv4PrefixCount() {
        return Optional.ofNullable(this.ipv4PrefixCount);
    }
    public List<String> ipv4Prefixes() {
        return this.ipv4Prefixes == null ? List.of() : this.ipv4Prefixes;
    }
    public Optional<Integer> ipv6AddressCount() {
        return Optional.ofNullable(this.ipv6AddressCount);
    }
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses == null ? List.of() : this.ipv6Addresses;
    }
    public Optional<Integer> ipv6PrefixCount() {
        return Optional.ofNullable(this.ipv6PrefixCount);
    }
    public List<String> ipv6Prefixes() {
        return this.ipv6Prefixes == null ? List.of() : this.ipv6Prefixes;
    }
    public Optional<Integer> networkCardIndex() {
        return Optional.ofNullable(this.networkCardIndex);
    }
    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }
    public Optional<String> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLaunchTemplateNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String associateCarrierIpAddress;
        private @Nullable Boolean associatePublicIpAddress;
        private @Nullable Boolean deleteOnTermination;
        private @Nullable String description;
        private @Nullable Integer deviceIndex;
        private @Nullable String interfaceType;
        private @Nullable Integer ipv4AddressCount;
        private @Nullable List<String> ipv4Addresses;
        private @Nullable Integer ipv4PrefixCount;
        private @Nullable List<String> ipv4Prefixes;
        private @Nullable Integer ipv6AddressCount;
        private @Nullable List<String> ipv6Addresses;
        private @Nullable Integer ipv6PrefixCount;
        private @Nullable List<String> ipv6Prefixes;
        private @Nullable Integer networkCardIndex;
        private @Nullable String networkInterfaceId;
        private @Nullable String privateIpAddress;
        private @Nullable List<String> securityGroups;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(GetLaunchTemplateNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associateCarrierIpAddress = defaults.associateCarrierIpAddress;
    	      this.associatePublicIpAddress = defaults.associatePublicIpAddress;
    	      this.deleteOnTermination = defaults.deleteOnTermination;
    	      this.description = defaults.description;
    	      this.deviceIndex = defaults.deviceIndex;
    	      this.interfaceType = defaults.interfaceType;
    	      this.ipv4AddressCount = defaults.ipv4AddressCount;
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.ipv4PrefixCount = defaults.ipv4PrefixCount;
    	      this.ipv4Prefixes = defaults.ipv4Prefixes;
    	      this.ipv6AddressCount = defaults.ipv6AddressCount;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.ipv6PrefixCount = defaults.ipv6PrefixCount;
    	      this.ipv6Prefixes = defaults.ipv6Prefixes;
    	      this.networkCardIndex = defaults.networkCardIndex;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder associateCarrierIpAddress(@Nullable String associateCarrierIpAddress) {
            this.associateCarrierIpAddress = associateCarrierIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder associatePublicIpAddress(@Nullable Boolean associatePublicIpAddress) {
            this.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder deleteOnTermination(@Nullable Boolean deleteOnTermination) {
            this.deleteOnTermination = deleteOnTermination;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceIndex(@Nullable Integer deviceIndex) {
            this.deviceIndex = deviceIndex;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceType(@Nullable String interfaceType) {
            this.interfaceType = interfaceType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AddressCount(@Nullable Integer ipv4AddressCount) {
            this.ipv4AddressCount = ipv4AddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Addresses(@Nullable List<String> ipv4Addresses) {
            this.ipv4Addresses = ipv4Addresses;
            return this;
        }
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }
        @CustomType.Setter
        public Builder ipv4PrefixCount(@Nullable Integer ipv4PrefixCount) {
            this.ipv4PrefixCount = ipv4PrefixCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Prefixes(@Nullable List<String> ipv4Prefixes) {
            this.ipv4Prefixes = ipv4Prefixes;
            return this;
        }
        public Builder ipv4Prefixes(String... ipv4Prefixes) {
            return ipv4Prefixes(List.of(ipv4Prefixes));
        }
        @CustomType.Setter
        public Builder ipv6AddressCount(@Nullable Integer ipv6AddressCount) {
            this.ipv6AddressCount = ipv6AddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Addresses(@Nullable List<String> ipv6Addresses) {
            this.ipv6Addresses = ipv6Addresses;
            return this;
        }
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        @CustomType.Setter
        public Builder ipv6PrefixCount(@Nullable Integer ipv6PrefixCount) {
            this.ipv6PrefixCount = ipv6PrefixCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Prefixes(@Nullable List<String> ipv6Prefixes) {
            this.ipv6Prefixes = ipv6Prefixes;
            return this;
        }
        public Builder ipv6Prefixes(String... ipv6Prefixes) {
            return ipv6Prefixes(List.of(ipv6Prefixes));
        }
        @CustomType.Setter
        public Builder networkCardIndex(@Nullable Integer networkCardIndex) {
            this.networkCardIndex = networkCardIndex;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public GetLaunchTemplateNetworkInterface build() {
            final var o = new GetLaunchTemplateNetworkInterface();
            o.associateCarrierIpAddress = associateCarrierIpAddress;
            o.associatePublicIpAddress = associatePublicIpAddress;
            o.deleteOnTermination = deleteOnTermination;
            o.description = description;
            o.deviceIndex = deviceIndex;
            o.interfaceType = interfaceType;
            o.ipv4AddressCount = ipv4AddressCount;
            o.ipv4Addresses = ipv4Addresses;
            o.ipv4PrefixCount = ipv4PrefixCount;
            o.ipv4Prefixes = ipv4Prefixes;
            o.ipv6AddressCount = ipv6AddressCount;
            o.ipv6Addresses = ipv6Addresses;
            o.ipv6PrefixCount = ipv6PrefixCount;
            o.ipv6Prefixes = ipv6Prefixes;
            o.networkCardIndex = networkCardIndex;
            o.networkInterfaceId = networkInterfaceId;
            o.privateIpAddress = privateIpAddress;
            o.securityGroups = securityGroups;
            o.subnetId = subnetId;
            return o;
        }
    }
}
