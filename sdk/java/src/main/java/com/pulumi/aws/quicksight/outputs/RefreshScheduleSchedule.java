// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.RefreshScheduleScheduleScheduleFrequency;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RefreshScheduleSchedule {
    /**
     * @return The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     */
    private String refreshType;
    /**
     * @return The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     * 
     */
    private @Nullable RefreshScheduleScheduleScheduleFrequency scheduleFrequency;
    /**
     * @return Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     * 
     */
    private @Nullable String startAfterDateTime;

    private RefreshScheduleSchedule() {}
    /**
     * @return The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     */
    public String refreshType() {
        return this.refreshType;
    }
    /**
     * @return The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     * 
     */
    public Optional<RefreshScheduleScheduleScheduleFrequency> scheduleFrequency() {
        return Optional.ofNullable(this.scheduleFrequency);
    }
    /**
     * @return Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     * 
     */
    public Optional<String> startAfterDateTime() {
        return Optional.ofNullable(this.startAfterDateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RefreshScheduleSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String refreshType;
        private @Nullable RefreshScheduleScheduleScheduleFrequency scheduleFrequency;
        private @Nullable String startAfterDateTime;
        public Builder() {}
        public Builder(RefreshScheduleSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.refreshType = defaults.refreshType;
    	      this.scheduleFrequency = defaults.scheduleFrequency;
    	      this.startAfterDateTime = defaults.startAfterDateTime;
        }

        @CustomType.Setter
        public Builder refreshType(String refreshType) {
            if (refreshType == null) {
              throw new MissingRequiredPropertyException("RefreshScheduleSchedule", "refreshType");
            }
            this.refreshType = refreshType;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleFrequency(@Nullable RefreshScheduleScheduleScheduleFrequency scheduleFrequency) {

            this.scheduleFrequency = scheduleFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder startAfterDateTime(@Nullable String startAfterDateTime) {

            this.startAfterDateTime = startAfterDateTime;
            return this;
        }
        public RefreshScheduleSchedule build() {
            final var _resultValue = new RefreshScheduleSchedule();
            _resultValue.refreshType = refreshType;
            _resultValue.scheduleFrequency = scheduleFrequency;
            _resultValue.startAfterDateTime = startAfterDateTime;
            return _resultValue;
        }
    }
}
