// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.ImageImageTestsConfigurationArgs;
import com.pulumi.aws.imagebuilder.inputs.ImageOutputResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageState extends com.pulumi.resources.ResourceArgs {

    public static final ImageState Empty = new ImageState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="containerRecipeArn")
    private @Nullable Output<String> containerRecipeArn;

    public Optional<Output<String>> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }

    @Import(name="dateCreated")
    private @Nullable Output<String> dateCreated;

    public Optional<Output<String>> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }

    @Import(name="distributionConfigurationArn")
    private @Nullable Output<String> distributionConfigurationArn;

    public Optional<Output<String>> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }

    @Import(name="enhancedImageMetadataEnabled")
    private @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    public Optional<Output<Boolean>> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }

    @Import(name="imageRecipeArn")
    private @Nullable Output<String> imageRecipeArn;

    public Optional<Output<String>> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }

    @Import(name="imageTestsConfiguration")
    private @Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration;

    public Optional<Output<ImageImageTestsConfigurationArgs>> imageTestsConfiguration() {
        return Optional.ofNullable(this.imageTestsConfiguration);
    }

    @Import(name="infrastructureConfigurationArn")
    private @Nullable Output<String> infrastructureConfigurationArn;

    public Optional<Output<String>> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="osVersion")
    private @Nullable Output<String> osVersion;

    public Optional<Output<String>> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }

    @Import(name="outputResources")
    private @Nullable Output<List<ImageOutputResourceArgs>> outputResources;

    public Optional<Output<List<ImageOutputResourceArgs>>> outputResources() {
        return Optional.ofNullable(this.outputResources);
    }

    @Import(name="platform")
    private @Nullable Output<String> platform;

    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ImageState() {}

    private ImageState(ImageState $) {
        this.arn = $.arn;
        this.containerRecipeArn = $.containerRecipeArn;
        this.dateCreated = $.dateCreated;
        this.distributionConfigurationArn = $.distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = $.enhancedImageMetadataEnabled;
        this.imageRecipeArn = $.imageRecipeArn;
        this.imageTestsConfiguration = $.imageTestsConfiguration;
        this.infrastructureConfigurationArn = $.infrastructureConfigurationArn;
        this.name = $.name;
        this.osVersion = $.osVersion;
        this.outputResources = $.outputResources;
        this.platform = $.platform;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageState $;

        public Builder() {
            $ = new ImageState();
        }

        public Builder(ImageState defaults) {
            $ = new ImageState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder containerRecipeArn(@Nullable Output<String> containerRecipeArn) {
            $.containerRecipeArn = containerRecipeArn;
            return this;
        }

        public Builder containerRecipeArn(String containerRecipeArn) {
            return containerRecipeArn(Output.of(containerRecipeArn));
        }

        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            $.dateCreated = dateCreated;
            return this;
        }

        public Builder dateCreated(String dateCreated) {
            return dateCreated(Output.of(dateCreated));
        }

        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            $.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }

        public Builder distributionConfigurationArn(String distributionConfigurationArn) {
            return distributionConfigurationArn(Output.of(distributionConfigurationArn));
        }

        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            $.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }

        public Builder enhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
            return enhancedImageMetadataEnabled(Output.of(enhancedImageMetadataEnabled));
        }

        public Builder imageRecipeArn(@Nullable Output<String> imageRecipeArn) {
            $.imageRecipeArn = imageRecipeArn;
            return this;
        }

        public Builder imageRecipeArn(String imageRecipeArn) {
            return imageRecipeArn(Output.of(imageRecipeArn));
        }

        public Builder imageTestsConfiguration(@Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration) {
            $.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }

        public Builder imageTestsConfiguration(ImageImageTestsConfigurationArgs imageTestsConfiguration) {
            return imageTestsConfiguration(Output.of(imageTestsConfiguration));
        }

        public Builder infrastructureConfigurationArn(@Nullable Output<String> infrastructureConfigurationArn) {
            $.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }

        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            return infrastructureConfigurationArn(Output.of(infrastructureConfigurationArn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder osVersion(@Nullable Output<String> osVersion) {
            $.osVersion = osVersion;
            return this;
        }

        public Builder osVersion(String osVersion) {
            return osVersion(Output.of(osVersion));
        }

        public Builder outputResources(@Nullable Output<List<ImageOutputResourceArgs>> outputResources) {
            $.outputResources = outputResources;
            return this;
        }

        public Builder outputResources(List<ImageOutputResourceArgs> outputResources) {
            return outputResources(Output.of(outputResources));
        }

        public Builder outputResources(ImageOutputResourceArgs... outputResources) {
            return outputResources(List.of(outputResources));
        }

        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ImageState build() {
            return $;
        }
    }

}
