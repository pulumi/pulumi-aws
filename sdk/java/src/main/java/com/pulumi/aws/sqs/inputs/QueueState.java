// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sqs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueState extends com.pulumi.resources.ResourceArgs {

    public static final QueueState Empty = new QueueState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="contentBasedDeduplication")
    private @Nullable Output<Boolean> contentBasedDeduplication;

    public Optional<Output<Boolean>> contentBasedDeduplication() {
        return Optional.ofNullable(this.contentBasedDeduplication);
    }

    @Import(name="deduplicationScope")
    private @Nullable Output<String> deduplicationScope;

    public Optional<Output<String>> deduplicationScope() {
        return Optional.ofNullable(this.deduplicationScope);
    }

    @Import(name="delaySeconds")
    private @Nullable Output<Integer> delaySeconds;

    public Optional<Output<Integer>> delaySeconds() {
        return Optional.ofNullable(this.delaySeconds);
    }

    @Import(name="fifoQueue")
    private @Nullable Output<Boolean> fifoQueue;

    public Optional<Output<Boolean>> fifoQueue() {
        return Optional.ofNullable(this.fifoQueue);
    }

    @Import(name="fifoThroughputLimit")
    private @Nullable Output<String> fifoThroughputLimit;

    public Optional<Output<String>> fifoThroughputLimit() {
        return Optional.ofNullable(this.fifoThroughputLimit);
    }

    @Import(name="kmsDataKeyReusePeriodSeconds")
    private @Nullable Output<Integer> kmsDataKeyReusePeriodSeconds;

    public Optional<Output<Integer>> kmsDataKeyReusePeriodSeconds() {
        return Optional.ofNullable(this.kmsDataKeyReusePeriodSeconds);
    }

    @Import(name="kmsMasterKeyId")
    private @Nullable Output<String> kmsMasterKeyId;

    public Optional<Output<String>> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }

    @Import(name="maxMessageSize")
    private @Nullable Output<Integer> maxMessageSize;

    public Optional<Output<Integer>> maxMessageSize() {
        return Optional.ofNullable(this.maxMessageSize);
    }

    @Import(name="messageRetentionSeconds")
    private @Nullable Output<Integer> messageRetentionSeconds;

    public Optional<Output<Integer>> messageRetentionSeconds() {
        return Optional.ofNullable(this.messageRetentionSeconds);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="policy")
    private @Nullable Output<String> policy;

    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    @Import(name="receiveWaitTimeSeconds")
    private @Nullable Output<Integer> receiveWaitTimeSeconds;

    public Optional<Output<Integer>> receiveWaitTimeSeconds() {
        return Optional.ofNullable(this.receiveWaitTimeSeconds);
    }

    @Import(name="redriveAllowPolicy")
    private @Nullable Output<String> redriveAllowPolicy;

    public Optional<Output<String>> redriveAllowPolicy() {
        return Optional.ofNullable(this.redriveAllowPolicy);
    }

    @Import(name="redrivePolicy")
    private @Nullable Output<String> redrivePolicy;

    public Optional<Output<String>> redrivePolicy() {
        return Optional.ofNullable(this.redrivePolicy);
    }

    @Import(name="sqsManagedSseEnabled")
    private @Nullable Output<Boolean> sqsManagedSseEnabled;

    public Optional<Output<Boolean>> sqsManagedSseEnabled() {
        return Optional.ofNullable(this.sqsManagedSseEnabled);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="visibilityTimeoutSeconds")
    private @Nullable Output<Integer> visibilityTimeoutSeconds;

    public Optional<Output<Integer>> visibilityTimeoutSeconds() {
        return Optional.ofNullable(this.visibilityTimeoutSeconds);
    }

    private QueueState() {}

    private QueueState(QueueState $) {
        this.arn = $.arn;
        this.contentBasedDeduplication = $.contentBasedDeduplication;
        this.deduplicationScope = $.deduplicationScope;
        this.delaySeconds = $.delaySeconds;
        this.fifoQueue = $.fifoQueue;
        this.fifoThroughputLimit = $.fifoThroughputLimit;
        this.kmsDataKeyReusePeriodSeconds = $.kmsDataKeyReusePeriodSeconds;
        this.kmsMasterKeyId = $.kmsMasterKeyId;
        this.maxMessageSize = $.maxMessageSize;
        this.messageRetentionSeconds = $.messageRetentionSeconds;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.policy = $.policy;
        this.receiveWaitTimeSeconds = $.receiveWaitTimeSeconds;
        this.redriveAllowPolicy = $.redriveAllowPolicy;
        this.redrivePolicy = $.redrivePolicy;
        this.sqsManagedSseEnabled = $.sqsManagedSseEnabled;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.url = $.url;
        this.visibilityTimeoutSeconds = $.visibilityTimeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueState $;

        public Builder() {
            $ = new QueueState();
        }

        public Builder(QueueState defaults) {
            $ = new QueueState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder contentBasedDeduplication(@Nullable Output<Boolean> contentBasedDeduplication) {
            $.contentBasedDeduplication = contentBasedDeduplication;
            return this;
        }

        public Builder contentBasedDeduplication(Boolean contentBasedDeduplication) {
            return contentBasedDeduplication(Output.of(contentBasedDeduplication));
        }

        public Builder deduplicationScope(@Nullable Output<String> deduplicationScope) {
            $.deduplicationScope = deduplicationScope;
            return this;
        }

        public Builder deduplicationScope(String deduplicationScope) {
            return deduplicationScope(Output.of(deduplicationScope));
        }

        public Builder delaySeconds(@Nullable Output<Integer> delaySeconds) {
            $.delaySeconds = delaySeconds;
            return this;
        }

        public Builder delaySeconds(Integer delaySeconds) {
            return delaySeconds(Output.of(delaySeconds));
        }

        public Builder fifoQueue(@Nullable Output<Boolean> fifoQueue) {
            $.fifoQueue = fifoQueue;
            return this;
        }

        public Builder fifoQueue(Boolean fifoQueue) {
            return fifoQueue(Output.of(fifoQueue));
        }

        public Builder fifoThroughputLimit(@Nullable Output<String> fifoThroughputLimit) {
            $.fifoThroughputLimit = fifoThroughputLimit;
            return this;
        }

        public Builder fifoThroughputLimit(String fifoThroughputLimit) {
            return fifoThroughputLimit(Output.of(fifoThroughputLimit));
        }

        public Builder kmsDataKeyReusePeriodSeconds(@Nullable Output<Integer> kmsDataKeyReusePeriodSeconds) {
            $.kmsDataKeyReusePeriodSeconds = kmsDataKeyReusePeriodSeconds;
            return this;
        }

        public Builder kmsDataKeyReusePeriodSeconds(Integer kmsDataKeyReusePeriodSeconds) {
            return kmsDataKeyReusePeriodSeconds(Output.of(kmsDataKeyReusePeriodSeconds));
        }

        public Builder kmsMasterKeyId(@Nullable Output<String> kmsMasterKeyId) {
            $.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }

        public Builder kmsMasterKeyId(String kmsMasterKeyId) {
            return kmsMasterKeyId(Output.of(kmsMasterKeyId));
        }

        public Builder maxMessageSize(@Nullable Output<Integer> maxMessageSize) {
            $.maxMessageSize = maxMessageSize;
            return this;
        }

        public Builder maxMessageSize(Integer maxMessageSize) {
            return maxMessageSize(Output.of(maxMessageSize));
        }

        public Builder messageRetentionSeconds(@Nullable Output<Integer> messageRetentionSeconds) {
            $.messageRetentionSeconds = messageRetentionSeconds;
            return this;
        }

        public Builder messageRetentionSeconds(Integer messageRetentionSeconds) {
            return messageRetentionSeconds(Output.of(messageRetentionSeconds));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public Builder receiveWaitTimeSeconds(@Nullable Output<Integer> receiveWaitTimeSeconds) {
            $.receiveWaitTimeSeconds = receiveWaitTimeSeconds;
            return this;
        }

        public Builder receiveWaitTimeSeconds(Integer receiveWaitTimeSeconds) {
            return receiveWaitTimeSeconds(Output.of(receiveWaitTimeSeconds));
        }

        public Builder redriveAllowPolicy(@Nullable Output<String> redriveAllowPolicy) {
            $.redriveAllowPolicy = redriveAllowPolicy;
            return this;
        }

        public Builder redriveAllowPolicy(String redriveAllowPolicy) {
            return redriveAllowPolicy(Output.of(redriveAllowPolicy));
        }

        public Builder redrivePolicy(@Nullable Output<String> redrivePolicy) {
            $.redrivePolicy = redrivePolicy;
            return this;
        }

        public Builder redrivePolicy(String redrivePolicy) {
            return redrivePolicy(Output.of(redrivePolicy));
        }

        public Builder sqsManagedSseEnabled(@Nullable Output<Boolean> sqsManagedSseEnabled) {
            $.sqsManagedSseEnabled = sqsManagedSseEnabled;
            return this;
        }

        public Builder sqsManagedSseEnabled(Boolean sqsManagedSseEnabled) {
            return sqsManagedSseEnabled(Output.of(sqsManagedSseEnabled));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder visibilityTimeoutSeconds(@Nullable Output<Integer> visibilityTimeoutSeconds) {
            $.visibilityTimeoutSeconds = visibilityTimeoutSeconds;
            return this;
        }

        public Builder visibilityTimeoutSeconds(Integer visibilityTimeoutSeconds) {
            return visibilityTimeoutSeconds(Output.of(visibilityTimeoutSeconds));
        }

        public QueueState build() {
            return $;
        }
    }

}
