// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTableItemResult {
    private @Nullable Map<String,String> expressionAttributeNames;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return JSON representation of a map of attribute names to [AttributeValue](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_AttributeValue.html) objects, as specified by ProjectionExpression.
     * 
     */
    private String item;
    private String key;
    private @Nullable String projectionExpression;
    private String tableName;

    private GetTableItemResult() {}
    public Map<String,String> expressionAttributeNames() {
        return this.expressionAttributeNames == null ? Map.of() : this.expressionAttributeNames;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return JSON representation of a map of attribute names to [AttributeValue](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_AttributeValue.html) objects, as specified by ProjectionExpression.
     * 
     */
    public String item() {
        return this.item;
    }
    public String key() {
        return this.key;
    }
    public Optional<String> projectionExpression() {
        return Optional.ofNullable(this.projectionExpression);
    }
    public String tableName() {
        return this.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableItemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> expressionAttributeNames;
        private String id;
        private String item;
        private String key;
        private @Nullable String projectionExpression;
        private String tableName;
        public Builder() {}
        public Builder(GetTableItemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expressionAttributeNames = defaults.expressionAttributeNames;
    	      this.id = defaults.id;
    	      this.item = defaults.item;
    	      this.key = defaults.key;
    	      this.projectionExpression = defaults.projectionExpression;
    	      this.tableName = defaults.tableName;
        }

        @CustomType.Setter
        public Builder expressionAttributeNames(@Nullable Map<String,String> expressionAttributeNames) {
            this.expressionAttributeNames = expressionAttributeNames;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder item(String item) {
            this.item = Objects.requireNonNull(item);
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder projectionExpression(@Nullable String projectionExpression) {
            this.projectionExpression = projectionExpression;
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        public GetTableItemResult build() {
            final var o = new GetTableItemResult();
            o.expressionAttributeNames = expressionAttributeNames;
            o.id = id;
            o.item = item;
            o.key = key;
            o.projectionExpression = projectionExpression;
            o.tableName = tableName;
            return o;
        }
    }
}
