// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PresetThumbnails {
    private @Nullable String aspectRatio;
    private @Nullable String format;
    private @Nullable String interval;
    private @Nullable String maxHeight;
    private @Nullable String maxWidth;
    private @Nullable String paddingPolicy;
    private @Nullable String resolution;
    private @Nullable String sizingPolicy;

    private PresetThumbnails() {}
    public Optional<String> aspectRatio() {
        return Optional.ofNullable(this.aspectRatio);
    }
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }
    public Optional<String> interval() {
        return Optional.ofNullable(this.interval);
    }
    public Optional<String> maxHeight() {
        return Optional.ofNullable(this.maxHeight);
    }
    public Optional<String> maxWidth() {
        return Optional.ofNullable(this.maxWidth);
    }
    public Optional<String> paddingPolicy() {
        return Optional.ofNullable(this.paddingPolicy);
    }
    public Optional<String> resolution() {
        return Optional.ofNullable(this.resolution);
    }
    public Optional<String> sizingPolicy() {
        return Optional.ofNullable(this.sizingPolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PresetThumbnails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aspectRatio;
        private @Nullable String format;
        private @Nullable String interval;
        private @Nullable String maxHeight;
        private @Nullable String maxWidth;
        private @Nullable String paddingPolicy;
        private @Nullable String resolution;
        private @Nullable String sizingPolicy;
        public Builder() {}
        public Builder(PresetThumbnails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aspectRatio = defaults.aspectRatio;
    	      this.format = defaults.format;
    	      this.interval = defaults.interval;
    	      this.maxHeight = defaults.maxHeight;
    	      this.maxWidth = defaults.maxWidth;
    	      this.paddingPolicy = defaults.paddingPolicy;
    	      this.resolution = defaults.resolution;
    	      this.sizingPolicy = defaults.sizingPolicy;
        }

        @CustomType.Setter
        public Builder aspectRatio(@Nullable String aspectRatio) {
            this.aspectRatio = aspectRatio;
            return this;
        }
        @CustomType.Setter
        public Builder format(@Nullable String format) {
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder interval(@Nullable String interval) {
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder maxHeight(@Nullable String maxHeight) {
            this.maxHeight = maxHeight;
            return this;
        }
        @CustomType.Setter
        public Builder maxWidth(@Nullable String maxWidth) {
            this.maxWidth = maxWidth;
            return this;
        }
        @CustomType.Setter
        public Builder paddingPolicy(@Nullable String paddingPolicy) {
            this.paddingPolicy = paddingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(@Nullable String resolution) {
            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder sizingPolicy(@Nullable String sizingPolicy) {
            this.sizingPolicy = sizingPolicy;
            return this;
        }
        public PresetThumbnails build() {
            final var o = new PresetThumbnails();
            o.aspectRatio = aspectRatio;
            o.format = format;
            o.interval = interval;
            o.maxHeight = maxHeight;
            o.maxWidth = maxWidth;
            o.paddingPolicy = paddingPolicy;
            o.resolution = resolution;
            o.sizingPolicy = sizingPolicy;
            return o;
        }
    }
}
