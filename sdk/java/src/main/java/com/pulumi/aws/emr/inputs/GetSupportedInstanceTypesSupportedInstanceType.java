// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetSupportedInstanceTypesSupportedInstanceType extends com.pulumi.resources.InvokeArgs {

    public static final GetSupportedInstanceTypesSupportedInstanceType Empty = new GetSupportedInstanceTypesSupportedInstanceType();

    /**
     * CPU architecture.
     * 
     */
    @Import(name="architecture", required=true)
    private String architecture;

    /**
     * @return CPU architecture.
     * 
     */
    public String architecture() {
        return this.architecture;
    }

    /**
     * Indicates whether the instance type supports Amazon EBS optimization.
     * 
     */
    @Import(name="ebsOptimizedAvailable", required=true)
    private Boolean ebsOptimizedAvailable;

    /**
     * @return Indicates whether the instance type supports Amazon EBS optimization.
     * 
     */
    public Boolean ebsOptimizedAvailable() {
        return this.ebsOptimizedAvailable;
    }

    /**
     * Indicates whether the instance type uses Amazon EBS optimization by default.
     * 
     */
    @Import(name="ebsOptimizedByDefault", required=true)
    private Boolean ebsOptimizedByDefault;

    /**
     * @return Indicates whether the instance type uses Amazon EBS optimization by default.
     * 
     */
    public Boolean ebsOptimizedByDefault() {
        return this.ebsOptimizedByDefault;
    }

    /**
     * Indicates whether the instance type only supports Amazon EBS.
     * 
     */
    @Import(name="ebsStorageOnly", required=true)
    private Boolean ebsStorageOnly;

    /**
     * @return Indicates whether the instance type only supports Amazon EBS.
     * 
     */
    public Boolean ebsStorageOnly() {
        return this.ebsStorageOnly;
    }

    /**
     * The Amazon EC2 family and generation for the instance type.
     * 
     */
    @Import(name="instanceFamilyId", required=true)
    private String instanceFamilyId;

    /**
     * @return The Amazon EC2 family and generation for the instance type.
     * 
     */
    public String instanceFamilyId() {
        return this.instanceFamilyId;
    }

    /**
     * Indicates whether the instance type only supports 64-bit architecture.
     * 
     */
    @Import(name="is64BitsOnly", required=true)
    private Boolean is64BitsOnly;

    /**
     * @return Indicates whether the instance type only supports 64-bit architecture.
     * 
     */
    public Boolean is64BitsOnly() {
        return this.is64BitsOnly;
    }

    /**
     * Memory that is available to Amazon EMR from the instance type.
     * 
     */
    @Import(name="memoryGb", required=true)
    private Double memoryGb;

    /**
     * @return Memory that is available to Amazon EMR from the instance type.
     * 
     */
    public Double memoryGb() {
        return this.memoryGb;
    }

    /**
     * Number of disks for the instance type.
     * 
     */
    @Import(name="numberOfDisks", required=true)
    private Integer numberOfDisks;

    /**
     * @return Number of disks for the instance type.
     * 
     */
    public Integer numberOfDisks() {
        return this.numberOfDisks;
    }

    /**
     * Storage capacity of the instance type.
     * 
     */
    @Import(name="storageGb", required=true)
    private Integer storageGb;

    /**
     * @return Storage capacity of the instance type.
     * 
     */
    public Integer storageGb() {
        return this.storageGb;
    }

    /**
     * Amazon EC2 instance type. For example, `m5.xlarge`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Amazon EC2 instance type. For example, `m5.xlarge`.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * The number of vCPUs available for the instance type.
     * 
     */
    @Import(name="vcpu", required=true)
    private Integer vcpu;

    /**
     * @return The number of vCPUs available for the instance type.
     * 
     */
    public Integer vcpu() {
        return this.vcpu;
    }

    private GetSupportedInstanceTypesSupportedInstanceType() {}

    private GetSupportedInstanceTypesSupportedInstanceType(GetSupportedInstanceTypesSupportedInstanceType $) {
        this.architecture = $.architecture;
        this.ebsOptimizedAvailable = $.ebsOptimizedAvailable;
        this.ebsOptimizedByDefault = $.ebsOptimizedByDefault;
        this.ebsStorageOnly = $.ebsStorageOnly;
        this.instanceFamilyId = $.instanceFamilyId;
        this.is64BitsOnly = $.is64BitsOnly;
        this.memoryGb = $.memoryGb;
        this.numberOfDisks = $.numberOfDisks;
        this.storageGb = $.storageGb;
        this.type = $.type;
        this.vcpu = $.vcpu;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSupportedInstanceTypesSupportedInstanceType defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSupportedInstanceTypesSupportedInstanceType $;

        public Builder() {
            $ = new GetSupportedInstanceTypesSupportedInstanceType();
        }

        public Builder(GetSupportedInstanceTypesSupportedInstanceType defaults) {
            $ = new GetSupportedInstanceTypesSupportedInstanceType(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture CPU architecture.
         * 
         * @return builder
         * 
         */
        public Builder architecture(String architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param ebsOptimizedAvailable Indicates whether the instance type supports Amazon EBS optimization.
         * 
         * @return builder
         * 
         */
        public Builder ebsOptimizedAvailable(Boolean ebsOptimizedAvailable) {
            $.ebsOptimizedAvailable = ebsOptimizedAvailable;
            return this;
        }

        /**
         * @param ebsOptimizedByDefault Indicates whether the instance type uses Amazon EBS optimization by default.
         * 
         * @return builder
         * 
         */
        public Builder ebsOptimizedByDefault(Boolean ebsOptimizedByDefault) {
            $.ebsOptimizedByDefault = ebsOptimizedByDefault;
            return this;
        }

        /**
         * @param ebsStorageOnly Indicates whether the instance type only supports Amazon EBS.
         * 
         * @return builder
         * 
         */
        public Builder ebsStorageOnly(Boolean ebsStorageOnly) {
            $.ebsStorageOnly = ebsStorageOnly;
            return this;
        }

        /**
         * @param instanceFamilyId The Amazon EC2 family and generation for the instance type.
         * 
         * @return builder
         * 
         */
        public Builder instanceFamilyId(String instanceFamilyId) {
            $.instanceFamilyId = instanceFamilyId;
            return this;
        }

        /**
         * @param is64BitsOnly Indicates whether the instance type only supports 64-bit architecture.
         * 
         * @return builder
         * 
         */
        public Builder is64BitsOnly(Boolean is64BitsOnly) {
            $.is64BitsOnly = is64BitsOnly;
            return this;
        }

        /**
         * @param memoryGb Memory that is available to Amazon EMR from the instance type.
         * 
         * @return builder
         * 
         */
        public Builder memoryGb(Double memoryGb) {
            $.memoryGb = memoryGb;
            return this;
        }

        /**
         * @param numberOfDisks Number of disks for the instance type.
         * 
         * @return builder
         * 
         */
        public Builder numberOfDisks(Integer numberOfDisks) {
            $.numberOfDisks = numberOfDisks;
            return this;
        }

        /**
         * @param storageGb Storage capacity of the instance type.
         * 
         * @return builder
         * 
         */
        public Builder storageGb(Integer storageGb) {
            $.storageGb = storageGb;
            return this;
        }

        /**
         * @param type Amazon EC2 instance type. For example, `m5.xlarge`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param vcpu The number of vCPUs available for the instance type.
         * 
         * @return builder
         * 
         */
        public Builder vcpu(Integer vcpu) {
            $.vcpu = vcpu;
            return this;
        }

        public GetSupportedInstanceTypesSupportedInstanceType build() {
            if ($.architecture == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "architecture");
            }
            if ($.ebsOptimizedAvailable == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "ebsOptimizedAvailable");
            }
            if ($.ebsOptimizedByDefault == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "ebsOptimizedByDefault");
            }
            if ($.ebsStorageOnly == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "ebsStorageOnly");
            }
            if ($.instanceFamilyId == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "instanceFamilyId");
            }
            if ($.is64BitsOnly == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "is64BitsOnly");
            }
            if ($.memoryGb == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "memoryGb");
            }
            if ($.numberOfDisks == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "numberOfDisks");
            }
            if ($.storageGb == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "storageGb");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "type");
            }
            if ($.vcpu == null) {
                throw new MissingRequiredPropertyException("GetSupportedInstanceTypesSupportedInstanceType", "vcpu");
            }
            return $;
        }
    }

}
