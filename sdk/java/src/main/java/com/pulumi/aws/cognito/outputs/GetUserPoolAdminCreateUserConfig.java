// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.aws.cognito.outputs.GetUserPoolAdminCreateUserConfigInviteMessageTemplate;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserPoolAdminCreateUserConfig {
    /**
     * @return - Whether only admins can create users.
     * 
     */
    private Boolean allowAdminCreateUserOnly;
    private List<GetUserPoolAdminCreateUserConfigInviteMessageTemplate> inviteMessageTemplates;
    /**
     * @return - Number of days an unconfirmed user account remains valid.
     * * invite_message_template - Templates for invitation messages.
     * 
     */
    private Integer unusedAccountValidityDays;

    private GetUserPoolAdminCreateUserConfig() {}
    /**
     * @return - Whether only admins can create users.
     * 
     */
    public Boolean allowAdminCreateUserOnly() {
        return this.allowAdminCreateUserOnly;
    }
    public List<GetUserPoolAdminCreateUserConfigInviteMessageTemplate> inviteMessageTemplates() {
        return this.inviteMessageTemplates;
    }
    /**
     * @return - Number of days an unconfirmed user account remains valid.
     * * invite_message_template - Templates for invitation messages.
     * 
     */
    public Integer unusedAccountValidityDays() {
        return this.unusedAccountValidityDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserPoolAdminCreateUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowAdminCreateUserOnly;
        private List<GetUserPoolAdminCreateUserConfigInviteMessageTemplate> inviteMessageTemplates;
        private Integer unusedAccountValidityDays;
        public Builder() {}
        public Builder(GetUserPoolAdminCreateUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAdminCreateUserOnly = defaults.allowAdminCreateUserOnly;
    	      this.inviteMessageTemplates = defaults.inviteMessageTemplates;
    	      this.unusedAccountValidityDays = defaults.unusedAccountValidityDays;
        }

        @CustomType.Setter
        public Builder allowAdminCreateUserOnly(Boolean allowAdminCreateUserOnly) {
            if (allowAdminCreateUserOnly == null) {
              throw new MissingRequiredPropertyException("GetUserPoolAdminCreateUserConfig", "allowAdminCreateUserOnly");
            }
            this.allowAdminCreateUserOnly = allowAdminCreateUserOnly;
            return this;
        }
        @CustomType.Setter
        public Builder inviteMessageTemplates(List<GetUserPoolAdminCreateUserConfigInviteMessageTemplate> inviteMessageTemplates) {
            if (inviteMessageTemplates == null) {
              throw new MissingRequiredPropertyException("GetUserPoolAdminCreateUserConfig", "inviteMessageTemplates");
            }
            this.inviteMessageTemplates = inviteMessageTemplates;
            return this;
        }
        public Builder inviteMessageTemplates(GetUserPoolAdminCreateUserConfigInviteMessageTemplate... inviteMessageTemplates) {
            return inviteMessageTemplates(List.of(inviteMessageTemplates));
        }
        @CustomType.Setter
        public Builder unusedAccountValidityDays(Integer unusedAccountValidityDays) {
            if (unusedAccountValidityDays == null) {
              throw new MissingRequiredPropertyException("GetUserPoolAdminCreateUserConfig", "unusedAccountValidityDays");
            }
            this.unusedAccountValidityDays = unusedAccountValidityDays;
            return this;
        }
        public GetUserPoolAdminCreateUserConfig build() {
            final var _resultValue = new GetUserPoolAdminCreateUserConfig();
            _resultValue.allowAdminCreateUserOnly = allowAdminCreateUserOnly;
            _resultValue.inviteMessageTemplates = inviteMessageTemplates;
            _resultValue.unusedAccountValidityDays = unusedAccountValidityDays;
            return _resultValue;
        }
    }
}
