// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.lakeformation.ResourceLfTagArgs;
import com.pulumi.aws.lakeformation.inputs.ResourceLfTagState;
import com.pulumi.aws.lakeformation.outputs.ResourceLfTagDatabase;
import com.pulumi.aws.lakeformation.outputs.ResourceLfTagLfTag;
import com.pulumi.aws.lakeformation.outputs.ResourceLfTagTable;
import com.pulumi.aws.lakeformation.outputs.ResourceLfTagTableWithColumns;
import com.pulumi.aws.lakeformation.outputs.ResourceLfTagTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Lake Formation Resource LF Tag.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.lakeformation.ResourceLfTag;
 * import com.pulumi.aws.lakeformation.ResourceLfTagArgs;
 * import com.pulumi.aws.lakeformation.inputs.ResourceLfTagDatabaseArgs;
 * import com.pulumi.aws.lakeformation.inputs.ResourceLfTagLfTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceLfTag("example", ResourceLfTagArgs.builder()        
 *             .database(ResourceLfTagDatabaseArgs.builder()
 *                 .name(exampleAwsGlueCatalogDatabase.name())
 *                 .build())
 *             .lfTag(ResourceLfTagLfTagArgs.builder()
 *                 .key(exampleAwsLakeformationLfTag.key())
 *                 .value("stowe")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * You cannot import this resource.
 * 
 */
@ResourceType(type="aws:lakeformation/resourceLfTag:ResourceLfTag")
public class ResourceLfTag extends com.pulumi.resources.CustomResource {
    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     * 
     */
    @Export(name="catalogId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     * 
     */
    public Output<Optional<String>> catalogId() {
        return Codegen.optional(this.catalogId);
    }
    /**
     * Configuration block for a database resource. See Database for more details.
     * 
     */
    @Export(name="database", refs={ResourceLfTagDatabase.class}, tree="[0]")
    private Output</* @Nullable */ ResourceLfTagDatabase> database;

    /**
     * @return Configuration block for a database resource. See Database for more details.
     * 
     */
    public Output<Optional<ResourceLfTagDatabase>> database() {
        return Codegen.optional(this.database);
    }
    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     * 
     * Exactly one of the following is required:
     * 
     */
    @Export(name="lfTag", refs={ResourceLfTagLfTag.class}, tree="[0]")
    private Output</* @Nullable */ ResourceLfTagLfTag> lfTag;

    /**
     * @return Set of LF-tags to attach to the resource. See LF Tag for more details.
     * 
     * Exactly one of the following is required:
     * 
     */
    public Output<Optional<ResourceLfTagLfTag>> lfTag() {
        return Codegen.optional(this.lfTag);
    }
    /**
     * Configuration block for a table resource. See Table for more details.
     * 
     */
    @Export(name="table", refs={ResourceLfTagTable.class}, tree="[0]")
    private Output</* @Nullable */ ResourceLfTagTable> table;

    /**
     * @return Configuration block for a table resource. See Table for more details.
     * 
     */
    public Output<Optional<ResourceLfTagTable>> table() {
        return Codegen.optional(this.table);
    }
    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="tableWithColumns", refs={ResourceLfTagTableWithColumns.class}, tree="[0]")
    private Output</* @Nullable */ ResourceLfTagTableWithColumns> tableWithColumns;

    /**
     * @return Configuration block for a table with columns resource. See Table With Columns for more details.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Optional<ResourceLfTagTableWithColumns>> tableWithColumns() {
        return Codegen.optional(this.tableWithColumns);
    }
    @Export(name="timeouts", refs={ResourceLfTagTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ ResourceLfTagTimeouts> timeouts;

    public Output<Optional<ResourceLfTagTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourceLfTag(String name) {
        this(name, ResourceLfTagArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourceLfTag(String name, @Nullable ResourceLfTagArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourceLfTag(String name, @Nullable ResourceLfTagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/resourceLfTag:ResourceLfTag", name, args == null ? ResourceLfTagArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ResourceLfTag(String name, Output<String> id, @Nullable ResourceLfTagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/resourceLfTag:ResourceLfTag", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourceLfTag get(String name, Output<String> id, @Nullable ResourceLfTagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResourceLfTag(name, id, state, options);
    }
}
