// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
    /**
     * @return The ID of the AWS Glue Data Catalog. If you don&#39;t supply this, the AWS account ID is used by default.
     * 
     */
    private @Nullable String catalogId;
    /**
     * @return Specifies the name of the AWS Glue database that contains the schema for the output data.
     * 
     */
    private String databaseName;
    /**
     * @return If you don&#39;t specify an AWS Region, the default is the current region.
     * 
     */
    private @Nullable String region;
    /**
     * @return The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren&#39;t allowed.
     * 
     */
    private String roleArn;
    /**
     * @return Specifies the AWS Glue table that contains the column information that constitutes your data schema.
     * 
     */
    private String tableName;
    /**
     * @return Specifies the table version for the output data schema. Defaults to `LATEST`.
     * 
     */
    private @Nullable String versionId;

    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration() {}
    /**
     * @return The ID of the AWS Glue Data Catalog. If you don&#39;t supply this, the AWS account ID is used by default.
     * 
     */
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * @return Specifies the name of the AWS Glue database that contains the schema for the output data.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return If you don&#39;t specify an AWS Region, the default is the current region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren&#39;t allowed.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return Specifies the AWS Glue table that contains the column information that constitutes your data schema.
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    /**
     * @return Specifies the table version for the output data schema. Defaults to `LATEST`.
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String catalogId;
        private String databaseName;
        private @Nullable String region;
        private String roleArn;
        private String tableName;
        private @Nullable String versionId;
        public Builder() {}
        public Builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.databaseName = defaults.databaseName;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.tableName = defaults.tableName;
    	      this.versionId = defaults.versionId;
        }

        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        @CustomType.Setter
        public Builder versionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        public FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration build() {
            final var _resultValue = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration();
            _resultValue.catalogId = catalogId;
            _resultValue.databaseName = databaseName;
            _resultValue.region = region;
            _resultValue.roleArn = roleArn;
            _resultValue.tableName = tableName;
            _resultValue.versionId = versionId;
            return _resultValue;
        }
    }
}
