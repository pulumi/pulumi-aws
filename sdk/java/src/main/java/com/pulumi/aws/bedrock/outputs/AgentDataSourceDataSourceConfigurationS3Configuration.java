// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentDataSourceDataSourceConfigurationS3Configuration {
    /**
     * @return ARN of the bucket that contains the data source.
     * 
     */
    private String bucketArn;
    /**
     * @return Bucket account owner ID for the S3 bucket.
     * 
     */
    private @Nullable String bucketOwnerAccountId;
    /**
     * @return List of S3 prefixes that define the object containing the data sources. For more information, see [Organizing objects using prefixes](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html).
     * 
     */
    private @Nullable List<String> inclusionPrefixes;

    private AgentDataSourceDataSourceConfigurationS3Configuration() {}
    /**
     * @return ARN of the bucket that contains the data source.
     * 
     */
    public String bucketArn() {
        return this.bucketArn;
    }
    /**
     * @return Bucket account owner ID for the S3 bucket.
     * 
     */
    public Optional<String> bucketOwnerAccountId() {
        return Optional.ofNullable(this.bucketOwnerAccountId);
    }
    /**
     * @return List of S3 prefixes that define the object containing the data sources. For more information, see [Organizing objects using prefixes](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html).
     * 
     */
    public List<String> inclusionPrefixes() {
        return this.inclusionPrefixes == null ? List.of() : this.inclusionPrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceDataSourceConfigurationS3Configuration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucketArn;
        private @Nullable String bucketOwnerAccountId;
        private @Nullable List<String> inclusionPrefixes;
        public Builder() {}
        public Builder(AgentDataSourceDataSourceConfigurationS3Configuration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketArn = defaults.bucketArn;
    	      this.bucketOwnerAccountId = defaults.bucketOwnerAccountId;
    	      this.inclusionPrefixes = defaults.inclusionPrefixes;
        }

        @CustomType.Setter
        public Builder bucketArn(String bucketArn) {
            if (bucketArn == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationS3Configuration", "bucketArn");
            }
            this.bucketArn = bucketArn;
            return this;
        }
        @CustomType.Setter
        public Builder bucketOwnerAccountId(@Nullable String bucketOwnerAccountId) {

            this.bucketOwnerAccountId = bucketOwnerAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder inclusionPrefixes(@Nullable List<String> inclusionPrefixes) {

            this.inclusionPrefixes = inclusionPrefixes;
            return this;
        }
        public Builder inclusionPrefixes(String... inclusionPrefixes) {
            return inclusionPrefixes(List.of(inclusionPrefixes));
        }
        public AgentDataSourceDataSourceConfigurationS3Configuration build() {
            final var _resultValue = new AgentDataSourceDataSourceConfigurationS3Configuration();
            _resultValue.bucketArn = bucketArn;
            _resultValue.bucketOwnerAccountId = bucketOwnerAccountId;
            _resultValue.inclusionPrefixes = inclusionPrefixes;
            return _resultValue;
        }
    }
}
