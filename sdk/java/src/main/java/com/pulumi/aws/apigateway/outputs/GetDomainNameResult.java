// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.aws.apigateway.outputs.GetDomainNameEndpointConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainNameResult {
    private String arn;
    private String certificateArn;
    private String certificateName;
    private String certificateUploadDate;
    private String cloudfrontDomainName;
    private String cloudfrontZoneId;
    private String domainName;
    private List<GetDomainNameEndpointConfiguration> endpointConfigurations;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String regionalCertificateArn;
    private String regionalCertificateName;
    private String regionalDomainName;
    private String regionalZoneId;
    private String securityPolicy;
    private @Nullable Map<String,String> tags;

    private GetDomainNameResult() {}
    public String arn() {
        return this.arn;
    }
    public String certificateArn() {
        return this.certificateArn;
    }
    public String certificateName() {
        return this.certificateName;
    }
    public String certificateUploadDate() {
        return this.certificateUploadDate;
    }
    public String cloudfrontDomainName() {
        return this.cloudfrontDomainName;
    }
    public String cloudfrontZoneId() {
        return this.cloudfrontZoneId;
    }
    public String domainName() {
        return this.domainName;
    }
    public List<GetDomainNameEndpointConfiguration> endpointConfigurations() {
        return this.endpointConfigurations;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String regionalCertificateArn() {
        return this.regionalCertificateArn;
    }
    public String regionalCertificateName() {
        return this.regionalCertificateName;
    }
    public String regionalDomainName() {
        return this.regionalDomainName;
    }
    public String regionalZoneId() {
        return this.regionalZoneId;
    }
    public String securityPolicy() {
        return this.securityPolicy;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainNameResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String certificateArn;
        private String certificateName;
        private String certificateUploadDate;
        private String cloudfrontDomainName;
        private String cloudfrontZoneId;
        private String domainName;
        private List<GetDomainNameEndpointConfiguration> endpointConfigurations;
        private String id;
        private String regionalCertificateArn;
        private String regionalCertificateName;
        private String regionalDomainName;
        private String regionalZoneId;
        private String securityPolicy;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetDomainNameResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateArn = defaults.certificateArn;
    	      this.certificateName = defaults.certificateName;
    	      this.certificateUploadDate = defaults.certificateUploadDate;
    	      this.cloudfrontDomainName = defaults.cloudfrontDomainName;
    	      this.cloudfrontZoneId = defaults.cloudfrontZoneId;
    	      this.domainName = defaults.domainName;
    	      this.endpointConfigurations = defaults.endpointConfigurations;
    	      this.id = defaults.id;
    	      this.regionalCertificateArn = defaults.regionalCertificateArn;
    	      this.regionalCertificateName = defaults.regionalCertificateName;
    	      this.regionalDomainName = defaults.regionalDomainName;
    	      this.regionalZoneId = defaults.regionalZoneId;
    	      this.securityPolicy = defaults.securityPolicy;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder certificateArn(String certificateArn) {
            this.certificateArn = Objects.requireNonNull(certificateArn);
            return this;
        }
        @CustomType.Setter
        public Builder certificateName(String certificateName) {
            this.certificateName = Objects.requireNonNull(certificateName);
            return this;
        }
        @CustomType.Setter
        public Builder certificateUploadDate(String certificateUploadDate) {
            this.certificateUploadDate = Objects.requireNonNull(certificateUploadDate);
            return this;
        }
        @CustomType.Setter
        public Builder cloudfrontDomainName(String cloudfrontDomainName) {
            this.cloudfrontDomainName = Objects.requireNonNull(cloudfrontDomainName);
            return this;
        }
        @CustomType.Setter
        public Builder cloudfrontZoneId(String cloudfrontZoneId) {
            this.cloudfrontZoneId = Objects.requireNonNull(cloudfrontZoneId);
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfigurations(List<GetDomainNameEndpointConfiguration> endpointConfigurations) {
            this.endpointConfigurations = Objects.requireNonNull(endpointConfigurations);
            return this;
        }
        public Builder endpointConfigurations(GetDomainNameEndpointConfiguration... endpointConfigurations) {
            return endpointConfigurations(List.of(endpointConfigurations));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder regionalCertificateArn(String regionalCertificateArn) {
            this.regionalCertificateArn = Objects.requireNonNull(regionalCertificateArn);
            return this;
        }
        @CustomType.Setter
        public Builder regionalCertificateName(String regionalCertificateName) {
            this.regionalCertificateName = Objects.requireNonNull(regionalCertificateName);
            return this;
        }
        @CustomType.Setter
        public Builder regionalDomainName(String regionalDomainName) {
            this.regionalDomainName = Objects.requireNonNull(regionalDomainName);
            return this;
        }
        @CustomType.Setter
        public Builder regionalZoneId(String regionalZoneId) {
            this.regionalZoneId = Objects.requireNonNull(regionalZoneId);
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicy(String securityPolicy) {
            this.securityPolicy = Objects.requireNonNull(securityPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetDomainNameResult build() {
            final var o = new GetDomainNameResult();
            o.arn = arn;
            o.certificateArn = certificateArn;
            o.certificateName = certificateName;
            o.certificateUploadDate = certificateUploadDate;
            o.cloudfrontDomainName = cloudfrontDomainName;
            o.cloudfrontZoneId = cloudfrontZoneId;
            o.domainName = domainName;
            o.endpointConfigurations = endpointConfigurations;
            o.id = id;
            o.regionalCertificateArn = regionalCertificateArn;
            o.regionalCertificateName = regionalCertificateName;
            o.regionalDomainName = regionalDomainName;
            o.regionalZoneId = regionalZoneId;
            o.securityPolicy = securityPolicy;
            o.tags = tags;
            return o;
        }
    }
}
