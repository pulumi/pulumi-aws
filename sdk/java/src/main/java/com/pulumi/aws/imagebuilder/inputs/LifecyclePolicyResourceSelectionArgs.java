// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.LifecyclePolicyResourceSelectionRecipeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyResourceSelectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyResourceSelectionArgs Empty = new LifecyclePolicyResourceSelectionArgs();

    /**
     * A list of recipe that are used as selection criteria for the output images that the lifecycle policy applies to. Detailed below.
     * 
     */
    @Import(name="recipes")
    private @Nullable Output<List<LifecyclePolicyResourceSelectionRecipeArgs>> recipes;

    /**
     * @return A list of recipe that are used as selection criteria for the output images that the lifecycle policy applies to. Detailed below.
     * 
     */
    public Optional<Output<List<LifecyclePolicyResourceSelectionRecipeArgs>>> recipes() {
        return Optional.ofNullable(this.recipes);
    }

    /**
     * A list of tags that are used as selection criteria for the Image Builder image resources that the lifecycle policy applies to.
     * 
     */
    @Import(name="tagMap")
    private @Nullable Output<Map<String,String>> tagMap;

    /**
     * @return A list of tags that are used as selection criteria for the Image Builder image resources that the lifecycle policy applies to.
     * 
     */
    public Optional<Output<Map<String,String>>> tagMap() {
        return Optional.ofNullable(this.tagMap);
    }

    private LifecyclePolicyResourceSelectionArgs() {}

    private LifecyclePolicyResourceSelectionArgs(LifecyclePolicyResourceSelectionArgs $) {
        this.recipes = $.recipes;
        this.tagMap = $.tagMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyResourceSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyResourceSelectionArgs $;

        public Builder() {
            $ = new LifecyclePolicyResourceSelectionArgs();
        }

        public Builder(LifecyclePolicyResourceSelectionArgs defaults) {
            $ = new LifecyclePolicyResourceSelectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recipes A list of recipe that are used as selection criteria for the output images that the lifecycle policy applies to. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recipes(@Nullable Output<List<LifecyclePolicyResourceSelectionRecipeArgs>> recipes) {
            $.recipes = recipes;
            return this;
        }

        /**
         * @param recipes A list of recipe that are used as selection criteria for the output images that the lifecycle policy applies to. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recipes(List<LifecyclePolicyResourceSelectionRecipeArgs> recipes) {
            return recipes(Output.of(recipes));
        }

        /**
         * @param recipes A list of recipe that are used as selection criteria for the output images that the lifecycle policy applies to. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recipes(LifecyclePolicyResourceSelectionRecipeArgs... recipes) {
            return recipes(List.of(recipes));
        }

        /**
         * @param tagMap A list of tags that are used as selection criteria for the Image Builder image resources that the lifecycle policy applies to.
         * 
         * @return builder
         * 
         */
        public Builder tagMap(@Nullable Output<Map<String,String>> tagMap) {
            $.tagMap = tagMap;
            return this;
        }

        /**
         * @param tagMap A list of tags that are used as selection criteria for the Image Builder image resources that the lifecycle policy applies to.
         * 
         * @return builder
         * 
         */
        public Builder tagMap(Map<String,String> tagMap) {
            return tagMap(Output.of(tagMap));
        }

        public LifecyclePolicyResourceSelectionArgs build() {
            return $;
        }
    }

}
