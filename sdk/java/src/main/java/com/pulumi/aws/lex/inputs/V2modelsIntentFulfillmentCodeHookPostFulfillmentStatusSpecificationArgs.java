// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureConditionalArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureNextStepArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureResponseArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessConditionalArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessNextStepArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessResponseArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutConditionalArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutNextStepArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutResponseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs Empty = new V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs();

    /**
     * Configuration block for conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureConditional`.
     * 
     */
    @Import(name="failureConditional")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureConditionalArgs> failureConditional;

    /**
     * @return Configuration block for conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureConditional`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureConditionalArgs>> failureConditional() {
        return Optional.ofNullable(this.failureConditional);
    }

    /**
     * Configuration block for the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureNextStep`.
     * 
     */
    @Import(name="failureNextStep")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureNextStepArgs> failureNextStep;

    /**
     * @return Configuration block for the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureNextStep`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureNextStepArgs>> failureNextStep() {
        return Optional.ofNullable(this.failureNextStep);
    }

    /**
     * Configuration block for message groups that Amazon Lex uses to respond the user input. See `failureResponse`.
     * 
     */
    @Import(name="failureResponse")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureResponseArgs> failureResponse;

    /**
     * @return Configuration block for message groups that Amazon Lex uses to respond the user input. See `failureResponse`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureResponseArgs>> failureResponse() {
        return Optional.ofNullable(this.failureResponse);
    }

    /**
     * Configuration block for conditional branches to evaluate after the dialog code hook finishes successfully. See `successConditional`.
     * 
     */
    @Import(name="successConditional")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessConditionalArgs> successConditional;

    /**
     * @return Configuration block for conditional branches to evaluate after the dialog code hook finishes successfully. See `successConditional`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessConditionalArgs>> successConditional() {
        return Optional.ofNullable(this.successConditional);
    }

    /**
     * Configuration block for the next step the bot runs after the dialog code hook finishes successfully. See `successNextStep`.
     * 
     */
    @Import(name="successNextStep")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessNextStepArgs> successNextStep;

    /**
     * @return Configuration block for the next step the bot runs after the dialog code hook finishes successfully. See `successNextStep`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessNextStepArgs>> successNextStep() {
        return Optional.ofNullable(this.successNextStep);
    }

    /**
     * Configuration block for message groups that Amazon Lex uses to respond the user input. See `successResponse`.
     * 
     */
    @Import(name="successResponse")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessResponseArgs> successResponse;

    /**
     * @return Configuration block for message groups that Amazon Lex uses to respond the user input. See `successResponse`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessResponseArgs>> successResponse() {
        return Optional.ofNullable(this.successResponse);
    }

    /**
     * Configuration block for conditional branches to evaluate if the code hook times out. See `timeoutConditional`.
     * 
     */
    @Import(name="timeoutConditional")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutConditionalArgs> timeoutConditional;

    /**
     * @return Configuration block for conditional branches to evaluate if the code hook times out. See `timeoutConditional`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutConditionalArgs>> timeoutConditional() {
        return Optional.ofNullable(this.timeoutConditional);
    }

    /**
     * Configuration block for the next step that the bot runs when the code hook times out. See `timeoutNextStep`.
     * 
     */
    @Import(name="timeoutNextStep")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutNextStepArgs> timeoutNextStep;

    /**
     * @return Configuration block for the next step that the bot runs when the code hook times out. See `timeoutNextStep`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutNextStepArgs>> timeoutNextStep() {
        return Optional.ofNullable(this.timeoutNextStep);
    }

    /**
     * Configuration block for a list of message groups that Amazon Lex uses to respond the user input. See `timeoutResponse`.
     * 
     */
    @Import(name="timeoutResponse")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutResponseArgs> timeoutResponse;

    /**
     * @return Configuration block for a list of message groups that Amazon Lex uses to respond the user input. See `timeoutResponse`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutResponseArgs>> timeoutResponse() {
        return Optional.ofNullable(this.timeoutResponse);
    }

    private V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs() {}

    private V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs $) {
        this.failureConditional = $.failureConditional;
        this.failureNextStep = $.failureNextStep;
        this.failureResponse = $.failureResponse;
        this.successConditional = $.successConditional;
        this.successNextStep = $.successNextStep;
        this.successResponse = $.successResponse;
        this.timeoutConditional = $.timeoutConditional;
        this.timeoutNextStep = $.timeoutNextStep;
        this.timeoutResponse = $.timeoutResponse;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs $;

        public Builder() {
            $ = new V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs();
        }

        public Builder(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs defaults) {
            $ = new V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param failureConditional Configuration block for conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureConditional`.
         * 
         * @return builder
         * 
         */
        public Builder failureConditional(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureConditionalArgs> failureConditional) {
            $.failureConditional = failureConditional;
            return this;
        }

        /**
         * @param failureConditional Configuration block for conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureConditional`.
         * 
         * @return builder
         * 
         */
        public Builder failureConditional(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureConditionalArgs failureConditional) {
            return failureConditional(Output.of(failureConditional));
        }

        /**
         * @param failureNextStep Configuration block for the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder failureNextStep(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureNextStepArgs> failureNextStep) {
            $.failureNextStep = failureNextStep;
            return this;
        }

        /**
         * @param failureNextStep Configuration block for the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed. See `failureNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder failureNextStep(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureNextStepArgs failureNextStep) {
            return failureNextStep(Output.of(failureNextStep));
        }

        /**
         * @param failureResponse Configuration block for message groups that Amazon Lex uses to respond the user input. See `failureResponse`.
         * 
         * @return builder
         * 
         */
        public Builder failureResponse(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureResponseArgs> failureResponse) {
            $.failureResponse = failureResponse;
            return this;
        }

        /**
         * @param failureResponse Configuration block for message groups that Amazon Lex uses to respond the user input. See `failureResponse`.
         * 
         * @return builder
         * 
         */
        public Builder failureResponse(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationFailureResponseArgs failureResponse) {
            return failureResponse(Output.of(failureResponse));
        }

        /**
         * @param successConditional Configuration block for conditional branches to evaluate after the dialog code hook finishes successfully. See `successConditional`.
         * 
         * @return builder
         * 
         */
        public Builder successConditional(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessConditionalArgs> successConditional) {
            $.successConditional = successConditional;
            return this;
        }

        /**
         * @param successConditional Configuration block for conditional branches to evaluate after the dialog code hook finishes successfully. See `successConditional`.
         * 
         * @return builder
         * 
         */
        public Builder successConditional(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessConditionalArgs successConditional) {
            return successConditional(Output.of(successConditional));
        }

        /**
         * @param successNextStep Configuration block for the next step the bot runs after the dialog code hook finishes successfully. See `successNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder successNextStep(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessNextStepArgs> successNextStep) {
            $.successNextStep = successNextStep;
            return this;
        }

        /**
         * @param successNextStep Configuration block for the next step the bot runs after the dialog code hook finishes successfully. See `successNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder successNextStep(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessNextStepArgs successNextStep) {
            return successNextStep(Output.of(successNextStep));
        }

        /**
         * @param successResponse Configuration block for message groups that Amazon Lex uses to respond the user input. See `successResponse`.
         * 
         * @return builder
         * 
         */
        public Builder successResponse(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessResponseArgs> successResponse) {
            $.successResponse = successResponse;
            return this;
        }

        /**
         * @param successResponse Configuration block for message groups that Amazon Lex uses to respond the user input. See `successResponse`.
         * 
         * @return builder
         * 
         */
        public Builder successResponse(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationSuccessResponseArgs successResponse) {
            return successResponse(Output.of(successResponse));
        }

        /**
         * @param timeoutConditional Configuration block for conditional branches to evaluate if the code hook times out. See `timeoutConditional`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutConditional(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutConditionalArgs> timeoutConditional) {
            $.timeoutConditional = timeoutConditional;
            return this;
        }

        /**
         * @param timeoutConditional Configuration block for conditional branches to evaluate if the code hook times out. See `timeoutConditional`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutConditional(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutConditionalArgs timeoutConditional) {
            return timeoutConditional(Output.of(timeoutConditional));
        }

        /**
         * @param timeoutNextStep Configuration block for the next step that the bot runs when the code hook times out. See `timeoutNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutNextStep(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutNextStepArgs> timeoutNextStep) {
            $.timeoutNextStep = timeoutNextStep;
            return this;
        }

        /**
         * @param timeoutNextStep Configuration block for the next step that the bot runs when the code hook times out. See `timeoutNextStep`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutNextStep(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutNextStepArgs timeoutNextStep) {
            return timeoutNextStep(Output.of(timeoutNextStep));
        }

        /**
         * @param timeoutResponse Configuration block for a list of message groups that Amazon Lex uses to respond the user input. See `timeoutResponse`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutResponse(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutResponseArgs> timeoutResponse) {
            $.timeoutResponse = timeoutResponse;
            return this;
        }

        /**
         * @param timeoutResponse Configuration block for a list of message groups that Amazon Lex uses to respond the user input. See `timeoutResponse`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutResponse(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationTimeoutResponseArgs timeoutResponse) {
            return timeoutResponse(Output.of(timeoutResponse));
        }

        public V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs build() {
            return $;
        }
    }

}
