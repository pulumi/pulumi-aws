// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rbin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class RuleLockConfigurationUnlockDelayArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleLockConfigurationUnlockDelayArgs Empty = new RuleLockConfigurationUnlockDelayArgs();

    /**
     * The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
     * 
     */
    @Import(name="unlockDelayUnit", required=true)
    private Output<String> unlockDelayUnit;

    /**
     * @return The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
     * 
     */
    public Output<String> unlockDelayUnit() {
        return this.unlockDelayUnit;
    }

    /**
     * The unlock delay period, measured in the unit specified for UnlockDelayUnit.
     * 
     */
    @Import(name="unlockDelayValue", required=true)
    private Output<Integer> unlockDelayValue;

    /**
     * @return The unlock delay period, measured in the unit specified for UnlockDelayUnit.
     * 
     */
    public Output<Integer> unlockDelayValue() {
        return this.unlockDelayValue;
    }

    private RuleLockConfigurationUnlockDelayArgs() {}

    private RuleLockConfigurationUnlockDelayArgs(RuleLockConfigurationUnlockDelayArgs $) {
        this.unlockDelayUnit = $.unlockDelayUnit;
        this.unlockDelayValue = $.unlockDelayValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleLockConfigurationUnlockDelayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleLockConfigurationUnlockDelayArgs $;

        public Builder() {
            $ = new RuleLockConfigurationUnlockDelayArgs();
        }

        public Builder(RuleLockConfigurationUnlockDelayArgs defaults) {
            $ = new RuleLockConfigurationUnlockDelayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param unlockDelayUnit The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
         * 
         * @return builder
         * 
         */
        public Builder unlockDelayUnit(Output<String> unlockDelayUnit) {
            $.unlockDelayUnit = unlockDelayUnit;
            return this;
        }

        /**
         * @param unlockDelayUnit The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
         * 
         * @return builder
         * 
         */
        public Builder unlockDelayUnit(String unlockDelayUnit) {
            return unlockDelayUnit(Output.of(unlockDelayUnit));
        }

        /**
         * @param unlockDelayValue The unlock delay period, measured in the unit specified for UnlockDelayUnit.
         * 
         * @return builder
         * 
         */
        public Builder unlockDelayValue(Output<Integer> unlockDelayValue) {
            $.unlockDelayValue = unlockDelayValue;
            return this;
        }

        /**
         * @param unlockDelayValue The unlock delay period, measured in the unit specified for UnlockDelayUnit.
         * 
         * @return builder
         * 
         */
        public Builder unlockDelayValue(Integer unlockDelayValue) {
            return unlockDelayValue(Output.of(unlockDelayValue));
        }

        public RuleLockConfigurationUnlockDelayArgs build() {
            if ($.unlockDelayUnit == null) {
                throw new MissingRequiredPropertyException("RuleLockConfigurationUnlockDelayArgs", "unlockDelayUnit");
            }
            if ($.unlockDelayValue == null) {
                throw new MissingRequiredPropertyException("RuleLockConfigurationUnlockDelayArgs", "unlockDelayValue");
            }
            return $;
        }
    }

}
