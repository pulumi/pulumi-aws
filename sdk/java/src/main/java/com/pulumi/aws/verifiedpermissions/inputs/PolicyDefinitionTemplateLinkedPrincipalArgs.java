// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PolicyDefinitionTemplateLinkedPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyDefinitionTemplateLinkedPrincipalArgs Empty = new PolicyDefinitionTemplateLinkedPrincipalArgs();

    /**
     * The entity ID of the principal.
     * 
     */
    @Import(name="entityId", required=true)
    private Output<String> entityId;

    /**
     * @return The entity ID of the principal.
     * 
     */
    public Output<String> entityId() {
        return this.entityId;
    }

    /**
     * The entity type of the principal.
     * 
     */
    @Import(name="entityType", required=true)
    private Output<String> entityType;

    /**
     * @return The entity type of the principal.
     * 
     */
    public Output<String> entityType() {
        return this.entityType;
    }

    private PolicyDefinitionTemplateLinkedPrincipalArgs() {}

    private PolicyDefinitionTemplateLinkedPrincipalArgs(PolicyDefinitionTemplateLinkedPrincipalArgs $) {
        this.entityId = $.entityId;
        this.entityType = $.entityType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyDefinitionTemplateLinkedPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyDefinitionTemplateLinkedPrincipalArgs $;

        public Builder() {
            $ = new PolicyDefinitionTemplateLinkedPrincipalArgs();
        }

        public Builder(PolicyDefinitionTemplateLinkedPrincipalArgs defaults) {
            $ = new PolicyDefinitionTemplateLinkedPrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityId The entity ID of the principal.
         * 
         * @return builder
         * 
         */
        public Builder entityId(Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId The entity ID of the principal.
         * 
         * @return builder
         * 
         */
        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param entityType The entity type of the principal.
         * 
         * @return builder
         * 
         */
        public Builder entityType(Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        /**
         * @param entityType The entity type of the principal.
         * 
         * @return builder
         * 
         */
        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        public PolicyDefinitionTemplateLinkedPrincipalArgs build() {
            if ($.entityId == null) {
                throw new MissingRequiredPropertyException("PolicyDefinitionTemplateLinkedPrincipalArgs", "entityId");
            }
            if ($.entityType == null) {
                throw new MissingRequiredPropertyException("PolicyDefinitionTemplateLinkedPrincipalArgs", "entityType");
            }
            return $;
        }
    }

}
