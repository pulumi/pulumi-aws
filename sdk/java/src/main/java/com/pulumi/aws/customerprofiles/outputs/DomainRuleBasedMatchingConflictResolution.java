// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.customerprofiles.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainRuleBasedMatchingConflictResolution {
    /**
     * @return How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
     * 
     */
    private String conflictResolvingModel;
    /**
     * @return The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
     * 
     */
    private @Nullable String sourceName;

    private DomainRuleBasedMatchingConflictResolution() {}
    /**
     * @return How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
     * 
     */
    public String conflictResolvingModel() {
        return this.conflictResolvingModel;
    }
    /**
     * @return The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
     * 
     */
    public Optional<String> sourceName() {
        return Optional.ofNullable(this.sourceName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainRuleBasedMatchingConflictResolution defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String conflictResolvingModel;
        private @Nullable String sourceName;
        public Builder() {}
        public Builder(DomainRuleBasedMatchingConflictResolution defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conflictResolvingModel = defaults.conflictResolvingModel;
    	      this.sourceName = defaults.sourceName;
        }

        @CustomType.Setter
        public Builder conflictResolvingModel(String conflictResolvingModel) {
            this.conflictResolvingModel = Objects.requireNonNull(conflictResolvingModel);
            return this;
        }
        @CustomType.Setter
        public Builder sourceName(@Nullable String sourceName) {
            this.sourceName = sourceName;
            return this;
        }
        public DomainRuleBasedMatchingConflictResolution build() {
            final var _resultValue = new DomainRuleBasedMatchingConflictResolution();
            _resultValue.conflictResolvingModel = conflictResolvingModel;
            _resultValue.sourceName = sourceName;
            return _resultValue;
        }
    }
}
