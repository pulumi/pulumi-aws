// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetRouteTableFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRouteTablePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteTablePlainArgs Empty = new GetRouteTablePlainArgs();

    @Import(name="filters")
    private @Nullable List<GetRouteTableFilter> filters;

    public Optional<List<GetRouteTableFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="gatewayId")
    private @Nullable String gatewayId;

    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    @Import(name="routeTableId")
    private @Nullable String routeTableId;

    public Optional<String> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }

    @Import(name="subnetId")
    private @Nullable String subnetId;

    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcId")
    private @Nullable String vpcId;

    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetRouteTablePlainArgs() {}

    private GetRouteTablePlainArgs(GetRouteTablePlainArgs $) {
        this.filters = $.filters;
        this.gatewayId = $.gatewayId;
        this.routeTableId = $.routeTableId;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteTablePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteTablePlainArgs $;

        public Builder() {
            $ = new GetRouteTablePlainArgs();
        }

        public Builder(GetRouteTablePlainArgs defaults) {
            $ = new GetRouteTablePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetRouteTableFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetRouteTableFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder gatewayId(@Nullable String gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        public Builder routeTableId(@Nullable String routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetRouteTablePlainArgs build() {
            return $;
        }
    }

}
