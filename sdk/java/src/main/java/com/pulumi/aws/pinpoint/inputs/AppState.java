// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint.inputs;

import com.pulumi.aws.pinpoint.inputs.AppCampaignHookArgs;
import com.pulumi.aws.pinpoint.inputs.AppLimitsArgs;
import com.pulumi.aws.pinpoint.inputs.AppQuietTimeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppState extends com.pulumi.resources.ResourceArgs {

    public static final AppState Empty = new AppState();

    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="campaignHook")
    private @Nullable Output<AppCampaignHookArgs> campaignHook;

    public Optional<Output<AppCampaignHookArgs>> campaignHook() {
        return Optional.ofNullable(this.campaignHook);
    }

    @Import(name="limits")
    private @Nullable Output<AppLimitsArgs> limits;

    public Optional<Output<AppLimitsArgs>> limits() {
        return Optional.ofNullable(this.limits);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="quietTime")
    private @Nullable Output<AppQuietTimeArgs> quietTime;

    public Optional<Output<AppQuietTimeArgs>> quietTime() {
        return Optional.ofNullable(this.quietTime);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private AppState() {}

    private AppState(AppState $) {
        this.applicationId = $.applicationId;
        this.arn = $.arn;
        this.campaignHook = $.campaignHook;
        this.limits = $.limits;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.quietTime = $.quietTime;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppState $;

        public Builder() {
            $ = new AppState();
        }

        public Builder(AppState defaults) {
            $ = new AppState(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder campaignHook(@Nullable Output<AppCampaignHookArgs> campaignHook) {
            $.campaignHook = campaignHook;
            return this;
        }

        public Builder campaignHook(AppCampaignHookArgs campaignHook) {
            return campaignHook(Output.of(campaignHook));
        }

        public Builder limits(@Nullable Output<AppLimitsArgs> limits) {
            $.limits = limits;
            return this;
        }

        public Builder limits(AppLimitsArgs limits) {
            return limits(Output.of(limits));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder quietTime(@Nullable Output<AppQuietTimeArgs> quietTime) {
            $.quietTime = quietTime;
            return this;
        }

        public Builder quietTime(AppQuietTimeArgs quietTime) {
            return quietTime(Output.of(quietTime));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public AppState build() {
            return $;
        }
    }

}
