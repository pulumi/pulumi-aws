// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.ContributionAnalysisDefaultsArgs;
import com.pulumi.aws.quicksight.inputs.DataLabelsOptionsArgs;
import com.pulumi.aws.quicksight.inputs.LegendOptionsArgs;
import com.pulumi.aws.quicksight.inputs.SmallMultiplesOptionsArgs;
import com.pulumi.aws.quicksight.inputs.TooltipOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualPaletteArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPieChartVisualChartConfigurationDonutOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPieChartVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPieChartVisualChartConfigurationSortConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPieChartVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPieChartVisualChartConfigurationArgs Empty = new VisualsPieChartVisualChartConfigurationArgs();

    @Import(name="categoryLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }

    @Import(name="contributionAnalysisDefaults")
    private @Nullable Output<List<ContributionAnalysisDefaultsArgs>> contributionAnalysisDefaults;

    public Optional<Output<List<ContributionAnalysisDefaultsArgs>>> contributionAnalysisDefaults() {
        return Optional.ofNullable(this.contributionAnalysisDefaults);
    }

    @Import(name="dataLabels")
    private @Nullable Output<DataLabelsOptionsArgs> dataLabels;

    public Optional<Output<DataLabelsOptionsArgs>> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }

    @Import(name="donutOptions")
    private @Nullable Output<VisualsPieChartVisualChartConfigurationDonutOptionsArgs> donutOptions;

    public Optional<Output<VisualsPieChartVisualChartConfigurationDonutOptionsArgs>> donutOptions() {
        return Optional.ofNullable(this.donutOptions);
    }

    @Import(name="fieldWells")
    private @Nullable Output<VisualsPieChartVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsPieChartVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="legend")
    private @Nullable Output<LegendOptionsArgs> legend;

    public Optional<Output<LegendOptionsArgs>> legend() {
        return Optional.ofNullable(this.legend);
    }

    @Import(name="smallMultiplesOptions")
    private @Nullable Output<SmallMultiplesOptionsArgs> smallMultiplesOptions;

    public Optional<Output<SmallMultiplesOptionsArgs>> smallMultiplesOptions() {
        return Optional.ofNullable(this.smallMultiplesOptions);
    }

    @Import(name="sortConfiguration")
    private @Nullable Output<VisualsPieChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration;

    public Optional<Output<VisualsPieChartVisualChartConfigurationSortConfigurationArgs>> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }

    @Import(name="tooltip")
    private @Nullable Output<TooltipOptionsArgs> tooltip;

    public Optional<Output<TooltipOptionsArgs>> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    @Import(name="valueLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> valueLabelOptions() {
        return Optional.ofNullable(this.valueLabelOptions);
    }

    @Import(name="visualPalette")
    private @Nullable Output<VisualPaletteArgs> visualPalette;

    public Optional<Output<VisualPaletteArgs>> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    private VisualsPieChartVisualChartConfigurationArgs() {}

    private VisualsPieChartVisualChartConfigurationArgs(VisualsPieChartVisualChartConfigurationArgs $) {
        this.categoryLabelOptions = $.categoryLabelOptions;
        this.contributionAnalysisDefaults = $.contributionAnalysisDefaults;
        this.dataLabels = $.dataLabels;
        this.donutOptions = $.donutOptions;
        this.fieldWells = $.fieldWells;
        this.legend = $.legend;
        this.smallMultiplesOptions = $.smallMultiplesOptions;
        this.sortConfiguration = $.sortConfiguration;
        this.tooltip = $.tooltip;
        this.valueLabelOptions = $.valueLabelOptions;
        this.visualPalette = $.visualPalette;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPieChartVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPieChartVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsPieChartVisualChartConfigurationArgs();
        }

        public Builder(VisualsPieChartVisualChartConfigurationArgs defaults) {
            $ = new VisualsPieChartVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder categoryLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions) {
            $.categoryLabelOptions = categoryLabelOptions;
            return this;
        }

        public Builder categoryLabelOptions(ChartAxisLabelOptionsArgs categoryLabelOptions) {
            return categoryLabelOptions(Output.of(categoryLabelOptions));
        }

        public Builder contributionAnalysisDefaults(@Nullable Output<List<ContributionAnalysisDefaultsArgs>> contributionAnalysisDefaults) {
            $.contributionAnalysisDefaults = contributionAnalysisDefaults;
            return this;
        }

        public Builder contributionAnalysisDefaults(List<ContributionAnalysisDefaultsArgs> contributionAnalysisDefaults) {
            return contributionAnalysisDefaults(Output.of(contributionAnalysisDefaults));
        }

        public Builder contributionAnalysisDefaults(ContributionAnalysisDefaultsArgs... contributionAnalysisDefaults) {
            return contributionAnalysisDefaults(List.of(contributionAnalysisDefaults));
        }

        public Builder dataLabels(@Nullable Output<DataLabelsOptionsArgs> dataLabels) {
            $.dataLabels = dataLabels;
            return this;
        }

        public Builder dataLabels(DataLabelsOptionsArgs dataLabels) {
            return dataLabels(Output.of(dataLabels));
        }

        public Builder donutOptions(@Nullable Output<VisualsPieChartVisualChartConfigurationDonutOptionsArgs> donutOptions) {
            $.donutOptions = donutOptions;
            return this;
        }

        public Builder donutOptions(VisualsPieChartVisualChartConfigurationDonutOptionsArgs donutOptions) {
            return donutOptions(Output.of(donutOptions));
        }

        public Builder fieldWells(@Nullable Output<VisualsPieChartVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsPieChartVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder legend(@Nullable Output<LegendOptionsArgs> legend) {
            $.legend = legend;
            return this;
        }

        public Builder legend(LegendOptionsArgs legend) {
            return legend(Output.of(legend));
        }

        public Builder smallMultiplesOptions(@Nullable Output<SmallMultiplesOptionsArgs> smallMultiplesOptions) {
            $.smallMultiplesOptions = smallMultiplesOptions;
            return this;
        }

        public Builder smallMultiplesOptions(SmallMultiplesOptionsArgs smallMultiplesOptions) {
            return smallMultiplesOptions(Output.of(smallMultiplesOptions));
        }

        public Builder sortConfiguration(@Nullable Output<VisualsPieChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration) {
            $.sortConfiguration = sortConfiguration;
            return this;
        }

        public Builder sortConfiguration(VisualsPieChartVisualChartConfigurationSortConfigurationArgs sortConfiguration) {
            return sortConfiguration(Output.of(sortConfiguration));
        }

        public Builder tooltip(@Nullable Output<TooltipOptionsArgs> tooltip) {
            $.tooltip = tooltip;
            return this;
        }

        public Builder tooltip(TooltipOptionsArgs tooltip) {
            return tooltip(Output.of(tooltip));
        }

        public Builder valueLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions) {
            $.valueLabelOptions = valueLabelOptions;
            return this;
        }

        public Builder valueLabelOptions(ChartAxisLabelOptionsArgs valueLabelOptions) {
            return valueLabelOptions(Output.of(valueLabelOptions));
        }

        public Builder visualPalette(@Nullable Output<VisualPaletteArgs> visualPalette) {
            $.visualPalette = visualPalette;
            return this;
        }

        public Builder visualPalette(VisualPaletteArgs visualPalette) {
            return visualPalette(Output.of(visualPalette));
        }

        public VisualsPieChartVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
