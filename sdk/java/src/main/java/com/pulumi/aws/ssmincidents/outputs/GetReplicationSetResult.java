// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssmincidents.outputs;

import com.pulumi.aws.ssmincidents.outputs.GetReplicationSetRegion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReplicationSetResult {
    /**
     * @return The Amazon Resouce Name (ARN) of the replication set.
     * 
     */
    private String arn;
    /**
     * @return The ARN of the user who created the replication set.
     * 
     */
    private String createdBy;
    /**
     * @return If `true`, the last remaining Region in a replication set can’t be deleted.
     * 
     */
    private Boolean deletionProtected;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ARN of the user who last modified the replication set.
     * 
     */
    private String lastModifiedBy;
    private List<GetReplicationSetRegion> regions;
    /**
     * @return The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     * 
     */
    private String status;
    /**
     * @return All tags applied to the replication set.
     * 
     */
    private Map<String,String> tags;

    private GetReplicationSetResult() {}
    /**
     * @return The Amazon Resouce Name (ARN) of the replication set.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The ARN of the user who created the replication set.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return If `true`, the last remaining Region in a replication set can’t be deleted.
     * 
     */
    public Boolean deletionProtected() {
        return this.deletionProtected;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ARN of the user who last modified the replication set.
     * 
     */
    public String lastModifiedBy() {
        return this.lastModifiedBy;
    }
    public List<GetReplicationSetRegion> regions() {
        return this.regions;
    }
    /**
     * @return The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return All tags applied to the replication set.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String createdBy;
        private Boolean deletionProtected;
        private String id;
        private String lastModifiedBy;
        private List<GetReplicationSetRegion> regions;
        private String status;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetReplicationSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdBy = defaults.createdBy;
    	      this.deletionProtected = defaults.deletionProtected;
    	      this.id = defaults.id;
    	      this.lastModifiedBy = defaults.lastModifiedBy;
    	      this.regions = defaults.regions;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder deletionProtected(Boolean deletionProtected) {
            if (deletionProtected == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "deletionProtected");
            }
            this.deletionProtected = deletionProtected;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedBy(String lastModifiedBy) {
            if (lastModifiedBy == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "lastModifiedBy");
            }
            this.lastModifiedBy = lastModifiedBy;
            return this;
        }
        @CustomType.Setter
        public Builder regions(List<GetReplicationSetRegion> regions) {
            if (regions == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "regions");
            }
            this.regions = regions;
            return this;
        }
        public Builder regions(GetReplicationSetRegion... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetReplicationSetResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetReplicationSetResult build() {
            final var _resultValue = new GetReplicationSetResult();
            _resultValue.arn = arn;
            _resultValue.createdBy = createdBy;
            _resultValue.deletionProtected = deletionProtected;
            _resultValue.id = id;
            _resultValue.lastModifiedBy = lastModifiedBy;
            _resultValue.regions = regions;
            _resultValue.status = status;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
