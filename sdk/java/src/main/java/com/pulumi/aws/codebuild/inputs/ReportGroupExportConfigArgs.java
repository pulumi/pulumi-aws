// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.aws.codebuild.inputs.ReportGroupExportConfigS3DestinationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReportGroupExportConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReportGroupExportConfigArgs Empty = new ReportGroupExportConfigArgs();

    @Import(name="s3Destination")
    private @Nullable Output<ReportGroupExportConfigS3DestinationArgs> s3Destination;

    public Optional<Output<ReportGroupExportConfigS3DestinationArgs>> s3Destination() {
        return Optional.ofNullable(this.s3Destination);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ReportGroupExportConfigArgs() {}

    private ReportGroupExportConfigArgs(ReportGroupExportConfigArgs $) {
        this.s3Destination = $.s3Destination;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportGroupExportConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportGroupExportConfigArgs $;

        public Builder() {
            $ = new ReportGroupExportConfigArgs();
        }

        public Builder(ReportGroupExportConfigArgs defaults) {
            $ = new ReportGroupExportConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder s3Destination(@Nullable Output<ReportGroupExportConfigS3DestinationArgs> s3Destination) {
            $.s3Destination = s3Destination;
            return this;
        }

        public Builder s3Destination(ReportGroupExportConfigS3DestinationArgs s3Destination) {
            return s3Destination(Output.of(s3Destination));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ReportGroupExportConfigArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
