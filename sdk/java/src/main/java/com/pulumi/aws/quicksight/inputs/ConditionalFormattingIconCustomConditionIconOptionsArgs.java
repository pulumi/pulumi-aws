// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConditionalFormattingIconCustomConditionIconOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalFormattingIconCustomConditionIconOptionsArgs Empty = new ConditionalFormattingIconCustomConditionIconOptionsArgs();

    @Import(name="icon")
    private @Nullable Output<String> icon;

    public Optional<Output<String>> icon() {
        return Optional.ofNullable(this.icon);
    }

    @Import(name="unicodeIcon")
    private @Nullable Output<String> unicodeIcon;

    public Optional<Output<String>> unicodeIcon() {
        return Optional.ofNullable(this.unicodeIcon);
    }

    private ConditionalFormattingIconCustomConditionIconOptionsArgs() {}

    private ConditionalFormattingIconCustomConditionIconOptionsArgs(ConditionalFormattingIconCustomConditionIconOptionsArgs $) {
        this.icon = $.icon;
        this.unicodeIcon = $.unicodeIcon;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConditionalFormattingIconCustomConditionIconOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConditionalFormattingIconCustomConditionIconOptionsArgs $;

        public Builder() {
            $ = new ConditionalFormattingIconCustomConditionIconOptionsArgs();
        }

        public Builder(ConditionalFormattingIconCustomConditionIconOptionsArgs defaults) {
            $ = new ConditionalFormattingIconCustomConditionIconOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder icon(@Nullable Output<String> icon) {
            $.icon = icon;
            return this;
        }

        public Builder icon(String icon) {
            return icon(Output.of(icon));
        }

        public Builder unicodeIcon(@Nullable Output<String> unicodeIcon) {
            $.unicodeIcon = unicodeIcon;
            return this;
        }

        public Builder unicodeIcon(String unicodeIcon) {
            return unicodeIcon(Output.of(unicodeIcon));
        }

        public ConditionalFormattingIconCustomConditionIconOptionsArgs build() {
            return $;
        }
    }

}
