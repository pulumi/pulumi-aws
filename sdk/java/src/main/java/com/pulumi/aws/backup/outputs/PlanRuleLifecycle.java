// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PlanRuleLifecycle {
    /**
     * @return Specifies the number of days after creation that a recovery point is moved to cold storage.
     * 
     */
    private @Nullable Integer coldStorageAfter;
    /**
     * @return Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `cold_storage_after`.
     * 
     */
    private @Nullable Integer deleteAfter;
    /**
     * @return This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
     * 
     */
    private @Nullable Boolean optInToArchiveForSupportedResources;

    private PlanRuleLifecycle() {}
    /**
     * @return Specifies the number of days after creation that a recovery point is moved to cold storage.
     * 
     */
    public Optional<Integer> coldStorageAfter() {
        return Optional.ofNullable(this.coldStorageAfter);
    }
    /**
     * @return Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `cold_storage_after`.
     * 
     */
    public Optional<Integer> deleteAfter() {
        return Optional.ofNullable(this.deleteAfter);
    }
    /**
     * @return This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
     * 
     */
    public Optional<Boolean> optInToArchiveForSupportedResources() {
        return Optional.ofNullable(this.optInToArchiveForSupportedResources);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlanRuleLifecycle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer coldStorageAfter;
        private @Nullable Integer deleteAfter;
        private @Nullable Boolean optInToArchiveForSupportedResources;
        public Builder() {}
        public Builder(PlanRuleLifecycle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coldStorageAfter = defaults.coldStorageAfter;
    	      this.deleteAfter = defaults.deleteAfter;
    	      this.optInToArchiveForSupportedResources = defaults.optInToArchiveForSupportedResources;
        }

        @CustomType.Setter
        public Builder coldStorageAfter(@Nullable Integer coldStorageAfter) {

            this.coldStorageAfter = coldStorageAfter;
            return this;
        }
        @CustomType.Setter
        public Builder deleteAfter(@Nullable Integer deleteAfter) {

            this.deleteAfter = deleteAfter;
            return this;
        }
        @CustomType.Setter
        public Builder optInToArchiveForSupportedResources(@Nullable Boolean optInToArchiveForSupportedResources) {

            this.optInToArchiveForSupportedResources = optInToArchiveForSupportedResources;
            return this;
        }
        public PlanRuleLifecycle build() {
            final var _resultValue = new PlanRuleLifecycle();
            _resultValue.coldStorageAfter = coldStorageAfter;
            _resultValue.deleteAfter = deleteAfter;
            _resultValue.optInToArchiveForSupportedResources = optInToArchiveForSupportedResources;
            return _resultValue;
        }
    }
}
