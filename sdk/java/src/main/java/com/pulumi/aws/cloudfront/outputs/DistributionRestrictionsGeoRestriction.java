// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DistributionRestrictionsGeoRestriction {
    /**
     * @return [ISO 3166-1-alpha-2 codes][4] for which you want CloudFront either to distribute your content (`whitelist`) or not distribute your content (`blacklist`). If the type is specified as `none` an empty array can be used.
     * 
     */
    private @Nullable List<String> locations;
    /**
     * @return Method that you want to use to restrict distribution of your content by country: `none`, `whitelist`, or `blacklist`.
     * 
     */
    private String restrictionType;

    private DistributionRestrictionsGeoRestriction() {}
    /**
     * @return [ISO 3166-1-alpha-2 codes][4] for which you want CloudFront either to distribute your content (`whitelist`) or not distribute your content (`blacklist`). If the type is specified as `none` an empty array can be used.
     * 
     */
    public List<String> locations() {
        return this.locations == null ? List.of() : this.locations;
    }
    /**
     * @return Method that you want to use to restrict distribution of your content by country: `none`, `whitelist`, or `blacklist`.
     * 
     */
    public String restrictionType() {
        return this.restrictionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionRestrictionsGeoRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> locations;
        private String restrictionType;
        public Builder() {}
        public Builder(DistributionRestrictionsGeoRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
    	      this.restrictionType = defaults.restrictionType;
        }

        @CustomType.Setter
        public Builder locations(@Nullable List<String> locations) {

            this.locations = locations;
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder restrictionType(String restrictionType) {
            if (restrictionType == null) {
              throw new MissingRequiredPropertyException("DistributionRestrictionsGeoRestriction", "restrictionType");
            }
            this.restrictionType = restrictionType;
            return this;
        }
        public DistributionRestrictionsGeoRestriction build() {
            final var _resultValue = new DistributionRestrictionsGeoRestriction();
            _resultValue.locations = locations;
            _resultValue.restrictionType = restrictionType;
            return _resultValue;
        }
    }
}
