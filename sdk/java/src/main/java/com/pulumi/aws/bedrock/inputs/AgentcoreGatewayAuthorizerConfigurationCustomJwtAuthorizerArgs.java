// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs Empty = new AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs();

    /**
     * Set of allowed audience values for JWT token validation.
     * 
     */
    @Import(name="allowedAudiences")
    private @Nullable Output<List<String>> allowedAudiences;

    /**
     * @return Set of allowed audience values for JWT token validation.
     * 
     */
    public Optional<Output<List<String>>> allowedAudiences() {
        return Optional.ofNullable(this.allowedAudiences);
    }

    /**
     * Set of allowed client IDs for JWT token validation.
     * 
     */
    @Import(name="allowedClients")
    private @Nullable Output<List<String>> allowedClients;

    /**
     * @return Set of allowed client IDs for JWT token validation.
     * 
     */
    public Optional<Output<List<String>>> allowedClients() {
        return Optional.ofNullable(this.allowedClients);
    }

    /**
     * URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
     * 
     */
    @Import(name="discoveryUrl", required=true)
    private Output<String> discoveryUrl;

    /**
     * @return URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
     * 
     */
    public Output<String> discoveryUrl() {
        return this.discoveryUrl;
    }

    private AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs() {}

    private AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs(AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs $) {
        this.allowedAudiences = $.allowedAudiences;
        this.allowedClients = $.allowedClients;
        this.discoveryUrl = $.discoveryUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs $;

        public Builder() {
            $ = new AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs();
        }

        public Builder(AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs defaults) {
            $ = new AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAudiences Set of allowed audience values for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(@Nullable Output<List<String>> allowedAudiences) {
            $.allowedAudiences = allowedAudiences;
            return this;
        }

        /**
         * @param allowedAudiences Set of allowed audience values for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(List<String> allowedAudiences) {
            return allowedAudiences(Output.of(allowedAudiences));
        }

        /**
         * @param allowedAudiences Set of allowed audience values for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }

        /**
         * @param allowedClients Set of allowed client IDs for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(@Nullable Output<List<String>> allowedClients) {
            $.allowedClients = allowedClients;
            return this;
        }

        /**
         * @param allowedClients Set of allowed client IDs for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(List<String> allowedClients) {
            return allowedClients(Output.of(allowedClients));
        }

        /**
         * @param allowedClients Set of allowed client IDs for JWT token validation.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }

        /**
         * @param discoveryUrl URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(Output<String> discoveryUrl) {
            $.discoveryUrl = discoveryUrl;
            return this;
        }

        /**
         * @param discoveryUrl URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(String discoveryUrl) {
            return discoveryUrl(Output.of(discoveryUrl));
        }

        public AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs build() {
            if ($.discoveryUrl == null) {
                throw new MissingRequiredPropertyException("AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs", "discoveryUrl");
            }
            return $;
        }
    }

}
