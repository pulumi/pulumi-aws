// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPortfolioConstraintsDetail {
    /**
     * @return Identifier of the constraint.
     * 
     */
    private @Nullable String constraintId;
    /**
     * @return Description of the constraint.
     * 
     */
    private @Nullable String description;
    private @Nullable String owner;
    /**
     * @return Portfolio identifier.
     * 
     * The following arguments are optional:
     * 
     */
    private @Nullable String portfolioId;
    /**
     * @return Product identifier.
     * 
     */
    private @Nullable String productId;
    /**
     * @return Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    private @Nullable String type;

    private GetPortfolioConstraintsDetail() {}
    /**
     * @return Identifier of the constraint.
     * 
     */
    public Optional<String> constraintId() {
        return Optional.ofNullable(this.constraintId);
    }
    /**
     * @return Description of the constraint.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Portfolio identifier.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<String> portfolioId() {
        return Optional.ofNullable(this.portfolioId);
    }
    /**
     * @return Product identifier.
     * 
     */
    public Optional<String> productId() {
        return Optional.ofNullable(this.productId);
    }
    /**
     * @return Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPortfolioConstraintsDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String constraintId;
        private @Nullable String description;
        private @Nullable String owner;
        private @Nullable String portfolioId;
        private @Nullable String productId;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetPortfolioConstraintsDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constraintId = defaults.constraintId;
    	      this.description = defaults.description;
    	      this.owner = defaults.owner;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder constraintId(@Nullable String constraintId) {
            this.constraintId = constraintId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder portfolioId(@Nullable String portfolioId) {
            this.portfolioId = portfolioId;
            return this;
        }
        @CustomType.Setter
        public Builder productId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetPortfolioConstraintsDetail build() {
            final var o = new GetPortfolioConstraintsDetail();
            o.constraintId = constraintId;
            o.description = description;
            o.owner = owner;
            o.portfolioId = portfolioId;
            o.productId = productId;
            o.type = type;
            return o;
        }
    }
}
