// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GridLayoutElement {
    private @Nullable String columnIndex;
    private Integer columnSpan;
    private String elementId;
    private String elementType;
    private @Nullable String rowIndex;
    private Integer rowSpan;

    private GridLayoutElement() {}
    public Optional<String> columnIndex() {
        return Optional.ofNullable(this.columnIndex);
    }
    public Integer columnSpan() {
        return this.columnSpan;
    }
    public String elementId() {
        return this.elementId;
    }
    public String elementType() {
        return this.elementType;
    }
    public Optional<String> rowIndex() {
        return Optional.ofNullable(this.rowIndex);
    }
    public Integer rowSpan() {
        return this.rowSpan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GridLayoutElement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String columnIndex;
        private Integer columnSpan;
        private String elementId;
        private String elementType;
        private @Nullable String rowIndex;
        private Integer rowSpan;
        public Builder() {}
        public Builder(GridLayoutElement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnIndex = defaults.columnIndex;
    	      this.columnSpan = defaults.columnSpan;
    	      this.elementId = defaults.elementId;
    	      this.elementType = defaults.elementType;
    	      this.rowIndex = defaults.rowIndex;
    	      this.rowSpan = defaults.rowSpan;
        }

        @CustomType.Setter
        public Builder columnIndex(@Nullable String columnIndex) {

            this.columnIndex = columnIndex;
            return this;
        }
        @CustomType.Setter
        public Builder columnSpan(Integer columnSpan) {
            if (columnSpan == null) {
              throw new MissingRequiredPropertyException("GridLayoutElement", "columnSpan");
            }
            this.columnSpan = columnSpan;
            return this;
        }
        @CustomType.Setter
        public Builder elementId(String elementId) {
            if (elementId == null) {
              throw new MissingRequiredPropertyException("GridLayoutElement", "elementId");
            }
            this.elementId = elementId;
            return this;
        }
        @CustomType.Setter
        public Builder elementType(String elementType) {
            if (elementType == null) {
              throw new MissingRequiredPropertyException("GridLayoutElement", "elementType");
            }
            this.elementType = elementType;
            return this;
        }
        @CustomType.Setter
        public Builder rowIndex(@Nullable String rowIndex) {

            this.rowIndex = rowIndex;
            return this;
        }
        @CustomType.Setter
        public Builder rowSpan(Integer rowSpan) {
            if (rowSpan == null) {
              throw new MissingRequiredPropertyException("GridLayoutElement", "rowSpan");
            }
            this.rowSpan = rowSpan;
            return this;
        }
        public GridLayoutElement build() {
            final var _resultValue = new GridLayoutElement();
            _resultValue.columnIndex = columnIndex;
            _resultValue.columnSpan = columnSpan;
            _resultValue.elementId = elementId;
            _resultValue.elementType = elementType;
            _resultValue.rowIndex = rowIndex;
            _resultValue.rowSpan = rowSpan;
            return _resultValue;
        }
    }
}
