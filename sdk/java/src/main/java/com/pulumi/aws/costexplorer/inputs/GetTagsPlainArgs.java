// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.inputs;

import com.pulumi.aws.costexplorer.inputs.GetTagsFilter;
import com.pulumi.aws.costexplorer.inputs.GetTagsSortBy;
import com.pulumi.aws.costexplorer.inputs.GetTagsTimePeriod;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagsPlainArgs Empty = new GetTagsPlainArgs();

    /**
     * Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    @Import(name="filter")
    private @Nullable GetTagsFilter filter;

    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    public Optional<GetTagsFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Value that you want to search for.
     * 
     */
    @Import(name="searchString")
    private @Nullable String searchString;

    /**
     * @return Value that you want to search for.
     * 
     */
    public Optional<String> searchString() {
        return Optional.ofNullable(this.searchString);
    }

    /**
     * Configuration block for the value by which you want to sort the data. See below.
     * 
     */
    @Import(name="sortBies")
    private @Nullable List<GetTagsSortBy> sortBies;

    /**
     * @return Configuration block for the value by which you want to sort the data. See below.
     * 
     */
    public Optional<List<GetTagsSortBy>> sortBies() {
        return Optional.ofNullable(this.sortBies);
    }

    /**
     * Key of the tag that you want to return values for.
     * 
     */
    @Import(name="tagKey")
    private @Nullable String tagKey;

    /**
     * @return Key of the tag that you want to return values for.
     * 
     */
    public Optional<String> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    /**
     * Configuration block for the start and end dates for retrieving the dimension values.
     * 
     */
    @Import(name="timePeriod", required=true)
    private GetTagsTimePeriod timePeriod;

    /**
     * @return Configuration block for the start and end dates for retrieving the dimension values.
     * 
     */
    public GetTagsTimePeriod timePeriod() {
        return this.timePeriod;
    }

    private GetTagsPlainArgs() {}

    private GetTagsPlainArgs(GetTagsPlainArgs $) {
        this.filter = $.filter;
        this.searchString = $.searchString;
        this.sortBies = $.sortBies;
        this.tagKey = $.tagKey;
        this.timePeriod = $.timePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagsPlainArgs $;

        public Builder() {
            $ = new GetTagsPlainArgs();
        }

        public Builder(GetTagsPlainArgs defaults) {
            $ = new GetTagsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Configuration block for the `Expression` object used to categorize costs. See below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable GetTagsFilter filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param searchString Value that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder searchString(@Nullable String searchString) {
            $.searchString = searchString;
            return this;
        }

        /**
         * @param sortBies Configuration block for the value by which you want to sort the data. See below.
         * 
         * @return builder
         * 
         */
        public Builder sortBies(@Nullable List<GetTagsSortBy> sortBies) {
            $.sortBies = sortBies;
            return this;
        }

        /**
         * @param sortBies Configuration block for the value by which you want to sort the data. See below.
         * 
         * @return builder
         * 
         */
        public Builder sortBies(GetTagsSortBy... sortBies) {
            return sortBies(List.of(sortBies));
        }

        /**
         * @param tagKey Key of the tag that you want to return values for.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(@Nullable String tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        /**
         * @param timePeriod Configuration block for the start and end dates for retrieving the dimension values.
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(GetTagsTimePeriod timePeriod) {
            $.timePeriod = timePeriod;
            return this;
        }

        public GetTagsPlainArgs build() {
            $.timePeriod = Objects.requireNonNull($.timePeriod, "expected parameter 'timePeriod' to be non-null");
            return $;
        }
    }

}
