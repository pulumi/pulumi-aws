// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs Empty = new FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs();

    /**
     * Name of the Amazon S3 bucket.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return Name of the Amazon S3 bucket.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * Amazon S3 bucket prefix.
     * 
     */
    @Import(name="bucketPrefix")
    private @Nullable Output<String> bucketPrefix;

    /**
     * @return Amazon S3 bucket prefix.
     * 
     */
    public Optional<Output<String>> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    /**
     * Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
     * 
     */
    @Import(name="s3OutputFormatConfig", required=true)
    private Output<FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs> s3OutputFormatConfig;

    /**
     * @return Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
     * 
     */
    public Output<FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs> s3OutputFormatConfig() {
        return this.s3OutputFormatConfig;
    }

    private FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs() {}

    private FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs $) {
        this.bucketName = $.bucketName;
        this.bucketPrefix = $.bucketPrefix;
        this.s3OutputFormatConfig = $.s3OutputFormatConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs $;

        public Builder() {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs();
        }

        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs defaults) {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName Name of the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName Name of the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param bucketPrefix Amazon S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        /**
         * @param bucketPrefix Amazon S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        /**
         * @param s3OutputFormatConfig Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputFormatConfig(Output<FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs> s3OutputFormatConfig) {
            $.s3OutputFormatConfig = s3OutputFormatConfig;
            return this;
        }

        /**
         * @param s3OutputFormatConfig Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputFormatConfig(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs s3OutputFormatConfig) {
            return s3OutputFormatConfig(Output.of(s3OutputFormatConfig));
        }

        public FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs build() {
            if ($.bucketName == null) {
                throw new MissingRequiredPropertyException("FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs", "bucketName");
            }
            if ($.s3OutputFormatConfig == null) {
                throw new MissingRequiredPropertyException("FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs", "s3OutputFormatConfig");
            }
            return $;
        }
    }

}
