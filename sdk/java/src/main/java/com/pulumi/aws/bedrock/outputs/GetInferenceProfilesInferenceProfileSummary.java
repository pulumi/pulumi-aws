// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.GetInferenceProfilesInferenceProfileSummaryModel;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInferenceProfilesInferenceProfileSummary {
    /**
     * @return The time at which the inference profile was created.
     * 
     */
    private String createdAt;
    /**
     * @return The description of the inference profile.
     * 
     */
    private String description;
    /**
     * @return The Amazon Resource Name (ARN) of the inference profile.
     * 
     */
    private String inferenceProfileArn;
    /**
     * @return The unique identifier of the inference profile.
     * 
     */
    private String inferenceProfileId;
    /**
     * @return The name of the inference profile.
     * 
     */
    private String inferenceProfileName;
    /**
     * @return A list of information about each model in the inference profile. See `models`.
     * 
     */
    private List<GetInferenceProfilesInferenceProfileSummaryModel> models;
    /**
     * @return The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
     * 
     */
    private String status;
    /**
     * @return The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock.
     * 
     */
    private String type;
    /**
     * @return The time at which the inference profile was last updated.
     * 
     */
    private String updatedAt;

    private GetInferenceProfilesInferenceProfileSummary() {}
    /**
     * @return The time at which the inference profile was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The description of the inference profile.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the inference profile.
     * 
     */
    public String inferenceProfileArn() {
        return this.inferenceProfileArn;
    }
    /**
     * @return The unique identifier of the inference profile.
     * 
     */
    public String inferenceProfileId() {
        return this.inferenceProfileId;
    }
    /**
     * @return The name of the inference profile.
     * 
     */
    public String inferenceProfileName() {
        return this.inferenceProfileName;
    }
    /**
     * @return A list of information about each model in the inference profile. See `models`.
     * 
     */
    public List<GetInferenceProfilesInferenceProfileSummaryModel> models() {
        return this.models;
    }
    /**
     * @return The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The time at which the inference profile was last updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInferenceProfilesInferenceProfileSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String description;
        private String inferenceProfileArn;
        private String inferenceProfileId;
        private String inferenceProfileName;
        private List<GetInferenceProfilesInferenceProfileSummaryModel> models;
        private String status;
        private String type;
        private String updatedAt;
        public Builder() {}
        public Builder(GetInferenceProfilesInferenceProfileSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.inferenceProfileArn = defaults.inferenceProfileArn;
    	      this.inferenceProfileId = defaults.inferenceProfileId;
    	      this.inferenceProfileName = defaults.inferenceProfileName;
    	      this.models = defaults.models;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceProfileArn(String inferenceProfileArn) {
            if (inferenceProfileArn == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "inferenceProfileArn");
            }
            this.inferenceProfileArn = inferenceProfileArn;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceProfileId(String inferenceProfileId) {
            if (inferenceProfileId == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "inferenceProfileId");
            }
            this.inferenceProfileId = inferenceProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceProfileName(String inferenceProfileName) {
            if (inferenceProfileName == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "inferenceProfileName");
            }
            this.inferenceProfileName = inferenceProfileName;
            return this;
        }
        @CustomType.Setter
        public Builder models(List<GetInferenceProfilesInferenceProfileSummaryModel> models) {
            if (models == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "models");
            }
            this.models = models;
            return this;
        }
        public Builder models(GetInferenceProfilesInferenceProfileSummaryModel... models) {
            return models(List.of(models));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesInferenceProfileSummary", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetInferenceProfilesInferenceProfileSummary build() {
            final var _resultValue = new GetInferenceProfilesInferenceProfileSummary();
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.inferenceProfileArn = inferenceProfileArn;
            _resultValue.inferenceProfileId = inferenceProfileId;
            _resultValue.inferenceProfileName = inferenceProfileName;
            _resultValue.models = models;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
