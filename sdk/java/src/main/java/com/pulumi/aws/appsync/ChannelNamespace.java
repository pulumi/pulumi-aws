// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.appsync.ChannelNamespaceArgs;
import com.pulumi.aws.appsync.inputs.ChannelNamespaceState;
import com.pulumi.aws.appsync.outputs.ChannelNamespaceHandlerConfigs;
import com.pulumi.aws.appsync.outputs.ChannelNamespacePublishAuthMode;
import com.pulumi.aws.appsync.outputs.ChannelNamespaceSubscribeAuthMode;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an [AWS AppSync Channel Namespace](https://docs.aws.amazon.com/appsync/latest/eventapi/event-api-concepts.html#namespace).
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.appsync.ChannelNamespace;
 * import com.pulumi.aws.appsync.ChannelNamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ChannelNamespace("example", ChannelNamespaceArgs.builder()
 *             .name("example-channel-namespace")
 *             .apiId(exampleAwsAppsyncApi.apiId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import AppSync Channel Namespace using the `api_id` and `name` separated by a comma (`,`). For example:
 * 
 * ```sh
 * $ pulumi import aws:appsync/channelNamespace:ChannelNamespace example example-api-id,example-channel-namespace
 * ```
 * 
 */
@ResourceType(type="aws:appsync/channelNamespace:ChannelNamespace")
public class ChannelNamespace extends com.pulumi.resources.CustomResource {
    /**
     * Event API ID.
     * 
     */
    @Export(name="apiId", refs={String.class}, tree="[0]")
    private Output<String> apiId;

    /**
     * @return Event API ID.
     * 
     */
    public Output<String> apiId() {
        return this.apiId;
    }
    /**
     * ARN of the channel namespace.
     * 
     */
    @Export(name="channelNamespaceArn", refs={String.class}, tree="[0]")
    private Output<String> channelNamespaceArn;

    /**
     * @return ARN of the channel namespace.
     * 
     */
    public Output<String> channelNamespaceArn() {
        return this.channelNamespaceArn;
    }
    /**
     * Event handler functions that run custom business logic to process published events and subscribe requests.
     * 
     */
    @Export(name="codeHandlers", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> codeHandlers;

    /**
     * @return Event handler functions that run custom business logic to process published events and subscribe requests.
     * 
     */
    public Output<Optional<String>> codeHandlers() {
        return Codegen.optional(this.codeHandlers);
    }
    /**
     * Configuration for the `on_publish` and `on_subscribe` handlers. See Handler Configs below.
     * 
     */
    @Export(name="handlerConfigs", refs={ChannelNamespaceHandlerConfigs.class}, tree="[0]")
    private Output</* @Nullable */ ChannelNamespaceHandlerConfigs> handlerConfigs;

    /**
     * @return Configuration for the `on_publish` and `on_subscribe` handlers. See Handler Configs below.
     * 
     */
    public Output<Optional<ChannelNamespaceHandlerConfigs>> handlerConfigs() {
        return Codegen.optional(this.handlerConfigs);
    }
    /**
     * Name of the channel namespace.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the channel namespace.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Authorization modes to use for publishing messages on the channel namespace. This configuration overrides the default API authorization configuration. See Auth Modes below.
     * 
     */
    @Export(name="publishAuthModes", refs={List.class,ChannelNamespacePublishAuthMode.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ChannelNamespacePublishAuthMode>> publishAuthModes;

    /**
     * @return Authorization modes to use for publishing messages on the channel namespace. This configuration overrides the default API authorization configuration. See Auth Modes below.
     * 
     */
    public Output<Optional<List<ChannelNamespacePublishAuthMode>>> publishAuthModes() {
        return Codegen.optional(this.publishAuthModes);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Authorization modes to use for subscribing to messages on the channel namespace. This configuration overrides the default API authorization configuration. See Auth Modes below.
     * 
     */
    @Export(name="subscribeAuthModes", refs={List.class,ChannelNamespaceSubscribeAuthMode.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ChannelNamespaceSubscribeAuthMode>> subscribeAuthModes;

    /**
     * @return Authorization modes to use for subscribing to messages on the channel namespace. This configuration overrides the default API authorization configuration. See Auth Modes below.
     * 
     */
    public Output<Optional<List<ChannelNamespaceSubscribeAuthMode>>> subscribeAuthModes() {
        return Codegen.optional(this.subscribeAuthModes);
    }
    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ChannelNamespace(java.lang.String name) {
        this(name, ChannelNamespaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ChannelNamespace(java.lang.String name, ChannelNamespaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ChannelNamespace(java.lang.String name, ChannelNamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/channelNamespace:ChannelNamespace", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ChannelNamespace(java.lang.String name, Output<java.lang.String> id, @Nullable ChannelNamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/channelNamespace:ChannelNamespace", name, state, makeResourceOptions(options, id), false);
    }

    private static ChannelNamespaceArgs makeArgs(ChannelNamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ChannelNamespaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ChannelNamespace get(java.lang.String name, Output<java.lang.String> id, @Nullable ChannelNamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ChannelNamespace(name, id, state, options);
    }
}
