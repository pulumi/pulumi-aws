// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amp.inputs;

import com.pulumi.aws.amp.inputs.QueryLoggingConfigurationDestinationCloudwatchLogsArgs;
import com.pulumi.aws.amp.inputs.QueryLoggingConfigurationDestinationFiltersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueryLoggingConfigurationDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueryLoggingConfigurationDestinationArgs Empty = new QueryLoggingConfigurationDestinationArgs();

    /**
     * Configuration block for CloudWatch Logs destination. See `cloudwatch_logs`.
     * 
     */
    @Import(name="cloudwatchLogs")
    private @Nullable Output<QueryLoggingConfigurationDestinationCloudwatchLogsArgs> cloudwatchLogs;

    /**
     * @return Configuration block for CloudWatch Logs destination. See `cloudwatch_logs`.
     * 
     */
    public Optional<Output<QueryLoggingConfigurationDestinationCloudwatchLogsArgs>> cloudwatchLogs() {
        return Optional.ofNullable(this.cloudwatchLogs);
    }

    /**
     * A list of filter configurations that specify which logs should be sent to the destination. See `filters`.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<QueryLoggingConfigurationDestinationFiltersArgs> filters;

    /**
     * @return A list of filter configurations that specify which logs should be sent to the destination. See `filters`.
     * 
     */
    public Optional<Output<QueryLoggingConfigurationDestinationFiltersArgs>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private QueryLoggingConfigurationDestinationArgs() {}

    private QueryLoggingConfigurationDestinationArgs(QueryLoggingConfigurationDestinationArgs $) {
        this.cloudwatchLogs = $.cloudwatchLogs;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryLoggingConfigurationDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryLoggingConfigurationDestinationArgs $;

        public Builder() {
            $ = new QueryLoggingConfigurationDestinationArgs();
        }

        public Builder(QueryLoggingConfigurationDestinationArgs defaults) {
            $ = new QueryLoggingConfigurationDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudwatchLogs Configuration block for CloudWatch Logs destination. See `cloudwatch_logs`.
         * 
         * @return builder
         * 
         */
        public Builder cloudwatchLogs(@Nullable Output<QueryLoggingConfigurationDestinationCloudwatchLogsArgs> cloudwatchLogs) {
            $.cloudwatchLogs = cloudwatchLogs;
            return this;
        }

        /**
         * @param cloudwatchLogs Configuration block for CloudWatch Logs destination. See `cloudwatch_logs`.
         * 
         * @return builder
         * 
         */
        public Builder cloudwatchLogs(QueryLoggingConfigurationDestinationCloudwatchLogsArgs cloudwatchLogs) {
            return cloudwatchLogs(Output.of(cloudwatchLogs));
        }

        /**
         * @param filters A list of filter configurations that specify which logs should be sent to the destination. See `filters`.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<QueryLoggingConfigurationDestinationFiltersArgs> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters A list of filter configurations that specify which logs should be sent to the destination. See `filters`.
         * 
         * @return builder
         * 
         */
        public Builder filters(QueryLoggingConfigurationDestinationFiltersArgs filters) {
            return filters(Output.of(filters));
        }

        public QueryLoggingConfigurationDestinationArgs build() {
            return $;
        }
    }

}
