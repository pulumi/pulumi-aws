// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fis.inputs;

import com.pulumi.aws.fis.inputs.ExperimentTemplateTargetFilterArgs;
import com.pulumi.aws.fis.inputs.ExperimentTemplateTargetResourceTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentTemplateTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentTemplateTargetArgs Empty = new ExperimentTemplateTargetArgs();

    @Import(name="filters")
    private @Nullable Output<List<ExperimentTemplateTargetFilterArgs>> filters;

    public Optional<Output<List<ExperimentTemplateTargetFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="resourceArns")
    private @Nullable Output<List<String>> resourceArns;

    public Optional<Output<List<String>>> resourceArns() {
        return Optional.ofNullable(this.resourceArns);
    }

    @Import(name="resourceTags")
    private @Nullable Output<List<ExperimentTemplateTargetResourceTagArgs>> resourceTags;

    public Optional<Output<List<ExperimentTemplateTargetResourceTagArgs>>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    @Import(name="selectionMode", required=true)
    private Output<String> selectionMode;

    public Output<String> selectionMode() {
        return this.selectionMode;
    }

    private ExperimentTemplateTargetArgs() {}

    private ExperimentTemplateTargetArgs(ExperimentTemplateTargetArgs $) {
        this.filters = $.filters;
        this.name = $.name;
        this.resourceArns = $.resourceArns;
        this.resourceTags = $.resourceTags;
        this.resourceType = $.resourceType;
        this.selectionMode = $.selectionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentTemplateTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentTemplateTargetArgs $;

        public Builder() {
            $ = new ExperimentTemplateTargetArgs();
        }

        public Builder(ExperimentTemplateTargetArgs defaults) {
            $ = new ExperimentTemplateTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<ExperimentTemplateTargetFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<ExperimentTemplateTargetFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(ExperimentTemplateTargetFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceArns(@Nullable Output<List<String>> resourceArns) {
            $.resourceArns = resourceArns;
            return this;
        }

        public Builder resourceArns(List<String> resourceArns) {
            return resourceArns(Output.of(resourceArns));
        }

        public Builder resourceArns(String... resourceArns) {
            return resourceArns(List.of(resourceArns));
        }

        public Builder resourceTags(@Nullable Output<List<ExperimentTemplateTargetResourceTagArgs>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        public Builder resourceTags(List<ExperimentTemplateTargetResourceTagArgs> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public Builder resourceTags(ExperimentTemplateTargetResourceTagArgs... resourceTags) {
            return resourceTags(List.of(resourceTags));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder selectionMode(Output<String> selectionMode) {
            $.selectionMode = selectionMode;
            return this;
        }

        public Builder selectionMode(String selectionMode) {
            return selectionMode(Output.of(selectionMode));
        }

        public ExperimentTemplateTargetArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.selectionMode = Objects.requireNonNull($.selectionMode, "expected parameter 'selectionMode' to be non-null");
            return $;
        }
    }

}
