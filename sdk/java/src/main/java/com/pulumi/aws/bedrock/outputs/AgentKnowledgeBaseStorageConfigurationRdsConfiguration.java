// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentKnowledgeBaseStorageConfigurationRdsConfiguration {
    /**
     * @return The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    private String credentialsSecretArn;
    /**
     * @return The name of your Amazon RDS database.
     * 
     */
    private String databaseName;
    /**
     * @return Contains the names of the fields to which to map information about the vector store.
     * 
     */
    private @Nullable AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMapping fieldMapping;
    /**
     * @return The namespace to be used to write new data to your database.
     * 
     */
    private String resourceArn;
    /**
     * @return The name of the table in the database.
     * 
     */
    private String tableName;

    private AgentKnowledgeBaseStorageConfigurationRdsConfiguration() {}
    /**
     * @return The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
     * 
     */
    public String credentialsSecretArn() {
        return this.credentialsSecretArn;
    }
    /**
     * @return The name of your Amazon RDS database.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return Contains the names of the fields to which to map information about the vector store.
     * 
     */
    public Optional<AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMapping> fieldMapping() {
        return Optional.ofNullable(this.fieldMapping);
    }
    /**
     * @return The namespace to be used to write new data to your database.
     * 
     */
    public String resourceArn() {
        return this.resourceArn;
    }
    /**
     * @return The name of the table in the database.
     * 
     */
    public String tableName() {
        return this.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentKnowledgeBaseStorageConfigurationRdsConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credentialsSecretArn;
        private String databaseName;
        private @Nullable AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMapping fieldMapping;
        private String resourceArn;
        private String tableName;
        public Builder() {}
        public Builder(AgentKnowledgeBaseStorageConfigurationRdsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialsSecretArn = defaults.credentialsSecretArn;
    	      this.databaseName = defaults.databaseName;
    	      this.fieldMapping = defaults.fieldMapping;
    	      this.resourceArn = defaults.resourceArn;
    	      this.tableName = defaults.tableName;
        }

        @CustomType.Setter
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            if (credentialsSecretArn == null) {
              throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfiguration", "credentialsSecretArn");
            }
            this.credentialsSecretArn = credentialsSecretArn;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            if (databaseName == null) {
              throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfiguration", "databaseName");
            }
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder fieldMapping(@Nullable AgentKnowledgeBaseStorageConfigurationRdsConfigurationFieldMapping fieldMapping) {

            this.fieldMapping = fieldMapping;
            return this;
        }
        @CustomType.Setter
        public Builder resourceArn(String resourceArn) {
            if (resourceArn == null) {
              throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfiguration", "resourceArn");
            }
            this.resourceArn = resourceArn;
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            if (tableName == null) {
              throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationRdsConfiguration", "tableName");
            }
            this.tableName = tableName;
            return this;
        }
        public AgentKnowledgeBaseStorageConfigurationRdsConfiguration build() {
            final var _resultValue = new AgentKnowledgeBaseStorageConfigurationRdsConfiguration();
            _resultValue.credentialsSecretArn = credentialsSecretArn;
            _resultValue.databaseName = databaseName;
            _resultValue.fieldMapping = fieldMapping;
            _resultValue.resourceArn = resourceArn;
            _resultValue.tableName = tableName;
            return _resultValue;
        }
    }
}
