// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamedQueryResult {
    /**
     * @return Database to which the query belongs.
     * 
     */
    private String database;
    /**
     * @return Brief explanation of the query.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String querystring;
    private @Nullable String workgroup;

    private GetNamedQueryResult() {}
    /**
     * @return Database to which the query belongs.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return Brief explanation of the query.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String querystring() {
        return this.querystring;
    }
    public Optional<String> workgroup() {
        return Optional.ofNullable(this.workgroup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamedQueryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String database;
        private String description;
        private String id;
        private String name;
        private String querystring;
        private @Nullable String workgroup;
        public Builder() {}
        public Builder(GetNamedQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.database = defaults.database;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.querystring = defaults.querystring;
    	      this.workgroup = defaults.workgroup;
        }

        @CustomType.Setter
        public Builder database(String database) {
            if (database == null) {
              throw new MissingRequiredPropertyException("GetNamedQueryResult", "database");
            }
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNamedQueryResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamedQueryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamedQueryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder querystring(String querystring) {
            if (querystring == null) {
              throw new MissingRequiredPropertyException("GetNamedQueryResult", "querystring");
            }
            this.querystring = querystring;
            return this;
        }
        @CustomType.Setter
        public Builder workgroup(@Nullable String workgroup) {

            this.workgroup = workgroup;
            return this;
        }
        public GetNamedQueryResult build() {
            final var _resultValue = new GetNamedQueryResult();
            _resultValue.database = database;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.querystring = querystring;
            _resultValue.workgroup = workgroup;
            return _resultValue;
        }
    }
}
