// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs Empty = new FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs();

    @Import(name="enableDynamicFieldUpdate")
    private @Nullable Output<Boolean> enableDynamicFieldUpdate;

    public Optional<Output<Boolean>> enableDynamicFieldUpdate() {
        return Optional.ofNullable(this.enableDynamicFieldUpdate);
    }

    @Import(name="includeDeletedRecords")
    private @Nullable Output<Boolean> includeDeletedRecords;

    public Optional<Output<Boolean>> includeDeletedRecords() {
        return Optional.ofNullable(this.includeDeletedRecords);
    }

    @Import(name="object", required=true)
    private Output<String> object;

    public Output<String> object() {
        return this.object;
    }

    private FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs() {}

    private FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs $) {
        this.enableDynamicFieldUpdate = $.enableDynamicFieldUpdate;
        this.includeDeletedRecords = $.includeDeletedRecords;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs $;

        public Builder() {
            $ = new FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs();
        }

        public Builder(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs defaults) {
            $ = new FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs(Objects.requireNonNull(defaults));
        }

        public Builder enableDynamicFieldUpdate(@Nullable Output<Boolean> enableDynamicFieldUpdate) {
            $.enableDynamicFieldUpdate = enableDynamicFieldUpdate;
            return this;
        }

        public Builder enableDynamicFieldUpdate(Boolean enableDynamicFieldUpdate) {
            return enableDynamicFieldUpdate(Output.of(enableDynamicFieldUpdate));
        }

        public Builder includeDeletedRecords(@Nullable Output<Boolean> includeDeletedRecords) {
            $.includeDeletedRecords = includeDeletedRecords;
            return this;
        }

        public Builder includeDeletedRecords(Boolean includeDeletedRecords) {
            return includeDeletedRecords(Output.of(includeDeletedRecords));
        }

        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        public Builder object(String object) {
            return object(Output.of(object));
        }

        public FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs build() {
            if ($.object == null) {
                throw new MissingRequiredPropertyException("FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs", "object");
            }
            return $;
        }
    }

}
