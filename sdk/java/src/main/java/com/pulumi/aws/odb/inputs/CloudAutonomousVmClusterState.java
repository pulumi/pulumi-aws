// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.CloudAutonomousVmClusterMaintenanceWindowArgs;
import com.pulumi.aws.odb.inputs.CloudAutonomousVmClusterTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudAutonomousVmClusterState extends com.pulumi.resources.ResourceArgs {

    public static final CloudAutonomousVmClusterState Empty = new CloudAutonomousVmClusterState();

    /**
     * The Amazon Resource Name (ARN) for the Exadata infrastructure.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) for the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The progress of the current operation on the Autonomous VM cluster, as a percentage.
     * 
     */
    @Import(name="autonomousDataStoragePercentage")
    private @Nullable Output<Double> autonomousDataStoragePercentage;

    /**
     * @return The progress of the current operation on the Autonomous VM cluster, as a percentage.
     * 
     */
    public Optional<Output<Double>> autonomousDataStoragePercentage() {
        return Optional.ofNullable(this.autonomousDataStoragePercentage);
    }

    @Import(name="autonomousDataStorageSizeInTbs")
    private @Nullable Output<Double> autonomousDataStorageSizeInTbs;

    public Optional<Output<Double>> autonomousDataStorageSizeInTbs() {
        return Optional.ofNullable(this.autonomousDataStorageSizeInTbs);
    }

    /**
     * The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
     * 
     */
    @Import(name="availableAutonomousDataStorageSizeInTbs")
    private @Nullable Output<Double> availableAutonomousDataStorageSizeInTbs;

    /**
     * @return The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
     * 
     */
    public Optional<Output<Double>> availableAutonomousDataStorageSizeInTbs() {
        return Optional.ofNullable(this.availableAutonomousDataStorageSizeInTbs);
    }

    /**
     * The number of Autonomous CDBs that you can create with the currently available storage.
     * 
     */
    @Import(name="availableContainerDatabases")
    private @Nullable Output<Integer> availableContainerDatabases;

    /**
     * @return The number of Autonomous CDBs that you can create with the currently available storage.
     * 
     */
    public Optional<Output<Integer>> availableContainerDatabases() {
        return Optional.ofNullable(this.availableContainerDatabases);
    }

    /**
     * The number of CPU cores available for allocation to Autonomous Databases.
     * 
     */
    @Import(name="availableCpus")
    private @Nullable Output<Double> availableCpus;

    /**
     * @return The number of CPU cores available for allocation to Autonomous Databases.
     * 
     */
    public Optional<Output<Double>> availableCpus() {
        return Optional.ofNullable(this.availableCpus);
    }

    @Import(name="cloudExadataInfrastructureId")
    private @Nullable Output<String> cloudExadataInfrastructureId;

    public Optional<Output<String>> cloudExadataInfrastructureId() {
        return Optional.ofNullable(this.cloudExadataInfrastructureId);
    }

    /**
     * The compute model of the Autonomous VM cluster: ECPU or OCPU.
     * 
     */
    @Import(name="computeModel")
    private @Nullable Output<String> computeModel;

    /**
     * @return The compute model of the Autonomous VM cluster: ECPU or OCPU.
     * 
     */
    public Optional<Output<String>> computeModel() {
        return Optional.ofNullable(this.computeModel);
    }

    /**
     * The total number of CPU cores in the Autonomous VM cluster.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return The total number of CPU cores in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * The number of CPU cores enabled per node in the Autonomous VM cluster.
     * 
     */
    @Import(name="cpuCoreCountPerNode")
    private @Nullable Output<Integer> cpuCoreCountPerNode;

    /**
     * @return The number of CPU cores enabled per node in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCountPerNode() {
        return Optional.ofNullable(this.cpuCoreCountPerNode);
    }

    /**
     * The percentage of total CPU cores currently in use in the Autonomous VM cluster.
     * 
     */
    @Import(name="cpuPercentage")
    private @Nullable Output<Double> cpuPercentage;

    /**
     * @return The percentage of total CPU cores currently in use in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Double>> cpuPercentage() {
        return Optional.ofNullable(this.cpuPercentage);
    }

    /**
     * The date and time when the Autonomous VM cluster was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date and time when the Autonomous VM cluster was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The total data storage allocated to the Autonomous VM cluster, in GB.
     * 
     */
    @Import(name="dataStorageSizeInGbs")
    private @Nullable Output<Double> dataStorageSizeInGbs;

    /**
     * @return The total data storage allocated to the Autonomous VM cluster, in GB.
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInGbs() {
        return Optional.ofNullable(this.dataStorageSizeInGbs);
    }

    /**
     * The total data storage allocated to the Autonomous VM cluster, in TB.
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return The total data storage allocated to the Autonomous VM cluster, in TB.
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    @Import(name="dbServers")
    private @Nullable Output<List<String>> dbServers;

    public Optional<Output<List<String>>> dbServers() {
        return Optional.ofNullable(this.dbServers);
    }

    /**
     * The description of the Autonomous VM cluster.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The domain name of the Autonomous VM cluster.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain name of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The minimum value to which you can scale down the Exadata storage, in TB.
     * 
     */
    @Import(name="exadataStorageInTbsLowestScaledValue")
    private @Nullable Output<Double> exadataStorageInTbsLowestScaledValue;

    /**
     * @return The minimum value to which you can scale down the Exadata storage, in TB.
     * 
     */
    public Optional<Output<Double>> exadataStorageInTbsLowestScaledValue() {
        return Optional.ofNullable(this.exadataStorageInTbsLowestScaledValue);
    }

    /**
     * The hostname of the Autonomous VM cluster.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    @Import(name="isMtlsEnabledVmCluster")
    private @Nullable Output<Boolean> isMtlsEnabledVmCluster;

    public Optional<Output<Boolean>> isMtlsEnabledVmCluster() {
        return Optional.ofNullable(this.isMtlsEnabledVmCluster);
    }

    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * The maintenance window of the Autonomous VM cluster.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<CloudAutonomousVmClusterMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return The maintenance window of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<CloudAutonomousVmClusterMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * The minimum value to which you can scale down the maximum number of Autonomous CDBs.
     * 
     */
    @Import(name="maxAcdsLowestScaledValue")
    private @Nullable Output<Integer> maxAcdsLowestScaledValue;

    /**
     * @return The minimum value to which you can scale down the maximum number of Autonomous CDBs.
     * 
     */
    public Optional<Output<Integer>> maxAcdsLowestScaledValue() {
        return Optional.ofNullable(this.maxAcdsLowestScaledValue);
    }

    @Import(name="memoryPerOracleComputeUnitInGbs")
    private @Nullable Output<Integer> memoryPerOracleComputeUnitInGbs;

    public Optional<Output<Integer>> memoryPerOracleComputeUnitInGbs() {
        return Optional.ofNullable(this.memoryPerOracleComputeUnitInGbs);
    }

    /**
     * The total amount of memory allocated to the Autonomous VM cluster, in gigabytes(GB).
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The total amount of memory allocated to the Autonomous VM cluster, in gigabytes(GB).
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The number of database server nodes in the Autonomous VM cluster.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return The number of database server nodes in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * The number of Autonomous CDBs that can&#39;t be provisioned because of resource constraints.
     * 
     */
    @Import(name="nonProvisionableAutonomousContainerDatabases")
    private @Nullable Output<Integer> nonProvisionableAutonomousContainerDatabases;

    /**
     * @return The number of Autonomous CDBs that can&#39;t be provisioned because of resource constraints.
     * 
     */
    public Optional<Output<Integer>> nonProvisionableAutonomousContainerDatabases() {
        return Optional.ofNullable(this.nonProvisionableAutonomousContainerDatabases);
    }

    /**
     * The name of the OCI resource anchor associated with this Autonomous VM cluster.
     * 
     */
    @Import(name="ociResourceAnchorName")
    private @Nullable Output<String> ociResourceAnchorName;

    /**
     * @return The name of the OCI resource anchor associated with this Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> ociResourceAnchorName() {
        return Optional.ofNullable(this.ociResourceAnchorName);
    }

    /**
     * The URL for accessing the OCI console page for this Autonomous VM cluster.
     * 
     */
    @Import(name="ociUrl")
    private @Nullable Output<String> ociUrl;

    /**
     * @return The URL for accessing the OCI console page for this Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> ociUrl() {
        return Optional.ofNullable(this.ociUrl);
    }

    /**
     * The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    @Import(name="odbNetworkId")
    private @Nullable Output<String> odbNetworkId;

    public Optional<Output<String>> odbNetworkId() {
        return Optional.ofNullable(this.odbNetworkId);
    }

    /**
     * The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
     * 
     */
    @Import(name="odbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> odbNodeStorageSizeInGbs;

    /**
     * @return The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> odbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.odbNodeStorageSizeInGbs);
    }

    /**
     * The progress of the current operation on the Autonomous VM cluster, as a percentage.
     * 
     */
    @Import(name="percentProgress")
    private @Nullable Output<Double> percentProgress;

    /**
     * @return The progress of the current operation on the Autonomous VM cluster, as a percentage.
     * 
     */
    public Optional<Output<Double>> percentProgress() {
        return Optional.ofNullable(this.percentProgress);
    }

    /**
     * The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
     * 
     */
    @Import(name="provisionableAutonomousContainerDatabases")
    private @Nullable Output<Integer> provisionableAutonomousContainerDatabases;

    /**
     * @return The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Integer>> provisionableAutonomousContainerDatabases() {
        return Optional.ofNullable(this.provisionableAutonomousContainerDatabases);
    }

    /**
     * The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
     * 
     */
    @Import(name="provisionedAutonomousContainerDatabases")
    private @Nullable Output<Integer> provisionedAutonomousContainerDatabases;

    /**
     * @return The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Integer>> provisionedAutonomousContainerDatabases() {
        return Optional.ofNullable(this.provisionedAutonomousContainerDatabases);
    }

    /**
     * The number of CPUs provisioned in the Autonomous VM cluster.
     * 
     */
    @Import(name="provisionedCpus")
    private @Nullable Output<Double> provisionedCpus;

    /**
     * @return The number of CPUs provisioned in the Autonomous VM cluster.
     * 
     */
    public Optional<Output<Double>> provisionedCpus() {
        return Optional.ofNullable(this.provisionedCpus);
    }

    /**
     * The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
     * 
     */
    @Import(name="reclaimableCpus")
    private @Nullable Output<Double> reclaimableCpus;

    /**
     * @return The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
     * 
     */
    public Optional<Output<Double>> reclaimableCpus() {
        return Optional.ofNullable(this.reclaimableCpus);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The number of CPU cores reserved for system operations and redundancy.
     * 
     */
    @Import(name="reservedCpus")
    private @Nullable Output<Double> reservedCpus;

    /**
     * @return The number of CPU cores reserved for system operations and redundancy.
     * 
     */
    public Optional<Output<Double>> reservedCpus() {
        return Optional.ofNullable(this.reservedCpus);
    }

    @Import(name="scanListenerPortNonTls")
    private @Nullable Output<Integer> scanListenerPortNonTls;

    public Optional<Output<Integer>> scanListenerPortNonTls() {
        return Optional.ofNullable(this.scanListenerPortNonTls);
    }

    @Import(name="scanListenerPortTls")
    private @Nullable Output<Integer> scanListenerPortTls;

    public Optional<Output<Integer>> scanListenerPortTls() {
        return Optional.ofNullable(this.scanListenerPortTls);
    }

    /**
     * The shape of the Exadata infrastructure for the Autonomous VM cluster.
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return The shape of the Exadata infrastructure for the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The status of the Autonomous VM cluster. Possible values include CREATING, AVAILABLE, UPDATING, DELETING, DELETED, FAILED.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the Autonomous VM cluster. Possible values include CREATING, AVAILABLE, UPDATING, DELETING, DELETED, FAILED.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Additional information about the current status of the Autonomous VM cluster.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return Additional information about the current status of the Autonomous VM cluster.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The combined set of user-defined and provider-defined tags.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return The combined set of user-defined and provider-defined tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The expiration date and time of the database SSL certificate.
     * 
     */
    @Import(name="timeDatabaseSslCertificateExpires")
    private @Nullable Output<String> timeDatabaseSslCertificateExpires;

    /**
     * @return The expiration date and time of the database SSL certificate.
     * 
     */
    public Optional<Output<String>> timeDatabaseSslCertificateExpires() {
        return Optional.ofNullable(this.timeDatabaseSslCertificateExpires);
    }

    /**
     * The expiration date and time of the ORDS certificate.
     * 
     */
    @Import(name="timeOrdsCertificateExpires")
    private @Nullable Output<String> timeOrdsCertificateExpires;

    /**
     * @return The expiration date and time of the ORDS certificate.
     * 
     */
    public Optional<Output<String>> timeOrdsCertificateExpires() {
        return Optional.ofNullable(this.timeOrdsCertificateExpires);
    }

    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudAutonomousVmClusterTimeoutsArgs> timeouts;

    public Optional<Output<CloudAutonomousVmClusterTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    @Import(name="totalContainerDatabases")
    private @Nullable Output<Integer> totalContainerDatabases;

    public Optional<Output<Integer>> totalContainerDatabases() {
        return Optional.ofNullable(this.totalContainerDatabases);
    }

    private CloudAutonomousVmClusterState() {}

    private CloudAutonomousVmClusterState(CloudAutonomousVmClusterState $) {
        this.arn = $.arn;
        this.autonomousDataStoragePercentage = $.autonomousDataStoragePercentage;
        this.autonomousDataStorageSizeInTbs = $.autonomousDataStorageSizeInTbs;
        this.availableAutonomousDataStorageSizeInTbs = $.availableAutonomousDataStorageSizeInTbs;
        this.availableContainerDatabases = $.availableContainerDatabases;
        this.availableCpus = $.availableCpus;
        this.cloudExadataInfrastructureId = $.cloudExadataInfrastructureId;
        this.computeModel = $.computeModel;
        this.cpuCoreCount = $.cpuCoreCount;
        this.cpuCoreCountPerNode = $.cpuCoreCountPerNode;
        this.cpuPercentage = $.cpuPercentage;
        this.createdAt = $.createdAt;
        this.dataStorageSizeInGbs = $.dataStorageSizeInGbs;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbServers = $.dbServers;
        this.description = $.description;
        this.displayName = $.displayName;
        this.domain = $.domain;
        this.exadataStorageInTbsLowestScaledValue = $.exadataStorageInTbsLowestScaledValue;
        this.hostname = $.hostname;
        this.isMtlsEnabledVmCluster = $.isMtlsEnabledVmCluster;
        this.licenseModel = $.licenseModel;
        this.maintenanceWindow = $.maintenanceWindow;
        this.maxAcdsLowestScaledValue = $.maxAcdsLowestScaledValue;
        this.memoryPerOracleComputeUnitInGbs = $.memoryPerOracleComputeUnitInGbs;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.nodeCount = $.nodeCount;
        this.nonProvisionableAutonomousContainerDatabases = $.nonProvisionableAutonomousContainerDatabases;
        this.ociResourceAnchorName = $.ociResourceAnchorName;
        this.ociUrl = $.ociUrl;
        this.ocid = $.ocid;
        this.odbNetworkId = $.odbNetworkId;
        this.odbNodeStorageSizeInGbs = $.odbNodeStorageSizeInGbs;
        this.percentProgress = $.percentProgress;
        this.provisionableAutonomousContainerDatabases = $.provisionableAutonomousContainerDatabases;
        this.provisionedAutonomousContainerDatabases = $.provisionedAutonomousContainerDatabases;
        this.provisionedCpus = $.provisionedCpus;
        this.reclaimableCpus = $.reclaimableCpus;
        this.region = $.region;
        this.reservedCpus = $.reservedCpus;
        this.scanListenerPortNonTls = $.scanListenerPortNonTls;
        this.scanListenerPortTls = $.scanListenerPortTls;
        this.shape = $.shape;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeDatabaseSslCertificateExpires = $.timeDatabaseSslCertificateExpires;
        this.timeOrdsCertificateExpires = $.timeOrdsCertificateExpires;
        this.timeZone = $.timeZone;
        this.timeouts = $.timeouts;
        this.totalContainerDatabases = $.totalContainerDatabases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAutonomousVmClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAutonomousVmClusterState $;

        public Builder() {
            $ = new CloudAutonomousVmClusterState();
        }

        public Builder(CloudAutonomousVmClusterState defaults) {
            $ = new CloudAutonomousVmClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param autonomousDataStoragePercentage The progress of the current operation on the Autonomous VM cluster, as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDataStoragePercentage(@Nullable Output<Double> autonomousDataStoragePercentage) {
            $.autonomousDataStoragePercentage = autonomousDataStoragePercentage;
            return this;
        }

        /**
         * @param autonomousDataStoragePercentage The progress of the current operation on the Autonomous VM cluster, as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDataStoragePercentage(Double autonomousDataStoragePercentage) {
            return autonomousDataStoragePercentage(Output.of(autonomousDataStoragePercentage));
        }

        public Builder autonomousDataStorageSizeInTbs(@Nullable Output<Double> autonomousDataStorageSizeInTbs) {
            $.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            return this;
        }

        public Builder autonomousDataStorageSizeInTbs(Double autonomousDataStorageSizeInTbs) {
            return autonomousDataStorageSizeInTbs(Output.of(autonomousDataStorageSizeInTbs));
        }

        /**
         * @param availableAutonomousDataStorageSizeInTbs The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
         * 
         * @return builder
         * 
         */
        public Builder availableAutonomousDataStorageSizeInTbs(@Nullable Output<Double> availableAutonomousDataStorageSizeInTbs) {
            $.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            return this;
        }

        /**
         * @param availableAutonomousDataStorageSizeInTbs The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
         * 
         * @return builder
         * 
         */
        public Builder availableAutonomousDataStorageSizeInTbs(Double availableAutonomousDataStorageSizeInTbs) {
            return availableAutonomousDataStorageSizeInTbs(Output.of(availableAutonomousDataStorageSizeInTbs));
        }

        /**
         * @param availableContainerDatabases The number of Autonomous CDBs that you can create with the currently available storage.
         * 
         * @return builder
         * 
         */
        public Builder availableContainerDatabases(@Nullable Output<Integer> availableContainerDatabases) {
            $.availableContainerDatabases = availableContainerDatabases;
            return this;
        }

        /**
         * @param availableContainerDatabases The number of Autonomous CDBs that you can create with the currently available storage.
         * 
         * @return builder
         * 
         */
        public Builder availableContainerDatabases(Integer availableContainerDatabases) {
            return availableContainerDatabases(Output.of(availableContainerDatabases));
        }

        /**
         * @param availableCpus The number of CPU cores available for allocation to Autonomous Databases.
         * 
         * @return builder
         * 
         */
        public Builder availableCpus(@Nullable Output<Double> availableCpus) {
            $.availableCpus = availableCpus;
            return this;
        }

        /**
         * @param availableCpus The number of CPU cores available for allocation to Autonomous Databases.
         * 
         * @return builder
         * 
         */
        public Builder availableCpus(Double availableCpus) {
            return availableCpus(Output.of(availableCpus));
        }

        public Builder cloudExadataInfrastructureId(@Nullable Output<String> cloudExadataInfrastructureId) {
            $.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }

        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            return cloudExadataInfrastructureId(Output.of(cloudExadataInfrastructureId));
        }

        /**
         * @param computeModel The compute model of the Autonomous VM cluster: ECPU or OCPU.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(@Nullable Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel The compute model of the Autonomous VM cluster: ECPU or OCPU.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        /**
         * @param cpuCoreCount The total number of CPU cores in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount The total number of CPU cores in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param cpuCoreCountPerNode The number of CPU cores enabled per node in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCountPerNode(@Nullable Output<Integer> cpuCoreCountPerNode) {
            $.cpuCoreCountPerNode = cpuCoreCountPerNode;
            return this;
        }

        /**
         * @param cpuCoreCountPerNode The number of CPU cores enabled per node in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCountPerNode(Integer cpuCoreCountPerNode) {
            return cpuCoreCountPerNode(Output.of(cpuCoreCountPerNode));
        }

        /**
         * @param cpuPercentage The percentage of total CPU cores currently in use in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuPercentage(@Nullable Output<Double> cpuPercentage) {
            $.cpuPercentage = cpuPercentage;
            return this;
        }

        /**
         * @param cpuPercentage The percentage of total CPU cores currently in use in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuPercentage(Double cpuPercentage) {
            return cpuPercentage(Output.of(cpuPercentage));
        }

        /**
         * @param createdAt The date and time when the Autonomous VM cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date and time when the Autonomous VM cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param dataStorageSizeInGbs The total data storage allocated to the Autonomous VM cluster, in GB.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGbs(@Nullable Output<Double> dataStorageSizeInGbs) {
            $.dataStorageSizeInGbs = dataStorageSizeInGbs;
            return this;
        }

        /**
         * @param dataStorageSizeInGbs The total data storage allocated to the Autonomous VM cluster, in GB.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGbs(Double dataStorageSizeInGbs) {
            return dataStorageSizeInGbs(Output.of(dataStorageSizeInGbs));
        }

        /**
         * @param dataStorageSizeInTbs The total data storage allocated to the Autonomous VM cluster, in TB.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs The total data storage allocated to the Autonomous VM cluster, in TB.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        public Builder dbServers(@Nullable Output<List<String>> dbServers) {
            $.dbServers = dbServers;
            return this;
        }

        public Builder dbServers(List<String> dbServers) {
            return dbServers(Output.of(dbServers));
        }

        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }

        /**
         * @param description The description of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param domain The domain name of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain name of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param exadataStorageInTbsLowestScaledValue The minimum value to which you can scale down the Exadata storage, in TB.
         * 
         * @return builder
         * 
         */
        public Builder exadataStorageInTbsLowestScaledValue(@Nullable Output<Double> exadataStorageInTbsLowestScaledValue) {
            $.exadataStorageInTbsLowestScaledValue = exadataStorageInTbsLowestScaledValue;
            return this;
        }

        /**
         * @param exadataStorageInTbsLowestScaledValue The minimum value to which you can scale down the Exadata storage, in TB.
         * 
         * @return builder
         * 
         */
        public Builder exadataStorageInTbsLowestScaledValue(Double exadataStorageInTbsLowestScaledValue) {
            return exadataStorageInTbsLowestScaledValue(Output.of(exadataStorageInTbsLowestScaledValue));
        }

        /**
         * @param hostname The hostname of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder isMtlsEnabledVmCluster(@Nullable Output<Boolean> isMtlsEnabledVmCluster) {
            $.isMtlsEnabledVmCluster = isMtlsEnabledVmCluster;
            return this;
        }

        public Builder isMtlsEnabledVmCluster(Boolean isMtlsEnabledVmCluster) {
            return isMtlsEnabledVmCluster(Output.of(isMtlsEnabledVmCluster));
        }

        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param maintenanceWindow The maintenance window of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<CloudAutonomousVmClusterMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow The maintenance window of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(CloudAutonomousVmClusterMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param maxAcdsLowestScaledValue The minimum value to which you can scale down the maximum number of Autonomous CDBs.
         * 
         * @return builder
         * 
         */
        public Builder maxAcdsLowestScaledValue(@Nullable Output<Integer> maxAcdsLowestScaledValue) {
            $.maxAcdsLowestScaledValue = maxAcdsLowestScaledValue;
            return this;
        }

        /**
         * @param maxAcdsLowestScaledValue The minimum value to which you can scale down the maximum number of Autonomous CDBs.
         * 
         * @return builder
         * 
         */
        public Builder maxAcdsLowestScaledValue(Integer maxAcdsLowestScaledValue) {
            return maxAcdsLowestScaledValue(Output.of(maxAcdsLowestScaledValue));
        }

        public Builder memoryPerOracleComputeUnitInGbs(@Nullable Output<Integer> memoryPerOracleComputeUnitInGbs) {
            $.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }

        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            return memoryPerOracleComputeUnitInGbs(Output.of(memoryPerOracleComputeUnitInGbs));
        }

        /**
         * @param memorySizeInGbs The total amount of memory allocated to the Autonomous VM cluster, in gigabytes(GB).
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The total amount of memory allocated to the Autonomous VM cluster, in gigabytes(GB).
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param nodeCount The number of database server nodes in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount The number of database server nodes in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param nonProvisionableAutonomousContainerDatabases The number of Autonomous CDBs that can&#39;t be provisioned because of resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder nonProvisionableAutonomousContainerDatabases(@Nullable Output<Integer> nonProvisionableAutonomousContainerDatabases) {
            $.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            return this;
        }

        /**
         * @param nonProvisionableAutonomousContainerDatabases The number of Autonomous CDBs that can&#39;t be provisioned because of resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder nonProvisionableAutonomousContainerDatabases(Integer nonProvisionableAutonomousContainerDatabases) {
            return nonProvisionableAutonomousContainerDatabases(Output.of(nonProvisionableAutonomousContainerDatabases));
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor associated with this Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(@Nullable Output<String> ociResourceAnchorName) {
            $.ociResourceAnchorName = ociResourceAnchorName;
            return this;
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor associated with this Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(String ociResourceAnchorName) {
            return ociResourceAnchorName(Output.of(ociResourceAnchorName));
        }

        /**
         * @param ociUrl The URL for accessing the OCI console page for this Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(@Nullable Output<String> ociUrl) {
            $.ociUrl = ociUrl;
            return this;
        }

        /**
         * @param ociUrl The URL for accessing the OCI console page for this Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(String ociUrl) {
            return ociUrl(Output.of(ociUrl));
        }

        /**
         * @param ocid The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        public Builder odbNetworkId(@Nullable Output<String> odbNetworkId) {
            $.odbNetworkId = odbNetworkId;
            return this;
        }

        public Builder odbNetworkId(String odbNetworkId) {
            return odbNetworkId(Output.of(odbNetworkId));
        }

        /**
         * @param odbNodeStorageSizeInGbs The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder odbNodeStorageSizeInGbs(@Nullable Output<Integer> odbNodeStorageSizeInGbs) {
            $.odbNodeStorageSizeInGbs = odbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param odbNodeStorageSizeInGbs The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder odbNodeStorageSizeInGbs(Integer odbNodeStorageSizeInGbs) {
            return odbNodeStorageSizeInGbs(Output.of(odbNodeStorageSizeInGbs));
        }

        /**
         * @param percentProgress The progress of the current operation on the Autonomous VM cluster, as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(@Nullable Output<Double> percentProgress) {
            $.percentProgress = percentProgress;
            return this;
        }

        /**
         * @param percentProgress The progress of the current operation on the Autonomous VM cluster, as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(Double percentProgress) {
            return percentProgress(Output.of(percentProgress));
        }

        /**
         * @param provisionableAutonomousContainerDatabases The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionableAutonomousContainerDatabases(@Nullable Output<Integer> provisionableAutonomousContainerDatabases) {
            $.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            return this;
        }

        /**
         * @param provisionableAutonomousContainerDatabases The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionableAutonomousContainerDatabases(Integer provisionableAutonomousContainerDatabases) {
            return provisionableAutonomousContainerDatabases(Output.of(provisionableAutonomousContainerDatabases));
        }

        /**
         * @param provisionedAutonomousContainerDatabases The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionedAutonomousContainerDatabases(@Nullable Output<Integer> provisionedAutonomousContainerDatabases) {
            $.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            return this;
        }

        /**
         * @param provisionedAutonomousContainerDatabases The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionedAutonomousContainerDatabases(Integer provisionedAutonomousContainerDatabases) {
            return provisionedAutonomousContainerDatabases(Output.of(provisionedAutonomousContainerDatabases));
        }

        /**
         * @param provisionedCpus The number of CPUs provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionedCpus(@Nullable Output<Double> provisionedCpus) {
            $.provisionedCpus = provisionedCpus;
            return this;
        }

        /**
         * @param provisionedCpus The number of CPUs provisioned in the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder provisionedCpus(Double provisionedCpus) {
            return provisionedCpus(Output.of(provisionedCpus));
        }

        /**
         * @param reclaimableCpus The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
         * 
         * @return builder
         * 
         */
        public Builder reclaimableCpus(@Nullable Output<Double> reclaimableCpus) {
            $.reclaimableCpus = reclaimableCpus;
            return this;
        }

        /**
         * @param reclaimableCpus The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
         * 
         * @return builder
         * 
         */
        public Builder reclaimableCpus(Double reclaimableCpus) {
            return reclaimableCpus(Output.of(reclaimableCpus));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param reservedCpus The number of CPU cores reserved for system operations and redundancy.
         * 
         * @return builder
         * 
         */
        public Builder reservedCpus(@Nullable Output<Double> reservedCpus) {
            $.reservedCpus = reservedCpus;
            return this;
        }

        /**
         * @param reservedCpus The number of CPU cores reserved for system operations and redundancy.
         * 
         * @return builder
         * 
         */
        public Builder reservedCpus(Double reservedCpus) {
            return reservedCpus(Output.of(reservedCpus));
        }

        public Builder scanListenerPortNonTls(@Nullable Output<Integer> scanListenerPortNonTls) {
            $.scanListenerPortNonTls = scanListenerPortNonTls;
            return this;
        }

        public Builder scanListenerPortNonTls(Integer scanListenerPortNonTls) {
            return scanListenerPortNonTls(Output.of(scanListenerPortNonTls));
        }

        public Builder scanListenerPortTls(@Nullable Output<Integer> scanListenerPortTls) {
            $.scanListenerPortTls = scanListenerPortTls;
            return this;
        }

        public Builder scanListenerPortTls(Integer scanListenerPortTls) {
            return scanListenerPortTls(Output.of(scanListenerPortTls));
        }

        /**
         * @param shape The shape of the Exadata infrastructure for the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape of the Exadata infrastructure for the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param status The status of the Autonomous VM cluster. Possible values include CREATING, AVAILABLE, UPDATING, DELETING, DELETED, FAILED.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the Autonomous VM cluster. Possible values include CREATING, AVAILABLE, UPDATING, DELETING, DELETED, FAILED.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason Additional information about the current status of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason Additional information about the current status of the Autonomous VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll The combined set of user-defined and provider-defined tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll The combined set of user-defined and provider-defined tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param timeDatabaseSslCertificateExpires The expiration date and time of the database SSL certificate.
         * 
         * @return builder
         * 
         */
        public Builder timeDatabaseSslCertificateExpires(@Nullable Output<String> timeDatabaseSslCertificateExpires) {
            $.timeDatabaseSslCertificateExpires = timeDatabaseSslCertificateExpires;
            return this;
        }

        /**
         * @param timeDatabaseSslCertificateExpires The expiration date and time of the database SSL certificate.
         * 
         * @return builder
         * 
         */
        public Builder timeDatabaseSslCertificateExpires(String timeDatabaseSslCertificateExpires) {
            return timeDatabaseSslCertificateExpires(Output.of(timeDatabaseSslCertificateExpires));
        }

        /**
         * @param timeOrdsCertificateExpires The expiration date and time of the ORDS certificate.
         * 
         * @return builder
         * 
         */
        public Builder timeOrdsCertificateExpires(@Nullable Output<String> timeOrdsCertificateExpires) {
            $.timeOrdsCertificateExpires = timeOrdsCertificateExpires;
            return this;
        }

        /**
         * @param timeOrdsCertificateExpires The expiration date and time of the ORDS certificate.
         * 
         * @return builder
         * 
         */
        public Builder timeOrdsCertificateExpires(String timeOrdsCertificateExpires) {
            return timeOrdsCertificateExpires(Output.of(timeOrdsCertificateExpires));
        }

        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public Builder timeouts(@Nullable Output<CloudAutonomousVmClusterTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudAutonomousVmClusterTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public Builder totalContainerDatabases(@Nullable Output<Integer> totalContainerDatabases) {
            $.totalContainerDatabases = totalContainerDatabases;
            return this;
        }

        public Builder totalContainerDatabases(Integer totalContainerDatabases) {
            return totalContainerDatabases(Output.of(totalContainerDatabases));
        }

        public CloudAutonomousVmClusterState build() {
            return $;
        }
    }

}
