// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionArgs Empty = new EventConnectionArgs();

    @Import(name="authParameters", required=true)
    private Output<EventConnectionAuthParametersArgs> authParameters;

    public Output<EventConnectionAuthParametersArgs> authParameters() {
        return this.authParameters;
    }

    @Import(name="authorizationType", required=true)
    private Output<String> authorizationType;

    public Output<String> authorizationType() {
        return this.authorizationType;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private EventConnectionArgs() {}

    private EventConnectionArgs(EventConnectionArgs $) {
        this.authParameters = $.authParameters;
        this.authorizationType = $.authorizationType;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventConnectionArgs $;

        public Builder() {
            $ = new EventConnectionArgs();
        }

        public Builder(EventConnectionArgs defaults) {
            $ = new EventConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder authParameters(Output<EventConnectionAuthParametersArgs> authParameters) {
            $.authParameters = authParameters;
            return this;
        }

        public Builder authParameters(EventConnectionAuthParametersArgs authParameters) {
            return authParameters(Output.of(authParameters));
        }

        public Builder authorizationType(Output<String> authorizationType) {
            $.authorizationType = authorizationType;
            return this;
        }

        public Builder authorizationType(String authorizationType) {
            return authorizationType(Output.of(authorizationType));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public EventConnectionArgs build() {
            $.authParameters = Objects.requireNonNull($.authParameters, "expected parameter 'authParameters' to be non-null");
            $.authorizationType = Objects.requireNonNull($.authorizationType, "expected parameter 'authorizationType' to be non-null");
            return $;
        }
    }

}
