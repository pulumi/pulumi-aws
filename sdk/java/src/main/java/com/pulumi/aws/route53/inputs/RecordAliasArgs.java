// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class RecordAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordAliasArgs Empty = new RecordAliasArgs();

    @Import(name="evaluateTargetHealth", required=true)
    private Output<Boolean> evaluateTargetHealth;

    public Output<Boolean> evaluateTargetHealth() {
        return this.evaluateTargetHealth;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    public Output<String> zoneId() {
        return this.zoneId;
    }

    private RecordAliasArgs() {}

    private RecordAliasArgs(RecordAliasArgs $) {
        this.evaluateTargetHealth = $.evaluateTargetHealth;
        this.name = $.name;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordAliasArgs $;

        public Builder() {
            $ = new RecordAliasArgs();
        }

        public Builder(RecordAliasArgs defaults) {
            $ = new RecordAliasArgs(Objects.requireNonNull(defaults));
        }

        public Builder evaluateTargetHealth(Output<Boolean> evaluateTargetHealth) {
            $.evaluateTargetHealth = evaluateTargetHealth;
            return this;
        }

        public Builder evaluateTargetHealth(Boolean evaluateTargetHealth) {
            return evaluateTargetHealth(Output.of(evaluateTargetHealth));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public RecordAliasArgs build() {
            $.evaluateTargetHealth = Objects.requireNonNull($.evaluateTargetHealth, "expected parameter 'evaluateTargetHealth' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.zoneId = Objects.requireNonNull($.zoneId, "expected parameter 'zoneId' to be non-null");
            return $;
        }
    }

}
