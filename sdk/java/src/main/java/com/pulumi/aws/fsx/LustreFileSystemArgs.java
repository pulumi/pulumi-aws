// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx;

import com.pulumi.aws.fsx.inputs.LustreFileSystemLogConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LustreFileSystemArgs extends com.pulumi.resources.ResourceArgs {

    public static final LustreFileSystemArgs Empty = new LustreFileSystemArgs();

    @Import(name="autoImportPolicy")
    private @Nullable Output<String> autoImportPolicy;

    public Optional<Output<String>> autoImportPolicy() {
        return Optional.ofNullable(this.autoImportPolicy);
    }

    @Import(name="automaticBackupRetentionDays")
    private @Nullable Output<Integer> automaticBackupRetentionDays;

    public Optional<Output<Integer>> automaticBackupRetentionDays() {
        return Optional.ofNullable(this.automaticBackupRetentionDays);
    }

    @Import(name="backupId")
    private @Nullable Output<String> backupId;

    public Optional<Output<String>> backupId() {
        return Optional.ofNullable(this.backupId);
    }

    @Import(name="copyTagsToBackups")
    private @Nullable Output<Boolean> copyTagsToBackups;

    public Optional<Output<Boolean>> copyTagsToBackups() {
        return Optional.ofNullable(this.copyTagsToBackups);
    }

    @Import(name="dailyAutomaticBackupStartTime")
    private @Nullable Output<String> dailyAutomaticBackupStartTime;

    public Optional<Output<String>> dailyAutomaticBackupStartTime() {
        return Optional.ofNullable(this.dailyAutomaticBackupStartTime);
    }

    @Import(name="dataCompressionType")
    private @Nullable Output<String> dataCompressionType;

    public Optional<Output<String>> dataCompressionType() {
        return Optional.ofNullable(this.dataCompressionType);
    }

    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    @Import(name="driveCacheType")
    private @Nullable Output<String> driveCacheType;

    public Optional<Output<String>> driveCacheType() {
        return Optional.ofNullable(this.driveCacheType);
    }

    @Import(name="exportPath")
    private @Nullable Output<String> exportPath;

    public Optional<Output<String>> exportPath() {
        return Optional.ofNullable(this.exportPath);
    }

    @Import(name="fileSystemTypeVersion")
    private @Nullable Output<String> fileSystemTypeVersion;

    public Optional<Output<String>> fileSystemTypeVersion() {
        return Optional.ofNullable(this.fileSystemTypeVersion);
    }

    @Import(name="importPath")
    private @Nullable Output<String> importPath;

    public Optional<Output<String>> importPath() {
        return Optional.ofNullable(this.importPath);
    }

    @Import(name="importedFileChunkSize")
    private @Nullable Output<Integer> importedFileChunkSize;

    public Optional<Output<Integer>> importedFileChunkSize() {
        return Optional.ofNullable(this.importedFileChunkSize);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="logConfiguration")
    private @Nullable Output<LustreFileSystemLogConfigurationArgs> logConfiguration;

    public Optional<Output<LustreFileSystemLogConfigurationArgs>> logConfiguration() {
        return Optional.ofNullable(this.logConfiguration);
    }

    @Import(name="perUnitStorageThroughput")
    private @Nullable Output<Integer> perUnitStorageThroughput;

    public Optional<Output<Integer>> perUnitStorageThroughput() {
        return Optional.ofNullable(this.perUnitStorageThroughput);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="storageCapacity")
    private @Nullable Output<Integer> storageCapacity;

    public Optional<Output<Integer>> storageCapacity() {
        return Optional.ofNullable(this.storageCapacity);
    }

    @Import(name="storageType")
    private @Nullable Output<String> storageType;

    public Optional<Output<String>> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    @Import(name="subnetIds", required=true)
    private Output<String> subnetIds;

    public Output<String> subnetIds() {
        return this.subnetIds;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="weeklyMaintenanceStartTime")
    private @Nullable Output<String> weeklyMaintenanceStartTime;

    public Optional<Output<String>> weeklyMaintenanceStartTime() {
        return Optional.ofNullable(this.weeklyMaintenanceStartTime);
    }

    private LustreFileSystemArgs() {}

    private LustreFileSystemArgs(LustreFileSystemArgs $) {
        this.autoImportPolicy = $.autoImportPolicy;
        this.automaticBackupRetentionDays = $.automaticBackupRetentionDays;
        this.backupId = $.backupId;
        this.copyTagsToBackups = $.copyTagsToBackups;
        this.dailyAutomaticBackupStartTime = $.dailyAutomaticBackupStartTime;
        this.dataCompressionType = $.dataCompressionType;
        this.deploymentType = $.deploymentType;
        this.driveCacheType = $.driveCacheType;
        this.exportPath = $.exportPath;
        this.fileSystemTypeVersion = $.fileSystemTypeVersion;
        this.importPath = $.importPath;
        this.importedFileChunkSize = $.importedFileChunkSize;
        this.kmsKeyId = $.kmsKeyId;
        this.logConfiguration = $.logConfiguration;
        this.perUnitStorageThroughput = $.perUnitStorageThroughput;
        this.securityGroupIds = $.securityGroupIds;
        this.storageCapacity = $.storageCapacity;
        this.storageType = $.storageType;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.weeklyMaintenanceStartTime = $.weeklyMaintenanceStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LustreFileSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LustreFileSystemArgs $;

        public Builder() {
            $ = new LustreFileSystemArgs();
        }

        public Builder(LustreFileSystemArgs defaults) {
            $ = new LustreFileSystemArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoImportPolicy(@Nullable Output<String> autoImportPolicy) {
            $.autoImportPolicy = autoImportPolicy;
            return this;
        }

        public Builder autoImportPolicy(String autoImportPolicy) {
            return autoImportPolicy(Output.of(autoImportPolicy));
        }

        public Builder automaticBackupRetentionDays(@Nullable Output<Integer> automaticBackupRetentionDays) {
            $.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }

        public Builder automaticBackupRetentionDays(Integer automaticBackupRetentionDays) {
            return automaticBackupRetentionDays(Output.of(automaticBackupRetentionDays));
        }

        public Builder backupId(@Nullable Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        public Builder copyTagsToBackups(@Nullable Output<Boolean> copyTagsToBackups) {
            $.copyTagsToBackups = copyTagsToBackups;
            return this;
        }

        public Builder copyTagsToBackups(Boolean copyTagsToBackups) {
            return copyTagsToBackups(Output.of(copyTagsToBackups));
        }

        public Builder dailyAutomaticBackupStartTime(@Nullable Output<String> dailyAutomaticBackupStartTime) {
            $.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }

        public Builder dailyAutomaticBackupStartTime(String dailyAutomaticBackupStartTime) {
            return dailyAutomaticBackupStartTime(Output.of(dailyAutomaticBackupStartTime));
        }

        public Builder dataCompressionType(@Nullable Output<String> dataCompressionType) {
            $.dataCompressionType = dataCompressionType;
            return this;
        }

        public Builder dataCompressionType(String dataCompressionType) {
            return dataCompressionType(Output.of(dataCompressionType));
        }

        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        public Builder driveCacheType(@Nullable Output<String> driveCacheType) {
            $.driveCacheType = driveCacheType;
            return this;
        }

        public Builder driveCacheType(String driveCacheType) {
            return driveCacheType(Output.of(driveCacheType));
        }

        public Builder exportPath(@Nullable Output<String> exportPath) {
            $.exportPath = exportPath;
            return this;
        }

        public Builder exportPath(String exportPath) {
            return exportPath(Output.of(exportPath));
        }

        public Builder fileSystemTypeVersion(@Nullable Output<String> fileSystemTypeVersion) {
            $.fileSystemTypeVersion = fileSystemTypeVersion;
            return this;
        }

        public Builder fileSystemTypeVersion(String fileSystemTypeVersion) {
            return fileSystemTypeVersion(Output.of(fileSystemTypeVersion));
        }

        public Builder importPath(@Nullable Output<String> importPath) {
            $.importPath = importPath;
            return this;
        }

        public Builder importPath(String importPath) {
            return importPath(Output.of(importPath));
        }

        public Builder importedFileChunkSize(@Nullable Output<Integer> importedFileChunkSize) {
            $.importedFileChunkSize = importedFileChunkSize;
            return this;
        }

        public Builder importedFileChunkSize(Integer importedFileChunkSize) {
            return importedFileChunkSize(Output.of(importedFileChunkSize));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder logConfiguration(@Nullable Output<LustreFileSystemLogConfigurationArgs> logConfiguration) {
            $.logConfiguration = logConfiguration;
            return this;
        }

        public Builder logConfiguration(LustreFileSystemLogConfigurationArgs logConfiguration) {
            return logConfiguration(Output.of(logConfiguration));
        }

        public Builder perUnitStorageThroughput(@Nullable Output<Integer> perUnitStorageThroughput) {
            $.perUnitStorageThroughput = perUnitStorageThroughput;
            return this;
        }

        public Builder perUnitStorageThroughput(Integer perUnitStorageThroughput) {
            return perUnitStorageThroughput(Output.of(perUnitStorageThroughput));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder storageCapacity(@Nullable Output<Integer> storageCapacity) {
            $.storageCapacity = storageCapacity;
            return this;
        }

        public Builder storageCapacity(Integer storageCapacity) {
            return storageCapacity(Output.of(storageCapacity));
        }

        public Builder storageType(@Nullable Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        public Builder subnetIds(Output<String> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(String subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder weeklyMaintenanceStartTime(@Nullable Output<String> weeklyMaintenanceStartTime) {
            $.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }

        public Builder weeklyMaintenanceStartTime(String weeklyMaintenanceStartTime) {
            return weeklyMaintenanceStartTime(Output.of(weeklyMaintenanceStartTime));
        }

        public LustreFileSystemArgs build() {
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            return $;
        }
    }

}
