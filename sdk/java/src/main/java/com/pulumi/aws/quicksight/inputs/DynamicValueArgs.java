// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DynamicValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final DynamicValueArgs Empty = new DynamicValueArgs();

    @Import(name="defaultValueColumn", required=true)
    private Output<ColumnArgs> defaultValueColumn;

    public Output<ColumnArgs> defaultValueColumn() {
        return this.defaultValueColumn;
    }

    @Import(name="groupNameColumn")
    private @Nullable Output<ColumnArgs> groupNameColumn;

    public Optional<Output<ColumnArgs>> groupNameColumn() {
        return Optional.ofNullable(this.groupNameColumn);
    }

    @Import(name="userNameColumn")
    private @Nullable Output<ColumnArgs> userNameColumn;

    public Optional<Output<ColumnArgs>> userNameColumn() {
        return Optional.ofNullable(this.userNameColumn);
    }

    private DynamicValueArgs() {}

    private DynamicValueArgs(DynamicValueArgs $) {
        this.defaultValueColumn = $.defaultValueColumn;
        this.groupNameColumn = $.groupNameColumn;
        this.userNameColumn = $.userNameColumn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DynamicValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DynamicValueArgs $;

        public Builder() {
            $ = new DynamicValueArgs();
        }

        public Builder(DynamicValueArgs defaults) {
            $ = new DynamicValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultValueColumn(Output<ColumnArgs> defaultValueColumn) {
            $.defaultValueColumn = defaultValueColumn;
            return this;
        }

        public Builder defaultValueColumn(ColumnArgs defaultValueColumn) {
            return defaultValueColumn(Output.of(defaultValueColumn));
        }

        public Builder groupNameColumn(@Nullable Output<ColumnArgs> groupNameColumn) {
            $.groupNameColumn = groupNameColumn;
            return this;
        }

        public Builder groupNameColumn(ColumnArgs groupNameColumn) {
            return groupNameColumn(Output.of(groupNameColumn));
        }

        public Builder userNameColumn(@Nullable Output<ColumnArgs> userNameColumn) {
            $.userNameColumn = userNameColumn;
            return this;
        }

        public Builder userNameColumn(ColumnArgs userNameColumn) {
            return userNameColumn(Output.of(userNameColumn));
        }

        public DynamicValueArgs build() {
            if ($.defaultValueColumn == null) {
                throw new MissingRequiredPropertyException("DynamicValueArgs", "defaultValueColumn");
            }
            return $;
        }
    }

}
