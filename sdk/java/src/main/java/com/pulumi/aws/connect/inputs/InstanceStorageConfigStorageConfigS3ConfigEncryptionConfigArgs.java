// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs Empty = new InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs();

    @Import(name="encryptionType", required=true)
    private Output<String> encryptionType;

    public Output<String> encryptionType() {
        return this.encryptionType;
    }

    @Import(name="keyId", required=true)
    private Output<String> keyId;

    public Output<String> keyId() {
        return this.keyId;
    }

    private InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs() {}

    private InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs $) {
        this.encryptionType = $.encryptionType;
        this.keyId = $.keyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs $;

        public Builder() {
            $ = new InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs();
        }

        public Builder(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs defaults) {
            $ = new InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder encryptionType(Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        public InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs build() {
            $.encryptionType = Objects.requireNonNull($.encryptionType, "expected parameter 'encryptionType' to be non-null");
            $.keyId = Objects.requireNonNull($.keyId, "expected parameter 'keyId' to be non-null");
            return $;
        }
    }

}
