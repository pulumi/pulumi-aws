// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AddonArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddonArgs Empty = new AddonArgs();

    @Import(name="addonName", required=true)
    private Output<String> addonName;

    public Output<String> addonName() {
        return this.addonName;
    }

    @Import(name="addonVersion")
    private @Nullable Output<String> addonVersion;

    public Optional<Output<String>> addonVersion() {
        return Optional.ofNullable(this.addonVersion);
    }

    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    public Output<String> clusterName() {
        return this.clusterName;
    }

    @Import(name="configurationValues")
    private @Nullable Output<String> configurationValues;

    public Optional<Output<String>> configurationValues() {
        return Optional.ofNullable(this.configurationValues);
    }

    @Import(name="preserve")
    private @Nullable Output<Boolean> preserve;

    public Optional<Output<Boolean>> preserve() {
        return Optional.ofNullable(this.preserve);
    }

    @Import(name="resolveConflicts")
    private @Nullable Output<String> resolveConflicts;

    public Optional<Output<String>> resolveConflicts() {
        return Optional.ofNullable(this.resolveConflicts);
    }

    @Import(name="serviceAccountRoleArn")
    private @Nullable Output<String> serviceAccountRoleArn;

    public Optional<Output<String>> serviceAccountRoleArn() {
        return Optional.ofNullable(this.serviceAccountRoleArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AddonArgs() {}

    private AddonArgs(AddonArgs $) {
        this.addonName = $.addonName;
        this.addonVersion = $.addonVersion;
        this.clusterName = $.clusterName;
        this.configurationValues = $.configurationValues;
        this.preserve = $.preserve;
        this.resolveConflicts = $.resolveConflicts;
        this.serviceAccountRoleArn = $.serviceAccountRoleArn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonArgs $;

        public Builder() {
            $ = new AddonArgs();
        }

        public Builder(AddonArgs defaults) {
            $ = new AddonArgs(Objects.requireNonNull(defaults));
        }

        public Builder addonName(Output<String> addonName) {
            $.addonName = addonName;
            return this;
        }

        public Builder addonName(String addonName) {
            return addonName(Output.of(addonName));
        }

        public Builder addonVersion(@Nullable Output<String> addonVersion) {
            $.addonVersion = addonVersion;
            return this;
        }

        public Builder addonVersion(String addonVersion) {
            return addonVersion(Output.of(addonVersion));
        }

        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        public Builder configurationValues(@Nullable Output<String> configurationValues) {
            $.configurationValues = configurationValues;
            return this;
        }

        public Builder configurationValues(String configurationValues) {
            return configurationValues(Output.of(configurationValues));
        }

        public Builder preserve(@Nullable Output<Boolean> preserve) {
            $.preserve = preserve;
            return this;
        }

        public Builder preserve(Boolean preserve) {
            return preserve(Output.of(preserve));
        }

        public Builder resolveConflicts(@Nullable Output<String> resolveConflicts) {
            $.resolveConflicts = resolveConflicts;
            return this;
        }

        public Builder resolveConflicts(String resolveConflicts) {
            return resolveConflicts(Output.of(resolveConflicts));
        }

        public Builder serviceAccountRoleArn(@Nullable Output<String> serviceAccountRoleArn) {
            $.serviceAccountRoleArn = serviceAccountRoleArn;
            return this;
        }

        public Builder serviceAccountRoleArn(String serviceAccountRoleArn) {
            return serviceAccountRoleArn(Output.of(serviceAccountRoleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AddonArgs build() {
            $.addonName = Objects.requireNonNull($.addonName, "expected parameter 'addonName' to be non-null");
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            return $;
        }
    }

}
