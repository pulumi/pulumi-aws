// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDirectoryPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDirectoryPlainArgs Empty = new GetDirectoryPlainArgs();

    /**
     * Directory identifier for registration in WorkSpaces service.
     * 
     */
    @Import(name="directoryId", required=true)
    private String directoryId;

    /**
     * @return Directory identifier for registration in WorkSpaces service.
     * 
     */
    public String directoryId() {
        return this.directoryId;
    }

    /**
     * A map of tags assigned to the WorkSpaces directory.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return A map of tags assigned to the WorkSpaces directory.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetDirectoryPlainArgs() {}

    private GetDirectoryPlainArgs(GetDirectoryPlainArgs $) {
        this.directoryId = $.directoryId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDirectoryPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDirectoryPlainArgs $;

        public Builder() {
            $ = new GetDirectoryPlainArgs();
        }

        public Builder(GetDirectoryPlainArgs defaults) {
            $ = new GetDirectoryPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param directoryId Directory identifier for registration in WorkSpaces service.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(String directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param tags A map of tags assigned to the WorkSpaces directory.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetDirectoryPlainArgs build() {
            $.directoryId = Objects.requireNonNull($.directoryId, "expected parameter 'directoryId' to be non-null");
            return $;
        }
    }

}
