// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CachesIscsiVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final CachesIscsiVolumeArgs Empty = new CachesIscsiVolumeArgs();

    @Import(name="gatewayArn", required=true)
    private Output<String> gatewayArn;

    public Output<String> gatewayArn() {
        return this.gatewayArn;
    }

    @Import(name="kmsEncrypted")
    private @Nullable Output<Boolean> kmsEncrypted;

    public Optional<Output<Boolean>> kmsEncrypted() {
        return Optional.ofNullable(this.kmsEncrypted);
    }

    @Import(name="kmsKey")
    private @Nullable Output<String> kmsKey;

    public Optional<Output<String>> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    @Import(name="networkInterfaceId", required=true)
    private Output<String> networkInterfaceId;

    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId;
    }

    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    @Import(name="sourceVolumeArn")
    private @Nullable Output<String> sourceVolumeArn;

    public Optional<Output<String>> sourceVolumeArn() {
        return Optional.ofNullable(this.sourceVolumeArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetName", required=true)
    private Output<String> targetName;

    public Output<String> targetName() {
        return this.targetName;
    }

    @Import(name="volumeSizeInBytes", required=true)
    private Output<Integer> volumeSizeInBytes;

    public Output<Integer> volumeSizeInBytes() {
        return this.volumeSizeInBytes;
    }

    private CachesIscsiVolumeArgs() {}

    private CachesIscsiVolumeArgs(CachesIscsiVolumeArgs $) {
        this.gatewayArn = $.gatewayArn;
        this.kmsEncrypted = $.kmsEncrypted;
        this.kmsKey = $.kmsKey;
        this.networkInterfaceId = $.networkInterfaceId;
        this.snapshotId = $.snapshotId;
        this.sourceVolumeArn = $.sourceVolumeArn;
        this.tags = $.tags;
        this.targetName = $.targetName;
        this.volumeSizeInBytes = $.volumeSizeInBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CachesIscsiVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CachesIscsiVolumeArgs $;

        public Builder() {
            $ = new CachesIscsiVolumeArgs();
        }

        public Builder(CachesIscsiVolumeArgs defaults) {
            $ = new CachesIscsiVolumeArgs(Objects.requireNonNull(defaults));
        }

        public Builder gatewayArn(Output<String> gatewayArn) {
            $.gatewayArn = gatewayArn;
            return this;
        }

        public Builder gatewayArn(String gatewayArn) {
            return gatewayArn(Output.of(gatewayArn));
        }

        public Builder kmsEncrypted(@Nullable Output<Boolean> kmsEncrypted) {
            $.kmsEncrypted = kmsEncrypted;
            return this;
        }

        public Builder kmsEncrypted(Boolean kmsEncrypted) {
            return kmsEncrypted(Output.of(kmsEncrypted));
        }

        public Builder kmsKey(@Nullable Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        public Builder networkInterfaceId(Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        public Builder sourceVolumeArn(@Nullable Output<String> sourceVolumeArn) {
            $.sourceVolumeArn = sourceVolumeArn;
            return this;
        }

        public Builder sourceVolumeArn(String sourceVolumeArn) {
            return sourceVolumeArn(Output.of(sourceVolumeArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targetName(Output<String> targetName) {
            $.targetName = targetName;
            return this;
        }

        public Builder targetName(String targetName) {
            return targetName(Output.of(targetName));
        }

        public Builder volumeSizeInBytes(Output<Integer> volumeSizeInBytes) {
            $.volumeSizeInBytes = volumeSizeInBytes;
            return this;
        }

        public Builder volumeSizeInBytes(Integer volumeSizeInBytes) {
            return volumeSizeInBytes(Output.of(volumeSizeInBytes));
        }

        public CachesIscsiVolumeArgs build() {
            $.gatewayArn = Objects.requireNonNull($.gatewayArn, "expected parameter 'gatewayArn' to be non-null");
            $.networkInterfaceId = Objects.requireNonNull($.networkInterfaceId, "expected parameter 'networkInterfaceId' to be non-null");
            $.targetName = Objects.requireNonNull($.targetName, "expected parameter 'targetName' to be non-null");
            $.volumeSizeInBytes = Objects.requireNonNull($.volumeSizeInBytes, "expected parameter 'volumeSizeInBytes' to be non-null");
            return $;
        }
    }

}
