// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.CodeRepositoryGitConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CodeRepositoryState extends com.pulumi.resources.ResourceArgs {

    public static final CodeRepositoryState Empty = new CodeRepositoryState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name of the Code Repository (must be unique).
     * 
     */
    @Import(name="codeRepositoryName")
    private @Nullable Output<String> codeRepositoryName;

    /**
     * @return The name of the Code Repository (must be unique).
     * 
     */
    public Optional<Output<String>> codeRepositoryName() {
        return Optional.ofNullable(this.codeRepositoryName);
    }

    /**
     * Specifies details about the repository. see Git Config details below.
     * 
     */
    @Import(name="gitConfig")
    private @Nullable Output<CodeRepositoryGitConfigArgs> gitConfig;

    /**
     * @return Specifies details about the repository. see Git Config details below.
     * 
     */
    public Optional<Output<CodeRepositoryGitConfigArgs>> gitConfig() {
        return Optional.ofNullable(this.gitConfig);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private CodeRepositoryState() {}

    private CodeRepositoryState(CodeRepositoryState $) {
        this.arn = $.arn;
        this.codeRepositoryName = $.codeRepositoryName;
        this.gitConfig = $.gitConfig;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeRepositoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeRepositoryState $;

        public Builder() {
            $ = new CodeRepositoryState();
        }

        public Builder(CodeRepositoryState defaults) {
            $ = new CodeRepositoryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param codeRepositoryName The name of the Code Repository (must be unique).
         * 
         * @return builder
         * 
         */
        public Builder codeRepositoryName(@Nullable Output<String> codeRepositoryName) {
            $.codeRepositoryName = codeRepositoryName;
            return this;
        }

        /**
         * @param codeRepositoryName The name of the Code Repository (must be unique).
         * 
         * @return builder
         * 
         */
        public Builder codeRepositoryName(String codeRepositoryName) {
            return codeRepositoryName(Output.of(codeRepositoryName));
        }

        /**
         * @param gitConfig Specifies details about the repository. see Git Config details below.
         * 
         * @return builder
         * 
         */
        public Builder gitConfig(@Nullable Output<CodeRepositoryGitConfigArgs> gitConfig) {
            $.gitConfig = gitConfig;
            return this;
        }

        /**
         * @param gitConfig Specifies details about the repository. see Git Config details below.
         * 
         * @return builder
         * 
         */
        public Builder gitConfig(CodeRepositoryGitConfigArgs gitConfig) {
            return gitConfig(Output.of(gitConfig));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public CodeRepositoryState build() {
            return $;
        }
    }

}
