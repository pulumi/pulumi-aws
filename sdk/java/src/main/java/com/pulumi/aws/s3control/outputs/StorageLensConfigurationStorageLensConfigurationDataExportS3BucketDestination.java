// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.outputs;

import com.pulumi.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination {
    /**
     * @return The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    private String accountId;
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon Web Services organization.
     * 
     */
    private String arn;
    /**
     * @return Encryption of the metrics exports in this bucket. See Encryption below for more details.
     * 
     */
    private @Nullable StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption encryption;
    /**
     * @return The export format. Valid values: `CSV`, `Parquet`.
     * 
     */
    private String format;
    /**
     * @return The schema version of the export file. Valid values: `V_1`.
     * 
     */
    private String outputSchemaVersion;
    /**
     * @return The prefix of the destination bucket where the metrics export will be delivered.
     * 
     */
    private @Nullable String prefix;

    private StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination() {}
    /**
     * @return The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon Web Services organization.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Encryption of the metrics exports in this bucket. See Encryption below for more details.
     * 
     */
    public Optional<StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return The export format. Valid values: `CSV`, `Parquet`.
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return The schema version of the export file. Valid values: `V_1`.
     * 
     */
    public String outputSchemaVersion() {
        return this.outputSchemaVersion;
    }
    /**
     * @return The prefix of the destination bucket where the metrics export will be delivered.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String arn;
        private @Nullable StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption encryption;
        private String format;
        private String outputSchemaVersion;
        private @Nullable String prefix;
        public Builder() {}
        public Builder(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.arn = defaults.arn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.outputSchemaVersion = defaults.outputSchemaVersion;
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        @CustomType.Setter
        public Builder outputSchemaVersion(String outputSchemaVersion) {
            this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        public StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination build() {
            final var o = new StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination();
            o.accountId = accountId;
            o.arn = arn;
            o.encryption = encryption;
            o.format = format;
            o.outputSchemaVersion = outputSchemaVersion;
            o.prefix = prefix;
            return o;
        }
    }
}
