// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.TableBorderOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class CellStyleBorderSideSpecificBorderArgs extends com.pulumi.resources.ResourceArgs {

    public static final CellStyleBorderSideSpecificBorderArgs Empty = new CellStyleBorderSideSpecificBorderArgs();

    @Import(name="bottom", required=true)
    private Output<TableBorderOptionsArgs> bottom;

    public Output<TableBorderOptionsArgs> bottom() {
        return this.bottom;
    }

    @Import(name="innerHorizontal", required=true)
    private Output<TableBorderOptionsArgs> innerHorizontal;

    public Output<TableBorderOptionsArgs> innerHorizontal() {
        return this.innerHorizontal;
    }

    @Import(name="innerVertical", required=true)
    private Output<TableBorderOptionsArgs> innerVertical;

    public Output<TableBorderOptionsArgs> innerVertical() {
        return this.innerVertical;
    }

    @Import(name="left", required=true)
    private Output<TableBorderOptionsArgs> left;

    public Output<TableBorderOptionsArgs> left() {
        return this.left;
    }

    @Import(name="right", required=true)
    private Output<TableBorderOptionsArgs> right;

    public Output<TableBorderOptionsArgs> right() {
        return this.right;
    }

    @Import(name="top", required=true)
    private Output<TableBorderOptionsArgs> top;

    public Output<TableBorderOptionsArgs> top() {
        return this.top;
    }

    private CellStyleBorderSideSpecificBorderArgs() {}

    private CellStyleBorderSideSpecificBorderArgs(CellStyleBorderSideSpecificBorderArgs $) {
        this.bottom = $.bottom;
        this.innerHorizontal = $.innerHorizontal;
        this.innerVertical = $.innerVertical;
        this.left = $.left;
        this.right = $.right;
        this.top = $.top;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CellStyleBorderSideSpecificBorderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CellStyleBorderSideSpecificBorderArgs $;

        public Builder() {
            $ = new CellStyleBorderSideSpecificBorderArgs();
        }

        public Builder(CellStyleBorderSideSpecificBorderArgs defaults) {
            $ = new CellStyleBorderSideSpecificBorderArgs(Objects.requireNonNull(defaults));
        }

        public Builder bottom(Output<TableBorderOptionsArgs> bottom) {
            $.bottom = bottom;
            return this;
        }

        public Builder bottom(TableBorderOptionsArgs bottom) {
            return bottom(Output.of(bottom));
        }

        public Builder innerHorizontal(Output<TableBorderOptionsArgs> innerHorizontal) {
            $.innerHorizontal = innerHorizontal;
            return this;
        }

        public Builder innerHorizontal(TableBorderOptionsArgs innerHorizontal) {
            return innerHorizontal(Output.of(innerHorizontal));
        }

        public Builder innerVertical(Output<TableBorderOptionsArgs> innerVertical) {
            $.innerVertical = innerVertical;
            return this;
        }

        public Builder innerVertical(TableBorderOptionsArgs innerVertical) {
            return innerVertical(Output.of(innerVertical));
        }

        public Builder left(Output<TableBorderOptionsArgs> left) {
            $.left = left;
            return this;
        }

        public Builder left(TableBorderOptionsArgs left) {
            return left(Output.of(left));
        }

        public Builder right(Output<TableBorderOptionsArgs> right) {
            $.right = right;
            return this;
        }

        public Builder right(TableBorderOptionsArgs right) {
            return right(Output.of(right));
        }

        public Builder top(Output<TableBorderOptionsArgs> top) {
            $.top = top;
            return this;
        }

        public Builder top(TableBorderOptionsArgs top) {
            return top(Output.of(top));
        }

        public CellStyleBorderSideSpecificBorderArgs build() {
            if ($.bottom == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "bottom");
            }
            if ($.innerHorizontal == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "innerHorizontal");
            }
            if ($.innerVertical == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "innerVertical");
            }
            if ($.left == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "left");
            }
            if ($.right == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "right");
            }
            if ($.top == null) {
                throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorderArgs", "top");
            }
            return $;
        }
    }

}
