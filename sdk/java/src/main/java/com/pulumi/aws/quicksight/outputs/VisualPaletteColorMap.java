// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DataPathValue;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualPaletteColorMap {
    private String color;
    private DataPathValue element;
    private @Nullable String timeGranularity;

    private VisualPaletteColorMap() {}
    public String color() {
        return this.color;
    }
    public DataPathValue element() {
        return this.element;
    }
    public Optional<String> timeGranularity() {
        return Optional.ofNullable(this.timeGranularity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualPaletteColorMap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String color;
        private DataPathValue element;
        private @Nullable String timeGranularity;
        public Builder() {}
        public Builder(VisualPaletteColorMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.element = defaults.element;
    	      this.timeGranularity = defaults.timeGranularity;
        }

        @CustomType.Setter
        public Builder color(String color) {
            if (color == null) {
              throw new MissingRequiredPropertyException("VisualPaletteColorMap", "color");
            }
            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder element(DataPathValue element) {
            if (element == null) {
              throw new MissingRequiredPropertyException("VisualPaletteColorMap", "element");
            }
            this.element = element;
            return this;
        }
        @CustomType.Setter
        public Builder timeGranularity(@Nullable String timeGranularity) {

            this.timeGranularity = timeGranularity;
            return this;
        }
        public VisualPaletteColorMap build() {
            final var _resultValue = new VisualPaletteColorMap();
            _resultValue.color = color;
            _resultValue.element = element;
            _resultValue.timeGranularity = timeGranularity;
            return _resultValue;
        }
    }
}
