// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration;
import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerOutlierDetectionInterval;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVirtualNodeSpecListenerOutlierDetection {
    private List<GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration> baseEjectionDurations;
    private List<GetVirtualNodeSpecListenerOutlierDetectionInterval> intervals;
    private Integer maxEjectionPercent;
    private Integer maxServerErrors;

    private GetVirtualNodeSpecListenerOutlierDetection() {}
    public List<GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration> baseEjectionDurations() {
        return this.baseEjectionDurations;
    }
    public List<GetVirtualNodeSpecListenerOutlierDetectionInterval> intervals() {
        return this.intervals;
    }
    public Integer maxEjectionPercent() {
        return this.maxEjectionPercent;
    }
    public Integer maxServerErrors() {
        return this.maxServerErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNodeSpecListenerOutlierDetection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration> baseEjectionDurations;
        private List<GetVirtualNodeSpecListenerOutlierDetectionInterval> intervals;
        private Integer maxEjectionPercent;
        private Integer maxServerErrors;
        public Builder() {}
        public Builder(GetVirtualNodeSpecListenerOutlierDetection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseEjectionDurations = defaults.baseEjectionDurations;
    	      this.intervals = defaults.intervals;
    	      this.maxEjectionPercent = defaults.maxEjectionPercent;
    	      this.maxServerErrors = defaults.maxServerErrors;
        }

        @CustomType.Setter
        public Builder baseEjectionDurations(List<GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration> baseEjectionDurations) {
            this.baseEjectionDurations = Objects.requireNonNull(baseEjectionDurations);
            return this;
        }
        public Builder baseEjectionDurations(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration... baseEjectionDurations) {
            return baseEjectionDurations(List.of(baseEjectionDurations));
        }
        @CustomType.Setter
        public Builder intervals(List<GetVirtualNodeSpecListenerOutlierDetectionInterval> intervals) {
            this.intervals = Objects.requireNonNull(intervals);
            return this;
        }
        public Builder intervals(GetVirtualNodeSpecListenerOutlierDetectionInterval... intervals) {
            return intervals(List.of(intervals));
        }
        @CustomType.Setter
        public Builder maxEjectionPercent(Integer maxEjectionPercent) {
            this.maxEjectionPercent = Objects.requireNonNull(maxEjectionPercent);
            return this;
        }
        @CustomType.Setter
        public Builder maxServerErrors(Integer maxServerErrors) {
            this.maxServerErrors = Objects.requireNonNull(maxServerErrors);
            return this;
        }
        public GetVirtualNodeSpecListenerOutlierDetection build() {
            final var o = new GetVirtualNodeSpecListenerOutlierDetection();
            o.baseEjectionDurations = baseEjectionDurations;
            o.intervals = intervals;
            o.maxEjectionPercent = maxEjectionPercent;
            o.maxServerErrors = maxServerErrors;
            return o;
        }
    }
}
