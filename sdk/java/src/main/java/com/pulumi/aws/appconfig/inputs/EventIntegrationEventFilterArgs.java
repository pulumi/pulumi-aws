// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class EventIntegrationEventFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventIntegrationEventFilterArgs Empty = new EventIntegrationEventFilterArgs();

    /**
     * Source of the events.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Source of the events.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private EventIntegrationEventFilterArgs() {}

    private EventIntegrationEventFilterArgs(EventIntegrationEventFilterArgs $) {
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventIntegrationEventFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventIntegrationEventFilterArgs $;

        public Builder() {
            $ = new EventIntegrationEventFilterArgs();
        }

        public Builder(EventIntegrationEventFilterArgs defaults) {
            $ = new EventIntegrationEventFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param source Source of the events.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Source of the events.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public EventIntegrationEventFilterArgs build() {
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
