// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.bedrock.AgentcoreGatewayTargetArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetState;
import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetCredentialProviderConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetTargetConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an AWS Bedrock AgentCore Gateway Target. Gateway targets define the endpoints and configurations that a gateway can invoke, such as Lambda functions or APIs, allowing agents to interact with external services through the Model Context Protocol (MCP).
 * 
 * ## Example Usage
 * 
 * ### Lambda Target with Gateway IAM Role
 * 
 * ### Target with API Key Authentication
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTarget;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTargetArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationApiKeyArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var apiKeyExample = new AgentcoreGatewayTarget("apiKeyExample", AgentcoreGatewayTargetArgs.builder()
 *             .name("api-target")
 *             .gatewayIdentifier(exampleAwsBedrockagentcoreGateway.gatewayId())
 *             .description("External API target with API key authentication")
 *             .credentialProviderConfiguration(AgentcoreGatewayTargetCredentialProviderConfigurationArgs.builder()
 *                 .apiKey(AgentcoreGatewayTargetCredentialProviderConfigurationApiKeyArgs.builder()
 *                     .providerArn("arn:aws:iam::123456789012:oidc-provider/example.com")
 *                     .credentialLocation("HEADER")
 *                     .credentialParameterName("X-API-Key")
 *                     .credentialPrefix("Bearer")
 *                     .build())
 *                 .build())
 *             .targetConfiguration(AgentcoreGatewayTargetTargetConfigurationArgs.builder()
 *                 .mcp(AgentcoreGatewayTargetTargetConfigurationMcpArgs.builder()
 *                     .lambda(AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs.builder()
 *                         .lambdaArn(example.arn())
 *                         .toolSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs.builder()
 *                             .inlinePayloads(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs.builder()
 *                                 .name("api_tool")
 *                                 .description("External API integration tool")
 *                                 .inputSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs.builder()
 *                                     .type("string")
 *                                     .description("Simple string input for API calls")
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Target with OAuth Authentication
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTarget;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTargetArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var oauthExample = new AgentcoreGatewayTarget("oauthExample", AgentcoreGatewayTargetArgs.builder()
 *             .name("oauth-target")
 *             .gatewayIdentifier(exampleAwsBedrockagentcoreGateway.gatewayId())
 *             .credentialProviderConfiguration(AgentcoreGatewayTargetCredentialProviderConfigurationArgs.builder()
 *                 .oauth(AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs.builder()
 *                     .providerArn("arn:aws:iam::123456789012:oidc-provider/oauth.example.com")
 *                     .scopes(                    
 *                         "read",
 *                         "write")
 *                     .customParameters(Map.ofEntries(
 *                         Map.entry("client_type", "confidential"),
 *                         Map.entry("grant_type", "authorization_code")
 *                     ))
 *                     .build())
 *                 .build())
 *             .targetConfiguration(AgentcoreGatewayTargetTargetConfigurationArgs.builder()
 *                 .mcp(AgentcoreGatewayTargetTargetConfigurationMcpArgs.builder()
 *                     .lambda(AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs.builder()
 *                         .lambdaArn(example.arn())
 *                         .toolSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs.builder()
 *                             .inlinePayloads(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs.builder()
 *                                 .name("oauth_tool")
 *                                 .description("OAuth-authenticated service")
 *                                 .inputSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs.builder()
 *                                     .type("array")
 *                                     .items(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsArgs.builder()
 *                                         .type("object")
 *                                         .properties(                                        
 *                                             AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsPropertyArgs.builder()
 *                                                 .name("id")
 *                                                 .type("string")
 *                                                 .required(true)
 *                                                 .build(),
 *                                             AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsPropertyArgs.builder()
 *                                                 .name("value")
 *                                                 .type("number")
 *                                                 .build())
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Complex Schema with JSON Serialization
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTarget;
 * import com.pulumi.aws.bedrock.AgentcoreGatewayTargetArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRoleArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var complexSchema = new AgentcoreGatewayTarget("complexSchema", AgentcoreGatewayTargetArgs.builder()
 *             .name("complex-target")
 *             .gatewayIdentifier(exampleAwsBedrockagentcoreGateway.gatewayId())
 *             .credentialProviderConfiguration(AgentcoreGatewayTargetCredentialProviderConfigurationArgs.builder()
 *                 .gatewayIamRole(AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRoleArgs.builder()
 *                     .build())
 *                 .build())
 *             .targetConfiguration(AgentcoreGatewayTargetTargetConfigurationArgs.builder()
 *                 .mcp(AgentcoreGatewayTargetTargetConfigurationMcpArgs.builder()
 *                     .lambda(AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs.builder()
 *                         .lambdaArn(example.arn())
 *                         .toolSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs.builder()
 *                             .inlinePayloads(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs.builder()
 *                                 .name("complex_tool")
 *                                 .description("Tool with complex nested schema")
 *                                 .inputSchema(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs.builder()
 *                                     .type("object")
 *                                     .properties(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyArgs.builder()
 *                                         .name("profile")
 *                                         .type("object")
 *                                         .properties(                                        
 *                                             AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyPropertyArgs.builder()
 *                                                 .name("nested_tags")
 *                                                 .type("array")
 *                                                 .itemsJson(serializeJson(
 *                                                     jsonObject(
 *                                                         jsonProperty("type", "string")
 *                                                     )))
 *                                                 .build(),
 *                                             AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyPropertyArgs.builder()
 *                                                 .name("metadata")
 *                                                 .type("object")
 *                                                 .propertiesJson(serializeJson(
 *                                                     jsonObject(
 *                                                         jsonProperty("properties", jsonObject(
 *                                                             jsonProperty("created_at", jsonObject(
 *                                                                 jsonProperty("type", "string")
 *                                                             )),
 *                                                             jsonProperty("version", jsonObject(
 *                                                                 jsonProperty("type", "number")
 *                                                             ))
 *                                                         )),
 *                                                         jsonProperty("required", jsonArray("created_at"))
 *                                                     )))
 *                                                 .build())
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Bedrock AgentCore Gateway Target using the gateway identifier and target ID separated by a comma. For example:
 * 
 * ```sh
 * $ pulumi import aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget example GATEWAY1234567890,TARGET0987654321
 * ```
 * 
 */
@ResourceType(type="aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget")
public class AgentcoreGatewayTarget extends com.pulumi.resources.CustomResource {
    /**
     * Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
     * 
     */
    @Export(name="credentialProviderConfiguration", refs={AgentcoreGatewayTargetCredentialProviderConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ AgentcoreGatewayTargetCredentialProviderConfiguration> credentialProviderConfiguration;

    /**
     * @return Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
     * 
     */
    public Output<Optional<AgentcoreGatewayTargetCredentialProviderConfiguration>> credentialProviderConfiguration() {
        return Codegen.optional(this.credentialProviderConfiguration);
    }
    /**
     * Description of the gateway target.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the gateway target.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Identifier of the gateway that this target belongs to.
     * 
     */
    @Export(name="gatewayIdentifier", refs={String.class}, tree="[0]")
    private Output<String> gatewayIdentifier;

    /**
     * @return Identifier of the gateway that this target belongs to.
     * 
     */
    public Output<String> gatewayIdentifier() {
        return this.gatewayIdentifier;
    }
    /**
     * Name of the gateway target.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the gateway target.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Configuration for the target endpoint. See `targetConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="targetConfiguration", refs={AgentcoreGatewayTargetTargetConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ AgentcoreGatewayTargetTargetConfiguration> targetConfiguration;

    /**
     * @return Configuration for the target endpoint. See `targetConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Optional<AgentcoreGatewayTargetTargetConfiguration>> targetConfiguration() {
        return Codegen.optional(this.targetConfiguration);
    }
    /**
     * Unique identifier of the gateway target.
     * 
     */
    @Export(name="targetId", refs={String.class}, tree="[0]")
    private Output<String> targetId;

    /**
     * @return Unique identifier of the gateway target.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }
    @Export(name="timeouts", refs={AgentcoreGatewayTargetTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ AgentcoreGatewayTargetTimeouts> timeouts;

    public Output<Optional<AgentcoreGatewayTargetTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AgentcoreGatewayTarget(java.lang.String name) {
        this(name, AgentcoreGatewayTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AgentcoreGatewayTarget(java.lang.String name, AgentcoreGatewayTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AgentcoreGatewayTarget(java.lang.String name, AgentcoreGatewayTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AgentcoreGatewayTarget(java.lang.String name, Output<java.lang.String> id, @Nullable AgentcoreGatewayTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget", name, state, makeResourceOptions(options, id), false);
    }

    private static AgentcoreGatewayTargetArgs makeArgs(AgentcoreGatewayTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AgentcoreGatewayTargetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AgentcoreGatewayTarget get(java.lang.String name, Output<java.lang.String> id, @Nullable AgentcoreGatewayTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AgentcoreGatewayTarget(name, id, state, options);
    }
}
