// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg.inputs;

import com.pulumi.aws.cfg.inputs.RemediationConfigurationExecutionControlsArgs;
import com.pulumi.aws.cfg.inputs.RemediationConfigurationParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemediationConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final RemediationConfigurationState Empty = new RemediationConfigurationState();

    /**
     * ARN of the Config Remediation Configuration.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Config Remediation Configuration.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Remediation is triggered automatically if `true`.
     * 
     */
    @Import(name="automatic")
    private @Nullable Output<Boolean> automatic;

    /**
     * @return Remediation is triggered automatically if `true`.
     * 
     */
    public Optional<Output<Boolean>> automatic() {
        return Optional.ofNullable(this.automatic);
    }

    /**
     * Name of the AWS Config rule.
     * 
     */
    @Import(name="configRuleName")
    private @Nullable Output<String> configRuleName;

    /**
     * @return Name of the AWS Config rule.
     * 
     */
    public Optional<Output<String>> configRuleName() {
        return Optional.ofNullable(this.configRuleName);
    }

    /**
     * Configuration block for execution controls. See below.
     * 
     */
    @Import(name="executionControls")
    private @Nullable Output<RemediationConfigurationExecutionControlsArgs> executionControls;

    /**
     * @return Configuration block for execution controls. See below.
     * 
     */
    public Optional<Output<RemediationConfigurationExecutionControlsArgs>> executionControls() {
        return Optional.ofNullable(this.executionControls);
    }

    /**
     * Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
     * 
     */
    @Import(name="maximumAutomaticAttempts")
    private @Nullable Output<Integer> maximumAutomaticAttempts;

    /**
     * @return Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
     * 
     */
    public Optional<Output<Integer>> maximumAutomaticAttempts() {
        return Optional.ofNullable(this.maximumAutomaticAttempts);
    }

    /**
     * Can be specified multiple times for each parameter. Each parameter block supports arguments below.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<RemediationConfigurationParameterArgs>> parameters;

    /**
     * @return Can be specified multiple times for each parameter. Each parameter block supports arguments below.
     * 
     */
    public Optional<Output<List<RemediationConfigurationParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Type of resource.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Type of resource.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
     * 
     */
    @Import(name="retryAttemptSeconds")
    private @Nullable Output<Integer> retryAttemptSeconds;

    /**
     * @return Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
     * 
     */
    public Optional<Output<Integer>> retryAttemptSeconds() {
        return Optional.ofNullable(this.retryAttemptSeconds);
    }

    /**
     * Target ID is the name of the public document.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return Target ID is the name of the public document.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * Type of the target. Target executes remediation. For example, SSM document.
     * 
     */
    @Import(name="targetType")
    private @Nullable Output<String> targetType;

    /**
     * @return Type of the target. Target executes remediation. For example, SSM document.
     * 
     */
    public Optional<Output<String>> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    /**
     * Version of the target. For example, version of the SSM document
     * 
     */
    @Import(name="targetVersion")
    private @Nullable Output<String> targetVersion;

    /**
     * @return Version of the target. For example, version of the SSM document
     * 
     */
    public Optional<Output<String>> targetVersion() {
        return Optional.ofNullable(this.targetVersion);
    }

    private RemediationConfigurationState() {}

    private RemediationConfigurationState(RemediationConfigurationState $) {
        this.arn = $.arn;
        this.automatic = $.automatic;
        this.configRuleName = $.configRuleName;
        this.executionControls = $.executionControls;
        this.maximumAutomaticAttempts = $.maximumAutomaticAttempts;
        this.parameters = $.parameters;
        this.resourceType = $.resourceType;
        this.retryAttemptSeconds = $.retryAttemptSeconds;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
        this.targetVersion = $.targetVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationConfigurationState $;

        public Builder() {
            $ = new RemediationConfigurationState();
        }

        public Builder(RemediationConfigurationState defaults) {
            $ = new RemediationConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Config Remediation Configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Config Remediation Configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param automatic Remediation is triggered automatically if `true`.
         * 
         * @return builder
         * 
         */
        public Builder automatic(@Nullable Output<Boolean> automatic) {
            $.automatic = automatic;
            return this;
        }

        /**
         * @param automatic Remediation is triggered automatically if `true`.
         * 
         * @return builder
         * 
         */
        public Builder automatic(Boolean automatic) {
            return automatic(Output.of(automatic));
        }

        /**
         * @param configRuleName Name of the AWS Config rule.
         * 
         * @return builder
         * 
         */
        public Builder configRuleName(@Nullable Output<String> configRuleName) {
            $.configRuleName = configRuleName;
            return this;
        }

        /**
         * @param configRuleName Name of the AWS Config rule.
         * 
         * @return builder
         * 
         */
        public Builder configRuleName(String configRuleName) {
            return configRuleName(Output.of(configRuleName));
        }

        /**
         * @param executionControls Configuration block for execution controls. See below.
         * 
         * @return builder
         * 
         */
        public Builder executionControls(@Nullable Output<RemediationConfigurationExecutionControlsArgs> executionControls) {
            $.executionControls = executionControls;
            return this;
        }

        /**
         * @param executionControls Configuration block for execution controls. See below.
         * 
         * @return builder
         * 
         */
        public Builder executionControls(RemediationConfigurationExecutionControlsArgs executionControls) {
            return executionControls(Output.of(executionControls));
        }

        /**
         * @param maximumAutomaticAttempts Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
         * 
         * @return builder
         * 
         */
        public Builder maximumAutomaticAttempts(@Nullable Output<Integer> maximumAutomaticAttempts) {
            $.maximumAutomaticAttempts = maximumAutomaticAttempts;
            return this;
        }

        /**
         * @param maximumAutomaticAttempts Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
         * 
         * @return builder
         * 
         */
        public Builder maximumAutomaticAttempts(Integer maximumAutomaticAttempts) {
            return maximumAutomaticAttempts(Output.of(maximumAutomaticAttempts));
        }

        /**
         * @param parameters Can be specified multiple times for each parameter. Each parameter block supports arguments below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<RemediationConfigurationParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Can be specified multiple times for each parameter. Each parameter block supports arguments below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<RemediationConfigurationParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Can be specified multiple times for each parameter. Each parameter block supports arguments below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(RemediationConfigurationParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param resourceType Type of resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Type of resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param retryAttemptSeconds Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder retryAttemptSeconds(@Nullable Output<Integer> retryAttemptSeconds) {
            $.retryAttemptSeconds = retryAttemptSeconds;
            return this;
        }

        /**
         * @param retryAttemptSeconds Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder retryAttemptSeconds(Integer retryAttemptSeconds) {
            return retryAttemptSeconds(Output.of(retryAttemptSeconds));
        }

        /**
         * @param targetId Target ID is the name of the public document.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId Target ID is the name of the public document.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param targetType Type of the target. Target executes remediation. For example, SSM document.
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType Type of the target. Target executes remediation. For example, SSM document.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        /**
         * @param targetVersion Version of the target. For example, version of the SSM document
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(@Nullable Output<String> targetVersion) {
            $.targetVersion = targetVersion;
            return this;
        }

        /**
         * @param targetVersion Version of the target. For example, version of the SSM document
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(String targetVersion) {
            return targetVersion(Output.of(targetVersion));
        }

        public RemediationConfigurationState build() {
            return $;
        }
    }

}
