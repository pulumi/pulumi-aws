// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.aws.cognito.outputs.RiskConfigurationCompromisedCredentialsRiskConfigurationActions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class RiskConfigurationCompromisedCredentialsRiskConfiguration {
    /**
     * @return The compromised credentials risk configuration actions. See details below.
     * 
     */
    private RiskConfigurationCompromisedCredentialsRiskConfigurationActions actions;
    /**
     * @return Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
     * 
     */
    private @Nullable List<String> eventFilters;

    private RiskConfigurationCompromisedCredentialsRiskConfiguration() {}
    /**
     * @return The compromised credentials risk configuration actions. See details below.
     * 
     */
    public RiskConfigurationCompromisedCredentialsRiskConfigurationActions actions() {
        return this.actions;
    }
    /**
     * @return Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
     * 
     */
    public List<String> eventFilters() {
        return this.eventFilters == null ? List.of() : this.eventFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RiskConfigurationCompromisedCredentialsRiskConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private RiskConfigurationCompromisedCredentialsRiskConfigurationActions actions;
        private @Nullable List<String> eventFilters;
        public Builder() {}
        public Builder(RiskConfigurationCompromisedCredentialsRiskConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.eventFilters = defaults.eventFilters;
        }

        @CustomType.Setter
        public Builder actions(RiskConfigurationCompromisedCredentialsRiskConfigurationActions actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("RiskConfigurationCompromisedCredentialsRiskConfiguration", "actions");
            }
            this.actions = actions;
            return this;
        }
        @CustomType.Setter
        public Builder eventFilters(@Nullable List<String> eventFilters) {

            this.eventFilters = eventFilters;
            return this;
        }
        public Builder eventFilters(String... eventFilters) {
            return eventFilters(List.of(eventFilters));
        }
        public RiskConfigurationCompromisedCredentialsRiskConfiguration build() {
            final var _resultValue = new RiskConfigurationCompromisedCredentialsRiskConfiguration();
            _resultValue.actions = actions;
            _resultValue.eventFilters = eventFilters;
            return _resultValue;
        }
    }
}
