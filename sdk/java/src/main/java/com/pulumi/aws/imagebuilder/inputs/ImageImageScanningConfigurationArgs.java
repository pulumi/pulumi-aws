// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.ImageImageScanningConfigurationEcrConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageImageScanningConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageImageScanningConfigurationArgs Empty = new ImageImageScanningConfigurationArgs();

    /**
     * Configuration block with ECR configuration. Detailed below.
     * 
     */
    @Import(name="ecrConfiguration")
    private @Nullable Output<ImageImageScanningConfigurationEcrConfigurationArgs> ecrConfiguration;

    /**
     * @return Configuration block with ECR configuration. Detailed below.
     * 
     */
    public Optional<Output<ImageImageScanningConfigurationEcrConfigurationArgs>> ecrConfiguration() {
        return Optional.ofNullable(this.ecrConfiguration);
    }

    /**
     * Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to `false`.
     * 
     */
    @Import(name="imageScanningEnabled")
    private @Nullable Output<Boolean> imageScanningEnabled;

    /**
     * @return Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> imageScanningEnabled() {
        return Optional.ofNullable(this.imageScanningEnabled);
    }

    private ImageImageScanningConfigurationArgs() {}

    private ImageImageScanningConfigurationArgs(ImageImageScanningConfigurationArgs $) {
        this.ecrConfiguration = $.ecrConfiguration;
        this.imageScanningEnabled = $.imageScanningEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageImageScanningConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageImageScanningConfigurationArgs $;

        public Builder() {
            $ = new ImageImageScanningConfigurationArgs();
        }

        public Builder(ImageImageScanningConfigurationArgs defaults) {
            $ = new ImageImageScanningConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ecrConfiguration Configuration block with ECR configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder ecrConfiguration(@Nullable Output<ImageImageScanningConfigurationEcrConfigurationArgs> ecrConfiguration) {
            $.ecrConfiguration = ecrConfiguration;
            return this;
        }

        /**
         * @param ecrConfiguration Configuration block with ECR configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder ecrConfiguration(ImageImageScanningConfigurationEcrConfigurationArgs ecrConfiguration) {
            return ecrConfiguration(Output.of(ecrConfiguration));
        }

        /**
         * @param imageScanningEnabled Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder imageScanningEnabled(@Nullable Output<Boolean> imageScanningEnabled) {
            $.imageScanningEnabled = imageScanningEnabled;
            return this;
        }

        /**
         * @param imageScanningEnabled Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder imageScanningEnabled(Boolean imageScanningEnabled) {
            return imageScanningEnabled(Output.of(imageScanningEnabled));
        }

        public ImageImageScanningConfigurationArgs build() {
            return $;
        }
    }

}
