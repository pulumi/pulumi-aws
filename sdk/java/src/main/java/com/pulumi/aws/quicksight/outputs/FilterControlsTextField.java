// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.TextAreaControlDisplayOptions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FilterControlsTextField {
    private @Nullable TextAreaControlDisplayOptions displayOptions;
    private String filterControlId;
    private String sourceFilterId;
    private String title;

    private FilterControlsTextField() {}
    public Optional<TextAreaControlDisplayOptions> displayOptions() {
        return Optional.ofNullable(this.displayOptions);
    }
    public String filterControlId() {
        return this.filterControlId;
    }
    public String sourceFilterId() {
        return this.sourceFilterId;
    }
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilterControlsTextField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TextAreaControlDisplayOptions displayOptions;
        private String filterControlId;
        private String sourceFilterId;
        private String title;
        public Builder() {}
        public Builder(FilterControlsTextField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayOptions = defaults.displayOptions;
    	      this.filterControlId = defaults.filterControlId;
    	      this.sourceFilterId = defaults.sourceFilterId;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder displayOptions(@Nullable TextAreaControlDisplayOptions displayOptions) {

            this.displayOptions = displayOptions;
            return this;
        }
        @CustomType.Setter
        public Builder filterControlId(String filterControlId) {
            if (filterControlId == null) {
              throw new MissingRequiredPropertyException("FilterControlsTextField", "filterControlId");
            }
            this.filterControlId = filterControlId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFilterId(String sourceFilterId) {
            if (sourceFilterId == null) {
              throw new MissingRequiredPropertyException("FilterControlsTextField", "sourceFilterId");
            }
            this.sourceFilterId = sourceFilterId;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("FilterControlsTextField", "title");
            }
            this.title = title;
            return this;
        }
        public FilterControlsTextField build() {
            final var _resultValue = new FilterControlsTextField();
            _resultValue.displayOptions = displayOptions;
            _resultValue.filterControlId = filterControlId;
            _resultValue.sourceFilterId = sourceFilterId;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
