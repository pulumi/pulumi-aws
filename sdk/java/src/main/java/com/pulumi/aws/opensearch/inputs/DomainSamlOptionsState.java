// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.inputs;

import com.pulumi.aws.opensearch.inputs.DomainSamlOptionsSamlOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainSamlOptionsState extends com.pulumi.resources.ResourceArgs {

    public static final DomainSamlOptionsState Empty = new DomainSamlOptionsState();

    /**
     * Name of the domain.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return Name of the domain.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * SAML authentication options for an AWS OpenSearch Domain.
     * 
     */
    @Import(name="samlOptions")
    private @Nullable Output<DomainSamlOptionsSamlOptionsArgs> samlOptions;

    /**
     * @return SAML authentication options for an AWS OpenSearch Domain.
     * 
     */
    public Optional<Output<DomainSamlOptionsSamlOptionsArgs>> samlOptions() {
        return Optional.ofNullable(this.samlOptions);
    }

    private DomainSamlOptionsState() {}

    private DomainSamlOptionsState(DomainSamlOptionsState $) {
        this.domainName = $.domainName;
        this.samlOptions = $.samlOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainSamlOptionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainSamlOptionsState $;

        public Builder() {
            $ = new DomainSamlOptionsState();
        }

        public Builder(DomainSamlOptionsState defaults) {
            $ = new DomainSamlOptionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Name of the domain.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Name of the domain.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param samlOptions SAML authentication options for an AWS OpenSearch Domain.
         * 
         * @return builder
         * 
         */
        public Builder samlOptions(@Nullable Output<DomainSamlOptionsSamlOptionsArgs> samlOptions) {
            $.samlOptions = samlOptions;
            return this;
        }

        /**
         * @param samlOptions SAML authentication options for an AWS OpenSearch Domain.
         * 
         * @return builder
         * 
         */
        public Builder samlOptions(DomainSamlOptionsSamlOptionsArgs samlOptions) {
            return samlOptions(Output.of(samlOptions));
        }

        public DomainSamlOptionsState build() {
            return $;
        }
    }

}
