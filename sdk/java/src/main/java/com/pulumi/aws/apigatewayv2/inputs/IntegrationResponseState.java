// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationResponseState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationResponseState Empty = new IntegrationResponseState();

    @Import(name="apiId")
    private @Nullable Output<String> apiId;

    public Optional<Output<String>> apiId() {
        return Optional.ofNullable(this.apiId);
    }

    @Import(name="contentHandlingStrategy")
    private @Nullable Output<String> contentHandlingStrategy;

    public Optional<Output<String>> contentHandlingStrategy() {
        return Optional.ofNullable(this.contentHandlingStrategy);
    }

    @Import(name="integrationId")
    private @Nullable Output<String> integrationId;

    public Optional<Output<String>> integrationId() {
        return Optional.ofNullable(this.integrationId);
    }

    @Import(name="integrationResponseKey")
    private @Nullable Output<String> integrationResponseKey;

    public Optional<Output<String>> integrationResponseKey() {
        return Optional.ofNullable(this.integrationResponseKey);
    }

    @Import(name="responseTemplates")
    private @Nullable Output<Map<String,String>> responseTemplates;

    public Optional<Output<Map<String,String>>> responseTemplates() {
        return Optional.ofNullable(this.responseTemplates);
    }

    @Import(name="templateSelectionExpression")
    private @Nullable Output<String> templateSelectionExpression;

    public Optional<Output<String>> templateSelectionExpression() {
        return Optional.ofNullable(this.templateSelectionExpression);
    }

    private IntegrationResponseState() {}

    private IntegrationResponseState(IntegrationResponseState $) {
        this.apiId = $.apiId;
        this.contentHandlingStrategy = $.contentHandlingStrategy;
        this.integrationId = $.integrationId;
        this.integrationResponseKey = $.integrationResponseKey;
        this.responseTemplates = $.responseTemplates;
        this.templateSelectionExpression = $.templateSelectionExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationResponseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationResponseState $;

        public Builder() {
            $ = new IntegrationResponseState();
        }

        public Builder(IntegrationResponseState defaults) {
            $ = new IntegrationResponseState(Objects.requireNonNull(defaults));
        }

        public Builder apiId(@Nullable Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        public Builder contentHandlingStrategy(@Nullable Output<String> contentHandlingStrategy) {
            $.contentHandlingStrategy = contentHandlingStrategy;
            return this;
        }

        public Builder contentHandlingStrategy(String contentHandlingStrategy) {
            return contentHandlingStrategy(Output.of(contentHandlingStrategy));
        }

        public Builder integrationId(@Nullable Output<String> integrationId) {
            $.integrationId = integrationId;
            return this;
        }

        public Builder integrationId(String integrationId) {
            return integrationId(Output.of(integrationId));
        }

        public Builder integrationResponseKey(@Nullable Output<String> integrationResponseKey) {
            $.integrationResponseKey = integrationResponseKey;
            return this;
        }

        public Builder integrationResponseKey(String integrationResponseKey) {
            return integrationResponseKey(Output.of(integrationResponseKey));
        }

        public Builder responseTemplates(@Nullable Output<Map<String,String>> responseTemplates) {
            $.responseTemplates = responseTemplates;
            return this;
        }

        public Builder responseTemplates(Map<String,String> responseTemplates) {
            return responseTemplates(Output.of(responseTemplates));
        }

        public Builder templateSelectionExpression(@Nullable Output<String> templateSelectionExpression) {
            $.templateSelectionExpression = templateSelectionExpression;
            return this;
        }

        public Builder templateSelectionExpression(String templateSelectionExpression) {
            return templateSelectionExpression(Output.of(templateSelectionExpression));
        }

        public IntegrationResponseState build() {
            return $;
        }
    }

}
