// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBudgetCalculatedSpendActualSpend {
    /**
     * @return (Required) The amount of cost or usage being measured for a budget.
     * 
     */
    private String amount;
    /**
     * @return (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
     * 
     */
    private String unit;

    private GetBudgetCalculatedSpendActualSpend() {}
    /**
     * @return (Required) The amount of cost or usage being measured for a budget.
     * 
     */
    public String amount() {
        return this.amount;
    }
    /**
     * @return (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
     * 
     */
    public String unit() {
        return this.unit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBudgetCalculatedSpendActualSpend defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String amount;
        private String unit;
        public Builder() {}
        public Builder(GetBudgetCalculatedSpendActualSpend defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.unit = defaults.unit;
        }

        @CustomType.Setter
        public Builder amount(String amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }
        @CustomType.Setter
        public Builder unit(String unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }
        public GetBudgetCalculatedSpendActualSpend build() {
            final var o = new GetBudgetCalculatedSpendActualSpend();
            o.amount = amount;
            o.unit = unit;
            return o;
        }
    }
}
