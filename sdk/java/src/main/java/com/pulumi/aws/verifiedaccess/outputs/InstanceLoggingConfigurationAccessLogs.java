// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess.outputs;

import com.pulumi.aws.verifiedaccess.outputs.InstanceLoggingConfigurationAccessLogsCloudwatchLogs;
import com.pulumi.aws.verifiedaccess.outputs.InstanceLoggingConfigurationAccessLogsKinesisDataFirehose;
import com.pulumi.aws.verifiedaccess.outputs.InstanceLoggingConfigurationAccessLogsS3;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceLoggingConfigurationAccessLogs {
    /**
     * @return A block that specifies configures sending Verified Access logs to CloudWatch Logs. Detailed below.
     * 
     */
    private @Nullable InstanceLoggingConfigurationAccessLogsCloudwatchLogs cloudwatchLogs;
    /**
     * @return Include trust data sent by trust providers into the logs.
     * 
     */
    private @Nullable Boolean includeTrustContext;
    /**
     * @return A block that specifies configures sending Verified Access logs to Kinesis. Detailed below.
     * 
     */
    private @Nullable InstanceLoggingConfigurationAccessLogsKinesisDataFirehose kinesisDataFirehose;
    /**
     * @return The logging version to use. Refer to [VerifiedAccessLogOptions](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VerifiedAccessLogOptions.html) for the allowed values.
     * 
     */
    private @Nullable String logVersion;
    /**
     * @return A block that specifies configures sending Verified Access logs to S3. Detailed below.
     * 
     */
    private @Nullable InstanceLoggingConfigurationAccessLogsS3 s3;

    private InstanceLoggingConfigurationAccessLogs() {}
    /**
     * @return A block that specifies configures sending Verified Access logs to CloudWatch Logs. Detailed below.
     * 
     */
    public Optional<InstanceLoggingConfigurationAccessLogsCloudwatchLogs> cloudwatchLogs() {
        return Optional.ofNullable(this.cloudwatchLogs);
    }
    /**
     * @return Include trust data sent by trust providers into the logs.
     * 
     */
    public Optional<Boolean> includeTrustContext() {
        return Optional.ofNullable(this.includeTrustContext);
    }
    /**
     * @return A block that specifies configures sending Verified Access logs to Kinesis. Detailed below.
     * 
     */
    public Optional<InstanceLoggingConfigurationAccessLogsKinesisDataFirehose> kinesisDataFirehose() {
        return Optional.ofNullable(this.kinesisDataFirehose);
    }
    /**
     * @return The logging version to use. Refer to [VerifiedAccessLogOptions](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VerifiedAccessLogOptions.html) for the allowed values.
     * 
     */
    public Optional<String> logVersion() {
        return Optional.ofNullable(this.logVersion);
    }
    /**
     * @return A block that specifies configures sending Verified Access logs to S3. Detailed below.
     * 
     */
    public Optional<InstanceLoggingConfigurationAccessLogsS3> s3() {
        return Optional.ofNullable(this.s3);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceLoggingConfigurationAccessLogs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable InstanceLoggingConfigurationAccessLogsCloudwatchLogs cloudwatchLogs;
        private @Nullable Boolean includeTrustContext;
        private @Nullable InstanceLoggingConfigurationAccessLogsKinesisDataFirehose kinesisDataFirehose;
        private @Nullable String logVersion;
        private @Nullable InstanceLoggingConfigurationAccessLogsS3 s3;
        public Builder() {}
        public Builder(InstanceLoggingConfigurationAccessLogs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchLogs = defaults.cloudwatchLogs;
    	      this.includeTrustContext = defaults.includeTrustContext;
    	      this.kinesisDataFirehose = defaults.kinesisDataFirehose;
    	      this.logVersion = defaults.logVersion;
    	      this.s3 = defaults.s3;
        }

        @CustomType.Setter
        public Builder cloudwatchLogs(@Nullable InstanceLoggingConfigurationAccessLogsCloudwatchLogs cloudwatchLogs) {
            this.cloudwatchLogs = cloudwatchLogs;
            return this;
        }
        @CustomType.Setter
        public Builder includeTrustContext(@Nullable Boolean includeTrustContext) {
            this.includeTrustContext = includeTrustContext;
            return this;
        }
        @CustomType.Setter
        public Builder kinesisDataFirehose(@Nullable InstanceLoggingConfigurationAccessLogsKinesisDataFirehose kinesisDataFirehose) {
            this.kinesisDataFirehose = kinesisDataFirehose;
            return this;
        }
        @CustomType.Setter
        public Builder logVersion(@Nullable String logVersion) {
            this.logVersion = logVersion;
            return this;
        }
        @CustomType.Setter
        public Builder s3(@Nullable InstanceLoggingConfigurationAccessLogsS3 s3) {
            this.s3 = s3;
            return this;
        }
        public InstanceLoggingConfigurationAccessLogs build() {
            final var _resultValue = new InstanceLoggingConfigurationAccessLogs();
            _resultValue.cloudwatchLogs = cloudwatchLogs;
            _resultValue.includeTrustContext = includeTrustContext;
            _resultValue.kinesisDataFirehose = kinesisDataFirehose;
            _resultValue.logVersion = logVersion;
            _resultValue.s3 = s3;
            return _resultValue;
        }
    }
}
