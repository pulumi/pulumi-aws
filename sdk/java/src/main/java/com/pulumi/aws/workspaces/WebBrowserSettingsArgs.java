// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebBrowserSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebBrowserSettingsArgs Empty = new WebBrowserSettingsArgs();

    /**
     * Additional encryption context for the browser settings.
     * 
     */
    @Import(name="additionalEncryptionContext")
    private @Nullable Output<Map<String,String>> additionalEncryptionContext;

    /**
     * @return Additional encryption context for the browser settings.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalEncryptionContext() {
        return Optional.ofNullable(this.additionalEncryptionContext);
    }

    /**
     * Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="browserPolicy", required=true)
    private Output<String> browserPolicy;

    /**
     * @return Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> browserPolicy() {
        return this.browserPolicy;
    }

    /**
     * ARN of the customer managed KMS key.
     * 
     */
    @Import(name="customerManagedKey")
    private @Nullable Output<String> customerManagedKey;

    /**
     * @return ARN of the customer managed KMS key.
     * 
     */
    public Optional<Output<String>> customerManagedKey() {
        return Optional.ofNullable(this.customerManagedKey);
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private WebBrowserSettingsArgs() {}

    private WebBrowserSettingsArgs(WebBrowserSettingsArgs $) {
        this.additionalEncryptionContext = $.additionalEncryptionContext;
        this.browserPolicy = $.browserPolicy;
        this.customerManagedKey = $.customerManagedKey;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebBrowserSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebBrowserSettingsArgs $;

        public Builder() {
            $ = new WebBrowserSettingsArgs();
        }

        public Builder(WebBrowserSettingsArgs defaults) {
            $ = new WebBrowserSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalEncryptionContext Additional encryption context for the browser settings.
         * 
         * @return builder
         * 
         */
        public Builder additionalEncryptionContext(@Nullable Output<Map<String,String>> additionalEncryptionContext) {
            $.additionalEncryptionContext = additionalEncryptionContext;
            return this;
        }

        /**
         * @param additionalEncryptionContext Additional encryption context for the browser settings.
         * 
         * @return builder
         * 
         */
        public Builder additionalEncryptionContext(Map<String,String> additionalEncryptionContext) {
            return additionalEncryptionContext(Output.of(additionalEncryptionContext));
        }

        /**
         * @param browserPolicy Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder browserPolicy(Output<String> browserPolicy) {
            $.browserPolicy = browserPolicy;
            return this;
        }

        /**
         * @param browserPolicy Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder browserPolicy(String browserPolicy) {
            return browserPolicy(Output.of(browserPolicy));
        }

        /**
         * @param customerManagedKey ARN of the customer managed KMS key.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(@Nullable Output<String> customerManagedKey) {
            $.customerManagedKey = customerManagedKey;
            return this;
        }

        /**
         * @param customerManagedKey ARN of the customer managed KMS key.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(String customerManagedKey) {
            return customerManagedKey(Output.of(customerManagedKey));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public WebBrowserSettingsArgs build() {
            if ($.browserPolicy == null) {
                throw new MissingRequiredPropertyException("WebBrowserSettingsArgs", "browserPolicy");
            }
            return $;
        }
    }

}
