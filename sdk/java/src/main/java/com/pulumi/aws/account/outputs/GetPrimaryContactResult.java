// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.account.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrimaryContactResult {
    private String accountId;
    /**
     * @return The first line of the primary contact address.
     * 
     */
    private String addressLine1;
    /**
     * @return The second line of the primary contact address.
     * 
     */
    private String addressLine2;
    /**
     * @return The third line of the primary contact address.
     * 
     */
    private String addressLine3;
    /**
     * @return The city of the primary contact address.
     * 
     */
    private String city;
    /**
     * @return The name of the company associated with the primary contact information.
     * 
     */
    private String companyName;
    /**
     * @return The ISO-3166 two-letter country code for the primary contact address.
     * 
     */
    private String countryCode;
    /**
     * @return The district or county of the primary contact address.
     * 
     */
    private String districtOrCounty;
    /**
     * @return The full name of the primary contact address.
     * 
     */
    private String fullName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The phone number of the primary contact information.
     * 
     */
    private String phoneNumber;
    /**
     * @return The postal code of the primary contact address.
     * 
     */
    private String postalCode;
    /**
     * @return The state or region of the primary contact address.
     * 
     */
    private String stateOrRegion;
    /**
     * @return The URL of the website associated with the primary contact information.
     * 
     */
    private String websiteUrl;

    private GetPrimaryContactResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The first line of the primary contact address.
     * 
     */
    public String addressLine1() {
        return this.addressLine1;
    }
    /**
     * @return The second line of the primary contact address.
     * 
     */
    public String addressLine2() {
        return this.addressLine2;
    }
    /**
     * @return The third line of the primary contact address.
     * 
     */
    public String addressLine3() {
        return this.addressLine3;
    }
    /**
     * @return The city of the primary contact address.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return The name of the company associated with the primary contact information.
     * 
     */
    public String companyName() {
        return this.companyName;
    }
    /**
     * @return The ISO-3166 two-letter country code for the primary contact address.
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return The district or county of the primary contact address.
     * 
     */
    public String districtOrCounty() {
        return this.districtOrCounty;
    }
    /**
     * @return The full name of the primary contact address.
     * 
     */
    public String fullName() {
        return this.fullName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The phone number of the primary contact information.
     * 
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }
    /**
     * @return The postal code of the primary contact address.
     * 
     */
    public String postalCode() {
        return this.postalCode;
    }
    /**
     * @return The state or region of the primary contact address.
     * 
     */
    public String stateOrRegion() {
        return this.stateOrRegion;
    }
    /**
     * @return The URL of the website associated with the primary contact information.
     * 
     */
    public String websiteUrl() {
        return this.websiteUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrimaryContactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String addressLine1;
        private String addressLine2;
        private String addressLine3;
        private String city;
        private String companyName;
        private String countryCode;
        private String districtOrCounty;
        private String fullName;
        private String id;
        private String phoneNumber;
        private String postalCode;
        private String stateOrRegion;
        private String websiteUrl;
        public Builder() {}
        public Builder(GetPrimaryContactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.addressLine1 = defaults.addressLine1;
    	      this.addressLine2 = defaults.addressLine2;
    	      this.addressLine3 = defaults.addressLine3;
    	      this.city = defaults.city;
    	      this.companyName = defaults.companyName;
    	      this.countryCode = defaults.countryCode;
    	      this.districtOrCounty = defaults.districtOrCounty;
    	      this.fullName = defaults.fullName;
    	      this.id = defaults.id;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.postalCode = defaults.postalCode;
    	      this.stateOrRegion = defaults.stateOrRegion;
    	      this.websiteUrl = defaults.websiteUrl;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder addressLine1(String addressLine1) {
            if (addressLine1 == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "addressLine1");
            }
            this.addressLine1 = addressLine1;
            return this;
        }
        @CustomType.Setter
        public Builder addressLine2(String addressLine2) {
            if (addressLine2 == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "addressLine2");
            }
            this.addressLine2 = addressLine2;
            return this;
        }
        @CustomType.Setter
        public Builder addressLine3(String addressLine3) {
            if (addressLine3 == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "addressLine3");
            }
            this.addressLine3 = addressLine3;
            return this;
        }
        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder companyName(String companyName) {
            if (companyName == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "companyName");
            }
            this.companyName = companyName;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            if (countryCode == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "countryCode");
            }
            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder districtOrCounty(String districtOrCounty) {
            if (districtOrCounty == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "districtOrCounty");
            }
            this.districtOrCounty = districtOrCounty;
            return this;
        }
        @CustomType.Setter
        public Builder fullName(String fullName) {
            if (fullName == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "fullName");
            }
            this.fullName = fullName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(String phoneNumber) {
            if (phoneNumber == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "phoneNumber");
            }
            this.phoneNumber = phoneNumber;
            return this;
        }
        @CustomType.Setter
        public Builder postalCode(String postalCode) {
            if (postalCode == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "postalCode");
            }
            this.postalCode = postalCode;
            return this;
        }
        @CustomType.Setter
        public Builder stateOrRegion(String stateOrRegion) {
            if (stateOrRegion == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "stateOrRegion");
            }
            this.stateOrRegion = stateOrRegion;
            return this;
        }
        @CustomType.Setter
        public Builder websiteUrl(String websiteUrl) {
            if (websiteUrl == null) {
              throw new MissingRequiredPropertyException("GetPrimaryContactResult", "websiteUrl");
            }
            this.websiteUrl = websiteUrl;
            return this;
        }
        public GetPrimaryContactResult build() {
            final var _resultValue = new GetPrimaryContactResult();
            _resultValue.accountId = accountId;
            _resultValue.addressLine1 = addressLine1;
            _resultValue.addressLine2 = addressLine2;
            _resultValue.addressLine3 = addressLine3;
            _resultValue.city = city;
            _resultValue.companyName = companyName;
            _resultValue.countryCode = countryCode;
            _resultValue.districtOrCounty = districtOrCounty;
            _resultValue.fullName = fullName;
            _resultValue.id = id;
            _resultValue.phoneNumber = phoneNumber;
            _resultValue.postalCode = postalCode;
            _resultValue.stateOrRegion = stateOrRegion;
            _resultValue.websiteUrl = websiteUrl;
            return _resultValue;
        }
    }
}
