// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.CloudVmClusterIormConfigCachDbPlanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CloudVmClusterIormConfigCachArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudVmClusterIormConfigCachArgs Empty = new CloudVmClusterIormConfigCachArgs();

    @Import(name="dbPlans", required=true)
    private Output<List<CloudVmClusterIormConfigCachDbPlanArgs>> dbPlans;

    public Output<List<CloudVmClusterIormConfigCachDbPlanArgs>> dbPlans() {
        return this.dbPlans;
    }

    @Import(name="lifecycleDetails", required=true)
    private Output<String> lifecycleDetails;

    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }

    @Import(name="lifecycleState", required=true)
    private Output<String> lifecycleState;

    public Output<String> lifecycleState() {
        return this.lifecycleState;
    }

    @Import(name="objective", required=true)
    private Output<String> objective;

    public Output<String> objective() {
        return this.objective;
    }

    private CloudVmClusterIormConfigCachArgs() {}

    private CloudVmClusterIormConfigCachArgs(CloudVmClusterIormConfigCachArgs $) {
        this.dbPlans = $.dbPlans;
        this.lifecycleDetails = $.lifecycleDetails;
        this.lifecycleState = $.lifecycleState;
        this.objective = $.objective;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudVmClusterIormConfigCachArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudVmClusterIormConfigCachArgs $;

        public Builder() {
            $ = new CloudVmClusterIormConfigCachArgs();
        }

        public Builder(CloudVmClusterIormConfigCachArgs defaults) {
            $ = new CloudVmClusterIormConfigCachArgs(Objects.requireNonNull(defaults));
        }

        public Builder dbPlans(Output<List<CloudVmClusterIormConfigCachDbPlanArgs>> dbPlans) {
            $.dbPlans = dbPlans;
            return this;
        }

        public Builder dbPlans(List<CloudVmClusterIormConfigCachDbPlanArgs> dbPlans) {
            return dbPlans(Output.of(dbPlans));
        }

        public Builder dbPlans(CloudVmClusterIormConfigCachDbPlanArgs... dbPlans) {
            return dbPlans(List.of(dbPlans));
        }

        public Builder lifecycleDetails(Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        public Builder lifecycleState(Output<String> lifecycleState) {
            $.lifecycleState = lifecycleState;
            return this;
        }

        public Builder lifecycleState(String lifecycleState) {
            return lifecycleState(Output.of(lifecycleState));
        }

        public Builder objective(Output<String> objective) {
            $.objective = objective;
            return this;
        }

        public Builder objective(String objective) {
            return objective(Output.of(objective));
        }

        public CloudVmClusterIormConfigCachArgs build() {
            if ($.dbPlans == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCachArgs", "dbPlans");
            }
            if ($.lifecycleDetails == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCachArgs", "lifecycleDetails");
            }
            if ($.lifecycleState == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCachArgs", "lifecycleState");
            }
            if ($.objective == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCachArgs", "objective");
            }
            return $;
        }
    }

}
