// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCertificateResult {
    /**
     * @return The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    private String certificateArn;
    /**
     * @return The date that the certificate was created.
     * 
     */
    private String certificateCreationDate;
    private String certificateId;
    /**
     * @return The owner of the certificate.
     * 
     */
    private String certificateOwner;
    /**
     * @return The contents of a .pem file, which contains an X.509 certificate.
     * 
     */
    private String certificatePem;
    /**
     * @return The owner of the certificate.
     * 
     */
    private String certificateWallet;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The key length of the cryptographic algorithm being used.
     * 
     */
    private Integer keyLength;
    /**
     * @return The algorithm for the certificate.
     * 
     */
    private String signingAlgorithm;
    private Map<String,String> tags;
    /**
     * @return The beginning date that the certificate is valid.
     * 
     */
    private String validFromDate;
    /**
     * @return The final date that the certificate is valid.
     * 
     */
    private String validToDate;

    private GetCertificateResult() {}
    /**
     * @return The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    public String certificateArn() {
        return this.certificateArn;
    }
    /**
     * @return The date that the certificate was created.
     * 
     */
    public String certificateCreationDate() {
        return this.certificateCreationDate;
    }
    public String certificateId() {
        return this.certificateId;
    }
    /**
     * @return The owner of the certificate.
     * 
     */
    public String certificateOwner() {
        return this.certificateOwner;
    }
    /**
     * @return The contents of a .pem file, which contains an X.509 certificate.
     * 
     */
    public String certificatePem() {
        return this.certificatePem;
    }
    /**
     * @return The owner of the certificate.
     * 
     */
    public String certificateWallet() {
        return this.certificateWallet;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The key length of the cryptographic algorithm being used.
     * 
     */
    public Integer keyLength() {
        return this.keyLength;
    }
    /**
     * @return The algorithm for the certificate.
     * 
     */
    public String signingAlgorithm() {
        return this.signingAlgorithm;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The beginning date that the certificate is valid.
     * 
     */
    public String validFromDate() {
        return this.validFromDate;
    }
    /**
     * @return The final date that the certificate is valid.
     * 
     */
    public String validToDate() {
        return this.validToDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateArn;
        private String certificateCreationDate;
        private String certificateId;
        private String certificateOwner;
        private String certificatePem;
        private String certificateWallet;
        private String id;
        private Integer keyLength;
        private String signingAlgorithm;
        private Map<String,String> tags;
        private String validFromDate;
        private String validToDate;
        public Builder() {}
        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateArn = defaults.certificateArn;
    	      this.certificateCreationDate = defaults.certificateCreationDate;
    	      this.certificateId = defaults.certificateId;
    	      this.certificateOwner = defaults.certificateOwner;
    	      this.certificatePem = defaults.certificatePem;
    	      this.certificateWallet = defaults.certificateWallet;
    	      this.id = defaults.id;
    	      this.keyLength = defaults.keyLength;
    	      this.signingAlgorithm = defaults.signingAlgorithm;
    	      this.tags = defaults.tags;
    	      this.validFromDate = defaults.validFromDate;
    	      this.validToDate = defaults.validToDate;
        }

        @CustomType.Setter
        public Builder certificateArn(String certificateArn) {
            this.certificateArn = Objects.requireNonNull(certificateArn);
            return this;
        }
        @CustomType.Setter
        public Builder certificateCreationDate(String certificateCreationDate) {
            this.certificateCreationDate = Objects.requireNonNull(certificateCreationDate);
            return this;
        }
        @CustomType.Setter
        public Builder certificateId(String certificateId) {
            this.certificateId = Objects.requireNonNull(certificateId);
            return this;
        }
        @CustomType.Setter
        public Builder certificateOwner(String certificateOwner) {
            this.certificateOwner = Objects.requireNonNull(certificateOwner);
            return this;
        }
        @CustomType.Setter
        public Builder certificatePem(String certificatePem) {
            this.certificatePem = Objects.requireNonNull(certificatePem);
            return this;
        }
        @CustomType.Setter
        public Builder certificateWallet(String certificateWallet) {
            this.certificateWallet = Objects.requireNonNull(certificateWallet);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyLength(Integer keyLength) {
            this.keyLength = Objects.requireNonNull(keyLength);
            return this;
        }
        @CustomType.Setter
        public Builder signingAlgorithm(String signingAlgorithm) {
            this.signingAlgorithm = Objects.requireNonNull(signingAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder validFromDate(String validFromDate) {
            this.validFromDate = Objects.requireNonNull(validFromDate);
            return this;
        }
        @CustomType.Setter
        public Builder validToDate(String validToDate) {
            this.validToDate = Objects.requireNonNull(validToDate);
            return this;
        }
        public GetCertificateResult build() {
            final var _resultValue = new GetCertificateResult();
            _resultValue.certificateArn = certificateArn;
            _resultValue.certificateCreationDate = certificateCreationDate;
            _resultValue.certificateId = certificateId;
            _resultValue.certificateOwner = certificateOwner;
            _resultValue.certificatePem = certificatePem;
            _resultValue.certificateWallet = certificateWallet;
            _resultValue.id = id;
            _resultValue.keyLength = keyLength;
            _resultValue.signingAlgorithm = signingAlgorithm;
            _resultValue.tags = tags;
            _resultValue.validFromDate = validFromDate;
            _resultValue.validToDate = validToDate;
            return _resultValue;
        }
    }
}
