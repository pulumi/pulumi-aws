// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.aws.elasticache.inputs.ClusterCacheNodeArgs;
import com.pulumi.aws.elasticache.inputs.ClusterLogDeliveryConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    @Import(name="applyImmediately")
    private @Nullable Output<Boolean> applyImmediately;

    public Optional<Output<Boolean>> applyImmediately() {
        return Optional.ofNullable(this.applyImmediately);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="autoMinorVersionUpgrade")
    private @Nullable Output<String> autoMinorVersionUpgrade;

    public Optional<Output<String>> autoMinorVersionUpgrade() {
        return Optional.ofNullable(this.autoMinorVersionUpgrade);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="azMode")
    private @Nullable Output<String> azMode;

    public Optional<Output<String>> azMode() {
        return Optional.ofNullable(this.azMode);
    }

    @Import(name="cacheNodes")
    private @Nullable Output<List<ClusterCacheNodeArgs>> cacheNodes;

    public Optional<Output<List<ClusterCacheNodeArgs>>> cacheNodes() {
        return Optional.ofNullable(this.cacheNodes);
    }

    @Import(name="clusterAddress")
    private @Nullable Output<String> clusterAddress;

    public Optional<Output<String>> clusterAddress() {
        return Optional.ofNullable(this.clusterAddress);
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="configurationEndpoint")
    private @Nullable Output<String> configurationEndpoint;

    public Optional<Output<String>> configurationEndpoint() {
        return Optional.ofNullable(this.configurationEndpoint);
    }

    @Import(name="engine")
    private @Nullable Output<String> engine;

    public Optional<Output<String>> engine() {
        return Optional.ofNullable(this.engine);
    }

    @Import(name="engineVersion")
    private @Nullable Output<String> engineVersion;

    public Optional<Output<String>> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }

    @Import(name="engineVersionActual")
    private @Nullable Output<String> engineVersionActual;

    public Optional<Output<String>> engineVersionActual() {
        return Optional.ofNullable(this.engineVersionActual);
    }

    @Import(name="finalSnapshotIdentifier")
    private @Nullable Output<String> finalSnapshotIdentifier;

    public Optional<Output<String>> finalSnapshotIdentifier() {
        return Optional.ofNullable(this.finalSnapshotIdentifier);
    }

    @Import(name="ipDiscovery")
    private @Nullable Output<String> ipDiscovery;

    public Optional<Output<String>> ipDiscovery() {
        return Optional.ofNullable(this.ipDiscovery);
    }

    @Import(name="logDeliveryConfigurations")
    private @Nullable Output<List<ClusterLogDeliveryConfigurationArgs>> logDeliveryConfigurations;

    public Optional<Output<List<ClusterLogDeliveryConfigurationArgs>>> logDeliveryConfigurations() {
        return Optional.ofNullable(this.logDeliveryConfigurations);
    }

    @Import(name="maintenanceWindow")
    private @Nullable Output<String> maintenanceWindow;

    public Optional<Output<String>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    @Import(name="notificationTopicArn")
    private @Nullable Output<String> notificationTopicArn;

    public Optional<Output<String>> notificationTopicArn() {
        return Optional.ofNullable(this.notificationTopicArn);
    }

    @Import(name="numCacheNodes")
    private @Nullable Output<Integer> numCacheNodes;

    public Optional<Output<Integer>> numCacheNodes() {
        return Optional.ofNullable(this.numCacheNodes);
    }

    @Import(name="outpostMode")
    private @Nullable Output<String> outpostMode;

    public Optional<Output<String>> outpostMode() {
        return Optional.ofNullable(this.outpostMode);
    }

    @Import(name="parameterGroupName")
    private @Nullable Output<String> parameterGroupName;

    public Optional<Output<String>> parameterGroupName() {
        return Optional.ofNullable(this.parameterGroupName);
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="preferredAvailabilityZones")
    private @Nullable Output<List<String>> preferredAvailabilityZones;

    public Optional<Output<List<String>>> preferredAvailabilityZones() {
        return Optional.ofNullable(this.preferredAvailabilityZones);
    }

    @Import(name="preferredOutpostArn")
    private @Nullable Output<String> preferredOutpostArn;

    public Optional<Output<String>> preferredOutpostArn() {
        return Optional.ofNullable(this.preferredOutpostArn);
    }

    @Import(name="replicationGroupId")
    private @Nullable Output<String> replicationGroupId;

    public Optional<Output<String>> replicationGroupId() {
        return Optional.ofNullable(this.replicationGroupId);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * @deprecated
     * With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
     * 
     */
    @Deprecated /* With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version. */
    @Import(name="securityGroupNames")
    private @Nullable Output<List<String>> securityGroupNames;

    /**
     * @deprecated
     * With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
     * 
     */
    @Deprecated /* With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version. */
    public Optional<Output<List<String>>> securityGroupNames() {
        return Optional.ofNullable(this.securityGroupNames);
    }

    @Import(name="snapshotArns")
    private @Nullable Output<String> snapshotArns;

    public Optional<Output<String>> snapshotArns() {
        return Optional.ofNullable(this.snapshotArns);
    }

    @Import(name="snapshotName")
    private @Nullable Output<String> snapshotName;

    public Optional<Output<String>> snapshotName() {
        return Optional.ofNullable(this.snapshotName);
    }

    @Import(name="snapshotRetentionLimit")
    private @Nullable Output<Integer> snapshotRetentionLimit;

    public Optional<Output<Integer>> snapshotRetentionLimit() {
        return Optional.ofNullable(this.snapshotRetentionLimit);
    }

    @Import(name="snapshotWindow")
    private @Nullable Output<String> snapshotWindow;

    public Optional<Output<String>> snapshotWindow() {
        return Optional.ofNullable(this.snapshotWindow);
    }

    @Import(name="subnetGroupName")
    private @Nullable Output<String> subnetGroupName;

    public Optional<Output<String>> subnetGroupName() {
        return Optional.ofNullable(this.subnetGroupName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.applyImmediately = $.applyImmediately;
        this.arn = $.arn;
        this.autoMinorVersionUpgrade = $.autoMinorVersionUpgrade;
        this.availabilityZone = $.availabilityZone;
        this.azMode = $.azMode;
        this.cacheNodes = $.cacheNodes;
        this.clusterAddress = $.clusterAddress;
        this.clusterId = $.clusterId;
        this.configurationEndpoint = $.configurationEndpoint;
        this.engine = $.engine;
        this.engineVersion = $.engineVersion;
        this.engineVersionActual = $.engineVersionActual;
        this.finalSnapshotIdentifier = $.finalSnapshotIdentifier;
        this.ipDiscovery = $.ipDiscovery;
        this.logDeliveryConfigurations = $.logDeliveryConfigurations;
        this.maintenanceWindow = $.maintenanceWindow;
        this.networkType = $.networkType;
        this.nodeType = $.nodeType;
        this.notificationTopicArn = $.notificationTopicArn;
        this.numCacheNodes = $.numCacheNodes;
        this.outpostMode = $.outpostMode;
        this.parameterGroupName = $.parameterGroupName;
        this.port = $.port;
        this.preferredAvailabilityZones = $.preferredAvailabilityZones;
        this.preferredOutpostArn = $.preferredOutpostArn;
        this.replicationGroupId = $.replicationGroupId;
        this.securityGroupIds = $.securityGroupIds;
        this.securityGroupNames = $.securityGroupNames;
        this.snapshotArns = $.snapshotArns;
        this.snapshotName = $.snapshotName;
        this.snapshotRetentionLimit = $.snapshotRetentionLimit;
        this.snapshotWindow = $.snapshotWindow;
        this.subnetGroupName = $.subnetGroupName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        public Builder applyImmediately(@Nullable Output<Boolean> applyImmediately) {
            $.applyImmediately = applyImmediately;
            return this;
        }

        public Builder applyImmediately(Boolean applyImmediately) {
            return applyImmediately(Output.of(applyImmediately));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoMinorVersionUpgrade(@Nullable Output<String> autoMinorVersionUpgrade) {
            $.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }

        public Builder autoMinorVersionUpgrade(String autoMinorVersionUpgrade) {
            return autoMinorVersionUpgrade(Output.of(autoMinorVersionUpgrade));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder azMode(@Nullable Output<String> azMode) {
            $.azMode = azMode;
            return this;
        }

        public Builder azMode(String azMode) {
            return azMode(Output.of(azMode));
        }

        public Builder cacheNodes(@Nullable Output<List<ClusterCacheNodeArgs>> cacheNodes) {
            $.cacheNodes = cacheNodes;
            return this;
        }

        public Builder cacheNodes(List<ClusterCacheNodeArgs> cacheNodes) {
            return cacheNodes(Output.of(cacheNodes));
        }

        public Builder cacheNodes(ClusterCacheNodeArgs... cacheNodes) {
            return cacheNodes(List.of(cacheNodes));
        }

        public Builder clusterAddress(@Nullable Output<String> clusterAddress) {
            $.clusterAddress = clusterAddress;
            return this;
        }

        public Builder clusterAddress(String clusterAddress) {
            return clusterAddress(Output.of(clusterAddress));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder configurationEndpoint(@Nullable Output<String> configurationEndpoint) {
            $.configurationEndpoint = configurationEndpoint;
            return this;
        }

        public Builder configurationEndpoint(String configurationEndpoint) {
            return configurationEndpoint(Output.of(configurationEndpoint));
        }

        public Builder engine(@Nullable Output<String> engine) {
            $.engine = engine;
            return this;
        }

        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        public Builder engineVersionActual(@Nullable Output<String> engineVersionActual) {
            $.engineVersionActual = engineVersionActual;
            return this;
        }

        public Builder engineVersionActual(String engineVersionActual) {
            return engineVersionActual(Output.of(engineVersionActual));
        }

        public Builder finalSnapshotIdentifier(@Nullable Output<String> finalSnapshotIdentifier) {
            $.finalSnapshotIdentifier = finalSnapshotIdentifier;
            return this;
        }

        public Builder finalSnapshotIdentifier(String finalSnapshotIdentifier) {
            return finalSnapshotIdentifier(Output.of(finalSnapshotIdentifier));
        }

        public Builder ipDiscovery(@Nullable Output<String> ipDiscovery) {
            $.ipDiscovery = ipDiscovery;
            return this;
        }

        public Builder ipDiscovery(String ipDiscovery) {
            return ipDiscovery(Output.of(ipDiscovery));
        }

        public Builder logDeliveryConfigurations(@Nullable Output<List<ClusterLogDeliveryConfigurationArgs>> logDeliveryConfigurations) {
            $.logDeliveryConfigurations = logDeliveryConfigurations;
            return this;
        }

        public Builder logDeliveryConfigurations(List<ClusterLogDeliveryConfigurationArgs> logDeliveryConfigurations) {
            return logDeliveryConfigurations(Output.of(logDeliveryConfigurations));
        }

        public Builder logDeliveryConfigurations(ClusterLogDeliveryConfigurationArgs... logDeliveryConfigurations) {
            return logDeliveryConfigurations(List.of(logDeliveryConfigurations));
        }

        public Builder maintenanceWindow(@Nullable Output<String> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        public Builder maintenanceWindow(String maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public Builder notificationTopicArn(@Nullable Output<String> notificationTopicArn) {
            $.notificationTopicArn = notificationTopicArn;
            return this;
        }

        public Builder notificationTopicArn(String notificationTopicArn) {
            return notificationTopicArn(Output.of(notificationTopicArn));
        }

        public Builder numCacheNodes(@Nullable Output<Integer> numCacheNodes) {
            $.numCacheNodes = numCacheNodes;
            return this;
        }

        public Builder numCacheNodes(Integer numCacheNodes) {
            return numCacheNodes(Output.of(numCacheNodes));
        }

        public Builder outpostMode(@Nullable Output<String> outpostMode) {
            $.outpostMode = outpostMode;
            return this;
        }

        public Builder outpostMode(String outpostMode) {
            return outpostMode(Output.of(outpostMode));
        }

        public Builder parameterGroupName(@Nullable Output<String> parameterGroupName) {
            $.parameterGroupName = parameterGroupName;
            return this;
        }

        public Builder parameterGroupName(String parameterGroupName) {
            return parameterGroupName(Output.of(parameterGroupName));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder preferredAvailabilityZones(@Nullable Output<List<String>> preferredAvailabilityZones) {
            $.preferredAvailabilityZones = preferredAvailabilityZones;
            return this;
        }

        public Builder preferredAvailabilityZones(List<String> preferredAvailabilityZones) {
            return preferredAvailabilityZones(Output.of(preferredAvailabilityZones));
        }

        public Builder preferredAvailabilityZones(String... preferredAvailabilityZones) {
            return preferredAvailabilityZones(List.of(preferredAvailabilityZones));
        }

        public Builder preferredOutpostArn(@Nullable Output<String> preferredOutpostArn) {
            $.preferredOutpostArn = preferredOutpostArn;
            return this;
        }

        public Builder preferredOutpostArn(String preferredOutpostArn) {
            return preferredOutpostArn(Output.of(preferredOutpostArn));
        }

        public Builder replicationGroupId(@Nullable Output<String> replicationGroupId) {
            $.replicationGroupId = replicationGroupId;
            return this;
        }

        public Builder replicationGroupId(String replicationGroupId) {
            return replicationGroupId(Output.of(replicationGroupId));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version. */
        public Builder securityGroupNames(@Nullable Output<List<String>> securityGroupNames) {
            $.securityGroupNames = securityGroupNames;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version. */
        public Builder securityGroupNames(List<String> securityGroupNames) {
            return securityGroupNames(Output.of(securityGroupNames));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version. */
        public Builder securityGroupNames(String... securityGroupNames) {
            return securityGroupNames(List.of(securityGroupNames));
        }

        public Builder snapshotArns(@Nullable Output<String> snapshotArns) {
            $.snapshotArns = snapshotArns;
            return this;
        }

        public Builder snapshotArns(String snapshotArns) {
            return snapshotArns(Output.of(snapshotArns));
        }

        public Builder snapshotName(@Nullable Output<String> snapshotName) {
            $.snapshotName = snapshotName;
            return this;
        }

        public Builder snapshotName(String snapshotName) {
            return snapshotName(Output.of(snapshotName));
        }

        public Builder snapshotRetentionLimit(@Nullable Output<Integer> snapshotRetentionLimit) {
            $.snapshotRetentionLimit = snapshotRetentionLimit;
            return this;
        }

        public Builder snapshotRetentionLimit(Integer snapshotRetentionLimit) {
            return snapshotRetentionLimit(Output.of(snapshotRetentionLimit));
        }

        public Builder snapshotWindow(@Nullable Output<String> snapshotWindow) {
            $.snapshotWindow = snapshotWindow;
            return this;
        }

        public Builder snapshotWindow(String snapshotWindow) {
            return snapshotWindow(Output.of(snapshotWindow));
        }

        public Builder subnetGroupName(@Nullable Output<String> subnetGroupName) {
            $.subnetGroupName = subnetGroupName;
            return this;
        }

        public Builder subnetGroupName(String subnetGroupName) {
            return subnetGroupName(Output.of(subnetGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ClusterState build() {
            return $;
        }
    }

}
