// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.keyspaces;

import com.pulumi.aws.keyspaces.inputs.TableCapacitySpecificationArgs;
import com.pulumi.aws.keyspaces.inputs.TableCommentArgs;
import com.pulumi.aws.keyspaces.inputs.TableEncryptionSpecificationArgs;
import com.pulumi.aws.keyspaces.inputs.TablePointInTimeRecoveryArgs;
import com.pulumi.aws.keyspaces.inputs.TableSchemaDefinitionArgs;
import com.pulumi.aws.keyspaces.inputs.TableTtlArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableArgs Empty = new TableArgs();

    @Import(name="capacitySpecification")
    private @Nullable Output<TableCapacitySpecificationArgs> capacitySpecification;

    public Optional<Output<TableCapacitySpecificationArgs>> capacitySpecification() {
        return Optional.ofNullable(this.capacitySpecification);
    }

    @Import(name="comment")
    private @Nullable Output<TableCommentArgs> comment;

    public Optional<Output<TableCommentArgs>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="defaultTimeToLive")
    private @Nullable Output<Integer> defaultTimeToLive;

    public Optional<Output<Integer>> defaultTimeToLive() {
        return Optional.ofNullable(this.defaultTimeToLive);
    }

    @Import(name="encryptionSpecification")
    private @Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification;

    public Optional<Output<TableEncryptionSpecificationArgs>> encryptionSpecification() {
        return Optional.ofNullable(this.encryptionSpecification);
    }

    @Import(name="keyspaceName", required=true)
    private Output<String> keyspaceName;

    public Output<String> keyspaceName() {
        return this.keyspaceName;
    }

    @Import(name="pointInTimeRecovery")
    private @Nullable Output<TablePointInTimeRecoveryArgs> pointInTimeRecovery;

    public Optional<Output<TablePointInTimeRecoveryArgs>> pointInTimeRecovery() {
        return Optional.ofNullable(this.pointInTimeRecovery);
    }

    @Import(name="schemaDefinition", required=true)
    private Output<TableSchemaDefinitionArgs> schemaDefinition;

    public Output<TableSchemaDefinitionArgs> schemaDefinition() {
        return this.schemaDefinition;
    }

    @Import(name="tableName", required=true)
    private Output<String> tableName;

    public Output<String> tableName() {
        return this.tableName;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="ttl")
    private @Nullable Output<TableTtlArgs> ttl;

    public Optional<Output<TableTtlArgs>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private TableArgs() {}

    private TableArgs(TableArgs $) {
        this.capacitySpecification = $.capacitySpecification;
        this.comment = $.comment;
        this.defaultTimeToLive = $.defaultTimeToLive;
        this.encryptionSpecification = $.encryptionSpecification;
        this.keyspaceName = $.keyspaceName;
        this.pointInTimeRecovery = $.pointInTimeRecovery;
        this.schemaDefinition = $.schemaDefinition;
        this.tableName = $.tableName;
        this.tags = $.tags;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableArgs $;

        public Builder() {
            $ = new TableArgs();
        }

        public Builder(TableArgs defaults) {
            $ = new TableArgs(Objects.requireNonNull(defaults));
        }

        public Builder capacitySpecification(@Nullable Output<TableCapacitySpecificationArgs> capacitySpecification) {
            $.capacitySpecification = capacitySpecification;
            return this;
        }

        public Builder capacitySpecification(TableCapacitySpecificationArgs capacitySpecification) {
            return capacitySpecification(Output.of(capacitySpecification));
        }

        public Builder comment(@Nullable Output<TableCommentArgs> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(TableCommentArgs comment) {
            return comment(Output.of(comment));
        }

        public Builder defaultTimeToLive(@Nullable Output<Integer> defaultTimeToLive) {
            $.defaultTimeToLive = defaultTimeToLive;
            return this;
        }

        public Builder defaultTimeToLive(Integer defaultTimeToLive) {
            return defaultTimeToLive(Output.of(defaultTimeToLive));
        }

        public Builder encryptionSpecification(@Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification) {
            $.encryptionSpecification = encryptionSpecification;
            return this;
        }

        public Builder encryptionSpecification(TableEncryptionSpecificationArgs encryptionSpecification) {
            return encryptionSpecification(Output.of(encryptionSpecification));
        }

        public Builder keyspaceName(Output<String> keyspaceName) {
            $.keyspaceName = keyspaceName;
            return this;
        }

        public Builder keyspaceName(String keyspaceName) {
            return keyspaceName(Output.of(keyspaceName));
        }

        public Builder pointInTimeRecovery(@Nullable Output<TablePointInTimeRecoveryArgs> pointInTimeRecovery) {
            $.pointInTimeRecovery = pointInTimeRecovery;
            return this;
        }

        public Builder pointInTimeRecovery(TablePointInTimeRecoveryArgs pointInTimeRecovery) {
            return pointInTimeRecovery(Output.of(pointInTimeRecovery));
        }

        public Builder schemaDefinition(Output<TableSchemaDefinitionArgs> schemaDefinition) {
            $.schemaDefinition = schemaDefinition;
            return this;
        }

        public Builder schemaDefinition(TableSchemaDefinitionArgs schemaDefinition) {
            return schemaDefinition(Output.of(schemaDefinition));
        }

        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder ttl(@Nullable Output<TableTtlArgs> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(TableTtlArgs ttl) {
            return ttl(Output.of(ttl));
        }

        public TableArgs build() {
            $.keyspaceName = Objects.requireNonNull($.keyspaceName, "expected parameter 'keyspaceName' to be non-null");
            $.schemaDefinition = Objects.requireNonNull($.schemaDefinition, "expected parameter 'schemaDefinition' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
