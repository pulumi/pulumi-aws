// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.outputs;

import com.pulumi.aws.efs.outputs.GetAccessPointPosixUser;
import com.pulumi.aws.efs.outputs.GetAccessPointRootDirectory;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessPointResult {
    private String accessPointId;
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    private String arn;
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    private String fileSystemArn;
    /**
     * @return ID of the file system for which the access point is intended.
     * 
     */
    private String fileSystemId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String ownerId;
    /**
     * @return Single element list containing operating system user and group applied to all file system requests made using the access point.
     * 
     */
    private List<GetAccessPointPosixUser> posixUsers;
    private List<GetAccessPointRootDirectory> rootDirectories;
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetAccessPointResult() {}
    public String accessPointId() {
        return this.accessPointId;
    }
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public String fileSystemArn() {
        return this.fileSystemArn;
    }
    /**
     * @return ID of the file system for which the access point is intended.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return Single element list containing operating system user and group applied to all file system requests made using the access point.
     * 
     */
    public List<GetAccessPointPosixUser> posixUsers() {
        return this.posixUsers;
    }
    public List<GetAccessPointRootDirectory> rootDirectories() {
        return this.rootDirectories;
    }
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessPointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessPointId;
        private String arn;
        private String fileSystemArn;
        private String fileSystemId;
        private String id;
        private String ownerId;
        private List<GetAccessPointPosixUser> posixUsers;
        private List<GetAccessPointRootDirectory> rootDirectories;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetAccessPointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointId = defaults.accessPointId;
    	      this.arn = defaults.arn;
    	      this.fileSystemArn = defaults.fileSystemArn;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.ownerId = defaults.ownerId;
    	      this.posixUsers = defaults.posixUsers;
    	      this.rootDirectories = defaults.rootDirectories;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder accessPointId(String accessPointId) {
            this.accessPointId = Objects.requireNonNull(accessPointId);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemArn(String fileSystemArn) {
            this.fileSystemArn = Objects.requireNonNull(fileSystemArn);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        @CustomType.Setter
        public Builder posixUsers(List<GetAccessPointPosixUser> posixUsers) {
            this.posixUsers = Objects.requireNonNull(posixUsers);
            return this;
        }
        public Builder posixUsers(GetAccessPointPosixUser... posixUsers) {
            return posixUsers(List.of(posixUsers));
        }
        @CustomType.Setter
        public Builder rootDirectories(List<GetAccessPointRootDirectory> rootDirectories) {
            this.rootDirectories = Objects.requireNonNull(rootDirectories);
            return this;
        }
        public Builder rootDirectories(GetAccessPointRootDirectory... rootDirectories) {
            return rootDirectories(List.of(rootDirectories));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetAccessPointResult build() {
            final var o = new GetAccessPointResult();
            o.accessPointId = accessPointId;
            o.arn = arn;
            o.fileSystemArn = fileSystemArn;
            o.fileSystemId = fileSystemId;
            o.id = id;
            o.ownerId = ownerId;
            o.posixUsers = posixUsers;
            o.rootDirectories = rootDirectories;
            o.tags = tags;
            return o;
        }
    }
}
