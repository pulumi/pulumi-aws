// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerProtocolDetails {
    /**
     * @return Indicates the transport method for the AS2 messages. Currently, only `HTTP` is supported.
     * 
     */
    private @Nullable List<String> as2Transports;
    /**
     * @return Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address, such as the public IP address of a firewall, router, or load balancer.
     * 
     */
    private @Nullable String passiveIp;
    /**
     * @return Use to ignore the error that is generated when the client attempts to use `SETSTAT` on a file you are uploading to an S3 bucket. Valid values: `DEFAULT`, `ENABLE_NO_OP`.
     * 
     */
    private @Nullable String setStatOption;
    /**
     * @return A property used with Transfer Family servers that use the FTPS protocol. Provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. Valid values: `DISABLED`, `ENABLED`, `ENFORCED`.
     * 
     */
    private @Nullable String tlsSessionResumptionMode;

    private ServerProtocolDetails() {}
    /**
     * @return Indicates the transport method for the AS2 messages. Currently, only `HTTP` is supported.
     * 
     */
    public List<String> as2Transports() {
        return this.as2Transports == null ? List.of() : this.as2Transports;
    }
    /**
     * @return Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address, such as the public IP address of a firewall, router, or load balancer.
     * 
     */
    public Optional<String> passiveIp() {
        return Optional.ofNullable(this.passiveIp);
    }
    /**
     * @return Use to ignore the error that is generated when the client attempts to use `SETSTAT` on a file you are uploading to an S3 bucket. Valid values: `DEFAULT`, `ENABLE_NO_OP`.
     * 
     */
    public Optional<String> setStatOption() {
        return Optional.ofNullable(this.setStatOption);
    }
    /**
     * @return A property used with Transfer Family servers that use the FTPS protocol. Provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. Valid values: `DISABLED`, `ENABLED`, `ENFORCED`.
     * 
     */
    public Optional<String> tlsSessionResumptionMode() {
        return Optional.ofNullable(this.tlsSessionResumptionMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerProtocolDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> as2Transports;
        private @Nullable String passiveIp;
        private @Nullable String setStatOption;
        private @Nullable String tlsSessionResumptionMode;
        public Builder() {}
        public Builder(ServerProtocolDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.as2Transports = defaults.as2Transports;
    	      this.passiveIp = defaults.passiveIp;
    	      this.setStatOption = defaults.setStatOption;
    	      this.tlsSessionResumptionMode = defaults.tlsSessionResumptionMode;
        }

        @CustomType.Setter
        public Builder as2Transports(@Nullable List<String> as2Transports) {

            this.as2Transports = as2Transports;
            return this;
        }
        public Builder as2Transports(String... as2Transports) {
            return as2Transports(List.of(as2Transports));
        }
        @CustomType.Setter
        public Builder passiveIp(@Nullable String passiveIp) {

            this.passiveIp = passiveIp;
            return this;
        }
        @CustomType.Setter
        public Builder setStatOption(@Nullable String setStatOption) {

            this.setStatOption = setStatOption;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSessionResumptionMode(@Nullable String tlsSessionResumptionMode) {

            this.tlsSessionResumptionMode = tlsSessionResumptionMode;
            return this;
        }
        public ServerProtocolDetails build() {
            final var _resultValue = new ServerProtocolDetails();
            _resultValue.as2Transports = as2Transports;
            _resultValue.passiveIp = passiveIp;
            _resultValue.setStatOption = setStatOption;
            _resultValue.tlsSessionResumptionMode = tlsSessionResumptionMode;
            return _resultValue;
        }
    }
}
