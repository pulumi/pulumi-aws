// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sqs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RedriveAllowPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedriveAllowPolicyArgs Empty = new RedriveAllowPolicyArgs();

    /**
     * The URL of the SQS Queue to which to attach the policy
     * 
     */
    @Import(name="queueUrl", required=true)
    private Output<String> queueUrl;

    /**
     * @return The URL of the SQS Queue to which to attach the policy
     * 
     */
    public Output<String> queueUrl() {
        return this.queueUrl;
    }

    /**
     * The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
     * 
     */
    @Import(name="redriveAllowPolicy", required=true)
    private Output<String> redriveAllowPolicy;

    /**
     * @return The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
     * 
     */
    public Output<String> redriveAllowPolicy() {
        return this.redriveAllowPolicy;
    }

    private RedriveAllowPolicyArgs() {}

    private RedriveAllowPolicyArgs(RedriveAllowPolicyArgs $) {
        this.queueUrl = $.queueUrl;
        this.redriveAllowPolicy = $.redriveAllowPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedriveAllowPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedriveAllowPolicyArgs $;

        public Builder() {
            $ = new RedriveAllowPolicyArgs();
        }

        public Builder(RedriveAllowPolicyArgs defaults) {
            $ = new RedriveAllowPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param queueUrl The URL of the SQS Queue to which to attach the policy
         * 
         * @return builder
         * 
         */
        public Builder queueUrl(Output<String> queueUrl) {
            $.queueUrl = queueUrl;
            return this;
        }

        /**
         * @param queueUrl The URL of the SQS Queue to which to attach the policy
         * 
         * @return builder
         * 
         */
        public Builder queueUrl(String queueUrl) {
            return queueUrl(Output.of(queueUrl));
        }

        /**
         * @param redriveAllowPolicy The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
         * 
         * @return builder
         * 
         */
        public Builder redriveAllowPolicy(Output<String> redriveAllowPolicy) {
            $.redriveAllowPolicy = redriveAllowPolicy;
            return this;
        }

        /**
         * @param redriveAllowPolicy The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
         * 
         * @return builder
         * 
         */
        public Builder redriveAllowPolicy(String redriveAllowPolicy) {
            return redriveAllowPolicy(Output.of(redriveAllowPolicy));
        }

        public RedriveAllowPolicyArgs build() {
            if ($.queueUrl == null) {
                throw new MissingRequiredPropertyException("RedriveAllowPolicyArgs", "queueUrl");
            }
            if ($.redriveAllowPolicy == null) {
                throw new MissingRequiredPropertyException("RedriveAllowPolicyArgs", "redriveAllowPolicy");
            }
            return $;
        }
    }

}
