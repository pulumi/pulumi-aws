// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetGroupTargetHealthStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetGroupTargetHealthStateArgs Empty = new TargetGroupTargetHealthStateArgs();

    /**
     * Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
     * 
     */
    @Import(name="enableUnhealthyConnectionTermination", required=true)
    private Output<Boolean> enableUnhealthyConnectionTermination;

    /**
     * @return Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
     * 
     */
    public Output<Boolean> enableUnhealthyConnectionTermination() {
        return this.enableUnhealthyConnectionTermination;
    }

    /**
     * Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
     * 
     */
    @Import(name="unhealthyDrainingInterval")
    private @Nullable Output<Integer> unhealthyDrainingInterval;

    /**
     * @return Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
     * 
     */
    public Optional<Output<Integer>> unhealthyDrainingInterval() {
        return Optional.ofNullable(this.unhealthyDrainingInterval);
    }

    private TargetGroupTargetHealthStateArgs() {}

    private TargetGroupTargetHealthStateArgs(TargetGroupTargetHealthStateArgs $) {
        this.enableUnhealthyConnectionTermination = $.enableUnhealthyConnectionTermination;
        this.unhealthyDrainingInterval = $.unhealthyDrainingInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetGroupTargetHealthStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetGroupTargetHealthStateArgs $;

        public Builder() {
            $ = new TargetGroupTargetHealthStateArgs();
        }

        public Builder(TargetGroupTargetHealthStateArgs defaults) {
            $ = new TargetGroupTargetHealthStateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableUnhealthyConnectionTermination Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableUnhealthyConnectionTermination(Output<Boolean> enableUnhealthyConnectionTermination) {
            $.enableUnhealthyConnectionTermination = enableUnhealthyConnectionTermination;
            return this;
        }

        /**
         * @param enableUnhealthyConnectionTermination Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableUnhealthyConnectionTermination(Boolean enableUnhealthyConnectionTermination) {
            return enableUnhealthyConnectionTermination(Output.of(enableUnhealthyConnectionTermination));
        }

        /**
         * @param unhealthyDrainingInterval Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyDrainingInterval(@Nullable Output<Integer> unhealthyDrainingInterval) {
            $.unhealthyDrainingInterval = unhealthyDrainingInterval;
            return this;
        }

        /**
         * @param unhealthyDrainingInterval Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyDrainingInterval(Integer unhealthyDrainingInterval) {
            return unhealthyDrainingInterval(Output.of(unhealthyDrainingInterval));
        }

        public TargetGroupTargetHealthStateArgs build() {
            if ($.enableUnhealthyConnectionTermination == null) {
                throw new MissingRequiredPropertyException("TargetGroupTargetHealthStateArgs", "enableUnhealthyConnectionTermination");
            }
            return $;
        }
    }

}
