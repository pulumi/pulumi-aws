// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codeguruprofiler.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetProfilingGroupResult {
    /**
     * @return Profiling Group agent orchestration config
     * 
     */
    private List<Map<String,Object>> agentOrchestrationConfigs;
    /**
     * @return ARN of the Profiling Group.
     * 
     */
    private String arn;
    /**
     * @return The compute platform of the profiling group.
     * 
     */
    private String computePlatform;
    /**
     * @return Timestamp when Profiling Group was created.
     * 
     */
    private String createdAt;
    private String id;
    private String name;
    /**
     * @return The status of the Profiling Group.
     * 
     */
    private List<Map<String,Object>> profilingStatuses;
    /**
     * @return Mapping of Key-Value tags for the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Timestamp when Profiling Group was updated.
     * 
     */
    private String updatedAt;

    private GetProfilingGroupResult() {}
    /**
     * @return Profiling Group agent orchestration config
     * 
     */
    public List<Map<String,Object>> agentOrchestrationConfigs() {
        return this.agentOrchestrationConfigs;
    }
    /**
     * @return ARN of the Profiling Group.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The compute platform of the profiling group.
     * 
     */
    public String computePlatform() {
        return this.computePlatform;
    }
    /**
     * @return Timestamp when Profiling Group was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the Profiling Group.
     * 
     */
    public List<Map<String,Object>> profilingStatuses() {
        return this.profilingStatuses;
    }
    /**
     * @return Mapping of Key-Value tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Timestamp when Profiling Group was updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfilingGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Map<String,Object>> agentOrchestrationConfigs;
        private String arn;
        private String computePlatform;
        private String createdAt;
        private String id;
        private String name;
        private List<Map<String,Object>> profilingStatuses;
        private Map<String,String> tags;
        private String updatedAt;
        public Builder() {}
        public Builder(GetProfilingGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentOrchestrationConfigs = defaults.agentOrchestrationConfigs;
    	      this.arn = defaults.arn;
    	      this.computePlatform = defaults.computePlatform;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.profilingStatuses = defaults.profilingStatuses;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder agentOrchestrationConfigs(List<Map<String,Object>> agentOrchestrationConfigs) {
            if (agentOrchestrationConfigs == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "agentOrchestrationConfigs");
            }
            this.agentOrchestrationConfigs = agentOrchestrationConfigs;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder computePlatform(String computePlatform) {
            if (computePlatform == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "computePlatform");
            }
            this.computePlatform = computePlatform;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder profilingStatuses(List<Map<String,Object>> profilingStatuses) {
            if (profilingStatuses == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "profilingStatuses");
            }
            this.profilingStatuses = profilingStatuses;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetProfilingGroupResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetProfilingGroupResult build() {
            final var _resultValue = new GetProfilingGroupResult();
            _resultValue.agentOrchestrationConfigs = agentOrchestrationConfigs;
            _resultValue.arn = arn;
            _resultValue.computePlatform = computePlatform;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.profilingStatuses = profilingStatuses;
            _resultValue.tags = tags;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
