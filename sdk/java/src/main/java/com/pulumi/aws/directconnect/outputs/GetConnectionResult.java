// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionResult {
    /**
     * @return ARN of the connection.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Direct Connect endpoint on which the physical connection terminates.
     * 
     */
    private @Nullable String awsDevice;
    /**
     * @return Bandwidth of the connection.
     * 
     */
    private @Nullable String bandwidth;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return AWS Direct Connect location where the connection is located.
     * 
     */
    private @Nullable String location;
    private String name;
    /**
     * @return ID of the AWS account that owns the connection.
     * 
     */
    private @Nullable String ownerAccountId;
    /**
     * @return The name of the AWS Direct Connect service provider associated with the connection.
     * 
     */
    private @Nullable String partnerName;
    /**
     * @return Name of the service provider associated with the connection.
     * 
     */
    private @Nullable String providerName;
    /**
     * @return Map of tags for the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The VLAN ID.
     * 
     */
    private @Nullable Integer vlanId;

    private GetConnectionResult() {}
    /**
     * @return ARN of the connection.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Direct Connect endpoint on which the physical connection terminates.
     * 
     */
    public Optional<String> awsDevice() {
        return Optional.ofNullable(this.awsDevice);
    }
    /**
     * @return Bandwidth of the connection.
     * 
     */
    public Optional<String> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return AWS Direct Connect location where the connection is located.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public String name() {
        return this.name;
    }
    /**
     * @return ID of the AWS account that owns the connection.
     * 
     */
    public Optional<String> ownerAccountId() {
        return Optional.ofNullable(this.ownerAccountId);
    }
    /**
     * @return The name of the AWS Direct Connect service provider associated with the connection.
     * 
     */
    public Optional<String> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }
    /**
     * @return Name of the service provider associated with the connection.
     * 
     */
    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }
    /**
     * @return Map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The VLAN ID.
     * 
     */
    public Optional<Integer> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String awsDevice;
        private @Nullable String bandwidth;
        private @Nullable String id;
        private @Nullable String location;
        private String name;
        private @Nullable String ownerAccountId;
        private @Nullable String partnerName;
        private @Nullable String providerName;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer vlanId;
        public Builder() {}
        public Builder(GetConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsDevice = defaults.awsDevice;
    	      this.bandwidth = defaults.bandwidth;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.ownerAccountId = defaults.ownerAccountId;
    	      this.partnerName = defaults.partnerName;
    	      this.providerName = defaults.providerName;
    	      this.tags = defaults.tags;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder awsDevice(@Nullable String awsDevice) {
            this.awsDevice = awsDevice;
            return this;
        }
        @CustomType.Setter
        public Builder bandwidth(@Nullable String bandwidth) {
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ownerAccountId(@Nullable String ownerAccountId) {
            this.ownerAccountId = ownerAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder partnerName(@Nullable String partnerName) {
            this.partnerName = partnerName;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(@Nullable String providerName) {
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(@Nullable Integer vlanId) {
            this.vlanId = vlanId;
            return this;
        }
        public GetConnectionResult build() {
            final var o = new GetConnectionResult();
            o.arn = arn;
            o.awsDevice = awsDevice;
            o.bandwidth = bandwidth;
            o.id = id;
            o.location = location;
            o.name = name;
            o.ownerAccountId = ownerAccountId;
            o.partnerName = partnerName;
            o.providerName = providerName;
            o.tags = tags;
            o.vlanId = vlanId;
            return o;
        }
    }
}
