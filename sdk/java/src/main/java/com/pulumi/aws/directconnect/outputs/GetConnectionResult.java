// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConnectionResult {
    /**
     * @return ARN of the connection.
     * 
     */
    private String arn;
    /**
     * @return Direct Connect endpoint on which the physical connection terminates.
     * 
     */
    private String awsDevice;
    /**
     * @return Bandwidth of the connection.
     * 
     */
    private String bandwidth;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return AWS Direct Connect location where the connection is located.
     * 
     */
    private String location;
    private String name;
    /**
     * @return ID of the AWS account that owns the connection.
     * 
     */
    private String ownerAccountId;
    /**
     * @return Name of the service provider associated with the connection.
     * 
     */
    private String providerName;
    /**
     * @return Map of tags for the resource.
     * 
     */
    private Map<String,String> tags;

    private GetConnectionResult() {}
    /**
     * @return ARN of the connection.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Direct Connect endpoint on which the physical connection terminates.
     * 
     */
    public String awsDevice() {
        return this.awsDevice;
    }
    /**
     * @return Bandwidth of the connection.
     * 
     */
    public String bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return AWS Direct Connect location where the connection is located.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return ID of the AWS account that owns the connection.
     * 
     */
    public String ownerAccountId() {
        return this.ownerAccountId;
    }
    /**
     * @return Name of the service provider associated with the connection.
     * 
     */
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return Map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String awsDevice;
        private String bandwidth;
        private String id;
        private String location;
        private String name;
        private String ownerAccountId;
        private String providerName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsDevice = defaults.awsDevice;
    	      this.bandwidth = defaults.bandwidth;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.ownerAccountId = defaults.ownerAccountId;
    	      this.providerName = defaults.providerName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder awsDevice(String awsDevice) {
            this.awsDevice = Objects.requireNonNull(awsDevice);
            return this;
        }
        @CustomType.Setter
        public Builder bandwidth(String bandwidth) {
            this.bandwidth = Objects.requireNonNull(bandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ownerAccountId(String ownerAccountId) {
            this.ownerAccountId = Objects.requireNonNull(ownerAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetConnectionResult build() {
            final var o = new GetConnectionResult();
            o.arn = arn;
            o.awsDevice = awsDevice;
            o.bandwidth = bandwidth;
            o.id = id;
            o.location = location;
            o.name = name;
            o.ownerAccountId = ownerAccountId;
            o.providerName = providerName;
            o.tags = tags;
            return o;
        }
    }
}
