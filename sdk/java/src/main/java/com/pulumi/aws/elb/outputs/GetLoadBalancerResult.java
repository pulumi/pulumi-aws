// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elb.outputs;

import com.pulumi.aws.elb.outputs.GetLoadBalancerAccessLogs;
import com.pulumi.aws.elb.outputs.GetLoadBalancerHealthCheck;
import com.pulumi.aws.elb.outputs.GetLoadBalancerListener;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLoadBalancerResult {
    private @Nullable GetLoadBalancerAccessLogs accessLogs;
    private @Nullable String arn;
    private @Nullable List<String> availabilityZones;
    private @Nullable Boolean connectionDraining;
    private @Nullable Integer connectionDrainingTimeout;
    private @Nullable Boolean crossZoneLoadBalancing;
    private @Nullable String desyncMitigationMode;
    private @Nullable String dnsName;
    private @Nullable GetLoadBalancerHealthCheck healthCheck;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable Integer idleTimeout;
    private @Nullable List<String> instances;
    private @Nullable Boolean internal;
    private @Nullable List<GetLoadBalancerListener> listeners;
    private String name;
    private @Nullable List<String> securityGroups;
    private @Nullable String sourceSecurityGroup;
    private @Nullable String sourceSecurityGroupId;
    private @Nullable List<String> subnets;
    private @Nullable Map<String,String> tags;
    private @Nullable String zoneId;

    private GetLoadBalancerResult() {}
    public Optional<GetLoadBalancerAccessLogs> accessLogs() {
        return Optional.ofNullable(this.accessLogs);
    }
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public Optional<Boolean> connectionDraining() {
        return Optional.ofNullable(this.connectionDraining);
    }
    public Optional<Integer> connectionDrainingTimeout() {
        return Optional.ofNullable(this.connectionDrainingTimeout);
    }
    public Optional<Boolean> crossZoneLoadBalancing() {
        return Optional.ofNullable(this.crossZoneLoadBalancing);
    }
    public Optional<String> desyncMitigationMode() {
        return Optional.ofNullable(this.desyncMitigationMode);
    }
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    public Optional<GetLoadBalancerHealthCheck> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Integer> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }
    public List<String> instances() {
        return this.instances == null ? List.of() : this.instances;
    }
    public Optional<Boolean> internal() {
        return Optional.ofNullable(this.internal);
    }
    public List<GetLoadBalancerListener> listeners() {
        return this.listeners == null ? List.of() : this.listeners;
    }
    public String name() {
        return this.name;
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<String> sourceSecurityGroup() {
        return Optional.ofNullable(this.sourceSecurityGroup);
    }
    public Optional<String> sourceSecurityGroupId() {
        return Optional.ofNullable(this.sourceSecurityGroupId);
    }
    public List<String> subnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetLoadBalancerAccessLogs accessLogs;
        private @Nullable String arn;
        private @Nullable List<String> availabilityZones;
        private @Nullable Boolean connectionDraining;
        private @Nullable Integer connectionDrainingTimeout;
        private @Nullable Boolean crossZoneLoadBalancing;
        private @Nullable String desyncMitigationMode;
        private @Nullable String dnsName;
        private @Nullable GetLoadBalancerHealthCheck healthCheck;
        private @Nullable String id;
        private @Nullable Integer idleTimeout;
        private @Nullable List<String> instances;
        private @Nullable Boolean internal;
        private @Nullable List<GetLoadBalancerListener> listeners;
        private String name;
        private @Nullable List<String> securityGroups;
        private @Nullable String sourceSecurityGroup;
        private @Nullable String sourceSecurityGroupId;
        private @Nullable List<String> subnets;
        private @Nullable Map<String,String> tags;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetLoadBalancerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogs = defaults.accessLogs;
    	      this.arn = defaults.arn;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.connectionDraining = defaults.connectionDraining;
    	      this.connectionDrainingTimeout = defaults.connectionDrainingTimeout;
    	      this.crossZoneLoadBalancing = defaults.crossZoneLoadBalancing;
    	      this.desyncMitigationMode = defaults.desyncMitigationMode;
    	      this.dnsName = defaults.dnsName;
    	      this.healthCheck = defaults.healthCheck;
    	      this.id = defaults.id;
    	      this.idleTimeout = defaults.idleTimeout;
    	      this.instances = defaults.instances;
    	      this.internal = defaults.internal;
    	      this.listeners = defaults.listeners;
    	      this.name = defaults.name;
    	      this.securityGroups = defaults.securityGroups;
    	      this.sourceSecurityGroup = defaults.sourceSecurityGroup;
    	      this.sourceSecurityGroupId = defaults.sourceSecurityGroupId;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accessLogs(@Nullable GetLoadBalancerAccessLogs accessLogs) {
            this.accessLogs = accessLogs;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder connectionDraining(@Nullable Boolean connectionDraining) {
            this.connectionDraining = connectionDraining;
            return this;
        }
        @CustomType.Setter
        public Builder connectionDrainingTimeout(@Nullable Integer connectionDrainingTimeout) {
            this.connectionDrainingTimeout = connectionDrainingTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder crossZoneLoadBalancing(@Nullable Boolean crossZoneLoadBalancing) {
            this.crossZoneLoadBalancing = crossZoneLoadBalancing;
            return this;
        }
        @CustomType.Setter
        public Builder desyncMitigationMode(@Nullable String desyncMitigationMode) {
            this.desyncMitigationMode = desyncMitigationMode;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(@Nullable GetLoadBalancerHealthCheck healthCheck) {
            this.healthCheck = healthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeout(@Nullable Integer idleTimeout) {
            this.idleTimeout = idleTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder instances(@Nullable List<String> instances) {
            this.instances = instances;
            return this;
        }
        public Builder instances(String... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder internal(@Nullable Boolean internal) {
            this.internal = internal;
            return this;
        }
        @CustomType.Setter
        public Builder listeners(@Nullable List<GetLoadBalancerListener> listeners) {
            this.listeners = listeners;
            return this;
        }
        public Builder listeners(GetLoadBalancerListener... listeners) {
            return listeners(List.of(listeners));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder sourceSecurityGroup(@Nullable String sourceSecurityGroup) {
            this.sourceSecurityGroup = sourceSecurityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder sourceSecurityGroupId(@Nullable String sourceSecurityGroupId) {
            this.sourceSecurityGroupId = sourceSecurityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder subnets(@Nullable List<String> subnets) {
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }
        public GetLoadBalancerResult build() {
            final var o = new GetLoadBalancerResult();
            o.accessLogs = accessLogs;
            o.arn = arn;
            o.availabilityZones = availabilityZones;
            o.connectionDraining = connectionDraining;
            o.connectionDrainingTimeout = connectionDrainingTimeout;
            o.crossZoneLoadBalancing = crossZoneLoadBalancing;
            o.desyncMitigationMode = desyncMitigationMode;
            o.dnsName = dnsName;
            o.healthCheck = healthCheck;
            o.id = id;
            o.idleTimeout = idleTimeout;
            o.instances = instances;
            o.internal = internal;
            o.listeners = listeners;
            o.name = name;
            o.securityGroups = securityGroups;
            o.sourceSecurityGroup = sourceSecurityGroup;
            o.sourceSecurityGroupId = sourceSecurityGroupId;
            o.subnets = subnets;
            o.tags = tags;
            o.zoneId = zoneId;
            return o;
        }
    }
}
