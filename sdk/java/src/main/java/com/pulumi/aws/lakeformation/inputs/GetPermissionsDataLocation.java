// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPermissionsDataLocation extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionsDataLocation Empty = new GetPermissionsDataLocation();

    /**
     * ARN that uniquely identifies the data location resource.
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    /**
     * @return ARN that uniquely identifies the data location resource.
     * 
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @Import(name="catalogId", required=true)
    private String catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    public String catalogId() {
        return this.catalogId;
    }

    private GetPermissionsDataLocation() {}

    private GetPermissionsDataLocation(GetPermissionsDataLocation $) {
        this.arn = $.arn;
        this.catalogId = $.catalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionsDataLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionsDataLocation $;

        public Builder() {
            $ = new GetPermissionsDataLocation();
        }

        public Builder(GetPermissionsDataLocation defaults) {
            $ = new GetPermissionsDataLocation(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN that uniquely identifies the data location resource.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public GetPermissionsDataLocation build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            $.catalogId = Objects.requireNonNull($.catalogId, "expected parameter 'catalogId' to be non-null");
            return $;
        }
    }

}
