// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.GetInferenceProfilesInferenceProfileSummary;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInferenceProfilesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of inference profile summary objects. See `inference_profile_summaries`.
     * 
     */
    private List<GetInferenceProfilesInferenceProfileSummary> inferenceProfileSummaries;
    private String region;
    /**
     * @return Type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock. `APPLICATION` means the inference profile was created by a user.
     * 
     */
    private @Nullable String type;

    private GetInferenceProfilesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of inference profile summary objects. See `inference_profile_summaries`.
     * 
     */
    public List<GetInferenceProfilesInferenceProfileSummary> inferenceProfileSummaries() {
        return this.inferenceProfileSummaries;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return Type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock. `APPLICATION` means the inference profile was created by a user.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInferenceProfilesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetInferenceProfilesInferenceProfileSummary> inferenceProfileSummaries;
        private String region;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetInferenceProfilesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.inferenceProfileSummaries = defaults.inferenceProfileSummaries;
    	      this.region = defaults.region;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceProfileSummaries(List<GetInferenceProfilesInferenceProfileSummary> inferenceProfileSummaries) {
            if (inferenceProfileSummaries == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesResult", "inferenceProfileSummaries");
            }
            this.inferenceProfileSummaries = inferenceProfileSummaries;
            return this;
        }
        public Builder inferenceProfileSummaries(GetInferenceProfilesInferenceProfileSummary... inferenceProfileSummaries) {
            return inferenceProfileSummaries(List.of(inferenceProfileSummaries));
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetInferenceProfilesResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetInferenceProfilesResult build() {
            final var _resultValue = new GetInferenceProfilesResult();
            _resultValue.id = id;
            _resultValue.inferenceProfileSummaries = inferenceProfileSummaries;
            _resultValue.region = region;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
