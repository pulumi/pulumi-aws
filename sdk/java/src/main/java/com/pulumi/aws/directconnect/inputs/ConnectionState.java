// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionState Empty = new ConnectionState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="awsDevice")
    private @Nullable Output<String> awsDevice;

    public Optional<Output<String>> awsDevice() {
        return Optional.ofNullable(this.awsDevice);
    }

    @Import(name="bandwidth")
    private @Nullable Output<String> bandwidth;

    public Optional<Output<String>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    @Import(name="encryptionMode")
    private @Nullable Output<String> encryptionMode;

    public Optional<Output<String>> encryptionMode() {
        return Optional.ofNullable(this.encryptionMode);
    }

    @Import(name="hasLogicalRedundancy")
    private @Nullable Output<String> hasLogicalRedundancy;

    public Optional<Output<String>> hasLogicalRedundancy() {
        return Optional.ofNullable(this.hasLogicalRedundancy);
    }

    @Import(name="jumboFrameCapable")
    private @Nullable Output<Boolean> jumboFrameCapable;

    public Optional<Output<Boolean>> jumboFrameCapable() {
        return Optional.ofNullable(this.jumboFrameCapable);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="macsecCapable")
    private @Nullable Output<Boolean> macsecCapable;

    public Optional<Output<Boolean>> macsecCapable() {
        return Optional.ofNullable(this.macsecCapable);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerAccountId")
    private @Nullable Output<String> ownerAccountId;

    public Optional<Output<String>> ownerAccountId() {
        return Optional.ofNullable(this.ownerAccountId);
    }

    @Import(name="portEncryptionStatus")
    private @Nullable Output<String> portEncryptionStatus;

    public Optional<Output<String>> portEncryptionStatus() {
        return Optional.ofNullable(this.portEncryptionStatus);
    }

    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    @Import(name="requestMacsec")
    private @Nullable Output<Boolean> requestMacsec;

    public Optional<Output<Boolean>> requestMacsec() {
        return Optional.ofNullable(this.requestMacsec);
    }

    @Import(name="skipDestroy")
    private @Nullable Output<Boolean> skipDestroy;

    public Optional<Output<Boolean>> skipDestroy() {
        return Optional.ofNullable(this.skipDestroy);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vlanId")
    private @Nullable Output<String> vlanId;

    public Optional<Output<String>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private ConnectionState() {}

    private ConnectionState(ConnectionState $) {
        this.arn = $.arn;
        this.awsDevice = $.awsDevice;
        this.bandwidth = $.bandwidth;
        this.encryptionMode = $.encryptionMode;
        this.hasLogicalRedundancy = $.hasLogicalRedundancy;
        this.jumboFrameCapable = $.jumboFrameCapable;
        this.location = $.location;
        this.macsecCapable = $.macsecCapable;
        this.name = $.name;
        this.ownerAccountId = $.ownerAccountId;
        this.portEncryptionStatus = $.portEncryptionStatus;
        this.providerName = $.providerName;
        this.requestMacsec = $.requestMacsec;
        this.skipDestroy = $.skipDestroy;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionState $;

        public Builder() {
            $ = new ConnectionState();
        }

        public Builder(ConnectionState defaults) {
            $ = new ConnectionState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder awsDevice(@Nullable Output<String> awsDevice) {
            $.awsDevice = awsDevice;
            return this;
        }

        public Builder awsDevice(String awsDevice) {
            return awsDevice(Output.of(awsDevice));
        }

        public Builder bandwidth(@Nullable Output<String> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        public Builder bandwidth(String bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        public Builder encryptionMode(@Nullable Output<String> encryptionMode) {
            $.encryptionMode = encryptionMode;
            return this;
        }

        public Builder encryptionMode(String encryptionMode) {
            return encryptionMode(Output.of(encryptionMode));
        }

        public Builder hasLogicalRedundancy(@Nullable Output<String> hasLogicalRedundancy) {
            $.hasLogicalRedundancy = hasLogicalRedundancy;
            return this;
        }

        public Builder hasLogicalRedundancy(String hasLogicalRedundancy) {
            return hasLogicalRedundancy(Output.of(hasLogicalRedundancy));
        }

        public Builder jumboFrameCapable(@Nullable Output<Boolean> jumboFrameCapable) {
            $.jumboFrameCapable = jumboFrameCapable;
            return this;
        }

        public Builder jumboFrameCapable(Boolean jumboFrameCapable) {
            return jumboFrameCapable(Output.of(jumboFrameCapable));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder macsecCapable(@Nullable Output<Boolean> macsecCapable) {
            $.macsecCapable = macsecCapable;
            return this;
        }

        public Builder macsecCapable(Boolean macsecCapable) {
            return macsecCapable(Output.of(macsecCapable));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerAccountId(@Nullable Output<String> ownerAccountId) {
            $.ownerAccountId = ownerAccountId;
            return this;
        }

        public Builder ownerAccountId(String ownerAccountId) {
            return ownerAccountId(Output.of(ownerAccountId));
        }

        public Builder portEncryptionStatus(@Nullable Output<String> portEncryptionStatus) {
            $.portEncryptionStatus = portEncryptionStatus;
            return this;
        }

        public Builder portEncryptionStatus(String portEncryptionStatus) {
            return portEncryptionStatus(Output.of(portEncryptionStatus));
        }

        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public Builder requestMacsec(@Nullable Output<Boolean> requestMacsec) {
            $.requestMacsec = requestMacsec;
            return this;
        }

        public Builder requestMacsec(Boolean requestMacsec) {
            return requestMacsec(Output.of(requestMacsec));
        }

        public Builder skipDestroy(@Nullable Output<Boolean> skipDestroy) {
            $.skipDestroy = skipDestroy;
            return this;
        }

        public Builder skipDestroy(Boolean skipDestroy) {
            return skipDestroy(Output.of(skipDestroy));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vlanId(@Nullable Output<String> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        public Builder vlanId(String vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public ConnectionState build() {
            return $;
        }
    }

}
