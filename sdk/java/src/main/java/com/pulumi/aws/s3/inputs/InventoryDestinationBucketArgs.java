// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.InventoryDestinationBucketEncryptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InventoryDestinationBucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final InventoryDestinationBucketArgs Empty = new InventoryDestinationBucketArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="bucketArn", required=true)
    private Output<String> bucketArn;

    public Output<String> bucketArn() {
        return this.bucketArn;
    }

    @Import(name="encryption")
    private @Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption;

    public Optional<Output<InventoryDestinationBucketEncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    @Import(name="format", required=true)
    private Output<String> format;

    public Output<String> format() {
        return this.format;
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private InventoryDestinationBucketArgs() {}

    private InventoryDestinationBucketArgs(InventoryDestinationBucketArgs $) {
        this.accountId = $.accountId;
        this.bucketArn = $.bucketArn;
        this.encryption = $.encryption;
        this.format = $.format;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InventoryDestinationBucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InventoryDestinationBucketArgs $;

        public Builder() {
            $ = new InventoryDestinationBucketArgs();
        }

        public Builder(InventoryDestinationBucketArgs defaults) {
            $ = new InventoryDestinationBucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder bucketArn(Output<String> bucketArn) {
            $.bucketArn = bucketArn;
            return this;
        }

        public Builder bucketArn(String bucketArn) {
            return bucketArn(Output.of(bucketArn));
        }

        public Builder encryption(@Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder encryption(InventoryDestinationBucketEncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        public Builder format(String format) {
            return format(Output.of(format));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public InventoryDestinationBucketArgs build() {
            $.bucketArn = Objects.requireNonNull($.bucketArn, "expected parameter 'bucketArn' to be non-null");
            $.format = Objects.requireNonNull($.format, "expected parameter 'format' to be non-null");
            return $;
        }
    }

}
