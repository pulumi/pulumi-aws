// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleKafkaArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleKafkaArgs Empty = new TopicRuleKafkaArgs();

    @Import(name="clientProperties", required=true)
    private Output<Map<String,String>> clientProperties;

    public Output<Map<String,String>> clientProperties() {
        return this.clientProperties;
    }

    @Import(name="destinationArn", required=true)
    private Output<String> destinationArn;

    public Output<String> destinationArn() {
        return this.destinationArn;
    }

    @Import(name="key")
    private @Nullable Output<String> key;

    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="partition")
    private @Nullable Output<String> partition;

    public Optional<Output<String>> partition() {
        return Optional.ofNullable(this.partition);
    }

    @Import(name="topic", required=true)
    private Output<String> topic;

    public Output<String> topic() {
        return this.topic;
    }

    private TopicRuleKafkaArgs() {}

    private TopicRuleKafkaArgs(TopicRuleKafkaArgs $) {
        this.clientProperties = $.clientProperties;
        this.destinationArn = $.destinationArn;
        this.key = $.key;
        this.partition = $.partition;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleKafkaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleKafkaArgs $;

        public Builder() {
            $ = new TopicRuleKafkaArgs();
        }

        public Builder(TopicRuleKafkaArgs defaults) {
            $ = new TopicRuleKafkaArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientProperties(Output<Map<String,String>> clientProperties) {
            $.clientProperties = clientProperties;
            return this;
        }

        public Builder clientProperties(Map<String,String> clientProperties) {
            return clientProperties(Output.of(clientProperties));
        }

        public Builder destinationArn(Output<String> destinationArn) {
            $.destinationArn = destinationArn;
            return this;
        }

        public Builder destinationArn(String destinationArn) {
            return destinationArn(Output.of(destinationArn));
        }

        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder partition(@Nullable Output<String> partition) {
            $.partition = partition;
            return this;
        }

        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        public Builder topic(Output<String> topic) {
            $.topic = topic;
            return this;
        }

        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public TopicRuleKafkaArgs build() {
            $.clientProperties = Objects.requireNonNull($.clientProperties, "expected parameter 'clientProperties' to be non-null");
            $.destinationArn = Objects.requireNonNull($.destinationArn, "expected parameter 'destinationArn' to be non-null");
            $.topic = Objects.requireNonNull($.topic, "expected parameter 'topic' to be non-null");
            return $;
        }
    }

}
