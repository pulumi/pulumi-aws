// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.computeoptimizer.inputs;

import com.pulumi.aws.computeoptimizer.inputs.RecommendationPreferencesUtilizationPreferenceMetricParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecommendationPreferencesUtilizationPreferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecommendationPreferencesUtilizationPreferenceArgs Empty = new RecommendationPreferencesUtilizationPreferenceArgs();

    /**
     * The name of the resource utilization metric name to customize. Valid values: `CpuUtilization`, `MemoryUtilization`.
     * 
     */
    @Import(name="metricName", required=true)
    private Output<String> metricName;

    /**
     * @return The name of the resource utilization metric name to customize. Valid values: `CpuUtilization`, `MemoryUtilization`.
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }

    /**
     * The parameters to set when customizing the resource utilization thresholds.
     * 
     */
    @Import(name="metricParameters")
    private @Nullable Output<RecommendationPreferencesUtilizationPreferenceMetricParametersArgs> metricParameters;

    /**
     * @return The parameters to set when customizing the resource utilization thresholds.
     * 
     */
    public Optional<Output<RecommendationPreferencesUtilizationPreferenceMetricParametersArgs>> metricParameters() {
        return Optional.ofNullable(this.metricParameters);
    }

    private RecommendationPreferencesUtilizationPreferenceArgs() {}

    private RecommendationPreferencesUtilizationPreferenceArgs(RecommendationPreferencesUtilizationPreferenceArgs $) {
        this.metricName = $.metricName;
        this.metricParameters = $.metricParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecommendationPreferencesUtilizationPreferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecommendationPreferencesUtilizationPreferenceArgs $;

        public Builder() {
            $ = new RecommendationPreferencesUtilizationPreferenceArgs();
        }

        public Builder(RecommendationPreferencesUtilizationPreferenceArgs defaults) {
            $ = new RecommendationPreferencesUtilizationPreferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricName The name of the resource utilization metric name to customize. Valid values: `CpuUtilization`, `MemoryUtilization`.
         * 
         * @return builder
         * 
         */
        public Builder metricName(Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName The name of the resource utilization metric name to customize. Valid values: `CpuUtilization`, `MemoryUtilization`.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param metricParameters The parameters to set when customizing the resource utilization thresholds.
         * 
         * @return builder
         * 
         */
        public Builder metricParameters(@Nullable Output<RecommendationPreferencesUtilizationPreferenceMetricParametersArgs> metricParameters) {
            $.metricParameters = metricParameters;
            return this;
        }

        /**
         * @param metricParameters The parameters to set when customizing the resource utilization thresholds.
         * 
         * @return builder
         * 
         */
        public Builder metricParameters(RecommendationPreferencesUtilizationPreferenceMetricParametersArgs metricParameters) {
            return metricParameters(Output.of(metricParameters));
        }

        public RecommendationPreferencesUtilizationPreferenceArgs build() {
            if ($.metricName == null) {
                throw new MissingRequiredPropertyException("RecommendationPreferencesUtilizationPreferenceArgs", "metricName");
            }
            return $;
        }
    }

}
