// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostedConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final HostedConnectionState Empty = new HostedConnectionState();

    @Import(name="awsDevice")
    private @Nullable Output<String> awsDevice;

    public Optional<Output<String>> awsDevice() {
        return Optional.ofNullable(this.awsDevice);
    }

    @Import(name="bandwidth")
    private @Nullable Output<String> bandwidth;

    public Optional<Output<String>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    @Import(name="connectionId")
    private @Nullable Output<String> connectionId;

    public Optional<Output<String>> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }

    @Import(name="hasLogicalRedundancy")
    private @Nullable Output<String> hasLogicalRedundancy;

    public Optional<Output<String>> hasLogicalRedundancy() {
        return Optional.ofNullable(this.hasLogicalRedundancy);
    }

    @Import(name="jumboFrameCapable")
    private @Nullable Output<Boolean> jumboFrameCapable;

    public Optional<Output<Boolean>> jumboFrameCapable() {
        return Optional.ofNullable(this.jumboFrameCapable);
    }

    @Import(name="lagId")
    private @Nullable Output<String> lagId;

    public Optional<Output<String>> lagId() {
        return Optional.ofNullable(this.lagId);
    }

    @Import(name="loaIssueTime")
    private @Nullable Output<String> loaIssueTime;

    public Optional<Output<String>> loaIssueTime() {
        return Optional.ofNullable(this.loaIssueTime);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerAccountId")
    private @Nullable Output<String> ownerAccountId;

    public Optional<Output<String>> ownerAccountId() {
        return Optional.ofNullable(this.ownerAccountId);
    }

    @Import(name="partnerName")
    private @Nullable Output<String> partnerName;

    public Optional<Output<String>> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }

    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="vlan")
    private @Nullable Output<Integer> vlan;

    public Optional<Output<Integer>> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    private HostedConnectionState() {}

    private HostedConnectionState(HostedConnectionState $) {
        this.awsDevice = $.awsDevice;
        this.bandwidth = $.bandwidth;
        this.connectionId = $.connectionId;
        this.hasLogicalRedundancy = $.hasLogicalRedundancy;
        this.jumboFrameCapable = $.jumboFrameCapable;
        this.lagId = $.lagId;
        this.loaIssueTime = $.loaIssueTime;
        this.location = $.location;
        this.name = $.name;
        this.ownerAccountId = $.ownerAccountId;
        this.partnerName = $.partnerName;
        this.providerName = $.providerName;
        this.region = $.region;
        this.state = $.state;
        this.vlan = $.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostedConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostedConnectionState $;

        public Builder() {
            $ = new HostedConnectionState();
        }

        public Builder(HostedConnectionState defaults) {
            $ = new HostedConnectionState(Objects.requireNonNull(defaults));
        }

        public Builder awsDevice(@Nullable Output<String> awsDevice) {
            $.awsDevice = awsDevice;
            return this;
        }

        public Builder awsDevice(String awsDevice) {
            return awsDevice(Output.of(awsDevice));
        }

        public Builder bandwidth(@Nullable Output<String> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        public Builder bandwidth(String bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        public Builder connectionId(@Nullable Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public Builder hasLogicalRedundancy(@Nullable Output<String> hasLogicalRedundancy) {
            $.hasLogicalRedundancy = hasLogicalRedundancy;
            return this;
        }

        public Builder hasLogicalRedundancy(String hasLogicalRedundancy) {
            return hasLogicalRedundancy(Output.of(hasLogicalRedundancy));
        }

        public Builder jumboFrameCapable(@Nullable Output<Boolean> jumboFrameCapable) {
            $.jumboFrameCapable = jumboFrameCapable;
            return this;
        }

        public Builder jumboFrameCapable(Boolean jumboFrameCapable) {
            return jumboFrameCapable(Output.of(jumboFrameCapable));
        }

        public Builder lagId(@Nullable Output<String> lagId) {
            $.lagId = lagId;
            return this;
        }

        public Builder lagId(String lagId) {
            return lagId(Output.of(lagId));
        }

        public Builder loaIssueTime(@Nullable Output<String> loaIssueTime) {
            $.loaIssueTime = loaIssueTime;
            return this;
        }

        public Builder loaIssueTime(String loaIssueTime) {
            return loaIssueTime(Output.of(loaIssueTime));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerAccountId(@Nullable Output<String> ownerAccountId) {
            $.ownerAccountId = ownerAccountId;
            return this;
        }

        public Builder ownerAccountId(String ownerAccountId) {
            return ownerAccountId(Output.of(ownerAccountId));
        }

        public Builder partnerName(@Nullable Output<String> partnerName) {
            $.partnerName = partnerName;
            return this;
        }

        public Builder partnerName(String partnerName) {
            return partnerName(Output.of(partnerName));
        }

        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder vlan(@Nullable Output<Integer> vlan) {
            $.vlan = vlan;
            return this;
        }

        public Builder vlan(Integer vlan) {
            return vlan(Output.of(vlan));
        }

        public HostedConnectionState build() {
            return $;
        }
    }

}
