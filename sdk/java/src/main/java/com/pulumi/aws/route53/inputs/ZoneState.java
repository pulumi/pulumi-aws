// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.inputs.ZoneVpcArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneState extends com.pulumi.resources.ResourceArgs {

    public static final ZoneState Empty = new ZoneState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="delegationSetId")
    private @Nullable Output<String> delegationSetId;

    public Optional<Output<String>> delegationSetId() {
        return Optional.ofNullable(this.delegationSetId);
    }

    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nameServers")
    private @Nullable Output<List<String>> nameServers;

    public Optional<Output<List<String>>> nameServers() {
        return Optional.ofNullable(this.nameServers);
    }

    @Import(name="primaryNameServer")
    private @Nullable Output<String> primaryNameServer;

    public Optional<Output<String>> primaryNameServer() {
        return Optional.ofNullable(this.primaryNameServer);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcs")
    private @Nullable Output<List<ZoneVpcArgs>> vpcs;

    public Optional<Output<List<ZoneVpcArgs>>> vpcs() {
        return Optional.ofNullable(this.vpcs);
    }

    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ZoneState() {}

    private ZoneState(ZoneState $) {
        this.arn = $.arn;
        this.comment = $.comment;
        this.delegationSetId = $.delegationSetId;
        this.forceDestroy = $.forceDestroy;
        this.name = $.name;
        this.nameServers = $.nameServers;
        this.primaryNameServer = $.primaryNameServer;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcs = $.vpcs;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneState $;

        public Builder() {
            $ = new ZoneState();
        }

        public Builder(ZoneState defaults) {
            $ = new ZoneState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder delegationSetId(@Nullable Output<String> delegationSetId) {
            $.delegationSetId = delegationSetId;
            return this;
        }

        public Builder delegationSetId(String delegationSetId) {
            return delegationSetId(Output.of(delegationSetId));
        }

        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nameServers(@Nullable Output<List<String>> nameServers) {
            $.nameServers = nameServers;
            return this;
        }

        public Builder nameServers(List<String> nameServers) {
            return nameServers(Output.of(nameServers));
        }

        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }

        public Builder primaryNameServer(@Nullable Output<String> primaryNameServer) {
            $.primaryNameServer = primaryNameServer;
            return this;
        }

        public Builder primaryNameServer(String primaryNameServer) {
            return primaryNameServer(Output.of(primaryNameServer));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcs(@Nullable Output<List<ZoneVpcArgs>> vpcs) {
            $.vpcs = vpcs;
            return this;
        }

        public Builder vpcs(List<ZoneVpcArgs> vpcs) {
            return vpcs(Output.of(vpcs));
        }

        public Builder vpcs(ZoneVpcArgs... vpcs) {
            return vpcs(List.of(vpcs));
        }

        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ZoneState build() {
            $.comment = Codegen.stringProp("comment").output().arg($.comment).def("Managed by Pulumi").getNullable();
            return $;
        }
    }

}
