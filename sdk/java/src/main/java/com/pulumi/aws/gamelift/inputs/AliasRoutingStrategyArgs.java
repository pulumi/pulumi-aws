// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AliasRoutingStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AliasRoutingStrategyArgs Empty = new AliasRoutingStrategyArgs();

    /**
     * ID of the GameLift Fleet to point the alias to.
     * 
     */
    @Import(name="fleetId")
    private @Nullable Output<String> fleetId;

    /**
     * @return ID of the GameLift Fleet to point the alias to.
     * 
     */
    public Optional<Output<String>> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * Message text to be used with the `TERMINAL` routing strategy.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    /**
     * @return Message text to be used with the `TERMINAL` routing strategy.
     * 
     */
    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * Type of routing strategyE.g., `SIMPLE` or `TERMINAL`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of routing strategyE.g., `SIMPLE` or `TERMINAL`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AliasRoutingStrategyArgs() {}

    private AliasRoutingStrategyArgs(AliasRoutingStrategyArgs $) {
        this.fleetId = $.fleetId;
        this.message = $.message;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasRoutingStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasRoutingStrategyArgs $;

        public Builder() {
            $ = new AliasRoutingStrategyArgs();
        }

        public Builder(AliasRoutingStrategyArgs defaults) {
            $ = new AliasRoutingStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fleetId ID of the GameLift Fleet to point the alias to.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId ID of the GameLift Fleet to point the alias to.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param message Message text to be used with the `TERMINAL` routing strategy.
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message Message text to be used with the `TERMINAL` routing strategy.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        /**
         * @param type Type of routing strategyE.g., `SIMPLE` or `TERMINAL`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of routing strategyE.g., `SIMPLE` or `TERMINAL`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AliasRoutingStrategyArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AliasRoutingStrategyArgs", "type");
            }
            return $;
        }
    }

}
