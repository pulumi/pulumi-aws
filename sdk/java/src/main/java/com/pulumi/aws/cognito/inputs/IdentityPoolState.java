// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.aws.cognito.inputs.IdentityPoolCognitoIdentityProviderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityPoolState extends com.pulumi.resources.ResourceArgs {

    public static final IdentityPoolState Empty = new IdentityPoolState();

    @Import(name="allowClassicFlow")
    private @Nullable Output<Boolean> allowClassicFlow;

    public Optional<Output<Boolean>> allowClassicFlow() {
        return Optional.ofNullable(this.allowClassicFlow);
    }

    @Import(name="allowUnauthenticatedIdentities")
    private @Nullable Output<Boolean> allowUnauthenticatedIdentities;

    public Optional<Output<Boolean>> allowUnauthenticatedIdentities() {
        return Optional.ofNullable(this.allowUnauthenticatedIdentities);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="cognitoIdentityProviders")
    private @Nullable Output<List<IdentityPoolCognitoIdentityProviderArgs>> cognitoIdentityProviders;

    public Optional<Output<List<IdentityPoolCognitoIdentityProviderArgs>>> cognitoIdentityProviders() {
        return Optional.ofNullable(this.cognitoIdentityProviders);
    }

    @Import(name="developerProviderName")
    private @Nullable Output<String> developerProviderName;

    public Optional<Output<String>> developerProviderName() {
        return Optional.ofNullable(this.developerProviderName);
    }

    @Import(name="identityPoolName")
    private @Nullable Output<String> identityPoolName;

    public Optional<Output<String>> identityPoolName() {
        return Optional.ofNullable(this.identityPoolName);
    }

    @Import(name="openidConnectProviderArns")
    private @Nullable Output<List<String>> openidConnectProviderArns;

    public Optional<Output<List<String>>> openidConnectProviderArns() {
        return Optional.ofNullable(this.openidConnectProviderArns);
    }

    @Import(name="samlProviderArns")
    private @Nullable Output<List<String>> samlProviderArns;

    public Optional<Output<List<String>>> samlProviderArns() {
        return Optional.ofNullable(this.samlProviderArns);
    }

    @Import(name="supportedLoginProviders")
    private @Nullable Output<Map<String,String>> supportedLoginProviders;

    public Optional<Output<Map<String,String>>> supportedLoginProviders() {
        return Optional.ofNullable(this.supportedLoginProviders);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private IdentityPoolState() {}

    private IdentityPoolState(IdentityPoolState $) {
        this.allowClassicFlow = $.allowClassicFlow;
        this.allowUnauthenticatedIdentities = $.allowUnauthenticatedIdentities;
        this.arn = $.arn;
        this.cognitoIdentityProviders = $.cognitoIdentityProviders;
        this.developerProviderName = $.developerProviderName;
        this.identityPoolName = $.identityPoolName;
        this.openidConnectProviderArns = $.openidConnectProviderArns;
        this.samlProviderArns = $.samlProviderArns;
        this.supportedLoginProviders = $.supportedLoginProviders;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityPoolState $;

        public Builder() {
            $ = new IdentityPoolState();
        }

        public Builder(IdentityPoolState defaults) {
            $ = new IdentityPoolState(Objects.requireNonNull(defaults));
        }

        public Builder allowClassicFlow(@Nullable Output<Boolean> allowClassicFlow) {
            $.allowClassicFlow = allowClassicFlow;
            return this;
        }

        public Builder allowClassicFlow(Boolean allowClassicFlow) {
            return allowClassicFlow(Output.of(allowClassicFlow));
        }

        public Builder allowUnauthenticatedIdentities(@Nullable Output<Boolean> allowUnauthenticatedIdentities) {
            $.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
            return this;
        }

        public Builder allowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
            return allowUnauthenticatedIdentities(Output.of(allowUnauthenticatedIdentities));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder cognitoIdentityProviders(@Nullable Output<List<IdentityPoolCognitoIdentityProviderArgs>> cognitoIdentityProviders) {
            $.cognitoIdentityProviders = cognitoIdentityProviders;
            return this;
        }

        public Builder cognitoIdentityProviders(List<IdentityPoolCognitoIdentityProviderArgs> cognitoIdentityProviders) {
            return cognitoIdentityProviders(Output.of(cognitoIdentityProviders));
        }

        public Builder cognitoIdentityProviders(IdentityPoolCognitoIdentityProviderArgs... cognitoIdentityProviders) {
            return cognitoIdentityProviders(List.of(cognitoIdentityProviders));
        }

        public Builder developerProviderName(@Nullable Output<String> developerProviderName) {
            $.developerProviderName = developerProviderName;
            return this;
        }

        public Builder developerProviderName(String developerProviderName) {
            return developerProviderName(Output.of(developerProviderName));
        }

        public Builder identityPoolName(@Nullable Output<String> identityPoolName) {
            $.identityPoolName = identityPoolName;
            return this;
        }

        public Builder identityPoolName(String identityPoolName) {
            return identityPoolName(Output.of(identityPoolName));
        }

        public Builder openidConnectProviderArns(@Nullable Output<List<String>> openidConnectProviderArns) {
            $.openidConnectProviderArns = openidConnectProviderArns;
            return this;
        }

        public Builder openidConnectProviderArns(List<String> openidConnectProviderArns) {
            return openidConnectProviderArns(Output.of(openidConnectProviderArns));
        }

        public Builder openidConnectProviderArns(String... openidConnectProviderArns) {
            return openidConnectProviderArns(List.of(openidConnectProviderArns));
        }

        public Builder samlProviderArns(@Nullable Output<List<String>> samlProviderArns) {
            $.samlProviderArns = samlProviderArns;
            return this;
        }

        public Builder samlProviderArns(List<String> samlProviderArns) {
            return samlProviderArns(Output.of(samlProviderArns));
        }

        public Builder samlProviderArns(String... samlProviderArns) {
            return samlProviderArns(List.of(samlProviderArns));
        }

        public Builder supportedLoginProviders(@Nullable Output<Map<String,String>> supportedLoginProviders) {
            $.supportedLoginProviders = supportedLoginProviders;
            return this;
        }

        public Builder supportedLoginProviders(Map<String,String> supportedLoginProviders) {
            return supportedLoginProviders(Output.of(supportedLoginProviders));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public IdentityPoolState build() {
            return $;
        }
    }

}
