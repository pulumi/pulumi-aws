// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.outputs;

import com.pulumi.aws.verifiedpermissions.outputs.IdentitySourceConfigurationCognitoUserPoolConfiguration;
import com.pulumi.aws.verifiedpermissions.outputs.IdentitySourceConfigurationOpenIdConnectConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IdentitySourceConfiguration {
    /**
     * @return Specifies the configuration details of an Amazon Cognito user pool that Verified Permissions can use as a source of authenticated identities as entities. See Cognito User Pool Configuration below.
     * 
     */
    private @Nullable IdentitySourceConfigurationCognitoUserPoolConfiguration cognitoUserPoolConfiguration;
    /**
     * @return Specifies the configuration details of an OpenID Connect (OIDC) identity provider, or identity source, that Verified Permissions can use to generate entities from authenticated identities. See Open ID Connect Configuration below.
     * 
     */
    private @Nullable IdentitySourceConfigurationOpenIdConnectConfiguration openIdConnectConfiguration;

    private IdentitySourceConfiguration() {}
    /**
     * @return Specifies the configuration details of an Amazon Cognito user pool that Verified Permissions can use as a source of authenticated identities as entities. See Cognito User Pool Configuration below.
     * 
     */
    public Optional<IdentitySourceConfigurationCognitoUserPoolConfiguration> cognitoUserPoolConfiguration() {
        return Optional.ofNullable(this.cognitoUserPoolConfiguration);
    }
    /**
     * @return Specifies the configuration details of an OpenID Connect (OIDC) identity provider, or identity source, that Verified Permissions can use to generate entities from authenticated identities. See Open ID Connect Configuration below.
     * 
     */
    public Optional<IdentitySourceConfigurationOpenIdConnectConfiguration> openIdConnectConfiguration() {
        return Optional.ofNullable(this.openIdConnectConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentitySourceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable IdentitySourceConfigurationCognitoUserPoolConfiguration cognitoUserPoolConfiguration;
        private @Nullable IdentitySourceConfigurationOpenIdConnectConfiguration openIdConnectConfiguration;
        public Builder() {}
        public Builder(IdentitySourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cognitoUserPoolConfiguration = defaults.cognitoUserPoolConfiguration;
    	      this.openIdConnectConfiguration = defaults.openIdConnectConfiguration;
        }

        @CustomType.Setter
        public Builder cognitoUserPoolConfiguration(@Nullable IdentitySourceConfigurationCognitoUserPoolConfiguration cognitoUserPoolConfiguration) {

            this.cognitoUserPoolConfiguration = cognitoUserPoolConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder openIdConnectConfiguration(@Nullable IdentitySourceConfigurationOpenIdConnectConfiguration openIdConnectConfiguration) {

            this.openIdConnectConfiguration = openIdConnectConfiguration;
            return this;
        }
        public IdentitySourceConfiguration build() {
            final var _resultValue = new IdentitySourceConfiguration();
            _resultValue.cognitoUserPoolConfiguration = cognitoUserPoolConfiguration;
            _resultValue.openIdConnectConfiguration = openIdConnectConfiguration;
            return _resultValue;
        }
    }
}
