// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentSegmentAction extends com.pulumi.resources.InvokeArgs {

    public static final GetCoreNetworkPolicyDocumentSegmentAction Empty = new GetCoreNetworkPolicyDocumentSegmentAction();

    @Import(name="action", required=true)
    private String action;

    public String action() {
        return this.action;
    }

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="destinationCidrBlocks")
    private @Nullable List<String> destinationCidrBlocks;

    public Optional<List<String>> destinationCidrBlocks() {
        return Optional.ofNullable(this.destinationCidrBlocks);
    }

    @Import(name="destinations")
    private @Nullable List<String> destinations;

    public Optional<List<String>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    @Import(name="mode")
    private @Nullable String mode;

    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="segment", required=true)
    private String segment;

    public String segment() {
        return this.segment;
    }

    @Import(name="shareWithExcepts")
    private @Nullable List<String> shareWithExcepts;

    public Optional<List<String>> shareWithExcepts() {
        return Optional.ofNullable(this.shareWithExcepts);
    }

    @Import(name="shareWiths")
    private @Nullable List<String> shareWiths;

    public Optional<List<String>> shareWiths() {
        return Optional.ofNullable(this.shareWiths);
    }

    private GetCoreNetworkPolicyDocumentSegmentAction() {}

    private GetCoreNetworkPolicyDocumentSegmentAction(GetCoreNetworkPolicyDocumentSegmentAction $) {
        this.action = $.action;
        this.description = $.description;
        this.destinationCidrBlocks = $.destinationCidrBlocks;
        this.destinations = $.destinations;
        this.mode = $.mode;
        this.segment = $.segment;
        this.shareWithExcepts = $.shareWithExcepts;
        this.shareWiths = $.shareWiths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentSegmentAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentSegmentAction $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentSegmentAction();
        }

        public Builder(GetCoreNetworkPolicyDocumentSegmentAction defaults) {
            $ = new GetCoreNetworkPolicyDocumentSegmentAction(Objects.requireNonNull(defaults));
        }

        public Builder action(String action) {
            $.action = action;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder destinationCidrBlocks(@Nullable List<String> destinationCidrBlocks) {
            $.destinationCidrBlocks = destinationCidrBlocks;
            return this;
        }

        public Builder destinationCidrBlocks(String... destinationCidrBlocks) {
            return destinationCidrBlocks(List.of(destinationCidrBlocks));
        }

        public Builder destinations(@Nullable List<String> destinations) {
            $.destinations = destinations;
            return this;
        }

        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        public Builder mode(@Nullable String mode) {
            $.mode = mode;
            return this;
        }

        public Builder segment(String segment) {
            $.segment = segment;
            return this;
        }

        public Builder shareWithExcepts(@Nullable List<String> shareWithExcepts) {
            $.shareWithExcepts = shareWithExcepts;
            return this;
        }

        public Builder shareWithExcepts(String... shareWithExcepts) {
            return shareWithExcepts(List.of(shareWithExcepts));
        }

        public Builder shareWiths(@Nullable List<String> shareWiths) {
            $.shareWiths = shareWiths;
            return this;
        }

        public Builder shareWiths(String... shareWiths) {
            return shareWiths(List.of(shareWiths));
        }

        public GetCoreNetworkPolicyDocumentSegmentAction build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.segment = Objects.requireNonNull($.segment, "expected parameter 'segment' to be non-null");
            return $;
        }
    }

}
