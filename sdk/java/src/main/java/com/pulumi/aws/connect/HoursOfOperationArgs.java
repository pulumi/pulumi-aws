// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect;

import com.pulumi.aws.connect.inputs.HoursOfOperationConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HoursOfOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final HoursOfOperationArgs Empty = new HoursOfOperationArgs();

    /**
     * One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
     * 
     */
    @Import(name="configs", required=true)
    private Output<List<HoursOfOperationConfigArgs>> configs;

    /**
     * @return One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
     * 
     */
    public Output<List<HoursOfOperationConfigArgs>> configs() {
        return this.configs;
    }

    /**
     * Specifies the description of the Hours of Operation.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies the description of the Hours of Operation.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Specifies the name of the Hours of Operation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Hours of Operation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Tags to apply to the Hours of Operation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Tags to apply to the Hours of Operation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the time zone of the Hours of Operation.
     * 
     */
    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    /**
     * @return Specifies the time zone of the Hours of Operation.
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }

    private HoursOfOperationArgs() {}

    private HoursOfOperationArgs(HoursOfOperationArgs $) {
        this.configs = $.configs;
        this.description = $.description;
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.tags = $.tags;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HoursOfOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HoursOfOperationArgs $;

        public Builder() {
            $ = new HoursOfOperationArgs();
        }

        public Builder(HoursOfOperationArgs defaults) {
            $ = new HoursOfOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configs One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
         * 
         * @return builder
         * 
         */
        public Builder configs(Output<List<HoursOfOperationConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        /**
         * @param configs One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
         * 
         * @return builder
         * 
         */
        public Builder configs(List<HoursOfOperationConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        /**
         * @param configs One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
         * 
         * @return builder
         * 
         */
        public Builder configs(HoursOfOperationConfigArgs... configs) {
            return configs(List.of(configs));
        }

        /**
         * @param description Specifies the description of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies the description of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceId Specifies the identifier of the hosting Amazon Connect Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Specifies the identifier of the hosting Amazon Connect Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param name Specifies the name of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Tags to apply to the Hours of Operation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to apply to the Hours of Operation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param timeZone Specifies the time zone of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Specifies the time zone of the Hours of Operation.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public HoursOfOperationArgs build() {
            if ($.configs == null) {
                throw new MissingRequiredPropertyException("HoursOfOperationArgs", "configs");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("HoursOfOperationArgs", "instanceId");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("HoursOfOperationArgs", "timeZone");
            }
            return $;
        }
    }

}
