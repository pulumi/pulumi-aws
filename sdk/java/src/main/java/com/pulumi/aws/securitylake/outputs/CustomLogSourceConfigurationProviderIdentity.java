// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securitylake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CustomLogSourceConfigurationProviderIdentity {
    /**
     * @return The external ID used to estalish trust relationship with the AWS identity.
     * 
     */
    private String externalId;
    /**
     * @return The AWS identity principal.
     * 
     */
    private String principal;

    private CustomLogSourceConfigurationProviderIdentity() {}
    /**
     * @return The external ID used to estalish trust relationship with the AWS identity.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The AWS identity principal.
     * 
     */
    public String principal() {
        return this.principal;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomLogSourceConfigurationProviderIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalId;
        private String principal;
        public Builder() {}
        public Builder(CustomLogSourceConfigurationProviderIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalId = defaults.externalId;
    	      this.principal = defaults.principal;
        }

        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("CustomLogSourceConfigurationProviderIdentity", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder principal(String principal) {
            if (principal == null) {
              throw new MissingRequiredPropertyException("CustomLogSourceConfigurationProviderIdentity", "principal");
            }
            this.principal = principal;
            return this;
        }
        public CustomLogSourceConfigurationProviderIdentity build() {
            final var _resultValue = new CustomLogSourceConfigurationProviderIdentity();
            _resultValue.externalId = externalId;
            _resultValue.principal = principal;
            return _resultValue;
        }
    }
}
