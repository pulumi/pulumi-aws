// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MemberState extends com.pulumi.resources.ResourceArgs {

    public static final MemberState Empty = new MemberState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="administratorAccountId")
    private @Nullable Output<String> administratorAccountId;

    public Optional<Output<String>> administratorAccountId() {
        return Optional.ofNullable(this.administratorAccountId);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    @Import(name="invitationDisableEmailNotification")
    private @Nullable Output<Boolean> invitationDisableEmailNotification;

    public Optional<Output<Boolean>> invitationDisableEmailNotification() {
        return Optional.ofNullable(this.invitationDisableEmailNotification);
    }

    @Import(name="invitationMessage")
    private @Nullable Output<String> invitationMessage;

    public Optional<Output<String>> invitationMessage() {
        return Optional.ofNullable(this.invitationMessage);
    }

    @Import(name="invite")
    private @Nullable Output<Boolean> invite;

    public Optional<Output<Boolean>> invite() {
        return Optional.ofNullable(this.invite);
    }

    @Import(name="invitedAt")
    private @Nullable Output<String> invitedAt;

    public Optional<Output<String>> invitedAt() {
        return Optional.ofNullable(this.invitedAt);
    }

    @Import(name="masterAccountId")
    private @Nullable Output<String> masterAccountId;

    public Optional<Output<String>> masterAccountId() {
        return Optional.ofNullable(this.masterAccountId);
    }

    @Import(name="relationshipStatus")
    private @Nullable Output<String> relationshipStatus;

    public Optional<Output<String>> relationshipStatus() {
        return Optional.ofNullable(this.relationshipStatus);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private MemberState() {}

    private MemberState(MemberState $) {
        this.accountId = $.accountId;
        this.administratorAccountId = $.administratorAccountId;
        this.arn = $.arn;
        this.email = $.email;
        this.invitationDisableEmailNotification = $.invitationDisableEmailNotification;
        this.invitationMessage = $.invitationMessage;
        this.invite = $.invite;
        this.invitedAt = $.invitedAt;
        this.masterAccountId = $.masterAccountId;
        this.relationshipStatus = $.relationshipStatus;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MemberState $;

        public Builder() {
            $ = new MemberState();
        }

        public Builder(MemberState defaults) {
            $ = new MemberState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder administratorAccountId(@Nullable Output<String> administratorAccountId) {
            $.administratorAccountId = administratorAccountId;
            return this;
        }

        public Builder administratorAccountId(String administratorAccountId) {
            return administratorAccountId(Output.of(administratorAccountId));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder invitationDisableEmailNotification(@Nullable Output<Boolean> invitationDisableEmailNotification) {
            $.invitationDisableEmailNotification = invitationDisableEmailNotification;
            return this;
        }

        public Builder invitationDisableEmailNotification(Boolean invitationDisableEmailNotification) {
            return invitationDisableEmailNotification(Output.of(invitationDisableEmailNotification));
        }

        public Builder invitationMessage(@Nullable Output<String> invitationMessage) {
            $.invitationMessage = invitationMessage;
            return this;
        }

        public Builder invitationMessage(String invitationMessage) {
            return invitationMessage(Output.of(invitationMessage));
        }

        public Builder invite(@Nullable Output<Boolean> invite) {
            $.invite = invite;
            return this;
        }

        public Builder invite(Boolean invite) {
            return invite(Output.of(invite));
        }

        public Builder invitedAt(@Nullable Output<String> invitedAt) {
            $.invitedAt = invitedAt;
            return this;
        }

        public Builder invitedAt(String invitedAt) {
            return invitedAt(Output.of(invitedAt));
        }

        public Builder masterAccountId(@Nullable Output<String> masterAccountId) {
            $.masterAccountId = masterAccountId;
            return this;
        }

        public Builder masterAccountId(String masterAccountId) {
            return masterAccountId(Output.of(masterAccountId));
        }

        public Builder relationshipStatus(@Nullable Output<String> relationshipStatus) {
            $.relationshipStatus = relationshipStatus;
            return this;
        }

        public Builder relationshipStatus(String relationshipStatus) {
            return relationshipStatus(Output.of(relationshipStatus));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public MemberState build() {
            return $;
        }
    }

}
