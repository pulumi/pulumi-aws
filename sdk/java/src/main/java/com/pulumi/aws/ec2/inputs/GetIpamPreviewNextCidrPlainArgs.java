// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpamPreviewNextCidrPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpamPreviewNextCidrPlainArgs Empty = new GetIpamPreviewNextCidrPlainArgs();

    @Import(name="disallowedCidrs")
    private @Nullable List<String> disallowedCidrs;

    public Optional<List<String>> disallowedCidrs() {
        return Optional.ofNullable(this.disallowedCidrs);
    }

    @Import(name="ipamPoolId", required=true)
    private String ipamPoolId;

    public String ipamPoolId() {
        return this.ipamPoolId;
    }

    @Import(name="netmaskLength")
    private @Nullable Integer netmaskLength;

    public Optional<Integer> netmaskLength() {
        return Optional.ofNullable(this.netmaskLength);
    }

    private GetIpamPreviewNextCidrPlainArgs() {}

    private GetIpamPreviewNextCidrPlainArgs(GetIpamPreviewNextCidrPlainArgs $) {
        this.disallowedCidrs = $.disallowedCidrs;
        this.ipamPoolId = $.ipamPoolId;
        this.netmaskLength = $.netmaskLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpamPreviewNextCidrPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpamPreviewNextCidrPlainArgs $;

        public Builder() {
            $ = new GetIpamPreviewNextCidrPlainArgs();
        }

        public Builder(GetIpamPreviewNextCidrPlainArgs defaults) {
            $ = new GetIpamPreviewNextCidrPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder disallowedCidrs(@Nullable List<String> disallowedCidrs) {
            $.disallowedCidrs = disallowedCidrs;
            return this;
        }

        public Builder disallowedCidrs(String... disallowedCidrs) {
            return disallowedCidrs(List.of(disallowedCidrs));
        }

        public Builder ipamPoolId(String ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        public Builder netmaskLength(@Nullable Integer netmaskLength) {
            $.netmaskLength = netmaskLength;
            return this;
        }

        public GetIpamPreviewNextCidrPlainArgs build() {
            $.ipamPoolId = Objects.requireNonNull($.ipamPoolId, "expected parameter 'ipamPoolId' to be non-null");
            return $;
        }
    }

}
