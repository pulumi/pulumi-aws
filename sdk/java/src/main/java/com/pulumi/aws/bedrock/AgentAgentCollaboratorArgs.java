// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.bedrock.inputs.AgentAgentCollaboratorAgentDescriptorArgs;
import com.pulumi.aws.bedrock.inputs.AgentAgentCollaboratorTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentAgentCollaboratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentAgentCollaboratorArgs Empty = new AgentAgentCollaboratorArgs();

    @Import(name="agentDescriptor")
    private @Nullable Output<AgentAgentCollaboratorAgentDescriptorArgs> agentDescriptor;

    public Optional<Output<AgentAgentCollaboratorAgentDescriptorArgs>> agentDescriptor() {
        return Optional.ofNullable(this.agentDescriptor);
    }

    /**
     * ID if the agent to associate the collaborator.
     * 
     */
    @Import(name="agentId", required=true)
    private Output<String> agentId;

    /**
     * @return ID if the agent to associate the collaborator.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }

    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * Instruction to give the collaborator.
     * 
     */
    @Import(name="collaborationInstruction", required=true)
    private Output<String> collaborationInstruction;

    /**
     * @return Instruction to give the collaborator.
     * 
     */
    public Output<String> collaborationInstruction() {
        return this.collaborationInstruction;
    }

    @Import(name="collaboratorName", required=true)
    private Output<String> collaboratorName;

    public Output<String> collaboratorName() {
        return this.collaboratorName;
    }

    /**
     * Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    @Import(name="prepareAgent")
    private @Nullable Output<Boolean> prepareAgent;

    /**
     * @return Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> prepareAgent() {
        return Optional.ofNullable(this.prepareAgent);
    }

    /**
     * Configure relaying the history to the collaborator.
     * 
     */
    @Import(name="relayConversationHistory")
    private @Nullable Output<String> relayConversationHistory;

    /**
     * @return Configure relaying the history to the collaborator.
     * 
     */
    public Optional<Output<String>> relayConversationHistory() {
        return Optional.ofNullable(this.relayConversationHistory);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentAgentCollaboratorTimeoutsArgs> timeouts;

    public Optional<Output<AgentAgentCollaboratorTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AgentAgentCollaboratorArgs() {}

    private AgentAgentCollaboratorArgs(AgentAgentCollaboratorArgs $) {
        this.agentDescriptor = $.agentDescriptor;
        this.agentId = $.agentId;
        this.agentVersion = $.agentVersion;
        this.collaborationInstruction = $.collaborationInstruction;
        this.collaboratorName = $.collaboratorName;
        this.prepareAgent = $.prepareAgent;
        this.relayConversationHistory = $.relayConversationHistory;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentAgentCollaboratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentAgentCollaboratorArgs $;

        public Builder() {
            $ = new AgentAgentCollaboratorArgs();
        }

        public Builder(AgentAgentCollaboratorArgs defaults) {
            $ = new AgentAgentCollaboratorArgs(Objects.requireNonNull(defaults));
        }

        public Builder agentDescriptor(@Nullable Output<AgentAgentCollaboratorAgentDescriptorArgs> agentDescriptor) {
            $.agentDescriptor = agentDescriptor;
            return this;
        }

        public Builder agentDescriptor(AgentAgentCollaboratorAgentDescriptorArgs agentDescriptor) {
            return agentDescriptor(Output.of(agentDescriptor));
        }

        /**
         * @param agentId ID if the agent to associate the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId ID if the agent to associate the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param collaborationInstruction Instruction to give the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaborationInstruction(Output<String> collaborationInstruction) {
            $.collaborationInstruction = collaborationInstruction;
            return this;
        }

        /**
         * @param collaborationInstruction Instruction to give the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaborationInstruction(String collaborationInstruction) {
            return collaborationInstruction(Output.of(collaborationInstruction));
        }

        public Builder collaboratorName(Output<String> collaboratorName) {
            $.collaboratorName = collaboratorName;
            return this;
        }

        public Builder collaboratorName(String collaboratorName) {
            return collaboratorName(Output.of(collaboratorName));
        }

        /**
         * @param prepareAgent Whether to prepare the agent after creation or modification. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder prepareAgent(@Nullable Output<Boolean> prepareAgent) {
            $.prepareAgent = prepareAgent;
            return this;
        }

        /**
         * @param prepareAgent Whether to prepare the agent after creation or modification. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder prepareAgent(Boolean prepareAgent) {
            return prepareAgent(Output.of(prepareAgent));
        }

        /**
         * @param relayConversationHistory Configure relaying the history to the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder relayConversationHistory(@Nullable Output<String> relayConversationHistory) {
            $.relayConversationHistory = relayConversationHistory;
            return this;
        }

        /**
         * @param relayConversationHistory Configure relaying the history to the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder relayConversationHistory(String relayConversationHistory) {
            return relayConversationHistory(Output.of(relayConversationHistory));
        }

        public Builder timeouts(@Nullable Output<AgentAgentCollaboratorTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentAgentCollaboratorTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AgentAgentCollaboratorArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("AgentAgentCollaboratorArgs", "agentId");
            }
            if ($.collaborationInstruction == null) {
                throw new MissingRequiredPropertyException("AgentAgentCollaboratorArgs", "collaborationInstruction");
            }
            if ($.collaboratorName == null) {
                throw new MissingRequiredPropertyException("AgentAgentCollaboratorArgs", "collaboratorName");
            }
            return $;
        }
    }

}
