// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub.outputs;

import com.pulumi.aws.securityhub.outputs.GetStandardsControlAssociationsStandardsControlAssociation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetStandardsControlAssociationsResult {
    private String id;
    /**
     * @return ID of the security control.
     * 
     */
    private String securityControlId;
    /**
     * @return A list that provides the status and other details for each security control that applies to each enabled standard.
     * See `standards_control_associations` below.
     * 
     */
    private @Nullable List<GetStandardsControlAssociationsStandardsControlAssociation> standardsControlAssociations;

    private GetStandardsControlAssociationsResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the security control.
     * 
     */
    public String securityControlId() {
        return this.securityControlId;
    }
    /**
     * @return A list that provides the status and other details for each security control that applies to each enabled standard.
     * See `standards_control_associations` below.
     * 
     */
    public List<GetStandardsControlAssociationsStandardsControlAssociation> standardsControlAssociations() {
        return this.standardsControlAssociations == null ? List.of() : this.standardsControlAssociations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStandardsControlAssociationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String securityControlId;
        private @Nullable List<GetStandardsControlAssociationsStandardsControlAssociation> standardsControlAssociations;
        public Builder() {}
        public Builder(GetStandardsControlAssociationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.securityControlId = defaults.securityControlId;
    	      this.standardsControlAssociations = defaults.standardsControlAssociations;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStandardsControlAssociationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder securityControlId(String securityControlId) {
            if (securityControlId == null) {
              throw new MissingRequiredPropertyException("GetStandardsControlAssociationsResult", "securityControlId");
            }
            this.securityControlId = securityControlId;
            return this;
        }
        @CustomType.Setter
        public Builder standardsControlAssociations(@Nullable List<GetStandardsControlAssociationsStandardsControlAssociation> standardsControlAssociations) {

            this.standardsControlAssociations = standardsControlAssociations;
            return this;
        }
        public Builder standardsControlAssociations(GetStandardsControlAssociationsStandardsControlAssociation... standardsControlAssociations) {
            return standardsControlAssociations(List.of(standardsControlAssociations));
        }
        public GetStandardsControlAssociationsResult build() {
            final var _resultValue = new GetStandardsControlAssociationsResult();
            _resultValue.id = id;
            _resultValue.securityControlId = securityControlId;
            _resultValue.standardsControlAssociations = standardsControlAssociations;
            return _resultValue;
        }
    }
}
