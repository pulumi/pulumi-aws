// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCredentialsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCredentialsPlainArgs Empty = new GetCredentialsPlainArgs();

    /**
     * The name of the database to get temporary authorization to log on to.
     * 
     */
    @Import(name="dbName")
    private @Nullable String dbName;

    /**
     * @return The name of the database to get temporary authorization to log on to.
     * 
     */
    public Optional<String> dbName() {
        return Optional.ofNullable(this.dbName);
    }

    /**
     * The number of seconds until the returned temporary password expires. The minimum is 900 seconds, and the maximum is 3600 seconds.
     * 
     */
    @Import(name="durationSeconds")
    private @Nullable Integer durationSeconds;

    /**
     * @return The number of seconds until the returned temporary password expires. The minimum is 900 seconds, and the maximum is 3600 seconds.
     * 
     */
    public Optional<Integer> durationSeconds() {
        return Optional.ofNullable(this.durationSeconds);
    }

    /**
     * The name of the workgroup associated with the database.
     * 
     */
    @Import(name="workgroupName", required=true)
    private String workgroupName;

    /**
     * @return The name of the workgroup associated with the database.
     * 
     */
    public String workgroupName() {
        return this.workgroupName;
    }

    private GetCredentialsPlainArgs() {}

    private GetCredentialsPlainArgs(GetCredentialsPlainArgs $) {
        this.dbName = $.dbName;
        this.durationSeconds = $.durationSeconds;
        this.workgroupName = $.workgroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCredentialsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCredentialsPlainArgs $;

        public Builder() {
            $ = new GetCredentialsPlainArgs();
        }

        public Builder(GetCredentialsPlainArgs defaults) {
            $ = new GetCredentialsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbName The name of the database to get temporary authorization to log on to.
         * 
         * @return builder
         * 
         */
        public Builder dbName(@Nullable String dbName) {
            $.dbName = dbName;
            return this;
        }

        /**
         * @param durationSeconds The number of seconds until the returned temporary password expires. The minimum is 900 seconds, and the maximum is 3600 seconds.
         * 
         * @return builder
         * 
         */
        public Builder durationSeconds(@Nullable Integer durationSeconds) {
            $.durationSeconds = durationSeconds;
            return this;
        }

        /**
         * @param workgroupName The name of the workgroup associated with the database.
         * 
         * @return builder
         * 
         */
        public Builder workgroupName(String workgroupName) {
            $.workgroupName = workgroupName;
            return this;
        }

        public GetCredentialsPlainArgs build() {
            $.workgroupName = Objects.requireNonNull($.workgroupName, "expected parameter 'workgroupName' to be non-null");
            return $;
        }
    }

}
