// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContactsRotationRecurrence {
    private List<Object> dailySettings;
    private List<Object> monthlySettings;
    private Integer numberOfOnCalls;
    private Integer recurrenceMultiplier;
    private List<Object> shiftCoverages;
    private List<Object> weeklySettings;

    private GetContactsRotationRecurrence() {}
    public List<Object> dailySettings() {
        return this.dailySettings;
    }
    public List<Object> monthlySettings() {
        return this.monthlySettings;
    }
    public Integer numberOfOnCalls() {
        return this.numberOfOnCalls;
    }
    public Integer recurrenceMultiplier() {
        return this.recurrenceMultiplier;
    }
    public List<Object> shiftCoverages() {
        return this.shiftCoverages;
    }
    public List<Object> weeklySettings() {
        return this.weeklySettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactsRotationRecurrence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Object> dailySettings;
        private List<Object> monthlySettings;
        private Integer numberOfOnCalls;
        private Integer recurrenceMultiplier;
        private List<Object> shiftCoverages;
        private List<Object> weeklySettings;
        public Builder() {}
        public Builder(GetContactsRotationRecurrence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dailySettings = defaults.dailySettings;
    	      this.monthlySettings = defaults.monthlySettings;
    	      this.numberOfOnCalls = defaults.numberOfOnCalls;
    	      this.recurrenceMultiplier = defaults.recurrenceMultiplier;
    	      this.shiftCoverages = defaults.shiftCoverages;
    	      this.weeklySettings = defaults.weeklySettings;
        }

        @CustomType.Setter
        public Builder dailySettings(List<Object> dailySettings) {
            if (dailySettings == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "dailySettings");
            }
            this.dailySettings = dailySettings;
            return this;
        }
        public Builder dailySettings(Object... dailySettings) {
            return dailySettings(List.of(dailySettings));
        }
        @CustomType.Setter
        public Builder monthlySettings(List<Object> monthlySettings) {
            if (monthlySettings == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "monthlySettings");
            }
            this.monthlySettings = monthlySettings;
            return this;
        }
        public Builder monthlySettings(Object... monthlySettings) {
            return monthlySettings(List.of(monthlySettings));
        }
        @CustomType.Setter
        public Builder numberOfOnCalls(Integer numberOfOnCalls) {
            if (numberOfOnCalls == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "numberOfOnCalls");
            }
            this.numberOfOnCalls = numberOfOnCalls;
            return this;
        }
        @CustomType.Setter
        public Builder recurrenceMultiplier(Integer recurrenceMultiplier) {
            if (recurrenceMultiplier == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "recurrenceMultiplier");
            }
            this.recurrenceMultiplier = recurrenceMultiplier;
            return this;
        }
        @CustomType.Setter
        public Builder shiftCoverages(List<Object> shiftCoverages) {
            if (shiftCoverages == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "shiftCoverages");
            }
            this.shiftCoverages = shiftCoverages;
            return this;
        }
        public Builder shiftCoverages(Object... shiftCoverages) {
            return shiftCoverages(List.of(shiftCoverages));
        }
        @CustomType.Setter
        public Builder weeklySettings(List<Object> weeklySettings) {
            if (weeklySettings == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrence", "weeklySettings");
            }
            this.weeklySettings = weeklySettings;
            return this;
        }
        public Builder weeklySettings(Object... weeklySettings) {
            return weeklySettings(List.of(weeklySettings));
        }
        public GetContactsRotationRecurrence build() {
            final var _resultValue = new GetContactsRotationRecurrence();
            _resultValue.dailySettings = dailySettings;
            _resultValue.monthlySettings = monthlySettings;
            _resultValue.numberOfOnCalls = numberOfOnCalls;
            _resultValue.recurrenceMultiplier = recurrenceMultiplier;
            _resultValue.shiftCoverages = shiftCoverages;
            _resultValue.weeklySettings = weeklySettings;
            return _resultValue;
        }
    }
}
