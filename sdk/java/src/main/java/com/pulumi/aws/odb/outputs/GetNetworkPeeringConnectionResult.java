// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkPeeringConnectionResult {
    /**
     * @return The Amazon Resource Name (ARN) for the Exadata infrastructure.
     * 
     */
    private String arn;
    /**
     * @return Created time of the ODB network peering connection.
     * 
     */
    private String createdAt;
    /**
     * @return Display name of the ODB network peering connection.
     * 
     */
    private String displayName;
    private String id;
    /**
     * @return ARN of the ODB network peering connection.
     * 
     */
    private String odbNetworkArn;
    /**
     * @return Type of the ODB peering connection.
     * 
     */
    private String odbPeeringConnectionType;
    /**
     * @return ARN of the peer network peering connection.
     * 
     */
    private String peerNetworkArn;
    /**
     * @return Progress of the ODB network peering connection.
     * 
     */
    private Double percentProgress;
    private String region;
    /**
     * @return Status of the ODB network peering connection.
     * 
     */
    private String status;
    /**
     * @return Status of the ODB network peering connection.
     * 
     */
    private String statusReason;
    /**
     * @return Tags applied to the resource.
     * 
     */
    private Map<String,String> tags;

    private GetNetworkPeeringConnectionResult() {}
    /**
     * @return The Amazon Resource Name (ARN) for the Exadata infrastructure.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Created time of the ODB network peering connection.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Display name of the ODB network peering connection.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return ARN of the ODB network peering connection.
     * 
     */
    public String odbNetworkArn() {
        return this.odbNetworkArn;
    }
    /**
     * @return Type of the ODB peering connection.
     * 
     */
    public String odbPeeringConnectionType() {
        return this.odbPeeringConnectionType;
    }
    /**
     * @return ARN of the peer network peering connection.
     * 
     */
    public String peerNetworkArn() {
        return this.peerNetworkArn;
    }
    /**
     * @return Progress of the ODB network peering connection.
     * 
     */
    public Double percentProgress() {
        return this.percentProgress;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return Status of the ODB network peering connection.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Status of the ODB network peering connection.
     * 
     */
    public String statusReason() {
        return this.statusReason;
    }
    /**
     * @return Tags applied to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkPeeringConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String createdAt;
        private String displayName;
        private String id;
        private String odbNetworkArn;
        private String odbPeeringConnectionType;
        private String peerNetworkArn;
        private Double percentProgress;
        private String region;
        private String status;
        private String statusReason;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetNetworkPeeringConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.odbNetworkArn = defaults.odbNetworkArn;
    	      this.odbPeeringConnectionType = defaults.odbPeeringConnectionType;
    	      this.peerNetworkArn = defaults.peerNetworkArn;
    	      this.percentProgress = defaults.percentProgress;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.statusReason = defaults.statusReason;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder odbNetworkArn(String odbNetworkArn) {
            if (odbNetworkArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "odbNetworkArn");
            }
            this.odbNetworkArn = odbNetworkArn;
            return this;
        }
        @CustomType.Setter
        public Builder odbPeeringConnectionType(String odbPeeringConnectionType) {
            if (odbPeeringConnectionType == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "odbPeeringConnectionType");
            }
            this.odbPeeringConnectionType = odbPeeringConnectionType;
            return this;
        }
        @CustomType.Setter
        public Builder peerNetworkArn(String peerNetworkArn) {
            if (peerNetworkArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "peerNetworkArn");
            }
            this.peerNetworkArn = peerNetworkArn;
            return this;
        }
        @CustomType.Setter
        public Builder percentProgress(Double percentProgress) {
            if (percentProgress == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "percentProgress");
            }
            this.percentProgress = percentProgress;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusReason(String statusReason) {
            if (statusReason == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "statusReason");
            }
            this.statusReason = statusReason;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetNetworkPeeringConnectionResult build() {
            final var _resultValue = new GetNetworkPeeringConnectionResult();
            _resultValue.arn = arn;
            _resultValue.createdAt = createdAt;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.odbNetworkArn = odbNetworkArn;
            _resultValue.odbPeeringConnectionType = odbPeeringConnectionType;
            _resultValue.peerNetworkArn = peerNetworkArn;
            _resultValue.percentProgress = percentProgress;
            _resultValue.region = region;
            _resultValue.status = status;
            _resultValue.statusReason = statusReason;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
