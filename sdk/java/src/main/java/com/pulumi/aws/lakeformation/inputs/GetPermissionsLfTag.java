// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetPermissionsLfTag extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionsLfTag Empty = new GetPermissionsLfTag();

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @Import(name="catalogId", required=true)
    private String catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    public String catalogId() {
        return this.catalogId;
    }

    /**
     * Key-name for the tag.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return Key-name for the tag.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * List of possible values an attribute can take.
     * 
     * The following argument is optional:
     * 
     */
    @Import(name="values", required=true)
    private List<String> values;

    /**
     * @return List of possible values an attribute can take.
     * 
     * The following argument is optional:
     * 
     */
    public List<String> values() {
        return this.values;
    }

    private GetPermissionsLfTag() {}

    private GetPermissionsLfTag(GetPermissionsLfTag $) {
        this.catalogId = $.catalogId;
        this.key = $.key;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionsLfTag defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionsLfTag $;

        public Builder() {
            $ = new GetPermissionsLfTag();
        }

        public Builder(GetPermissionsLfTag defaults) {
            $ = new GetPermissionsLfTag(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param key Key-name for the tag.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param values List of possible values an attribute can take.
         * 
         * The following argument is optional:
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values List of possible values an attribute can take.
         * 
         * The following argument is optional:
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetPermissionsLfTag build() {
            $.catalogId = Objects.requireNonNull($.catalogId, "expected parameter 'catalogId' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
