// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.memorydb.outputs;

import com.pulumi.aws.memorydb.outputs.GetUserAuthenticationMode;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserResult {
    /**
     * @return Access permissions string used for this user.
     * 
     */
    private @Nullable String accessString;
    /**
     * @return ARN of the user.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Denotes the user&#39;s authentication properties.
     * 
     */
    private @Nullable List<GetUserAuthenticationMode> authenticationModes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The minimum engine version supported for the user.
     * 
     */
    private @Nullable String minimumEngineVersion;
    /**
     * @return Map of tags assigned to the subnet group.
     * 
     */
    private @Nullable Map<String,String> tags;
    private String userName;

    private GetUserResult() {}
    /**
     * @return Access permissions string used for this user.
     * 
     */
    public Optional<String> accessString() {
        return Optional.ofNullable(this.accessString);
    }
    /**
     * @return ARN of the user.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Denotes the user&#39;s authentication properties.
     * 
     */
    public List<GetUserAuthenticationMode> authenticationModes() {
        return this.authenticationModes == null ? List.of() : this.authenticationModes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The minimum engine version supported for the user.
     * 
     */
    public Optional<String> minimumEngineVersion() {
        return Optional.ofNullable(this.minimumEngineVersion);
    }
    /**
     * @return Map of tags assigned to the subnet group.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessString;
        private @Nullable String arn;
        private @Nullable List<GetUserAuthenticationMode> authenticationModes;
        private @Nullable String id;
        private @Nullable String minimumEngineVersion;
        private @Nullable Map<String,String> tags;
        private String userName;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessString = defaults.accessString;
    	      this.arn = defaults.arn;
    	      this.authenticationModes = defaults.authenticationModes;
    	      this.id = defaults.id;
    	      this.minimumEngineVersion = defaults.minimumEngineVersion;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder accessString(@Nullable String accessString) {
            this.accessString = accessString;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationModes(@Nullable List<GetUserAuthenticationMode> authenticationModes) {
            this.authenticationModes = authenticationModes;
            return this;
        }
        public Builder authenticationModes(GetUserAuthenticationMode... authenticationModes) {
            return authenticationModes(List.of(authenticationModes));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder minimumEngineVersion(@Nullable String minimumEngineVersion) {
            this.minimumEngineVersion = minimumEngineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public GetUserResult build() {
            final var o = new GetUserResult();
            o.accessString = accessString;
            o.arn = arn;
            o.authenticationModes = authenticationModes;
            o.id = id;
            o.minimumEngineVersion = minimumEngineVersion;
            o.tags = tags;
            o.userName = userName;
            return o;
        }
    }
}
