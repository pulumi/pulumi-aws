// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketMetricFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketMetricArgs Empty = new BucketMetricArgs();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="filter")
    private @Nullable Output<BucketMetricFilterArgs> filter;

    public Optional<Output<BucketMetricFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private BucketMetricArgs() {}

    private BucketMetricArgs(BucketMetricArgs $) {
        this.bucket = $.bucket;
        this.filter = $.filter;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetricArgs $;

        public Builder() {
            $ = new BucketMetricArgs();
        }

        public Builder(BucketMetricArgs defaults) {
            $ = new BucketMetricArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder filter(@Nullable Output<BucketMetricFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(BucketMetricFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public BucketMetricArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
