// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.outputs;

import com.pulumi.aws.appconfig.outputs.ExtensionActionPointAction;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ExtensionActionPoint {
    /**
     * @return An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
     * 
     */
    private List<ExtensionActionPointAction> actions;
    /**
     * @return The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.
     * 
     */
    private String point;

    private ExtensionActionPoint() {}
    /**
     * @return An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
     * 
     */
    public List<ExtensionActionPointAction> actions() {
        return this.actions;
    }
    /**
     * @return The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.
     * 
     */
    public String point() {
        return this.point;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExtensionActionPoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ExtensionActionPointAction> actions;
        private String point;
        public Builder() {}
        public Builder(ExtensionActionPoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.point = defaults.point;
        }

        @CustomType.Setter
        public Builder actions(List<ExtensionActionPointAction> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(ExtensionActionPointAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder point(String point) {
            this.point = Objects.requireNonNull(point);
            return this;
        }
        public ExtensionActionPoint build() {
            final var o = new ExtensionActionPoint();
            o.actions = actions;
            o.point = point;
            return o;
        }
    }
}
