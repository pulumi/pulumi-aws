// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointConnectionAccepterArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointConnectionAccepterArgs Empty = new VpcEndpointConnectionAccepterArgs();

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * AWS VPC Endpoint ID.
     * 
     */
    @Import(name="vpcEndpointId", required=true)
    private Output<String> vpcEndpointId;

    /**
     * @return AWS VPC Endpoint ID.
     * 
     */
    public Output<String> vpcEndpointId() {
        return this.vpcEndpointId;
    }

    /**
     * AWS VPC Endpoint Service ID.
     * 
     */
    @Import(name="vpcEndpointServiceId", required=true)
    private Output<String> vpcEndpointServiceId;

    /**
     * @return AWS VPC Endpoint Service ID.
     * 
     */
    public Output<String> vpcEndpointServiceId() {
        return this.vpcEndpointServiceId;
    }

    private VpcEndpointConnectionAccepterArgs() {}

    private VpcEndpointConnectionAccepterArgs(VpcEndpointConnectionAccepterArgs $) {
        this.region = $.region;
        this.vpcEndpointId = $.vpcEndpointId;
        this.vpcEndpointServiceId = $.vpcEndpointServiceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointConnectionAccepterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointConnectionAccepterArgs $;

        public Builder() {
            $ = new VpcEndpointConnectionAccepterArgs();
        }

        public Builder(VpcEndpointConnectionAccepterArgs defaults) {
            $ = new VpcEndpointConnectionAccepterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param vpcEndpointId AWS VPC Endpoint ID.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointId(Output<String> vpcEndpointId) {
            $.vpcEndpointId = vpcEndpointId;
            return this;
        }

        /**
         * @param vpcEndpointId AWS VPC Endpoint ID.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointId(String vpcEndpointId) {
            return vpcEndpointId(Output.of(vpcEndpointId));
        }

        /**
         * @param vpcEndpointServiceId AWS VPC Endpoint Service ID.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceId(Output<String> vpcEndpointServiceId) {
            $.vpcEndpointServiceId = vpcEndpointServiceId;
            return this;
        }

        /**
         * @param vpcEndpointServiceId AWS VPC Endpoint Service ID.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceId(String vpcEndpointServiceId) {
            return vpcEndpointServiceId(Output.of(vpcEndpointServiceId));
        }

        public VpcEndpointConnectionAccepterArgs build() {
            if ($.vpcEndpointId == null) {
                throw new MissingRequiredPropertyException("VpcEndpointConnectionAccepterArgs", "vpcEndpointId");
            }
            if ($.vpcEndpointServiceId == null) {
                throw new MissingRequiredPropertyException("VpcEndpointConnectionAccepterArgs", "vpcEndpointServiceId");
            }
            return $;
        }
    }

}
