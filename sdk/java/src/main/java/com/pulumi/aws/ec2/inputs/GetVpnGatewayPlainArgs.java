// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetVpnGatewayFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpnGatewayPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpnGatewayPlainArgs Empty = new GetVpnGatewayPlainArgs();

    @Import(name="amazonSideAsn")
    private @Nullable String amazonSideAsn;

    public Optional<String> amazonSideAsn() {
        return Optional.ofNullable(this.amazonSideAsn);
    }

    @Import(name="attachedVpcId")
    private @Nullable String attachedVpcId;

    public Optional<String> attachedVpcId() {
        return Optional.ofNullable(this.attachedVpcId);
    }

    @Import(name="availabilityZone")
    private @Nullable String availabilityZone;

    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="filters")
    private @Nullable List<GetVpnGatewayFilter> filters;

    public Optional<List<GetVpnGatewayFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetVpnGatewayPlainArgs() {}

    private GetVpnGatewayPlainArgs(GetVpnGatewayPlainArgs $) {
        this.amazonSideAsn = $.amazonSideAsn;
        this.attachedVpcId = $.attachedVpcId;
        this.availabilityZone = $.availabilityZone;
        this.filters = $.filters;
        this.id = $.id;
        this.state = $.state;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpnGatewayPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpnGatewayPlainArgs $;

        public Builder() {
            $ = new GetVpnGatewayPlainArgs();
        }

        public Builder(GetVpnGatewayPlainArgs defaults) {
            $ = new GetVpnGatewayPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder amazonSideAsn(@Nullable String amazonSideAsn) {
            $.amazonSideAsn = amazonSideAsn;
            return this;
        }

        public Builder attachedVpcId(@Nullable String attachedVpcId) {
            $.attachedVpcId = attachedVpcId;
            return this;
        }

        public Builder availabilityZone(@Nullable String availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder filters(@Nullable List<GetVpnGatewayFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVpnGatewayFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetVpnGatewayPlainArgs build() {
            return $;
        }
    }

}
