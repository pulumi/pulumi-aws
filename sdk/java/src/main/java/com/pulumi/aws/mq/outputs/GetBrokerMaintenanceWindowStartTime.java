// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBrokerMaintenanceWindowStartTime {
    private String dayOfWeek;
    private String timeOfDay;
    private String timeZone;

    private GetBrokerMaintenanceWindowStartTime() {}
    public String dayOfWeek() {
        return this.dayOfWeek;
    }
    public String timeOfDay() {
        return this.timeOfDay;
    }
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerMaintenanceWindowStartTime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dayOfWeek;
        private String timeOfDay;
        private String timeZone;
        public Builder() {}
        public Builder(GetBrokerMaintenanceWindowStartTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.timeOfDay = defaults.timeOfDay;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder dayOfWeek(String dayOfWeek) {
            if (dayOfWeek == null) {
              throw new MissingRequiredPropertyException("GetBrokerMaintenanceWindowStartTime", "dayOfWeek");
            }
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDay(String timeOfDay) {
            if (timeOfDay == null) {
              throw new MissingRequiredPropertyException("GetBrokerMaintenanceWindowStartTime", "timeOfDay");
            }
            this.timeOfDay = timeOfDay;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetBrokerMaintenanceWindowStartTime", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        public GetBrokerMaintenanceWindowStartTime build() {
            final var _resultValue = new GetBrokerMaintenanceWindowStartTime();
            _resultValue.dayOfWeek = dayOfWeek;
            _resultValue.timeOfDay = timeOfDay;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
