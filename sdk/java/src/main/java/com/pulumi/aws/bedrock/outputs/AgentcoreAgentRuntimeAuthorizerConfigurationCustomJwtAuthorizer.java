// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer {
    /**
     * @return Set of allowed audience values for JWT token validation.
     * 
     */
    private @Nullable List<String> allowedAudiences;
    /**
     * @return Set of allowed client IDs for JWT token validation.
     * 
     */
    private @Nullable List<String> allowedClients;
    /**
     * @return URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
     * 
     */
    private String discoveryUrl;

    private AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer() {}
    /**
     * @return Set of allowed audience values for JWT token validation.
     * 
     */
    public List<String> allowedAudiences() {
        return this.allowedAudiences == null ? List.of() : this.allowedAudiences;
    }
    /**
     * @return Set of allowed client IDs for JWT token validation.
     * 
     */
    public List<String> allowedClients() {
        return this.allowedClients == null ? List.of() : this.allowedClients;
    }
    /**
     * @return URL used to fetch OpenID Connect configuration or authorization server metadata. Must end with `.well-known/openid-configuration`.
     * 
     */
    public String discoveryUrl() {
        return this.discoveryUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedAudiences;
        private @Nullable List<String> allowedClients;
        private String discoveryUrl;
        public Builder() {}
        public Builder(AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedAudiences = defaults.allowedAudiences;
    	      this.allowedClients = defaults.allowedClients;
    	      this.discoveryUrl = defaults.discoveryUrl;
        }

        @CustomType.Setter
        public Builder allowedAudiences(@Nullable List<String> allowedAudiences) {

            this.allowedAudiences = allowedAudiences;
            return this;
        }
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }
        @CustomType.Setter
        public Builder allowedClients(@Nullable List<String> allowedClients) {

            this.allowedClients = allowedClients;
            return this;
        }
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }
        @CustomType.Setter
        public Builder discoveryUrl(String discoveryUrl) {
            if (discoveryUrl == null) {
              throw new MissingRequiredPropertyException("AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer", "discoveryUrl");
            }
            this.discoveryUrl = discoveryUrl;
            return this;
        }
        public AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer build() {
            final var _resultValue = new AgentcoreAgentRuntimeAuthorizerConfigurationCustomJwtAuthorizer();
            _resultValue.allowedAudiences = allowedAudiences;
            _resultValue.allowedClients = allowedClients;
            _resultValue.discoveryUrl = discoveryUrl;
            return _resultValue;
        }
    }
}
