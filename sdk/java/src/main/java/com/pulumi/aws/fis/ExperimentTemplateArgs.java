// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fis;

import com.pulumi.aws.fis.inputs.ExperimentTemplateActionArgs;
import com.pulumi.aws.fis.inputs.ExperimentTemplateStopConditionArgs;
import com.pulumi.aws.fis.inputs.ExperimentTemplateTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentTemplateArgs Empty = new ExperimentTemplateArgs();

    @Import(name="actions", required=true)
    private Output<List<ExperimentTemplateActionArgs>> actions;

    public Output<List<ExperimentTemplateActionArgs>> actions() {
        return this.actions;
    }

    @Import(name="description", required=true)
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="stopConditions", required=true)
    private Output<List<ExperimentTemplateStopConditionArgs>> stopConditions;

    public Output<List<ExperimentTemplateStopConditionArgs>> stopConditions() {
        return this.stopConditions;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targets")
    private @Nullable Output<List<ExperimentTemplateTargetArgs>> targets;

    public Optional<Output<List<ExperimentTemplateTargetArgs>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private ExperimentTemplateArgs() {}

    private ExperimentTemplateArgs(ExperimentTemplateArgs $) {
        this.actions = $.actions;
        this.description = $.description;
        this.roleArn = $.roleArn;
        this.stopConditions = $.stopConditions;
        this.tags = $.tags;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentTemplateArgs $;

        public Builder() {
            $ = new ExperimentTemplateArgs();
        }

        public Builder(ExperimentTemplateArgs defaults) {
            $ = new ExperimentTemplateArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(Output<List<ExperimentTemplateActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<ExperimentTemplateActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(ExperimentTemplateActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder stopConditions(Output<List<ExperimentTemplateStopConditionArgs>> stopConditions) {
            $.stopConditions = stopConditions;
            return this;
        }

        public Builder stopConditions(List<ExperimentTemplateStopConditionArgs> stopConditions) {
            return stopConditions(Output.of(stopConditions));
        }

        public Builder stopConditions(ExperimentTemplateStopConditionArgs... stopConditions) {
            return stopConditions(List.of(stopConditions));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targets(@Nullable Output<List<ExperimentTemplateTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        public Builder targets(List<ExperimentTemplateTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        public Builder targets(ExperimentTemplateTargetArgs... targets) {
            return targets(List.of(targets));
        }

        public ExperimentTemplateArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.stopConditions = Objects.requireNonNull($.stopConditions, "expected parameter 'stopConditions' to be non-null");
            return $;
        }
    }

}
