// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ram.outputs;

import com.pulumi.aws.ram.outputs.GetResourceShareFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourceShareResult {
    /**
     * @return ARN of the resource share.
     * 
     */
    private String arn;
    private @Nullable List<GetResourceShareFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return ID of the AWS account that owns the resource share.
     * 
     */
    private String owningAccountId;
    /**
     * @return A list of resource ARNs associated with the resource share.
     * 
     */
    private List<String> resourceArns;
    private String resourceOwner;
    private @Nullable String resourceShareStatus;
    /**
     * @return Status of the resource share.
     * 
     */
    private String status;
    /**
     * @return Tags attached to the resource share.
     * 
     */
    private Map<String,String> tags;

    private GetResourceShareResult() {}
    /**
     * @return ARN of the resource share.
     * 
     */
    public String arn() {
        return this.arn;
    }
    public List<GetResourceShareFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return ID of the AWS account that owns the resource share.
     * 
     */
    public String owningAccountId() {
        return this.owningAccountId;
    }
    /**
     * @return A list of resource ARNs associated with the resource share.
     * 
     */
    public List<String> resourceArns() {
        return this.resourceArns;
    }
    public String resourceOwner() {
        return this.resourceOwner;
    }
    public Optional<String> resourceShareStatus() {
        return Optional.ofNullable(this.resourceShareStatus);
    }
    /**
     * @return Status of the resource share.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Tags attached to the resource share.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceShareResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private @Nullable List<GetResourceShareFilter> filters;
        private String id;
        private String name;
        private String owningAccountId;
        private List<String> resourceArns;
        private String resourceOwner;
        private @Nullable String resourceShareStatus;
        private String status;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetResourceShareResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.owningAccountId = defaults.owningAccountId;
    	      this.resourceArns = defaults.resourceArns;
    	      this.resourceOwner = defaults.resourceOwner;
    	      this.resourceShareStatus = defaults.resourceShareStatus;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetResourceShareFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetResourceShareFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owningAccountId(String owningAccountId) {
            if (owningAccountId == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "owningAccountId");
            }
            this.owningAccountId = owningAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceArns(List<String> resourceArns) {
            if (resourceArns == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "resourceArns");
            }
            this.resourceArns = resourceArns;
            return this;
        }
        public Builder resourceArns(String... resourceArns) {
            return resourceArns(List.of(resourceArns));
        }
        @CustomType.Setter
        public Builder resourceOwner(String resourceOwner) {
            if (resourceOwner == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "resourceOwner");
            }
            this.resourceOwner = resourceOwner;
            return this;
        }
        @CustomType.Setter
        public Builder resourceShareStatus(@Nullable String resourceShareStatus) {

            this.resourceShareStatus = resourceShareStatus;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetResourceShareResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetResourceShareResult build() {
            final var _resultValue = new GetResourceShareResult();
            _resultValue.arn = arn;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.owningAccountId = owningAccountId;
            _resultValue.resourceArns = resourceArns;
            _resultValue.resourceOwner = resourceOwner;
            _resultValue.resourceShareStatus = resourceShareStatus;
            _resultValue.status = status;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
