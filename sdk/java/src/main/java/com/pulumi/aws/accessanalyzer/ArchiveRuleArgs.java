// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.accessanalyzer;

import com.pulumi.aws.accessanalyzer.inputs.ArchiveRuleFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ArchiveRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ArchiveRuleArgs Empty = new ArchiveRuleArgs();

    /**
     * Analyzer name.
     * 
     */
    @Import(name="analyzerName", required=true)
    private Output<String> analyzerName;

    /**
     * @return Analyzer name.
     * 
     */
    public Output<String> analyzerName() {
        return this.analyzerName;
    }

    /**
     * Filter criteria for the archive rule. See Filter for more details.
     * 
     */
    @Import(name="filters", required=true)
    private Output<List<ArchiveRuleFilterArgs>> filters;

    /**
     * @return Filter criteria for the archive rule. See Filter for more details.
     * 
     */
    public Output<List<ArchiveRuleFilterArgs>> filters() {
        return this.filters;
    }

    /**
     * Rule name.
     * 
     */
    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    /**
     * @return Rule name.
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }

    private ArchiveRuleArgs() {}

    private ArchiveRuleArgs(ArchiveRuleArgs $) {
        this.analyzerName = $.analyzerName;
        this.filters = $.filters;
        this.ruleName = $.ruleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArchiveRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArchiveRuleArgs $;

        public Builder() {
            $ = new ArchiveRuleArgs();
        }

        public Builder(ArchiveRuleArgs defaults) {
            $ = new ArchiveRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analyzerName Analyzer name.
         * 
         * @return builder
         * 
         */
        public Builder analyzerName(Output<String> analyzerName) {
            $.analyzerName = analyzerName;
            return this;
        }

        /**
         * @param analyzerName Analyzer name.
         * 
         * @return builder
         * 
         */
        public Builder analyzerName(String analyzerName) {
            return analyzerName(Output.of(analyzerName));
        }

        /**
         * @param filters Filter criteria for the archive rule. See Filter for more details.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output<List<ArchiveRuleFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Filter criteria for the archive rule. See Filter for more details.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<ArchiveRuleFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Filter criteria for the archive rule. See Filter for more details.
         * 
         * @return builder
         * 
         */
        public Builder filters(ArchiveRuleFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param ruleName Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public ArchiveRuleArgs build() {
            if ($.analyzerName == null) {
                throw new MissingRequiredPropertyException("ArchiveRuleArgs", "analyzerName");
            }
            if ($.filters == null) {
                throw new MissingRequiredPropertyException("ArchiveRuleArgs", "filters");
            }
            if ($.ruleName == null) {
                throw new MissingRequiredPropertyException("ArchiveRuleArgs", "ruleName");
            }
            return $;
        }
    }

}
