// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.Subtitle;
import com.pulumi.aws.quicksight.outputs.VisualCustomActions;
import com.pulumi.aws.quicksight.outputs.VisualsGaugeChartVisualChartConfiguration;
import com.pulumi.aws.quicksight.outputs.VisualsGaugeChartVisualConditionalFormatting;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsGaugeChartVisual {
    /**
     * @return List of IAM actions to grant or revoke permissions on.
     * 
     */
    private @Nullable List<VisualCustomActions> actions;
    private @Nullable VisualsGaugeChartVisualChartConfiguration chartConfiguration;
    private @Nullable VisualsGaugeChartVisualConditionalFormatting conditionalFormatting;
    private @Nullable Subtitle subtitle;
    private @Nullable Subtitle title;
    private String visualId;

    private VisualsGaugeChartVisual() {}
    /**
     * @return List of IAM actions to grant or revoke permissions on.
     * 
     */
    public List<VisualCustomActions> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    public Optional<VisualsGaugeChartVisualChartConfiguration> chartConfiguration() {
        return Optional.ofNullable(this.chartConfiguration);
    }
    public Optional<VisualsGaugeChartVisualConditionalFormatting> conditionalFormatting() {
        return Optional.ofNullable(this.conditionalFormatting);
    }
    public Optional<Subtitle> subtitle() {
        return Optional.ofNullable(this.subtitle);
    }
    public Optional<Subtitle> title() {
        return Optional.ofNullable(this.title);
    }
    public String visualId() {
        return this.visualId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsGaugeChartVisual defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<VisualCustomActions> actions;
        private @Nullable VisualsGaugeChartVisualChartConfiguration chartConfiguration;
        private @Nullable VisualsGaugeChartVisualConditionalFormatting conditionalFormatting;
        private @Nullable Subtitle subtitle;
        private @Nullable Subtitle title;
        private String visualId;
        public Builder() {}
        public Builder(VisualsGaugeChartVisual defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.chartConfiguration = defaults.chartConfiguration;
    	      this.conditionalFormatting = defaults.conditionalFormatting;
    	      this.subtitle = defaults.subtitle;
    	      this.title = defaults.title;
    	      this.visualId = defaults.visualId;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<VisualCustomActions> actions) {

            this.actions = actions;
            return this;
        }
        public Builder actions(VisualCustomActions... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder chartConfiguration(@Nullable VisualsGaugeChartVisualChartConfiguration chartConfiguration) {

            this.chartConfiguration = chartConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder conditionalFormatting(@Nullable VisualsGaugeChartVisualConditionalFormatting conditionalFormatting) {

            this.conditionalFormatting = conditionalFormatting;
            return this;
        }
        @CustomType.Setter
        public Builder subtitle(@Nullable Subtitle subtitle) {

            this.subtitle = subtitle;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable Subtitle title) {

            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder visualId(String visualId) {
            if (visualId == null) {
              throw new MissingRequiredPropertyException("VisualsGaugeChartVisual", "visualId");
            }
            this.visualId = visualId;
            return this;
        }
        public VisualsGaugeChartVisual build() {
            final var _resultValue = new VisualsGaugeChartVisual();
            _resultValue.actions = actions;
            _resultValue.chartConfiguration = chartConfiguration;
            _resultValue.conditionalFormatting = conditionalFormatting;
            _resultValue.subtitle = subtitle;
            _resultValue.title = title;
            _resultValue.visualId = visualId;
            return _resultValue;
        }
    }
}
