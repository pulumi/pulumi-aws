// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainAdvancedSecurityOptionsMasterUserOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainAdvancedSecurityOptionsMasterUserOptionsArgs Empty = new DomainAdvancedSecurityOptionsMasterUserOptionsArgs();

    /**
     * ARN for the main user. Only specify if `internal_user_database_enabled` is not set or set to `false`.
     * 
     */
    @Import(name="masterUserArn")
    private @Nullable Output<String> masterUserArn;

    /**
     * @return ARN for the main user. Only specify if `internal_user_database_enabled` is not set or set to `false`.
     * 
     */
    public Optional<Output<String>> masterUserArn() {
        return Optional.ofNullable(this.masterUserArn);
    }

    /**
     * Main user&#39;s username, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
     * 
     */
    @Import(name="masterUserName")
    private @Nullable Output<String> masterUserName;

    /**
     * @return Main user&#39;s username, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
     * 
     */
    public Optional<Output<String>> masterUserName() {
        return Optional.ofNullable(this.masterUserName);
    }

    /**
     * Main user&#39;s password, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
     * 
     */
    @Import(name="masterUserPassword")
    private @Nullable Output<String> masterUserPassword;

    /**
     * @return Main user&#39;s password, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
     * 
     */
    public Optional<Output<String>> masterUserPassword() {
        return Optional.ofNullable(this.masterUserPassword);
    }

    private DomainAdvancedSecurityOptionsMasterUserOptionsArgs() {}

    private DomainAdvancedSecurityOptionsMasterUserOptionsArgs(DomainAdvancedSecurityOptionsMasterUserOptionsArgs $) {
        this.masterUserArn = $.masterUserArn;
        this.masterUserName = $.masterUserName;
        this.masterUserPassword = $.masterUserPassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainAdvancedSecurityOptionsMasterUserOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainAdvancedSecurityOptionsMasterUserOptionsArgs $;

        public Builder() {
            $ = new DomainAdvancedSecurityOptionsMasterUserOptionsArgs();
        }

        public Builder(DomainAdvancedSecurityOptionsMasterUserOptionsArgs defaults) {
            $ = new DomainAdvancedSecurityOptionsMasterUserOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param masterUserArn ARN for the main user. Only specify if `internal_user_database_enabled` is not set or set to `false`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserArn(@Nullable Output<String> masterUserArn) {
            $.masterUserArn = masterUserArn;
            return this;
        }

        /**
         * @param masterUserArn ARN for the main user. Only specify if `internal_user_database_enabled` is not set or set to `false`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserArn(String masterUserArn) {
            return masterUserArn(Output.of(masterUserArn));
        }

        /**
         * @param masterUserName Main user&#39;s username, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserName(@Nullable Output<String> masterUserName) {
            $.masterUserName = masterUserName;
            return this;
        }

        /**
         * @param masterUserName Main user&#39;s username, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserName(String masterUserName) {
            return masterUserName(Output.of(masterUserName));
        }

        /**
         * @param masterUserPassword Main user&#39;s password, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserPassword(@Nullable Output<String> masterUserPassword) {
            $.masterUserPassword = masterUserPassword;
            return this;
        }

        /**
         * @param masterUserPassword Main user&#39;s password, which is stored in the Amazon OpenSearch Service domain&#39;s internal database. Only specify if `internal_user_database_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder masterUserPassword(String masterUserPassword) {
            return masterUserPassword(Output.of(masterUserPassword));
        }

        public DomainAdvancedSecurityOptionsMasterUserOptionsArgs build() {
            return $;
        }
    }

}
