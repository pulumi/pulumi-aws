// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront;

import com.pulumi.aws.cloudfront.inputs.KeyValueStoreTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyValueStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyValueStoreArgs Empty = new KeyValueStoreArgs();

    /**
     * Comment.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Comment.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="timeouts")
    private @Nullable Output<KeyValueStoreTimeoutsArgs> timeouts;

    public Optional<Output<KeyValueStoreTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private KeyValueStoreArgs() {}

    private KeyValueStoreArgs(KeyValueStoreArgs $) {
        this.comment = $.comment;
        this.name = $.name;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyValueStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyValueStoreArgs $;

        public Builder() {
            $ = new KeyValueStoreArgs();
        }

        public Builder(KeyValueStoreArgs defaults) {
            $ = new KeyValueStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param name Unique name for your CloudFront KeyValueStore.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for your CloudFront KeyValueStore.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder timeouts(@Nullable Output<KeyValueStoreTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(KeyValueStoreTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public KeyValueStoreArgs build() {
            return $;
        }
    }

}
