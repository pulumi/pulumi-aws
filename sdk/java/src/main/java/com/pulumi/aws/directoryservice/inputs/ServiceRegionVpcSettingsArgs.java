// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ServiceRegionVpcSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceRegionVpcSettingsArgs Empty = new ServiceRegionVpcSettingsArgs();

    /**
     * The identifiers of the subnets for the directory servers.
     * 
     */
    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    /**
     * @return The identifiers of the subnets for the directory servers.
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    /**
     * The identifier of the VPC in which to create the directory.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The identifier of the VPC in which to create the directory.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private ServiceRegionVpcSettingsArgs() {}

    private ServiceRegionVpcSettingsArgs(ServiceRegionVpcSettingsArgs $) {
        this.subnetIds = $.subnetIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceRegionVpcSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceRegionVpcSettingsArgs $;

        public Builder() {
            $ = new ServiceRegionVpcSettingsArgs();
        }

        public Builder(ServiceRegionVpcSettingsArgs defaults) {
            $ = new ServiceRegionVpcSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subnetIds The identifiers of the subnets for the directory servers.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds The identifiers of the subnets for the directory servers.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds The identifiers of the subnets for the directory servers.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param vpcId The identifier of the VPC in which to create the directory.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The identifier of the VPC in which to create the directory.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public ServiceRegionVpcSettingsArgs build() {
            if ($.subnetIds == null) {
                throw new MissingRequiredPropertyException("ServiceRegionVpcSettingsArgs", "subnetIds");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("ServiceRegionVpcSettingsArgs", "vpcId");
            }
            return $;
        }
    }

}
