// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.inputs;

import com.pulumi.aws.appconfig.inputs.ExtensionActionPointActionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ExtensionActionPointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionActionPointArgs Empty = new ExtensionActionPointArgs();

    @Import(name="actions", required=true)
    private Output<List<ExtensionActionPointActionArgs>> actions;

    public Output<List<ExtensionActionPointActionArgs>> actions() {
        return this.actions;
    }

    @Import(name="point", required=true)
    private Output<String> point;

    public Output<String> point() {
        return this.point;
    }

    private ExtensionActionPointArgs() {}

    private ExtensionActionPointArgs(ExtensionActionPointArgs $) {
        this.actions = $.actions;
        this.point = $.point;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionActionPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionActionPointArgs $;

        public Builder() {
            $ = new ExtensionActionPointArgs();
        }

        public Builder(ExtensionActionPointArgs defaults) {
            $ = new ExtensionActionPointArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(Output<List<ExtensionActionPointActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<ExtensionActionPointActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(ExtensionActionPointActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder point(Output<String> point) {
            $.point = point;
            return this;
        }

        public Builder point(String point) {
            return point(Output.of(point));
        }

        public ExtensionActionPointArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.point = Objects.requireNonNull($.point, "expected parameter 'point' to be non-null");
            return $;
        }
    }

}
