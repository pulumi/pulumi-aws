// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.outputs;

import com.pulumi.aws.efs.outputs.GetFileSystemLifecyclePolicy;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFileSystemResult {
    private String arn;
    private String availabilityZoneId;
    private String availabilityZoneName;
    private String creationToken;
    private String dnsName;
    private Boolean encrypted;
    private String fileSystemId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String kmsKeyId;
    private GetFileSystemLifecyclePolicy lifecyclePolicy;
    private String performanceMode;
    private Double provisionedThroughputInMibps;
    private Integer sizeInBytes;
    private Map<String,String> tags;
    private String throughputMode;

    private GetFileSystemResult() {}
    public String arn() {
        return this.arn;
    }
    public String availabilityZoneId() {
        return this.availabilityZoneId;
    }
    public String availabilityZoneName() {
        return this.availabilityZoneName;
    }
    public String creationToken() {
        return this.creationToken;
    }
    public String dnsName() {
        return this.dnsName;
    }
    public Boolean encrypted() {
        return this.encrypted;
    }
    public String fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public GetFileSystemLifecyclePolicy lifecyclePolicy() {
        return this.lifecyclePolicy;
    }
    public String performanceMode() {
        return this.performanceMode;
    }
    public Double provisionedThroughputInMibps() {
        return this.provisionedThroughputInMibps;
    }
    public Integer sizeInBytes() {
        return this.sizeInBytes;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String throughputMode() {
        return this.throughputMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String availabilityZoneId;
        private String availabilityZoneName;
        private String creationToken;
        private String dnsName;
        private Boolean encrypted;
        private String fileSystemId;
        private String id;
        private String kmsKeyId;
        private GetFileSystemLifecyclePolicy lifecyclePolicy;
        private String performanceMode;
        private Double provisionedThroughputInMibps;
        private Integer sizeInBytes;
        private Map<String,String> tags;
        private String throughputMode;
        public Builder() {}
        public Builder(GetFileSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.creationToken = defaults.creationToken;
    	      this.dnsName = defaults.dnsName;
    	      this.encrypted = defaults.encrypted;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lifecyclePolicy = defaults.lifecyclePolicy;
    	      this.performanceMode = defaults.performanceMode;
    	      this.provisionedThroughputInMibps = defaults.provisionedThroughputInMibps;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.tags = defaults.tags;
    	      this.throughputMode = defaults.throughputMode;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(String availabilityZoneId) {
            this.availabilityZoneId = Objects.requireNonNull(availabilityZoneId);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneName(String availabilityZoneName) {
            this.availabilityZoneName = Objects.requireNonNull(availabilityZoneName);
            return this;
        }
        @CustomType.Setter
        public Builder creationToken(String creationToken) {
            this.creationToken = Objects.requireNonNull(creationToken);
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            this.dnsName = Objects.requireNonNull(dnsName);
            return this;
        }
        @CustomType.Setter
        public Builder encrypted(Boolean encrypted) {
            this.encrypted = Objects.requireNonNull(encrypted);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder lifecyclePolicy(GetFileSystemLifecyclePolicy lifecyclePolicy) {
            this.lifecyclePolicy = Objects.requireNonNull(lifecyclePolicy);
            return this;
        }
        @CustomType.Setter
        public Builder performanceMode(String performanceMode) {
            this.performanceMode = Objects.requireNonNull(performanceMode);
            return this;
        }
        @CustomType.Setter
        public Builder provisionedThroughputInMibps(Double provisionedThroughputInMibps) {
            this.provisionedThroughputInMibps = Objects.requireNonNull(provisionedThroughputInMibps);
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(Integer sizeInBytes) {
            this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder throughputMode(String throughputMode) {
            this.throughputMode = Objects.requireNonNull(throughputMode);
            return this;
        }
        public GetFileSystemResult build() {
            final var o = new GetFileSystemResult();
            o.arn = arn;
            o.availabilityZoneId = availabilityZoneId;
            o.availabilityZoneName = availabilityZoneName;
            o.creationToken = creationToken;
            o.dnsName = dnsName;
            o.encrypted = encrypted;
            o.fileSystemId = fileSystemId;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.lifecyclePolicy = lifecyclePolicy;
            o.performanceMode = performanceMode;
            o.provisionedThroughputInMibps = provisionedThroughputInMibps;
            o.sizeInBytes = sizeInBytes;
            o.tags = tags;
            o.throughputMode = throughputMode;
            return o;
        }
    }
}
