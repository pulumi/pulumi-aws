// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.outputs;

import com.pulumi.aws.efs.outputs.GetFileSystemLifecyclePolicy;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFileSystemResult {
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The identifier of the Availability Zone in which the file system&#39;s One Zone storage classes exist.
     * 
     */
    private @Nullable String availabilityZoneId;
    /**
     * @return The Availability Zone name in which the file system&#39;s One Zone storage classes exist.
     * 
     */
    private @Nullable String availabilityZoneName;
    private @Nullable String creationToken;
    /**
     * @return DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return Whether EFS is encrypted.
     * 
     */
    private @Nullable Boolean encrypted;
    private @Nullable String fileSystemId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ARN for the KMS encryption key.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return File system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object.
     * 
     */
    private @Nullable GetFileSystemLifecyclePolicy lifecyclePolicy;
    /**
     * @return The value of the file system&#39;s `Name` tag.
     * 
     */
    private @Nullable String name;
    /**
     * @return File system performance mode.
     * 
     */
    private @Nullable String performanceMode;
    /**
     * @return The throughput, measured in MiB/s, that you want to provision for the file system.
     * 
     */
    private @Nullable Double provisionedThroughputInMibps;
    /**
     * @return Current byte count used by the file system.
     * 
     */
    private @Nullable Integer sizeInBytes;
    /**
     * @return A map of tags to assign to the file system.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Throughput mode for the file system.
     * 
     */
    private @Nullable String throughputMode;

    private GetFileSystemResult() {}
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The identifier of the Availability Zone in which the file system&#39;s One Zone storage classes exist.
     * 
     */
    public Optional<String> availabilityZoneId() {
        return Optional.ofNullable(this.availabilityZoneId);
    }
    /**
     * @return The Availability Zone name in which the file system&#39;s One Zone storage classes exist.
     * 
     */
    public Optional<String> availabilityZoneName() {
        return Optional.ofNullable(this.availabilityZoneName);
    }
    public Optional<String> creationToken() {
        return Optional.ofNullable(this.creationToken);
    }
    /**
     * @return DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return Whether EFS is encrypted.
     * 
     */
    public Optional<Boolean> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ARN for the KMS encryption key.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return File system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object.
     * 
     */
    public Optional<GetFileSystemLifecyclePolicy> lifecyclePolicy() {
        return Optional.ofNullable(this.lifecyclePolicy);
    }
    /**
     * @return The value of the file system&#39;s `Name` tag.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return File system performance mode.
     * 
     */
    public Optional<String> performanceMode() {
        return Optional.ofNullable(this.performanceMode);
    }
    /**
     * @return The throughput, measured in MiB/s, that you want to provision for the file system.
     * 
     */
    public Optional<Double> provisionedThroughputInMibps() {
        return Optional.ofNullable(this.provisionedThroughputInMibps);
    }
    /**
     * @return Current byte count used by the file system.
     * 
     */
    public Optional<Integer> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }
    /**
     * @return A map of tags to assign to the file system.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Throughput mode for the file system.
     * 
     */
    public Optional<String> throughputMode() {
        return Optional.ofNullable(this.throughputMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String availabilityZoneId;
        private @Nullable String availabilityZoneName;
        private @Nullable String creationToken;
        private @Nullable String dnsName;
        private @Nullable Boolean encrypted;
        private @Nullable String fileSystemId;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable GetFileSystemLifecyclePolicy lifecyclePolicy;
        private @Nullable String name;
        private @Nullable String performanceMode;
        private @Nullable Double provisionedThroughputInMibps;
        private @Nullable Integer sizeInBytes;
        private @Nullable Map<String,String> tags;
        private @Nullable String throughputMode;
        public Builder() {}
        public Builder(GetFileSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.creationToken = defaults.creationToken;
    	      this.dnsName = defaults.dnsName;
    	      this.encrypted = defaults.encrypted;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lifecyclePolicy = defaults.lifecyclePolicy;
    	      this.name = defaults.name;
    	      this.performanceMode = defaults.performanceMode;
    	      this.provisionedThroughputInMibps = defaults.provisionedThroughputInMibps;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.tags = defaults.tags;
    	      this.throughputMode = defaults.throughputMode;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(@Nullable String availabilityZoneId) {
            this.availabilityZoneId = availabilityZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneName(@Nullable String availabilityZoneName) {
            this.availabilityZoneName = availabilityZoneName;
            return this;
        }
        @CustomType.Setter
        public Builder creationToken(@Nullable String creationToken) {
            this.creationToken = creationToken;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder encrypted(@Nullable Boolean encrypted) {
            this.encrypted = encrypted;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecyclePolicy(@Nullable GetFileSystemLifecyclePolicy lifecyclePolicy) {
            this.lifecyclePolicy = lifecyclePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder performanceMode(@Nullable String performanceMode) {
            this.performanceMode = performanceMode;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedThroughputInMibps(@Nullable Double provisionedThroughputInMibps) {
            this.provisionedThroughputInMibps = provisionedThroughputInMibps;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(@Nullable Integer sizeInBytes) {
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder throughputMode(@Nullable String throughputMode) {
            this.throughputMode = throughputMode;
            return this;
        }
        public GetFileSystemResult build() {
            final var o = new GetFileSystemResult();
            o.arn = arn;
            o.availabilityZoneId = availabilityZoneId;
            o.availabilityZoneName = availabilityZoneName;
            o.creationToken = creationToken;
            o.dnsName = dnsName;
            o.encrypted = encrypted;
            o.fileSystemId = fileSystemId;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.lifecyclePolicy = lifecyclePolicy;
            o.name = name;
            o.performanceMode = performanceMode;
            o.provisionedThroughputInMibps = provisionedThroughputInMibps;
            o.sizeInBytes = sizeInBytes;
            o.tags = tags;
            o.throughputMode = throughputMode;
            return o;
        }
    }
}
