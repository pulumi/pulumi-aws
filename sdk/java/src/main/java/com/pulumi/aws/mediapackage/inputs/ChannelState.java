// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mediapackage.inputs;

import com.pulumi.aws.mediapackage.inputs.ChannelHlsIngestArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelState extends com.pulumi.resources.ResourceArgs {

    public static final ChannelState Empty = new ChannelState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="channelId")
    private @Nullable Output<String> channelId;

    public Optional<Output<String>> channelId() {
        return Optional.ofNullable(this.channelId);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="hlsIngests")
    private @Nullable Output<List<ChannelHlsIngestArgs>> hlsIngests;

    public Optional<Output<List<ChannelHlsIngestArgs>>> hlsIngests() {
        return Optional.ofNullable(this.hlsIngests);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ChannelState() {}

    private ChannelState(ChannelState $) {
        this.arn = $.arn;
        this.channelId = $.channelId;
        this.description = $.description;
        this.hlsIngests = $.hlsIngests;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelState $;

        public Builder() {
            $ = new ChannelState();
        }

        public Builder(ChannelState defaults) {
            $ = new ChannelState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder channelId(@Nullable Output<String> channelId) {
            $.channelId = channelId;
            return this;
        }

        public Builder channelId(String channelId) {
            return channelId(Output.of(channelId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder hlsIngests(@Nullable Output<List<ChannelHlsIngestArgs>> hlsIngests) {
            $.hlsIngests = hlsIngests;
            return this;
        }

        public Builder hlsIngests(List<ChannelHlsIngestArgs> hlsIngests) {
            return hlsIngests(Output.of(hlsIngests));
        }

        public Builder hlsIngests(ChannelHlsIngestArgs... hlsIngests) {
            return hlsIngests(List.of(hlsIngests));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ChannelState build() {
            $.description = Codegen.stringProp("description").output().arg($.description).def("Managed by Pulumi").getNullable();
            return $;
        }
    }

}
