// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs;

import com.pulumi.aws.ecs.inputs.ServiceAlarmsArgs;
import com.pulumi.aws.ecs.inputs.ServiceCapacityProviderStrategyArgs;
import com.pulumi.aws.ecs.inputs.ServiceDeploymentCircuitBreakerArgs;
import com.pulumi.aws.ecs.inputs.ServiceDeploymentControllerArgs;
import com.pulumi.aws.ecs.inputs.ServiceLoadBalancerArgs;
import com.pulumi.aws.ecs.inputs.ServiceNetworkConfigurationArgs;
import com.pulumi.aws.ecs.inputs.ServiceOrderedPlacementStrategyArgs;
import com.pulumi.aws.ecs.inputs.ServicePlacementConstraintArgs;
import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationArgs;
import com.pulumi.aws.ecs.inputs.ServiceServiceRegistriesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    @Import(name="alarms")
    private @Nullable Output<ServiceAlarmsArgs> alarms;

    public Optional<Output<ServiceAlarmsArgs>> alarms() {
        return Optional.ofNullable(this.alarms);
    }

    @Import(name="capacityProviderStrategies")
    private @Nullable Output<List<ServiceCapacityProviderStrategyArgs>> capacityProviderStrategies;

    public Optional<Output<List<ServiceCapacityProviderStrategyArgs>>> capacityProviderStrategies() {
        return Optional.ofNullable(this.capacityProviderStrategies);
    }

    @Import(name="cluster")
    private @Nullable Output<String> cluster;

    public Optional<Output<String>> cluster() {
        return Optional.ofNullable(this.cluster);
    }

    @Import(name="deploymentCircuitBreaker")
    private @Nullable Output<ServiceDeploymentCircuitBreakerArgs> deploymentCircuitBreaker;

    public Optional<Output<ServiceDeploymentCircuitBreakerArgs>> deploymentCircuitBreaker() {
        return Optional.ofNullable(this.deploymentCircuitBreaker);
    }

    @Import(name="deploymentController")
    private @Nullable Output<ServiceDeploymentControllerArgs> deploymentController;

    public Optional<Output<ServiceDeploymentControllerArgs>> deploymentController() {
        return Optional.ofNullable(this.deploymentController);
    }

    @Import(name="deploymentMaximumPercent")
    private @Nullable Output<Integer> deploymentMaximumPercent;

    public Optional<Output<Integer>> deploymentMaximumPercent() {
        return Optional.ofNullable(this.deploymentMaximumPercent);
    }

    @Import(name="deploymentMinimumHealthyPercent")
    private @Nullable Output<Integer> deploymentMinimumHealthyPercent;

    public Optional<Output<Integer>> deploymentMinimumHealthyPercent() {
        return Optional.ofNullable(this.deploymentMinimumHealthyPercent);
    }

    @Import(name="desiredCount")
    private @Nullable Output<Integer> desiredCount;

    public Optional<Output<Integer>> desiredCount() {
        return Optional.ofNullable(this.desiredCount);
    }

    @Import(name="enableEcsManagedTags")
    private @Nullable Output<Boolean> enableEcsManagedTags;

    public Optional<Output<Boolean>> enableEcsManagedTags() {
        return Optional.ofNullable(this.enableEcsManagedTags);
    }

    @Import(name="enableExecuteCommand")
    private @Nullable Output<Boolean> enableExecuteCommand;

    public Optional<Output<Boolean>> enableExecuteCommand() {
        return Optional.ofNullable(this.enableExecuteCommand);
    }

    @Import(name="forceNewDeployment")
    private @Nullable Output<Boolean> forceNewDeployment;

    public Optional<Output<Boolean>> forceNewDeployment() {
        return Optional.ofNullable(this.forceNewDeployment);
    }

    @Import(name="healthCheckGracePeriodSeconds")
    private @Nullable Output<Integer> healthCheckGracePeriodSeconds;

    public Optional<Output<Integer>> healthCheckGracePeriodSeconds() {
        return Optional.ofNullable(this.healthCheckGracePeriodSeconds);
    }

    @Import(name="iamRole")
    private @Nullable Output<String> iamRole;

    public Optional<Output<String>> iamRole() {
        return Optional.ofNullable(this.iamRole);
    }

    @Import(name="launchType")
    private @Nullable Output<String> launchType;

    public Optional<Output<String>> launchType() {
        return Optional.ofNullable(this.launchType);
    }

    @Import(name="loadBalancers")
    private @Nullable Output<List<ServiceLoadBalancerArgs>> loadBalancers;

    public Optional<Output<List<ServiceLoadBalancerArgs>>> loadBalancers() {
        return Optional.ofNullable(this.loadBalancers);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="networkConfiguration")
    private @Nullable Output<ServiceNetworkConfigurationArgs> networkConfiguration;

    public Optional<Output<ServiceNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    @Import(name="orderedPlacementStrategies")
    private @Nullable Output<List<ServiceOrderedPlacementStrategyArgs>> orderedPlacementStrategies;

    public Optional<Output<List<ServiceOrderedPlacementStrategyArgs>>> orderedPlacementStrategies() {
        return Optional.ofNullable(this.orderedPlacementStrategies);
    }

    @Import(name="placementConstraints")
    private @Nullable Output<List<ServicePlacementConstraintArgs>> placementConstraints;

    public Optional<Output<List<ServicePlacementConstraintArgs>>> placementConstraints() {
        return Optional.ofNullable(this.placementConstraints);
    }

    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    @Import(name="propagateTags")
    private @Nullable Output<String> propagateTags;

    public Optional<Output<String>> propagateTags() {
        return Optional.ofNullable(this.propagateTags);
    }

    @Import(name="schedulingStrategy")
    private @Nullable Output<String> schedulingStrategy;

    public Optional<Output<String>> schedulingStrategy() {
        return Optional.ofNullable(this.schedulingStrategy);
    }

    @Import(name="serviceConnectConfiguration")
    private @Nullable Output<ServiceServiceConnectConfigurationArgs> serviceConnectConfiguration;

    public Optional<Output<ServiceServiceConnectConfigurationArgs>> serviceConnectConfiguration() {
        return Optional.ofNullable(this.serviceConnectConfiguration);
    }

    @Import(name="serviceRegistries")
    private @Nullable Output<ServiceServiceRegistriesArgs> serviceRegistries;

    public Optional<Output<ServiceServiceRegistriesArgs>> serviceRegistries() {
        return Optional.ofNullable(this.serviceRegistries);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="taskDefinition")
    private @Nullable Output<String> taskDefinition;

    public Optional<Output<String>> taskDefinition() {
        return Optional.ofNullable(this.taskDefinition);
    }

    @Import(name="triggers")
    private @Nullable Output<Map<String,String>> triggers;

    public Optional<Output<Map<String,String>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    @Import(name="waitForSteadyState")
    private @Nullable Output<Boolean> waitForSteadyState;

    public Optional<Output<Boolean>> waitForSteadyState() {
        return Optional.ofNullable(this.waitForSteadyState);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.alarms = $.alarms;
        this.capacityProviderStrategies = $.capacityProviderStrategies;
        this.cluster = $.cluster;
        this.deploymentCircuitBreaker = $.deploymentCircuitBreaker;
        this.deploymentController = $.deploymentController;
        this.deploymentMaximumPercent = $.deploymentMaximumPercent;
        this.deploymentMinimumHealthyPercent = $.deploymentMinimumHealthyPercent;
        this.desiredCount = $.desiredCount;
        this.enableEcsManagedTags = $.enableEcsManagedTags;
        this.enableExecuteCommand = $.enableExecuteCommand;
        this.forceNewDeployment = $.forceNewDeployment;
        this.healthCheckGracePeriodSeconds = $.healthCheckGracePeriodSeconds;
        this.iamRole = $.iamRole;
        this.launchType = $.launchType;
        this.loadBalancers = $.loadBalancers;
        this.name = $.name;
        this.networkConfiguration = $.networkConfiguration;
        this.orderedPlacementStrategies = $.orderedPlacementStrategies;
        this.placementConstraints = $.placementConstraints;
        this.platformVersion = $.platformVersion;
        this.propagateTags = $.propagateTags;
        this.schedulingStrategy = $.schedulingStrategy;
        this.serviceConnectConfiguration = $.serviceConnectConfiguration;
        this.serviceRegistries = $.serviceRegistries;
        this.tags = $.tags;
        this.taskDefinition = $.taskDefinition;
        this.triggers = $.triggers;
        this.waitForSteadyState = $.waitForSteadyState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder alarms(@Nullable Output<ServiceAlarmsArgs> alarms) {
            $.alarms = alarms;
            return this;
        }

        public Builder alarms(ServiceAlarmsArgs alarms) {
            return alarms(Output.of(alarms));
        }

        public Builder capacityProviderStrategies(@Nullable Output<List<ServiceCapacityProviderStrategyArgs>> capacityProviderStrategies) {
            $.capacityProviderStrategies = capacityProviderStrategies;
            return this;
        }

        public Builder capacityProviderStrategies(List<ServiceCapacityProviderStrategyArgs> capacityProviderStrategies) {
            return capacityProviderStrategies(Output.of(capacityProviderStrategies));
        }

        public Builder capacityProviderStrategies(ServiceCapacityProviderStrategyArgs... capacityProviderStrategies) {
            return capacityProviderStrategies(List.of(capacityProviderStrategies));
        }

        public Builder cluster(@Nullable Output<String> cluster) {
            $.cluster = cluster;
            return this;
        }

        public Builder cluster(String cluster) {
            return cluster(Output.of(cluster));
        }

        public Builder deploymentCircuitBreaker(@Nullable Output<ServiceDeploymentCircuitBreakerArgs> deploymentCircuitBreaker) {
            $.deploymentCircuitBreaker = deploymentCircuitBreaker;
            return this;
        }

        public Builder deploymentCircuitBreaker(ServiceDeploymentCircuitBreakerArgs deploymentCircuitBreaker) {
            return deploymentCircuitBreaker(Output.of(deploymentCircuitBreaker));
        }

        public Builder deploymentController(@Nullable Output<ServiceDeploymentControllerArgs> deploymentController) {
            $.deploymentController = deploymentController;
            return this;
        }

        public Builder deploymentController(ServiceDeploymentControllerArgs deploymentController) {
            return deploymentController(Output.of(deploymentController));
        }

        public Builder deploymentMaximumPercent(@Nullable Output<Integer> deploymentMaximumPercent) {
            $.deploymentMaximumPercent = deploymentMaximumPercent;
            return this;
        }

        public Builder deploymentMaximumPercent(Integer deploymentMaximumPercent) {
            return deploymentMaximumPercent(Output.of(deploymentMaximumPercent));
        }

        public Builder deploymentMinimumHealthyPercent(@Nullable Output<Integer> deploymentMinimumHealthyPercent) {
            $.deploymentMinimumHealthyPercent = deploymentMinimumHealthyPercent;
            return this;
        }

        public Builder deploymentMinimumHealthyPercent(Integer deploymentMinimumHealthyPercent) {
            return deploymentMinimumHealthyPercent(Output.of(deploymentMinimumHealthyPercent));
        }

        public Builder desiredCount(@Nullable Output<Integer> desiredCount) {
            $.desiredCount = desiredCount;
            return this;
        }

        public Builder desiredCount(Integer desiredCount) {
            return desiredCount(Output.of(desiredCount));
        }

        public Builder enableEcsManagedTags(@Nullable Output<Boolean> enableEcsManagedTags) {
            $.enableEcsManagedTags = enableEcsManagedTags;
            return this;
        }

        public Builder enableEcsManagedTags(Boolean enableEcsManagedTags) {
            return enableEcsManagedTags(Output.of(enableEcsManagedTags));
        }

        public Builder enableExecuteCommand(@Nullable Output<Boolean> enableExecuteCommand) {
            $.enableExecuteCommand = enableExecuteCommand;
            return this;
        }

        public Builder enableExecuteCommand(Boolean enableExecuteCommand) {
            return enableExecuteCommand(Output.of(enableExecuteCommand));
        }

        public Builder forceNewDeployment(@Nullable Output<Boolean> forceNewDeployment) {
            $.forceNewDeployment = forceNewDeployment;
            return this;
        }

        public Builder forceNewDeployment(Boolean forceNewDeployment) {
            return forceNewDeployment(Output.of(forceNewDeployment));
        }

        public Builder healthCheckGracePeriodSeconds(@Nullable Output<Integer> healthCheckGracePeriodSeconds) {
            $.healthCheckGracePeriodSeconds = healthCheckGracePeriodSeconds;
            return this;
        }

        public Builder healthCheckGracePeriodSeconds(Integer healthCheckGracePeriodSeconds) {
            return healthCheckGracePeriodSeconds(Output.of(healthCheckGracePeriodSeconds));
        }

        public Builder iamRole(@Nullable Output<String> iamRole) {
            $.iamRole = iamRole;
            return this;
        }

        public Builder iamRole(String iamRole) {
            return iamRole(Output.of(iamRole));
        }

        public Builder launchType(@Nullable Output<String> launchType) {
            $.launchType = launchType;
            return this;
        }

        public Builder launchType(String launchType) {
            return launchType(Output.of(launchType));
        }

        public Builder loadBalancers(@Nullable Output<List<ServiceLoadBalancerArgs>> loadBalancers) {
            $.loadBalancers = loadBalancers;
            return this;
        }

        public Builder loadBalancers(List<ServiceLoadBalancerArgs> loadBalancers) {
            return loadBalancers(Output.of(loadBalancers));
        }

        public Builder loadBalancers(ServiceLoadBalancerArgs... loadBalancers) {
            return loadBalancers(List.of(loadBalancers));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networkConfiguration(@Nullable Output<ServiceNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder networkConfiguration(ServiceNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        public Builder orderedPlacementStrategies(@Nullable Output<List<ServiceOrderedPlacementStrategyArgs>> orderedPlacementStrategies) {
            $.orderedPlacementStrategies = orderedPlacementStrategies;
            return this;
        }

        public Builder orderedPlacementStrategies(List<ServiceOrderedPlacementStrategyArgs> orderedPlacementStrategies) {
            return orderedPlacementStrategies(Output.of(orderedPlacementStrategies));
        }

        public Builder orderedPlacementStrategies(ServiceOrderedPlacementStrategyArgs... orderedPlacementStrategies) {
            return orderedPlacementStrategies(List.of(orderedPlacementStrategies));
        }

        public Builder placementConstraints(@Nullable Output<List<ServicePlacementConstraintArgs>> placementConstraints) {
            $.placementConstraints = placementConstraints;
            return this;
        }

        public Builder placementConstraints(List<ServicePlacementConstraintArgs> placementConstraints) {
            return placementConstraints(Output.of(placementConstraints));
        }

        public Builder placementConstraints(ServicePlacementConstraintArgs... placementConstraints) {
            return placementConstraints(List.of(placementConstraints));
        }

        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        public Builder propagateTags(@Nullable Output<String> propagateTags) {
            $.propagateTags = propagateTags;
            return this;
        }

        public Builder propagateTags(String propagateTags) {
            return propagateTags(Output.of(propagateTags));
        }

        public Builder schedulingStrategy(@Nullable Output<String> schedulingStrategy) {
            $.schedulingStrategy = schedulingStrategy;
            return this;
        }

        public Builder schedulingStrategy(String schedulingStrategy) {
            return schedulingStrategy(Output.of(schedulingStrategy));
        }

        public Builder serviceConnectConfiguration(@Nullable Output<ServiceServiceConnectConfigurationArgs> serviceConnectConfiguration) {
            $.serviceConnectConfiguration = serviceConnectConfiguration;
            return this;
        }

        public Builder serviceConnectConfiguration(ServiceServiceConnectConfigurationArgs serviceConnectConfiguration) {
            return serviceConnectConfiguration(Output.of(serviceConnectConfiguration));
        }

        public Builder serviceRegistries(@Nullable Output<ServiceServiceRegistriesArgs> serviceRegistries) {
            $.serviceRegistries = serviceRegistries;
            return this;
        }

        public Builder serviceRegistries(ServiceServiceRegistriesArgs serviceRegistries) {
            return serviceRegistries(Output.of(serviceRegistries));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder taskDefinition(@Nullable Output<String> taskDefinition) {
            $.taskDefinition = taskDefinition;
            return this;
        }

        public Builder taskDefinition(String taskDefinition) {
            return taskDefinition(Output.of(taskDefinition));
        }

        public Builder triggers(@Nullable Output<Map<String,String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(Map<String,String> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder waitForSteadyState(@Nullable Output<Boolean> waitForSteadyState) {
            $.waitForSteadyState = waitForSteadyState;
            return this;
        }

        public Builder waitForSteadyState(Boolean waitForSteadyState) {
            return waitForSteadyState(Output.of(waitForSteadyState));
        }

        public ServiceArgs build() {
            return $;
        }
    }

}
