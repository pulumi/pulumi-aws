// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.aws.lakeformation.outputs.OptInResourceDataCatalog;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataDataCellsFilter;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataDataLocation;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataDatabase;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataLfTag;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataLfTagExpression;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataLfTagPolicy;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataTable;
import com.pulumi.aws.lakeformation.outputs.OptInResourceDataTableWithColumns;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OptInResourceData {
    /**
     * @return Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. See Catalog for more details.
     * 
     */
    private @Nullable List<OptInResourceDataCatalog> catalogs;
    /**
     * @return Data cell filter. See Data Cells Filter for more details.
     * 
     */
    private @Nullable List<OptInResourceDataDataCellsFilter> dataCellsFilters;
    /**
     * @return Location of an Amazon S3 path where permissions are granted or revoked. See Data Location for more details.
     * 
     */
    private @Nullable List<OptInResourceDataDataLocation> dataLocations;
    /**
     * @return Database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. See Database for more details.
     * 
     */
    private @Nullable OptInResourceDataDatabase database;
    /**
     * @return LF-tag key and values attached to a resource.
     * 
     */
    private @Nullable OptInResourceDataLfTag lfTag;
    /**
     * @return Logical expression composed of one or more LF-Tag key:value pairs. See LF-Tag Expression for more details.
     * 
     */
    private @Nullable List<OptInResourceDataLfTagExpression> lfTagExpressions;
    /**
     * @return List of LF-Tag conditions or saved LF-Tag expressions that define a resource&#39;s LF-Tag policy. See LF-Tag Policy for more details.
     * 
     */
    private @Nullable List<OptInResourceDataLfTagPolicy> lfTagPolicies;
    /**
     * @return Table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. See Table for more details.
     * 
     */
    private @Nullable OptInResourceDataTable table;
    /**
     * @return Table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3. See Table With Columns for more details.
     * 
     */
    private @Nullable OptInResourceDataTableWithColumns tableWithColumns;

    private OptInResourceData() {}
    /**
     * @return Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. See Catalog for more details.
     * 
     */
    public List<OptInResourceDataCatalog> catalogs() {
        return this.catalogs == null ? List.of() : this.catalogs;
    }
    /**
     * @return Data cell filter. See Data Cells Filter for more details.
     * 
     */
    public List<OptInResourceDataDataCellsFilter> dataCellsFilters() {
        return this.dataCellsFilters == null ? List.of() : this.dataCellsFilters;
    }
    /**
     * @return Location of an Amazon S3 path where permissions are granted or revoked. See Data Location for more details.
     * 
     */
    public List<OptInResourceDataDataLocation> dataLocations() {
        return this.dataLocations == null ? List.of() : this.dataLocations;
    }
    /**
     * @return Database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. See Database for more details.
     * 
     */
    public Optional<OptInResourceDataDatabase> database() {
        return Optional.ofNullable(this.database);
    }
    /**
     * @return LF-tag key and values attached to a resource.
     * 
     */
    public Optional<OptInResourceDataLfTag> lfTag() {
        return Optional.ofNullable(this.lfTag);
    }
    /**
     * @return Logical expression composed of one or more LF-Tag key:value pairs. See LF-Tag Expression for more details.
     * 
     */
    public List<OptInResourceDataLfTagExpression> lfTagExpressions() {
        return this.lfTagExpressions == null ? List.of() : this.lfTagExpressions;
    }
    /**
     * @return List of LF-Tag conditions or saved LF-Tag expressions that define a resource&#39;s LF-Tag policy. See LF-Tag Policy for more details.
     * 
     */
    public List<OptInResourceDataLfTagPolicy> lfTagPolicies() {
        return this.lfTagPolicies == null ? List.of() : this.lfTagPolicies;
    }
    /**
     * @return Table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. See Table for more details.
     * 
     */
    public Optional<OptInResourceDataTable> table() {
        return Optional.ofNullable(this.table);
    }
    /**
     * @return Table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3. See Table With Columns for more details.
     * 
     */
    public Optional<OptInResourceDataTableWithColumns> tableWithColumns() {
        return Optional.ofNullable(this.tableWithColumns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OptInResourceData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<OptInResourceDataCatalog> catalogs;
        private @Nullable List<OptInResourceDataDataCellsFilter> dataCellsFilters;
        private @Nullable List<OptInResourceDataDataLocation> dataLocations;
        private @Nullable OptInResourceDataDatabase database;
        private @Nullable OptInResourceDataLfTag lfTag;
        private @Nullable List<OptInResourceDataLfTagExpression> lfTagExpressions;
        private @Nullable List<OptInResourceDataLfTagPolicy> lfTagPolicies;
        private @Nullable OptInResourceDataTable table;
        private @Nullable OptInResourceDataTableWithColumns tableWithColumns;
        public Builder() {}
        public Builder(OptInResourceData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogs = defaults.catalogs;
    	      this.dataCellsFilters = defaults.dataCellsFilters;
    	      this.dataLocations = defaults.dataLocations;
    	      this.database = defaults.database;
    	      this.lfTag = defaults.lfTag;
    	      this.lfTagExpressions = defaults.lfTagExpressions;
    	      this.lfTagPolicies = defaults.lfTagPolicies;
    	      this.table = defaults.table;
    	      this.tableWithColumns = defaults.tableWithColumns;
        }

        @CustomType.Setter
        public Builder catalogs(@Nullable List<OptInResourceDataCatalog> catalogs) {

            this.catalogs = catalogs;
            return this;
        }
        public Builder catalogs(OptInResourceDataCatalog... catalogs) {
            return catalogs(List.of(catalogs));
        }
        @CustomType.Setter
        public Builder dataCellsFilters(@Nullable List<OptInResourceDataDataCellsFilter> dataCellsFilters) {

            this.dataCellsFilters = dataCellsFilters;
            return this;
        }
        public Builder dataCellsFilters(OptInResourceDataDataCellsFilter... dataCellsFilters) {
            return dataCellsFilters(List.of(dataCellsFilters));
        }
        @CustomType.Setter
        public Builder dataLocations(@Nullable List<OptInResourceDataDataLocation> dataLocations) {

            this.dataLocations = dataLocations;
            return this;
        }
        public Builder dataLocations(OptInResourceDataDataLocation... dataLocations) {
            return dataLocations(List.of(dataLocations));
        }
        @CustomType.Setter
        public Builder database(@Nullable OptInResourceDataDatabase database) {

            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder lfTag(@Nullable OptInResourceDataLfTag lfTag) {

            this.lfTag = lfTag;
            return this;
        }
        @CustomType.Setter
        public Builder lfTagExpressions(@Nullable List<OptInResourceDataLfTagExpression> lfTagExpressions) {

            this.lfTagExpressions = lfTagExpressions;
            return this;
        }
        public Builder lfTagExpressions(OptInResourceDataLfTagExpression... lfTagExpressions) {
            return lfTagExpressions(List.of(lfTagExpressions));
        }
        @CustomType.Setter
        public Builder lfTagPolicies(@Nullable List<OptInResourceDataLfTagPolicy> lfTagPolicies) {

            this.lfTagPolicies = lfTagPolicies;
            return this;
        }
        public Builder lfTagPolicies(OptInResourceDataLfTagPolicy... lfTagPolicies) {
            return lfTagPolicies(List.of(lfTagPolicies));
        }
        @CustomType.Setter
        public Builder table(@Nullable OptInResourceDataTable table) {

            this.table = table;
            return this;
        }
        @CustomType.Setter
        public Builder tableWithColumns(@Nullable OptInResourceDataTableWithColumns tableWithColumns) {

            this.tableWithColumns = tableWithColumns;
            return this;
        }
        public OptInResourceData build() {
            final var _resultValue = new OptInResourceData();
            _resultValue.catalogs = catalogs;
            _resultValue.dataCellsFilters = dataCellsFilters;
            _resultValue.dataLocations = dataLocations;
            _resultValue.database = database;
            _resultValue.lfTag = lfTag;
            _resultValue.lfTagExpressions = lfTagExpressions;
            _resultValue.lfTagPolicies = lfTagPolicies;
            _resultValue.table = table;
            _resultValue.tableWithColumns = tableWithColumns;
            return _resultValue;
        }
    }
}
