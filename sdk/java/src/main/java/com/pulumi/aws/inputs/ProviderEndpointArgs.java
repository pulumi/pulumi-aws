// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderEndpointArgs Empty = new ProviderEndpointArgs();

    @Import(name="accessanalyzer")
    private @Nullable Output<String> accessanalyzer;

    public Optional<Output<String>> accessanalyzer() {
        return Optional.ofNullable(this.accessanalyzer);
    }

    @Import(name="account")
    private @Nullable Output<String> account;

    public Optional<Output<String>> account() {
        return Optional.ofNullable(this.account);
    }

    @Import(name="acm")
    private @Nullable Output<String> acm;

    public Optional<Output<String>> acm() {
        return Optional.ofNullable(this.acm);
    }

    @Import(name="acmpca")
    private @Nullable Output<String> acmpca;

    public Optional<Output<String>> acmpca() {
        return Optional.ofNullable(this.acmpca);
    }

    @Import(name="alexaforbusiness")
    private @Nullable Output<String> alexaforbusiness;

    public Optional<Output<String>> alexaforbusiness() {
        return Optional.ofNullable(this.alexaforbusiness);
    }

    @Import(name="amg")
    private @Nullable Output<String> amg;

    public Optional<Output<String>> amg() {
        return Optional.ofNullable(this.amg);
    }

    @Import(name="amp")
    private @Nullable Output<String> amp;

    public Optional<Output<String>> amp() {
        return Optional.ofNullable(this.amp);
    }

    @Import(name="amplify")
    private @Nullable Output<String> amplify;

    public Optional<Output<String>> amplify() {
        return Optional.ofNullable(this.amplify);
    }

    @Import(name="amplifybackend")
    private @Nullable Output<String> amplifybackend;

    public Optional<Output<String>> amplifybackend() {
        return Optional.ofNullable(this.amplifybackend);
    }

    @Import(name="amplifyuibuilder")
    private @Nullable Output<String> amplifyuibuilder;

    public Optional<Output<String>> amplifyuibuilder() {
        return Optional.ofNullable(this.amplifyuibuilder);
    }

    @Import(name="apigateway")
    private @Nullable Output<String> apigateway;

    public Optional<Output<String>> apigateway() {
        return Optional.ofNullable(this.apigateway);
    }

    @Import(name="apigatewaymanagementapi")
    private @Nullable Output<String> apigatewaymanagementapi;

    public Optional<Output<String>> apigatewaymanagementapi() {
        return Optional.ofNullable(this.apigatewaymanagementapi);
    }

    @Import(name="apigatewayv2")
    private @Nullable Output<String> apigatewayv2;

    public Optional<Output<String>> apigatewayv2() {
        return Optional.ofNullable(this.apigatewayv2);
    }

    @Import(name="appautoscaling")
    private @Nullable Output<String> appautoscaling;

    public Optional<Output<String>> appautoscaling() {
        return Optional.ofNullable(this.appautoscaling);
    }

    @Import(name="appconfig")
    private @Nullable Output<String> appconfig;

    public Optional<Output<String>> appconfig() {
        return Optional.ofNullable(this.appconfig);
    }

    @Import(name="appconfigdata")
    private @Nullable Output<String> appconfigdata;

    public Optional<Output<String>> appconfigdata() {
        return Optional.ofNullable(this.appconfigdata);
    }

    @Import(name="appflow")
    private @Nullable Output<String> appflow;

    public Optional<Output<String>> appflow() {
        return Optional.ofNullable(this.appflow);
    }

    @Import(name="appintegrations")
    private @Nullable Output<String> appintegrations;

    public Optional<Output<String>> appintegrations() {
        return Optional.ofNullable(this.appintegrations);
    }

    @Import(name="appintegrationsservice")
    private @Nullable Output<String> appintegrationsservice;

    public Optional<Output<String>> appintegrationsservice() {
        return Optional.ofNullable(this.appintegrationsservice);
    }

    @Import(name="applicationautoscaling")
    private @Nullable Output<String> applicationautoscaling;

    public Optional<Output<String>> applicationautoscaling() {
        return Optional.ofNullable(this.applicationautoscaling);
    }

    @Import(name="applicationcostprofiler")
    private @Nullable Output<String> applicationcostprofiler;

    public Optional<Output<String>> applicationcostprofiler() {
        return Optional.ofNullable(this.applicationcostprofiler);
    }

    @Import(name="applicationdiscovery")
    private @Nullable Output<String> applicationdiscovery;

    public Optional<Output<String>> applicationdiscovery() {
        return Optional.ofNullable(this.applicationdiscovery);
    }

    @Import(name="applicationdiscoveryservice")
    private @Nullable Output<String> applicationdiscoveryservice;

    public Optional<Output<String>> applicationdiscoveryservice() {
        return Optional.ofNullable(this.applicationdiscoveryservice);
    }

    @Import(name="applicationinsights")
    private @Nullable Output<String> applicationinsights;

    public Optional<Output<String>> applicationinsights() {
        return Optional.ofNullable(this.applicationinsights);
    }

    @Import(name="appmesh")
    private @Nullable Output<String> appmesh;

    public Optional<Output<String>> appmesh() {
        return Optional.ofNullable(this.appmesh);
    }

    @Import(name="appregistry")
    private @Nullable Output<String> appregistry;

    public Optional<Output<String>> appregistry() {
        return Optional.ofNullable(this.appregistry);
    }

    @Import(name="apprunner")
    private @Nullable Output<String> apprunner;

    public Optional<Output<String>> apprunner() {
        return Optional.ofNullable(this.apprunner);
    }

    @Import(name="appstream")
    private @Nullable Output<String> appstream;

    public Optional<Output<String>> appstream() {
        return Optional.ofNullable(this.appstream);
    }

    @Import(name="appsync")
    private @Nullable Output<String> appsync;

    public Optional<Output<String>> appsync() {
        return Optional.ofNullable(this.appsync);
    }

    @Import(name="athena")
    private @Nullable Output<String> athena;

    public Optional<Output<String>> athena() {
        return Optional.ofNullable(this.athena);
    }

    @Import(name="auditmanager")
    private @Nullable Output<String> auditmanager;

    public Optional<Output<String>> auditmanager() {
        return Optional.ofNullable(this.auditmanager);
    }

    @Import(name="augmentedairuntime")
    private @Nullable Output<String> augmentedairuntime;

    public Optional<Output<String>> augmentedairuntime() {
        return Optional.ofNullable(this.augmentedairuntime);
    }

    @Import(name="autoscaling")
    private @Nullable Output<String> autoscaling;

    public Optional<Output<String>> autoscaling() {
        return Optional.ofNullable(this.autoscaling);
    }

    @Import(name="autoscalingplans")
    private @Nullable Output<String> autoscalingplans;

    public Optional<Output<String>> autoscalingplans() {
        return Optional.ofNullable(this.autoscalingplans);
    }

    @Import(name="backup")
    private @Nullable Output<String> backup;

    public Optional<Output<String>> backup() {
        return Optional.ofNullable(this.backup);
    }

    @Import(name="backupgateway")
    private @Nullable Output<String> backupgateway;

    public Optional<Output<String>> backupgateway() {
        return Optional.ofNullable(this.backupgateway);
    }

    @Import(name="batch")
    private @Nullable Output<String> batch;

    public Optional<Output<String>> batch() {
        return Optional.ofNullable(this.batch);
    }

    @Import(name="beanstalk")
    private @Nullable Output<String> beanstalk;

    public Optional<Output<String>> beanstalk() {
        return Optional.ofNullable(this.beanstalk);
    }

    @Import(name="billingconductor")
    private @Nullable Output<String> billingconductor;

    public Optional<Output<String>> billingconductor() {
        return Optional.ofNullable(this.billingconductor);
    }

    @Import(name="braket")
    private @Nullable Output<String> braket;

    public Optional<Output<String>> braket() {
        return Optional.ofNullable(this.braket);
    }

    @Import(name="budgets")
    private @Nullable Output<String> budgets;

    public Optional<Output<String>> budgets() {
        return Optional.ofNullable(this.budgets);
    }

    @Import(name="ce")
    private @Nullable Output<String> ce;

    public Optional<Output<String>> ce() {
        return Optional.ofNullable(this.ce);
    }

    @Import(name="chime")
    private @Nullable Output<String> chime;

    public Optional<Output<String>> chime() {
        return Optional.ofNullable(this.chime);
    }

    @Import(name="chimesdkidentity")
    private @Nullable Output<String> chimesdkidentity;

    public Optional<Output<String>> chimesdkidentity() {
        return Optional.ofNullable(this.chimesdkidentity);
    }

    @Import(name="chimesdkmeetings")
    private @Nullable Output<String> chimesdkmeetings;

    public Optional<Output<String>> chimesdkmeetings() {
        return Optional.ofNullable(this.chimesdkmeetings);
    }

    @Import(name="chimesdkmessaging")
    private @Nullable Output<String> chimesdkmessaging;

    public Optional<Output<String>> chimesdkmessaging() {
        return Optional.ofNullable(this.chimesdkmessaging);
    }

    @Import(name="cloud9")
    private @Nullable Output<String> cloud9;

    public Optional<Output<String>> cloud9() {
        return Optional.ofNullable(this.cloud9);
    }

    @Import(name="cloudcontrol")
    private @Nullable Output<String> cloudcontrol;

    public Optional<Output<String>> cloudcontrol() {
        return Optional.ofNullable(this.cloudcontrol);
    }

    @Import(name="cloudcontrolapi")
    private @Nullable Output<String> cloudcontrolapi;

    public Optional<Output<String>> cloudcontrolapi() {
        return Optional.ofNullable(this.cloudcontrolapi);
    }

    @Import(name="clouddirectory")
    private @Nullable Output<String> clouddirectory;

    public Optional<Output<String>> clouddirectory() {
        return Optional.ofNullable(this.clouddirectory);
    }

    @Import(name="cloudformation")
    private @Nullable Output<String> cloudformation;

    public Optional<Output<String>> cloudformation() {
        return Optional.ofNullable(this.cloudformation);
    }

    @Import(name="cloudfront")
    private @Nullable Output<String> cloudfront;

    public Optional<Output<String>> cloudfront() {
        return Optional.ofNullable(this.cloudfront);
    }

    @Import(name="cloudhsm")
    private @Nullable Output<String> cloudhsm;

    public Optional<Output<String>> cloudhsm() {
        return Optional.ofNullable(this.cloudhsm);
    }

    @Import(name="cloudhsmv2")
    private @Nullable Output<String> cloudhsmv2;

    public Optional<Output<String>> cloudhsmv2() {
        return Optional.ofNullable(this.cloudhsmv2);
    }

    @Import(name="cloudsearch")
    private @Nullable Output<String> cloudsearch;

    public Optional<Output<String>> cloudsearch() {
        return Optional.ofNullable(this.cloudsearch);
    }

    @Import(name="cloudsearchdomain")
    private @Nullable Output<String> cloudsearchdomain;

    public Optional<Output<String>> cloudsearchdomain() {
        return Optional.ofNullable(this.cloudsearchdomain);
    }

    @Import(name="cloudtrail")
    private @Nullable Output<String> cloudtrail;

    public Optional<Output<String>> cloudtrail() {
        return Optional.ofNullable(this.cloudtrail);
    }

    @Import(name="cloudwatch")
    private @Nullable Output<String> cloudwatch;

    public Optional<Output<String>> cloudwatch() {
        return Optional.ofNullable(this.cloudwatch);
    }

    @Import(name="cloudwatchevents")
    private @Nullable Output<String> cloudwatchevents;

    public Optional<Output<String>> cloudwatchevents() {
        return Optional.ofNullable(this.cloudwatchevents);
    }

    @Import(name="cloudwatchevidently")
    private @Nullable Output<String> cloudwatchevidently;

    public Optional<Output<String>> cloudwatchevidently() {
        return Optional.ofNullable(this.cloudwatchevidently);
    }

    @Import(name="cloudwatchlog")
    private @Nullable Output<String> cloudwatchlog;

    public Optional<Output<String>> cloudwatchlog() {
        return Optional.ofNullable(this.cloudwatchlog);
    }

    @Import(name="cloudwatchlogs")
    private @Nullable Output<String> cloudwatchlogs;

    public Optional<Output<String>> cloudwatchlogs() {
        return Optional.ofNullable(this.cloudwatchlogs);
    }

    @Import(name="cloudwatchrum")
    private @Nullable Output<String> cloudwatchrum;

    public Optional<Output<String>> cloudwatchrum() {
        return Optional.ofNullable(this.cloudwatchrum);
    }

    @Import(name="codeartifact")
    private @Nullable Output<String> codeartifact;

    public Optional<Output<String>> codeartifact() {
        return Optional.ofNullable(this.codeartifact);
    }

    @Import(name="codebuild")
    private @Nullable Output<String> codebuild;

    public Optional<Output<String>> codebuild() {
        return Optional.ofNullable(this.codebuild);
    }

    @Import(name="codecommit")
    private @Nullable Output<String> codecommit;

    public Optional<Output<String>> codecommit() {
        return Optional.ofNullable(this.codecommit);
    }

    @Import(name="codedeploy")
    private @Nullable Output<String> codedeploy;

    public Optional<Output<String>> codedeploy() {
        return Optional.ofNullable(this.codedeploy);
    }

    @Import(name="codeguruprofiler")
    private @Nullable Output<String> codeguruprofiler;

    public Optional<Output<String>> codeguruprofiler() {
        return Optional.ofNullable(this.codeguruprofiler);
    }

    @Import(name="codegurureviewer")
    private @Nullable Output<String> codegurureviewer;

    public Optional<Output<String>> codegurureviewer() {
        return Optional.ofNullable(this.codegurureviewer);
    }

    @Import(name="codepipeline")
    private @Nullable Output<String> codepipeline;

    public Optional<Output<String>> codepipeline() {
        return Optional.ofNullable(this.codepipeline);
    }

    @Import(name="codestar")
    private @Nullable Output<String> codestar;

    public Optional<Output<String>> codestar() {
        return Optional.ofNullable(this.codestar);
    }

    @Import(name="codestarconnections")
    private @Nullable Output<String> codestarconnections;

    public Optional<Output<String>> codestarconnections() {
        return Optional.ofNullable(this.codestarconnections);
    }

    @Import(name="codestarnotifications")
    private @Nullable Output<String> codestarnotifications;

    public Optional<Output<String>> codestarnotifications() {
        return Optional.ofNullable(this.codestarnotifications);
    }

    @Import(name="cognitoidentity")
    private @Nullable Output<String> cognitoidentity;

    public Optional<Output<String>> cognitoidentity() {
        return Optional.ofNullable(this.cognitoidentity);
    }

    @Import(name="cognitoidentityprovider")
    private @Nullable Output<String> cognitoidentityprovider;

    public Optional<Output<String>> cognitoidentityprovider() {
        return Optional.ofNullable(this.cognitoidentityprovider);
    }

    @Import(name="cognitoidp")
    private @Nullable Output<String> cognitoidp;

    public Optional<Output<String>> cognitoidp() {
        return Optional.ofNullable(this.cognitoidp);
    }

    @Import(name="cognitosync")
    private @Nullable Output<String> cognitosync;

    public Optional<Output<String>> cognitosync() {
        return Optional.ofNullable(this.cognitosync);
    }

    @Import(name="comprehend")
    private @Nullable Output<String> comprehend;

    public Optional<Output<String>> comprehend() {
        return Optional.ofNullable(this.comprehend);
    }

    @Import(name="comprehendmedical")
    private @Nullable Output<String> comprehendmedical;

    public Optional<Output<String>> comprehendmedical() {
        return Optional.ofNullable(this.comprehendmedical);
    }

    @Import(name="computeoptimizer")
    private @Nullable Output<String> computeoptimizer;

    public Optional<Output<String>> computeoptimizer() {
        return Optional.ofNullable(this.computeoptimizer);
    }

    @Import(name="config")
    private @Nullable Output<String> config;

    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    @Import(name="configservice")
    private @Nullable Output<String> configservice;

    public Optional<Output<String>> configservice() {
        return Optional.ofNullable(this.configservice);
    }

    @Import(name="connect")
    private @Nullable Output<String> connect;

    public Optional<Output<String>> connect() {
        return Optional.ofNullable(this.connect);
    }

    @Import(name="connectcontactlens")
    private @Nullable Output<String> connectcontactlens;

    public Optional<Output<String>> connectcontactlens() {
        return Optional.ofNullable(this.connectcontactlens);
    }

    @Import(name="connectparticipant")
    private @Nullable Output<String> connectparticipant;

    public Optional<Output<String>> connectparticipant() {
        return Optional.ofNullable(this.connectparticipant);
    }

    @Import(name="connectwisdomservice")
    private @Nullable Output<String> connectwisdomservice;

    public Optional<Output<String>> connectwisdomservice() {
        return Optional.ofNullable(this.connectwisdomservice);
    }

    @Import(name="controltower")
    private @Nullable Output<String> controltower;

    public Optional<Output<String>> controltower() {
        return Optional.ofNullable(this.controltower);
    }

    @Import(name="costandusagereportservice")
    private @Nullable Output<String> costandusagereportservice;

    public Optional<Output<String>> costandusagereportservice() {
        return Optional.ofNullable(this.costandusagereportservice);
    }

    @Import(name="costexplorer")
    private @Nullable Output<String> costexplorer;

    public Optional<Output<String>> costexplorer() {
        return Optional.ofNullable(this.costexplorer);
    }

    @Import(name="cur")
    private @Nullable Output<String> cur;

    public Optional<Output<String>> cur() {
        return Optional.ofNullable(this.cur);
    }

    @Import(name="customerprofiles")
    private @Nullable Output<String> customerprofiles;

    public Optional<Output<String>> customerprofiles() {
        return Optional.ofNullable(this.customerprofiles);
    }

    @Import(name="databasemigration")
    private @Nullable Output<String> databasemigration;

    public Optional<Output<String>> databasemigration() {
        return Optional.ofNullable(this.databasemigration);
    }

    @Import(name="databasemigrationservice")
    private @Nullable Output<String> databasemigrationservice;

    public Optional<Output<String>> databasemigrationservice() {
        return Optional.ofNullable(this.databasemigrationservice);
    }

    @Import(name="databrew")
    private @Nullable Output<String> databrew;

    public Optional<Output<String>> databrew() {
        return Optional.ofNullable(this.databrew);
    }

    @Import(name="dataexchange")
    private @Nullable Output<String> dataexchange;

    public Optional<Output<String>> dataexchange() {
        return Optional.ofNullable(this.dataexchange);
    }

    @Import(name="datapipeline")
    private @Nullable Output<String> datapipeline;

    public Optional<Output<String>> datapipeline() {
        return Optional.ofNullable(this.datapipeline);
    }

    @Import(name="datasync")
    private @Nullable Output<String> datasync;

    public Optional<Output<String>> datasync() {
        return Optional.ofNullable(this.datasync);
    }

    @Import(name="dax")
    private @Nullable Output<String> dax;

    public Optional<Output<String>> dax() {
        return Optional.ofNullable(this.dax);
    }

    @Import(name="deploy")
    private @Nullable Output<String> deploy;

    public Optional<Output<String>> deploy() {
        return Optional.ofNullable(this.deploy);
    }

    @Import(name="detective")
    private @Nullable Output<String> detective;

    public Optional<Output<String>> detective() {
        return Optional.ofNullable(this.detective);
    }

    @Import(name="devicefarm")
    private @Nullable Output<String> devicefarm;

    public Optional<Output<String>> devicefarm() {
        return Optional.ofNullable(this.devicefarm);
    }

    @Import(name="devopsguru")
    private @Nullable Output<String> devopsguru;

    public Optional<Output<String>> devopsguru() {
        return Optional.ofNullable(this.devopsguru);
    }

    @Import(name="directconnect")
    private @Nullable Output<String> directconnect;

    public Optional<Output<String>> directconnect() {
        return Optional.ofNullable(this.directconnect);
    }

    @Import(name="directoryservice")
    private @Nullable Output<String> directoryservice;

    public Optional<Output<String>> directoryservice() {
        return Optional.ofNullable(this.directoryservice);
    }

    @Import(name="discovery")
    private @Nullable Output<String> discovery;

    public Optional<Output<String>> discovery() {
        return Optional.ofNullable(this.discovery);
    }

    @Import(name="dlm")
    private @Nullable Output<String> dlm;

    public Optional<Output<String>> dlm() {
        return Optional.ofNullable(this.dlm);
    }

    @Import(name="dms")
    private @Nullable Output<String> dms;

    public Optional<Output<String>> dms() {
        return Optional.ofNullable(this.dms);
    }

    @Import(name="docdb")
    private @Nullable Output<String> docdb;

    public Optional<Output<String>> docdb() {
        return Optional.ofNullable(this.docdb);
    }

    @Import(name="drs")
    private @Nullable Output<String> drs;

    public Optional<Output<String>> drs() {
        return Optional.ofNullable(this.drs);
    }

    @Import(name="ds")
    private @Nullable Output<String> ds;

    public Optional<Output<String>> ds() {
        return Optional.ofNullable(this.ds);
    }

    @Import(name="dynamodb")
    private @Nullable Output<String> dynamodb;

    public Optional<Output<String>> dynamodb() {
        return Optional.ofNullable(this.dynamodb);
    }

    @Import(name="dynamodbstreams")
    private @Nullable Output<String> dynamodbstreams;

    public Optional<Output<String>> dynamodbstreams() {
        return Optional.ofNullable(this.dynamodbstreams);
    }

    @Import(name="ebs")
    private @Nullable Output<String> ebs;

    public Optional<Output<String>> ebs() {
        return Optional.ofNullable(this.ebs);
    }

    @Import(name="ec2")
    private @Nullable Output<String> ec2;

    public Optional<Output<String>> ec2() {
        return Optional.ofNullable(this.ec2);
    }

    @Import(name="ec2instanceconnect")
    private @Nullable Output<String> ec2instanceconnect;

    public Optional<Output<String>> ec2instanceconnect() {
        return Optional.ofNullable(this.ec2instanceconnect);
    }

    @Import(name="ecr")
    private @Nullable Output<String> ecr;

    public Optional<Output<String>> ecr() {
        return Optional.ofNullable(this.ecr);
    }

    @Import(name="ecrpublic")
    private @Nullable Output<String> ecrpublic;

    public Optional<Output<String>> ecrpublic() {
        return Optional.ofNullable(this.ecrpublic);
    }

    @Import(name="ecs")
    private @Nullable Output<String> ecs;

    public Optional<Output<String>> ecs() {
        return Optional.ofNullable(this.ecs);
    }

    @Import(name="efs")
    private @Nullable Output<String> efs;

    public Optional<Output<String>> efs() {
        return Optional.ofNullable(this.efs);
    }

    @Import(name="eks")
    private @Nullable Output<String> eks;

    public Optional<Output<String>> eks() {
        return Optional.ofNullable(this.eks);
    }

    @Import(name="elasticache")
    private @Nullable Output<String> elasticache;

    public Optional<Output<String>> elasticache() {
        return Optional.ofNullable(this.elasticache);
    }

    @Import(name="elasticbeanstalk")
    private @Nullable Output<String> elasticbeanstalk;

    public Optional<Output<String>> elasticbeanstalk() {
        return Optional.ofNullable(this.elasticbeanstalk);
    }

    @Import(name="elasticinference")
    private @Nullable Output<String> elasticinference;

    public Optional<Output<String>> elasticinference() {
        return Optional.ofNullable(this.elasticinference);
    }

    @Import(name="elasticloadbalancing")
    private @Nullable Output<String> elasticloadbalancing;

    public Optional<Output<String>> elasticloadbalancing() {
        return Optional.ofNullable(this.elasticloadbalancing);
    }

    @Import(name="elasticloadbalancingv2")
    private @Nullable Output<String> elasticloadbalancingv2;

    public Optional<Output<String>> elasticloadbalancingv2() {
        return Optional.ofNullable(this.elasticloadbalancingv2);
    }

    @Import(name="elasticsearch")
    private @Nullable Output<String> elasticsearch;

    public Optional<Output<String>> elasticsearch() {
        return Optional.ofNullable(this.elasticsearch);
    }

    @Import(name="elasticsearchservice")
    private @Nullable Output<String> elasticsearchservice;

    public Optional<Output<String>> elasticsearchservice() {
        return Optional.ofNullable(this.elasticsearchservice);
    }

    @Import(name="elastictranscoder")
    private @Nullable Output<String> elastictranscoder;

    public Optional<Output<String>> elastictranscoder() {
        return Optional.ofNullable(this.elastictranscoder);
    }

    @Import(name="elb")
    private @Nullable Output<String> elb;

    public Optional<Output<String>> elb() {
        return Optional.ofNullable(this.elb);
    }

    @Import(name="elbv2")
    private @Nullable Output<String> elbv2;

    public Optional<Output<String>> elbv2() {
        return Optional.ofNullable(this.elbv2);
    }

    @Import(name="emr")
    private @Nullable Output<String> emr;

    public Optional<Output<String>> emr() {
        return Optional.ofNullable(this.emr);
    }

    @Import(name="emrcontainers")
    private @Nullable Output<String> emrcontainers;

    public Optional<Output<String>> emrcontainers() {
        return Optional.ofNullable(this.emrcontainers);
    }

    @Import(name="emrserverless")
    private @Nullable Output<String> emrserverless;

    public Optional<Output<String>> emrserverless() {
        return Optional.ofNullable(this.emrserverless);
    }

    @Import(name="es")
    private @Nullable Output<String> es;

    public Optional<Output<String>> es() {
        return Optional.ofNullable(this.es);
    }

    @Import(name="eventbridge")
    private @Nullable Output<String> eventbridge;

    public Optional<Output<String>> eventbridge() {
        return Optional.ofNullable(this.eventbridge);
    }

    @Import(name="events")
    private @Nullable Output<String> events;

    public Optional<Output<String>> events() {
        return Optional.ofNullable(this.events);
    }

    @Import(name="evidently")
    private @Nullable Output<String> evidently;

    public Optional<Output<String>> evidently() {
        return Optional.ofNullable(this.evidently);
    }

    @Import(name="finspace")
    private @Nullable Output<String> finspace;

    public Optional<Output<String>> finspace() {
        return Optional.ofNullable(this.finspace);
    }

    @Import(name="finspacedata")
    private @Nullable Output<String> finspacedata;

    public Optional<Output<String>> finspacedata() {
        return Optional.ofNullable(this.finspacedata);
    }

    @Import(name="firehose")
    private @Nullable Output<String> firehose;

    public Optional<Output<String>> firehose() {
        return Optional.ofNullable(this.firehose);
    }

    @Import(name="fis")
    private @Nullable Output<String> fis;

    public Optional<Output<String>> fis() {
        return Optional.ofNullable(this.fis);
    }

    @Import(name="fms")
    private @Nullable Output<String> fms;

    public Optional<Output<String>> fms() {
        return Optional.ofNullable(this.fms);
    }

    @Import(name="forecast")
    private @Nullable Output<String> forecast;

    public Optional<Output<String>> forecast() {
        return Optional.ofNullable(this.forecast);
    }

    @Import(name="forecastquery")
    private @Nullable Output<String> forecastquery;

    public Optional<Output<String>> forecastquery() {
        return Optional.ofNullable(this.forecastquery);
    }

    @Import(name="forecastqueryservice")
    private @Nullable Output<String> forecastqueryservice;

    public Optional<Output<String>> forecastqueryservice() {
        return Optional.ofNullable(this.forecastqueryservice);
    }

    @Import(name="forecastservice")
    private @Nullable Output<String> forecastservice;

    public Optional<Output<String>> forecastservice() {
        return Optional.ofNullable(this.forecastservice);
    }

    @Import(name="frauddetector")
    private @Nullable Output<String> frauddetector;

    public Optional<Output<String>> frauddetector() {
        return Optional.ofNullable(this.frauddetector);
    }

    @Import(name="fsx")
    private @Nullable Output<String> fsx;

    public Optional<Output<String>> fsx() {
        return Optional.ofNullable(this.fsx);
    }

    @Import(name="gamelift")
    private @Nullable Output<String> gamelift;

    public Optional<Output<String>> gamelift() {
        return Optional.ofNullable(this.gamelift);
    }

    @Import(name="glacier")
    private @Nullable Output<String> glacier;

    public Optional<Output<String>> glacier() {
        return Optional.ofNullable(this.glacier);
    }

    @Import(name="globalaccelerator")
    private @Nullable Output<String> globalaccelerator;

    public Optional<Output<String>> globalaccelerator() {
        return Optional.ofNullable(this.globalaccelerator);
    }

    @Import(name="glue")
    private @Nullable Output<String> glue;

    public Optional<Output<String>> glue() {
        return Optional.ofNullable(this.glue);
    }

    @Import(name="gluedatabrew")
    private @Nullable Output<String> gluedatabrew;

    public Optional<Output<String>> gluedatabrew() {
        return Optional.ofNullable(this.gluedatabrew);
    }

    @Import(name="grafana")
    private @Nullable Output<String> grafana;

    public Optional<Output<String>> grafana() {
        return Optional.ofNullable(this.grafana);
    }

    @Import(name="greengrass")
    private @Nullable Output<String> greengrass;

    public Optional<Output<String>> greengrass() {
        return Optional.ofNullable(this.greengrass);
    }

    @Import(name="greengrassv2")
    private @Nullable Output<String> greengrassv2;

    public Optional<Output<String>> greengrassv2() {
        return Optional.ofNullable(this.greengrassv2);
    }

    @Import(name="groundstation")
    private @Nullable Output<String> groundstation;

    public Optional<Output<String>> groundstation() {
        return Optional.ofNullable(this.groundstation);
    }

    @Import(name="guardduty")
    private @Nullable Output<String> guardduty;

    public Optional<Output<String>> guardduty() {
        return Optional.ofNullable(this.guardduty);
    }

    @Import(name="health")
    private @Nullable Output<String> health;

    public Optional<Output<String>> health() {
        return Optional.ofNullable(this.health);
    }

    @Import(name="healthlake")
    private @Nullable Output<String> healthlake;

    public Optional<Output<String>> healthlake() {
        return Optional.ofNullable(this.healthlake);
    }

    @Import(name="honeycode")
    private @Nullable Output<String> honeycode;

    public Optional<Output<String>> honeycode() {
        return Optional.ofNullable(this.honeycode);
    }

    @Import(name="iam")
    private @Nullable Output<String> iam;

    public Optional<Output<String>> iam() {
        return Optional.ofNullable(this.iam);
    }

    @Import(name="identitystore")
    private @Nullable Output<String> identitystore;

    public Optional<Output<String>> identitystore() {
        return Optional.ofNullable(this.identitystore);
    }

    @Import(name="imagebuilder")
    private @Nullable Output<String> imagebuilder;

    public Optional<Output<String>> imagebuilder() {
        return Optional.ofNullable(this.imagebuilder);
    }

    @Import(name="inspector")
    private @Nullable Output<String> inspector;

    public Optional<Output<String>> inspector() {
        return Optional.ofNullable(this.inspector);
    }

    @Import(name="inspector2")
    private @Nullable Output<String> inspector2;

    public Optional<Output<String>> inspector2() {
        return Optional.ofNullable(this.inspector2);
    }

    @Import(name="inspectorv2")
    private @Nullable Output<String> inspectorv2;

    public Optional<Output<String>> inspectorv2() {
        return Optional.ofNullable(this.inspectorv2);
    }

    @Import(name="iot")
    private @Nullable Output<String> iot;

    public Optional<Output<String>> iot() {
        return Optional.ofNullable(this.iot);
    }

    @Import(name="iot1clickdevices")
    private @Nullable Output<String> iot1clickdevices;

    public Optional<Output<String>> iot1clickdevices() {
        return Optional.ofNullable(this.iot1clickdevices);
    }

    @Import(name="iot1clickdevicesservice")
    private @Nullable Output<String> iot1clickdevicesservice;

    public Optional<Output<String>> iot1clickdevicesservice() {
        return Optional.ofNullable(this.iot1clickdevicesservice);
    }

    @Import(name="iot1clickprojects")
    private @Nullable Output<String> iot1clickprojects;

    public Optional<Output<String>> iot1clickprojects() {
        return Optional.ofNullable(this.iot1clickprojects);
    }

    @Import(name="iotanalytics")
    private @Nullable Output<String> iotanalytics;

    public Optional<Output<String>> iotanalytics() {
        return Optional.ofNullable(this.iotanalytics);
    }

    @Import(name="iotdata")
    private @Nullable Output<String> iotdata;

    public Optional<Output<String>> iotdata() {
        return Optional.ofNullable(this.iotdata);
    }

    @Import(name="iotdataplane")
    private @Nullable Output<String> iotdataplane;

    public Optional<Output<String>> iotdataplane() {
        return Optional.ofNullable(this.iotdataplane);
    }

    @Import(name="iotdeviceadvisor")
    private @Nullable Output<String> iotdeviceadvisor;

    public Optional<Output<String>> iotdeviceadvisor() {
        return Optional.ofNullable(this.iotdeviceadvisor);
    }

    @Import(name="iotevents")
    private @Nullable Output<String> iotevents;

    public Optional<Output<String>> iotevents() {
        return Optional.ofNullable(this.iotevents);
    }

    @Import(name="ioteventsdata")
    private @Nullable Output<String> ioteventsdata;

    public Optional<Output<String>> ioteventsdata() {
        return Optional.ofNullable(this.ioteventsdata);
    }

    @Import(name="iotfleethub")
    private @Nullable Output<String> iotfleethub;

    public Optional<Output<String>> iotfleethub() {
        return Optional.ofNullable(this.iotfleethub);
    }

    @Import(name="iotjobsdata")
    private @Nullable Output<String> iotjobsdata;

    public Optional<Output<String>> iotjobsdata() {
        return Optional.ofNullable(this.iotjobsdata);
    }

    @Import(name="iotjobsdataplane")
    private @Nullable Output<String> iotjobsdataplane;

    public Optional<Output<String>> iotjobsdataplane() {
        return Optional.ofNullable(this.iotjobsdataplane);
    }

    @Import(name="iotsecuretunneling")
    private @Nullable Output<String> iotsecuretunneling;

    public Optional<Output<String>> iotsecuretunneling() {
        return Optional.ofNullable(this.iotsecuretunneling);
    }

    @Import(name="iotsitewise")
    private @Nullable Output<String> iotsitewise;

    public Optional<Output<String>> iotsitewise() {
        return Optional.ofNullable(this.iotsitewise);
    }

    @Import(name="iotthingsgraph")
    private @Nullable Output<String> iotthingsgraph;

    public Optional<Output<String>> iotthingsgraph() {
        return Optional.ofNullable(this.iotthingsgraph);
    }

    @Import(name="iottwinmaker")
    private @Nullable Output<String> iottwinmaker;

    public Optional<Output<String>> iottwinmaker() {
        return Optional.ofNullable(this.iottwinmaker);
    }

    @Import(name="iotwireless")
    private @Nullable Output<String> iotwireless;

    public Optional<Output<String>> iotwireless() {
        return Optional.ofNullable(this.iotwireless);
    }

    @Import(name="ivs")
    private @Nullable Output<String> ivs;

    public Optional<Output<String>> ivs() {
        return Optional.ofNullable(this.ivs);
    }

    @Import(name="ivschat")
    private @Nullable Output<String> ivschat;

    public Optional<Output<String>> ivschat() {
        return Optional.ofNullable(this.ivschat);
    }

    @Import(name="kafka")
    private @Nullable Output<String> kafka;

    public Optional<Output<String>> kafka() {
        return Optional.ofNullable(this.kafka);
    }

    @Import(name="kafkaconnect")
    private @Nullable Output<String> kafkaconnect;

    public Optional<Output<String>> kafkaconnect() {
        return Optional.ofNullable(this.kafkaconnect);
    }

    @Import(name="kendra")
    private @Nullable Output<String> kendra;

    public Optional<Output<String>> kendra() {
        return Optional.ofNullable(this.kendra);
    }

    @Import(name="keyspaces")
    private @Nullable Output<String> keyspaces;

    public Optional<Output<String>> keyspaces() {
        return Optional.ofNullable(this.keyspaces);
    }

    @Import(name="kinesis")
    private @Nullable Output<String> kinesis;

    public Optional<Output<String>> kinesis() {
        return Optional.ofNullable(this.kinesis);
    }

    @Import(name="kinesisanalytics")
    private @Nullable Output<String> kinesisanalytics;

    public Optional<Output<String>> kinesisanalytics() {
        return Optional.ofNullable(this.kinesisanalytics);
    }

    @Import(name="kinesisanalyticsv2")
    private @Nullable Output<String> kinesisanalyticsv2;

    public Optional<Output<String>> kinesisanalyticsv2() {
        return Optional.ofNullable(this.kinesisanalyticsv2);
    }

    @Import(name="kinesisvideo")
    private @Nullable Output<String> kinesisvideo;

    public Optional<Output<String>> kinesisvideo() {
        return Optional.ofNullable(this.kinesisvideo);
    }

    @Import(name="kinesisvideoarchivedmedia")
    private @Nullable Output<String> kinesisvideoarchivedmedia;

    public Optional<Output<String>> kinesisvideoarchivedmedia() {
        return Optional.ofNullable(this.kinesisvideoarchivedmedia);
    }

    @Import(name="kinesisvideomedia")
    private @Nullable Output<String> kinesisvideomedia;

    public Optional<Output<String>> kinesisvideomedia() {
        return Optional.ofNullable(this.kinesisvideomedia);
    }

    @Import(name="kinesisvideosignaling")
    private @Nullable Output<String> kinesisvideosignaling;

    public Optional<Output<String>> kinesisvideosignaling() {
        return Optional.ofNullable(this.kinesisvideosignaling);
    }

    @Import(name="kinesisvideosignalingchannels")
    private @Nullable Output<String> kinesisvideosignalingchannels;

    public Optional<Output<String>> kinesisvideosignalingchannels() {
        return Optional.ofNullable(this.kinesisvideosignalingchannels);
    }

    @Import(name="kms")
    private @Nullable Output<String> kms;

    public Optional<Output<String>> kms() {
        return Optional.ofNullable(this.kms);
    }

    @Import(name="lakeformation")
    private @Nullable Output<String> lakeformation;

    public Optional<Output<String>> lakeformation() {
        return Optional.ofNullable(this.lakeformation);
    }

    @Import(name="lambda")
    private @Nullable Output<String> lambda;

    public Optional<Output<String>> lambda() {
        return Optional.ofNullable(this.lambda);
    }

    @Import(name="lex")
    private @Nullable Output<String> lex;

    public Optional<Output<String>> lex() {
        return Optional.ofNullable(this.lex);
    }

    @Import(name="lexmodelbuilding")
    private @Nullable Output<String> lexmodelbuilding;

    public Optional<Output<String>> lexmodelbuilding() {
        return Optional.ofNullable(this.lexmodelbuilding);
    }

    @Import(name="lexmodelbuildingservice")
    private @Nullable Output<String> lexmodelbuildingservice;

    public Optional<Output<String>> lexmodelbuildingservice() {
        return Optional.ofNullable(this.lexmodelbuildingservice);
    }

    @Import(name="lexmodels")
    private @Nullable Output<String> lexmodels;

    public Optional<Output<String>> lexmodels() {
        return Optional.ofNullable(this.lexmodels);
    }

    @Import(name="lexmodelsv2")
    private @Nullable Output<String> lexmodelsv2;

    public Optional<Output<String>> lexmodelsv2() {
        return Optional.ofNullable(this.lexmodelsv2);
    }

    @Import(name="lexruntime")
    private @Nullable Output<String> lexruntime;

    public Optional<Output<String>> lexruntime() {
        return Optional.ofNullable(this.lexruntime);
    }

    @Import(name="lexruntimeservice")
    private @Nullable Output<String> lexruntimeservice;

    public Optional<Output<String>> lexruntimeservice() {
        return Optional.ofNullable(this.lexruntimeservice);
    }

    @Import(name="lexruntimev2")
    private @Nullable Output<String> lexruntimev2;

    public Optional<Output<String>> lexruntimev2() {
        return Optional.ofNullable(this.lexruntimev2);
    }

    @Import(name="lexv2models")
    private @Nullable Output<String> lexv2models;

    public Optional<Output<String>> lexv2models() {
        return Optional.ofNullable(this.lexv2models);
    }

    @Import(name="lexv2runtime")
    private @Nullable Output<String> lexv2runtime;

    public Optional<Output<String>> lexv2runtime() {
        return Optional.ofNullable(this.lexv2runtime);
    }

    @Import(name="licensemanager")
    private @Nullable Output<String> licensemanager;

    public Optional<Output<String>> licensemanager() {
        return Optional.ofNullable(this.licensemanager);
    }

    @Import(name="lightsail")
    private @Nullable Output<String> lightsail;

    public Optional<Output<String>> lightsail() {
        return Optional.ofNullable(this.lightsail);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="locationservice")
    private @Nullable Output<String> locationservice;

    public Optional<Output<String>> locationservice() {
        return Optional.ofNullable(this.locationservice);
    }

    @Import(name="logs")
    private @Nullable Output<String> logs;

    public Optional<Output<String>> logs() {
        return Optional.ofNullable(this.logs);
    }

    @Import(name="lookoutequipment")
    private @Nullable Output<String> lookoutequipment;

    public Optional<Output<String>> lookoutequipment() {
        return Optional.ofNullable(this.lookoutequipment);
    }

    @Import(name="lookoutforvision")
    private @Nullable Output<String> lookoutforvision;

    public Optional<Output<String>> lookoutforvision() {
        return Optional.ofNullable(this.lookoutforvision);
    }

    @Import(name="lookoutmetrics")
    private @Nullable Output<String> lookoutmetrics;

    public Optional<Output<String>> lookoutmetrics() {
        return Optional.ofNullable(this.lookoutmetrics);
    }

    @Import(name="lookoutvision")
    private @Nullable Output<String> lookoutvision;

    public Optional<Output<String>> lookoutvision() {
        return Optional.ofNullable(this.lookoutvision);
    }

    @Import(name="machinelearning")
    private @Nullable Output<String> machinelearning;

    public Optional<Output<String>> machinelearning() {
        return Optional.ofNullable(this.machinelearning);
    }

    @Import(name="macie")
    private @Nullable Output<String> macie;

    public Optional<Output<String>> macie() {
        return Optional.ofNullable(this.macie);
    }

    @Import(name="macie2")
    private @Nullable Output<String> macie2;

    public Optional<Output<String>> macie2() {
        return Optional.ofNullable(this.macie2);
    }

    @Import(name="managedblockchain")
    private @Nullable Output<String> managedblockchain;

    public Optional<Output<String>> managedblockchain() {
        return Optional.ofNullable(this.managedblockchain);
    }

    @Import(name="managedgrafana")
    private @Nullable Output<String> managedgrafana;

    public Optional<Output<String>> managedgrafana() {
        return Optional.ofNullable(this.managedgrafana);
    }

    @Import(name="marketplacecatalog")
    private @Nullable Output<String> marketplacecatalog;

    public Optional<Output<String>> marketplacecatalog() {
        return Optional.ofNullable(this.marketplacecatalog);
    }

    @Import(name="marketplacecommerceanalytics")
    private @Nullable Output<String> marketplacecommerceanalytics;

    public Optional<Output<String>> marketplacecommerceanalytics() {
        return Optional.ofNullable(this.marketplacecommerceanalytics);
    }

    @Import(name="marketplaceentitlement")
    private @Nullable Output<String> marketplaceentitlement;

    public Optional<Output<String>> marketplaceentitlement() {
        return Optional.ofNullable(this.marketplaceentitlement);
    }

    @Import(name="marketplaceentitlementservice")
    private @Nullable Output<String> marketplaceentitlementservice;

    public Optional<Output<String>> marketplaceentitlementservice() {
        return Optional.ofNullable(this.marketplaceentitlementservice);
    }

    @Import(name="marketplacemetering")
    private @Nullable Output<String> marketplacemetering;

    public Optional<Output<String>> marketplacemetering() {
        return Optional.ofNullable(this.marketplacemetering);
    }

    @Import(name="mediaconnect")
    private @Nullable Output<String> mediaconnect;

    public Optional<Output<String>> mediaconnect() {
        return Optional.ofNullable(this.mediaconnect);
    }

    @Import(name="mediaconvert")
    private @Nullable Output<String> mediaconvert;

    public Optional<Output<String>> mediaconvert() {
        return Optional.ofNullable(this.mediaconvert);
    }

    @Import(name="medialive")
    private @Nullable Output<String> medialive;

    public Optional<Output<String>> medialive() {
        return Optional.ofNullable(this.medialive);
    }

    @Import(name="mediapackage")
    private @Nullable Output<String> mediapackage;

    public Optional<Output<String>> mediapackage() {
        return Optional.ofNullable(this.mediapackage);
    }

    @Import(name="mediapackagevod")
    private @Nullable Output<String> mediapackagevod;

    public Optional<Output<String>> mediapackagevod() {
        return Optional.ofNullable(this.mediapackagevod);
    }

    @Import(name="mediastore")
    private @Nullable Output<String> mediastore;

    public Optional<Output<String>> mediastore() {
        return Optional.ofNullable(this.mediastore);
    }

    @Import(name="mediastoredata")
    private @Nullable Output<String> mediastoredata;

    public Optional<Output<String>> mediastoredata() {
        return Optional.ofNullable(this.mediastoredata);
    }

    @Import(name="mediatailor")
    private @Nullable Output<String> mediatailor;

    public Optional<Output<String>> mediatailor() {
        return Optional.ofNullable(this.mediatailor);
    }

    @Import(name="memorydb")
    private @Nullable Output<String> memorydb;

    public Optional<Output<String>> memorydb() {
        return Optional.ofNullable(this.memorydb);
    }

    @Import(name="meteringmarketplace")
    private @Nullable Output<String> meteringmarketplace;

    public Optional<Output<String>> meteringmarketplace() {
        return Optional.ofNullable(this.meteringmarketplace);
    }

    @Import(name="mgh")
    private @Nullable Output<String> mgh;

    public Optional<Output<String>> mgh() {
        return Optional.ofNullable(this.mgh);
    }

    @Import(name="mgn")
    private @Nullable Output<String> mgn;

    public Optional<Output<String>> mgn() {
        return Optional.ofNullable(this.mgn);
    }

    @Import(name="migrationhub")
    private @Nullable Output<String> migrationhub;

    public Optional<Output<String>> migrationhub() {
        return Optional.ofNullable(this.migrationhub);
    }

    @Import(name="migrationhubconfig")
    private @Nullable Output<String> migrationhubconfig;

    public Optional<Output<String>> migrationhubconfig() {
        return Optional.ofNullable(this.migrationhubconfig);
    }

    @Import(name="migrationhubrefactorspaces")
    private @Nullable Output<String> migrationhubrefactorspaces;

    public Optional<Output<String>> migrationhubrefactorspaces() {
        return Optional.ofNullable(this.migrationhubrefactorspaces);
    }

    @Import(name="migrationhubstrategy")
    private @Nullable Output<String> migrationhubstrategy;

    public Optional<Output<String>> migrationhubstrategy() {
        return Optional.ofNullable(this.migrationhubstrategy);
    }

    @Import(name="migrationhubstrategyrecommendations")
    private @Nullable Output<String> migrationhubstrategyrecommendations;

    public Optional<Output<String>> migrationhubstrategyrecommendations() {
        return Optional.ofNullable(this.migrationhubstrategyrecommendations);
    }

    @Import(name="mobile")
    private @Nullable Output<String> mobile;

    public Optional<Output<String>> mobile() {
        return Optional.ofNullable(this.mobile);
    }

    @Import(name="mq")
    private @Nullable Output<String> mq;

    public Optional<Output<String>> mq() {
        return Optional.ofNullable(this.mq);
    }

    @Import(name="msk")
    private @Nullable Output<String> msk;

    public Optional<Output<String>> msk() {
        return Optional.ofNullable(this.msk);
    }

    @Import(name="mturk")
    private @Nullable Output<String> mturk;

    public Optional<Output<String>> mturk() {
        return Optional.ofNullable(this.mturk);
    }

    @Import(name="mwaa")
    private @Nullable Output<String> mwaa;

    public Optional<Output<String>> mwaa() {
        return Optional.ofNullable(this.mwaa);
    }

    @Import(name="neptune")
    private @Nullable Output<String> neptune;

    public Optional<Output<String>> neptune() {
        return Optional.ofNullable(this.neptune);
    }

    @Import(name="networkfirewall")
    private @Nullable Output<String> networkfirewall;

    public Optional<Output<String>> networkfirewall() {
        return Optional.ofNullable(this.networkfirewall);
    }

    @Import(name="networkmanager")
    private @Nullable Output<String> networkmanager;

    public Optional<Output<String>> networkmanager() {
        return Optional.ofNullable(this.networkmanager);
    }

    @Import(name="nimble")
    private @Nullable Output<String> nimble;

    public Optional<Output<String>> nimble() {
        return Optional.ofNullable(this.nimble);
    }

    @Import(name="nimblestudio")
    private @Nullable Output<String> nimblestudio;

    public Optional<Output<String>> nimblestudio() {
        return Optional.ofNullable(this.nimblestudio);
    }

    @Import(name="opensearch")
    private @Nullable Output<String> opensearch;

    public Optional<Output<String>> opensearch() {
        return Optional.ofNullable(this.opensearch);
    }

    @Import(name="opensearchserverless")
    private @Nullable Output<String> opensearchserverless;

    public Optional<Output<String>> opensearchserverless() {
        return Optional.ofNullable(this.opensearchserverless);
    }

    @Import(name="opensearchservice")
    private @Nullable Output<String> opensearchservice;

    public Optional<Output<String>> opensearchservice() {
        return Optional.ofNullable(this.opensearchservice);
    }

    @Import(name="opsworks")
    private @Nullable Output<String> opsworks;

    public Optional<Output<String>> opsworks() {
        return Optional.ofNullable(this.opsworks);
    }

    @Import(name="opsworkscm")
    private @Nullable Output<String> opsworkscm;

    public Optional<Output<String>> opsworkscm() {
        return Optional.ofNullable(this.opsworkscm);
    }

    @Import(name="organizations")
    private @Nullable Output<String> organizations;

    public Optional<Output<String>> organizations() {
        return Optional.ofNullable(this.organizations);
    }

    @Import(name="outposts")
    private @Nullable Output<String> outposts;

    public Optional<Output<String>> outposts() {
        return Optional.ofNullable(this.outposts);
    }

    @Import(name="panorama")
    private @Nullable Output<String> panorama;

    public Optional<Output<String>> panorama() {
        return Optional.ofNullable(this.panorama);
    }

    @Import(name="personalize")
    private @Nullable Output<String> personalize;

    public Optional<Output<String>> personalize() {
        return Optional.ofNullable(this.personalize);
    }

    @Import(name="personalizeevents")
    private @Nullable Output<String> personalizeevents;

    public Optional<Output<String>> personalizeevents() {
        return Optional.ofNullable(this.personalizeevents);
    }

    @Import(name="personalizeruntime")
    private @Nullable Output<String> personalizeruntime;

    public Optional<Output<String>> personalizeruntime() {
        return Optional.ofNullable(this.personalizeruntime);
    }

    @Import(name="pi")
    private @Nullable Output<String> pi;

    public Optional<Output<String>> pi() {
        return Optional.ofNullable(this.pi);
    }

    @Import(name="pinpoint")
    private @Nullable Output<String> pinpoint;

    public Optional<Output<String>> pinpoint() {
        return Optional.ofNullable(this.pinpoint);
    }

    @Import(name="pinpointemail")
    private @Nullable Output<String> pinpointemail;

    public Optional<Output<String>> pinpointemail() {
        return Optional.ofNullable(this.pinpointemail);
    }

    @Import(name="pinpointsmsvoice")
    private @Nullable Output<String> pinpointsmsvoice;

    public Optional<Output<String>> pinpointsmsvoice() {
        return Optional.ofNullable(this.pinpointsmsvoice);
    }

    @Import(name="pipes")
    private @Nullable Output<String> pipes;

    public Optional<Output<String>> pipes() {
        return Optional.ofNullable(this.pipes);
    }

    @Import(name="polly")
    private @Nullable Output<String> polly;

    public Optional<Output<String>> polly() {
        return Optional.ofNullable(this.polly);
    }

    @Import(name="pricing")
    private @Nullable Output<String> pricing;

    public Optional<Output<String>> pricing() {
        return Optional.ofNullable(this.pricing);
    }

    @Import(name="prometheus")
    private @Nullable Output<String> prometheus;

    public Optional<Output<String>> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }

    @Import(name="prometheusservice")
    private @Nullable Output<String> prometheusservice;

    public Optional<Output<String>> prometheusservice() {
        return Optional.ofNullable(this.prometheusservice);
    }

    @Import(name="proton")
    private @Nullable Output<String> proton;

    public Optional<Output<String>> proton() {
        return Optional.ofNullable(this.proton);
    }

    @Import(name="qldb")
    private @Nullable Output<String> qldb;

    public Optional<Output<String>> qldb() {
        return Optional.ofNullable(this.qldb);
    }

    @Import(name="qldbsession")
    private @Nullable Output<String> qldbsession;

    public Optional<Output<String>> qldbsession() {
        return Optional.ofNullable(this.qldbsession);
    }

    @Import(name="quicksight")
    private @Nullable Output<String> quicksight;

    public Optional<Output<String>> quicksight() {
        return Optional.ofNullable(this.quicksight);
    }

    @Import(name="ram")
    private @Nullable Output<String> ram;

    public Optional<Output<String>> ram() {
        return Optional.ofNullable(this.ram);
    }

    @Import(name="rbin")
    private @Nullable Output<String> rbin;

    public Optional<Output<String>> rbin() {
        return Optional.ofNullable(this.rbin);
    }

    @Import(name="rds")
    private @Nullable Output<String> rds;

    public Optional<Output<String>> rds() {
        return Optional.ofNullable(this.rds);
    }

    @Import(name="rdsdata")
    private @Nullable Output<String> rdsdata;

    public Optional<Output<String>> rdsdata() {
        return Optional.ofNullable(this.rdsdata);
    }

    @Import(name="rdsdataservice")
    private @Nullable Output<String> rdsdataservice;

    public Optional<Output<String>> rdsdataservice() {
        return Optional.ofNullable(this.rdsdataservice);
    }

    @Import(name="recyclebin")
    private @Nullable Output<String> recyclebin;

    public Optional<Output<String>> recyclebin() {
        return Optional.ofNullable(this.recyclebin);
    }

    @Import(name="redshift")
    private @Nullable Output<String> redshift;

    public Optional<Output<String>> redshift() {
        return Optional.ofNullable(this.redshift);
    }

    @Import(name="redshiftdata")
    private @Nullable Output<String> redshiftdata;

    public Optional<Output<String>> redshiftdata() {
        return Optional.ofNullable(this.redshiftdata);
    }

    @Import(name="redshiftdataapiservice")
    private @Nullable Output<String> redshiftdataapiservice;

    public Optional<Output<String>> redshiftdataapiservice() {
        return Optional.ofNullable(this.redshiftdataapiservice);
    }

    @Import(name="redshiftserverless")
    private @Nullable Output<String> redshiftserverless;

    public Optional<Output<String>> redshiftserverless() {
        return Optional.ofNullable(this.redshiftserverless);
    }

    @Import(name="rekognition")
    private @Nullable Output<String> rekognition;

    public Optional<Output<String>> rekognition() {
        return Optional.ofNullable(this.rekognition);
    }

    @Import(name="resiliencehub")
    private @Nullable Output<String> resiliencehub;

    public Optional<Output<String>> resiliencehub() {
        return Optional.ofNullable(this.resiliencehub);
    }

    @Import(name="resourceexplorer2")
    private @Nullable Output<String> resourceexplorer2;

    public Optional<Output<String>> resourceexplorer2() {
        return Optional.ofNullable(this.resourceexplorer2);
    }

    @Import(name="resourcegroups")
    private @Nullable Output<String> resourcegroups;

    public Optional<Output<String>> resourcegroups() {
        return Optional.ofNullable(this.resourcegroups);
    }

    @Import(name="resourcegroupstagging")
    private @Nullable Output<String> resourcegroupstagging;

    public Optional<Output<String>> resourcegroupstagging() {
        return Optional.ofNullable(this.resourcegroupstagging);
    }

    @Import(name="resourcegroupstaggingapi")
    private @Nullable Output<String> resourcegroupstaggingapi;

    public Optional<Output<String>> resourcegroupstaggingapi() {
        return Optional.ofNullable(this.resourcegroupstaggingapi);
    }

    @Import(name="robomaker")
    private @Nullable Output<String> robomaker;

    public Optional<Output<String>> robomaker() {
        return Optional.ofNullable(this.robomaker);
    }

    @Import(name="rolesanywhere")
    private @Nullable Output<String> rolesanywhere;

    public Optional<Output<String>> rolesanywhere() {
        return Optional.ofNullable(this.rolesanywhere);
    }

    @Import(name="route53")
    private @Nullable Output<String> route53;

    public Optional<Output<String>> route53() {
        return Optional.ofNullable(this.route53);
    }

    @Import(name="route53domains")
    private @Nullable Output<String> route53domains;

    public Optional<Output<String>> route53domains() {
        return Optional.ofNullable(this.route53domains);
    }

    @Import(name="route53recoverycluster")
    private @Nullable Output<String> route53recoverycluster;

    public Optional<Output<String>> route53recoverycluster() {
        return Optional.ofNullable(this.route53recoverycluster);
    }

    @Import(name="route53recoverycontrolconfig")
    private @Nullable Output<String> route53recoverycontrolconfig;

    public Optional<Output<String>> route53recoverycontrolconfig() {
        return Optional.ofNullable(this.route53recoverycontrolconfig);
    }

    @Import(name="route53recoveryreadiness")
    private @Nullable Output<String> route53recoveryreadiness;

    public Optional<Output<String>> route53recoveryreadiness() {
        return Optional.ofNullable(this.route53recoveryreadiness);
    }

    @Import(name="route53resolver")
    private @Nullable Output<String> route53resolver;

    public Optional<Output<String>> route53resolver() {
        return Optional.ofNullable(this.route53resolver);
    }

    @Import(name="rum")
    private @Nullable Output<String> rum;

    public Optional<Output<String>> rum() {
        return Optional.ofNullable(this.rum);
    }

    @Import(name="s3")
    private @Nullable Output<String> s3;

    public Optional<Output<String>> s3() {
        return Optional.ofNullable(this.s3);
    }

    @Import(name="s3api")
    private @Nullable Output<String> s3api;

    public Optional<Output<String>> s3api() {
        return Optional.ofNullable(this.s3api);
    }

    @Import(name="s3control")
    private @Nullable Output<String> s3control;

    public Optional<Output<String>> s3control() {
        return Optional.ofNullable(this.s3control);
    }

    @Import(name="s3outposts")
    private @Nullable Output<String> s3outposts;

    public Optional<Output<String>> s3outposts() {
        return Optional.ofNullable(this.s3outposts);
    }

    @Import(name="sagemaker")
    private @Nullable Output<String> sagemaker;

    public Optional<Output<String>> sagemaker() {
        return Optional.ofNullable(this.sagemaker);
    }

    @Import(name="sagemakera2iruntime")
    private @Nullable Output<String> sagemakera2iruntime;

    public Optional<Output<String>> sagemakera2iruntime() {
        return Optional.ofNullable(this.sagemakera2iruntime);
    }

    @Import(name="sagemakeredge")
    private @Nullable Output<String> sagemakeredge;

    public Optional<Output<String>> sagemakeredge() {
        return Optional.ofNullable(this.sagemakeredge);
    }

    @Import(name="sagemakeredgemanager")
    private @Nullable Output<String> sagemakeredgemanager;

    public Optional<Output<String>> sagemakeredgemanager() {
        return Optional.ofNullable(this.sagemakeredgemanager);
    }

    @Import(name="sagemakerfeaturestoreruntime")
    private @Nullable Output<String> sagemakerfeaturestoreruntime;

    public Optional<Output<String>> sagemakerfeaturestoreruntime() {
        return Optional.ofNullable(this.sagemakerfeaturestoreruntime);
    }

    @Import(name="sagemakerruntime")
    private @Nullable Output<String> sagemakerruntime;

    public Optional<Output<String>> sagemakerruntime() {
        return Optional.ofNullable(this.sagemakerruntime);
    }

    @Import(name="savingsplans")
    private @Nullable Output<String> savingsplans;

    public Optional<Output<String>> savingsplans() {
        return Optional.ofNullable(this.savingsplans);
    }

    @Import(name="scheduler")
    private @Nullable Output<String> scheduler;

    public Optional<Output<String>> scheduler() {
        return Optional.ofNullable(this.scheduler);
    }

    @Import(name="schemas")
    private @Nullable Output<String> schemas;

    public Optional<Output<String>> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    @Import(name="sdb")
    private @Nullable Output<String> sdb;

    public Optional<Output<String>> sdb() {
        return Optional.ofNullable(this.sdb);
    }

    @Import(name="secretsmanager")
    private @Nullable Output<String> secretsmanager;

    public Optional<Output<String>> secretsmanager() {
        return Optional.ofNullable(this.secretsmanager);
    }

    @Import(name="securityhub")
    private @Nullable Output<String> securityhub;

    public Optional<Output<String>> securityhub() {
        return Optional.ofNullable(this.securityhub);
    }

    @Import(name="serverlessapplicationrepository")
    private @Nullable Output<String> serverlessapplicationrepository;

    public Optional<Output<String>> serverlessapplicationrepository() {
        return Optional.ofNullable(this.serverlessapplicationrepository);
    }

    @Import(name="serverlessapprepo")
    private @Nullable Output<String> serverlessapprepo;

    public Optional<Output<String>> serverlessapprepo() {
        return Optional.ofNullable(this.serverlessapprepo);
    }

    @Import(name="serverlessrepo")
    private @Nullable Output<String> serverlessrepo;

    public Optional<Output<String>> serverlessrepo() {
        return Optional.ofNullable(this.serverlessrepo);
    }

    @Import(name="servicecatalog")
    private @Nullable Output<String> servicecatalog;

    public Optional<Output<String>> servicecatalog() {
        return Optional.ofNullable(this.servicecatalog);
    }

    @Import(name="servicecatalogappregistry")
    private @Nullable Output<String> servicecatalogappregistry;

    public Optional<Output<String>> servicecatalogappregistry() {
        return Optional.ofNullable(this.servicecatalogappregistry);
    }

    @Import(name="servicediscovery")
    private @Nullable Output<String> servicediscovery;

    public Optional<Output<String>> servicediscovery() {
        return Optional.ofNullable(this.servicediscovery);
    }

    @Import(name="servicequotas")
    private @Nullable Output<String> servicequotas;

    public Optional<Output<String>> servicequotas() {
        return Optional.ofNullable(this.servicequotas);
    }

    @Import(name="ses")
    private @Nullable Output<String> ses;

    public Optional<Output<String>> ses() {
        return Optional.ofNullable(this.ses);
    }

    @Import(name="sesv2")
    private @Nullable Output<String> sesv2;

    public Optional<Output<String>> sesv2() {
        return Optional.ofNullable(this.sesv2);
    }

    @Import(name="sfn")
    private @Nullable Output<String> sfn;

    public Optional<Output<String>> sfn() {
        return Optional.ofNullable(this.sfn);
    }

    @Import(name="shield")
    private @Nullable Output<String> shield;

    public Optional<Output<String>> shield() {
        return Optional.ofNullable(this.shield);
    }

    @Import(name="signer")
    private @Nullable Output<String> signer;

    public Optional<Output<String>> signer() {
        return Optional.ofNullable(this.signer);
    }

    @Import(name="simpledb")
    private @Nullable Output<String> simpledb;

    public Optional<Output<String>> simpledb() {
        return Optional.ofNullable(this.simpledb);
    }

    @Import(name="sms")
    private @Nullable Output<String> sms;

    public Optional<Output<String>> sms() {
        return Optional.ofNullable(this.sms);
    }

    @Import(name="snowball")
    private @Nullable Output<String> snowball;

    public Optional<Output<String>> snowball() {
        return Optional.ofNullable(this.snowball);
    }

    @Import(name="snowdevicemanagement")
    private @Nullable Output<String> snowdevicemanagement;

    public Optional<Output<String>> snowdevicemanagement() {
        return Optional.ofNullable(this.snowdevicemanagement);
    }

    @Import(name="sns")
    private @Nullable Output<String> sns;

    public Optional<Output<String>> sns() {
        return Optional.ofNullable(this.sns);
    }

    @Import(name="sqs")
    private @Nullable Output<String> sqs;

    public Optional<Output<String>> sqs() {
        return Optional.ofNullable(this.sqs);
    }

    @Import(name="ssm")
    private @Nullable Output<String> ssm;

    public Optional<Output<String>> ssm() {
        return Optional.ofNullable(this.ssm);
    }

    @Import(name="ssmcontacts")
    private @Nullable Output<String> ssmcontacts;

    public Optional<Output<String>> ssmcontacts() {
        return Optional.ofNullable(this.ssmcontacts);
    }

    @Import(name="ssmincidents")
    private @Nullable Output<String> ssmincidents;

    public Optional<Output<String>> ssmincidents() {
        return Optional.ofNullable(this.ssmincidents);
    }

    @Import(name="sso")
    private @Nullable Output<String> sso;

    public Optional<Output<String>> sso() {
        return Optional.ofNullable(this.sso);
    }

    @Import(name="ssoadmin")
    private @Nullable Output<String> ssoadmin;

    public Optional<Output<String>> ssoadmin() {
        return Optional.ofNullable(this.ssoadmin);
    }

    @Import(name="ssooidc")
    private @Nullable Output<String> ssooidc;

    public Optional<Output<String>> ssooidc() {
        return Optional.ofNullable(this.ssooidc);
    }

    @Import(name="stepfunctions")
    private @Nullable Output<String> stepfunctions;

    public Optional<Output<String>> stepfunctions() {
        return Optional.ofNullable(this.stepfunctions);
    }

    @Import(name="storagegateway")
    private @Nullable Output<String> storagegateway;

    public Optional<Output<String>> storagegateway() {
        return Optional.ofNullable(this.storagegateway);
    }

    @Import(name="sts")
    private @Nullable Output<String> sts;

    public Optional<Output<String>> sts() {
        return Optional.ofNullable(this.sts);
    }

    @Import(name="support")
    private @Nullable Output<String> support;

    public Optional<Output<String>> support() {
        return Optional.ofNullable(this.support);
    }

    @Import(name="swf")
    private @Nullable Output<String> swf;

    public Optional<Output<String>> swf() {
        return Optional.ofNullable(this.swf);
    }

    @Import(name="synthetics")
    private @Nullable Output<String> synthetics;

    public Optional<Output<String>> synthetics() {
        return Optional.ofNullable(this.synthetics);
    }

    @Import(name="textract")
    private @Nullable Output<String> textract;

    public Optional<Output<String>> textract() {
        return Optional.ofNullable(this.textract);
    }

    @Import(name="timestreamquery")
    private @Nullable Output<String> timestreamquery;

    public Optional<Output<String>> timestreamquery() {
        return Optional.ofNullable(this.timestreamquery);
    }

    @Import(name="timestreamwrite")
    private @Nullable Output<String> timestreamwrite;

    public Optional<Output<String>> timestreamwrite() {
        return Optional.ofNullable(this.timestreamwrite);
    }

    @Import(name="transcribe")
    private @Nullable Output<String> transcribe;

    public Optional<Output<String>> transcribe() {
        return Optional.ofNullable(this.transcribe);
    }

    @Import(name="transcribeservice")
    private @Nullable Output<String> transcribeservice;

    public Optional<Output<String>> transcribeservice() {
        return Optional.ofNullable(this.transcribeservice);
    }

    @Import(name="transcribestreaming")
    private @Nullable Output<String> transcribestreaming;

    public Optional<Output<String>> transcribestreaming() {
        return Optional.ofNullable(this.transcribestreaming);
    }

    @Import(name="transcribestreamingservice")
    private @Nullable Output<String> transcribestreamingservice;

    public Optional<Output<String>> transcribestreamingservice() {
        return Optional.ofNullable(this.transcribestreamingservice);
    }

    @Import(name="transfer")
    private @Nullable Output<String> transfer;

    public Optional<Output<String>> transfer() {
        return Optional.ofNullable(this.transfer);
    }

    @Import(name="translate")
    private @Nullable Output<String> translate;

    public Optional<Output<String>> translate() {
        return Optional.ofNullable(this.translate);
    }

    @Import(name="voiceid")
    private @Nullable Output<String> voiceid;

    public Optional<Output<String>> voiceid() {
        return Optional.ofNullable(this.voiceid);
    }

    @Import(name="waf")
    private @Nullable Output<String> waf;

    public Optional<Output<String>> waf() {
        return Optional.ofNullable(this.waf);
    }

    @Import(name="wafregional")
    private @Nullable Output<String> wafregional;

    public Optional<Output<String>> wafregional() {
        return Optional.ofNullable(this.wafregional);
    }

    @Import(name="wafv2")
    private @Nullable Output<String> wafv2;

    public Optional<Output<String>> wafv2() {
        return Optional.ofNullable(this.wafv2);
    }

    @Import(name="wellarchitected")
    private @Nullable Output<String> wellarchitected;

    public Optional<Output<String>> wellarchitected() {
        return Optional.ofNullable(this.wellarchitected);
    }

    @Import(name="wisdom")
    private @Nullable Output<String> wisdom;

    public Optional<Output<String>> wisdom() {
        return Optional.ofNullable(this.wisdom);
    }

    @Import(name="workdocs")
    private @Nullable Output<String> workdocs;

    public Optional<Output<String>> workdocs() {
        return Optional.ofNullable(this.workdocs);
    }

    @Import(name="worklink")
    private @Nullable Output<String> worklink;

    public Optional<Output<String>> worklink() {
        return Optional.ofNullable(this.worklink);
    }

    @Import(name="workmail")
    private @Nullable Output<String> workmail;

    public Optional<Output<String>> workmail() {
        return Optional.ofNullable(this.workmail);
    }

    @Import(name="workmailmessageflow")
    private @Nullable Output<String> workmailmessageflow;

    public Optional<Output<String>> workmailmessageflow() {
        return Optional.ofNullable(this.workmailmessageflow);
    }

    @Import(name="workspaces")
    private @Nullable Output<String> workspaces;

    public Optional<Output<String>> workspaces() {
        return Optional.ofNullable(this.workspaces);
    }

    @Import(name="workspacesweb")
    private @Nullable Output<String> workspacesweb;

    public Optional<Output<String>> workspacesweb() {
        return Optional.ofNullable(this.workspacesweb);
    }

    @Import(name="xray")
    private @Nullable Output<String> xray;

    public Optional<Output<String>> xray() {
        return Optional.ofNullable(this.xray);
    }

    private ProviderEndpointArgs() {}

    private ProviderEndpointArgs(ProviderEndpointArgs $) {
        this.accessanalyzer = $.accessanalyzer;
        this.account = $.account;
        this.acm = $.acm;
        this.acmpca = $.acmpca;
        this.alexaforbusiness = $.alexaforbusiness;
        this.amg = $.amg;
        this.amp = $.amp;
        this.amplify = $.amplify;
        this.amplifybackend = $.amplifybackend;
        this.amplifyuibuilder = $.amplifyuibuilder;
        this.apigateway = $.apigateway;
        this.apigatewaymanagementapi = $.apigatewaymanagementapi;
        this.apigatewayv2 = $.apigatewayv2;
        this.appautoscaling = $.appautoscaling;
        this.appconfig = $.appconfig;
        this.appconfigdata = $.appconfigdata;
        this.appflow = $.appflow;
        this.appintegrations = $.appintegrations;
        this.appintegrationsservice = $.appintegrationsservice;
        this.applicationautoscaling = $.applicationautoscaling;
        this.applicationcostprofiler = $.applicationcostprofiler;
        this.applicationdiscovery = $.applicationdiscovery;
        this.applicationdiscoveryservice = $.applicationdiscoveryservice;
        this.applicationinsights = $.applicationinsights;
        this.appmesh = $.appmesh;
        this.appregistry = $.appregistry;
        this.apprunner = $.apprunner;
        this.appstream = $.appstream;
        this.appsync = $.appsync;
        this.athena = $.athena;
        this.auditmanager = $.auditmanager;
        this.augmentedairuntime = $.augmentedairuntime;
        this.autoscaling = $.autoscaling;
        this.autoscalingplans = $.autoscalingplans;
        this.backup = $.backup;
        this.backupgateway = $.backupgateway;
        this.batch = $.batch;
        this.beanstalk = $.beanstalk;
        this.billingconductor = $.billingconductor;
        this.braket = $.braket;
        this.budgets = $.budgets;
        this.ce = $.ce;
        this.chime = $.chime;
        this.chimesdkidentity = $.chimesdkidentity;
        this.chimesdkmeetings = $.chimesdkmeetings;
        this.chimesdkmessaging = $.chimesdkmessaging;
        this.cloud9 = $.cloud9;
        this.cloudcontrol = $.cloudcontrol;
        this.cloudcontrolapi = $.cloudcontrolapi;
        this.clouddirectory = $.clouddirectory;
        this.cloudformation = $.cloudformation;
        this.cloudfront = $.cloudfront;
        this.cloudhsm = $.cloudhsm;
        this.cloudhsmv2 = $.cloudhsmv2;
        this.cloudsearch = $.cloudsearch;
        this.cloudsearchdomain = $.cloudsearchdomain;
        this.cloudtrail = $.cloudtrail;
        this.cloudwatch = $.cloudwatch;
        this.cloudwatchevents = $.cloudwatchevents;
        this.cloudwatchevidently = $.cloudwatchevidently;
        this.cloudwatchlog = $.cloudwatchlog;
        this.cloudwatchlogs = $.cloudwatchlogs;
        this.cloudwatchrum = $.cloudwatchrum;
        this.codeartifact = $.codeartifact;
        this.codebuild = $.codebuild;
        this.codecommit = $.codecommit;
        this.codedeploy = $.codedeploy;
        this.codeguruprofiler = $.codeguruprofiler;
        this.codegurureviewer = $.codegurureviewer;
        this.codepipeline = $.codepipeline;
        this.codestar = $.codestar;
        this.codestarconnections = $.codestarconnections;
        this.codestarnotifications = $.codestarnotifications;
        this.cognitoidentity = $.cognitoidentity;
        this.cognitoidentityprovider = $.cognitoidentityprovider;
        this.cognitoidp = $.cognitoidp;
        this.cognitosync = $.cognitosync;
        this.comprehend = $.comprehend;
        this.comprehendmedical = $.comprehendmedical;
        this.computeoptimizer = $.computeoptimizer;
        this.config = $.config;
        this.configservice = $.configservice;
        this.connect = $.connect;
        this.connectcontactlens = $.connectcontactlens;
        this.connectparticipant = $.connectparticipant;
        this.connectwisdomservice = $.connectwisdomservice;
        this.controltower = $.controltower;
        this.costandusagereportservice = $.costandusagereportservice;
        this.costexplorer = $.costexplorer;
        this.cur = $.cur;
        this.customerprofiles = $.customerprofiles;
        this.databasemigration = $.databasemigration;
        this.databasemigrationservice = $.databasemigrationservice;
        this.databrew = $.databrew;
        this.dataexchange = $.dataexchange;
        this.datapipeline = $.datapipeline;
        this.datasync = $.datasync;
        this.dax = $.dax;
        this.deploy = $.deploy;
        this.detective = $.detective;
        this.devicefarm = $.devicefarm;
        this.devopsguru = $.devopsguru;
        this.directconnect = $.directconnect;
        this.directoryservice = $.directoryservice;
        this.discovery = $.discovery;
        this.dlm = $.dlm;
        this.dms = $.dms;
        this.docdb = $.docdb;
        this.drs = $.drs;
        this.ds = $.ds;
        this.dynamodb = $.dynamodb;
        this.dynamodbstreams = $.dynamodbstreams;
        this.ebs = $.ebs;
        this.ec2 = $.ec2;
        this.ec2instanceconnect = $.ec2instanceconnect;
        this.ecr = $.ecr;
        this.ecrpublic = $.ecrpublic;
        this.ecs = $.ecs;
        this.efs = $.efs;
        this.eks = $.eks;
        this.elasticache = $.elasticache;
        this.elasticbeanstalk = $.elasticbeanstalk;
        this.elasticinference = $.elasticinference;
        this.elasticloadbalancing = $.elasticloadbalancing;
        this.elasticloadbalancingv2 = $.elasticloadbalancingv2;
        this.elasticsearch = $.elasticsearch;
        this.elasticsearchservice = $.elasticsearchservice;
        this.elastictranscoder = $.elastictranscoder;
        this.elb = $.elb;
        this.elbv2 = $.elbv2;
        this.emr = $.emr;
        this.emrcontainers = $.emrcontainers;
        this.emrserverless = $.emrserverless;
        this.es = $.es;
        this.eventbridge = $.eventbridge;
        this.events = $.events;
        this.evidently = $.evidently;
        this.finspace = $.finspace;
        this.finspacedata = $.finspacedata;
        this.firehose = $.firehose;
        this.fis = $.fis;
        this.fms = $.fms;
        this.forecast = $.forecast;
        this.forecastquery = $.forecastquery;
        this.forecastqueryservice = $.forecastqueryservice;
        this.forecastservice = $.forecastservice;
        this.frauddetector = $.frauddetector;
        this.fsx = $.fsx;
        this.gamelift = $.gamelift;
        this.glacier = $.glacier;
        this.globalaccelerator = $.globalaccelerator;
        this.glue = $.glue;
        this.gluedatabrew = $.gluedatabrew;
        this.grafana = $.grafana;
        this.greengrass = $.greengrass;
        this.greengrassv2 = $.greengrassv2;
        this.groundstation = $.groundstation;
        this.guardduty = $.guardduty;
        this.health = $.health;
        this.healthlake = $.healthlake;
        this.honeycode = $.honeycode;
        this.iam = $.iam;
        this.identitystore = $.identitystore;
        this.imagebuilder = $.imagebuilder;
        this.inspector = $.inspector;
        this.inspector2 = $.inspector2;
        this.inspectorv2 = $.inspectorv2;
        this.iot = $.iot;
        this.iot1clickdevices = $.iot1clickdevices;
        this.iot1clickdevicesservice = $.iot1clickdevicesservice;
        this.iot1clickprojects = $.iot1clickprojects;
        this.iotanalytics = $.iotanalytics;
        this.iotdata = $.iotdata;
        this.iotdataplane = $.iotdataplane;
        this.iotdeviceadvisor = $.iotdeviceadvisor;
        this.iotevents = $.iotevents;
        this.ioteventsdata = $.ioteventsdata;
        this.iotfleethub = $.iotfleethub;
        this.iotjobsdata = $.iotjobsdata;
        this.iotjobsdataplane = $.iotjobsdataplane;
        this.iotsecuretunneling = $.iotsecuretunneling;
        this.iotsitewise = $.iotsitewise;
        this.iotthingsgraph = $.iotthingsgraph;
        this.iottwinmaker = $.iottwinmaker;
        this.iotwireless = $.iotwireless;
        this.ivs = $.ivs;
        this.ivschat = $.ivschat;
        this.kafka = $.kafka;
        this.kafkaconnect = $.kafkaconnect;
        this.kendra = $.kendra;
        this.keyspaces = $.keyspaces;
        this.kinesis = $.kinesis;
        this.kinesisanalytics = $.kinesisanalytics;
        this.kinesisanalyticsv2 = $.kinesisanalyticsv2;
        this.kinesisvideo = $.kinesisvideo;
        this.kinesisvideoarchivedmedia = $.kinesisvideoarchivedmedia;
        this.kinesisvideomedia = $.kinesisvideomedia;
        this.kinesisvideosignaling = $.kinesisvideosignaling;
        this.kinesisvideosignalingchannels = $.kinesisvideosignalingchannels;
        this.kms = $.kms;
        this.lakeformation = $.lakeformation;
        this.lambda = $.lambda;
        this.lex = $.lex;
        this.lexmodelbuilding = $.lexmodelbuilding;
        this.lexmodelbuildingservice = $.lexmodelbuildingservice;
        this.lexmodels = $.lexmodels;
        this.lexmodelsv2 = $.lexmodelsv2;
        this.lexruntime = $.lexruntime;
        this.lexruntimeservice = $.lexruntimeservice;
        this.lexruntimev2 = $.lexruntimev2;
        this.lexv2models = $.lexv2models;
        this.lexv2runtime = $.lexv2runtime;
        this.licensemanager = $.licensemanager;
        this.lightsail = $.lightsail;
        this.location = $.location;
        this.locationservice = $.locationservice;
        this.logs = $.logs;
        this.lookoutequipment = $.lookoutequipment;
        this.lookoutforvision = $.lookoutforvision;
        this.lookoutmetrics = $.lookoutmetrics;
        this.lookoutvision = $.lookoutvision;
        this.machinelearning = $.machinelearning;
        this.macie = $.macie;
        this.macie2 = $.macie2;
        this.managedblockchain = $.managedblockchain;
        this.managedgrafana = $.managedgrafana;
        this.marketplacecatalog = $.marketplacecatalog;
        this.marketplacecommerceanalytics = $.marketplacecommerceanalytics;
        this.marketplaceentitlement = $.marketplaceentitlement;
        this.marketplaceentitlementservice = $.marketplaceentitlementservice;
        this.marketplacemetering = $.marketplacemetering;
        this.mediaconnect = $.mediaconnect;
        this.mediaconvert = $.mediaconvert;
        this.medialive = $.medialive;
        this.mediapackage = $.mediapackage;
        this.mediapackagevod = $.mediapackagevod;
        this.mediastore = $.mediastore;
        this.mediastoredata = $.mediastoredata;
        this.mediatailor = $.mediatailor;
        this.memorydb = $.memorydb;
        this.meteringmarketplace = $.meteringmarketplace;
        this.mgh = $.mgh;
        this.mgn = $.mgn;
        this.migrationhub = $.migrationhub;
        this.migrationhubconfig = $.migrationhubconfig;
        this.migrationhubrefactorspaces = $.migrationhubrefactorspaces;
        this.migrationhubstrategy = $.migrationhubstrategy;
        this.migrationhubstrategyrecommendations = $.migrationhubstrategyrecommendations;
        this.mobile = $.mobile;
        this.mq = $.mq;
        this.msk = $.msk;
        this.mturk = $.mturk;
        this.mwaa = $.mwaa;
        this.neptune = $.neptune;
        this.networkfirewall = $.networkfirewall;
        this.networkmanager = $.networkmanager;
        this.nimble = $.nimble;
        this.nimblestudio = $.nimblestudio;
        this.opensearch = $.opensearch;
        this.opensearchserverless = $.opensearchserverless;
        this.opensearchservice = $.opensearchservice;
        this.opsworks = $.opsworks;
        this.opsworkscm = $.opsworkscm;
        this.organizations = $.organizations;
        this.outposts = $.outposts;
        this.panorama = $.panorama;
        this.personalize = $.personalize;
        this.personalizeevents = $.personalizeevents;
        this.personalizeruntime = $.personalizeruntime;
        this.pi = $.pi;
        this.pinpoint = $.pinpoint;
        this.pinpointemail = $.pinpointemail;
        this.pinpointsmsvoice = $.pinpointsmsvoice;
        this.pipes = $.pipes;
        this.polly = $.polly;
        this.pricing = $.pricing;
        this.prometheus = $.prometheus;
        this.prometheusservice = $.prometheusservice;
        this.proton = $.proton;
        this.qldb = $.qldb;
        this.qldbsession = $.qldbsession;
        this.quicksight = $.quicksight;
        this.ram = $.ram;
        this.rbin = $.rbin;
        this.rds = $.rds;
        this.rdsdata = $.rdsdata;
        this.rdsdataservice = $.rdsdataservice;
        this.recyclebin = $.recyclebin;
        this.redshift = $.redshift;
        this.redshiftdata = $.redshiftdata;
        this.redshiftdataapiservice = $.redshiftdataapiservice;
        this.redshiftserverless = $.redshiftserverless;
        this.rekognition = $.rekognition;
        this.resiliencehub = $.resiliencehub;
        this.resourceexplorer2 = $.resourceexplorer2;
        this.resourcegroups = $.resourcegroups;
        this.resourcegroupstagging = $.resourcegroupstagging;
        this.resourcegroupstaggingapi = $.resourcegroupstaggingapi;
        this.robomaker = $.robomaker;
        this.rolesanywhere = $.rolesanywhere;
        this.route53 = $.route53;
        this.route53domains = $.route53domains;
        this.route53recoverycluster = $.route53recoverycluster;
        this.route53recoverycontrolconfig = $.route53recoverycontrolconfig;
        this.route53recoveryreadiness = $.route53recoveryreadiness;
        this.route53resolver = $.route53resolver;
        this.rum = $.rum;
        this.s3 = $.s3;
        this.s3api = $.s3api;
        this.s3control = $.s3control;
        this.s3outposts = $.s3outposts;
        this.sagemaker = $.sagemaker;
        this.sagemakera2iruntime = $.sagemakera2iruntime;
        this.sagemakeredge = $.sagemakeredge;
        this.sagemakeredgemanager = $.sagemakeredgemanager;
        this.sagemakerfeaturestoreruntime = $.sagemakerfeaturestoreruntime;
        this.sagemakerruntime = $.sagemakerruntime;
        this.savingsplans = $.savingsplans;
        this.scheduler = $.scheduler;
        this.schemas = $.schemas;
        this.sdb = $.sdb;
        this.secretsmanager = $.secretsmanager;
        this.securityhub = $.securityhub;
        this.serverlessapplicationrepository = $.serverlessapplicationrepository;
        this.serverlessapprepo = $.serverlessapprepo;
        this.serverlessrepo = $.serverlessrepo;
        this.servicecatalog = $.servicecatalog;
        this.servicecatalogappregistry = $.servicecatalogappregistry;
        this.servicediscovery = $.servicediscovery;
        this.servicequotas = $.servicequotas;
        this.ses = $.ses;
        this.sesv2 = $.sesv2;
        this.sfn = $.sfn;
        this.shield = $.shield;
        this.signer = $.signer;
        this.simpledb = $.simpledb;
        this.sms = $.sms;
        this.snowball = $.snowball;
        this.snowdevicemanagement = $.snowdevicemanagement;
        this.sns = $.sns;
        this.sqs = $.sqs;
        this.ssm = $.ssm;
        this.ssmcontacts = $.ssmcontacts;
        this.ssmincidents = $.ssmincidents;
        this.sso = $.sso;
        this.ssoadmin = $.ssoadmin;
        this.ssooidc = $.ssooidc;
        this.stepfunctions = $.stepfunctions;
        this.storagegateway = $.storagegateway;
        this.sts = $.sts;
        this.support = $.support;
        this.swf = $.swf;
        this.synthetics = $.synthetics;
        this.textract = $.textract;
        this.timestreamquery = $.timestreamquery;
        this.timestreamwrite = $.timestreamwrite;
        this.transcribe = $.transcribe;
        this.transcribeservice = $.transcribeservice;
        this.transcribestreaming = $.transcribestreaming;
        this.transcribestreamingservice = $.transcribestreamingservice;
        this.transfer = $.transfer;
        this.translate = $.translate;
        this.voiceid = $.voiceid;
        this.waf = $.waf;
        this.wafregional = $.wafregional;
        this.wafv2 = $.wafv2;
        this.wellarchitected = $.wellarchitected;
        this.wisdom = $.wisdom;
        this.workdocs = $.workdocs;
        this.worklink = $.worklink;
        this.workmail = $.workmail;
        this.workmailmessageflow = $.workmailmessageflow;
        this.workspaces = $.workspaces;
        this.workspacesweb = $.workspacesweb;
        this.xray = $.xray;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderEndpointArgs $;

        public Builder() {
            $ = new ProviderEndpointArgs();
        }

        public Builder(ProviderEndpointArgs defaults) {
            $ = new ProviderEndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessanalyzer(@Nullable Output<String> accessanalyzer) {
            $.accessanalyzer = accessanalyzer;
            return this;
        }

        public Builder accessanalyzer(String accessanalyzer) {
            return accessanalyzer(Output.of(accessanalyzer));
        }

        public Builder account(@Nullable Output<String> account) {
            $.account = account;
            return this;
        }

        public Builder account(String account) {
            return account(Output.of(account));
        }

        public Builder acm(@Nullable Output<String> acm) {
            $.acm = acm;
            return this;
        }

        public Builder acm(String acm) {
            return acm(Output.of(acm));
        }

        public Builder acmpca(@Nullable Output<String> acmpca) {
            $.acmpca = acmpca;
            return this;
        }

        public Builder acmpca(String acmpca) {
            return acmpca(Output.of(acmpca));
        }

        public Builder alexaforbusiness(@Nullable Output<String> alexaforbusiness) {
            $.alexaforbusiness = alexaforbusiness;
            return this;
        }

        public Builder alexaforbusiness(String alexaforbusiness) {
            return alexaforbusiness(Output.of(alexaforbusiness));
        }

        public Builder amg(@Nullable Output<String> amg) {
            $.amg = amg;
            return this;
        }

        public Builder amg(String amg) {
            return amg(Output.of(amg));
        }

        public Builder amp(@Nullable Output<String> amp) {
            $.amp = amp;
            return this;
        }

        public Builder amp(String amp) {
            return amp(Output.of(amp));
        }

        public Builder amplify(@Nullable Output<String> amplify) {
            $.amplify = amplify;
            return this;
        }

        public Builder amplify(String amplify) {
            return amplify(Output.of(amplify));
        }

        public Builder amplifybackend(@Nullable Output<String> amplifybackend) {
            $.amplifybackend = amplifybackend;
            return this;
        }

        public Builder amplifybackend(String amplifybackend) {
            return amplifybackend(Output.of(amplifybackend));
        }

        public Builder amplifyuibuilder(@Nullable Output<String> amplifyuibuilder) {
            $.amplifyuibuilder = amplifyuibuilder;
            return this;
        }

        public Builder amplifyuibuilder(String amplifyuibuilder) {
            return amplifyuibuilder(Output.of(amplifyuibuilder));
        }

        public Builder apigateway(@Nullable Output<String> apigateway) {
            $.apigateway = apigateway;
            return this;
        }

        public Builder apigateway(String apigateway) {
            return apigateway(Output.of(apigateway));
        }

        public Builder apigatewaymanagementapi(@Nullable Output<String> apigatewaymanagementapi) {
            $.apigatewaymanagementapi = apigatewaymanagementapi;
            return this;
        }

        public Builder apigatewaymanagementapi(String apigatewaymanagementapi) {
            return apigatewaymanagementapi(Output.of(apigatewaymanagementapi));
        }

        public Builder apigatewayv2(@Nullable Output<String> apigatewayv2) {
            $.apigatewayv2 = apigatewayv2;
            return this;
        }

        public Builder apigatewayv2(String apigatewayv2) {
            return apigatewayv2(Output.of(apigatewayv2));
        }

        public Builder appautoscaling(@Nullable Output<String> appautoscaling) {
            $.appautoscaling = appautoscaling;
            return this;
        }

        public Builder appautoscaling(String appautoscaling) {
            return appautoscaling(Output.of(appautoscaling));
        }

        public Builder appconfig(@Nullable Output<String> appconfig) {
            $.appconfig = appconfig;
            return this;
        }

        public Builder appconfig(String appconfig) {
            return appconfig(Output.of(appconfig));
        }

        public Builder appconfigdata(@Nullable Output<String> appconfigdata) {
            $.appconfigdata = appconfigdata;
            return this;
        }

        public Builder appconfigdata(String appconfigdata) {
            return appconfigdata(Output.of(appconfigdata));
        }

        public Builder appflow(@Nullable Output<String> appflow) {
            $.appflow = appflow;
            return this;
        }

        public Builder appflow(String appflow) {
            return appflow(Output.of(appflow));
        }

        public Builder appintegrations(@Nullable Output<String> appintegrations) {
            $.appintegrations = appintegrations;
            return this;
        }

        public Builder appintegrations(String appintegrations) {
            return appintegrations(Output.of(appintegrations));
        }

        public Builder appintegrationsservice(@Nullable Output<String> appintegrationsservice) {
            $.appintegrationsservice = appintegrationsservice;
            return this;
        }

        public Builder appintegrationsservice(String appintegrationsservice) {
            return appintegrationsservice(Output.of(appintegrationsservice));
        }

        public Builder applicationautoscaling(@Nullable Output<String> applicationautoscaling) {
            $.applicationautoscaling = applicationautoscaling;
            return this;
        }

        public Builder applicationautoscaling(String applicationautoscaling) {
            return applicationautoscaling(Output.of(applicationautoscaling));
        }

        public Builder applicationcostprofiler(@Nullable Output<String> applicationcostprofiler) {
            $.applicationcostprofiler = applicationcostprofiler;
            return this;
        }

        public Builder applicationcostprofiler(String applicationcostprofiler) {
            return applicationcostprofiler(Output.of(applicationcostprofiler));
        }

        public Builder applicationdiscovery(@Nullable Output<String> applicationdiscovery) {
            $.applicationdiscovery = applicationdiscovery;
            return this;
        }

        public Builder applicationdiscovery(String applicationdiscovery) {
            return applicationdiscovery(Output.of(applicationdiscovery));
        }

        public Builder applicationdiscoveryservice(@Nullable Output<String> applicationdiscoveryservice) {
            $.applicationdiscoveryservice = applicationdiscoveryservice;
            return this;
        }

        public Builder applicationdiscoveryservice(String applicationdiscoveryservice) {
            return applicationdiscoveryservice(Output.of(applicationdiscoveryservice));
        }

        public Builder applicationinsights(@Nullable Output<String> applicationinsights) {
            $.applicationinsights = applicationinsights;
            return this;
        }

        public Builder applicationinsights(String applicationinsights) {
            return applicationinsights(Output.of(applicationinsights));
        }

        public Builder appmesh(@Nullable Output<String> appmesh) {
            $.appmesh = appmesh;
            return this;
        }

        public Builder appmesh(String appmesh) {
            return appmesh(Output.of(appmesh));
        }

        public Builder appregistry(@Nullable Output<String> appregistry) {
            $.appregistry = appregistry;
            return this;
        }

        public Builder appregistry(String appregistry) {
            return appregistry(Output.of(appregistry));
        }

        public Builder apprunner(@Nullable Output<String> apprunner) {
            $.apprunner = apprunner;
            return this;
        }

        public Builder apprunner(String apprunner) {
            return apprunner(Output.of(apprunner));
        }

        public Builder appstream(@Nullable Output<String> appstream) {
            $.appstream = appstream;
            return this;
        }

        public Builder appstream(String appstream) {
            return appstream(Output.of(appstream));
        }

        public Builder appsync(@Nullable Output<String> appsync) {
            $.appsync = appsync;
            return this;
        }

        public Builder appsync(String appsync) {
            return appsync(Output.of(appsync));
        }

        public Builder athena(@Nullable Output<String> athena) {
            $.athena = athena;
            return this;
        }

        public Builder athena(String athena) {
            return athena(Output.of(athena));
        }

        public Builder auditmanager(@Nullable Output<String> auditmanager) {
            $.auditmanager = auditmanager;
            return this;
        }

        public Builder auditmanager(String auditmanager) {
            return auditmanager(Output.of(auditmanager));
        }

        public Builder augmentedairuntime(@Nullable Output<String> augmentedairuntime) {
            $.augmentedairuntime = augmentedairuntime;
            return this;
        }

        public Builder augmentedairuntime(String augmentedairuntime) {
            return augmentedairuntime(Output.of(augmentedairuntime));
        }

        public Builder autoscaling(@Nullable Output<String> autoscaling) {
            $.autoscaling = autoscaling;
            return this;
        }

        public Builder autoscaling(String autoscaling) {
            return autoscaling(Output.of(autoscaling));
        }

        public Builder autoscalingplans(@Nullable Output<String> autoscalingplans) {
            $.autoscalingplans = autoscalingplans;
            return this;
        }

        public Builder autoscalingplans(String autoscalingplans) {
            return autoscalingplans(Output.of(autoscalingplans));
        }

        public Builder backup(@Nullable Output<String> backup) {
            $.backup = backup;
            return this;
        }

        public Builder backup(String backup) {
            return backup(Output.of(backup));
        }

        public Builder backupgateway(@Nullable Output<String> backupgateway) {
            $.backupgateway = backupgateway;
            return this;
        }

        public Builder backupgateway(String backupgateway) {
            return backupgateway(Output.of(backupgateway));
        }

        public Builder batch(@Nullable Output<String> batch) {
            $.batch = batch;
            return this;
        }

        public Builder batch(String batch) {
            return batch(Output.of(batch));
        }

        public Builder beanstalk(@Nullable Output<String> beanstalk) {
            $.beanstalk = beanstalk;
            return this;
        }

        public Builder beanstalk(String beanstalk) {
            return beanstalk(Output.of(beanstalk));
        }

        public Builder billingconductor(@Nullable Output<String> billingconductor) {
            $.billingconductor = billingconductor;
            return this;
        }

        public Builder billingconductor(String billingconductor) {
            return billingconductor(Output.of(billingconductor));
        }

        public Builder braket(@Nullable Output<String> braket) {
            $.braket = braket;
            return this;
        }

        public Builder braket(String braket) {
            return braket(Output.of(braket));
        }

        public Builder budgets(@Nullable Output<String> budgets) {
            $.budgets = budgets;
            return this;
        }

        public Builder budgets(String budgets) {
            return budgets(Output.of(budgets));
        }

        public Builder ce(@Nullable Output<String> ce) {
            $.ce = ce;
            return this;
        }

        public Builder ce(String ce) {
            return ce(Output.of(ce));
        }

        public Builder chime(@Nullable Output<String> chime) {
            $.chime = chime;
            return this;
        }

        public Builder chime(String chime) {
            return chime(Output.of(chime));
        }

        public Builder chimesdkidentity(@Nullable Output<String> chimesdkidentity) {
            $.chimesdkidentity = chimesdkidentity;
            return this;
        }

        public Builder chimesdkidentity(String chimesdkidentity) {
            return chimesdkidentity(Output.of(chimesdkidentity));
        }

        public Builder chimesdkmeetings(@Nullable Output<String> chimesdkmeetings) {
            $.chimesdkmeetings = chimesdkmeetings;
            return this;
        }

        public Builder chimesdkmeetings(String chimesdkmeetings) {
            return chimesdkmeetings(Output.of(chimesdkmeetings));
        }

        public Builder chimesdkmessaging(@Nullable Output<String> chimesdkmessaging) {
            $.chimesdkmessaging = chimesdkmessaging;
            return this;
        }

        public Builder chimesdkmessaging(String chimesdkmessaging) {
            return chimesdkmessaging(Output.of(chimesdkmessaging));
        }

        public Builder cloud9(@Nullable Output<String> cloud9) {
            $.cloud9 = cloud9;
            return this;
        }

        public Builder cloud9(String cloud9) {
            return cloud9(Output.of(cloud9));
        }

        public Builder cloudcontrol(@Nullable Output<String> cloudcontrol) {
            $.cloudcontrol = cloudcontrol;
            return this;
        }

        public Builder cloudcontrol(String cloudcontrol) {
            return cloudcontrol(Output.of(cloudcontrol));
        }

        public Builder cloudcontrolapi(@Nullable Output<String> cloudcontrolapi) {
            $.cloudcontrolapi = cloudcontrolapi;
            return this;
        }

        public Builder cloudcontrolapi(String cloudcontrolapi) {
            return cloudcontrolapi(Output.of(cloudcontrolapi));
        }

        public Builder clouddirectory(@Nullable Output<String> clouddirectory) {
            $.clouddirectory = clouddirectory;
            return this;
        }

        public Builder clouddirectory(String clouddirectory) {
            return clouddirectory(Output.of(clouddirectory));
        }

        public Builder cloudformation(@Nullable Output<String> cloudformation) {
            $.cloudformation = cloudformation;
            return this;
        }

        public Builder cloudformation(String cloudformation) {
            return cloudformation(Output.of(cloudformation));
        }

        public Builder cloudfront(@Nullable Output<String> cloudfront) {
            $.cloudfront = cloudfront;
            return this;
        }

        public Builder cloudfront(String cloudfront) {
            return cloudfront(Output.of(cloudfront));
        }

        public Builder cloudhsm(@Nullable Output<String> cloudhsm) {
            $.cloudhsm = cloudhsm;
            return this;
        }

        public Builder cloudhsm(String cloudhsm) {
            return cloudhsm(Output.of(cloudhsm));
        }

        public Builder cloudhsmv2(@Nullable Output<String> cloudhsmv2) {
            $.cloudhsmv2 = cloudhsmv2;
            return this;
        }

        public Builder cloudhsmv2(String cloudhsmv2) {
            return cloudhsmv2(Output.of(cloudhsmv2));
        }

        public Builder cloudsearch(@Nullable Output<String> cloudsearch) {
            $.cloudsearch = cloudsearch;
            return this;
        }

        public Builder cloudsearch(String cloudsearch) {
            return cloudsearch(Output.of(cloudsearch));
        }

        public Builder cloudsearchdomain(@Nullable Output<String> cloudsearchdomain) {
            $.cloudsearchdomain = cloudsearchdomain;
            return this;
        }

        public Builder cloudsearchdomain(String cloudsearchdomain) {
            return cloudsearchdomain(Output.of(cloudsearchdomain));
        }

        public Builder cloudtrail(@Nullable Output<String> cloudtrail) {
            $.cloudtrail = cloudtrail;
            return this;
        }

        public Builder cloudtrail(String cloudtrail) {
            return cloudtrail(Output.of(cloudtrail));
        }

        public Builder cloudwatch(@Nullable Output<String> cloudwatch) {
            $.cloudwatch = cloudwatch;
            return this;
        }

        public Builder cloudwatch(String cloudwatch) {
            return cloudwatch(Output.of(cloudwatch));
        }

        public Builder cloudwatchevents(@Nullable Output<String> cloudwatchevents) {
            $.cloudwatchevents = cloudwatchevents;
            return this;
        }

        public Builder cloudwatchevents(String cloudwatchevents) {
            return cloudwatchevents(Output.of(cloudwatchevents));
        }

        public Builder cloudwatchevidently(@Nullable Output<String> cloudwatchevidently) {
            $.cloudwatchevidently = cloudwatchevidently;
            return this;
        }

        public Builder cloudwatchevidently(String cloudwatchevidently) {
            return cloudwatchevidently(Output.of(cloudwatchevidently));
        }

        public Builder cloudwatchlog(@Nullable Output<String> cloudwatchlog) {
            $.cloudwatchlog = cloudwatchlog;
            return this;
        }

        public Builder cloudwatchlog(String cloudwatchlog) {
            return cloudwatchlog(Output.of(cloudwatchlog));
        }

        public Builder cloudwatchlogs(@Nullable Output<String> cloudwatchlogs) {
            $.cloudwatchlogs = cloudwatchlogs;
            return this;
        }

        public Builder cloudwatchlogs(String cloudwatchlogs) {
            return cloudwatchlogs(Output.of(cloudwatchlogs));
        }

        public Builder cloudwatchrum(@Nullable Output<String> cloudwatchrum) {
            $.cloudwatchrum = cloudwatchrum;
            return this;
        }

        public Builder cloudwatchrum(String cloudwatchrum) {
            return cloudwatchrum(Output.of(cloudwatchrum));
        }

        public Builder codeartifact(@Nullable Output<String> codeartifact) {
            $.codeartifact = codeartifact;
            return this;
        }

        public Builder codeartifact(String codeartifact) {
            return codeartifact(Output.of(codeartifact));
        }

        public Builder codebuild(@Nullable Output<String> codebuild) {
            $.codebuild = codebuild;
            return this;
        }

        public Builder codebuild(String codebuild) {
            return codebuild(Output.of(codebuild));
        }

        public Builder codecommit(@Nullable Output<String> codecommit) {
            $.codecommit = codecommit;
            return this;
        }

        public Builder codecommit(String codecommit) {
            return codecommit(Output.of(codecommit));
        }

        public Builder codedeploy(@Nullable Output<String> codedeploy) {
            $.codedeploy = codedeploy;
            return this;
        }

        public Builder codedeploy(String codedeploy) {
            return codedeploy(Output.of(codedeploy));
        }

        public Builder codeguruprofiler(@Nullable Output<String> codeguruprofiler) {
            $.codeguruprofiler = codeguruprofiler;
            return this;
        }

        public Builder codeguruprofiler(String codeguruprofiler) {
            return codeguruprofiler(Output.of(codeguruprofiler));
        }

        public Builder codegurureviewer(@Nullable Output<String> codegurureviewer) {
            $.codegurureviewer = codegurureviewer;
            return this;
        }

        public Builder codegurureviewer(String codegurureviewer) {
            return codegurureviewer(Output.of(codegurureviewer));
        }

        public Builder codepipeline(@Nullable Output<String> codepipeline) {
            $.codepipeline = codepipeline;
            return this;
        }

        public Builder codepipeline(String codepipeline) {
            return codepipeline(Output.of(codepipeline));
        }

        public Builder codestar(@Nullable Output<String> codestar) {
            $.codestar = codestar;
            return this;
        }

        public Builder codestar(String codestar) {
            return codestar(Output.of(codestar));
        }

        public Builder codestarconnections(@Nullable Output<String> codestarconnections) {
            $.codestarconnections = codestarconnections;
            return this;
        }

        public Builder codestarconnections(String codestarconnections) {
            return codestarconnections(Output.of(codestarconnections));
        }

        public Builder codestarnotifications(@Nullable Output<String> codestarnotifications) {
            $.codestarnotifications = codestarnotifications;
            return this;
        }

        public Builder codestarnotifications(String codestarnotifications) {
            return codestarnotifications(Output.of(codestarnotifications));
        }

        public Builder cognitoidentity(@Nullable Output<String> cognitoidentity) {
            $.cognitoidentity = cognitoidentity;
            return this;
        }

        public Builder cognitoidentity(String cognitoidentity) {
            return cognitoidentity(Output.of(cognitoidentity));
        }

        public Builder cognitoidentityprovider(@Nullable Output<String> cognitoidentityprovider) {
            $.cognitoidentityprovider = cognitoidentityprovider;
            return this;
        }

        public Builder cognitoidentityprovider(String cognitoidentityprovider) {
            return cognitoidentityprovider(Output.of(cognitoidentityprovider));
        }

        public Builder cognitoidp(@Nullable Output<String> cognitoidp) {
            $.cognitoidp = cognitoidp;
            return this;
        }

        public Builder cognitoidp(String cognitoidp) {
            return cognitoidp(Output.of(cognitoidp));
        }

        public Builder cognitosync(@Nullable Output<String> cognitosync) {
            $.cognitosync = cognitosync;
            return this;
        }

        public Builder cognitosync(String cognitosync) {
            return cognitosync(Output.of(cognitosync));
        }

        public Builder comprehend(@Nullable Output<String> comprehend) {
            $.comprehend = comprehend;
            return this;
        }

        public Builder comprehend(String comprehend) {
            return comprehend(Output.of(comprehend));
        }

        public Builder comprehendmedical(@Nullable Output<String> comprehendmedical) {
            $.comprehendmedical = comprehendmedical;
            return this;
        }

        public Builder comprehendmedical(String comprehendmedical) {
            return comprehendmedical(Output.of(comprehendmedical));
        }

        public Builder computeoptimizer(@Nullable Output<String> computeoptimizer) {
            $.computeoptimizer = computeoptimizer;
            return this;
        }

        public Builder computeoptimizer(String computeoptimizer) {
            return computeoptimizer(Output.of(computeoptimizer));
        }

        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        public Builder config(String config) {
            return config(Output.of(config));
        }

        public Builder configservice(@Nullable Output<String> configservice) {
            $.configservice = configservice;
            return this;
        }

        public Builder configservice(String configservice) {
            return configservice(Output.of(configservice));
        }

        public Builder connect(@Nullable Output<String> connect) {
            $.connect = connect;
            return this;
        }

        public Builder connect(String connect) {
            return connect(Output.of(connect));
        }

        public Builder connectcontactlens(@Nullable Output<String> connectcontactlens) {
            $.connectcontactlens = connectcontactlens;
            return this;
        }

        public Builder connectcontactlens(String connectcontactlens) {
            return connectcontactlens(Output.of(connectcontactlens));
        }

        public Builder connectparticipant(@Nullable Output<String> connectparticipant) {
            $.connectparticipant = connectparticipant;
            return this;
        }

        public Builder connectparticipant(String connectparticipant) {
            return connectparticipant(Output.of(connectparticipant));
        }

        public Builder connectwisdomservice(@Nullable Output<String> connectwisdomservice) {
            $.connectwisdomservice = connectwisdomservice;
            return this;
        }

        public Builder connectwisdomservice(String connectwisdomservice) {
            return connectwisdomservice(Output.of(connectwisdomservice));
        }

        public Builder controltower(@Nullable Output<String> controltower) {
            $.controltower = controltower;
            return this;
        }

        public Builder controltower(String controltower) {
            return controltower(Output.of(controltower));
        }

        public Builder costandusagereportservice(@Nullable Output<String> costandusagereportservice) {
            $.costandusagereportservice = costandusagereportservice;
            return this;
        }

        public Builder costandusagereportservice(String costandusagereportservice) {
            return costandusagereportservice(Output.of(costandusagereportservice));
        }

        public Builder costexplorer(@Nullable Output<String> costexplorer) {
            $.costexplorer = costexplorer;
            return this;
        }

        public Builder costexplorer(String costexplorer) {
            return costexplorer(Output.of(costexplorer));
        }

        public Builder cur(@Nullable Output<String> cur) {
            $.cur = cur;
            return this;
        }

        public Builder cur(String cur) {
            return cur(Output.of(cur));
        }

        public Builder customerprofiles(@Nullable Output<String> customerprofiles) {
            $.customerprofiles = customerprofiles;
            return this;
        }

        public Builder customerprofiles(String customerprofiles) {
            return customerprofiles(Output.of(customerprofiles));
        }

        public Builder databasemigration(@Nullable Output<String> databasemigration) {
            $.databasemigration = databasemigration;
            return this;
        }

        public Builder databasemigration(String databasemigration) {
            return databasemigration(Output.of(databasemigration));
        }

        public Builder databasemigrationservice(@Nullable Output<String> databasemigrationservice) {
            $.databasemigrationservice = databasemigrationservice;
            return this;
        }

        public Builder databasemigrationservice(String databasemigrationservice) {
            return databasemigrationservice(Output.of(databasemigrationservice));
        }

        public Builder databrew(@Nullable Output<String> databrew) {
            $.databrew = databrew;
            return this;
        }

        public Builder databrew(String databrew) {
            return databrew(Output.of(databrew));
        }

        public Builder dataexchange(@Nullable Output<String> dataexchange) {
            $.dataexchange = dataexchange;
            return this;
        }

        public Builder dataexchange(String dataexchange) {
            return dataexchange(Output.of(dataexchange));
        }

        public Builder datapipeline(@Nullable Output<String> datapipeline) {
            $.datapipeline = datapipeline;
            return this;
        }

        public Builder datapipeline(String datapipeline) {
            return datapipeline(Output.of(datapipeline));
        }

        public Builder datasync(@Nullable Output<String> datasync) {
            $.datasync = datasync;
            return this;
        }

        public Builder datasync(String datasync) {
            return datasync(Output.of(datasync));
        }

        public Builder dax(@Nullable Output<String> dax) {
            $.dax = dax;
            return this;
        }

        public Builder dax(String dax) {
            return dax(Output.of(dax));
        }

        public Builder deploy(@Nullable Output<String> deploy) {
            $.deploy = deploy;
            return this;
        }

        public Builder deploy(String deploy) {
            return deploy(Output.of(deploy));
        }

        public Builder detective(@Nullable Output<String> detective) {
            $.detective = detective;
            return this;
        }

        public Builder detective(String detective) {
            return detective(Output.of(detective));
        }

        public Builder devicefarm(@Nullable Output<String> devicefarm) {
            $.devicefarm = devicefarm;
            return this;
        }

        public Builder devicefarm(String devicefarm) {
            return devicefarm(Output.of(devicefarm));
        }

        public Builder devopsguru(@Nullable Output<String> devopsguru) {
            $.devopsguru = devopsguru;
            return this;
        }

        public Builder devopsguru(String devopsguru) {
            return devopsguru(Output.of(devopsguru));
        }

        public Builder directconnect(@Nullable Output<String> directconnect) {
            $.directconnect = directconnect;
            return this;
        }

        public Builder directconnect(String directconnect) {
            return directconnect(Output.of(directconnect));
        }

        public Builder directoryservice(@Nullable Output<String> directoryservice) {
            $.directoryservice = directoryservice;
            return this;
        }

        public Builder directoryservice(String directoryservice) {
            return directoryservice(Output.of(directoryservice));
        }

        public Builder discovery(@Nullable Output<String> discovery) {
            $.discovery = discovery;
            return this;
        }

        public Builder discovery(String discovery) {
            return discovery(Output.of(discovery));
        }

        public Builder dlm(@Nullable Output<String> dlm) {
            $.dlm = dlm;
            return this;
        }

        public Builder dlm(String dlm) {
            return dlm(Output.of(dlm));
        }

        public Builder dms(@Nullable Output<String> dms) {
            $.dms = dms;
            return this;
        }

        public Builder dms(String dms) {
            return dms(Output.of(dms));
        }

        public Builder docdb(@Nullable Output<String> docdb) {
            $.docdb = docdb;
            return this;
        }

        public Builder docdb(String docdb) {
            return docdb(Output.of(docdb));
        }

        public Builder drs(@Nullable Output<String> drs) {
            $.drs = drs;
            return this;
        }

        public Builder drs(String drs) {
            return drs(Output.of(drs));
        }

        public Builder ds(@Nullable Output<String> ds) {
            $.ds = ds;
            return this;
        }

        public Builder ds(String ds) {
            return ds(Output.of(ds));
        }

        public Builder dynamodb(@Nullable Output<String> dynamodb) {
            $.dynamodb = dynamodb;
            return this;
        }

        public Builder dynamodb(String dynamodb) {
            return dynamodb(Output.of(dynamodb));
        }

        public Builder dynamodbstreams(@Nullable Output<String> dynamodbstreams) {
            $.dynamodbstreams = dynamodbstreams;
            return this;
        }

        public Builder dynamodbstreams(String dynamodbstreams) {
            return dynamodbstreams(Output.of(dynamodbstreams));
        }

        public Builder ebs(@Nullable Output<String> ebs) {
            $.ebs = ebs;
            return this;
        }

        public Builder ebs(String ebs) {
            return ebs(Output.of(ebs));
        }

        public Builder ec2(@Nullable Output<String> ec2) {
            $.ec2 = ec2;
            return this;
        }

        public Builder ec2(String ec2) {
            return ec2(Output.of(ec2));
        }

        public Builder ec2instanceconnect(@Nullable Output<String> ec2instanceconnect) {
            $.ec2instanceconnect = ec2instanceconnect;
            return this;
        }

        public Builder ec2instanceconnect(String ec2instanceconnect) {
            return ec2instanceconnect(Output.of(ec2instanceconnect));
        }

        public Builder ecr(@Nullable Output<String> ecr) {
            $.ecr = ecr;
            return this;
        }

        public Builder ecr(String ecr) {
            return ecr(Output.of(ecr));
        }

        public Builder ecrpublic(@Nullable Output<String> ecrpublic) {
            $.ecrpublic = ecrpublic;
            return this;
        }

        public Builder ecrpublic(String ecrpublic) {
            return ecrpublic(Output.of(ecrpublic));
        }

        public Builder ecs(@Nullable Output<String> ecs) {
            $.ecs = ecs;
            return this;
        }

        public Builder ecs(String ecs) {
            return ecs(Output.of(ecs));
        }

        public Builder efs(@Nullable Output<String> efs) {
            $.efs = efs;
            return this;
        }

        public Builder efs(String efs) {
            return efs(Output.of(efs));
        }

        public Builder eks(@Nullable Output<String> eks) {
            $.eks = eks;
            return this;
        }

        public Builder eks(String eks) {
            return eks(Output.of(eks));
        }

        public Builder elasticache(@Nullable Output<String> elasticache) {
            $.elasticache = elasticache;
            return this;
        }

        public Builder elasticache(String elasticache) {
            return elasticache(Output.of(elasticache));
        }

        public Builder elasticbeanstalk(@Nullable Output<String> elasticbeanstalk) {
            $.elasticbeanstalk = elasticbeanstalk;
            return this;
        }

        public Builder elasticbeanstalk(String elasticbeanstalk) {
            return elasticbeanstalk(Output.of(elasticbeanstalk));
        }

        public Builder elasticinference(@Nullable Output<String> elasticinference) {
            $.elasticinference = elasticinference;
            return this;
        }

        public Builder elasticinference(String elasticinference) {
            return elasticinference(Output.of(elasticinference));
        }

        public Builder elasticloadbalancing(@Nullable Output<String> elasticloadbalancing) {
            $.elasticloadbalancing = elasticloadbalancing;
            return this;
        }

        public Builder elasticloadbalancing(String elasticloadbalancing) {
            return elasticloadbalancing(Output.of(elasticloadbalancing));
        }

        public Builder elasticloadbalancingv2(@Nullable Output<String> elasticloadbalancingv2) {
            $.elasticloadbalancingv2 = elasticloadbalancingv2;
            return this;
        }

        public Builder elasticloadbalancingv2(String elasticloadbalancingv2) {
            return elasticloadbalancingv2(Output.of(elasticloadbalancingv2));
        }

        public Builder elasticsearch(@Nullable Output<String> elasticsearch) {
            $.elasticsearch = elasticsearch;
            return this;
        }

        public Builder elasticsearch(String elasticsearch) {
            return elasticsearch(Output.of(elasticsearch));
        }

        public Builder elasticsearchservice(@Nullable Output<String> elasticsearchservice) {
            $.elasticsearchservice = elasticsearchservice;
            return this;
        }

        public Builder elasticsearchservice(String elasticsearchservice) {
            return elasticsearchservice(Output.of(elasticsearchservice));
        }

        public Builder elastictranscoder(@Nullable Output<String> elastictranscoder) {
            $.elastictranscoder = elastictranscoder;
            return this;
        }

        public Builder elastictranscoder(String elastictranscoder) {
            return elastictranscoder(Output.of(elastictranscoder));
        }

        public Builder elb(@Nullable Output<String> elb) {
            $.elb = elb;
            return this;
        }

        public Builder elb(String elb) {
            return elb(Output.of(elb));
        }

        public Builder elbv2(@Nullable Output<String> elbv2) {
            $.elbv2 = elbv2;
            return this;
        }

        public Builder elbv2(String elbv2) {
            return elbv2(Output.of(elbv2));
        }

        public Builder emr(@Nullable Output<String> emr) {
            $.emr = emr;
            return this;
        }

        public Builder emr(String emr) {
            return emr(Output.of(emr));
        }

        public Builder emrcontainers(@Nullable Output<String> emrcontainers) {
            $.emrcontainers = emrcontainers;
            return this;
        }

        public Builder emrcontainers(String emrcontainers) {
            return emrcontainers(Output.of(emrcontainers));
        }

        public Builder emrserverless(@Nullable Output<String> emrserverless) {
            $.emrserverless = emrserverless;
            return this;
        }

        public Builder emrserverless(String emrserverless) {
            return emrserverless(Output.of(emrserverless));
        }

        public Builder es(@Nullable Output<String> es) {
            $.es = es;
            return this;
        }

        public Builder es(String es) {
            return es(Output.of(es));
        }

        public Builder eventbridge(@Nullable Output<String> eventbridge) {
            $.eventbridge = eventbridge;
            return this;
        }

        public Builder eventbridge(String eventbridge) {
            return eventbridge(Output.of(eventbridge));
        }

        public Builder events(@Nullable Output<String> events) {
            $.events = events;
            return this;
        }

        public Builder events(String events) {
            return events(Output.of(events));
        }

        public Builder evidently(@Nullable Output<String> evidently) {
            $.evidently = evidently;
            return this;
        }

        public Builder evidently(String evidently) {
            return evidently(Output.of(evidently));
        }

        public Builder finspace(@Nullable Output<String> finspace) {
            $.finspace = finspace;
            return this;
        }

        public Builder finspace(String finspace) {
            return finspace(Output.of(finspace));
        }

        public Builder finspacedata(@Nullable Output<String> finspacedata) {
            $.finspacedata = finspacedata;
            return this;
        }

        public Builder finspacedata(String finspacedata) {
            return finspacedata(Output.of(finspacedata));
        }

        public Builder firehose(@Nullable Output<String> firehose) {
            $.firehose = firehose;
            return this;
        }

        public Builder firehose(String firehose) {
            return firehose(Output.of(firehose));
        }

        public Builder fis(@Nullable Output<String> fis) {
            $.fis = fis;
            return this;
        }

        public Builder fis(String fis) {
            return fis(Output.of(fis));
        }

        public Builder fms(@Nullable Output<String> fms) {
            $.fms = fms;
            return this;
        }

        public Builder fms(String fms) {
            return fms(Output.of(fms));
        }

        public Builder forecast(@Nullable Output<String> forecast) {
            $.forecast = forecast;
            return this;
        }

        public Builder forecast(String forecast) {
            return forecast(Output.of(forecast));
        }

        public Builder forecastquery(@Nullable Output<String> forecastquery) {
            $.forecastquery = forecastquery;
            return this;
        }

        public Builder forecastquery(String forecastquery) {
            return forecastquery(Output.of(forecastquery));
        }

        public Builder forecastqueryservice(@Nullable Output<String> forecastqueryservice) {
            $.forecastqueryservice = forecastqueryservice;
            return this;
        }

        public Builder forecastqueryservice(String forecastqueryservice) {
            return forecastqueryservice(Output.of(forecastqueryservice));
        }

        public Builder forecastservice(@Nullable Output<String> forecastservice) {
            $.forecastservice = forecastservice;
            return this;
        }

        public Builder forecastservice(String forecastservice) {
            return forecastservice(Output.of(forecastservice));
        }

        public Builder frauddetector(@Nullable Output<String> frauddetector) {
            $.frauddetector = frauddetector;
            return this;
        }

        public Builder frauddetector(String frauddetector) {
            return frauddetector(Output.of(frauddetector));
        }

        public Builder fsx(@Nullable Output<String> fsx) {
            $.fsx = fsx;
            return this;
        }

        public Builder fsx(String fsx) {
            return fsx(Output.of(fsx));
        }

        public Builder gamelift(@Nullable Output<String> gamelift) {
            $.gamelift = gamelift;
            return this;
        }

        public Builder gamelift(String gamelift) {
            return gamelift(Output.of(gamelift));
        }

        public Builder glacier(@Nullable Output<String> glacier) {
            $.glacier = glacier;
            return this;
        }

        public Builder glacier(String glacier) {
            return glacier(Output.of(glacier));
        }

        public Builder globalaccelerator(@Nullable Output<String> globalaccelerator) {
            $.globalaccelerator = globalaccelerator;
            return this;
        }

        public Builder globalaccelerator(String globalaccelerator) {
            return globalaccelerator(Output.of(globalaccelerator));
        }

        public Builder glue(@Nullable Output<String> glue) {
            $.glue = glue;
            return this;
        }

        public Builder glue(String glue) {
            return glue(Output.of(glue));
        }

        public Builder gluedatabrew(@Nullable Output<String> gluedatabrew) {
            $.gluedatabrew = gluedatabrew;
            return this;
        }

        public Builder gluedatabrew(String gluedatabrew) {
            return gluedatabrew(Output.of(gluedatabrew));
        }

        public Builder grafana(@Nullable Output<String> grafana) {
            $.grafana = grafana;
            return this;
        }

        public Builder grafana(String grafana) {
            return grafana(Output.of(grafana));
        }

        public Builder greengrass(@Nullable Output<String> greengrass) {
            $.greengrass = greengrass;
            return this;
        }

        public Builder greengrass(String greengrass) {
            return greengrass(Output.of(greengrass));
        }

        public Builder greengrassv2(@Nullable Output<String> greengrassv2) {
            $.greengrassv2 = greengrassv2;
            return this;
        }

        public Builder greengrassv2(String greengrassv2) {
            return greengrassv2(Output.of(greengrassv2));
        }

        public Builder groundstation(@Nullable Output<String> groundstation) {
            $.groundstation = groundstation;
            return this;
        }

        public Builder groundstation(String groundstation) {
            return groundstation(Output.of(groundstation));
        }

        public Builder guardduty(@Nullable Output<String> guardduty) {
            $.guardduty = guardduty;
            return this;
        }

        public Builder guardduty(String guardduty) {
            return guardduty(Output.of(guardduty));
        }

        public Builder health(@Nullable Output<String> health) {
            $.health = health;
            return this;
        }

        public Builder health(String health) {
            return health(Output.of(health));
        }

        public Builder healthlake(@Nullable Output<String> healthlake) {
            $.healthlake = healthlake;
            return this;
        }

        public Builder healthlake(String healthlake) {
            return healthlake(Output.of(healthlake));
        }

        public Builder honeycode(@Nullable Output<String> honeycode) {
            $.honeycode = honeycode;
            return this;
        }

        public Builder honeycode(String honeycode) {
            return honeycode(Output.of(honeycode));
        }

        public Builder iam(@Nullable Output<String> iam) {
            $.iam = iam;
            return this;
        }

        public Builder iam(String iam) {
            return iam(Output.of(iam));
        }

        public Builder identitystore(@Nullable Output<String> identitystore) {
            $.identitystore = identitystore;
            return this;
        }

        public Builder identitystore(String identitystore) {
            return identitystore(Output.of(identitystore));
        }

        public Builder imagebuilder(@Nullable Output<String> imagebuilder) {
            $.imagebuilder = imagebuilder;
            return this;
        }

        public Builder imagebuilder(String imagebuilder) {
            return imagebuilder(Output.of(imagebuilder));
        }

        public Builder inspector(@Nullable Output<String> inspector) {
            $.inspector = inspector;
            return this;
        }

        public Builder inspector(String inspector) {
            return inspector(Output.of(inspector));
        }

        public Builder inspector2(@Nullable Output<String> inspector2) {
            $.inspector2 = inspector2;
            return this;
        }

        public Builder inspector2(String inspector2) {
            return inspector2(Output.of(inspector2));
        }

        public Builder inspectorv2(@Nullable Output<String> inspectorv2) {
            $.inspectorv2 = inspectorv2;
            return this;
        }

        public Builder inspectorv2(String inspectorv2) {
            return inspectorv2(Output.of(inspectorv2));
        }

        public Builder iot(@Nullable Output<String> iot) {
            $.iot = iot;
            return this;
        }

        public Builder iot(String iot) {
            return iot(Output.of(iot));
        }

        public Builder iot1clickdevices(@Nullable Output<String> iot1clickdevices) {
            $.iot1clickdevices = iot1clickdevices;
            return this;
        }

        public Builder iot1clickdevices(String iot1clickdevices) {
            return iot1clickdevices(Output.of(iot1clickdevices));
        }

        public Builder iot1clickdevicesservice(@Nullable Output<String> iot1clickdevicesservice) {
            $.iot1clickdevicesservice = iot1clickdevicesservice;
            return this;
        }

        public Builder iot1clickdevicesservice(String iot1clickdevicesservice) {
            return iot1clickdevicesservice(Output.of(iot1clickdevicesservice));
        }

        public Builder iot1clickprojects(@Nullable Output<String> iot1clickprojects) {
            $.iot1clickprojects = iot1clickprojects;
            return this;
        }

        public Builder iot1clickprojects(String iot1clickprojects) {
            return iot1clickprojects(Output.of(iot1clickprojects));
        }

        public Builder iotanalytics(@Nullable Output<String> iotanalytics) {
            $.iotanalytics = iotanalytics;
            return this;
        }

        public Builder iotanalytics(String iotanalytics) {
            return iotanalytics(Output.of(iotanalytics));
        }

        public Builder iotdata(@Nullable Output<String> iotdata) {
            $.iotdata = iotdata;
            return this;
        }

        public Builder iotdata(String iotdata) {
            return iotdata(Output.of(iotdata));
        }

        public Builder iotdataplane(@Nullable Output<String> iotdataplane) {
            $.iotdataplane = iotdataplane;
            return this;
        }

        public Builder iotdataplane(String iotdataplane) {
            return iotdataplane(Output.of(iotdataplane));
        }

        public Builder iotdeviceadvisor(@Nullable Output<String> iotdeviceadvisor) {
            $.iotdeviceadvisor = iotdeviceadvisor;
            return this;
        }

        public Builder iotdeviceadvisor(String iotdeviceadvisor) {
            return iotdeviceadvisor(Output.of(iotdeviceadvisor));
        }

        public Builder iotevents(@Nullable Output<String> iotevents) {
            $.iotevents = iotevents;
            return this;
        }

        public Builder iotevents(String iotevents) {
            return iotevents(Output.of(iotevents));
        }

        public Builder ioteventsdata(@Nullable Output<String> ioteventsdata) {
            $.ioteventsdata = ioteventsdata;
            return this;
        }

        public Builder ioteventsdata(String ioteventsdata) {
            return ioteventsdata(Output.of(ioteventsdata));
        }

        public Builder iotfleethub(@Nullable Output<String> iotfleethub) {
            $.iotfleethub = iotfleethub;
            return this;
        }

        public Builder iotfleethub(String iotfleethub) {
            return iotfleethub(Output.of(iotfleethub));
        }

        public Builder iotjobsdata(@Nullable Output<String> iotjobsdata) {
            $.iotjobsdata = iotjobsdata;
            return this;
        }

        public Builder iotjobsdata(String iotjobsdata) {
            return iotjobsdata(Output.of(iotjobsdata));
        }

        public Builder iotjobsdataplane(@Nullable Output<String> iotjobsdataplane) {
            $.iotjobsdataplane = iotjobsdataplane;
            return this;
        }

        public Builder iotjobsdataplane(String iotjobsdataplane) {
            return iotjobsdataplane(Output.of(iotjobsdataplane));
        }

        public Builder iotsecuretunneling(@Nullable Output<String> iotsecuretunneling) {
            $.iotsecuretunneling = iotsecuretunneling;
            return this;
        }

        public Builder iotsecuretunneling(String iotsecuretunneling) {
            return iotsecuretunneling(Output.of(iotsecuretunneling));
        }

        public Builder iotsitewise(@Nullable Output<String> iotsitewise) {
            $.iotsitewise = iotsitewise;
            return this;
        }

        public Builder iotsitewise(String iotsitewise) {
            return iotsitewise(Output.of(iotsitewise));
        }

        public Builder iotthingsgraph(@Nullable Output<String> iotthingsgraph) {
            $.iotthingsgraph = iotthingsgraph;
            return this;
        }

        public Builder iotthingsgraph(String iotthingsgraph) {
            return iotthingsgraph(Output.of(iotthingsgraph));
        }

        public Builder iottwinmaker(@Nullable Output<String> iottwinmaker) {
            $.iottwinmaker = iottwinmaker;
            return this;
        }

        public Builder iottwinmaker(String iottwinmaker) {
            return iottwinmaker(Output.of(iottwinmaker));
        }

        public Builder iotwireless(@Nullable Output<String> iotwireless) {
            $.iotwireless = iotwireless;
            return this;
        }

        public Builder iotwireless(String iotwireless) {
            return iotwireless(Output.of(iotwireless));
        }

        public Builder ivs(@Nullable Output<String> ivs) {
            $.ivs = ivs;
            return this;
        }

        public Builder ivs(String ivs) {
            return ivs(Output.of(ivs));
        }

        public Builder ivschat(@Nullable Output<String> ivschat) {
            $.ivschat = ivschat;
            return this;
        }

        public Builder ivschat(String ivschat) {
            return ivschat(Output.of(ivschat));
        }

        public Builder kafka(@Nullable Output<String> kafka) {
            $.kafka = kafka;
            return this;
        }

        public Builder kafka(String kafka) {
            return kafka(Output.of(kafka));
        }

        public Builder kafkaconnect(@Nullable Output<String> kafkaconnect) {
            $.kafkaconnect = kafkaconnect;
            return this;
        }

        public Builder kafkaconnect(String kafkaconnect) {
            return kafkaconnect(Output.of(kafkaconnect));
        }

        public Builder kendra(@Nullable Output<String> kendra) {
            $.kendra = kendra;
            return this;
        }

        public Builder kendra(String kendra) {
            return kendra(Output.of(kendra));
        }

        public Builder keyspaces(@Nullable Output<String> keyspaces) {
            $.keyspaces = keyspaces;
            return this;
        }

        public Builder keyspaces(String keyspaces) {
            return keyspaces(Output.of(keyspaces));
        }

        public Builder kinesis(@Nullable Output<String> kinesis) {
            $.kinesis = kinesis;
            return this;
        }

        public Builder kinesis(String kinesis) {
            return kinesis(Output.of(kinesis));
        }

        public Builder kinesisanalytics(@Nullable Output<String> kinesisanalytics) {
            $.kinesisanalytics = kinesisanalytics;
            return this;
        }

        public Builder kinesisanalytics(String kinesisanalytics) {
            return kinesisanalytics(Output.of(kinesisanalytics));
        }

        public Builder kinesisanalyticsv2(@Nullable Output<String> kinesisanalyticsv2) {
            $.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }

        public Builder kinesisanalyticsv2(String kinesisanalyticsv2) {
            return kinesisanalyticsv2(Output.of(kinesisanalyticsv2));
        }

        public Builder kinesisvideo(@Nullable Output<String> kinesisvideo) {
            $.kinesisvideo = kinesisvideo;
            return this;
        }

        public Builder kinesisvideo(String kinesisvideo) {
            return kinesisvideo(Output.of(kinesisvideo));
        }

        public Builder kinesisvideoarchivedmedia(@Nullable Output<String> kinesisvideoarchivedmedia) {
            $.kinesisvideoarchivedmedia = kinesisvideoarchivedmedia;
            return this;
        }

        public Builder kinesisvideoarchivedmedia(String kinesisvideoarchivedmedia) {
            return kinesisvideoarchivedmedia(Output.of(kinesisvideoarchivedmedia));
        }

        public Builder kinesisvideomedia(@Nullable Output<String> kinesisvideomedia) {
            $.kinesisvideomedia = kinesisvideomedia;
            return this;
        }

        public Builder kinesisvideomedia(String kinesisvideomedia) {
            return kinesisvideomedia(Output.of(kinesisvideomedia));
        }

        public Builder kinesisvideosignaling(@Nullable Output<String> kinesisvideosignaling) {
            $.kinesisvideosignaling = kinesisvideosignaling;
            return this;
        }

        public Builder kinesisvideosignaling(String kinesisvideosignaling) {
            return kinesisvideosignaling(Output.of(kinesisvideosignaling));
        }

        public Builder kinesisvideosignalingchannels(@Nullable Output<String> kinesisvideosignalingchannels) {
            $.kinesisvideosignalingchannels = kinesisvideosignalingchannels;
            return this;
        }

        public Builder kinesisvideosignalingchannels(String kinesisvideosignalingchannels) {
            return kinesisvideosignalingchannels(Output.of(kinesisvideosignalingchannels));
        }

        public Builder kms(@Nullable Output<String> kms) {
            $.kms = kms;
            return this;
        }

        public Builder kms(String kms) {
            return kms(Output.of(kms));
        }

        public Builder lakeformation(@Nullable Output<String> lakeformation) {
            $.lakeformation = lakeformation;
            return this;
        }

        public Builder lakeformation(String lakeformation) {
            return lakeformation(Output.of(lakeformation));
        }

        public Builder lambda(@Nullable Output<String> lambda) {
            $.lambda = lambda;
            return this;
        }

        public Builder lambda(String lambda) {
            return lambda(Output.of(lambda));
        }

        public Builder lex(@Nullable Output<String> lex) {
            $.lex = lex;
            return this;
        }

        public Builder lex(String lex) {
            return lex(Output.of(lex));
        }

        public Builder lexmodelbuilding(@Nullable Output<String> lexmodelbuilding) {
            $.lexmodelbuilding = lexmodelbuilding;
            return this;
        }

        public Builder lexmodelbuilding(String lexmodelbuilding) {
            return lexmodelbuilding(Output.of(lexmodelbuilding));
        }

        public Builder lexmodelbuildingservice(@Nullable Output<String> lexmodelbuildingservice) {
            $.lexmodelbuildingservice = lexmodelbuildingservice;
            return this;
        }

        public Builder lexmodelbuildingservice(String lexmodelbuildingservice) {
            return lexmodelbuildingservice(Output.of(lexmodelbuildingservice));
        }

        public Builder lexmodels(@Nullable Output<String> lexmodels) {
            $.lexmodels = lexmodels;
            return this;
        }

        public Builder lexmodels(String lexmodels) {
            return lexmodels(Output.of(lexmodels));
        }

        public Builder lexmodelsv2(@Nullable Output<String> lexmodelsv2) {
            $.lexmodelsv2 = lexmodelsv2;
            return this;
        }

        public Builder lexmodelsv2(String lexmodelsv2) {
            return lexmodelsv2(Output.of(lexmodelsv2));
        }

        public Builder lexruntime(@Nullable Output<String> lexruntime) {
            $.lexruntime = lexruntime;
            return this;
        }

        public Builder lexruntime(String lexruntime) {
            return lexruntime(Output.of(lexruntime));
        }

        public Builder lexruntimeservice(@Nullable Output<String> lexruntimeservice) {
            $.lexruntimeservice = lexruntimeservice;
            return this;
        }

        public Builder lexruntimeservice(String lexruntimeservice) {
            return lexruntimeservice(Output.of(lexruntimeservice));
        }

        public Builder lexruntimev2(@Nullable Output<String> lexruntimev2) {
            $.lexruntimev2 = lexruntimev2;
            return this;
        }

        public Builder lexruntimev2(String lexruntimev2) {
            return lexruntimev2(Output.of(lexruntimev2));
        }

        public Builder lexv2models(@Nullable Output<String> lexv2models) {
            $.lexv2models = lexv2models;
            return this;
        }

        public Builder lexv2models(String lexv2models) {
            return lexv2models(Output.of(lexv2models));
        }

        public Builder lexv2runtime(@Nullable Output<String> lexv2runtime) {
            $.lexv2runtime = lexv2runtime;
            return this;
        }

        public Builder lexv2runtime(String lexv2runtime) {
            return lexv2runtime(Output.of(lexv2runtime));
        }

        public Builder licensemanager(@Nullable Output<String> licensemanager) {
            $.licensemanager = licensemanager;
            return this;
        }

        public Builder licensemanager(String licensemanager) {
            return licensemanager(Output.of(licensemanager));
        }

        public Builder lightsail(@Nullable Output<String> lightsail) {
            $.lightsail = lightsail;
            return this;
        }

        public Builder lightsail(String lightsail) {
            return lightsail(Output.of(lightsail));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder locationservice(@Nullable Output<String> locationservice) {
            $.locationservice = locationservice;
            return this;
        }

        public Builder locationservice(String locationservice) {
            return locationservice(Output.of(locationservice));
        }

        public Builder logs(@Nullable Output<String> logs) {
            $.logs = logs;
            return this;
        }

        public Builder logs(String logs) {
            return logs(Output.of(logs));
        }

        public Builder lookoutequipment(@Nullable Output<String> lookoutequipment) {
            $.lookoutequipment = lookoutequipment;
            return this;
        }

        public Builder lookoutequipment(String lookoutequipment) {
            return lookoutequipment(Output.of(lookoutequipment));
        }

        public Builder lookoutforvision(@Nullable Output<String> lookoutforvision) {
            $.lookoutforvision = lookoutforvision;
            return this;
        }

        public Builder lookoutforvision(String lookoutforvision) {
            return lookoutforvision(Output.of(lookoutforvision));
        }

        public Builder lookoutmetrics(@Nullable Output<String> lookoutmetrics) {
            $.lookoutmetrics = lookoutmetrics;
            return this;
        }

        public Builder lookoutmetrics(String lookoutmetrics) {
            return lookoutmetrics(Output.of(lookoutmetrics));
        }

        public Builder lookoutvision(@Nullable Output<String> lookoutvision) {
            $.lookoutvision = lookoutvision;
            return this;
        }

        public Builder lookoutvision(String lookoutvision) {
            return lookoutvision(Output.of(lookoutvision));
        }

        public Builder machinelearning(@Nullable Output<String> machinelearning) {
            $.machinelearning = machinelearning;
            return this;
        }

        public Builder machinelearning(String machinelearning) {
            return machinelearning(Output.of(machinelearning));
        }

        public Builder macie(@Nullable Output<String> macie) {
            $.macie = macie;
            return this;
        }

        public Builder macie(String macie) {
            return macie(Output.of(macie));
        }

        public Builder macie2(@Nullable Output<String> macie2) {
            $.macie2 = macie2;
            return this;
        }

        public Builder macie2(String macie2) {
            return macie2(Output.of(macie2));
        }

        public Builder managedblockchain(@Nullable Output<String> managedblockchain) {
            $.managedblockchain = managedblockchain;
            return this;
        }

        public Builder managedblockchain(String managedblockchain) {
            return managedblockchain(Output.of(managedblockchain));
        }

        public Builder managedgrafana(@Nullable Output<String> managedgrafana) {
            $.managedgrafana = managedgrafana;
            return this;
        }

        public Builder managedgrafana(String managedgrafana) {
            return managedgrafana(Output.of(managedgrafana));
        }

        public Builder marketplacecatalog(@Nullable Output<String> marketplacecatalog) {
            $.marketplacecatalog = marketplacecatalog;
            return this;
        }

        public Builder marketplacecatalog(String marketplacecatalog) {
            return marketplacecatalog(Output.of(marketplacecatalog));
        }

        public Builder marketplacecommerceanalytics(@Nullable Output<String> marketplacecommerceanalytics) {
            $.marketplacecommerceanalytics = marketplacecommerceanalytics;
            return this;
        }

        public Builder marketplacecommerceanalytics(String marketplacecommerceanalytics) {
            return marketplacecommerceanalytics(Output.of(marketplacecommerceanalytics));
        }

        public Builder marketplaceentitlement(@Nullable Output<String> marketplaceentitlement) {
            $.marketplaceentitlement = marketplaceentitlement;
            return this;
        }

        public Builder marketplaceentitlement(String marketplaceentitlement) {
            return marketplaceentitlement(Output.of(marketplaceentitlement));
        }

        public Builder marketplaceentitlementservice(@Nullable Output<String> marketplaceentitlementservice) {
            $.marketplaceentitlementservice = marketplaceentitlementservice;
            return this;
        }

        public Builder marketplaceentitlementservice(String marketplaceentitlementservice) {
            return marketplaceentitlementservice(Output.of(marketplaceentitlementservice));
        }

        public Builder marketplacemetering(@Nullable Output<String> marketplacemetering) {
            $.marketplacemetering = marketplacemetering;
            return this;
        }

        public Builder marketplacemetering(String marketplacemetering) {
            return marketplacemetering(Output.of(marketplacemetering));
        }

        public Builder mediaconnect(@Nullable Output<String> mediaconnect) {
            $.mediaconnect = mediaconnect;
            return this;
        }

        public Builder mediaconnect(String mediaconnect) {
            return mediaconnect(Output.of(mediaconnect));
        }

        public Builder mediaconvert(@Nullable Output<String> mediaconvert) {
            $.mediaconvert = mediaconvert;
            return this;
        }

        public Builder mediaconvert(String mediaconvert) {
            return mediaconvert(Output.of(mediaconvert));
        }

        public Builder medialive(@Nullable Output<String> medialive) {
            $.medialive = medialive;
            return this;
        }

        public Builder medialive(String medialive) {
            return medialive(Output.of(medialive));
        }

        public Builder mediapackage(@Nullable Output<String> mediapackage) {
            $.mediapackage = mediapackage;
            return this;
        }

        public Builder mediapackage(String mediapackage) {
            return mediapackage(Output.of(mediapackage));
        }

        public Builder mediapackagevod(@Nullable Output<String> mediapackagevod) {
            $.mediapackagevod = mediapackagevod;
            return this;
        }

        public Builder mediapackagevod(String mediapackagevod) {
            return mediapackagevod(Output.of(mediapackagevod));
        }

        public Builder mediastore(@Nullable Output<String> mediastore) {
            $.mediastore = mediastore;
            return this;
        }

        public Builder mediastore(String mediastore) {
            return mediastore(Output.of(mediastore));
        }

        public Builder mediastoredata(@Nullable Output<String> mediastoredata) {
            $.mediastoredata = mediastoredata;
            return this;
        }

        public Builder mediastoredata(String mediastoredata) {
            return mediastoredata(Output.of(mediastoredata));
        }

        public Builder mediatailor(@Nullable Output<String> mediatailor) {
            $.mediatailor = mediatailor;
            return this;
        }

        public Builder mediatailor(String mediatailor) {
            return mediatailor(Output.of(mediatailor));
        }

        public Builder memorydb(@Nullable Output<String> memorydb) {
            $.memorydb = memorydb;
            return this;
        }

        public Builder memorydb(String memorydb) {
            return memorydb(Output.of(memorydb));
        }

        public Builder meteringmarketplace(@Nullable Output<String> meteringmarketplace) {
            $.meteringmarketplace = meteringmarketplace;
            return this;
        }

        public Builder meteringmarketplace(String meteringmarketplace) {
            return meteringmarketplace(Output.of(meteringmarketplace));
        }

        public Builder mgh(@Nullable Output<String> mgh) {
            $.mgh = mgh;
            return this;
        }

        public Builder mgh(String mgh) {
            return mgh(Output.of(mgh));
        }

        public Builder mgn(@Nullable Output<String> mgn) {
            $.mgn = mgn;
            return this;
        }

        public Builder mgn(String mgn) {
            return mgn(Output.of(mgn));
        }

        public Builder migrationhub(@Nullable Output<String> migrationhub) {
            $.migrationhub = migrationhub;
            return this;
        }

        public Builder migrationhub(String migrationhub) {
            return migrationhub(Output.of(migrationhub));
        }

        public Builder migrationhubconfig(@Nullable Output<String> migrationhubconfig) {
            $.migrationhubconfig = migrationhubconfig;
            return this;
        }

        public Builder migrationhubconfig(String migrationhubconfig) {
            return migrationhubconfig(Output.of(migrationhubconfig));
        }

        public Builder migrationhubrefactorspaces(@Nullable Output<String> migrationhubrefactorspaces) {
            $.migrationhubrefactorspaces = migrationhubrefactorspaces;
            return this;
        }

        public Builder migrationhubrefactorspaces(String migrationhubrefactorspaces) {
            return migrationhubrefactorspaces(Output.of(migrationhubrefactorspaces));
        }

        public Builder migrationhubstrategy(@Nullable Output<String> migrationhubstrategy) {
            $.migrationhubstrategy = migrationhubstrategy;
            return this;
        }

        public Builder migrationhubstrategy(String migrationhubstrategy) {
            return migrationhubstrategy(Output.of(migrationhubstrategy));
        }

        public Builder migrationhubstrategyrecommendations(@Nullable Output<String> migrationhubstrategyrecommendations) {
            $.migrationhubstrategyrecommendations = migrationhubstrategyrecommendations;
            return this;
        }

        public Builder migrationhubstrategyrecommendations(String migrationhubstrategyrecommendations) {
            return migrationhubstrategyrecommendations(Output.of(migrationhubstrategyrecommendations));
        }

        public Builder mobile(@Nullable Output<String> mobile) {
            $.mobile = mobile;
            return this;
        }

        public Builder mobile(String mobile) {
            return mobile(Output.of(mobile));
        }

        public Builder mq(@Nullable Output<String> mq) {
            $.mq = mq;
            return this;
        }

        public Builder mq(String mq) {
            return mq(Output.of(mq));
        }

        public Builder msk(@Nullable Output<String> msk) {
            $.msk = msk;
            return this;
        }

        public Builder msk(String msk) {
            return msk(Output.of(msk));
        }

        public Builder mturk(@Nullable Output<String> mturk) {
            $.mturk = mturk;
            return this;
        }

        public Builder mturk(String mturk) {
            return mturk(Output.of(mturk));
        }

        public Builder mwaa(@Nullable Output<String> mwaa) {
            $.mwaa = mwaa;
            return this;
        }

        public Builder mwaa(String mwaa) {
            return mwaa(Output.of(mwaa));
        }

        public Builder neptune(@Nullable Output<String> neptune) {
            $.neptune = neptune;
            return this;
        }

        public Builder neptune(String neptune) {
            return neptune(Output.of(neptune));
        }

        public Builder networkfirewall(@Nullable Output<String> networkfirewall) {
            $.networkfirewall = networkfirewall;
            return this;
        }

        public Builder networkfirewall(String networkfirewall) {
            return networkfirewall(Output.of(networkfirewall));
        }

        public Builder networkmanager(@Nullable Output<String> networkmanager) {
            $.networkmanager = networkmanager;
            return this;
        }

        public Builder networkmanager(String networkmanager) {
            return networkmanager(Output.of(networkmanager));
        }

        public Builder nimble(@Nullable Output<String> nimble) {
            $.nimble = nimble;
            return this;
        }

        public Builder nimble(String nimble) {
            return nimble(Output.of(nimble));
        }

        public Builder nimblestudio(@Nullable Output<String> nimblestudio) {
            $.nimblestudio = nimblestudio;
            return this;
        }

        public Builder nimblestudio(String nimblestudio) {
            return nimblestudio(Output.of(nimblestudio));
        }

        public Builder opensearch(@Nullable Output<String> opensearch) {
            $.opensearch = opensearch;
            return this;
        }

        public Builder opensearch(String opensearch) {
            return opensearch(Output.of(opensearch));
        }

        public Builder opensearchserverless(@Nullable Output<String> opensearchserverless) {
            $.opensearchserverless = opensearchserverless;
            return this;
        }

        public Builder opensearchserverless(String opensearchserverless) {
            return opensearchserverless(Output.of(opensearchserverless));
        }

        public Builder opensearchservice(@Nullable Output<String> opensearchservice) {
            $.opensearchservice = opensearchservice;
            return this;
        }

        public Builder opensearchservice(String opensearchservice) {
            return opensearchservice(Output.of(opensearchservice));
        }

        public Builder opsworks(@Nullable Output<String> opsworks) {
            $.opsworks = opsworks;
            return this;
        }

        public Builder opsworks(String opsworks) {
            return opsworks(Output.of(opsworks));
        }

        public Builder opsworkscm(@Nullable Output<String> opsworkscm) {
            $.opsworkscm = opsworkscm;
            return this;
        }

        public Builder opsworkscm(String opsworkscm) {
            return opsworkscm(Output.of(opsworkscm));
        }

        public Builder organizations(@Nullable Output<String> organizations) {
            $.organizations = organizations;
            return this;
        }

        public Builder organizations(String organizations) {
            return organizations(Output.of(organizations));
        }

        public Builder outposts(@Nullable Output<String> outposts) {
            $.outposts = outposts;
            return this;
        }

        public Builder outposts(String outposts) {
            return outposts(Output.of(outposts));
        }

        public Builder panorama(@Nullable Output<String> panorama) {
            $.panorama = panorama;
            return this;
        }

        public Builder panorama(String panorama) {
            return panorama(Output.of(panorama));
        }

        public Builder personalize(@Nullable Output<String> personalize) {
            $.personalize = personalize;
            return this;
        }

        public Builder personalize(String personalize) {
            return personalize(Output.of(personalize));
        }

        public Builder personalizeevents(@Nullable Output<String> personalizeevents) {
            $.personalizeevents = personalizeevents;
            return this;
        }

        public Builder personalizeevents(String personalizeevents) {
            return personalizeevents(Output.of(personalizeevents));
        }

        public Builder personalizeruntime(@Nullable Output<String> personalizeruntime) {
            $.personalizeruntime = personalizeruntime;
            return this;
        }

        public Builder personalizeruntime(String personalizeruntime) {
            return personalizeruntime(Output.of(personalizeruntime));
        }

        public Builder pi(@Nullable Output<String> pi) {
            $.pi = pi;
            return this;
        }

        public Builder pi(String pi) {
            return pi(Output.of(pi));
        }

        public Builder pinpoint(@Nullable Output<String> pinpoint) {
            $.pinpoint = pinpoint;
            return this;
        }

        public Builder pinpoint(String pinpoint) {
            return pinpoint(Output.of(pinpoint));
        }

        public Builder pinpointemail(@Nullable Output<String> pinpointemail) {
            $.pinpointemail = pinpointemail;
            return this;
        }

        public Builder pinpointemail(String pinpointemail) {
            return pinpointemail(Output.of(pinpointemail));
        }

        public Builder pinpointsmsvoice(@Nullable Output<String> pinpointsmsvoice) {
            $.pinpointsmsvoice = pinpointsmsvoice;
            return this;
        }

        public Builder pinpointsmsvoice(String pinpointsmsvoice) {
            return pinpointsmsvoice(Output.of(pinpointsmsvoice));
        }

        public Builder pipes(@Nullable Output<String> pipes) {
            $.pipes = pipes;
            return this;
        }

        public Builder pipes(String pipes) {
            return pipes(Output.of(pipes));
        }

        public Builder polly(@Nullable Output<String> polly) {
            $.polly = polly;
            return this;
        }

        public Builder polly(String polly) {
            return polly(Output.of(polly));
        }

        public Builder pricing(@Nullable Output<String> pricing) {
            $.pricing = pricing;
            return this;
        }

        public Builder pricing(String pricing) {
            return pricing(Output.of(pricing));
        }

        public Builder prometheus(@Nullable Output<String> prometheus) {
            $.prometheus = prometheus;
            return this;
        }

        public Builder prometheus(String prometheus) {
            return prometheus(Output.of(prometheus));
        }

        public Builder prometheusservice(@Nullable Output<String> prometheusservice) {
            $.prometheusservice = prometheusservice;
            return this;
        }

        public Builder prometheusservice(String prometheusservice) {
            return prometheusservice(Output.of(prometheusservice));
        }

        public Builder proton(@Nullable Output<String> proton) {
            $.proton = proton;
            return this;
        }

        public Builder proton(String proton) {
            return proton(Output.of(proton));
        }

        public Builder qldb(@Nullable Output<String> qldb) {
            $.qldb = qldb;
            return this;
        }

        public Builder qldb(String qldb) {
            return qldb(Output.of(qldb));
        }

        public Builder qldbsession(@Nullable Output<String> qldbsession) {
            $.qldbsession = qldbsession;
            return this;
        }

        public Builder qldbsession(String qldbsession) {
            return qldbsession(Output.of(qldbsession));
        }

        public Builder quicksight(@Nullable Output<String> quicksight) {
            $.quicksight = quicksight;
            return this;
        }

        public Builder quicksight(String quicksight) {
            return quicksight(Output.of(quicksight));
        }

        public Builder ram(@Nullable Output<String> ram) {
            $.ram = ram;
            return this;
        }

        public Builder ram(String ram) {
            return ram(Output.of(ram));
        }

        public Builder rbin(@Nullable Output<String> rbin) {
            $.rbin = rbin;
            return this;
        }

        public Builder rbin(String rbin) {
            return rbin(Output.of(rbin));
        }

        public Builder rds(@Nullable Output<String> rds) {
            $.rds = rds;
            return this;
        }

        public Builder rds(String rds) {
            return rds(Output.of(rds));
        }

        public Builder rdsdata(@Nullable Output<String> rdsdata) {
            $.rdsdata = rdsdata;
            return this;
        }

        public Builder rdsdata(String rdsdata) {
            return rdsdata(Output.of(rdsdata));
        }

        public Builder rdsdataservice(@Nullable Output<String> rdsdataservice) {
            $.rdsdataservice = rdsdataservice;
            return this;
        }

        public Builder rdsdataservice(String rdsdataservice) {
            return rdsdataservice(Output.of(rdsdataservice));
        }

        public Builder recyclebin(@Nullable Output<String> recyclebin) {
            $.recyclebin = recyclebin;
            return this;
        }

        public Builder recyclebin(String recyclebin) {
            return recyclebin(Output.of(recyclebin));
        }

        public Builder redshift(@Nullable Output<String> redshift) {
            $.redshift = redshift;
            return this;
        }

        public Builder redshift(String redshift) {
            return redshift(Output.of(redshift));
        }

        public Builder redshiftdata(@Nullable Output<String> redshiftdata) {
            $.redshiftdata = redshiftdata;
            return this;
        }

        public Builder redshiftdata(String redshiftdata) {
            return redshiftdata(Output.of(redshiftdata));
        }

        public Builder redshiftdataapiservice(@Nullable Output<String> redshiftdataapiservice) {
            $.redshiftdataapiservice = redshiftdataapiservice;
            return this;
        }

        public Builder redshiftdataapiservice(String redshiftdataapiservice) {
            return redshiftdataapiservice(Output.of(redshiftdataapiservice));
        }

        public Builder redshiftserverless(@Nullable Output<String> redshiftserverless) {
            $.redshiftserverless = redshiftserverless;
            return this;
        }

        public Builder redshiftserverless(String redshiftserverless) {
            return redshiftserverless(Output.of(redshiftserverless));
        }

        public Builder rekognition(@Nullable Output<String> rekognition) {
            $.rekognition = rekognition;
            return this;
        }

        public Builder rekognition(String rekognition) {
            return rekognition(Output.of(rekognition));
        }

        public Builder resiliencehub(@Nullable Output<String> resiliencehub) {
            $.resiliencehub = resiliencehub;
            return this;
        }

        public Builder resiliencehub(String resiliencehub) {
            return resiliencehub(Output.of(resiliencehub));
        }

        public Builder resourceexplorer2(@Nullable Output<String> resourceexplorer2) {
            $.resourceexplorer2 = resourceexplorer2;
            return this;
        }

        public Builder resourceexplorer2(String resourceexplorer2) {
            return resourceexplorer2(Output.of(resourceexplorer2));
        }

        public Builder resourcegroups(@Nullable Output<String> resourcegroups) {
            $.resourcegroups = resourcegroups;
            return this;
        }

        public Builder resourcegroups(String resourcegroups) {
            return resourcegroups(Output.of(resourcegroups));
        }

        public Builder resourcegroupstagging(@Nullable Output<String> resourcegroupstagging) {
            $.resourcegroupstagging = resourcegroupstagging;
            return this;
        }

        public Builder resourcegroupstagging(String resourcegroupstagging) {
            return resourcegroupstagging(Output.of(resourcegroupstagging));
        }

        public Builder resourcegroupstaggingapi(@Nullable Output<String> resourcegroupstaggingapi) {
            $.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }

        public Builder resourcegroupstaggingapi(String resourcegroupstaggingapi) {
            return resourcegroupstaggingapi(Output.of(resourcegroupstaggingapi));
        }

        public Builder robomaker(@Nullable Output<String> robomaker) {
            $.robomaker = robomaker;
            return this;
        }

        public Builder robomaker(String robomaker) {
            return robomaker(Output.of(robomaker));
        }

        public Builder rolesanywhere(@Nullable Output<String> rolesanywhere) {
            $.rolesanywhere = rolesanywhere;
            return this;
        }

        public Builder rolesanywhere(String rolesanywhere) {
            return rolesanywhere(Output.of(rolesanywhere));
        }

        public Builder route53(@Nullable Output<String> route53) {
            $.route53 = route53;
            return this;
        }

        public Builder route53(String route53) {
            return route53(Output.of(route53));
        }

        public Builder route53domains(@Nullable Output<String> route53domains) {
            $.route53domains = route53domains;
            return this;
        }

        public Builder route53domains(String route53domains) {
            return route53domains(Output.of(route53domains));
        }

        public Builder route53recoverycluster(@Nullable Output<String> route53recoverycluster) {
            $.route53recoverycluster = route53recoverycluster;
            return this;
        }

        public Builder route53recoverycluster(String route53recoverycluster) {
            return route53recoverycluster(Output.of(route53recoverycluster));
        }

        public Builder route53recoverycontrolconfig(@Nullable Output<String> route53recoverycontrolconfig) {
            $.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }

        public Builder route53recoverycontrolconfig(String route53recoverycontrolconfig) {
            return route53recoverycontrolconfig(Output.of(route53recoverycontrolconfig));
        }

        public Builder route53recoveryreadiness(@Nullable Output<String> route53recoveryreadiness) {
            $.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }

        public Builder route53recoveryreadiness(String route53recoveryreadiness) {
            return route53recoveryreadiness(Output.of(route53recoveryreadiness));
        }

        public Builder route53resolver(@Nullable Output<String> route53resolver) {
            $.route53resolver = route53resolver;
            return this;
        }

        public Builder route53resolver(String route53resolver) {
            return route53resolver(Output.of(route53resolver));
        }

        public Builder rum(@Nullable Output<String> rum) {
            $.rum = rum;
            return this;
        }

        public Builder rum(String rum) {
            return rum(Output.of(rum));
        }

        public Builder s3(@Nullable Output<String> s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3(String s3) {
            return s3(Output.of(s3));
        }

        public Builder s3api(@Nullable Output<String> s3api) {
            $.s3api = s3api;
            return this;
        }

        public Builder s3api(String s3api) {
            return s3api(Output.of(s3api));
        }

        public Builder s3control(@Nullable Output<String> s3control) {
            $.s3control = s3control;
            return this;
        }

        public Builder s3control(String s3control) {
            return s3control(Output.of(s3control));
        }

        public Builder s3outposts(@Nullable Output<String> s3outposts) {
            $.s3outposts = s3outposts;
            return this;
        }

        public Builder s3outposts(String s3outposts) {
            return s3outposts(Output.of(s3outposts));
        }

        public Builder sagemaker(@Nullable Output<String> sagemaker) {
            $.sagemaker = sagemaker;
            return this;
        }

        public Builder sagemaker(String sagemaker) {
            return sagemaker(Output.of(sagemaker));
        }

        public Builder sagemakera2iruntime(@Nullable Output<String> sagemakera2iruntime) {
            $.sagemakera2iruntime = sagemakera2iruntime;
            return this;
        }

        public Builder sagemakera2iruntime(String sagemakera2iruntime) {
            return sagemakera2iruntime(Output.of(sagemakera2iruntime));
        }

        public Builder sagemakeredge(@Nullable Output<String> sagemakeredge) {
            $.sagemakeredge = sagemakeredge;
            return this;
        }

        public Builder sagemakeredge(String sagemakeredge) {
            return sagemakeredge(Output.of(sagemakeredge));
        }

        public Builder sagemakeredgemanager(@Nullable Output<String> sagemakeredgemanager) {
            $.sagemakeredgemanager = sagemakeredgemanager;
            return this;
        }

        public Builder sagemakeredgemanager(String sagemakeredgemanager) {
            return sagemakeredgemanager(Output.of(sagemakeredgemanager));
        }

        public Builder sagemakerfeaturestoreruntime(@Nullable Output<String> sagemakerfeaturestoreruntime) {
            $.sagemakerfeaturestoreruntime = sagemakerfeaturestoreruntime;
            return this;
        }

        public Builder sagemakerfeaturestoreruntime(String sagemakerfeaturestoreruntime) {
            return sagemakerfeaturestoreruntime(Output.of(sagemakerfeaturestoreruntime));
        }

        public Builder sagemakerruntime(@Nullable Output<String> sagemakerruntime) {
            $.sagemakerruntime = sagemakerruntime;
            return this;
        }

        public Builder sagemakerruntime(String sagemakerruntime) {
            return sagemakerruntime(Output.of(sagemakerruntime));
        }

        public Builder savingsplans(@Nullable Output<String> savingsplans) {
            $.savingsplans = savingsplans;
            return this;
        }

        public Builder savingsplans(String savingsplans) {
            return savingsplans(Output.of(savingsplans));
        }

        public Builder scheduler(@Nullable Output<String> scheduler) {
            $.scheduler = scheduler;
            return this;
        }

        public Builder scheduler(String scheduler) {
            return scheduler(Output.of(scheduler));
        }

        public Builder schemas(@Nullable Output<String> schemas) {
            $.schemas = schemas;
            return this;
        }

        public Builder schemas(String schemas) {
            return schemas(Output.of(schemas));
        }

        public Builder sdb(@Nullable Output<String> sdb) {
            $.sdb = sdb;
            return this;
        }

        public Builder sdb(String sdb) {
            return sdb(Output.of(sdb));
        }

        public Builder secretsmanager(@Nullable Output<String> secretsmanager) {
            $.secretsmanager = secretsmanager;
            return this;
        }

        public Builder secretsmanager(String secretsmanager) {
            return secretsmanager(Output.of(secretsmanager));
        }

        public Builder securityhub(@Nullable Output<String> securityhub) {
            $.securityhub = securityhub;
            return this;
        }

        public Builder securityhub(String securityhub) {
            return securityhub(Output.of(securityhub));
        }

        public Builder serverlessapplicationrepository(@Nullable Output<String> serverlessapplicationrepository) {
            $.serverlessapplicationrepository = serverlessapplicationrepository;
            return this;
        }

        public Builder serverlessapplicationrepository(String serverlessapplicationrepository) {
            return serverlessapplicationrepository(Output.of(serverlessapplicationrepository));
        }

        public Builder serverlessapprepo(@Nullable Output<String> serverlessapprepo) {
            $.serverlessapprepo = serverlessapprepo;
            return this;
        }

        public Builder serverlessapprepo(String serverlessapprepo) {
            return serverlessapprepo(Output.of(serverlessapprepo));
        }

        public Builder serverlessrepo(@Nullable Output<String> serverlessrepo) {
            $.serverlessrepo = serverlessrepo;
            return this;
        }

        public Builder serverlessrepo(String serverlessrepo) {
            return serverlessrepo(Output.of(serverlessrepo));
        }

        public Builder servicecatalog(@Nullable Output<String> servicecatalog) {
            $.servicecatalog = servicecatalog;
            return this;
        }

        public Builder servicecatalog(String servicecatalog) {
            return servicecatalog(Output.of(servicecatalog));
        }

        public Builder servicecatalogappregistry(@Nullable Output<String> servicecatalogappregistry) {
            $.servicecatalogappregistry = servicecatalogappregistry;
            return this;
        }

        public Builder servicecatalogappregistry(String servicecatalogappregistry) {
            return servicecatalogappregistry(Output.of(servicecatalogappregistry));
        }

        public Builder servicediscovery(@Nullable Output<String> servicediscovery) {
            $.servicediscovery = servicediscovery;
            return this;
        }

        public Builder servicediscovery(String servicediscovery) {
            return servicediscovery(Output.of(servicediscovery));
        }

        public Builder servicequotas(@Nullable Output<String> servicequotas) {
            $.servicequotas = servicequotas;
            return this;
        }

        public Builder servicequotas(String servicequotas) {
            return servicequotas(Output.of(servicequotas));
        }

        public Builder ses(@Nullable Output<String> ses) {
            $.ses = ses;
            return this;
        }

        public Builder ses(String ses) {
            return ses(Output.of(ses));
        }

        public Builder sesv2(@Nullable Output<String> sesv2) {
            $.sesv2 = sesv2;
            return this;
        }

        public Builder sesv2(String sesv2) {
            return sesv2(Output.of(sesv2));
        }

        public Builder sfn(@Nullable Output<String> sfn) {
            $.sfn = sfn;
            return this;
        }

        public Builder sfn(String sfn) {
            return sfn(Output.of(sfn));
        }

        public Builder shield(@Nullable Output<String> shield) {
            $.shield = shield;
            return this;
        }

        public Builder shield(String shield) {
            return shield(Output.of(shield));
        }

        public Builder signer(@Nullable Output<String> signer) {
            $.signer = signer;
            return this;
        }

        public Builder signer(String signer) {
            return signer(Output.of(signer));
        }

        public Builder simpledb(@Nullable Output<String> simpledb) {
            $.simpledb = simpledb;
            return this;
        }

        public Builder simpledb(String simpledb) {
            return simpledb(Output.of(simpledb));
        }

        public Builder sms(@Nullable Output<String> sms) {
            $.sms = sms;
            return this;
        }

        public Builder sms(String sms) {
            return sms(Output.of(sms));
        }

        public Builder snowball(@Nullable Output<String> snowball) {
            $.snowball = snowball;
            return this;
        }

        public Builder snowball(String snowball) {
            return snowball(Output.of(snowball));
        }

        public Builder snowdevicemanagement(@Nullable Output<String> snowdevicemanagement) {
            $.snowdevicemanagement = snowdevicemanagement;
            return this;
        }

        public Builder snowdevicemanagement(String snowdevicemanagement) {
            return snowdevicemanagement(Output.of(snowdevicemanagement));
        }

        public Builder sns(@Nullable Output<String> sns) {
            $.sns = sns;
            return this;
        }

        public Builder sns(String sns) {
            return sns(Output.of(sns));
        }

        public Builder sqs(@Nullable Output<String> sqs) {
            $.sqs = sqs;
            return this;
        }

        public Builder sqs(String sqs) {
            return sqs(Output.of(sqs));
        }

        public Builder ssm(@Nullable Output<String> ssm) {
            $.ssm = ssm;
            return this;
        }

        public Builder ssm(String ssm) {
            return ssm(Output.of(ssm));
        }

        public Builder ssmcontacts(@Nullable Output<String> ssmcontacts) {
            $.ssmcontacts = ssmcontacts;
            return this;
        }

        public Builder ssmcontacts(String ssmcontacts) {
            return ssmcontacts(Output.of(ssmcontacts));
        }

        public Builder ssmincidents(@Nullable Output<String> ssmincidents) {
            $.ssmincidents = ssmincidents;
            return this;
        }

        public Builder ssmincidents(String ssmincidents) {
            return ssmincidents(Output.of(ssmincidents));
        }

        public Builder sso(@Nullable Output<String> sso) {
            $.sso = sso;
            return this;
        }

        public Builder sso(String sso) {
            return sso(Output.of(sso));
        }

        public Builder ssoadmin(@Nullable Output<String> ssoadmin) {
            $.ssoadmin = ssoadmin;
            return this;
        }

        public Builder ssoadmin(String ssoadmin) {
            return ssoadmin(Output.of(ssoadmin));
        }

        public Builder ssooidc(@Nullable Output<String> ssooidc) {
            $.ssooidc = ssooidc;
            return this;
        }

        public Builder ssooidc(String ssooidc) {
            return ssooidc(Output.of(ssooidc));
        }

        public Builder stepfunctions(@Nullable Output<String> stepfunctions) {
            $.stepfunctions = stepfunctions;
            return this;
        }

        public Builder stepfunctions(String stepfunctions) {
            return stepfunctions(Output.of(stepfunctions));
        }

        public Builder storagegateway(@Nullable Output<String> storagegateway) {
            $.storagegateway = storagegateway;
            return this;
        }

        public Builder storagegateway(String storagegateway) {
            return storagegateway(Output.of(storagegateway));
        }

        public Builder sts(@Nullable Output<String> sts) {
            $.sts = sts;
            return this;
        }

        public Builder sts(String sts) {
            return sts(Output.of(sts));
        }

        public Builder support(@Nullable Output<String> support) {
            $.support = support;
            return this;
        }

        public Builder support(String support) {
            return support(Output.of(support));
        }

        public Builder swf(@Nullable Output<String> swf) {
            $.swf = swf;
            return this;
        }

        public Builder swf(String swf) {
            return swf(Output.of(swf));
        }

        public Builder synthetics(@Nullable Output<String> synthetics) {
            $.synthetics = synthetics;
            return this;
        }

        public Builder synthetics(String synthetics) {
            return synthetics(Output.of(synthetics));
        }

        public Builder textract(@Nullable Output<String> textract) {
            $.textract = textract;
            return this;
        }

        public Builder textract(String textract) {
            return textract(Output.of(textract));
        }

        public Builder timestreamquery(@Nullable Output<String> timestreamquery) {
            $.timestreamquery = timestreamquery;
            return this;
        }

        public Builder timestreamquery(String timestreamquery) {
            return timestreamquery(Output.of(timestreamquery));
        }

        public Builder timestreamwrite(@Nullable Output<String> timestreamwrite) {
            $.timestreamwrite = timestreamwrite;
            return this;
        }

        public Builder timestreamwrite(String timestreamwrite) {
            return timestreamwrite(Output.of(timestreamwrite));
        }

        public Builder transcribe(@Nullable Output<String> transcribe) {
            $.transcribe = transcribe;
            return this;
        }

        public Builder transcribe(String transcribe) {
            return transcribe(Output.of(transcribe));
        }

        public Builder transcribeservice(@Nullable Output<String> transcribeservice) {
            $.transcribeservice = transcribeservice;
            return this;
        }

        public Builder transcribeservice(String transcribeservice) {
            return transcribeservice(Output.of(transcribeservice));
        }

        public Builder transcribestreaming(@Nullable Output<String> transcribestreaming) {
            $.transcribestreaming = transcribestreaming;
            return this;
        }

        public Builder transcribestreaming(String transcribestreaming) {
            return transcribestreaming(Output.of(transcribestreaming));
        }

        public Builder transcribestreamingservice(@Nullable Output<String> transcribestreamingservice) {
            $.transcribestreamingservice = transcribestreamingservice;
            return this;
        }

        public Builder transcribestreamingservice(String transcribestreamingservice) {
            return transcribestreamingservice(Output.of(transcribestreamingservice));
        }

        public Builder transfer(@Nullable Output<String> transfer) {
            $.transfer = transfer;
            return this;
        }

        public Builder transfer(String transfer) {
            return transfer(Output.of(transfer));
        }

        public Builder translate(@Nullable Output<String> translate) {
            $.translate = translate;
            return this;
        }

        public Builder translate(String translate) {
            return translate(Output.of(translate));
        }

        public Builder voiceid(@Nullable Output<String> voiceid) {
            $.voiceid = voiceid;
            return this;
        }

        public Builder voiceid(String voiceid) {
            return voiceid(Output.of(voiceid));
        }

        public Builder waf(@Nullable Output<String> waf) {
            $.waf = waf;
            return this;
        }

        public Builder waf(String waf) {
            return waf(Output.of(waf));
        }

        public Builder wafregional(@Nullable Output<String> wafregional) {
            $.wafregional = wafregional;
            return this;
        }

        public Builder wafregional(String wafregional) {
            return wafregional(Output.of(wafregional));
        }

        public Builder wafv2(@Nullable Output<String> wafv2) {
            $.wafv2 = wafv2;
            return this;
        }

        public Builder wafv2(String wafv2) {
            return wafv2(Output.of(wafv2));
        }

        public Builder wellarchitected(@Nullable Output<String> wellarchitected) {
            $.wellarchitected = wellarchitected;
            return this;
        }

        public Builder wellarchitected(String wellarchitected) {
            return wellarchitected(Output.of(wellarchitected));
        }

        public Builder wisdom(@Nullable Output<String> wisdom) {
            $.wisdom = wisdom;
            return this;
        }

        public Builder wisdom(String wisdom) {
            return wisdom(Output.of(wisdom));
        }

        public Builder workdocs(@Nullable Output<String> workdocs) {
            $.workdocs = workdocs;
            return this;
        }

        public Builder workdocs(String workdocs) {
            return workdocs(Output.of(workdocs));
        }

        public Builder worklink(@Nullable Output<String> worklink) {
            $.worklink = worklink;
            return this;
        }

        public Builder worklink(String worklink) {
            return worklink(Output.of(worklink));
        }

        public Builder workmail(@Nullable Output<String> workmail) {
            $.workmail = workmail;
            return this;
        }

        public Builder workmail(String workmail) {
            return workmail(Output.of(workmail));
        }

        public Builder workmailmessageflow(@Nullable Output<String> workmailmessageflow) {
            $.workmailmessageflow = workmailmessageflow;
            return this;
        }

        public Builder workmailmessageflow(String workmailmessageflow) {
            return workmailmessageflow(Output.of(workmailmessageflow));
        }

        public Builder workspaces(@Nullable Output<String> workspaces) {
            $.workspaces = workspaces;
            return this;
        }

        public Builder workspaces(String workspaces) {
            return workspaces(Output.of(workspaces));
        }

        public Builder workspacesweb(@Nullable Output<String> workspacesweb) {
            $.workspacesweb = workspacesweb;
            return this;
        }

        public Builder workspacesweb(String workspacesweb) {
            return workspacesweb(Output.of(workspacesweb));
        }

        public Builder xray(@Nullable Output<String> xray) {
            $.xray = xray;
            return this;
        }

        public Builder xray(String xray) {
            return xray(Output.of(xray));
        }

        public ProviderEndpointArgs build() {
            return $;
        }
    }

}
