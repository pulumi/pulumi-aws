// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.aws.elasticache.inputs.ReplicationGroupClusterModeArgs;
import com.pulumi.aws.elasticache.inputs.ReplicationGroupLogDeliveryConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationGroupState Empty = new ReplicationGroupState();

    @Import(name="applyImmediately")
    private @Nullable Output<Boolean> applyImmediately;

    public Optional<Output<Boolean>> applyImmediately() {
        return Optional.ofNullable(this.applyImmediately);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="atRestEncryptionEnabled")
    private @Nullable Output<Boolean> atRestEncryptionEnabled;

    public Optional<Output<Boolean>> atRestEncryptionEnabled() {
        return Optional.ofNullable(this.atRestEncryptionEnabled);
    }

    @Import(name="authToken")
    private @Nullable Output<String> authToken;

    public Optional<Output<String>> authToken() {
        return Optional.ofNullable(this.authToken);
    }

    @Import(name="autoMinorVersionUpgrade")
    private @Nullable Output<Boolean> autoMinorVersionUpgrade;

    public Optional<Output<Boolean>> autoMinorVersionUpgrade() {
        return Optional.ofNullable(this.autoMinorVersionUpgrade);
    }

    @Import(name="automaticFailoverEnabled")
    private @Nullable Output<Boolean> automaticFailoverEnabled;

    public Optional<Output<Boolean>> automaticFailoverEnabled() {
        return Optional.ofNullable(this.automaticFailoverEnabled);
    }

    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    @Import(name="clusterEnabled")
    private @Nullable Output<Boolean> clusterEnabled;

    public Optional<Output<Boolean>> clusterEnabled() {
        return Optional.ofNullable(this.clusterEnabled);
    }

    /**
     * @deprecated
     * Use num_node_groups and replicas_per_node_group instead
     * 
     */
    @Deprecated /* Use num_node_groups and replicas_per_node_group instead */
    @Import(name="clusterMode")
    private @Nullable Output<ReplicationGroupClusterModeArgs> clusterMode;

    /**
     * @deprecated
     * Use num_node_groups and replicas_per_node_group instead
     * 
     */
    @Deprecated /* Use num_node_groups and replicas_per_node_group instead */
    public Optional<Output<ReplicationGroupClusterModeArgs>> clusterMode() {
        return Optional.ofNullable(this.clusterMode);
    }

    @Import(name="configurationEndpointAddress")
    private @Nullable Output<String> configurationEndpointAddress;

    public Optional<Output<String>> configurationEndpointAddress() {
        return Optional.ofNullable(this.configurationEndpointAddress);
    }

    @Import(name="dataTieringEnabled")
    private @Nullable Output<Boolean> dataTieringEnabled;

    public Optional<Output<Boolean>> dataTieringEnabled() {
        return Optional.ofNullable(this.dataTieringEnabled);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="engine")
    private @Nullable Output<String> engine;

    public Optional<Output<String>> engine() {
        return Optional.ofNullable(this.engine);
    }

    @Import(name="engineVersion")
    private @Nullable Output<String> engineVersion;

    public Optional<Output<String>> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }

    @Import(name="engineVersionActual")
    private @Nullable Output<String> engineVersionActual;

    public Optional<Output<String>> engineVersionActual() {
        return Optional.ofNullable(this.engineVersionActual);
    }

    @Import(name="finalSnapshotIdentifier")
    private @Nullable Output<String> finalSnapshotIdentifier;

    public Optional<Output<String>> finalSnapshotIdentifier() {
        return Optional.ofNullable(this.finalSnapshotIdentifier);
    }

    @Import(name="globalReplicationGroupId")
    private @Nullable Output<String> globalReplicationGroupId;

    public Optional<Output<String>> globalReplicationGroupId() {
        return Optional.ofNullable(this.globalReplicationGroupId);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="logDeliveryConfigurations")
    private @Nullable Output<List<ReplicationGroupLogDeliveryConfigurationArgs>> logDeliveryConfigurations;

    public Optional<Output<List<ReplicationGroupLogDeliveryConfigurationArgs>>> logDeliveryConfigurations() {
        return Optional.ofNullable(this.logDeliveryConfigurations);
    }

    @Import(name="maintenanceWindow")
    private @Nullable Output<String> maintenanceWindow;

    public Optional<Output<String>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    @Import(name="memberClusters")
    private @Nullable Output<List<String>> memberClusters;

    public Optional<Output<List<String>>> memberClusters() {
        return Optional.ofNullable(this.memberClusters);
    }

    @Import(name="multiAzEnabled")
    private @Nullable Output<Boolean> multiAzEnabled;

    public Optional<Output<Boolean>> multiAzEnabled() {
        return Optional.ofNullable(this.multiAzEnabled);
    }

    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    @Import(name="notificationTopicArn")
    private @Nullable Output<String> notificationTopicArn;

    public Optional<Output<String>> notificationTopicArn() {
        return Optional.ofNullable(this.notificationTopicArn);
    }

    @Import(name="numCacheClusters")
    private @Nullable Output<Integer> numCacheClusters;

    public Optional<Output<Integer>> numCacheClusters() {
        return Optional.ofNullable(this.numCacheClusters);
    }

    @Import(name="numNodeGroups")
    private @Nullable Output<Integer> numNodeGroups;

    public Optional<Output<Integer>> numNodeGroups() {
        return Optional.ofNullable(this.numNodeGroups);
    }

    /**
     * @deprecated
     * Use num_cache_clusters instead
     * 
     */
    @Deprecated /* Use num_cache_clusters instead */
    @Import(name="numberCacheClusters")
    private @Nullable Output<Integer> numberCacheClusters;

    /**
     * @deprecated
     * Use num_cache_clusters instead
     * 
     */
    @Deprecated /* Use num_cache_clusters instead */
    public Optional<Output<Integer>> numberCacheClusters() {
        return Optional.ofNullable(this.numberCacheClusters);
    }

    @Import(name="parameterGroupName")
    private @Nullable Output<String> parameterGroupName;

    public Optional<Output<String>> parameterGroupName() {
        return Optional.ofNullable(this.parameterGroupName);
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="preferredCacheClusterAzs")
    private @Nullable Output<List<String>> preferredCacheClusterAzs;

    public Optional<Output<List<String>>> preferredCacheClusterAzs() {
        return Optional.ofNullable(this.preferredCacheClusterAzs);
    }

    @Import(name="primaryEndpointAddress")
    private @Nullable Output<String> primaryEndpointAddress;

    public Optional<Output<String>> primaryEndpointAddress() {
        return Optional.ofNullable(this.primaryEndpointAddress);
    }

    @Import(name="readerEndpointAddress")
    private @Nullable Output<String> readerEndpointAddress;

    public Optional<Output<String>> readerEndpointAddress() {
        return Optional.ofNullable(this.readerEndpointAddress);
    }

    @Import(name="replicasPerNodeGroup")
    private @Nullable Output<Integer> replicasPerNodeGroup;

    public Optional<Output<Integer>> replicasPerNodeGroup() {
        return Optional.ofNullable(this.replicasPerNodeGroup);
    }

    /**
     * @deprecated
     * Use description instead
     * 
     */
    @Deprecated /* Use description instead */
    @Import(name="replicationGroupDescription")
    private @Nullable Output<String> replicationGroupDescription;

    /**
     * @deprecated
     * Use description instead
     * 
     */
    @Deprecated /* Use description instead */
    public Optional<Output<String>> replicationGroupDescription() {
        return Optional.ofNullable(this.replicationGroupDescription);
    }

    @Import(name="replicationGroupId")
    private @Nullable Output<String> replicationGroupId;

    public Optional<Output<String>> replicationGroupId() {
        return Optional.ofNullable(this.replicationGroupId);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="securityGroupNames")
    private @Nullable Output<List<String>> securityGroupNames;

    public Optional<Output<List<String>>> securityGroupNames() {
        return Optional.ofNullable(this.securityGroupNames);
    }

    @Import(name="snapshotArns")
    private @Nullable Output<List<String>> snapshotArns;

    public Optional<Output<List<String>>> snapshotArns() {
        return Optional.ofNullable(this.snapshotArns);
    }

    @Import(name="snapshotName")
    private @Nullable Output<String> snapshotName;

    public Optional<Output<String>> snapshotName() {
        return Optional.ofNullable(this.snapshotName);
    }

    @Import(name="snapshotRetentionLimit")
    private @Nullable Output<Integer> snapshotRetentionLimit;

    public Optional<Output<Integer>> snapshotRetentionLimit() {
        return Optional.ofNullable(this.snapshotRetentionLimit);
    }

    @Import(name="snapshotWindow")
    private @Nullable Output<String> snapshotWindow;

    public Optional<Output<String>> snapshotWindow() {
        return Optional.ofNullable(this.snapshotWindow);
    }

    @Import(name="subnetGroupName")
    private @Nullable Output<String> subnetGroupName;

    public Optional<Output<String>> subnetGroupName() {
        return Optional.ofNullable(this.subnetGroupName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="transitEncryptionEnabled")
    private @Nullable Output<Boolean> transitEncryptionEnabled;

    public Optional<Output<Boolean>> transitEncryptionEnabled() {
        return Optional.ofNullable(this.transitEncryptionEnabled);
    }

    @Import(name="userGroupIds")
    private @Nullable Output<List<String>> userGroupIds;

    public Optional<Output<List<String>>> userGroupIds() {
        return Optional.ofNullable(this.userGroupIds);
    }

    private ReplicationGroupState() {}

    private ReplicationGroupState(ReplicationGroupState $) {
        this.applyImmediately = $.applyImmediately;
        this.arn = $.arn;
        this.atRestEncryptionEnabled = $.atRestEncryptionEnabled;
        this.authToken = $.authToken;
        this.autoMinorVersionUpgrade = $.autoMinorVersionUpgrade;
        this.automaticFailoverEnabled = $.automaticFailoverEnabled;
        this.availabilityZones = $.availabilityZones;
        this.clusterEnabled = $.clusterEnabled;
        this.clusterMode = $.clusterMode;
        this.configurationEndpointAddress = $.configurationEndpointAddress;
        this.dataTieringEnabled = $.dataTieringEnabled;
        this.description = $.description;
        this.engine = $.engine;
        this.engineVersion = $.engineVersion;
        this.engineVersionActual = $.engineVersionActual;
        this.finalSnapshotIdentifier = $.finalSnapshotIdentifier;
        this.globalReplicationGroupId = $.globalReplicationGroupId;
        this.kmsKeyId = $.kmsKeyId;
        this.logDeliveryConfigurations = $.logDeliveryConfigurations;
        this.maintenanceWindow = $.maintenanceWindow;
        this.memberClusters = $.memberClusters;
        this.multiAzEnabled = $.multiAzEnabled;
        this.nodeType = $.nodeType;
        this.notificationTopicArn = $.notificationTopicArn;
        this.numCacheClusters = $.numCacheClusters;
        this.numNodeGroups = $.numNodeGroups;
        this.numberCacheClusters = $.numberCacheClusters;
        this.parameterGroupName = $.parameterGroupName;
        this.port = $.port;
        this.preferredCacheClusterAzs = $.preferredCacheClusterAzs;
        this.primaryEndpointAddress = $.primaryEndpointAddress;
        this.readerEndpointAddress = $.readerEndpointAddress;
        this.replicasPerNodeGroup = $.replicasPerNodeGroup;
        this.replicationGroupDescription = $.replicationGroupDescription;
        this.replicationGroupId = $.replicationGroupId;
        this.securityGroupIds = $.securityGroupIds;
        this.securityGroupNames = $.securityGroupNames;
        this.snapshotArns = $.snapshotArns;
        this.snapshotName = $.snapshotName;
        this.snapshotRetentionLimit = $.snapshotRetentionLimit;
        this.snapshotWindow = $.snapshotWindow;
        this.subnetGroupName = $.subnetGroupName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.transitEncryptionEnabled = $.transitEncryptionEnabled;
        this.userGroupIds = $.userGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationGroupState $;

        public Builder() {
            $ = new ReplicationGroupState();
        }

        public Builder(ReplicationGroupState defaults) {
            $ = new ReplicationGroupState(Objects.requireNonNull(defaults));
        }

        public Builder applyImmediately(@Nullable Output<Boolean> applyImmediately) {
            $.applyImmediately = applyImmediately;
            return this;
        }

        public Builder applyImmediately(Boolean applyImmediately) {
            return applyImmediately(Output.of(applyImmediately));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder atRestEncryptionEnabled(@Nullable Output<Boolean> atRestEncryptionEnabled) {
            $.atRestEncryptionEnabled = atRestEncryptionEnabled;
            return this;
        }

        public Builder atRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
            return atRestEncryptionEnabled(Output.of(atRestEncryptionEnabled));
        }

        public Builder authToken(@Nullable Output<String> authToken) {
            $.authToken = authToken;
            return this;
        }

        public Builder authToken(String authToken) {
            return authToken(Output.of(authToken));
        }

        public Builder autoMinorVersionUpgrade(@Nullable Output<Boolean> autoMinorVersionUpgrade) {
            $.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }

        public Builder autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
            return autoMinorVersionUpgrade(Output.of(autoMinorVersionUpgrade));
        }

        public Builder automaticFailoverEnabled(@Nullable Output<Boolean> automaticFailoverEnabled) {
            $.automaticFailoverEnabled = automaticFailoverEnabled;
            return this;
        }

        public Builder automaticFailoverEnabled(Boolean automaticFailoverEnabled) {
            return automaticFailoverEnabled(Output.of(automaticFailoverEnabled));
        }

        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder clusterEnabled(@Nullable Output<Boolean> clusterEnabled) {
            $.clusterEnabled = clusterEnabled;
            return this;
        }

        public Builder clusterEnabled(Boolean clusterEnabled) {
            return clusterEnabled(Output.of(clusterEnabled));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use num_node_groups and replicas_per_node_group instead
         * 
         */
        @Deprecated /* Use num_node_groups and replicas_per_node_group instead */
        public Builder clusterMode(@Nullable Output<ReplicationGroupClusterModeArgs> clusterMode) {
            $.clusterMode = clusterMode;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use num_node_groups and replicas_per_node_group instead
         * 
         */
        @Deprecated /* Use num_node_groups and replicas_per_node_group instead */
        public Builder clusterMode(ReplicationGroupClusterModeArgs clusterMode) {
            return clusterMode(Output.of(clusterMode));
        }

        public Builder configurationEndpointAddress(@Nullable Output<String> configurationEndpointAddress) {
            $.configurationEndpointAddress = configurationEndpointAddress;
            return this;
        }

        public Builder configurationEndpointAddress(String configurationEndpointAddress) {
            return configurationEndpointAddress(Output.of(configurationEndpointAddress));
        }

        public Builder dataTieringEnabled(@Nullable Output<Boolean> dataTieringEnabled) {
            $.dataTieringEnabled = dataTieringEnabled;
            return this;
        }

        public Builder dataTieringEnabled(Boolean dataTieringEnabled) {
            return dataTieringEnabled(Output.of(dataTieringEnabled));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder engine(@Nullable Output<String> engine) {
            $.engine = engine;
            return this;
        }

        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        public Builder engineVersionActual(@Nullable Output<String> engineVersionActual) {
            $.engineVersionActual = engineVersionActual;
            return this;
        }

        public Builder engineVersionActual(String engineVersionActual) {
            return engineVersionActual(Output.of(engineVersionActual));
        }

        public Builder finalSnapshotIdentifier(@Nullable Output<String> finalSnapshotIdentifier) {
            $.finalSnapshotIdentifier = finalSnapshotIdentifier;
            return this;
        }

        public Builder finalSnapshotIdentifier(String finalSnapshotIdentifier) {
            return finalSnapshotIdentifier(Output.of(finalSnapshotIdentifier));
        }

        public Builder globalReplicationGroupId(@Nullable Output<String> globalReplicationGroupId) {
            $.globalReplicationGroupId = globalReplicationGroupId;
            return this;
        }

        public Builder globalReplicationGroupId(String globalReplicationGroupId) {
            return globalReplicationGroupId(Output.of(globalReplicationGroupId));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder logDeliveryConfigurations(@Nullable Output<List<ReplicationGroupLogDeliveryConfigurationArgs>> logDeliveryConfigurations) {
            $.logDeliveryConfigurations = logDeliveryConfigurations;
            return this;
        }

        public Builder logDeliveryConfigurations(List<ReplicationGroupLogDeliveryConfigurationArgs> logDeliveryConfigurations) {
            return logDeliveryConfigurations(Output.of(logDeliveryConfigurations));
        }

        public Builder logDeliveryConfigurations(ReplicationGroupLogDeliveryConfigurationArgs... logDeliveryConfigurations) {
            return logDeliveryConfigurations(List.of(logDeliveryConfigurations));
        }

        public Builder maintenanceWindow(@Nullable Output<String> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        public Builder maintenanceWindow(String maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        public Builder memberClusters(@Nullable Output<List<String>> memberClusters) {
            $.memberClusters = memberClusters;
            return this;
        }

        public Builder memberClusters(List<String> memberClusters) {
            return memberClusters(Output.of(memberClusters));
        }

        public Builder memberClusters(String... memberClusters) {
            return memberClusters(List.of(memberClusters));
        }

        public Builder multiAzEnabled(@Nullable Output<Boolean> multiAzEnabled) {
            $.multiAzEnabled = multiAzEnabled;
            return this;
        }

        public Builder multiAzEnabled(Boolean multiAzEnabled) {
            return multiAzEnabled(Output.of(multiAzEnabled));
        }

        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public Builder notificationTopicArn(@Nullable Output<String> notificationTopicArn) {
            $.notificationTopicArn = notificationTopicArn;
            return this;
        }

        public Builder notificationTopicArn(String notificationTopicArn) {
            return notificationTopicArn(Output.of(notificationTopicArn));
        }

        public Builder numCacheClusters(@Nullable Output<Integer> numCacheClusters) {
            $.numCacheClusters = numCacheClusters;
            return this;
        }

        public Builder numCacheClusters(Integer numCacheClusters) {
            return numCacheClusters(Output.of(numCacheClusters));
        }

        public Builder numNodeGroups(@Nullable Output<Integer> numNodeGroups) {
            $.numNodeGroups = numNodeGroups;
            return this;
        }

        public Builder numNodeGroups(Integer numNodeGroups) {
            return numNodeGroups(Output.of(numNodeGroups));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use num_cache_clusters instead
         * 
         */
        @Deprecated /* Use num_cache_clusters instead */
        public Builder numberCacheClusters(@Nullable Output<Integer> numberCacheClusters) {
            $.numberCacheClusters = numberCacheClusters;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use num_cache_clusters instead
         * 
         */
        @Deprecated /* Use num_cache_clusters instead */
        public Builder numberCacheClusters(Integer numberCacheClusters) {
            return numberCacheClusters(Output.of(numberCacheClusters));
        }

        public Builder parameterGroupName(@Nullable Output<String> parameterGroupName) {
            $.parameterGroupName = parameterGroupName;
            return this;
        }

        public Builder parameterGroupName(String parameterGroupName) {
            return parameterGroupName(Output.of(parameterGroupName));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder preferredCacheClusterAzs(@Nullable Output<List<String>> preferredCacheClusterAzs) {
            $.preferredCacheClusterAzs = preferredCacheClusterAzs;
            return this;
        }

        public Builder preferredCacheClusterAzs(List<String> preferredCacheClusterAzs) {
            return preferredCacheClusterAzs(Output.of(preferredCacheClusterAzs));
        }

        public Builder preferredCacheClusterAzs(String... preferredCacheClusterAzs) {
            return preferredCacheClusterAzs(List.of(preferredCacheClusterAzs));
        }

        public Builder primaryEndpointAddress(@Nullable Output<String> primaryEndpointAddress) {
            $.primaryEndpointAddress = primaryEndpointAddress;
            return this;
        }

        public Builder primaryEndpointAddress(String primaryEndpointAddress) {
            return primaryEndpointAddress(Output.of(primaryEndpointAddress));
        }

        public Builder readerEndpointAddress(@Nullable Output<String> readerEndpointAddress) {
            $.readerEndpointAddress = readerEndpointAddress;
            return this;
        }

        public Builder readerEndpointAddress(String readerEndpointAddress) {
            return readerEndpointAddress(Output.of(readerEndpointAddress));
        }

        public Builder replicasPerNodeGroup(@Nullable Output<Integer> replicasPerNodeGroup) {
            $.replicasPerNodeGroup = replicasPerNodeGroup;
            return this;
        }

        public Builder replicasPerNodeGroup(Integer replicasPerNodeGroup) {
            return replicasPerNodeGroup(Output.of(replicasPerNodeGroup));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use description instead
         * 
         */
        @Deprecated /* Use description instead */
        public Builder replicationGroupDescription(@Nullable Output<String> replicationGroupDescription) {
            $.replicationGroupDescription = replicationGroupDescription;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use description instead
         * 
         */
        @Deprecated /* Use description instead */
        public Builder replicationGroupDescription(String replicationGroupDescription) {
            return replicationGroupDescription(Output.of(replicationGroupDescription));
        }

        public Builder replicationGroupId(@Nullable Output<String> replicationGroupId) {
            $.replicationGroupId = replicationGroupId;
            return this;
        }

        public Builder replicationGroupId(String replicationGroupId) {
            return replicationGroupId(Output.of(replicationGroupId));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder securityGroupNames(@Nullable Output<List<String>> securityGroupNames) {
            $.securityGroupNames = securityGroupNames;
            return this;
        }

        public Builder securityGroupNames(List<String> securityGroupNames) {
            return securityGroupNames(Output.of(securityGroupNames));
        }

        public Builder securityGroupNames(String... securityGroupNames) {
            return securityGroupNames(List.of(securityGroupNames));
        }

        public Builder snapshotArns(@Nullable Output<List<String>> snapshotArns) {
            $.snapshotArns = snapshotArns;
            return this;
        }

        public Builder snapshotArns(List<String> snapshotArns) {
            return snapshotArns(Output.of(snapshotArns));
        }

        public Builder snapshotArns(String... snapshotArns) {
            return snapshotArns(List.of(snapshotArns));
        }

        public Builder snapshotName(@Nullable Output<String> snapshotName) {
            $.snapshotName = snapshotName;
            return this;
        }

        public Builder snapshotName(String snapshotName) {
            return snapshotName(Output.of(snapshotName));
        }

        public Builder snapshotRetentionLimit(@Nullable Output<Integer> snapshotRetentionLimit) {
            $.snapshotRetentionLimit = snapshotRetentionLimit;
            return this;
        }

        public Builder snapshotRetentionLimit(Integer snapshotRetentionLimit) {
            return snapshotRetentionLimit(Output.of(snapshotRetentionLimit));
        }

        public Builder snapshotWindow(@Nullable Output<String> snapshotWindow) {
            $.snapshotWindow = snapshotWindow;
            return this;
        }

        public Builder snapshotWindow(String snapshotWindow) {
            return snapshotWindow(Output.of(snapshotWindow));
        }

        public Builder subnetGroupName(@Nullable Output<String> subnetGroupName) {
            $.subnetGroupName = subnetGroupName;
            return this;
        }

        public Builder subnetGroupName(String subnetGroupName) {
            return subnetGroupName(Output.of(subnetGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder transitEncryptionEnabled(@Nullable Output<Boolean> transitEncryptionEnabled) {
            $.transitEncryptionEnabled = transitEncryptionEnabled;
            return this;
        }

        public Builder transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
            return transitEncryptionEnabled(Output.of(transitEncryptionEnabled));
        }

        public Builder userGroupIds(@Nullable Output<List<String>> userGroupIds) {
            $.userGroupIds = userGroupIds;
            return this;
        }

        public Builder userGroupIds(List<String> userGroupIds) {
            return userGroupIds(Output.of(userGroupIds));
        }

        public Builder userGroupIds(String... userGroupIds) {
            return userGroupIds(List.of(userGroupIds));
        }

        public ReplicationGroupState build() {
            return $;
        }
    }

}
