// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostedConfigurationVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostedConfigurationVersionArgs Empty = new HostedConfigurationVersionArgs();

    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId;
    }

    @Import(name="configurationProfileId", required=true)
    private Output<String> configurationProfileId;

    public Output<String> configurationProfileId() {
        return this.configurationProfileId;
    }

    @Import(name="content", required=true)
    private Output<String> content;

    public Output<String> content() {
        return this.content;
    }

    @Import(name="contentType", required=true)
    private Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    private HostedConfigurationVersionArgs() {}

    private HostedConfigurationVersionArgs(HostedConfigurationVersionArgs $) {
        this.applicationId = $.applicationId;
        this.configurationProfileId = $.configurationProfileId;
        this.content = $.content;
        this.contentType = $.contentType;
        this.description = $.description;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostedConfigurationVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostedConfigurationVersionArgs $;

        public Builder() {
            $ = new HostedConfigurationVersionArgs();
        }

        public Builder(HostedConfigurationVersionArgs defaults) {
            $ = new HostedConfigurationVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder configurationProfileId(Output<String> configurationProfileId) {
            $.configurationProfileId = configurationProfileId;
            return this;
        }

        public Builder configurationProfileId(String configurationProfileId) {
            return configurationProfileId(Output.of(configurationProfileId));
        }

        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder contentType(Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public HostedConfigurationVersionArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.configurationProfileId = Objects.requireNonNull($.configurationProfileId, "expected parameter 'configurationProfileId' to be non-null");
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            $.contentType = Objects.requireNonNull($.contentType, "expected parameter 'contentType' to be non-null");
            return $;
        }
    }

}
