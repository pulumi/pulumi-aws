// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.inputs;

import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionAndArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionCostCategoryArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionDimensionArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionNotArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionOrArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionTagsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnomalySubscriptionThresholdExpressionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnomalySubscriptionThresholdExpressionArgs Empty = new AnomalySubscriptionThresholdExpressionArgs();

    /**
     * Return results that match both Dimension objects.
     * 
     */
    @Import(name="ands")
    private @Nullable Output<List<AnomalySubscriptionThresholdExpressionAndArgs>> ands;

    /**
     * @return Return results that match both Dimension objects.
     * 
     */
    public Optional<Output<List<AnomalySubscriptionThresholdExpressionAndArgs>>> ands() {
        return Optional.ofNullable(this.ands);
    }

    /**
     * Configuration block for the filter that&#39;s based on  values. See Cost Category below.
     * 
     */
    @Import(name="costCategory")
    private @Nullable Output<AnomalySubscriptionThresholdExpressionCostCategoryArgs> costCategory;

    /**
     * @return Configuration block for the filter that&#39;s based on  values. See Cost Category below.
     * 
     */
    public Optional<Output<AnomalySubscriptionThresholdExpressionCostCategoryArgs>> costCategory() {
        return Optional.ofNullable(this.costCategory);
    }

    /**
     * Configuration block for the specific Dimension to use for.
     * 
     */
    @Import(name="dimension")
    private @Nullable Output<AnomalySubscriptionThresholdExpressionDimensionArgs> dimension;

    /**
     * @return Configuration block for the specific Dimension to use for.
     * 
     */
    public Optional<Output<AnomalySubscriptionThresholdExpressionDimensionArgs>> dimension() {
        return Optional.ofNullable(this.dimension);
    }

    /**
     * Return results that do not match the Dimension object.
     * 
     */
    @Import(name="not")
    private @Nullable Output<AnomalySubscriptionThresholdExpressionNotArgs> not;

    /**
     * @return Return results that do not match the Dimension object.
     * 
     */
    public Optional<Output<AnomalySubscriptionThresholdExpressionNotArgs>> not() {
        return Optional.ofNullable(this.not);
    }

    /**
     * Return results that match either Dimension object.
     * 
     */
    @Import(name="ors")
    private @Nullable Output<List<AnomalySubscriptionThresholdExpressionOrArgs>> ors;

    /**
     * @return Return results that match either Dimension object.
     * 
     */
    public Optional<Output<List<AnomalySubscriptionThresholdExpressionOrArgs>>> ors() {
        return Optional.ofNullable(this.ors);
    }

    /**
     * Configuration block for the specific Tag to use for. See Tags below.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<AnomalySubscriptionThresholdExpressionTagsArgs> tags;

    /**
     * @return Configuration block for the specific Tag to use for. See Tags below.
     * 
     */
    public Optional<Output<AnomalySubscriptionThresholdExpressionTagsArgs>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AnomalySubscriptionThresholdExpressionArgs() {}

    private AnomalySubscriptionThresholdExpressionArgs(AnomalySubscriptionThresholdExpressionArgs $) {
        this.ands = $.ands;
        this.costCategory = $.costCategory;
        this.dimension = $.dimension;
        this.not = $.not;
        this.ors = $.ors;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnomalySubscriptionThresholdExpressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnomalySubscriptionThresholdExpressionArgs $;

        public Builder() {
            $ = new AnomalySubscriptionThresholdExpressionArgs();
        }

        public Builder(AnomalySubscriptionThresholdExpressionArgs defaults) {
            $ = new AnomalySubscriptionThresholdExpressionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ands Return results that match both Dimension objects.
         * 
         * @return builder
         * 
         */
        public Builder ands(@Nullable Output<List<AnomalySubscriptionThresholdExpressionAndArgs>> ands) {
            $.ands = ands;
            return this;
        }

        /**
         * @param ands Return results that match both Dimension objects.
         * 
         * @return builder
         * 
         */
        public Builder ands(List<AnomalySubscriptionThresholdExpressionAndArgs> ands) {
            return ands(Output.of(ands));
        }

        /**
         * @param ands Return results that match both Dimension objects.
         * 
         * @return builder
         * 
         */
        public Builder ands(AnomalySubscriptionThresholdExpressionAndArgs... ands) {
            return ands(List.of(ands));
        }

        /**
         * @param costCategory Configuration block for the filter that&#39;s based on  values. See Cost Category below.
         * 
         * @return builder
         * 
         */
        public Builder costCategory(@Nullable Output<AnomalySubscriptionThresholdExpressionCostCategoryArgs> costCategory) {
            $.costCategory = costCategory;
            return this;
        }

        /**
         * @param costCategory Configuration block for the filter that&#39;s based on  values. See Cost Category below.
         * 
         * @return builder
         * 
         */
        public Builder costCategory(AnomalySubscriptionThresholdExpressionCostCategoryArgs costCategory) {
            return costCategory(Output.of(costCategory));
        }

        /**
         * @param dimension Configuration block for the specific Dimension to use for.
         * 
         * @return builder
         * 
         */
        public Builder dimension(@Nullable Output<AnomalySubscriptionThresholdExpressionDimensionArgs> dimension) {
            $.dimension = dimension;
            return this;
        }

        /**
         * @param dimension Configuration block for the specific Dimension to use for.
         * 
         * @return builder
         * 
         */
        public Builder dimension(AnomalySubscriptionThresholdExpressionDimensionArgs dimension) {
            return dimension(Output.of(dimension));
        }

        /**
         * @param not Return results that do not match the Dimension object.
         * 
         * @return builder
         * 
         */
        public Builder not(@Nullable Output<AnomalySubscriptionThresholdExpressionNotArgs> not) {
            $.not = not;
            return this;
        }

        /**
         * @param not Return results that do not match the Dimension object.
         * 
         * @return builder
         * 
         */
        public Builder not(AnomalySubscriptionThresholdExpressionNotArgs not) {
            return not(Output.of(not));
        }

        /**
         * @param ors Return results that match either Dimension object.
         * 
         * @return builder
         * 
         */
        public Builder ors(@Nullable Output<List<AnomalySubscriptionThresholdExpressionOrArgs>> ors) {
            $.ors = ors;
            return this;
        }

        /**
         * @param ors Return results that match either Dimension object.
         * 
         * @return builder
         * 
         */
        public Builder ors(List<AnomalySubscriptionThresholdExpressionOrArgs> ors) {
            return ors(Output.of(ors));
        }

        /**
         * @param ors Return results that match either Dimension object.
         * 
         * @return builder
         * 
         */
        public Builder ors(AnomalySubscriptionThresholdExpressionOrArgs... ors) {
            return ors(List.of(ors));
        }

        /**
         * @param tags Configuration block for the specific Tag to use for. See Tags below.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<AnomalySubscriptionThresholdExpressionTagsArgs> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Configuration block for the specific Tag to use for. See Tags below.
         * 
         * @return builder
         * 
         */
        public Builder tags(AnomalySubscriptionThresholdExpressionTagsArgs tags) {
            return tags(Output.of(tags));
        }

        public AnomalySubscriptionThresholdExpressionArgs build() {
            return $;
        }
    }

}
