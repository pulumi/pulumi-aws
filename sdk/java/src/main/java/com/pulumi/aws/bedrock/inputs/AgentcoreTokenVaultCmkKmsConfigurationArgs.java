// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreTokenVaultCmkKmsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreTokenVaultCmkKmsConfigurationArgs Empty = new AgentcoreTokenVaultCmkKmsConfigurationArgs();

    /**
     * Type of KMS key. Valid values: `CustomerManagedKey`, `ServiceManagedKey`.
     * 
     */
    @Import(name="keyType", required=true)
    private Output<String> keyType;

    /**
     * @return Type of KMS key. Valid values: `CustomerManagedKey`, `ServiceManagedKey`.
     * 
     */
    public Output<String> keyType() {
        return this.keyType;
    }

    /**
     * ARN of the KMS key.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    /**
     * @return ARN of the KMS key.
     * 
     */
    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    private AgentcoreTokenVaultCmkKmsConfigurationArgs() {}

    private AgentcoreTokenVaultCmkKmsConfigurationArgs(AgentcoreTokenVaultCmkKmsConfigurationArgs $) {
        this.keyType = $.keyType;
        this.kmsKeyArn = $.kmsKeyArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreTokenVaultCmkKmsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreTokenVaultCmkKmsConfigurationArgs $;

        public Builder() {
            $ = new AgentcoreTokenVaultCmkKmsConfigurationArgs();
        }

        public Builder(AgentcoreTokenVaultCmkKmsConfigurationArgs defaults) {
            $ = new AgentcoreTokenVaultCmkKmsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyType Type of KMS key. Valid values: `CustomerManagedKey`, `ServiceManagedKey`.
         * 
         * @return builder
         * 
         */
        public Builder keyType(Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param keyType Type of KMS key. Valid values: `CustomerManagedKey`, `ServiceManagedKey`.
         * 
         * @return builder
         * 
         */
        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        /**
         * @param kmsKeyArn ARN of the KMS key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        /**
         * @param kmsKeyArn ARN of the KMS key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public AgentcoreTokenVaultCmkKmsConfigurationArgs build() {
            if ($.keyType == null) {
                throw new MissingRequiredPropertyException("AgentcoreTokenVaultCmkKmsConfigurationArgs", "keyType");
            }
            return $;
        }
    }

}
