// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentCoreNetworkConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final GetCoreNetworkPolicyDocumentCoreNetworkConfiguration Empty = new GetCoreNetworkPolicyDocumentCoreNetworkConfiguration();

    @Import(name="asnRanges", required=true)
    private List<String> asnRanges;

    public List<String> asnRanges() {
        return this.asnRanges;
    }

    @Import(name="edgeLocations", required=true)
    private List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations;

    public List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations() {
        return this.edgeLocations;
    }

    @Import(name="insideCidrBlocks")
    private @Nullable List<String> insideCidrBlocks;

    public Optional<List<String>> insideCidrBlocks() {
        return Optional.ofNullable(this.insideCidrBlocks);
    }

    @Import(name="vpnEcmpSupport")
    private @Nullable Boolean vpnEcmpSupport;

    public Optional<Boolean> vpnEcmpSupport() {
        return Optional.ofNullable(this.vpnEcmpSupport);
    }

    private GetCoreNetworkPolicyDocumentCoreNetworkConfiguration() {}

    private GetCoreNetworkPolicyDocumentCoreNetworkConfiguration(GetCoreNetworkPolicyDocumentCoreNetworkConfiguration $) {
        this.asnRanges = $.asnRanges;
        this.edgeLocations = $.edgeLocations;
        this.insideCidrBlocks = $.insideCidrBlocks;
        this.vpnEcmpSupport = $.vpnEcmpSupport;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentCoreNetworkConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentCoreNetworkConfiguration $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentCoreNetworkConfiguration();
        }

        public Builder(GetCoreNetworkPolicyDocumentCoreNetworkConfiguration defaults) {
            $ = new GetCoreNetworkPolicyDocumentCoreNetworkConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder asnRanges(List<String> asnRanges) {
            $.asnRanges = asnRanges;
            return this;
        }

        public Builder asnRanges(String... asnRanges) {
            return asnRanges(List.of(asnRanges));
        }

        public Builder edgeLocations(List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations) {
            $.edgeLocations = edgeLocations;
            return this;
        }

        public Builder edgeLocations(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation... edgeLocations) {
            return edgeLocations(List.of(edgeLocations));
        }

        public Builder insideCidrBlocks(@Nullable List<String> insideCidrBlocks) {
            $.insideCidrBlocks = insideCidrBlocks;
            return this;
        }

        public Builder insideCidrBlocks(String... insideCidrBlocks) {
            return insideCidrBlocks(List.of(insideCidrBlocks));
        }

        public Builder vpnEcmpSupport(@Nullable Boolean vpnEcmpSupport) {
            $.vpnEcmpSupport = vpnEcmpSupport;
            return this;
        }

        public GetCoreNetworkPolicyDocumentCoreNetworkConfiguration build() {
            $.asnRanges = Objects.requireNonNull($.asnRanges, "expected parameter 'asnRanges' to be non-null");
            $.edgeLocations = Objects.requireNonNull($.edgeLocations, "expected parameter 'edgeLocations' to be non-null");
            return $;
        }
    }

}
