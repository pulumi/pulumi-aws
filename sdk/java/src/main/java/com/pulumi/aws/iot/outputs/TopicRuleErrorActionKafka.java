// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TopicRuleErrorActionKafka {
    /**
     * @return Properties of the Apache Kafka producer client. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/apache-kafka-rule-action.html).
     * 
     */
    private Map<String,String> clientProperties;
    /**
     * @return The ARN of Kafka action&#39;s VPC `aws.iot.TopicRuleDestination` .
     * 
     */
    private String destinationArn;
    /**
     * @return The Kafka message key.
     * 
     */
    private @Nullable String key;
    /**
     * @return The Kafka message partition.
     * 
     */
    private @Nullable String partition;
    /**
     * @return The Kafka topic for messages to be sent to the Kafka broker.
     * 
     */
    private String topic;

    private TopicRuleErrorActionKafka() {}
    /**
     * @return Properties of the Apache Kafka producer client. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/apache-kafka-rule-action.html).
     * 
     */
    public Map<String,String> clientProperties() {
        return this.clientProperties;
    }
    /**
     * @return The ARN of Kafka action&#39;s VPC `aws.iot.TopicRuleDestination` .
     * 
     */
    public String destinationArn() {
        return this.destinationArn;
    }
    /**
     * @return The Kafka message key.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return The Kafka message partition.
     * 
     */
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }
    /**
     * @return The Kafka topic for messages to be sent to the Kafka broker.
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicRuleErrorActionKafka defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> clientProperties;
        private String destinationArn;
        private @Nullable String key;
        private @Nullable String partition;
        private String topic;
        public Builder() {}
        public Builder(TopicRuleErrorActionKafka defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientProperties = defaults.clientProperties;
    	      this.destinationArn = defaults.destinationArn;
    	      this.key = defaults.key;
    	      this.partition = defaults.partition;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder clientProperties(Map<String,String> clientProperties) {
            this.clientProperties = Objects.requireNonNull(clientProperties);
            return this;
        }
        @CustomType.Setter
        public Builder destinationArn(String destinationArn) {
            this.destinationArn = Objects.requireNonNull(destinationArn);
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder partition(@Nullable String partition) {
            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public TopicRuleErrorActionKafka build() {
            final var o = new TopicRuleErrorActionKafka();
            o.clientProperties = clientProperties;
            o.destinationArn = destinationArn;
            o.key = key;
            o.partition = partition;
            o.topic = topic;
            return o;
        }
    }
}
