// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kms.inputs;

import com.pulumi.aws.kms.inputs.CustomKeyStoreXksProxyAuthenticationCredentialArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomKeyStoreState extends com.pulumi.resources.ResourceArgs {

    public static final CustomKeyStoreState Empty = new CustomKeyStoreState();

    @Import(name="cloudHsmClusterId")
    private @Nullable Output<String> cloudHsmClusterId;

    public Optional<Output<String>> cloudHsmClusterId() {
        return Optional.ofNullable(this.cloudHsmClusterId);
    }

    /**
     * Unique name for Custom Key Store.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="customKeyStoreName")
    private @Nullable Output<String> customKeyStoreName;

    /**
     * @return Unique name for Custom Key Store.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> customKeyStoreName() {
        return Optional.ofNullable(this.customKeyStoreName);
    }

    /**
     * Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
     * 
     */
    @Import(name="customKeyStoreType")
    private @Nullable Output<String> customKeyStoreType;

    /**
     * @return Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
     * 
     */
    public Optional<Output<String>> customKeyStoreType() {
        return Optional.ofNullable(this.customKeyStoreType);
    }

    @Import(name="keyStorePassword")
    private @Nullable Output<String> keyStorePassword;

    public Optional<Output<String>> keyStorePassword() {
        return Optional.ofNullable(this.keyStorePassword);
    }

    @Import(name="trustAnchorCertificate")
    private @Nullable Output<String> trustAnchorCertificate;

    public Optional<Output<String>> trustAnchorCertificate() {
        return Optional.ofNullable(this.trustAnchorCertificate);
    }

    @Import(name="xksProxyAuthenticationCredential")
    private @Nullable Output<CustomKeyStoreXksProxyAuthenticationCredentialArgs> xksProxyAuthenticationCredential;

    public Optional<Output<CustomKeyStoreXksProxyAuthenticationCredentialArgs>> xksProxyAuthenticationCredential() {
        return Optional.ofNullable(this.xksProxyAuthenticationCredential);
    }

    @Import(name="xksProxyConnectivity")
    private @Nullable Output<String> xksProxyConnectivity;

    public Optional<Output<String>> xksProxyConnectivity() {
        return Optional.ofNullable(this.xksProxyConnectivity);
    }

    @Import(name="xksProxyUriEndpoint")
    private @Nullable Output<String> xksProxyUriEndpoint;

    public Optional<Output<String>> xksProxyUriEndpoint() {
        return Optional.ofNullable(this.xksProxyUriEndpoint);
    }

    @Import(name="xksProxyUriPath")
    private @Nullable Output<String> xksProxyUriPath;

    public Optional<Output<String>> xksProxyUriPath() {
        return Optional.ofNullable(this.xksProxyUriPath);
    }

    @Import(name="xksProxyVpcEndpointServiceName")
    private @Nullable Output<String> xksProxyVpcEndpointServiceName;

    public Optional<Output<String>> xksProxyVpcEndpointServiceName() {
        return Optional.ofNullable(this.xksProxyVpcEndpointServiceName);
    }

    private CustomKeyStoreState() {}

    private CustomKeyStoreState(CustomKeyStoreState $) {
        this.cloudHsmClusterId = $.cloudHsmClusterId;
        this.customKeyStoreName = $.customKeyStoreName;
        this.customKeyStoreType = $.customKeyStoreType;
        this.keyStorePassword = $.keyStorePassword;
        this.trustAnchorCertificate = $.trustAnchorCertificate;
        this.xksProxyAuthenticationCredential = $.xksProxyAuthenticationCredential;
        this.xksProxyConnectivity = $.xksProxyConnectivity;
        this.xksProxyUriEndpoint = $.xksProxyUriEndpoint;
        this.xksProxyUriPath = $.xksProxyUriPath;
        this.xksProxyVpcEndpointServiceName = $.xksProxyVpcEndpointServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomKeyStoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomKeyStoreState $;

        public Builder() {
            $ = new CustomKeyStoreState();
        }

        public Builder(CustomKeyStoreState defaults) {
            $ = new CustomKeyStoreState(Objects.requireNonNull(defaults));
        }

        public Builder cloudHsmClusterId(@Nullable Output<String> cloudHsmClusterId) {
            $.cloudHsmClusterId = cloudHsmClusterId;
            return this;
        }

        public Builder cloudHsmClusterId(String cloudHsmClusterId) {
            return cloudHsmClusterId(Output.of(cloudHsmClusterId));
        }

        /**
         * @param customKeyStoreName Unique name for Custom Key Store.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder customKeyStoreName(@Nullable Output<String> customKeyStoreName) {
            $.customKeyStoreName = customKeyStoreName;
            return this;
        }

        /**
         * @param customKeyStoreName Unique name for Custom Key Store.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder customKeyStoreName(String customKeyStoreName) {
            return customKeyStoreName(Output.of(customKeyStoreName));
        }

        /**
         * @param customKeyStoreType Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
         * 
         * @return builder
         * 
         */
        public Builder customKeyStoreType(@Nullable Output<String> customKeyStoreType) {
            $.customKeyStoreType = customKeyStoreType;
            return this;
        }

        /**
         * @param customKeyStoreType Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
         * 
         * @return builder
         * 
         */
        public Builder customKeyStoreType(String customKeyStoreType) {
            return customKeyStoreType(Output.of(customKeyStoreType));
        }

        public Builder keyStorePassword(@Nullable Output<String> keyStorePassword) {
            $.keyStorePassword = keyStorePassword;
            return this;
        }

        public Builder keyStorePassword(String keyStorePassword) {
            return keyStorePassword(Output.of(keyStorePassword));
        }

        public Builder trustAnchorCertificate(@Nullable Output<String> trustAnchorCertificate) {
            $.trustAnchorCertificate = trustAnchorCertificate;
            return this;
        }

        public Builder trustAnchorCertificate(String trustAnchorCertificate) {
            return trustAnchorCertificate(Output.of(trustAnchorCertificate));
        }

        public Builder xksProxyAuthenticationCredential(@Nullable Output<CustomKeyStoreXksProxyAuthenticationCredentialArgs> xksProxyAuthenticationCredential) {
            $.xksProxyAuthenticationCredential = xksProxyAuthenticationCredential;
            return this;
        }

        public Builder xksProxyAuthenticationCredential(CustomKeyStoreXksProxyAuthenticationCredentialArgs xksProxyAuthenticationCredential) {
            return xksProxyAuthenticationCredential(Output.of(xksProxyAuthenticationCredential));
        }

        public Builder xksProxyConnectivity(@Nullable Output<String> xksProxyConnectivity) {
            $.xksProxyConnectivity = xksProxyConnectivity;
            return this;
        }

        public Builder xksProxyConnectivity(String xksProxyConnectivity) {
            return xksProxyConnectivity(Output.of(xksProxyConnectivity));
        }

        public Builder xksProxyUriEndpoint(@Nullable Output<String> xksProxyUriEndpoint) {
            $.xksProxyUriEndpoint = xksProxyUriEndpoint;
            return this;
        }

        public Builder xksProxyUriEndpoint(String xksProxyUriEndpoint) {
            return xksProxyUriEndpoint(Output.of(xksProxyUriEndpoint));
        }

        public Builder xksProxyUriPath(@Nullable Output<String> xksProxyUriPath) {
            $.xksProxyUriPath = xksProxyUriPath;
            return this;
        }

        public Builder xksProxyUriPath(String xksProxyUriPath) {
            return xksProxyUriPath(Output.of(xksProxyUriPath));
        }

        public Builder xksProxyVpcEndpointServiceName(@Nullable Output<String> xksProxyVpcEndpointServiceName) {
            $.xksProxyVpcEndpointServiceName = xksProxyVpcEndpointServiceName;
            return this;
        }

        public Builder xksProxyVpcEndpointServiceName(String xksProxyVpcEndpointServiceName) {
            return xksProxyVpcEndpointServiceName(Output.of(xksProxyVpcEndpointServiceName));
        }

        public CustomKeyStoreState build() {
            return $;
        }
    }

}
