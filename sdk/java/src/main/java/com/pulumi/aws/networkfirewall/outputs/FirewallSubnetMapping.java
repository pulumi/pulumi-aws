// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallSubnetMapping {
    /**
     * @return The subnet&#39;s IP address type. Valida values: `&#34;DUALSTACK&#34;`, `&#34;IPV4&#34;`.
     * 
     */
    private @Nullable String ipAddressType;
    /**
     * @return The unique identifier for the subnet.
     * 
     */
    private String subnetId;

    private FirewallSubnetMapping() {}
    /**
     * @return The subnet&#39;s IP address type. Valida values: `&#34;DUALSTACK&#34;`, `&#34;IPV4&#34;`.
     * 
     */
    public Optional<String> ipAddressType() {
        return Optional.ofNullable(this.ipAddressType);
    }
    /**
     * @return The unique identifier for the subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallSubnetMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ipAddressType;
        private String subnetId;
        public Builder() {}
        public Builder(FirewallSubnetMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddressType = defaults.ipAddressType;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder ipAddressType(@Nullable String ipAddressType) {

            this.ipAddressType = ipAddressType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("FirewallSubnetMapping", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public FirewallSubnetMapping build() {
            final var _resultValue = new FirewallSubnetMapping();
            _resultValue.ipAddressType = ipAddressType;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
