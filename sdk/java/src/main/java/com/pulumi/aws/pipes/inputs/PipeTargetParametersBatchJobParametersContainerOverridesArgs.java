// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.inputs;

import com.pulumi.aws.pipes.inputs.PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs;
import com.pulumi.aws.pipes.inputs.PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipeTargetParametersBatchJobParametersContainerOverridesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipeTargetParametersBatchJobParametersContainerOverridesArgs Empty = new PipeTargetParametersBatchJobParametersContainerOverridesArgs();

    @Import(name="commands")
    private @Nullable Output<List<String>> commands;

    public Optional<Output<List<String>>> commands() {
        return Optional.ofNullable(this.commands);
    }

    @Import(name="environments")
    private @Nullable Output<List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs>> environments;

    public Optional<Output<List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs>>> environments() {
        return Optional.ofNullable(this.environments);
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="resourceRequirements")
    private @Nullable Output<List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs>> resourceRequirements;

    public Optional<Output<List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs>>> resourceRequirements() {
        return Optional.ofNullable(this.resourceRequirements);
    }

    private PipeTargetParametersBatchJobParametersContainerOverridesArgs() {}

    private PipeTargetParametersBatchJobParametersContainerOverridesArgs(PipeTargetParametersBatchJobParametersContainerOverridesArgs $) {
        this.commands = $.commands;
        this.environments = $.environments;
        this.instanceType = $.instanceType;
        this.resourceRequirements = $.resourceRequirements;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipeTargetParametersBatchJobParametersContainerOverridesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipeTargetParametersBatchJobParametersContainerOverridesArgs $;

        public Builder() {
            $ = new PipeTargetParametersBatchJobParametersContainerOverridesArgs();
        }

        public Builder(PipeTargetParametersBatchJobParametersContainerOverridesArgs defaults) {
            $ = new PipeTargetParametersBatchJobParametersContainerOverridesArgs(Objects.requireNonNull(defaults));
        }

        public Builder commands(@Nullable Output<List<String>> commands) {
            $.commands = commands;
            return this;
        }

        public Builder commands(List<String> commands) {
            return commands(Output.of(commands));
        }

        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }

        public Builder environments(@Nullable Output<List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs>> environments) {
            $.environments = environments;
            return this;
        }

        public Builder environments(List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs> environments) {
            return environments(Output.of(environments));
        }

        public Builder environments(PipeTargetParametersBatchJobParametersContainerOverridesEnvironmentArgs... environments) {
            return environments(List.of(environments));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder resourceRequirements(@Nullable Output<List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs>> resourceRequirements) {
            $.resourceRequirements = resourceRequirements;
            return this;
        }

        public Builder resourceRequirements(List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs> resourceRequirements) {
            return resourceRequirements(Output.of(resourceRequirements));
        }

        public Builder resourceRequirements(PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirementArgs... resourceRequirements) {
            return resourceRequirements(List.of(resourceRequirements));
        }

        public PipeTargetParametersBatchJobParametersContainerOverridesArgs build() {
            return $;
        }
    }

}
