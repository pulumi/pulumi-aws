// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.aws.cognito.inputs.ManagedLoginBrandingAssetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedLoginBrandingState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedLoginBrandingState Empty = new ManagedLoginBrandingState();

    /**
     * Image files to apply to roles like backgrounds, logos, and icons. See details below.
     * 
     */
    @Import(name="assets")
    private @Nullable Output<List<ManagedLoginBrandingAssetArgs>> assets;

    /**
     * @return Image files to apply to roles like backgrounds, logos, and icons. See details below.
     * 
     */
    public Optional<Output<List<ManagedLoginBrandingAssetArgs>>> assets() {
        return Optional.ofNullable(this.assets);
    }

    /**
     * App client that the branding style is for.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return App client that the branding style is for.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * ID of the managed login branding style.
     * 
     */
    @Import(name="managedLoginBrandingId")
    private @Nullable Output<String> managedLoginBrandingId;

    /**
     * @return ID of the managed login branding style.
     * 
     */
    public Optional<Output<String>> managedLoginBrandingId() {
        return Optional.ofNullable(this.managedLoginBrandingId);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * JSON document with the the settings to apply to the style.
     * 
     */
    @Import(name="settings")
    private @Nullable Output<String> settings;

    /**
     * @return JSON document with the the settings to apply to the style.
     * 
     */
    public Optional<Output<String>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * Settings including Amazon Cognito defaults.
     * 
     */
    @Import(name="settingsAll")
    private @Nullable Output<String> settingsAll;

    /**
     * @return Settings including Amazon Cognito defaults.
     * 
     */
    public Optional<Output<String>> settingsAll() {
        return Optional.ofNullable(this.settingsAll);
    }

    /**
     * When `true`, applies the default branding style options.
     * 
     */
    @Import(name="useCognitoProvidedValues")
    private @Nullable Output<Boolean> useCognitoProvidedValues;

    /**
     * @return When `true`, applies the default branding style options.
     * 
     */
    public Optional<Output<Boolean>> useCognitoProvidedValues() {
        return Optional.ofNullable(this.useCognitoProvidedValues);
    }

    /**
     * User pool the client belongs to.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="userPoolId")
    private @Nullable Output<String> userPoolId;

    /**
     * @return User pool the client belongs to.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> userPoolId() {
        return Optional.ofNullable(this.userPoolId);
    }

    private ManagedLoginBrandingState() {}

    private ManagedLoginBrandingState(ManagedLoginBrandingState $) {
        this.assets = $.assets;
        this.clientId = $.clientId;
        this.managedLoginBrandingId = $.managedLoginBrandingId;
        this.region = $.region;
        this.settings = $.settings;
        this.settingsAll = $.settingsAll;
        this.useCognitoProvidedValues = $.useCognitoProvidedValues;
        this.userPoolId = $.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedLoginBrandingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedLoginBrandingState $;

        public Builder() {
            $ = new ManagedLoginBrandingState();
        }

        public Builder(ManagedLoginBrandingState defaults) {
            $ = new ManagedLoginBrandingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param assets Image files to apply to roles like backgrounds, logos, and icons. See details below.
         * 
         * @return builder
         * 
         */
        public Builder assets(@Nullable Output<List<ManagedLoginBrandingAssetArgs>> assets) {
            $.assets = assets;
            return this;
        }

        /**
         * @param assets Image files to apply to roles like backgrounds, logos, and icons. See details below.
         * 
         * @return builder
         * 
         */
        public Builder assets(List<ManagedLoginBrandingAssetArgs> assets) {
            return assets(Output.of(assets));
        }

        /**
         * @param assets Image files to apply to roles like backgrounds, logos, and icons. See details below.
         * 
         * @return builder
         * 
         */
        public Builder assets(ManagedLoginBrandingAssetArgs... assets) {
            return assets(List.of(assets));
        }

        /**
         * @param clientId App client that the branding style is for.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId App client that the branding style is for.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param managedLoginBrandingId ID of the managed login branding style.
         * 
         * @return builder
         * 
         */
        public Builder managedLoginBrandingId(@Nullable Output<String> managedLoginBrandingId) {
            $.managedLoginBrandingId = managedLoginBrandingId;
            return this;
        }

        /**
         * @param managedLoginBrandingId ID of the managed login branding style.
         * 
         * @return builder
         * 
         */
        public Builder managedLoginBrandingId(String managedLoginBrandingId) {
            return managedLoginBrandingId(Output.of(managedLoginBrandingId));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param settings JSON document with the the settings to apply to the style.
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<String> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings JSON document with the the settings to apply to the style.
         * 
         * @return builder
         * 
         */
        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param settingsAll Settings including Amazon Cognito defaults.
         * 
         * @return builder
         * 
         */
        public Builder settingsAll(@Nullable Output<String> settingsAll) {
            $.settingsAll = settingsAll;
            return this;
        }

        /**
         * @param settingsAll Settings including Amazon Cognito defaults.
         * 
         * @return builder
         * 
         */
        public Builder settingsAll(String settingsAll) {
            return settingsAll(Output.of(settingsAll));
        }

        /**
         * @param useCognitoProvidedValues When `true`, applies the default branding style options.
         * 
         * @return builder
         * 
         */
        public Builder useCognitoProvidedValues(@Nullable Output<Boolean> useCognitoProvidedValues) {
            $.useCognitoProvidedValues = useCognitoProvidedValues;
            return this;
        }

        /**
         * @param useCognitoProvidedValues When `true`, applies the default branding style options.
         * 
         * @return builder
         * 
         */
        public Builder useCognitoProvidedValues(Boolean useCognitoProvidedValues) {
            return useCognitoProvidedValues(Output.of(useCognitoProvidedValues));
        }

        /**
         * @param userPoolId User pool the client belongs to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder userPoolId(@Nullable Output<String> userPoolId) {
            $.userPoolId = userPoolId;
            return this;
        }

        /**
         * @param userPoolId User pool the client belongs to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder userPoolId(String userPoolId) {
            return userPoolId(Output.of(userPoolId));
        }

        public ManagedLoginBrandingState build() {
            return $;
        }
    }

}
