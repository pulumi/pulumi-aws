// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDataSetPhysicalTableMapS3SourceUploadSetting {
    private Boolean containsHeader;
    private String delimiter;
    private String format;
    private Integer startFromRow;
    private String textQualifier;

    private GetDataSetPhysicalTableMapS3SourceUploadSetting() {}
    public Boolean containsHeader() {
        return this.containsHeader;
    }
    public String delimiter() {
        return this.delimiter;
    }
    public String format() {
        return this.format;
    }
    public Integer startFromRow() {
        return this.startFromRow;
    }
    public String textQualifier() {
        return this.textQualifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSetPhysicalTableMapS3SourceUploadSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean containsHeader;
        private String delimiter;
        private String format;
        private Integer startFromRow;
        private String textQualifier;
        public Builder() {}
        public Builder(GetDataSetPhysicalTableMapS3SourceUploadSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containsHeader = defaults.containsHeader;
    	      this.delimiter = defaults.delimiter;
    	      this.format = defaults.format;
    	      this.startFromRow = defaults.startFromRow;
    	      this.textQualifier = defaults.textQualifier;
        }

        @CustomType.Setter
        public Builder containsHeader(Boolean containsHeader) {
            if (containsHeader == null) {
              throw new MissingRequiredPropertyException("GetDataSetPhysicalTableMapS3SourceUploadSetting", "containsHeader");
            }
            this.containsHeader = containsHeader;
            return this;
        }
        @CustomType.Setter
        public Builder delimiter(String delimiter) {
            if (delimiter == null) {
              throw new MissingRequiredPropertyException("GetDataSetPhysicalTableMapS3SourceUploadSetting", "delimiter");
            }
            this.delimiter = delimiter;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("GetDataSetPhysicalTableMapS3SourceUploadSetting", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder startFromRow(Integer startFromRow) {
            if (startFromRow == null) {
              throw new MissingRequiredPropertyException("GetDataSetPhysicalTableMapS3SourceUploadSetting", "startFromRow");
            }
            this.startFromRow = startFromRow;
            return this;
        }
        @CustomType.Setter
        public Builder textQualifier(String textQualifier) {
            if (textQualifier == null) {
              throw new MissingRequiredPropertyException("GetDataSetPhysicalTableMapS3SourceUploadSetting", "textQualifier");
            }
            this.textQualifier = textQualifier;
            return this;
        }
        public GetDataSetPhysicalTableMapS3SourceUploadSetting build() {
            final var _resultValue = new GetDataSetPhysicalTableMapS3SourceUploadSetting();
            _resultValue.containsHeader = containsHeader;
            _resultValue.delimiter = delimiter;
            _resultValue.format = format;
            _resultValue.startFromRow = startFromRow;
            _resultValue.textQualifier = textQualifier;
            return _resultValue;
        }
    }
}
