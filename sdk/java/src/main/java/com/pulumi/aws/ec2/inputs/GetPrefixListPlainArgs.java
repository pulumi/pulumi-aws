// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetPrefixListFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrefixListPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrefixListPlainArgs Empty = new GetPrefixListPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetPrefixListFilter> filters;

    public Optional<List<GetPrefixListFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="prefixListId")
    private @Nullable String prefixListId;

    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }

    private GetPrefixListPlainArgs() {}

    private GetPrefixListPlainArgs(GetPrefixListPlainArgs $) {
        this.filters = $.filters;
        this.name = $.name;
        this.prefixListId = $.prefixListId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrefixListPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrefixListPlainArgs $;

        public Builder() {
            $ = new GetPrefixListPlainArgs();
        }

        public Builder(GetPrefixListPlainArgs defaults) {
            $ = new GetPrefixListPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetPrefixListFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetPrefixListFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder prefixListId(@Nullable String prefixListId) {
            $.prefixListId = prefixListId;
            return this;
        }

        public GetPrefixListPlainArgs build() {
            return $;
        }
    }

}
