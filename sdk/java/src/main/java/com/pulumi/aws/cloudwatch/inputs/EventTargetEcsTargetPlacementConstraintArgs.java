// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventTargetEcsTargetPlacementConstraintArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventTargetEcsTargetPlacementConstraintArgs Empty = new EventTargetEcsTargetPlacementConstraintArgs();

    @Import(name="expression")
    private @Nullable Output<String> expression;

    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private EventTargetEcsTargetPlacementConstraintArgs() {}

    private EventTargetEcsTargetPlacementConstraintArgs(EventTargetEcsTargetPlacementConstraintArgs $) {
        this.expression = $.expression;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventTargetEcsTargetPlacementConstraintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventTargetEcsTargetPlacementConstraintArgs $;

        public Builder() {
            $ = new EventTargetEcsTargetPlacementConstraintArgs();
        }

        public Builder(EventTargetEcsTargetPlacementConstraintArgs defaults) {
            $ = new EventTargetEcsTargetPlacementConstraintArgs(Objects.requireNonNull(defaults));
        }

        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EventTargetEcsTargetPlacementConstraintArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
