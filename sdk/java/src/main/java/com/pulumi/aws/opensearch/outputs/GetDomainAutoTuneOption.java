// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.outputs;

import com.pulumi.aws.opensearch.outputs.GetDomainAutoTuneOptionMaintenanceSchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainAutoTuneOption {
    /**
     * @return Auto-Tune desired state for the domain.
     * 
     */
    private String desiredState;
    /**
     * @return A list of the nested configurations for the Auto-Tune maintenance windows of the domain.
     * 
     */
    private List<GetDomainAutoTuneOptionMaintenanceSchedule> maintenanceSchedules;
    /**
     * @return Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.
     * 
     */
    private String rollbackOnDisable;
    /**
     * @return Whether to schedule Auto-Tune optimizations that require blue/green deployments during the domain&#39;s configured daily off-peak window.
     * 
     */
    private Boolean useOffPeakWindow;

    private GetDomainAutoTuneOption() {}
    /**
     * @return Auto-Tune desired state for the domain.
     * 
     */
    public String desiredState() {
        return this.desiredState;
    }
    /**
     * @return A list of the nested configurations for the Auto-Tune maintenance windows of the domain.
     * 
     */
    public List<GetDomainAutoTuneOptionMaintenanceSchedule> maintenanceSchedules() {
        return this.maintenanceSchedules;
    }
    /**
     * @return Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.
     * 
     */
    public String rollbackOnDisable() {
        return this.rollbackOnDisable;
    }
    /**
     * @return Whether to schedule Auto-Tune optimizations that require blue/green deployments during the domain&#39;s configured daily off-peak window.
     * 
     */
    public Boolean useOffPeakWindow() {
        return this.useOffPeakWindow;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainAutoTuneOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String desiredState;
        private List<GetDomainAutoTuneOptionMaintenanceSchedule> maintenanceSchedules;
        private String rollbackOnDisable;
        private Boolean useOffPeakWindow;
        public Builder() {}
        public Builder(GetDomainAutoTuneOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desiredState = defaults.desiredState;
    	      this.maintenanceSchedules = defaults.maintenanceSchedules;
    	      this.rollbackOnDisable = defaults.rollbackOnDisable;
    	      this.useOffPeakWindow = defaults.useOffPeakWindow;
        }

        @CustomType.Setter
        public Builder desiredState(String desiredState) {
            if (desiredState == null) {
              throw new MissingRequiredPropertyException("GetDomainAutoTuneOption", "desiredState");
            }
            this.desiredState = desiredState;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceSchedules(List<GetDomainAutoTuneOptionMaintenanceSchedule> maintenanceSchedules) {
            if (maintenanceSchedules == null) {
              throw new MissingRequiredPropertyException("GetDomainAutoTuneOption", "maintenanceSchedules");
            }
            this.maintenanceSchedules = maintenanceSchedules;
            return this;
        }
        public Builder maintenanceSchedules(GetDomainAutoTuneOptionMaintenanceSchedule... maintenanceSchedules) {
            return maintenanceSchedules(List.of(maintenanceSchedules));
        }
        @CustomType.Setter
        public Builder rollbackOnDisable(String rollbackOnDisable) {
            if (rollbackOnDisable == null) {
              throw new MissingRequiredPropertyException("GetDomainAutoTuneOption", "rollbackOnDisable");
            }
            this.rollbackOnDisable = rollbackOnDisable;
            return this;
        }
        @CustomType.Setter
        public Builder useOffPeakWindow(Boolean useOffPeakWindow) {
            if (useOffPeakWindow == null) {
              throw new MissingRequiredPropertyException("GetDomainAutoTuneOption", "useOffPeakWindow");
            }
            this.useOffPeakWindow = useOffPeakWindow;
            return this;
        }
        public GetDomainAutoTuneOption build() {
            final var _resultValue = new GetDomainAutoTuneOption();
            _resultValue.desiredState = desiredState;
            _resultValue.maintenanceSchedules = maintenanceSchedules;
            _resultValue.rollbackOnDisable = rollbackOnDisable;
            _resultValue.useOffPeakWindow = useOffPeakWindow;
            return _resultValue;
        }
    }
}
