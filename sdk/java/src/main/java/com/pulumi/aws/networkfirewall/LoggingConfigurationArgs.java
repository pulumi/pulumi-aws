// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall;

import com.pulumi.aws.networkfirewall.inputs.LoggingConfigurationLoggingConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingConfigurationArgs Empty = new LoggingConfigurationArgs();

    /**
     * The Amazon Resource Name (ARN) of the Network Firewall firewall.
     * 
     */
    @Import(name="firewallArn", required=true)
    private Output<String> firewallArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Network Firewall firewall.
     * 
     */
    public Output<String> firewallArn() {
        return this.firewallArn;
    }

    /**
     * A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
     * 
     */
    @Import(name="loggingConfiguration", required=true)
    private Output<LoggingConfigurationLoggingConfigurationArgs> loggingConfiguration;

    /**
     * @return A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
     * 
     */
    public Output<LoggingConfigurationLoggingConfigurationArgs> loggingConfiguration() {
        return this.loggingConfiguration;
    }

    private LoggingConfigurationArgs() {}

    private LoggingConfigurationArgs(LoggingConfigurationArgs $) {
        this.firewallArn = $.firewallArn;
        this.loggingConfiguration = $.loggingConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationArgs $;

        public Builder() {
            $ = new LoggingConfigurationArgs();
        }

        public Builder(LoggingConfigurationArgs defaults) {
            $ = new LoggingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param firewallArn The Amazon Resource Name (ARN) of the Network Firewall firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallArn(Output<String> firewallArn) {
            $.firewallArn = firewallArn;
            return this;
        }

        /**
         * @param firewallArn The Amazon Resource Name (ARN) of the Network Firewall firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallArn(String firewallArn) {
            return firewallArn(Output.of(firewallArn));
        }

        /**
         * @param loggingConfiguration A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfiguration(Output<LoggingConfigurationLoggingConfigurationArgs> loggingConfiguration) {
            $.loggingConfiguration = loggingConfiguration;
            return this;
        }

        /**
         * @param loggingConfiguration A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfiguration(LoggingConfigurationLoggingConfigurationArgs loggingConfiguration) {
            return loggingConfiguration(Output.of(loggingConfiguration));
        }

        public LoggingConfigurationArgs build() {
            if ($.firewallArn == null) {
                throw new MissingRequiredPropertyException("LoggingConfigurationArgs", "firewallArn");
            }
            if ($.loggingConfiguration == null) {
                throw new MissingRequiredPropertyException("LoggingConfigurationArgs", "loggingConfiguration");
            }
            return $;
        }
    }

}
