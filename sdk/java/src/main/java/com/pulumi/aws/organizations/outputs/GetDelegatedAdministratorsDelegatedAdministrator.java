// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDelegatedAdministratorsDelegatedAdministrator {
    /**
     * @return The ARN of the delegated administrator&#39;s account.
     * 
     */
    private String arn;
    /**
     * @return The date when the account was made a delegated administrator.
     * 
     */
    private String delegationEnabledDate;
    /**
     * @return The email address that is associated with the delegated administrator&#39;s AWS account.
     * 
     */
    private String email;
    /**
     * @return The unique identifier (ID) of the delegated administrator&#39;s account.
     * 
     */
    private String id;
    /**
     * @return The method by which the delegated administrator&#39;s account joined the organization.
     * 
     */
    private String joinedMethod;
    /**
     * @return The date when the delegated administrator&#39;s account became a part of the organization.
     * 
     */
    private String joinedTimestamp;
    /**
     * @return The friendly name of the delegated administrator&#39;s account.
     * 
     */
    private String name;
    /**
     * @return The status of the delegated administrator&#39;s account in the organization.
     * 
     */
    private String status;

    private GetDelegatedAdministratorsDelegatedAdministrator() {}
    /**
     * @return The ARN of the delegated administrator&#39;s account.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The date when the account was made a delegated administrator.
     * 
     */
    public String delegationEnabledDate() {
        return this.delegationEnabledDate;
    }
    /**
     * @return The email address that is associated with the delegated administrator&#39;s AWS account.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The unique identifier (ID) of the delegated administrator&#39;s account.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The method by which the delegated administrator&#39;s account joined the organization.
     * 
     */
    public String joinedMethod() {
        return this.joinedMethod;
    }
    /**
     * @return The date when the delegated administrator&#39;s account became a part of the organization.
     * 
     */
    public String joinedTimestamp() {
        return this.joinedTimestamp;
    }
    /**
     * @return The friendly name of the delegated administrator&#39;s account.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the delegated administrator&#39;s account in the organization.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedAdministratorsDelegatedAdministrator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String delegationEnabledDate;
        private String email;
        private String id;
        private String joinedMethod;
        private String joinedTimestamp;
        private String name;
        private String status;
        public Builder() {}
        public Builder(GetDelegatedAdministratorsDelegatedAdministrator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.delegationEnabledDate = defaults.delegationEnabledDate;
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.joinedMethod = defaults.joinedMethod;
    	      this.joinedTimestamp = defaults.joinedTimestamp;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder delegationEnabledDate(String delegationEnabledDate) {
            if (delegationEnabledDate == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "delegationEnabledDate");
            }
            this.delegationEnabledDate = delegationEnabledDate;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder joinedMethod(String joinedMethod) {
            if (joinedMethod == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "joinedMethod");
            }
            this.joinedMethod = joinedMethod;
            return this;
        }
        @CustomType.Setter
        public Builder joinedTimestamp(String joinedTimestamp) {
            if (joinedTimestamp == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "joinedTimestamp");
            }
            this.joinedTimestamp = joinedTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDelegatedAdministratorsDelegatedAdministrator", "status");
            }
            this.status = status;
            return this;
        }
        public GetDelegatedAdministratorsDelegatedAdministrator build() {
            final var _resultValue = new GetDelegatedAdministratorsDelegatedAdministrator();
            _resultValue.arn = arn;
            _resultValue.delegationEnabledDate = delegationEnabledDate;
            _resultValue.email = email;
            _resultValue.id = id;
            _resultValue.joinedMethod = joinedMethod;
            _resultValue.joinedTimestamp = joinedTimestamp;
            _resultValue.name = name;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
