// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.paymentcryptography;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.paymentcryptography.KeyArgs;
import com.pulumi.aws.paymentcryptography.inputs.KeyState;
import com.pulumi.aws.paymentcryptography.outputs.KeyKeyAttributes;
import com.pulumi.aws.paymentcryptography.outputs.KeyTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Payment Cryptography Control Plane Key.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.paymentcryptography.Key;
 * import com.pulumi.aws.paymentcryptography.KeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Key("test", KeyArgs.builder()
 *             .exportable(true)
 *             .keyAttributes(KeyKeyAttributesArgs.builder()
 *                 .keyAlgorithm("TDES_3KEY")
 *                 .keyClass("SYMMETRIC_KEY")
 *                 .keyUsage("TR31_P0_PIN_ENCRYPTION_KEY")
 *                 .keyModesOfUse(KeyKeyAttributesKeyModesOfUseArgs.builder()
 *                     .decrypt(true)
 *                     .encrypt(true)
 *                     .wrap(true)
 *                     .unwrap(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Payment Cryptography Control Plane Key using the `arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf`. For example:
 * 
 * ```sh
 * $ pulumi import aws:paymentcryptography/key:Key example arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf
 * ```
 * 
 */
@ResourceType(type="aws:paymentcryptography/key:Key")
public class Key extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the key.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the key.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="deletionWindowInDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> deletionWindowInDays;

    public Output<Integer> deletionWindowInDays() {
        return this.deletionWindowInDays;
    }
    /**
     * Whether to enable the key.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether to enable the key.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Whether the key is exportable from the service.
     * 
     */
    @Export(name="exportable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> exportable;

    /**
     * @return Whether the key is exportable from the service.
     * 
     */
    public Output<Boolean> exportable() {
        return this.exportable;
    }
    /**
     * Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="keyAttributes", refs={KeyKeyAttributes.class}, tree="[0]")
    private Output</* @Nullable */ KeyKeyAttributes> keyAttributes;

    /**
     * @return Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Optional<KeyKeyAttributes>> keyAttributes() {
        return Codegen.optional(this.keyAttributes);
    }
    /**
     * Key check value (KCV) is used to check if all parties holding a given key have the same key or to detect that a key has changed.
     * 
     */
    @Export(name="keyCheckValue", refs={String.class}, tree="[0]")
    private Output<String> keyCheckValue;

    /**
     * @return Key check value (KCV) is used to check if all parties holding a given key have the same key or to detect that a key has changed.
     * 
     */
    public Output<String> keyCheckValue() {
        return this.keyCheckValue;
    }
    /**
     * Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
     * 
     */
    @Export(name="keyCheckValueAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> keyCheckValueAlgorithm;

    /**
     * @return Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
     * 
     */
    public Output<String> keyCheckValueAlgorithm() {
        return this.keyCheckValueAlgorithm;
    }
    /**
     * Source of the key material.
     * 
     */
    @Export(name="keyOrigin", refs={String.class}, tree="[0]")
    private Output<String> keyOrigin;

    /**
     * @return Source of the key material.
     * 
     */
    public Output<String> keyOrigin() {
        return this.keyOrigin;
    }
    /**
     * State of key that is being created or deleted.
     * 
     */
    @Export(name="keyState", refs={String.class}, tree="[0]")
    private Output<String> keyState;

    /**
     * @return State of key that is being created or deleted.
     * 
     */
    public Output<String> keyState() {
        return this.keyState;
    }
    /**
     * Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={KeyTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ KeyTimeouts> timeouts;

    public Output<Optional<KeyTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Key(java.lang.String name) {
        this(name, KeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Key(java.lang.String name, KeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Key(java.lang.String name, KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:paymentcryptography/key:Key", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Key(java.lang.String name, Output<java.lang.String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:paymentcryptography/key:Key", name, state, makeResourceOptions(options, id), false);
    }

    private static KeyArgs makeArgs(KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? KeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Key get(java.lang.String name, Output<java.lang.String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Key(name, id, state, options);
    }
}
