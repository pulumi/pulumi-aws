// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationForecast;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationGrowthRate;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationMaximumMinimum;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationMetricComparison;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriod;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationPeriodToDate;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationTopBottomMovers;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationTopBottomRanked;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationTotalAggregation;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisualInsightConfigurationComputationUniqueValues;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsInsightVisualInsightConfigurationComputation {
    private @Nullable VisualsInsightVisualInsightConfigurationComputationForecast forecast;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationGrowthRate growthRate;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationMaximumMinimum maximumMinimum;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationMetricComparison metricComparison;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriod periodOverPeriod;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationPeriodToDate periodToDate;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomMovers topBottomMovers;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomRanked topBottomRanked;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationTotalAggregation totalAggregation;
    private @Nullable VisualsInsightVisualInsightConfigurationComputationUniqueValues uniqueValues;

    private VisualsInsightVisualInsightConfigurationComputation() {}
    public Optional<VisualsInsightVisualInsightConfigurationComputationForecast> forecast() {
        return Optional.ofNullable(this.forecast);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationGrowthRate> growthRate() {
        return Optional.ofNullable(this.growthRate);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationMaximumMinimum> maximumMinimum() {
        return Optional.ofNullable(this.maximumMinimum);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationMetricComparison> metricComparison() {
        return Optional.ofNullable(this.metricComparison);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriod> periodOverPeriod() {
        return Optional.ofNullable(this.periodOverPeriod);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationPeriodToDate> periodToDate() {
        return Optional.ofNullable(this.periodToDate);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationTopBottomMovers> topBottomMovers() {
        return Optional.ofNullable(this.topBottomMovers);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationTopBottomRanked> topBottomRanked() {
        return Optional.ofNullable(this.topBottomRanked);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationTotalAggregation> totalAggregation() {
        return Optional.ofNullable(this.totalAggregation);
    }
    public Optional<VisualsInsightVisualInsightConfigurationComputationUniqueValues> uniqueValues() {
        return Optional.ofNullable(this.uniqueValues);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsInsightVisualInsightConfigurationComputation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsInsightVisualInsightConfigurationComputationForecast forecast;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationGrowthRate growthRate;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationMaximumMinimum maximumMinimum;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationMetricComparison metricComparison;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriod periodOverPeriod;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationPeriodToDate periodToDate;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomMovers topBottomMovers;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomRanked topBottomRanked;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationTotalAggregation totalAggregation;
        private @Nullable VisualsInsightVisualInsightConfigurationComputationUniqueValues uniqueValues;
        public Builder() {}
        public Builder(VisualsInsightVisualInsightConfigurationComputation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forecast = defaults.forecast;
    	      this.growthRate = defaults.growthRate;
    	      this.maximumMinimum = defaults.maximumMinimum;
    	      this.metricComparison = defaults.metricComparison;
    	      this.periodOverPeriod = defaults.periodOverPeriod;
    	      this.periodToDate = defaults.periodToDate;
    	      this.topBottomMovers = defaults.topBottomMovers;
    	      this.topBottomRanked = defaults.topBottomRanked;
    	      this.totalAggregation = defaults.totalAggregation;
    	      this.uniqueValues = defaults.uniqueValues;
        }

        @CustomType.Setter
        public Builder forecast(@Nullable VisualsInsightVisualInsightConfigurationComputationForecast forecast) {

            this.forecast = forecast;
            return this;
        }
        @CustomType.Setter
        public Builder growthRate(@Nullable VisualsInsightVisualInsightConfigurationComputationGrowthRate growthRate) {

            this.growthRate = growthRate;
            return this;
        }
        @CustomType.Setter
        public Builder maximumMinimum(@Nullable VisualsInsightVisualInsightConfigurationComputationMaximumMinimum maximumMinimum) {

            this.maximumMinimum = maximumMinimum;
            return this;
        }
        @CustomType.Setter
        public Builder metricComparison(@Nullable VisualsInsightVisualInsightConfigurationComputationMetricComparison metricComparison) {

            this.metricComparison = metricComparison;
            return this;
        }
        @CustomType.Setter
        public Builder periodOverPeriod(@Nullable VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriod periodOverPeriod) {

            this.periodOverPeriod = periodOverPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder periodToDate(@Nullable VisualsInsightVisualInsightConfigurationComputationPeriodToDate periodToDate) {

            this.periodToDate = periodToDate;
            return this;
        }
        @CustomType.Setter
        public Builder topBottomMovers(@Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomMovers topBottomMovers) {

            this.topBottomMovers = topBottomMovers;
            return this;
        }
        @CustomType.Setter
        public Builder topBottomRanked(@Nullable VisualsInsightVisualInsightConfigurationComputationTopBottomRanked topBottomRanked) {

            this.topBottomRanked = topBottomRanked;
            return this;
        }
        @CustomType.Setter
        public Builder totalAggregation(@Nullable VisualsInsightVisualInsightConfigurationComputationTotalAggregation totalAggregation) {

            this.totalAggregation = totalAggregation;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueValues(@Nullable VisualsInsightVisualInsightConfigurationComputationUniqueValues uniqueValues) {

            this.uniqueValues = uniqueValues;
            return this;
        }
        public VisualsInsightVisualInsightConfigurationComputation build() {
            final var _resultValue = new VisualsInsightVisualInsightConfigurationComputation();
            _resultValue.forecast = forecast;
            _resultValue.growthRate = growthRate;
            _resultValue.maximumMinimum = maximumMinimum;
            _resultValue.metricComparison = metricComparison;
            _resultValue.periodOverPeriod = periodOverPeriod;
            _resultValue.periodToDate = periodToDate;
            _resultValue.topBottomMovers = topBottomMovers;
            _resultValue.topBottomRanked = topBottomRanked;
            _resultValue.totalAggregation = totalAggregation;
            _resultValue.uniqueValues = uniqueValues;
            return _resultValue;
        }
    }
}
