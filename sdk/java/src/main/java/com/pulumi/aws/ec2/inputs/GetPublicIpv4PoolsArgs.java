// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetPublicIpv4PoolsFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPublicIpv4PoolsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPublicIpv4PoolsArgs Empty = new GetPublicIpv4PoolsArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetPublicIpv4PoolsFilterArgs>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Optional<Output<List<GetPublicIpv4PoolsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Map of tags, each pair of which must exactly match a pair on the desired pools.
     * 
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags, each pair of which must exactly match a pair on the desired pools.
     * 
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetPublicIpv4PoolsArgs() {}

    private GetPublicIpv4PoolsArgs(GetPublicIpv4PoolsArgs $) {
        this.filters = $.filters;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPublicIpv4PoolsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPublicIpv4PoolsArgs $;

        public Builder() {
            $ = new GetPublicIpv4PoolsArgs();
        }

        public Builder(GetPublicIpv4PoolsArgs defaults) {
            $ = new GetPublicIpv4PoolsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetPublicIpv4PoolsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetPublicIpv4PoolsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetPublicIpv4PoolsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param tags Map of tags, each pair of which must exactly match a pair on the desired pools.
         * 
         * More complex filters can be expressed using one or more `filter` sub-blocks,
         * which take the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags, each pair of which must exactly match a pair on the desired pools.
         * 
         * More complex filters can be expressed using one or more `filter` sub-blocks,
         * which take the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetPublicIpv4PoolsArgs build() {
            return $;
        }
    }

}
