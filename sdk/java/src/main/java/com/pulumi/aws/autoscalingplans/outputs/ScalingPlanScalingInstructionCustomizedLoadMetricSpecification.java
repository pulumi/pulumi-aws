// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscalingplans.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScalingPlanScalingInstructionCustomizedLoadMetricSpecification {
    /**
     * @return Dimensions of the metric.
     * 
     */
    private @Nullable Map<String,String> dimensions;
    /**
     * @return Name of the metric.
     * 
     */
    private String metricName;
    /**
     * @return Namespace of the metric.
     * 
     */
    private String namespace;
    /**
     * @return Statistic of the metric. Currently, the value must always be `Sum`.
     * 
     */
    private String statistic;
    /**
     * @return Unit of the metric.
     * 
     */
    private @Nullable String unit;

    private ScalingPlanScalingInstructionCustomizedLoadMetricSpecification() {}
    /**
     * @return Dimensions of the metric.
     * 
     */
    public Map<String,String> dimensions() {
        return this.dimensions == null ? Map.of() : this.dimensions;
    }
    /**
     * @return Name of the metric.
     * 
     */
    public String metricName() {
        return this.metricName;
    }
    /**
     * @return Namespace of the metric.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Statistic of the metric. Currently, the value must always be `Sum`.
     * 
     */
    public String statistic() {
        return this.statistic;
    }
    /**
     * @return Unit of the metric.
     * 
     */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingPlanScalingInstructionCustomizedLoadMetricSpecification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> dimensions;
        private String metricName;
        private String namespace;
        private String statistic;
        private @Nullable String unit;
        public Builder() {}
        public Builder(ScalingPlanScalingInstructionCustomizedLoadMetricSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.metricName = defaults.metricName;
    	      this.namespace = defaults.namespace;
    	      this.statistic = defaults.statistic;
    	      this.unit = defaults.unit;
        }

        @CustomType.Setter
        public Builder dimensions(@Nullable Map<String,String> dimensions) {

            this.dimensions = dimensions;
            return this;
        }
        @CustomType.Setter
        public Builder metricName(String metricName) {
            if (metricName == null) {
              throw new MissingRequiredPropertyException("ScalingPlanScalingInstructionCustomizedLoadMetricSpecification", "metricName");
            }
            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("ScalingPlanScalingInstructionCustomizedLoadMetricSpecification", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder statistic(String statistic) {
            if (statistic == null) {
              throw new MissingRequiredPropertyException("ScalingPlanScalingInstructionCustomizedLoadMetricSpecification", "statistic");
            }
            this.statistic = statistic;
            return this;
        }
        @CustomType.Setter
        public Builder unit(@Nullable String unit) {

            this.unit = unit;
            return this;
        }
        public ScalingPlanScalingInstructionCustomizedLoadMetricSpecification build() {
            final var _resultValue = new ScalingPlanScalingInstructionCustomizedLoadMetricSpecification();
            _resultValue.dimensions = dimensions;
            _resultValue.metricName = metricName;
            _resultValue.namespace = namespace;
            _resultValue.statistic = statistic;
            _resultValue.unit = unit;
            return _resultValue;
        }
    }
}
