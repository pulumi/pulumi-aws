// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.aws.alb.inputs.TargetGroupTargetGroupHealthDnsFailoverArgs;
import com.pulumi.aws.alb.inputs.TargetGroupTargetGroupHealthUnhealthyStateRoutingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetGroupTargetGroupHealthArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetGroupTargetGroupHealthArgs Empty = new TargetGroupTargetGroupHealthArgs();

    /**
     * Block to configure DNS Failover requirements. See DNS Failover below for details on attributes.
     * 
     */
    @Import(name="dnsFailover")
    private @Nullable Output<TargetGroupTargetGroupHealthDnsFailoverArgs> dnsFailover;

    /**
     * @return Block to configure DNS Failover requirements. See DNS Failover below for details on attributes.
     * 
     */
    public Optional<Output<TargetGroupTargetGroupHealthDnsFailoverArgs>> dnsFailover() {
        return Optional.ofNullable(this.dnsFailover);
    }

    /**
     * Block to configure Unhealthy State Routing requirements. See Unhealthy State Routing below for details on attributes.
     * 
     */
    @Import(name="unhealthyStateRouting")
    private @Nullable Output<TargetGroupTargetGroupHealthUnhealthyStateRoutingArgs> unhealthyStateRouting;

    /**
     * @return Block to configure Unhealthy State Routing requirements. See Unhealthy State Routing below for details on attributes.
     * 
     */
    public Optional<Output<TargetGroupTargetGroupHealthUnhealthyStateRoutingArgs>> unhealthyStateRouting() {
        return Optional.ofNullable(this.unhealthyStateRouting);
    }

    private TargetGroupTargetGroupHealthArgs() {}

    private TargetGroupTargetGroupHealthArgs(TargetGroupTargetGroupHealthArgs $) {
        this.dnsFailover = $.dnsFailover;
        this.unhealthyStateRouting = $.unhealthyStateRouting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetGroupTargetGroupHealthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetGroupTargetGroupHealthArgs $;

        public Builder() {
            $ = new TargetGroupTargetGroupHealthArgs();
        }

        public Builder(TargetGroupTargetGroupHealthArgs defaults) {
            $ = new TargetGroupTargetGroupHealthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsFailover Block to configure DNS Failover requirements. See DNS Failover below for details on attributes.
         * 
         * @return builder
         * 
         */
        public Builder dnsFailover(@Nullable Output<TargetGroupTargetGroupHealthDnsFailoverArgs> dnsFailover) {
            $.dnsFailover = dnsFailover;
            return this;
        }

        /**
         * @param dnsFailover Block to configure DNS Failover requirements. See DNS Failover below for details on attributes.
         * 
         * @return builder
         * 
         */
        public Builder dnsFailover(TargetGroupTargetGroupHealthDnsFailoverArgs dnsFailover) {
            return dnsFailover(Output.of(dnsFailover));
        }

        /**
         * @param unhealthyStateRouting Block to configure Unhealthy State Routing requirements. See Unhealthy State Routing below for details on attributes.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyStateRouting(@Nullable Output<TargetGroupTargetGroupHealthUnhealthyStateRoutingArgs> unhealthyStateRouting) {
            $.unhealthyStateRouting = unhealthyStateRouting;
            return this;
        }

        /**
         * @param unhealthyStateRouting Block to configure Unhealthy State Routing requirements. See Unhealthy State Routing below for details on attributes.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyStateRouting(TargetGroupTargetGroupHealthUnhealthyStateRoutingArgs unhealthyStateRouting) {
            return unhealthyStateRouting(Output.of(unhealthyStateRouting));
        }

        public TargetGroupTargetGroupHealthArgs build() {
            return $;
        }
    }

}
