// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentFlowDefinitionConnectionConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentFlowDefinitionConnection {
    /**
     * @return Configuration of the connection. See Connection Configuration for more information.
     * 
     */
    private @Nullable AgentFlowDefinitionConnectionConfiguration configuration;
    /**
     * @return A name for the connection that you can reference.
     * 
     */
    private String name;
    /**
     * @return The node that the connection starts at.
     * 
     */
    private String source;
    /**
     * @return The node that the connection ends at.
     * 
     */
    private String target;
    /**
     * @return Whether the source node that the connection begins from is a condition node `Conditional` or not `Data`.
     * 
     */
    private String type;

    private AgentFlowDefinitionConnection() {}
    /**
     * @return Configuration of the connection. See Connection Configuration for more information.
     * 
     */
    public Optional<AgentFlowDefinitionConnectionConfiguration> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * @return A name for the connection that you can reference.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The node that the connection starts at.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return The node that the connection ends at.
     * 
     */
    public String target() {
        return this.target;
    }
    /**
     * @return Whether the source node that the connection begins from is a condition node `Conditional` or not `Data`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentFlowDefinitionConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AgentFlowDefinitionConnectionConfiguration configuration;
        private String name;
        private String source;
        private String target;
        private String type;
        public Builder() {}
        public Builder(AgentFlowDefinitionConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.name = defaults.name;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configuration(@Nullable AgentFlowDefinitionConnectionConfiguration configuration) {

            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionConnection", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionConnection", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionConnection", "target");
            }
            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AgentFlowDefinitionConnection", "type");
            }
            this.type = type;
            return this;
        }
        public AgentFlowDefinitionConnection build() {
            final var _resultValue = new AgentFlowDefinitionConnection();
            _resultValue.configuration = configuration;
            _resultValue.name = name;
            _resultValue.source = source;
            _resultValue.target = target;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
