// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.FiltersCategoryFilter;
import com.pulumi.aws.quicksight.outputs.FiltersNumericEqualityFilter;
import com.pulumi.aws.quicksight.outputs.FiltersNumericRangeFilter;
import com.pulumi.aws.quicksight.outputs.FiltersRelativeDatesFilter;
import com.pulumi.aws.quicksight.outputs.FiltersTimeEqualityFilter;
import com.pulumi.aws.quicksight.outputs.FiltersTimeRangeFilter;
import com.pulumi.aws.quicksight.outputs.FiltersTopBottomFilter;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Filters {
    private @Nullable FiltersCategoryFilter categoryFilter;
    private @Nullable FiltersNumericEqualityFilter numericEqualityFilter;
    private @Nullable FiltersNumericRangeFilter numericRangeFilter;
    private @Nullable FiltersRelativeDatesFilter relativeDatesFilter;
    private @Nullable FiltersTimeEqualityFilter timeEqualityFilter;
    private @Nullable FiltersTimeRangeFilter timeRangeFilter;
    private @Nullable FiltersTopBottomFilter topBottomFilter;

    private Filters() {}
    public Optional<FiltersCategoryFilter> categoryFilter() {
        return Optional.ofNullable(this.categoryFilter);
    }
    public Optional<FiltersNumericEqualityFilter> numericEqualityFilter() {
        return Optional.ofNullable(this.numericEqualityFilter);
    }
    public Optional<FiltersNumericRangeFilter> numericRangeFilter() {
        return Optional.ofNullable(this.numericRangeFilter);
    }
    public Optional<FiltersRelativeDatesFilter> relativeDatesFilter() {
        return Optional.ofNullable(this.relativeDatesFilter);
    }
    public Optional<FiltersTimeEqualityFilter> timeEqualityFilter() {
        return Optional.ofNullable(this.timeEqualityFilter);
    }
    public Optional<FiltersTimeRangeFilter> timeRangeFilter() {
        return Optional.ofNullable(this.timeRangeFilter);
    }
    public Optional<FiltersTopBottomFilter> topBottomFilter() {
        return Optional.ofNullable(this.topBottomFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Filters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable FiltersCategoryFilter categoryFilter;
        private @Nullable FiltersNumericEqualityFilter numericEqualityFilter;
        private @Nullable FiltersNumericRangeFilter numericRangeFilter;
        private @Nullable FiltersRelativeDatesFilter relativeDatesFilter;
        private @Nullable FiltersTimeEqualityFilter timeEqualityFilter;
        private @Nullable FiltersTimeRangeFilter timeRangeFilter;
        private @Nullable FiltersTopBottomFilter topBottomFilter;
        public Builder() {}
        public Builder(Filters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryFilter = defaults.categoryFilter;
    	      this.numericEqualityFilter = defaults.numericEqualityFilter;
    	      this.numericRangeFilter = defaults.numericRangeFilter;
    	      this.relativeDatesFilter = defaults.relativeDatesFilter;
    	      this.timeEqualityFilter = defaults.timeEqualityFilter;
    	      this.timeRangeFilter = defaults.timeRangeFilter;
    	      this.topBottomFilter = defaults.topBottomFilter;
        }

        @CustomType.Setter
        public Builder categoryFilter(@Nullable FiltersCategoryFilter categoryFilter) {

            this.categoryFilter = categoryFilter;
            return this;
        }
        @CustomType.Setter
        public Builder numericEqualityFilter(@Nullable FiltersNumericEqualityFilter numericEqualityFilter) {

            this.numericEqualityFilter = numericEqualityFilter;
            return this;
        }
        @CustomType.Setter
        public Builder numericRangeFilter(@Nullable FiltersNumericRangeFilter numericRangeFilter) {

            this.numericRangeFilter = numericRangeFilter;
            return this;
        }
        @CustomType.Setter
        public Builder relativeDatesFilter(@Nullable FiltersRelativeDatesFilter relativeDatesFilter) {

            this.relativeDatesFilter = relativeDatesFilter;
            return this;
        }
        @CustomType.Setter
        public Builder timeEqualityFilter(@Nullable FiltersTimeEqualityFilter timeEqualityFilter) {

            this.timeEqualityFilter = timeEqualityFilter;
            return this;
        }
        @CustomType.Setter
        public Builder timeRangeFilter(@Nullable FiltersTimeRangeFilter timeRangeFilter) {

            this.timeRangeFilter = timeRangeFilter;
            return this;
        }
        @CustomType.Setter
        public Builder topBottomFilter(@Nullable FiltersTopBottomFilter topBottomFilter) {

            this.topBottomFilter = topBottomFilter;
            return this;
        }
        public Filters build() {
            final var _resultValue = new Filters();
            _resultValue.categoryFilter = categoryFilter;
            _resultValue.numericEqualityFilter = numericEqualityFilter;
            _resultValue.numericRangeFilter = numericRangeFilter;
            _resultValue.relativeDatesFilter = relativeDatesFilter;
            _resultValue.timeEqualityFilter = timeEqualityFilter;
            _resultValue.timeRangeFilter = timeRangeFilter;
            _resultValue.topBottomFilter = topBottomFilter;
            return _resultValue;
        }
    }
}
