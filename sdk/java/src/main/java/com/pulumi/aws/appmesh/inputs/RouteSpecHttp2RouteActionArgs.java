// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.RouteSpecHttp2RouteActionWeightedTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class RouteSpecHttp2RouteActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteSpecHttp2RouteActionArgs Empty = new RouteSpecHttp2RouteActionArgs();

    /**
     * Targets that traffic is routed to when a request matches the route.
     * You can specify one or more targets and their relative weights with which to distribute traffic.
     * 
     */
    @Import(name="weightedTargets", required=true)
    private Output<List<RouteSpecHttp2RouteActionWeightedTargetArgs>> weightedTargets;

    /**
     * @return Targets that traffic is routed to when a request matches the route.
     * You can specify one or more targets and their relative weights with which to distribute traffic.
     * 
     */
    public Output<List<RouteSpecHttp2RouteActionWeightedTargetArgs>> weightedTargets() {
        return this.weightedTargets;
    }

    private RouteSpecHttp2RouteActionArgs() {}

    private RouteSpecHttp2RouteActionArgs(RouteSpecHttp2RouteActionArgs $) {
        this.weightedTargets = $.weightedTargets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteSpecHttp2RouteActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecHttp2RouteActionArgs $;

        public Builder() {
            $ = new RouteSpecHttp2RouteActionArgs();
        }

        public Builder(RouteSpecHttp2RouteActionArgs defaults) {
            $ = new RouteSpecHttp2RouteActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param weightedTargets Targets that traffic is routed to when a request matches the route.
         * You can specify one or more targets and their relative weights with which to distribute traffic.
         * 
         * @return builder
         * 
         */
        public Builder weightedTargets(Output<List<RouteSpecHttp2RouteActionWeightedTargetArgs>> weightedTargets) {
            $.weightedTargets = weightedTargets;
            return this;
        }

        /**
         * @param weightedTargets Targets that traffic is routed to when a request matches the route.
         * You can specify one or more targets and their relative weights with which to distribute traffic.
         * 
         * @return builder
         * 
         */
        public Builder weightedTargets(List<RouteSpecHttp2RouteActionWeightedTargetArgs> weightedTargets) {
            return weightedTargets(Output.of(weightedTargets));
        }

        /**
         * @param weightedTargets Targets that traffic is routed to when a request matches the route.
         * You can specify one or more targets and their relative weights with which to distribute traffic.
         * 
         * @return builder
         * 
         */
        public Builder weightedTargets(RouteSpecHttp2RouteActionWeightedTargetArgs... weightedTargets) {
            return weightedTargets(List.of(weightedTargets));
        }

        public RouteSpecHttp2RouteActionArgs build() {
            $.weightedTargets = Objects.requireNonNull($.weightedTargets, "expected parameter 'weightedTargets' to be non-null");
            return $;
        }
    }

}
