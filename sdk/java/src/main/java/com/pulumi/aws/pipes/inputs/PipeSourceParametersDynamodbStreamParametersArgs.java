// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.inputs;

import com.pulumi.aws.pipes.inputs.PipeSourceParametersDynamodbStreamParametersDeadLetterConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipeSourceParametersDynamodbStreamParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipeSourceParametersDynamodbStreamParametersArgs Empty = new PipeSourceParametersDynamodbStreamParametersArgs();

    @Import(name="batchSize")
    private @Nullable Output<Integer> batchSize;

    public Optional<Output<Integer>> batchSize() {
        return Optional.ofNullable(this.batchSize);
    }

    @Import(name="deadLetterConfig")
    private @Nullable Output<PipeSourceParametersDynamodbStreamParametersDeadLetterConfigArgs> deadLetterConfig;

    public Optional<Output<PipeSourceParametersDynamodbStreamParametersDeadLetterConfigArgs>> deadLetterConfig() {
        return Optional.ofNullable(this.deadLetterConfig);
    }

    @Import(name="maximumBatchingWindowInSeconds")
    private @Nullable Output<Integer> maximumBatchingWindowInSeconds;

    public Optional<Output<Integer>> maximumBatchingWindowInSeconds() {
        return Optional.ofNullable(this.maximumBatchingWindowInSeconds);
    }

    @Import(name="maximumRecordAgeInSeconds")
    private @Nullable Output<Integer> maximumRecordAgeInSeconds;

    public Optional<Output<Integer>> maximumRecordAgeInSeconds() {
        return Optional.ofNullable(this.maximumRecordAgeInSeconds);
    }

    @Import(name="maximumRetryAttempts")
    private @Nullable Output<Integer> maximumRetryAttempts;

    public Optional<Output<Integer>> maximumRetryAttempts() {
        return Optional.ofNullable(this.maximumRetryAttempts);
    }

    @Import(name="onPartialBatchItemFailure")
    private @Nullable Output<String> onPartialBatchItemFailure;

    public Optional<Output<String>> onPartialBatchItemFailure() {
        return Optional.ofNullable(this.onPartialBatchItemFailure);
    }

    @Import(name="parallelizationFactor")
    private @Nullable Output<Integer> parallelizationFactor;

    public Optional<Output<Integer>> parallelizationFactor() {
        return Optional.ofNullable(this.parallelizationFactor);
    }

    @Import(name="startingPosition", required=true)
    private Output<String> startingPosition;

    public Output<String> startingPosition() {
        return this.startingPosition;
    }

    private PipeSourceParametersDynamodbStreamParametersArgs() {}

    private PipeSourceParametersDynamodbStreamParametersArgs(PipeSourceParametersDynamodbStreamParametersArgs $) {
        this.batchSize = $.batchSize;
        this.deadLetterConfig = $.deadLetterConfig;
        this.maximumBatchingWindowInSeconds = $.maximumBatchingWindowInSeconds;
        this.maximumRecordAgeInSeconds = $.maximumRecordAgeInSeconds;
        this.maximumRetryAttempts = $.maximumRetryAttempts;
        this.onPartialBatchItemFailure = $.onPartialBatchItemFailure;
        this.parallelizationFactor = $.parallelizationFactor;
        this.startingPosition = $.startingPosition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipeSourceParametersDynamodbStreamParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipeSourceParametersDynamodbStreamParametersArgs $;

        public Builder() {
            $ = new PipeSourceParametersDynamodbStreamParametersArgs();
        }

        public Builder(PipeSourceParametersDynamodbStreamParametersArgs defaults) {
            $ = new PipeSourceParametersDynamodbStreamParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder batchSize(@Nullable Output<Integer> batchSize) {
            $.batchSize = batchSize;
            return this;
        }

        public Builder batchSize(Integer batchSize) {
            return batchSize(Output.of(batchSize));
        }

        public Builder deadLetterConfig(@Nullable Output<PipeSourceParametersDynamodbStreamParametersDeadLetterConfigArgs> deadLetterConfig) {
            $.deadLetterConfig = deadLetterConfig;
            return this;
        }

        public Builder deadLetterConfig(PipeSourceParametersDynamodbStreamParametersDeadLetterConfigArgs deadLetterConfig) {
            return deadLetterConfig(Output.of(deadLetterConfig));
        }

        public Builder maximumBatchingWindowInSeconds(@Nullable Output<Integer> maximumBatchingWindowInSeconds) {
            $.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
            return this;
        }

        public Builder maximumBatchingWindowInSeconds(Integer maximumBatchingWindowInSeconds) {
            return maximumBatchingWindowInSeconds(Output.of(maximumBatchingWindowInSeconds));
        }

        public Builder maximumRecordAgeInSeconds(@Nullable Output<Integer> maximumRecordAgeInSeconds) {
            $.maximumRecordAgeInSeconds = maximumRecordAgeInSeconds;
            return this;
        }

        public Builder maximumRecordAgeInSeconds(Integer maximumRecordAgeInSeconds) {
            return maximumRecordAgeInSeconds(Output.of(maximumRecordAgeInSeconds));
        }

        public Builder maximumRetryAttempts(@Nullable Output<Integer> maximumRetryAttempts) {
            $.maximumRetryAttempts = maximumRetryAttempts;
            return this;
        }

        public Builder maximumRetryAttempts(Integer maximumRetryAttempts) {
            return maximumRetryAttempts(Output.of(maximumRetryAttempts));
        }

        public Builder onPartialBatchItemFailure(@Nullable Output<String> onPartialBatchItemFailure) {
            $.onPartialBatchItemFailure = onPartialBatchItemFailure;
            return this;
        }

        public Builder onPartialBatchItemFailure(String onPartialBatchItemFailure) {
            return onPartialBatchItemFailure(Output.of(onPartialBatchItemFailure));
        }

        public Builder parallelizationFactor(@Nullable Output<Integer> parallelizationFactor) {
            $.parallelizationFactor = parallelizationFactor;
            return this;
        }

        public Builder parallelizationFactor(Integer parallelizationFactor) {
            return parallelizationFactor(Output.of(parallelizationFactor));
        }

        public Builder startingPosition(Output<String> startingPosition) {
            $.startingPosition = startingPosition;
            return this;
        }

        public Builder startingPosition(String startingPosition) {
            return startingPosition(Output.of(startingPosition));
        }

        public PipeSourceParametersDynamodbStreamParametersArgs build() {
            if ($.startingPosition == null) {
                throw new MissingRequiredPropertyException("PipeSourceParametersDynamodbStreamParametersArgs", "startingPosition");
            }
            return $;
        }
    }

}
