// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.PeeringConnectionOptionsAccepterArgs;
import com.pulumi.aws.ec2.inputs.PeeringConnectionOptionsRequesterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PeeringConnectionOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeeringConnectionOptionsArgs Empty = new PeeringConnectionOptionsArgs();

    @Import(name="accepter")
    private @Nullable Output<PeeringConnectionOptionsAccepterArgs> accepter;

    public Optional<Output<PeeringConnectionOptionsAccepterArgs>> accepter() {
        return Optional.ofNullable(this.accepter);
    }

    @Import(name="requester")
    private @Nullable Output<PeeringConnectionOptionsRequesterArgs> requester;

    public Optional<Output<PeeringConnectionOptionsRequesterArgs>> requester() {
        return Optional.ofNullable(this.requester);
    }

    @Import(name="vpcPeeringConnectionId", required=true)
    private Output<String> vpcPeeringConnectionId;

    public Output<String> vpcPeeringConnectionId() {
        return this.vpcPeeringConnectionId;
    }

    private PeeringConnectionOptionsArgs() {}

    private PeeringConnectionOptionsArgs(PeeringConnectionOptionsArgs $) {
        this.accepter = $.accepter;
        this.requester = $.requester;
        this.vpcPeeringConnectionId = $.vpcPeeringConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeeringConnectionOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeeringConnectionOptionsArgs $;

        public Builder() {
            $ = new PeeringConnectionOptionsArgs();
        }

        public Builder(PeeringConnectionOptionsArgs defaults) {
            $ = new PeeringConnectionOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder accepter(@Nullable Output<PeeringConnectionOptionsAccepterArgs> accepter) {
            $.accepter = accepter;
            return this;
        }

        public Builder accepter(PeeringConnectionOptionsAccepterArgs accepter) {
            return accepter(Output.of(accepter));
        }

        public Builder requester(@Nullable Output<PeeringConnectionOptionsRequesterArgs> requester) {
            $.requester = requester;
            return this;
        }

        public Builder requester(PeeringConnectionOptionsRequesterArgs requester) {
            return requester(Output.of(requester));
        }

        public Builder vpcPeeringConnectionId(Output<String> vpcPeeringConnectionId) {
            $.vpcPeeringConnectionId = vpcPeeringConnectionId;
            return this;
        }

        public Builder vpcPeeringConnectionId(String vpcPeeringConnectionId) {
            return vpcPeeringConnectionId(Output.of(vpcPeeringConnectionId));
        }

        public PeeringConnectionOptionsArgs build() {
            $.vpcPeeringConnectionId = Objects.requireNonNull($.vpcPeeringConnectionId, "expected parameter 'vpcPeeringConnectionId' to be non-null");
            return $;
        }
    }

}
