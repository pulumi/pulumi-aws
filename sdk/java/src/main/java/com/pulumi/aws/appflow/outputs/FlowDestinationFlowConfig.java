// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorProperties;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfig {
    /**
     * @return API version that the destination connector uses.
     * 
     */
    private @Nullable String apiVersion;
    /**
     * @return Name of the connector profile. This name must be unique for each connector profile in the AWS account.
     * 
     */
    private @Nullable String connectorProfileName;
    /**
     * @return Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
     * 
     */
    private String connectorType;
    /**
     * @return This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
     * 
     */
    private FlowDestinationFlowConfigDestinationConnectorProperties destinationConnectorProperties;

    private FlowDestinationFlowConfig() {}
    /**
     * @return API version that the destination connector uses.
     * 
     */
    public Optional<String> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }
    /**
     * @return Name of the connector profile. This name must be unique for each connector profile in the AWS account.
     * 
     */
    public Optional<String> connectorProfileName() {
        return Optional.ofNullable(this.connectorProfileName);
    }
    /**
     * @return Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }
    /**
     * @return This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
     * 
     */
    public FlowDestinationFlowConfigDestinationConnectorProperties destinationConnectorProperties() {
        return this.destinationConnectorProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiVersion;
        private @Nullable String connectorProfileName;
        private String connectorType;
        private FlowDestinationFlowConfigDestinationConnectorProperties destinationConnectorProperties;
        public Builder() {}
        public Builder(FlowDestinationFlowConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.connectorProfileName = defaults.connectorProfileName;
    	      this.connectorType = defaults.connectorType;
    	      this.destinationConnectorProperties = defaults.destinationConnectorProperties;
        }

        @CustomType.Setter
        public Builder apiVersion(@Nullable String apiVersion) {
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder connectorProfileName(@Nullable String connectorProfileName) {
            this.connectorProfileName = connectorProfileName;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            this.connectorType = Objects.requireNonNull(connectorType);
            return this;
        }
        @CustomType.Setter
        public Builder destinationConnectorProperties(FlowDestinationFlowConfigDestinationConnectorProperties destinationConnectorProperties) {
            this.destinationConnectorProperties = Objects.requireNonNull(destinationConnectorProperties);
            return this;
        }
        public FlowDestinationFlowConfig build() {
            final var o = new FlowDestinationFlowConfig();
            o.apiVersion = apiVersion;
            o.connectorProfileName = connectorProfileName;
            o.connectorType = connectorType;
            o.destinationConnectorProperties = destinationConnectorProperties;
            return o;
        }
    }
}
