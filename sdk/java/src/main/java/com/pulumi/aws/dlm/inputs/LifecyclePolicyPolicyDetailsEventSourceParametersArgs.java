// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class LifecyclePolicyPolicyDetailsEventSourceParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsEventSourceParametersArgs Empty = new LifecyclePolicyPolicyDetailsEventSourceParametersArgs();

    /**
     * The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
     * 
     */
    @Import(name="descriptionRegex", required=true)
    private Output<String> descriptionRegex;

    /**
     * @return The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
     * 
     */
    public Output<String> descriptionRegex() {
        return this.descriptionRegex;
    }

    /**
     * The type of event. Currently, only `shareSnapshot` events are supported.
     * 
     */
    @Import(name="eventType", required=true)
    private Output<String> eventType;

    /**
     * @return The type of event. Currently, only `shareSnapshot` events are supported.
     * 
     */
    public Output<String> eventType() {
        return this.eventType;
    }

    /**
     * The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
     * 
     */
    @Import(name="snapshotOwners", required=true)
    private Output<List<String>> snapshotOwners;

    /**
     * @return The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
     * 
     */
    public Output<List<String>> snapshotOwners() {
        return this.snapshotOwners;
    }

    private LifecyclePolicyPolicyDetailsEventSourceParametersArgs() {}

    private LifecyclePolicyPolicyDetailsEventSourceParametersArgs(LifecyclePolicyPolicyDetailsEventSourceParametersArgs $) {
        this.descriptionRegex = $.descriptionRegex;
        this.eventType = $.eventType;
        this.snapshotOwners = $.snapshotOwners;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsEventSourceParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsEventSourceParametersArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsEventSourceParametersArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsEventSourceParametersArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsEventSourceParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param descriptionRegex The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
         * 
         * @return builder
         * 
         */
        public Builder descriptionRegex(Output<String> descriptionRegex) {
            $.descriptionRegex = descriptionRegex;
            return this;
        }

        /**
         * @param descriptionRegex The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
         * 
         * @return builder
         * 
         */
        public Builder descriptionRegex(String descriptionRegex) {
            return descriptionRegex(Output.of(descriptionRegex));
        }

        /**
         * @param eventType The type of event. Currently, only `shareSnapshot` events are supported.
         * 
         * @return builder
         * 
         */
        public Builder eventType(Output<String> eventType) {
            $.eventType = eventType;
            return this;
        }

        /**
         * @param eventType The type of event. Currently, only `shareSnapshot` events are supported.
         * 
         * @return builder
         * 
         */
        public Builder eventType(String eventType) {
            return eventType(Output.of(eventType));
        }

        /**
         * @param snapshotOwners The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
         * 
         * @return builder
         * 
         */
        public Builder snapshotOwners(Output<List<String>> snapshotOwners) {
            $.snapshotOwners = snapshotOwners;
            return this;
        }

        /**
         * @param snapshotOwners The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
         * 
         * @return builder
         * 
         */
        public Builder snapshotOwners(List<String> snapshotOwners) {
            return snapshotOwners(Output.of(snapshotOwners));
        }

        /**
         * @param snapshotOwners The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
         * 
         * @return builder
         * 
         */
        public Builder snapshotOwners(String... snapshotOwners) {
            return snapshotOwners(List.of(snapshotOwners));
        }

        public LifecyclePolicyPolicyDetailsEventSourceParametersArgs build() {
            $.descriptionRegex = Objects.requireNonNull($.descriptionRegex, "expected parameter 'descriptionRegex' to be non-null");
            $.eventType = Objects.requireNonNull($.eventType, "expected parameter 'eventType' to be non-null");
            $.snapshotOwners = Objects.requireNonNull($.snapshotOwners, "expected parameter 'snapshotOwners' to be non-null");
            return $;
        }
    }

}
