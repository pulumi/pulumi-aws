// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bcmdata.inputs;

import com.pulumi.aws.bcmdata.inputs.ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExportExportDestinationConfigurationS3DestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportExportDestinationConfigurationS3DestinationArgs Empty = new ExportExportDestinationConfigurationS3DestinationArgs();

    /**
     * Name of the Amazon S3 bucket used as the destination of a data export file.
     * 
     */
    @Import(name="s3Bucket", required=true)
    private Output<String> s3Bucket;

    /**
     * @return Name of the Amazon S3 bucket used as the destination of a data export file.
     * 
     */
    public Output<String> s3Bucket() {
        return this.s3Bucket;
    }

    /**
     * Output configuration for the data export. See the `s3_output_configurations` argument reference below.
     * 
     */
    @Import(name="s3OutputConfigurations")
    private @Nullable Output<List<ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs>> s3OutputConfigurations;

    /**
     * @return Output configuration for the data export. See the `s3_output_configurations` argument reference below.
     * 
     */
    public Optional<Output<List<ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs>>> s3OutputConfigurations() {
        return Optional.ofNullable(this.s3OutputConfigurations);
    }

    /**
     * S3 path prefix you want prepended to the name of your data export.
     * 
     */
    @Import(name="s3Prefix", required=true)
    private Output<String> s3Prefix;

    /**
     * @return S3 path prefix you want prepended to the name of your data export.
     * 
     */
    public Output<String> s3Prefix() {
        return this.s3Prefix;
    }

    /**
     * S3 bucket region.
     * 
     */
    @Import(name="s3Region", required=true)
    private Output<String> s3Region;

    /**
     * @return S3 bucket region.
     * 
     */
    public Output<String> s3Region() {
        return this.s3Region;
    }

    private ExportExportDestinationConfigurationS3DestinationArgs() {}

    private ExportExportDestinationConfigurationS3DestinationArgs(ExportExportDestinationConfigurationS3DestinationArgs $) {
        this.s3Bucket = $.s3Bucket;
        this.s3OutputConfigurations = $.s3OutputConfigurations;
        this.s3Prefix = $.s3Prefix;
        this.s3Region = $.s3Region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportExportDestinationConfigurationS3DestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportExportDestinationConfigurationS3DestinationArgs $;

        public Builder() {
            $ = new ExportExportDestinationConfigurationS3DestinationArgs();
        }

        public Builder(ExportExportDestinationConfigurationS3DestinationArgs defaults) {
            $ = new ExportExportDestinationConfigurationS3DestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param s3Bucket Name of the Amazon S3 bucket used as the destination of a data export file.
         * 
         * @return builder
         * 
         */
        public Builder s3Bucket(Output<String> s3Bucket) {
            $.s3Bucket = s3Bucket;
            return this;
        }

        /**
         * @param s3Bucket Name of the Amazon S3 bucket used as the destination of a data export file.
         * 
         * @return builder
         * 
         */
        public Builder s3Bucket(String s3Bucket) {
            return s3Bucket(Output.of(s3Bucket));
        }

        /**
         * @param s3OutputConfigurations Output configuration for the data export. See the `s3_output_configurations` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputConfigurations(@Nullable Output<List<ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs>> s3OutputConfigurations) {
            $.s3OutputConfigurations = s3OutputConfigurations;
            return this;
        }

        /**
         * @param s3OutputConfigurations Output configuration for the data export. See the `s3_output_configurations` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputConfigurations(List<ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs> s3OutputConfigurations) {
            return s3OutputConfigurations(Output.of(s3OutputConfigurations));
        }

        /**
         * @param s3OutputConfigurations Output configuration for the data export. See the `s3_output_configurations` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputConfigurations(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs... s3OutputConfigurations) {
            return s3OutputConfigurations(List.of(s3OutputConfigurations));
        }

        /**
         * @param s3Prefix S3 path prefix you want prepended to the name of your data export.
         * 
         * @return builder
         * 
         */
        public Builder s3Prefix(Output<String> s3Prefix) {
            $.s3Prefix = s3Prefix;
            return this;
        }

        /**
         * @param s3Prefix S3 path prefix you want prepended to the name of your data export.
         * 
         * @return builder
         * 
         */
        public Builder s3Prefix(String s3Prefix) {
            return s3Prefix(Output.of(s3Prefix));
        }

        /**
         * @param s3Region S3 bucket region.
         * 
         * @return builder
         * 
         */
        public Builder s3Region(Output<String> s3Region) {
            $.s3Region = s3Region;
            return this;
        }

        /**
         * @param s3Region S3 bucket region.
         * 
         * @return builder
         * 
         */
        public Builder s3Region(String s3Region) {
            return s3Region(Output.of(s3Region));
        }

        public ExportExportDestinationConfigurationS3DestinationArgs build() {
            if ($.s3Bucket == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationArgs", "s3Bucket");
            }
            if ($.s3Prefix == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationArgs", "s3Prefix");
            }
            if ($.s3Region == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationArgs", "s3Region");
            }
            return $;
        }
    }

}
