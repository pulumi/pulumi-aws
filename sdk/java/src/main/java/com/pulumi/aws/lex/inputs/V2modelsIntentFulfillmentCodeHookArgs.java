// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentFulfillmentCodeHookArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentFulfillmentCodeHookArgs Empty = new V2modelsIntentFulfillmentCodeHookArgs();

    /**
     * Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Whether a Lambda function should be invoked to fulfill a specific intent.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether a Lambda function should be invoked to fulfill a specific intent.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
     * 
     */
    @Import(name="fulfillmentUpdatesSpecification")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationArgs> fulfillmentUpdatesSpecification;

    /**
     * @return Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationArgs>> fulfillmentUpdatesSpecification() {
        return Optional.ofNullable(this.fulfillmentUpdatesSpecification);
    }

    /**
     * Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
     * 
     */
    @Import(name="postFulfillmentStatusSpecification")
    private @Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs> postFulfillmentStatusSpecification;

    /**
     * @return Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
     * 
     */
    public Optional<Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs>> postFulfillmentStatusSpecification() {
        return Optional.ofNullable(this.postFulfillmentStatusSpecification);
    }

    private V2modelsIntentFulfillmentCodeHookArgs() {}

    private V2modelsIntentFulfillmentCodeHookArgs(V2modelsIntentFulfillmentCodeHookArgs $) {
        this.active = $.active;
        this.enabled = $.enabled;
        this.fulfillmentUpdatesSpecification = $.fulfillmentUpdatesSpecification;
        this.postFulfillmentStatusSpecification = $.postFulfillmentStatusSpecification;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentFulfillmentCodeHookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentFulfillmentCodeHookArgs $;

        public Builder() {
            $ = new V2modelsIntentFulfillmentCodeHookArgs();
        }

        public Builder(V2modelsIntentFulfillmentCodeHookArgs defaults) {
            $ = new V2modelsIntentFulfillmentCodeHookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param enabled Whether a Lambda function should be invoked to fulfill a specific intent.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether a Lambda function should be invoked to fulfill a specific intent.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param fulfillmentUpdatesSpecification Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
         * 
         * @return builder
         * 
         */
        public Builder fulfillmentUpdatesSpecification(@Nullable Output<V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationArgs> fulfillmentUpdatesSpecification) {
            $.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification;
            return this;
        }

        /**
         * @param fulfillmentUpdatesSpecification Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
         * 
         * @return builder
         * 
         */
        public Builder fulfillmentUpdatesSpecification(V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationArgs fulfillmentUpdatesSpecification) {
            return fulfillmentUpdatesSpecification(Output.of(fulfillmentUpdatesSpecification));
        }

        /**
         * @param postFulfillmentStatusSpecification Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
         * 
         * @return builder
         * 
         */
        public Builder postFulfillmentStatusSpecification(@Nullable Output<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs> postFulfillmentStatusSpecification) {
            $.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification;
            return this;
        }

        /**
         * @param postFulfillmentStatusSpecification Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
         * 
         * @return builder
         * 
         */
        public Builder postFulfillmentStatusSpecification(V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecificationArgs postFulfillmentStatusSpecification) {
            return postFulfillmentStatusSpecification(Output.of(postFulfillmentStatusSpecification));
        }

        public V2modelsIntentFulfillmentCodeHookArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentFulfillmentCodeHookArgs", "enabled");
            }
            return $;
        }
    }

}
