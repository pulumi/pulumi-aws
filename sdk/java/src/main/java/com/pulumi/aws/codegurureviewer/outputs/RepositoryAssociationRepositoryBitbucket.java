// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codegurureviewer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RepositoryAssociationRepositoryBitbucket {
    /**
     * @return The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
     * 
     */
    private String connectionArn;
    /**
     * @return The name of the third party source repository.
     * 
     */
    private String name;
    /**
     * @return The username for the account that owns the repository.
     * 
     */
    private String owner;

    private RepositoryAssociationRepositoryBitbucket() {}
    /**
     * @return The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
     * 
     */
    public String connectionArn() {
        return this.connectionArn;
    }
    /**
     * @return The name of the third party source repository.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The username for the account that owns the repository.
     * 
     */
    public String owner() {
        return this.owner;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryAssociationRepositoryBitbucket defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionArn;
        private String name;
        private String owner;
        public Builder() {}
        public Builder(RepositoryAssociationRepositoryBitbucket defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionArn = defaults.connectionArn;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
        }

        @CustomType.Setter
        public Builder connectionArn(String connectionArn) {
            this.connectionArn = Objects.requireNonNull(connectionArn);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public RepositoryAssociationRepositoryBitbucket build() {
            final var o = new RepositoryAssociationRepositoryBitbucket();
            o.connectionArn = connectionArn;
            o.name = name;
            o.owner = owner;
            return o;
        }
    }
}
