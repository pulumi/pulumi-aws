// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.ImageWorkflowParameter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageWorkflow {
    /**
     * @return The action to take if the workflow fails. Must be one of `CONTINUE` or `ABORT`.
     * 
     */
    private @Nullable String onFailure;
    /**
     * @return The parallel group in which to run a test Workflow.
     * 
     */
    private @Nullable String parallelGroup;
    /**
     * @return Configuration block for the workflow parameters. Detailed below.
     * 
     */
    private @Nullable List<ImageWorkflowParameter> parameters;
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Workflow.
     * 
     * The following arguments are optional:
     * 
     */
    private String workflowArn;

    private ImageWorkflow() {}
    /**
     * @return The action to take if the workflow fails. Must be one of `CONTINUE` or `ABORT`.
     * 
     */
    public Optional<String> onFailure() {
        return Optional.ofNullable(this.onFailure);
    }
    /**
     * @return The parallel group in which to run a test Workflow.
     * 
     */
    public Optional<String> parallelGroup() {
        return Optional.ofNullable(this.parallelGroup);
    }
    /**
     * @return Configuration block for the workflow parameters. Detailed below.
     * 
     */
    public List<ImageWorkflowParameter> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Workflow.
     * 
     * The following arguments are optional:
     * 
     */
    public String workflowArn() {
        return this.workflowArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageWorkflow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String onFailure;
        private @Nullable String parallelGroup;
        private @Nullable List<ImageWorkflowParameter> parameters;
        private String workflowArn;
        public Builder() {}
        public Builder(ImageWorkflow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onFailure = defaults.onFailure;
    	      this.parallelGroup = defaults.parallelGroup;
    	      this.parameters = defaults.parameters;
    	      this.workflowArn = defaults.workflowArn;
        }

        @CustomType.Setter
        public Builder onFailure(@Nullable String onFailure) {

            this.onFailure = onFailure;
            return this;
        }
        @CustomType.Setter
        public Builder parallelGroup(@Nullable String parallelGroup) {

            this.parallelGroup = parallelGroup;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<ImageWorkflowParameter> parameters) {

            this.parameters = parameters;
            return this;
        }
        public Builder parameters(ImageWorkflowParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder workflowArn(String workflowArn) {
            if (workflowArn == null) {
              throw new MissingRequiredPropertyException("ImageWorkflow", "workflowArn");
            }
            this.workflowArn = workflowArn;
            return this;
        }
        public ImageWorkflow build() {
            final var _resultValue = new ImageWorkflow();
            _resultValue.onFailure = onFailure;
            _resultValue.parallelGroup = parallelGroup;
            _resultValue.parameters = parameters;
            _resultValue.workflowArn = workflowArn;
            return _resultValue;
        }
    }
}
