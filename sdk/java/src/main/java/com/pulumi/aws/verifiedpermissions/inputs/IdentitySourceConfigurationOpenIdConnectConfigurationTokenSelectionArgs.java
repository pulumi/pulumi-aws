// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.inputs;

import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs;
import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnlyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs Empty = new IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs();

    /**
     * The OIDC configuration for processing access tokens. See Access Token Only below.
     * 
     */
    @Import(name="accessTokenOnly")
    private @Nullable Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs> accessTokenOnly;

    /**
     * @return The OIDC configuration for processing access tokens. See Access Token Only below.
     * 
     */
    public Optional<Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs>> accessTokenOnly() {
        return Optional.ofNullable(this.accessTokenOnly);
    }

    /**
     * The OIDC configuration for processing identity (ID) tokens. See Identity Token Only below.
     * 
     */
    @Import(name="identityTokenOnly")
    private @Nullable Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnlyArgs> identityTokenOnly;

    /**
     * @return The OIDC configuration for processing identity (ID) tokens. See Identity Token Only below.
     * 
     */
    public Optional<Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnlyArgs>> identityTokenOnly() {
        return Optional.ofNullable(this.identityTokenOnly);
    }

    private IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs() {}

    private IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs $) {
        this.accessTokenOnly = $.accessTokenOnly;
        this.identityTokenOnly = $.identityTokenOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs $;

        public Builder() {
            $ = new IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs();
        }

        public Builder(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs defaults) {
            $ = new IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokenOnly The OIDC configuration for processing access tokens. See Access Token Only below.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenOnly(@Nullable Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs> accessTokenOnly) {
            $.accessTokenOnly = accessTokenOnly;
            return this;
        }

        /**
         * @param accessTokenOnly The OIDC configuration for processing access tokens. See Access Token Only below.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenOnly(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs accessTokenOnly) {
            return accessTokenOnly(Output.of(accessTokenOnly));
        }

        /**
         * @param identityTokenOnly The OIDC configuration for processing identity (ID) tokens. See Identity Token Only below.
         * 
         * @return builder
         * 
         */
        public Builder identityTokenOnly(@Nullable Output<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnlyArgs> identityTokenOnly) {
            $.identityTokenOnly = identityTokenOnly;
            return this;
        }

        /**
         * @param identityTokenOnly The OIDC configuration for processing identity (ID) tokens. See Identity Token Only below.
         * 
         * @return builder
         * 
         */
        public Builder identityTokenOnly(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnlyArgs identityTokenOnly) {
            return identityTokenOnly(Output.of(identityTokenOnly));
        }

        public IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs build() {
            return $;
        }
    }

}
