// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainDomainEndpointOptions {
    /**
     * @return Fully qualified domain for your custom endpoint.
     * 
     */
    private @Nullable String customEndpoint;
    /**
     * @return ACM certificate ARN for your custom endpoint.
     * 
     */
    private @Nullable String customEndpointCertificateArn;
    /**
     * @return Whether to enable custom endpoint for the Elasticsearch domain.
     * 
     */
    private @Nullable Boolean customEndpointEnabled;
    /**
     * @return Whether or not to require HTTPS. Defaults to `true`.
     * 
     */
    private @Nullable Boolean enforceHttps;
    /**
     * @return Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
     * 
     */
    private @Nullable String tlsSecurityPolicy;

    private DomainDomainEndpointOptions() {}
    /**
     * @return Fully qualified domain for your custom endpoint.
     * 
     */
    public Optional<String> customEndpoint() {
        return Optional.ofNullable(this.customEndpoint);
    }
    /**
     * @return ACM certificate ARN for your custom endpoint.
     * 
     */
    public Optional<String> customEndpointCertificateArn() {
        return Optional.ofNullable(this.customEndpointCertificateArn);
    }
    /**
     * @return Whether to enable custom endpoint for the Elasticsearch domain.
     * 
     */
    public Optional<Boolean> customEndpointEnabled() {
        return Optional.ofNullable(this.customEndpointEnabled);
    }
    /**
     * @return Whether or not to require HTTPS. Defaults to `true`.
     * 
     */
    public Optional<Boolean> enforceHttps() {
        return Optional.ofNullable(this.enforceHttps);
    }
    /**
     * @return Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
     * 
     */
    public Optional<String> tlsSecurityPolicy() {
        return Optional.ofNullable(this.tlsSecurityPolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainDomainEndpointOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customEndpoint;
        private @Nullable String customEndpointCertificateArn;
        private @Nullable Boolean customEndpointEnabled;
        private @Nullable Boolean enforceHttps;
        private @Nullable String tlsSecurityPolicy;
        public Builder() {}
        public Builder(DomainDomainEndpointOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customEndpoint = defaults.customEndpoint;
    	      this.customEndpointCertificateArn = defaults.customEndpointCertificateArn;
    	      this.customEndpointEnabled = defaults.customEndpointEnabled;
    	      this.enforceHttps = defaults.enforceHttps;
    	      this.tlsSecurityPolicy = defaults.tlsSecurityPolicy;
        }

        @CustomType.Setter
        public Builder customEndpoint(@Nullable String customEndpoint) {
            this.customEndpoint = customEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder customEndpointCertificateArn(@Nullable String customEndpointCertificateArn) {
            this.customEndpointCertificateArn = customEndpointCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder customEndpointEnabled(@Nullable Boolean customEndpointEnabled) {
            this.customEndpointEnabled = customEndpointEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder enforceHttps(@Nullable Boolean enforceHttps) {
            this.enforceHttps = enforceHttps;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSecurityPolicy(@Nullable String tlsSecurityPolicy) {
            this.tlsSecurityPolicy = tlsSecurityPolicy;
            return this;
        }
        public DomainDomainEndpointOptions build() {
            final var _resultValue = new DomainDomainEndpointOptions();
            _resultValue.customEndpoint = customEndpoint;
            _resultValue.customEndpointCertificateArn = customEndpointCertificateArn;
            _resultValue.customEndpointEnabled = customEndpointEnabled;
            _resultValue.enforceHttps = enforceHttps;
            _resultValue.tlsSecurityPolicy = tlsSecurityPolicy;
            return _resultValue;
        }
    }
}
