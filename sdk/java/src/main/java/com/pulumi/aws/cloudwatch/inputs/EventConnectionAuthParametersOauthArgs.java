// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthClientParametersArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthOauthHttpParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventConnectionAuthParametersOauthArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersOauthArgs Empty = new EventConnectionAuthParametersOauthArgs();

    @Import(name="authorizationEndpoint", required=true)
    private Output<String> authorizationEndpoint;

    public Output<String> authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    @Import(name="clientParameters")
    private @Nullable Output<EventConnectionAuthParametersOauthClientParametersArgs> clientParameters;

    public Optional<Output<EventConnectionAuthParametersOauthClientParametersArgs>> clientParameters() {
        return Optional.ofNullable(this.clientParameters);
    }

    @Import(name="httpMethod", required=true)
    private Output<String> httpMethod;

    public Output<String> httpMethod() {
        return this.httpMethod;
    }

    @Import(name="oauthHttpParameters", required=true)
    private Output<EventConnectionAuthParametersOauthOauthHttpParametersArgs> oauthHttpParameters;

    public Output<EventConnectionAuthParametersOauthOauthHttpParametersArgs> oauthHttpParameters() {
        return this.oauthHttpParameters;
    }

    private EventConnectionAuthParametersOauthArgs() {}

    private EventConnectionAuthParametersOauthArgs(EventConnectionAuthParametersOauthArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientParameters = $.clientParameters;
        this.httpMethod = $.httpMethod;
        this.oauthHttpParameters = $.oauthHttpParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventConnectionAuthParametersOauthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventConnectionAuthParametersOauthArgs $;

        public Builder() {
            $ = new EventConnectionAuthParametersOauthArgs();
        }

        public Builder(EventConnectionAuthParametersOauthArgs defaults) {
            $ = new EventConnectionAuthParametersOauthArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationEndpoint(Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        public Builder clientParameters(@Nullable Output<EventConnectionAuthParametersOauthClientParametersArgs> clientParameters) {
            $.clientParameters = clientParameters;
            return this;
        }

        public Builder clientParameters(EventConnectionAuthParametersOauthClientParametersArgs clientParameters) {
            return clientParameters(Output.of(clientParameters));
        }

        public Builder httpMethod(Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        public Builder oauthHttpParameters(Output<EventConnectionAuthParametersOauthOauthHttpParametersArgs> oauthHttpParameters) {
            $.oauthHttpParameters = oauthHttpParameters;
            return this;
        }

        public Builder oauthHttpParameters(EventConnectionAuthParametersOauthOauthHttpParametersArgs oauthHttpParameters) {
            return oauthHttpParameters(Output.of(oauthHttpParameters));
        }

        public EventConnectionAuthParametersOauthArgs build() {
            $.authorizationEndpoint = Objects.requireNonNull($.authorizationEndpoint, "expected parameter 'authorizationEndpoint' to be non-null");
            $.httpMethod = Objects.requireNonNull($.httpMethod, "expected parameter 'httpMethod' to be non-null");
            $.oauthHttpParameters = Objects.requireNonNull($.oauthHttpParameters, "expected parameter 'oauthHttpParameters' to be non-null");
            return $;
        }
    }

}
