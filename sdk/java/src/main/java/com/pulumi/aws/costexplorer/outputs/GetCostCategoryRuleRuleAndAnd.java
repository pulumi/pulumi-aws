// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndAndCostCategory;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndAndDimension;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndAndTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCostCategoryRuleRuleAndAnd {
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleAndAndCostCategory> costCategories;
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleAndAndDimension> dimensions;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleAndAndTag> tags;

    private GetCostCategoryRuleRuleAndAnd() {}
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndAndCostCategory> costCategories() {
        return this.costCategories;
    }
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndAndDimension> dimensions() {
        return this.dimensions;
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndAndTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryRuleRuleAndAnd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCostCategoryRuleRuleAndAndCostCategory> costCategories;
        private List<GetCostCategoryRuleRuleAndAndDimension> dimensions;
        private List<GetCostCategoryRuleRuleAndAndTag> tags;
        public Builder() {}
        public Builder(GetCostCategoryRuleRuleAndAnd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategories = defaults.costCategories;
    	      this.dimensions = defaults.dimensions;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategories(List<GetCostCategoryRuleRuleAndAndCostCategory> costCategories) {
            if (costCategories == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleAndAnd", "costCategories");
            }
            this.costCategories = costCategories;
            return this;
        }
        public Builder costCategories(GetCostCategoryRuleRuleAndAndCostCategory... costCategories) {
            return costCategories(List.of(costCategories));
        }
        @CustomType.Setter
        public Builder dimensions(List<GetCostCategoryRuleRuleAndAndDimension> dimensions) {
            if (dimensions == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleAndAnd", "dimensions");
            }
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetCostCategoryRuleRuleAndAndDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder tags(List<GetCostCategoryRuleRuleAndAndTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleAndAnd", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetCostCategoryRuleRuleAndAndTag... tags) {
            return tags(List.of(tags));
        }
        public GetCostCategoryRuleRuleAndAnd build() {
            final var _resultValue = new GetCostCategoryRuleRuleAndAnd();
            _resultValue.costCategories = costCategories;
            _resultValue.dimensions = dimensions;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
