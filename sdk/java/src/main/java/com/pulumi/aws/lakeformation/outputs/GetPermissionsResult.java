// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.aws.lakeformation.outputs.GetPermissionsDataLocation;
import com.pulumi.aws.lakeformation.outputs.GetPermissionsDatabase;
import com.pulumi.aws.lakeformation.outputs.GetPermissionsLfTag;
import com.pulumi.aws.lakeformation.outputs.GetPermissionsLfTagPolicy;
import com.pulumi.aws.lakeformation.outputs.GetPermissionsTable;
import com.pulumi.aws.lakeformation.outputs.GetPermissionsTableWithColumns;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPermissionsResult {
    private @Nullable String catalogId;
    private @Nullable Boolean catalogResource;
    private @Nullable GetPermissionsDataLocation dataLocation;
    private @Nullable GetPermissionsDatabase database;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable GetPermissionsLfTag lfTag;
    private @Nullable GetPermissionsLfTagPolicy lfTagPolicy;
    /**
     * @return List of permissions granted to the principal. For details on permissions, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
     * 
     */
    private @Nullable List<String> permissions;
    /**
     * @return Subset of `permissions` which the principal can pass.
     * 
     */
    private @Nullable List<String> permissionsWithGrantOptions;
    private String principal;
    private @Nullable GetPermissionsTable table;
    private @Nullable GetPermissionsTableWithColumns tableWithColumns;

    private GetPermissionsResult() {}
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    public Optional<Boolean> catalogResource() {
        return Optional.ofNullable(this.catalogResource);
    }
    public Optional<GetPermissionsDataLocation> dataLocation() {
        return Optional.ofNullable(this.dataLocation);
    }
    public Optional<GetPermissionsDatabase> database() {
        return Optional.ofNullable(this.database);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<GetPermissionsLfTag> lfTag() {
        return Optional.ofNullable(this.lfTag);
    }
    public Optional<GetPermissionsLfTagPolicy> lfTagPolicy() {
        return Optional.ofNullable(this.lfTagPolicy);
    }
    /**
     * @return List of permissions granted to the principal. For details on permissions, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
     * 
     */
    public List<String> permissions() {
        return this.permissions == null ? List.of() : this.permissions;
    }
    /**
     * @return Subset of `permissions` which the principal can pass.
     * 
     */
    public List<String> permissionsWithGrantOptions() {
        return this.permissionsWithGrantOptions == null ? List.of() : this.permissionsWithGrantOptions;
    }
    public String principal() {
        return this.principal;
    }
    public Optional<GetPermissionsTable> table() {
        return Optional.ofNullable(this.table);
    }
    public Optional<GetPermissionsTableWithColumns> tableWithColumns() {
        return Optional.ofNullable(this.tableWithColumns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPermissionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String catalogId;
        private @Nullable Boolean catalogResource;
        private @Nullable GetPermissionsDataLocation dataLocation;
        private @Nullable GetPermissionsDatabase database;
        private @Nullable String id;
        private @Nullable GetPermissionsLfTag lfTag;
        private @Nullable GetPermissionsLfTagPolicy lfTagPolicy;
        private @Nullable List<String> permissions;
        private @Nullable List<String> permissionsWithGrantOptions;
        private String principal;
        private @Nullable GetPermissionsTable table;
        private @Nullable GetPermissionsTableWithColumns tableWithColumns;
        public Builder() {}
        public Builder(GetPermissionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.catalogResource = defaults.catalogResource;
    	      this.dataLocation = defaults.dataLocation;
    	      this.database = defaults.database;
    	      this.id = defaults.id;
    	      this.lfTag = defaults.lfTag;
    	      this.lfTagPolicy = defaults.lfTagPolicy;
    	      this.permissions = defaults.permissions;
    	      this.permissionsWithGrantOptions = defaults.permissionsWithGrantOptions;
    	      this.principal = defaults.principal;
    	      this.table = defaults.table;
    	      this.tableWithColumns = defaults.tableWithColumns;
        }

        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder catalogResource(@Nullable Boolean catalogResource) {
            this.catalogResource = catalogResource;
            return this;
        }
        @CustomType.Setter
        public Builder dataLocation(@Nullable GetPermissionsDataLocation dataLocation) {
            this.dataLocation = dataLocation;
            return this;
        }
        @CustomType.Setter
        public Builder database(@Nullable GetPermissionsDatabase database) {
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lfTag(@Nullable GetPermissionsLfTag lfTag) {
            this.lfTag = lfTag;
            return this;
        }
        @CustomType.Setter
        public Builder lfTagPolicy(@Nullable GetPermissionsLfTagPolicy lfTagPolicy) {
            this.lfTagPolicy = lfTagPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable List<String> permissions) {
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder permissionsWithGrantOptions(@Nullable List<String> permissionsWithGrantOptions) {
            this.permissionsWithGrantOptions = permissionsWithGrantOptions;
            return this;
        }
        public Builder permissionsWithGrantOptions(String... permissionsWithGrantOptions) {
            return permissionsWithGrantOptions(List.of(permissionsWithGrantOptions));
        }
        @CustomType.Setter
        public Builder principal(String principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        @CustomType.Setter
        public Builder table(@Nullable GetPermissionsTable table) {
            this.table = table;
            return this;
        }
        @CustomType.Setter
        public Builder tableWithColumns(@Nullable GetPermissionsTableWithColumns tableWithColumns) {
            this.tableWithColumns = tableWithColumns;
            return this;
        }
        public GetPermissionsResult build() {
            final var o = new GetPermissionsResult();
            o.catalogId = catalogId;
            o.catalogResource = catalogResource;
            o.dataLocation = dataLocation;
            o.database = database;
            o.id = id;
            o.lfTag = lfTag;
            o.lfTagPolicy = lfTagPolicy;
            o.permissions = permissions;
            o.permissionsWithGrantOptions = permissionsWithGrantOptions;
            o.principal = principal;
            o.table = table;
            o.tableWithColumns = tableWithColumns;
            return o;
        }
    }
}
