// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.outputs;

import com.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration {
    /**
     * @return Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor inputLambdaProcessor;

    private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration() {}
    /**
     * @return Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    public ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor inputLambdaProcessor() {
        return this.inputLambdaProcessor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor inputLambdaProcessor;
        public Builder() {}
        public Builder(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inputLambdaProcessor = defaults.inputLambdaProcessor;
        }

        @CustomType.Setter
        public Builder inputLambdaProcessor(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor inputLambdaProcessor) {
            if (inputLambdaProcessor == null) {
              throw new MissingRequiredPropertyException("ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration", "inputLambdaProcessor");
            }
            this.inputLambdaProcessor = inputLambdaProcessor;
            return this;
        }
        public ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration build() {
            final var _resultValue = new ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration();
            _resultValue.inputLambdaProcessor = inputLambdaProcessor;
            return _resultValue;
        }
    }
}
