// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DataSetRowLevelPermissionTagConfigurationTagRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSetRowLevelPermissionTagConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetRowLevelPermissionTagConfigurationArgs Empty = new DataSetRowLevelPermissionTagConfigurationArgs();

    /**
     * The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
     * 
     */
    @Import(name="tagRules", required=true)
    private Output<List<DataSetRowLevelPermissionTagConfigurationTagRuleArgs>> tagRules;

    /**
     * @return A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
     * 
     */
    public Output<List<DataSetRowLevelPermissionTagConfigurationTagRuleArgs>> tagRules() {
        return this.tagRules;
    }

    private DataSetRowLevelPermissionTagConfigurationArgs() {}

    private DataSetRowLevelPermissionTagConfigurationArgs(DataSetRowLevelPermissionTagConfigurationArgs $) {
        this.status = $.status;
        this.tagRules = $.tagRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetRowLevelPermissionTagConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetRowLevelPermissionTagConfigurationArgs $;

        public Builder() {
            $ = new DataSetRowLevelPermissionTagConfigurationArgs();
        }

        public Builder(DataSetRowLevelPermissionTagConfigurationArgs defaults) {
            $ = new DataSetRowLevelPermissionTagConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param status The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tagRules A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
         * 
         * @return builder
         * 
         */
        public Builder tagRules(Output<List<DataSetRowLevelPermissionTagConfigurationTagRuleArgs>> tagRules) {
            $.tagRules = tagRules;
            return this;
        }

        /**
         * @param tagRules A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
         * 
         * @return builder
         * 
         */
        public Builder tagRules(List<DataSetRowLevelPermissionTagConfigurationTagRuleArgs> tagRules) {
            return tagRules(Output.of(tagRules));
        }

        /**
         * @param tagRules A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
         * 
         * @return builder
         * 
         */
        public Builder tagRules(DataSetRowLevelPermissionTagConfigurationTagRuleArgs... tagRules) {
            return tagRules(List.of(tagRules));
        }

        public DataSetRowLevelPermissionTagConfigurationArgs build() {
            if ($.tagRules == null) {
                throw new MissingRequiredPropertyException("DataSetRowLevelPermissionTagConfigurationArgs", "tagRules");
            }
            return $;
        }
    }

}
