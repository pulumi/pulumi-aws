// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FiltersCategoryFilterConfigurationFilterListConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FiltersCategoryFilterConfigurationFilterListConfigurationArgs Empty = new FiltersCategoryFilterConfigurationFilterListConfigurationArgs();

    @Import(name="categoryValues")
    private @Nullable Output<List<String>> categoryValues;

    public Optional<Output<List<String>>> categoryValues() {
        return Optional.ofNullable(this.categoryValues);
    }

    @Import(name="matchOperator", required=true)
    private Output<String> matchOperator;

    public Output<String> matchOperator() {
        return this.matchOperator;
    }

    @Import(name="selectAllOptions")
    private @Nullable Output<String> selectAllOptions;

    public Optional<Output<String>> selectAllOptions() {
        return Optional.ofNullable(this.selectAllOptions);
    }

    private FiltersCategoryFilterConfigurationFilterListConfigurationArgs() {}

    private FiltersCategoryFilterConfigurationFilterListConfigurationArgs(FiltersCategoryFilterConfigurationFilterListConfigurationArgs $) {
        this.categoryValues = $.categoryValues;
        this.matchOperator = $.matchOperator;
        this.selectAllOptions = $.selectAllOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FiltersCategoryFilterConfigurationFilterListConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FiltersCategoryFilterConfigurationFilterListConfigurationArgs $;

        public Builder() {
            $ = new FiltersCategoryFilterConfigurationFilterListConfigurationArgs();
        }

        public Builder(FiltersCategoryFilterConfigurationFilterListConfigurationArgs defaults) {
            $ = new FiltersCategoryFilterConfigurationFilterListConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder categoryValues(@Nullable Output<List<String>> categoryValues) {
            $.categoryValues = categoryValues;
            return this;
        }

        public Builder categoryValues(List<String> categoryValues) {
            return categoryValues(Output.of(categoryValues));
        }

        public Builder categoryValues(String... categoryValues) {
            return categoryValues(List.of(categoryValues));
        }

        public Builder matchOperator(Output<String> matchOperator) {
            $.matchOperator = matchOperator;
            return this;
        }

        public Builder matchOperator(String matchOperator) {
            return matchOperator(Output.of(matchOperator));
        }

        public Builder selectAllOptions(@Nullable Output<String> selectAllOptions) {
            $.selectAllOptions = selectAllOptions;
            return this;
        }

        public Builder selectAllOptions(String selectAllOptions) {
            return selectAllOptions(Output.of(selectAllOptions));
        }

        public FiltersCategoryFilterConfigurationFilterListConfigurationArgs build() {
            if ($.matchOperator == null) {
                throw new MissingRequiredPropertyException("FiltersCategoryFilterConfigurationFilterListConfigurationArgs", "matchOperator");
            }
            return $;
        }
    }

}
