// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice.outputs;

import com.pulumi.aws.directoryservice.outputs.GetDirectoryConnectSetting;
import com.pulumi.aws.directoryservice.outputs.GetDirectoryRadiusSetting;
import com.pulumi.aws.directoryservice.outputs.GetDirectoryVpcSetting;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDirectoryResult {
    private String accessUrl;
    private String alias;
    private List<GetDirectoryConnectSetting> connectSettings;
    private String description;
    private String directoryId;
    private List<String> dnsIpAddresses;
    private String edition;
    private Boolean enableSso;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private List<GetDirectoryRadiusSetting> radiusSettings;
    private String securityGroupId;
    private String shortName;
    private String size;
    private Map<String,String> tags;
    private String type;
    private List<GetDirectoryVpcSetting> vpcSettings;

    private GetDirectoryResult() {}
    public String accessUrl() {
        return this.accessUrl;
    }
    public String alias() {
        return this.alias;
    }
    public List<GetDirectoryConnectSetting> connectSettings() {
        return this.connectSettings;
    }
    public String description() {
        return this.description;
    }
    public String directoryId() {
        return this.directoryId;
    }
    public List<String> dnsIpAddresses() {
        return this.dnsIpAddresses;
    }
    public String edition() {
        return this.edition;
    }
    public Boolean enableSso() {
        return this.enableSso;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public List<GetDirectoryRadiusSetting> radiusSettings() {
        return this.radiusSettings;
    }
    public String securityGroupId() {
        return this.securityGroupId;
    }
    public String shortName() {
        return this.shortName;
    }
    public String size() {
        return this.size;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String type() {
        return this.type;
    }
    public List<GetDirectoryVpcSetting> vpcSettings() {
        return this.vpcSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessUrl;
        private String alias;
        private List<GetDirectoryConnectSetting> connectSettings;
        private String description;
        private String directoryId;
        private List<String> dnsIpAddresses;
        private String edition;
        private Boolean enableSso;
        private String id;
        private String name;
        private List<GetDirectoryRadiusSetting> radiusSettings;
        private String securityGroupId;
        private String shortName;
        private String size;
        private Map<String,String> tags;
        private String type;
        private List<GetDirectoryVpcSetting> vpcSettings;
        public Builder() {}
        public Builder(GetDirectoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessUrl = defaults.accessUrl;
    	      this.alias = defaults.alias;
    	      this.connectSettings = defaults.connectSettings;
    	      this.description = defaults.description;
    	      this.directoryId = defaults.directoryId;
    	      this.dnsIpAddresses = defaults.dnsIpAddresses;
    	      this.edition = defaults.edition;
    	      this.enableSso = defaults.enableSso;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.radiusSettings = defaults.radiusSettings;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.shortName = defaults.shortName;
    	      this.size = defaults.size;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vpcSettings = defaults.vpcSettings;
        }

        @CustomType.Setter
        public Builder accessUrl(String accessUrl) {
            this.accessUrl = Objects.requireNonNull(accessUrl);
            return this;
        }
        @CustomType.Setter
        public Builder alias(String alias) {
            this.alias = Objects.requireNonNull(alias);
            return this;
        }
        @CustomType.Setter
        public Builder connectSettings(List<GetDirectoryConnectSetting> connectSettings) {
            this.connectSettings = Objects.requireNonNull(connectSettings);
            return this;
        }
        public Builder connectSettings(GetDirectoryConnectSetting... connectSettings) {
            return connectSettings(List.of(connectSettings));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder directoryId(String directoryId) {
            this.directoryId = Objects.requireNonNull(directoryId);
            return this;
        }
        @CustomType.Setter
        public Builder dnsIpAddresses(List<String> dnsIpAddresses) {
            this.dnsIpAddresses = Objects.requireNonNull(dnsIpAddresses);
            return this;
        }
        public Builder dnsIpAddresses(String... dnsIpAddresses) {
            return dnsIpAddresses(List.of(dnsIpAddresses));
        }
        @CustomType.Setter
        public Builder edition(String edition) {
            this.edition = Objects.requireNonNull(edition);
            return this;
        }
        @CustomType.Setter
        public Builder enableSso(Boolean enableSso) {
            this.enableSso = Objects.requireNonNull(enableSso);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder radiusSettings(List<GetDirectoryRadiusSetting> radiusSettings) {
            this.radiusSettings = Objects.requireNonNull(radiusSettings);
            return this;
        }
        public Builder radiusSettings(GetDirectoryRadiusSetting... radiusSettings) {
            return radiusSettings(List.of(radiusSettings));
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder shortName(String shortName) {
            this.shortName = Objects.requireNonNull(shortName);
            return this;
        }
        @CustomType.Setter
        public Builder size(String size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder vpcSettings(List<GetDirectoryVpcSetting> vpcSettings) {
            this.vpcSettings = Objects.requireNonNull(vpcSettings);
            return this;
        }
        public Builder vpcSettings(GetDirectoryVpcSetting... vpcSettings) {
            return vpcSettings(List.of(vpcSettings));
        }
        public GetDirectoryResult build() {
            final var o = new GetDirectoryResult();
            o.accessUrl = accessUrl;
            o.alias = alias;
            o.connectSettings = connectSettings;
            o.description = description;
            o.directoryId = directoryId;
            o.dnsIpAddresses = dnsIpAddresses;
            o.edition = edition;
            o.enableSso = enableSso;
            o.id = id;
            o.name = name;
            o.radiusSettings = radiusSettings;
            o.securityGroupId = securityGroupId;
            o.shortName = shortName;
            o.size = size;
            o.tags = tags;
            o.type = type;
            o.vpcSettings = vpcSettings;
            return o;
        }
    }
}
