// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.eks.NodeGroupArgs;
import com.pulumi.aws.eks.inputs.NodeGroupState;
import com.pulumi.aws.eks.outputs.NodeGroupLaunchTemplate;
import com.pulumi.aws.eks.outputs.NodeGroupRemoteAccess;
import com.pulumi.aws.eks.outputs.NodeGroupResource;
import com.pulumi.aws.eks.outputs.NodeGroupScalingConfig;
import com.pulumi.aws.eks.outputs.NodeGroupTaint;
import com.pulumi.aws.eks.outputs.NodeGroupUpdateConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:eks/nodeGroup:NodeGroup")
public class NodeGroup extends com.pulumi.resources.CustomResource {
    @Export(name="amiType", refs={String.class}, tree="[0]")
    private Output<String> amiType;

    public Output<String> amiType() {
        return this.amiType;
    }
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="capacityType", refs={String.class}, tree="[0]")
    private Output<String> capacityType;

    public Output<String> capacityType() {
        return this.capacityType;
    }
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output<String> clusterName;

    public Output<String> clusterName() {
        return this.clusterName;
    }
    @Export(name="diskSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> diskSize;

    public Output<Integer> diskSize() {
        return this.diskSize;
    }
    @Export(name="forceUpdateVersion", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceUpdateVersion;

    public Output<Optional<Boolean>> forceUpdateVersion() {
        return Codegen.optional(this.forceUpdateVersion);
    }
    @Export(name="instanceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> instanceTypes;

    public Output<List<String>> instanceTypes() {
        return this.instanceTypes;
    }
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    @Export(name="launchTemplate", refs={NodeGroupLaunchTemplate.class}, tree="[0]")
    private Output</* @Nullable */ NodeGroupLaunchTemplate> launchTemplate;

    public Output<Optional<NodeGroupLaunchTemplate>> launchTemplate() {
        return Codegen.optional(this.launchTemplate);
    }
    @Export(name="nodeGroupName", refs={String.class}, tree="[0]")
    private Output<String> nodeGroupName;

    public Output<String> nodeGroupName() {
        return this.nodeGroupName;
    }
    @Export(name="nodeGroupNamePrefix", refs={String.class}, tree="[0]")
    private Output<String> nodeGroupNamePrefix;

    public Output<String> nodeGroupNamePrefix() {
        return this.nodeGroupNamePrefix;
    }
    @Export(name="nodeRoleArn", refs={String.class}, tree="[0]")
    private Output<String> nodeRoleArn;

    public Output<String> nodeRoleArn() {
        return this.nodeRoleArn;
    }
    @Export(name="releaseVersion", refs={String.class}, tree="[0]")
    private Output<String> releaseVersion;

    public Output<String> releaseVersion() {
        return this.releaseVersion;
    }
    @Export(name="remoteAccess", refs={NodeGroupRemoteAccess.class}, tree="[0]")
    private Output</* @Nullable */ NodeGroupRemoteAccess> remoteAccess;

    public Output<Optional<NodeGroupRemoteAccess>> remoteAccess() {
        return Codegen.optional(this.remoteAccess);
    }
    @Export(name="resources", refs={List.class,NodeGroupResource.class}, tree="[0,1]")
    private Output<List<NodeGroupResource>> resources;

    public Output<List<NodeGroupResource>> resources() {
        return this.resources;
    }
    @Export(name="scalingConfig", refs={NodeGroupScalingConfig.class}, tree="[0]")
    private Output<NodeGroupScalingConfig> scalingConfig;

    public Output<NodeGroupScalingConfig> scalingConfig() {
        return this.scalingConfig;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="taints", refs={List.class,NodeGroupTaint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NodeGroupTaint>> taints;

    public Output<Optional<List<NodeGroupTaint>>> taints() {
        return Codegen.optional(this.taints);
    }
    @Export(name="updateConfig", refs={NodeGroupUpdateConfig.class}, tree="[0]")
    private Output<NodeGroupUpdateConfig> updateConfig;

    public Output<NodeGroupUpdateConfig> updateConfig() {
        return this.updateConfig;
    }
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodeGroup(String name) {
        this(name, NodeGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodeGroup(String name, NodeGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodeGroup(String name, NodeGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:eks/nodeGroup:NodeGroup", name, args == null ? NodeGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NodeGroup(String name, Output<String> id, @Nullable NodeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:eks/nodeGroup:NodeGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodeGroup get(String name, Output<String> id, @Nullable NodeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NodeGroup(name, id, state, options);
    }
}
