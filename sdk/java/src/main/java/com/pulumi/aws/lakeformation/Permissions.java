// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.lakeformation.PermissionsArgs;
import com.pulumi.aws.lakeformation.inputs.PermissionsState;
import com.pulumi.aws.lakeformation.outputs.PermissionsDataLocation;
import com.pulumi.aws.lakeformation.outputs.PermissionsDatabase;
import com.pulumi.aws.lakeformation.outputs.PermissionsLfTag;
import com.pulumi.aws.lakeformation.outputs.PermissionsLfTagPolicy;
import com.pulumi.aws.lakeformation.outputs.PermissionsTable;
import com.pulumi.aws.lakeformation.outputs.PermissionsTableWithColumns;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:lakeformation/permissions:Permissions")
public class Permissions extends com.pulumi.resources.CustomResource {
    @Export(name="catalogId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> catalogId;

    public Output<Optional<String>> catalogId() {
        return Codegen.optional(this.catalogId);
    }
    @Export(name="catalogResource", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> catalogResource;

    public Output<Optional<Boolean>> catalogResource() {
        return Codegen.optional(this.catalogResource);
    }
    @Export(name="dataLocation", refs={PermissionsDataLocation.class}, tree="[0]")
    private Output<PermissionsDataLocation> dataLocation;

    public Output<PermissionsDataLocation> dataLocation() {
        return this.dataLocation;
    }
    @Export(name="database", refs={PermissionsDatabase.class}, tree="[0]")
    private Output<PermissionsDatabase> database;

    public Output<PermissionsDatabase> database() {
        return this.database;
    }
    @Export(name="lfTag", refs={PermissionsLfTag.class}, tree="[0]")
    private Output<PermissionsLfTag> lfTag;

    public Output<PermissionsLfTag> lfTag() {
        return this.lfTag;
    }
    @Export(name="lfTagPolicy", refs={PermissionsLfTagPolicy.class}, tree="[0]")
    private Output<PermissionsLfTagPolicy> lfTagPolicy;

    public Output<PermissionsLfTagPolicy> lfTagPolicy() {
        return this.lfTagPolicy;
    }
    @Export(name="permissions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> permissions;

    public Output<List<String>> permissions() {
        return this.permissions;
    }
    @Export(name="permissionsWithGrantOptions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> permissionsWithGrantOptions;

    public Output<List<String>> permissionsWithGrantOptions() {
        return this.permissionsWithGrantOptions;
    }
    @Export(name="principal", refs={String.class}, tree="[0]")
    private Output<String> principal;

    public Output<String> principal() {
        return this.principal;
    }
    @Export(name="table", refs={PermissionsTable.class}, tree="[0]")
    private Output<PermissionsTable> table;

    public Output<PermissionsTable> table() {
        return this.table;
    }
    @Export(name="tableWithColumns", refs={PermissionsTableWithColumns.class}, tree="[0]")
    private Output<PermissionsTableWithColumns> tableWithColumns;

    public Output<PermissionsTableWithColumns> tableWithColumns() {
        return this.tableWithColumns;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Permissions(String name) {
        this(name, PermissionsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Permissions(String name, PermissionsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Permissions(String name, PermissionsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/permissions:Permissions", name, args == null ? PermissionsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Permissions(String name, Output<String> id, @Nullable PermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/permissions:Permissions", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Permissions get(String name, Output<String> id, @Nullable PermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Permissions(name, id, state, options);
    }
}
