// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataLakeSettingsCreateDatabaseDefaultPermission {
    /**
     * @return List of permissions granted to the principal.
     * 
     */
    private List<String> permissions;
    /**
     * @return Principal who is granted permissions.
     * 
     */
    private String principal;

    private GetDataLakeSettingsCreateDatabaseDefaultPermission() {}
    /**
     * @return List of permissions granted to the principal.
     * 
     */
    public List<String> permissions() {
        return this.permissions;
    }
    /**
     * @return Principal who is granted permissions.
     * 
     */
    public String principal() {
        return this.principal;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataLakeSettingsCreateDatabaseDefaultPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> permissions;
        private String principal;
        public Builder() {}
        public Builder(GetDataLakeSettingsCreateDatabaseDefaultPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.permissions = defaults.permissions;
    	      this.principal = defaults.principal;
        }

        @CustomType.Setter
        public Builder permissions(List<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder principal(String principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        public GetDataLakeSettingsCreateDatabaseDefaultPermission build() {
            final var o = new GetDataLakeSettingsCreateDatabaseDefaultPermission();
            o.permissions = permissions;
            o.principal = principal;
            return o;
        }
    }
}
