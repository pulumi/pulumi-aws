// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetVpcIpamPoolCidrsFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpcIpamPoolCidrsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcIpamPoolCidrsArgs Empty = new GetVpcIpamPoolCidrsArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetVpcIpamPoolCidrsFilterArgs>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Optional<Output<List<GetVpcIpamPoolCidrsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ID of the IPAM pool you would like the list of provisioned CIDRs.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return ID of the IPAM pool you would like the list of provisioned CIDRs.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    private GetVpcIpamPoolCidrsArgs() {}

    private GetVpcIpamPoolCidrsArgs(GetVpcIpamPoolCidrsArgs $) {
        this.filters = $.filters;
        this.ipamPoolId = $.ipamPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcIpamPoolCidrsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcIpamPoolCidrsArgs $;

        public Builder() {
            $ = new GetVpcIpamPoolCidrsArgs();
        }

        public Builder(GetVpcIpamPoolCidrsArgs defaults) {
            $ = new GetVpcIpamPoolCidrsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetVpcIpamPoolCidrsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetVpcIpamPoolCidrsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetVpcIpamPoolCidrsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param ipamPoolId ID of the IPAM pool you would like the list of provisioned CIDRs.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId ID of the IPAM pool you would like the list of provisioned CIDRs.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        public GetVpcIpamPoolCidrsArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("GetVpcIpamPoolCidrsArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
