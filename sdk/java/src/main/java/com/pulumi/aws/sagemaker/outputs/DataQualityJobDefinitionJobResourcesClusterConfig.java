// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataQualityJobDefinitionJobResourcesClusterConfig {
    /**
     * @return The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.
     * 
     */
    private Integer instanceCount;
    /**
     * @return The ML compute instance type for the processing job.
     * 
     */
    private String instanceType;
    /**
     * @return The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
     * 
     */
    private @Nullable String volumeKmsKeyId;
    /**
     * @return The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
     * 
     */
    private Integer volumeSizeInGb;

    private DataQualityJobDefinitionJobResourcesClusterConfig() {}
    /**
     * @return The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.
     * 
     */
    public Integer instanceCount() {
        return this.instanceCount;
    }
    /**
     * @return The ML compute instance type for the processing job.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
     * 
     */
    public Optional<String> volumeKmsKeyId() {
        return Optional.ofNullable(this.volumeKmsKeyId);
    }
    /**
     * @return The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
     * 
     */
    public Integer volumeSizeInGb() {
        return this.volumeSizeInGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataQualityJobDefinitionJobResourcesClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer instanceCount;
        private String instanceType;
        private @Nullable String volumeKmsKeyId;
        private Integer volumeSizeInGb;
        public Builder() {}
        public Builder(DataQualityJobDefinitionJobResourcesClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.volumeKmsKeyId = defaults.volumeKmsKeyId;
    	      this.volumeSizeInGb = defaults.volumeSizeInGb;
        }

        @CustomType.Setter
        public Builder instanceCount(Integer instanceCount) {
            this.instanceCount = Objects.requireNonNull(instanceCount);
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder volumeKmsKeyId(@Nullable String volumeKmsKeyId) {
            this.volumeKmsKeyId = volumeKmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeSizeInGb(Integer volumeSizeInGb) {
            this.volumeSizeInGb = Objects.requireNonNull(volumeSizeInGb);
            return this;
        }
        public DataQualityJobDefinitionJobResourcesClusterConfig build() {
            final var _resultValue = new DataQualityJobDefinitionJobResourcesClusterConfig();
            _resultValue.instanceCount = instanceCount;
            _resultValue.instanceType = instanceType;
            _resultValue.volumeKmsKeyId = volumeKmsKeyId;
            _resultValue.volumeSizeInGb = volumeSizeInGb;
            return _resultValue;
        }
    }
}
