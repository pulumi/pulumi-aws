// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResolverFirewallRuleState extends com.pulumi.resources.ResourceArgs {

    public static final ResolverFirewallRuleState Empty = new ResolverFirewallRuleState();

    @Import(name="action")
    private @Nullable Output<String> action;

    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="blockOverrideDnsType")
    private @Nullable Output<String> blockOverrideDnsType;

    public Optional<Output<String>> blockOverrideDnsType() {
        return Optional.ofNullable(this.blockOverrideDnsType);
    }

    @Import(name="blockOverrideDomain")
    private @Nullable Output<String> blockOverrideDomain;

    public Optional<Output<String>> blockOverrideDomain() {
        return Optional.ofNullable(this.blockOverrideDomain);
    }

    @Import(name="blockOverrideTtl")
    private @Nullable Output<Integer> blockOverrideTtl;

    public Optional<Output<Integer>> blockOverrideTtl() {
        return Optional.ofNullable(this.blockOverrideTtl);
    }

    @Import(name="blockResponse")
    private @Nullable Output<String> blockResponse;

    public Optional<Output<String>> blockResponse() {
        return Optional.ofNullable(this.blockResponse);
    }

    @Import(name="firewallDomainListId")
    private @Nullable Output<String> firewallDomainListId;

    public Optional<Output<String>> firewallDomainListId() {
        return Optional.ofNullable(this.firewallDomainListId);
    }

    @Import(name="firewallRuleGroupId")
    private @Nullable Output<String> firewallRuleGroupId;

    public Optional<Output<String>> firewallRuleGroupId() {
        return Optional.ofNullable(this.firewallRuleGroupId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    private ResolverFirewallRuleState() {}

    private ResolverFirewallRuleState(ResolverFirewallRuleState $) {
        this.action = $.action;
        this.blockOverrideDnsType = $.blockOverrideDnsType;
        this.blockOverrideDomain = $.blockOverrideDomain;
        this.blockOverrideTtl = $.blockOverrideTtl;
        this.blockResponse = $.blockResponse;
        this.firewallDomainListId = $.firewallDomainListId;
        this.firewallRuleGroupId = $.firewallRuleGroupId;
        this.name = $.name;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResolverFirewallRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResolverFirewallRuleState $;

        public Builder() {
            $ = new ResolverFirewallRuleState();
        }

        public Builder(ResolverFirewallRuleState defaults) {
            $ = new ResolverFirewallRuleState(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder blockOverrideDnsType(@Nullable Output<String> blockOverrideDnsType) {
            $.blockOverrideDnsType = blockOverrideDnsType;
            return this;
        }

        public Builder blockOverrideDnsType(String blockOverrideDnsType) {
            return blockOverrideDnsType(Output.of(blockOverrideDnsType));
        }

        public Builder blockOverrideDomain(@Nullable Output<String> blockOverrideDomain) {
            $.blockOverrideDomain = blockOverrideDomain;
            return this;
        }

        public Builder blockOverrideDomain(String blockOverrideDomain) {
            return blockOverrideDomain(Output.of(blockOverrideDomain));
        }

        public Builder blockOverrideTtl(@Nullable Output<Integer> blockOverrideTtl) {
            $.blockOverrideTtl = blockOverrideTtl;
            return this;
        }

        public Builder blockOverrideTtl(Integer blockOverrideTtl) {
            return blockOverrideTtl(Output.of(blockOverrideTtl));
        }

        public Builder blockResponse(@Nullable Output<String> blockResponse) {
            $.blockResponse = blockResponse;
            return this;
        }

        public Builder blockResponse(String blockResponse) {
            return blockResponse(Output.of(blockResponse));
        }

        public Builder firewallDomainListId(@Nullable Output<String> firewallDomainListId) {
            $.firewallDomainListId = firewallDomainListId;
            return this;
        }

        public Builder firewallDomainListId(String firewallDomainListId) {
            return firewallDomainListId(Output.of(firewallDomainListId));
        }

        public Builder firewallRuleGroupId(@Nullable Output<String> firewallRuleGroupId) {
            $.firewallRuleGroupId = firewallRuleGroupId;
            return this;
        }

        public Builder firewallRuleGroupId(String firewallRuleGroupId) {
            return firewallRuleGroupId(Output.of(firewallRuleGroupId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public ResolverFirewallRuleState build() {
            return $;
        }
    }

}
