// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.FileCacheLustreConfigurationLogConfiguration;
import com.pulumi.aws.fsx.outputs.FileCacheLustreConfigurationMetadataConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FileCacheLustreConfiguration {
    private String deploymentType;
    private @Nullable List<FileCacheLustreConfigurationLogConfiguration> logConfigurations;
    private List<FileCacheLustreConfigurationMetadataConfiguration> metadataConfigurations;
    private @Nullable String mountName;
    private Integer perUnitStorageThroughput;
    private @Nullable String weeklyMaintenanceStartTime;

    private FileCacheLustreConfiguration() {}
    public String deploymentType() {
        return this.deploymentType;
    }
    public List<FileCacheLustreConfigurationLogConfiguration> logConfigurations() {
        return this.logConfigurations == null ? List.of() : this.logConfigurations;
    }
    public List<FileCacheLustreConfigurationMetadataConfiguration> metadataConfigurations() {
        return this.metadataConfigurations;
    }
    public Optional<String> mountName() {
        return Optional.ofNullable(this.mountName);
    }
    public Integer perUnitStorageThroughput() {
        return this.perUnitStorageThroughput;
    }
    public Optional<String> weeklyMaintenanceStartTime() {
        return Optional.ofNullable(this.weeklyMaintenanceStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileCacheLustreConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentType;
        private @Nullable List<FileCacheLustreConfigurationLogConfiguration> logConfigurations;
        private List<FileCacheLustreConfigurationMetadataConfiguration> metadataConfigurations;
        private @Nullable String mountName;
        private Integer perUnitStorageThroughput;
        private @Nullable String weeklyMaintenanceStartTime;
        public Builder() {}
        public Builder(FileCacheLustreConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentType = defaults.deploymentType;
    	      this.logConfigurations = defaults.logConfigurations;
    	      this.metadataConfigurations = defaults.metadataConfigurations;
    	      this.mountName = defaults.mountName;
    	      this.perUnitStorageThroughput = defaults.perUnitStorageThroughput;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }
        @CustomType.Setter
        public Builder logConfigurations(@Nullable List<FileCacheLustreConfigurationLogConfiguration> logConfigurations) {
            this.logConfigurations = logConfigurations;
            return this;
        }
        public Builder logConfigurations(FileCacheLustreConfigurationLogConfiguration... logConfigurations) {
            return logConfigurations(List.of(logConfigurations));
        }
        @CustomType.Setter
        public Builder metadataConfigurations(List<FileCacheLustreConfigurationMetadataConfiguration> metadataConfigurations) {
            this.metadataConfigurations = Objects.requireNonNull(metadataConfigurations);
            return this;
        }
        public Builder metadataConfigurations(FileCacheLustreConfigurationMetadataConfiguration... metadataConfigurations) {
            return metadataConfigurations(List.of(metadataConfigurations));
        }
        @CustomType.Setter
        public Builder mountName(@Nullable String mountName) {
            this.mountName = mountName;
            return this;
        }
        @CustomType.Setter
        public Builder perUnitStorageThroughput(Integer perUnitStorageThroughput) {
            this.perUnitStorageThroughput = Objects.requireNonNull(perUnitStorageThroughput);
            return this;
        }
        @CustomType.Setter
        public Builder weeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }
        public FileCacheLustreConfiguration build() {
            final var o = new FileCacheLustreConfiguration();
            o.deploymentType = deploymentType;
            o.logConfigurations = logConfigurations;
            o.metadataConfigurations = metadataConfigurations;
            o.mountName = mountName;
            o.perUnitStorageThroughput = perUnitStorageThroughput;
            o.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return o;
        }
    }
}
