// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.NetworkInsightsPathFilterAtDestinationDestinationPortRange;
import com.pulumi.aws.ec2.outputs.NetworkInsightsPathFilterAtDestinationSourcePortRange;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInsightsPathFilterAtDestination {
    /**
     * @return The destination IPv4 address.
     * 
     */
    private @Nullable String destinationAddress;
    /**
     * @return The destination port range. See below for details.
     * 
     */
    private @Nullable NetworkInsightsPathFilterAtDestinationDestinationPortRange destinationPortRange;
    /**
     * @return IP address of the source resource.
     * 
     */
    private @Nullable String sourceAddress;
    /**
     * @return The source port range. See below for details.
     * 
     */
    private @Nullable NetworkInsightsPathFilterAtDestinationSourcePortRange sourcePortRange;

    private NetworkInsightsPathFilterAtDestination() {}
    /**
     * @return The destination IPv4 address.
     * 
     */
    public Optional<String> destinationAddress() {
        return Optional.ofNullable(this.destinationAddress);
    }
    /**
     * @return The destination port range. See below for details.
     * 
     */
    public Optional<NetworkInsightsPathFilterAtDestinationDestinationPortRange> destinationPortRange() {
        return Optional.ofNullable(this.destinationPortRange);
    }
    /**
     * @return IP address of the source resource.
     * 
     */
    public Optional<String> sourceAddress() {
        return Optional.ofNullable(this.sourceAddress);
    }
    /**
     * @return The source port range. See below for details.
     * 
     */
    public Optional<NetworkInsightsPathFilterAtDestinationSourcePortRange> sourcePortRange() {
        return Optional.ofNullable(this.sourcePortRange);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInsightsPathFilterAtDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String destinationAddress;
        private @Nullable NetworkInsightsPathFilterAtDestinationDestinationPortRange destinationPortRange;
        private @Nullable String sourceAddress;
        private @Nullable NetworkInsightsPathFilterAtDestinationSourcePortRange sourcePortRange;
        public Builder() {}
        public Builder(NetworkInsightsPathFilterAtDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationAddress = defaults.destinationAddress;
    	      this.destinationPortRange = defaults.destinationPortRange;
    	      this.sourceAddress = defaults.sourceAddress;
    	      this.sourcePortRange = defaults.sourcePortRange;
        }

        @CustomType.Setter
        public Builder destinationAddress(@Nullable String destinationAddress) {

            this.destinationAddress = destinationAddress;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPortRange(@Nullable NetworkInsightsPathFilterAtDestinationDestinationPortRange destinationPortRange) {

            this.destinationPortRange = destinationPortRange;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAddress(@Nullable String sourceAddress) {

            this.sourceAddress = sourceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePortRange(@Nullable NetworkInsightsPathFilterAtDestinationSourcePortRange sourcePortRange) {

            this.sourcePortRange = sourcePortRange;
            return this;
        }
        public NetworkInsightsPathFilterAtDestination build() {
            final var _resultValue = new NetworkInsightsPathFilterAtDestination();
            _resultValue.destinationAddress = destinationAddress;
            _resultValue.destinationPortRange = destinationPortRange;
            _resultValue.sourceAddress = sourceAddress;
            _resultValue.sourcePortRange = sourcePortRange;
            return _resultValue;
        }
    }
}
