// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.KeyValueStoreTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyValueStoreState extends com.pulumi.resources.ResourceArgs {

    public static final KeyValueStoreState Empty = new KeyValueStoreState();

    /**
     * Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Comment.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Comment.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * ETag hash of the KeyValueStore.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return ETag hash of the KeyValueStore.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="lastModifiedTime")
    private @Nullable Output<String> lastModifiedTime;

    public Optional<Output<String>> lastModifiedTime() {
        return Optional.ofNullable(this.lastModifiedTime);
    }

    /**
     * Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for your CloudFront KeyValueStore.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="timeouts")
    private @Nullable Output<KeyValueStoreTimeoutsArgs> timeouts;

    public Optional<Output<KeyValueStoreTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private KeyValueStoreState() {}

    private KeyValueStoreState(KeyValueStoreState $) {
        this.arn = $.arn;
        this.comment = $.comment;
        this.etag = $.etag;
        this.lastModifiedTime = $.lastModifiedTime;
        this.name = $.name;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyValueStoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyValueStoreState $;

        public Builder() {
            $ = new KeyValueStoreState();
        }

        public Builder(KeyValueStoreState defaults) {
            $ = new KeyValueStoreState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param comment Comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param etag ETag hash of the KeyValueStore.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag ETag hash of the KeyValueStore.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder lastModifiedTime(@Nullable Output<String> lastModifiedTime) {
            $.lastModifiedTime = lastModifiedTime;
            return this;
        }

        public Builder lastModifiedTime(String lastModifiedTime) {
            return lastModifiedTime(Output.of(lastModifiedTime));
        }

        /**
         * @param name Unique name for your CloudFront KeyValueStore.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for your CloudFront KeyValueStore.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder timeouts(@Nullable Output<KeyValueStoreTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(KeyValueStoreTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public KeyValueStoreState build() {
            return $;
        }
    }

}
