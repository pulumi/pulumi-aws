// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngestionState extends com.pulumi.resources.ResourceArgs {

    public static final IngestionState Empty = new IngestionState();

    /**
     * ARN of the Ingestion.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Ingestion.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * ID of the dataset used in the ingestion.
     * 
     */
    @Import(name="dataSetId")
    private @Nullable Output<String> dataSetId;

    /**
     * @return ID of the dataset used in the ingestion.
     * 
     */
    public Optional<Output<String>> dataSetId() {
        return Optional.ofNullable(this.dataSetId);
    }

    /**
     * ID for the ingestion.
     * 
     */
    @Import(name="ingestionId")
    private @Nullable Output<String> ingestionId;

    /**
     * @return ID for the ingestion.
     * 
     */
    public Optional<Output<String>> ingestionId() {
        return Optional.ofNullable(this.ingestionId);
    }

    /**
     * Ingestion status.
     * 
     */
    @Import(name="ingestionStatus")
    private @Nullable Output<String> ingestionStatus;

    /**
     * @return Ingestion status.
     * 
     */
    public Optional<Output<String>> ingestionStatus() {
        return Optional.ofNullable(this.ingestionStatus);
    }

    /**
     * Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="ingestionType")
    private @Nullable Output<String> ingestionType;

    /**
     * @return Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> ingestionType() {
        return Optional.ofNullable(this.ingestionType);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private IngestionState() {}

    private IngestionState(IngestionState $) {
        this.arn = $.arn;
        this.awsAccountId = $.awsAccountId;
        this.dataSetId = $.dataSetId;
        this.ingestionId = $.ingestionId;
        this.ingestionStatus = $.ingestionStatus;
        this.ingestionType = $.ingestionType;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngestionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngestionState $;

        public Builder() {
            $ = new IngestionState();
        }

        public Builder(IngestionState defaults) {
            $ = new IngestionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Ingestion.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Ingestion.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param dataSetId ID of the dataset used in the ingestion.
         * 
         * @return builder
         * 
         */
        public Builder dataSetId(@Nullable Output<String> dataSetId) {
            $.dataSetId = dataSetId;
            return this;
        }

        /**
         * @param dataSetId ID of the dataset used in the ingestion.
         * 
         * @return builder
         * 
         */
        public Builder dataSetId(String dataSetId) {
            return dataSetId(Output.of(dataSetId));
        }

        /**
         * @param ingestionId ID for the ingestion.
         * 
         * @return builder
         * 
         */
        public Builder ingestionId(@Nullable Output<String> ingestionId) {
            $.ingestionId = ingestionId;
            return this;
        }

        /**
         * @param ingestionId ID for the ingestion.
         * 
         * @return builder
         * 
         */
        public Builder ingestionId(String ingestionId) {
            return ingestionId(Output.of(ingestionId));
        }

        /**
         * @param ingestionStatus Ingestion status.
         * 
         * @return builder
         * 
         */
        public Builder ingestionStatus(@Nullable Output<String> ingestionStatus) {
            $.ingestionStatus = ingestionStatus;
            return this;
        }

        /**
         * @param ingestionStatus Ingestion status.
         * 
         * @return builder
         * 
         */
        public Builder ingestionStatus(String ingestionStatus) {
            return ingestionStatus(Output.of(ingestionStatus));
        }

        /**
         * @param ingestionType Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder ingestionType(@Nullable Output<String> ingestionType) {
            $.ingestionType = ingestionType;
            return this;
        }

        /**
         * @param ingestionType Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder ingestionType(String ingestionType) {
            return ingestionType(Output.of(ingestionType));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public IngestionState build() {
            return $;
        }
    }

}
