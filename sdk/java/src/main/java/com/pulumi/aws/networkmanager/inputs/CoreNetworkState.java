// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.aws.networkmanager.inputs.CoreNetworkEdgeArgs;
import com.pulumi.aws.networkmanager.inputs.CoreNetworkSegmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final CoreNetworkState Empty = new CoreNetworkState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="edges")
    private @Nullable Output<List<CoreNetworkEdgeArgs>> edges;

    public Optional<Output<List<CoreNetworkEdgeArgs>>> edges() {
        return Optional.ofNullable(this.edges);
    }

    @Import(name="globalNetworkId")
    private @Nullable Output<String> globalNetworkId;

    public Optional<Output<String>> globalNetworkId() {
        return Optional.ofNullable(this.globalNetworkId);
    }

    @Import(name="policyDocument")
    private @Nullable Output<String> policyDocument;

    public Optional<Output<String>> policyDocument() {
        return Optional.ofNullable(this.policyDocument);
    }

    @Import(name="segments")
    private @Nullable Output<List<CoreNetworkSegmentArgs>> segments;

    public Optional<Output<List<CoreNetworkSegmentArgs>>> segments() {
        return Optional.ofNullable(this.segments);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private CoreNetworkState() {}

    private CoreNetworkState(CoreNetworkState $) {
        this.arn = $.arn;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.edges = $.edges;
        this.globalNetworkId = $.globalNetworkId;
        this.policyDocument = $.policyDocument;
        this.segments = $.segments;
        this.state = $.state;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreNetworkState $;

        public Builder() {
            $ = new CoreNetworkState();
        }

        public Builder(CoreNetworkState defaults) {
            $ = new CoreNetworkState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder edges(@Nullable Output<List<CoreNetworkEdgeArgs>> edges) {
            $.edges = edges;
            return this;
        }

        public Builder edges(List<CoreNetworkEdgeArgs> edges) {
            return edges(Output.of(edges));
        }

        public Builder edges(CoreNetworkEdgeArgs... edges) {
            return edges(List.of(edges));
        }

        public Builder globalNetworkId(@Nullable Output<String> globalNetworkId) {
            $.globalNetworkId = globalNetworkId;
            return this;
        }

        public Builder globalNetworkId(String globalNetworkId) {
            return globalNetworkId(Output.of(globalNetworkId));
        }

        public Builder policyDocument(@Nullable Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        public Builder segments(@Nullable Output<List<CoreNetworkSegmentArgs>> segments) {
            $.segments = segments;
            return this;
        }

        public Builder segments(List<CoreNetworkSegmentArgs> segments) {
            return segments(Output.of(segments));
        }

        public Builder segments(CoreNetworkSegmentArgs... segments) {
            return segments(List.of(segments));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public CoreNetworkState build() {
            return $;
        }
    }

}
