// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.outputs;

import com.pulumi.aws.ssoadmin.outputs.GetPrincipalApplicationAssignmentsApplicationAssignment;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetPrincipalApplicationAssignmentsResult {
    /**
     * @return List of principals assigned to the application. See the `application_assignments` attribute reference below.
     * 
     */
    private @Nullable List<GetPrincipalApplicationAssignmentsApplicationAssignment> applicationAssignments;
    private String id;
    private String instanceArn;
    /**
     * @return An identifier for an object in IAM Identity Center, such as a user or group.
     * 
     */
    private String principalId;
    /**
     * @return Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     * 
     */
    private String principalType;

    private GetPrincipalApplicationAssignmentsResult() {}
    /**
     * @return List of principals assigned to the application. See the `application_assignments` attribute reference below.
     * 
     */
    public List<GetPrincipalApplicationAssignmentsApplicationAssignment> applicationAssignments() {
        return this.applicationAssignments == null ? List.of() : this.applicationAssignments;
    }
    public String id() {
        return this.id;
    }
    public String instanceArn() {
        return this.instanceArn;
    }
    /**
     * @return An identifier for an object in IAM Identity Center, such as a user or group.
     * 
     */
    public String principalId() {
        return this.principalId;
    }
    /**
     * @return Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     * 
     */
    public String principalType() {
        return this.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrincipalApplicationAssignmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetPrincipalApplicationAssignmentsApplicationAssignment> applicationAssignments;
        private String id;
        private String instanceArn;
        private String principalId;
        private String principalType;
        public Builder() {}
        public Builder(GetPrincipalApplicationAssignmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationAssignments = defaults.applicationAssignments;
    	      this.id = defaults.id;
    	      this.instanceArn = defaults.instanceArn;
    	      this.principalId = defaults.principalId;
    	      this.principalType = defaults.principalType;
        }

        @CustomType.Setter
        public Builder applicationAssignments(@Nullable List<GetPrincipalApplicationAssignmentsApplicationAssignment> applicationAssignments) {
            this.applicationAssignments = applicationAssignments;
            return this;
        }
        public Builder applicationAssignments(GetPrincipalApplicationAssignmentsApplicationAssignment... applicationAssignments) {
            return applicationAssignments(List.of(applicationAssignments));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceArn(String instanceArn) {
            this.instanceArn = Objects.requireNonNull(instanceArn);
            return this;
        }
        @CustomType.Setter
        public Builder principalId(String principalId) {
            this.principalId = Objects.requireNonNull(principalId);
            return this;
        }
        @CustomType.Setter
        public Builder principalType(String principalType) {
            this.principalType = Objects.requireNonNull(principalType);
            return this;
        }
        public GetPrincipalApplicationAssignmentsResult build() {
            final var _resultValue = new GetPrincipalApplicationAssignmentsResult();
            _resultValue.applicationAssignments = applicationAssignments;
            _resultValue.id = id;
            _resultValue.instanceArn = instanceArn;
            _resultValue.principalId = principalId;
            _resultValue.principalType = principalType;
            return _resultValue;
        }
    }
}
