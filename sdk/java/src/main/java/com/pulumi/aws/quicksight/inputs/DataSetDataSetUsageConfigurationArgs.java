// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSetDataSetUsageConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetDataSetUsageConfigurationArgs Empty = new DataSetDataSetUsageConfigurationArgs();

    /**
     * Controls whether a child dataset of a direct query can use this dataset as a source.
     * 
     */
    @Import(name="disableUseAsDirectQuerySource")
    private @Nullable Output<Boolean> disableUseAsDirectQuerySource;

    /**
     * @return Controls whether a child dataset of a direct query can use this dataset as a source.
     * 
     */
    public Optional<Output<Boolean>> disableUseAsDirectQuerySource() {
        return Optional.ofNullable(this.disableUseAsDirectQuerySource);
    }

    /**
     * Controls whether a child dataset that&#39;s stored in QuickSight can use this dataset as a source.
     * 
     */
    @Import(name="disableUseAsImportedSource")
    private @Nullable Output<Boolean> disableUseAsImportedSource;

    /**
     * @return Controls whether a child dataset that&#39;s stored in QuickSight can use this dataset as a source.
     * 
     */
    public Optional<Output<Boolean>> disableUseAsImportedSource() {
        return Optional.ofNullable(this.disableUseAsImportedSource);
    }

    private DataSetDataSetUsageConfigurationArgs() {}

    private DataSetDataSetUsageConfigurationArgs(DataSetDataSetUsageConfigurationArgs $) {
        this.disableUseAsDirectQuerySource = $.disableUseAsDirectQuerySource;
        this.disableUseAsImportedSource = $.disableUseAsImportedSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetDataSetUsageConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetDataSetUsageConfigurationArgs $;

        public Builder() {
            $ = new DataSetDataSetUsageConfigurationArgs();
        }

        public Builder(DataSetDataSetUsageConfigurationArgs defaults) {
            $ = new DataSetDataSetUsageConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableUseAsDirectQuerySource Controls whether a child dataset of a direct query can use this dataset as a source.
         * 
         * @return builder
         * 
         */
        public Builder disableUseAsDirectQuerySource(@Nullable Output<Boolean> disableUseAsDirectQuerySource) {
            $.disableUseAsDirectQuerySource = disableUseAsDirectQuerySource;
            return this;
        }

        /**
         * @param disableUseAsDirectQuerySource Controls whether a child dataset of a direct query can use this dataset as a source.
         * 
         * @return builder
         * 
         */
        public Builder disableUseAsDirectQuerySource(Boolean disableUseAsDirectQuerySource) {
            return disableUseAsDirectQuerySource(Output.of(disableUseAsDirectQuerySource));
        }

        /**
         * @param disableUseAsImportedSource Controls whether a child dataset that&#39;s stored in QuickSight can use this dataset as a source.
         * 
         * @return builder
         * 
         */
        public Builder disableUseAsImportedSource(@Nullable Output<Boolean> disableUseAsImportedSource) {
            $.disableUseAsImportedSource = disableUseAsImportedSource;
            return this;
        }

        /**
         * @param disableUseAsImportedSource Controls whether a child dataset that&#39;s stored in QuickSight can use this dataset as a source.
         * 
         * @return builder
         * 
         */
        public Builder disableUseAsImportedSource(Boolean disableUseAsImportedSource) {
            return disableUseAsImportedSource(Output.of(disableUseAsImportedSource));
        }

        public DataSetDataSetUsageConfigurationArgs build() {
            return $;
        }
    }

}
