// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsActionArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsEventSourceArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsParametersArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsArgs Empty = new LifecyclePolicyPolicyDetailsArgs();

    @Import(name="action")
    private @Nullable Output<LifecyclePolicyPolicyDetailsActionArgs> action;

    public Optional<Output<LifecyclePolicyPolicyDetailsActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="eventSource")
    private @Nullable Output<LifecyclePolicyPolicyDetailsEventSourceArgs> eventSource;

    public Optional<Output<LifecyclePolicyPolicyDetailsEventSourceArgs>> eventSource() {
        return Optional.ofNullable(this.eventSource);
    }

    @Import(name="parameters")
    private @Nullable Output<LifecyclePolicyPolicyDetailsParametersArgs> parameters;

    public Optional<Output<LifecyclePolicyPolicyDetailsParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    @Import(name="resourceLocations")
    private @Nullable Output<String> resourceLocations;

    public Optional<Output<String>> resourceLocations() {
        return Optional.ofNullable(this.resourceLocations);
    }

    @Import(name="resourceTypes")
    private @Nullable Output<List<String>> resourceTypes;

    public Optional<Output<List<String>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    @Import(name="schedules")
    private @Nullable Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules;

    public Optional<Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    @Import(name="targetTags")
    private @Nullable Output<Map<String,String>> targetTags;

    public Optional<Output<Map<String,String>>> targetTags() {
        return Optional.ofNullable(this.targetTags);
    }

    private LifecyclePolicyPolicyDetailsArgs() {}

    private LifecyclePolicyPolicyDetailsArgs(LifecyclePolicyPolicyDetailsArgs $) {
        this.action = $.action;
        this.eventSource = $.eventSource;
        this.parameters = $.parameters;
        this.policyType = $.policyType;
        this.resourceLocations = $.resourceLocations;
        this.resourceTypes = $.resourceTypes;
        this.schedules = $.schedules;
        this.targetTags = $.targetTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable Output<LifecyclePolicyPolicyDetailsActionArgs> action) {
            $.action = action;
            return this;
        }

        public Builder action(LifecyclePolicyPolicyDetailsActionArgs action) {
            return action(Output.of(action));
        }

        public Builder eventSource(@Nullable Output<LifecyclePolicyPolicyDetailsEventSourceArgs> eventSource) {
            $.eventSource = eventSource;
            return this;
        }

        public Builder eventSource(LifecyclePolicyPolicyDetailsEventSourceArgs eventSource) {
            return eventSource(Output.of(eventSource));
        }

        public Builder parameters(@Nullable Output<LifecyclePolicyPolicyDetailsParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(LifecyclePolicyPolicyDetailsParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public Builder resourceLocations(@Nullable Output<String> resourceLocations) {
            $.resourceLocations = resourceLocations;
            return this;
        }

        public Builder resourceLocations(String resourceLocations) {
            return resourceLocations(Output.of(resourceLocations));
        }

        public Builder resourceTypes(@Nullable Output<List<String>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        public Builder resourceTypes(List<String> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        public Builder schedules(@Nullable Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        public Builder schedules(List<LifecyclePolicyPolicyDetailsScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        public Builder schedules(LifecyclePolicyPolicyDetailsScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        public Builder targetTags(@Nullable Output<Map<String,String>> targetTags) {
            $.targetTags = targetTags;
            return this;
        }

        public Builder targetTags(Map<String,String> targetTags) {
            return targetTags(Output.of(targetTags));
        }

        public LifecyclePolicyPolicyDetailsArgs build() {
            return $;
        }
    }

}
