// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBucketObjectResult {
    /**
     * @return Object data (see **limitations above** to understand cases in which this field is actually available)
     * 
     */
    private @Nullable String body;
    /**
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    private String bucket;
    /**
     * @return (Optional) Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.
     * 
     */
    private @Nullable Boolean bucketKeyEnabled;
    /**
     * @return Caching behavior along the request/reply chain.
     * 
     */
    private @Nullable String cacheControl;
    /**
     * @return Presentational information for the object.
     * 
     */
    private @Nullable String contentDisposition;
    /**
     * @return What content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
     * 
     */
    private @Nullable String contentEncoding;
    /**
     * @return Language the content is in.
     * 
     */
    private @Nullable String contentLanguage;
    /**
     * @return Size of the body in bytes.
     * 
     */
    private @Nullable Integer contentLength;
    /**
     * @return Standard MIME type describing the format of the object data.
     * 
     */
    private @Nullable String contentType;
    /**
     * @return [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it&#39;s not encrypted)
     * 
     */
    private @Nullable String etag;
    /**
     * @return If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.
     * 
     */
    private @Nullable String expiration;
    /**
     * @return Date and time at which the object is no longer cacheable.
     * 
     */
    private @Nullable String expires;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String key;
    /**
     * @return Last modified date of the object in RFC1123 format (e.g., `Mon, 02 Jan 2006 15:04:05 MST`)
     * 
     */
    private @Nullable String lastModified;
    /**
     * @return Map of metadata stored with the object in S3. Keys are always returned in lowercase.
     * 
     */
    private @Nullable Map<String,String> metadata;
    /**
     * @return Indicates whether this object has an active [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds). This field is only returned if you have permission to view an object&#39;s legal hold status.
     * 
     */
    private @Nullable String objectLockLegalHoldStatus;
    /**
     * @return Object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) currently in place for this object.
     * 
     */
    private @Nullable String objectLockMode;
    /**
     * @return The date and time when this object&#39;s object lock will expire.
     * 
     */
    private @Nullable String objectLockRetainUntilDate;
    private @Nullable String range;
    /**
     * @return If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.
     * 
     */
    private @Nullable String serverSideEncryption;
    /**
     * @return If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.
     * 
     */
    private @Nullable String sseKmsKeyId;
    /**
     * @return [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.
     * 
     */
    private @Nullable String storageClass;
    /**
     * @return Map of tags assigned to the object.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Latest version ID of the object returned.
     * 
     */
    private @Nullable String versionId;
    /**
     * @return If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.
     * 
     */
    private @Nullable String websiteRedirectLocation;

    private GetBucketObjectResult() {}
    /**
     * @return Object data (see **limitations above** to understand cases in which this field is actually available)
     * 
     */
    public Optional<String> body() {
        return Optional.ofNullable(this.body);
    }
    /**
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return (Optional) Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.
     * 
     */
    public Optional<Boolean> bucketKeyEnabled() {
        return Optional.ofNullable(this.bucketKeyEnabled);
    }
    /**
     * @return Caching behavior along the request/reply chain.
     * 
     */
    public Optional<String> cacheControl() {
        return Optional.ofNullable(this.cacheControl);
    }
    /**
     * @return Presentational information for the object.
     * 
     */
    public Optional<String> contentDisposition() {
        return Optional.ofNullable(this.contentDisposition);
    }
    /**
     * @return What content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
     * 
     */
    public Optional<String> contentEncoding() {
        return Optional.ofNullable(this.contentEncoding);
    }
    /**
     * @return Language the content is in.
     * 
     */
    public Optional<String> contentLanguage() {
        return Optional.ofNullable(this.contentLanguage);
    }
    /**
     * @return Size of the body in bytes.
     * 
     */
    public Optional<Integer> contentLength() {
        return Optional.ofNullable(this.contentLength);
    }
    /**
     * @return Standard MIME type describing the format of the object data.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * @return [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it&#39;s not encrypted)
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.
     * 
     */
    public Optional<String> expiration() {
        return Optional.ofNullable(this.expiration);
    }
    /**
     * @return Date and time at which the object is no longer cacheable.
     * 
     */
    public Optional<String> expires() {
        return Optional.ofNullable(this.expires);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String key() {
        return this.key;
    }
    /**
     * @return Last modified date of the object in RFC1123 format (e.g., `Mon, 02 Jan 2006 15:04:05 MST`)
     * 
     */
    public Optional<String> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }
    /**
     * @return Map of metadata stored with the object in S3. Keys are always returned in lowercase.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return Indicates whether this object has an active [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds). This field is only returned if you have permission to view an object&#39;s legal hold status.
     * 
     */
    public Optional<String> objectLockLegalHoldStatus() {
        return Optional.ofNullable(this.objectLockLegalHoldStatus);
    }
    /**
     * @return Object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) currently in place for this object.
     * 
     */
    public Optional<String> objectLockMode() {
        return Optional.ofNullable(this.objectLockMode);
    }
    /**
     * @return The date and time when this object&#39;s object lock will expire.
     * 
     */
    public Optional<String> objectLockRetainUntilDate() {
        return Optional.ofNullable(this.objectLockRetainUntilDate);
    }
    public Optional<String> range() {
        return Optional.ofNullable(this.range);
    }
    /**
     * @return If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.
     * 
     */
    public Optional<String> serverSideEncryption() {
        return Optional.ofNullable(this.serverSideEncryption);
    }
    /**
     * @return If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.
     * 
     */
    public Optional<String> sseKmsKeyId() {
        return Optional.ofNullable(this.sseKmsKeyId);
    }
    /**
     * @return [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.
     * 
     */
    public Optional<String> storageClass() {
        return Optional.ofNullable(this.storageClass);
    }
    /**
     * @return Map of tags assigned to the object.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Latest version ID of the object returned.
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }
    /**
     * @return If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.
     * 
     */
    public Optional<String> websiteRedirectLocation() {
        return Optional.ofNullable(this.websiteRedirectLocation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketObjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String body;
        private String bucket;
        private @Nullable Boolean bucketKeyEnabled;
        private @Nullable String cacheControl;
        private @Nullable String contentDisposition;
        private @Nullable String contentEncoding;
        private @Nullable String contentLanguage;
        private @Nullable Integer contentLength;
        private @Nullable String contentType;
        private @Nullable String etag;
        private @Nullable String expiration;
        private @Nullable String expires;
        private @Nullable String id;
        private String key;
        private @Nullable String lastModified;
        private @Nullable Map<String,String> metadata;
        private @Nullable String objectLockLegalHoldStatus;
        private @Nullable String objectLockMode;
        private @Nullable String objectLockRetainUntilDate;
        private @Nullable String range;
        private @Nullable String serverSideEncryption;
        private @Nullable String sseKmsKeyId;
        private @Nullable String storageClass;
        private @Nullable Map<String,String> tags;
        private @Nullable String versionId;
        private @Nullable String websiteRedirectLocation;
        public Builder() {}
        public Builder(GetBucketObjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.bucket = defaults.bucket;
    	      this.bucketKeyEnabled = defaults.bucketKeyEnabled;
    	      this.cacheControl = defaults.cacheControl;
    	      this.contentDisposition = defaults.contentDisposition;
    	      this.contentEncoding = defaults.contentEncoding;
    	      this.contentLanguage = defaults.contentLanguage;
    	      this.contentLength = defaults.contentLength;
    	      this.contentType = defaults.contentType;
    	      this.etag = defaults.etag;
    	      this.expiration = defaults.expiration;
    	      this.expires = defaults.expires;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.lastModified = defaults.lastModified;
    	      this.metadata = defaults.metadata;
    	      this.objectLockLegalHoldStatus = defaults.objectLockLegalHoldStatus;
    	      this.objectLockMode = defaults.objectLockMode;
    	      this.objectLockRetainUntilDate = defaults.objectLockRetainUntilDate;
    	      this.range = defaults.range;
    	      this.serverSideEncryption = defaults.serverSideEncryption;
    	      this.sseKmsKeyId = defaults.sseKmsKeyId;
    	      this.storageClass = defaults.storageClass;
    	      this.tags = defaults.tags;
    	      this.versionId = defaults.versionId;
    	      this.websiteRedirectLocation = defaults.websiteRedirectLocation;
        }

        @CustomType.Setter
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        @CustomType.Setter
        public Builder bucketKeyEnabled(@Nullable Boolean bucketKeyEnabled) {
            this.bucketKeyEnabled = bucketKeyEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cacheControl(@Nullable String cacheControl) {
            this.cacheControl = cacheControl;
            return this;
        }
        @CustomType.Setter
        public Builder contentDisposition(@Nullable String contentDisposition) {
            this.contentDisposition = contentDisposition;
            return this;
        }
        @CustomType.Setter
        public Builder contentEncoding(@Nullable String contentEncoding) {
            this.contentEncoding = contentEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder contentLanguage(@Nullable String contentLanguage) {
            this.contentLanguage = contentLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder contentLength(@Nullable Integer contentLength) {
            this.contentLength = contentLength;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder expiration(@Nullable String expiration) {
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder expires(@Nullable String expires) {
            this.expires = expires;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(@Nullable String lastModified) {
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder objectLockLegalHoldStatus(@Nullable String objectLockLegalHoldStatus) {
            this.objectLockLegalHoldStatus = objectLockLegalHoldStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectLockMode(@Nullable String objectLockMode) {
            this.objectLockMode = objectLockMode;
            return this;
        }
        @CustomType.Setter
        public Builder objectLockRetainUntilDate(@Nullable String objectLockRetainUntilDate) {
            this.objectLockRetainUntilDate = objectLockRetainUntilDate;
            return this;
        }
        @CustomType.Setter
        public Builder range(@Nullable String range) {
            this.range = range;
            return this;
        }
        @CustomType.Setter
        public Builder serverSideEncryption(@Nullable String serverSideEncryption) {
            this.serverSideEncryption = serverSideEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder sseKmsKeyId(@Nullable String sseKmsKeyId) {
            this.sseKmsKeyId = sseKmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(@Nullable String storageClass) {
            this.storageClass = storageClass;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder versionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        @CustomType.Setter
        public Builder websiteRedirectLocation(@Nullable String websiteRedirectLocation) {
            this.websiteRedirectLocation = websiteRedirectLocation;
            return this;
        }
        public GetBucketObjectResult build() {
            final var o = new GetBucketObjectResult();
            o.body = body;
            o.bucket = bucket;
            o.bucketKeyEnabled = bucketKeyEnabled;
            o.cacheControl = cacheControl;
            o.contentDisposition = contentDisposition;
            o.contentEncoding = contentEncoding;
            o.contentLanguage = contentLanguage;
            o.contentLength = contentLength;
            o.contentType = contentType;
            o.etag = etag;
            o.expiration = expiration;
            o.expires = expires;
            o.id = id;
            o.key = key;
            o.lastModified = lastModified;
            o.metadata = metadata;
            o.objectLockLegalHoldStatus = objectLockLegalHoldStatus;
            o.objectLockMode = objectLockMode;
            o.objectLockRetainUntilDate = objectLockRetainUntilDate;
            o.range = range;
            o.serverSideEncryption = serverSideEncryption;
            o.sseKmsKeyId = sseKmsKeyId;
            o.storageClass = storageClass;
            o.tags = tags;
            o.versionId = versionId;
            o.websiteRedirectLocation = websiteRedirectLocation;
            return o;
        }
    }
}
