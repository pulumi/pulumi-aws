// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codegurureviewer;

import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationKmsKeyDetailsArgs;
import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryAssociationArgs Empty = new RepositoryAssociationArgs();

    /**
     * An object describing the KMS key to asssociate. Block is documented below.
     * 
     */
    @Import(name="kmsKeyDetails")
    private @Nullable Output<RepositoryAssociationKmsKeyDetailsArgs> kmsKeyDetails;

    /**
     * @return An object describing the KMS key to asssociate. Block is documented below.
     * 
     */
    public Optional<Output<RepositoryAssociationKmsKeyDetailsArgs>> kmsKeyDetails() {
        return Optional.ofNullable(this.kmsKeyDetails);
    }

    /**
     * An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="repository", required=true)
    private Output<RepositoryAssociationRepositoryArgs> repository;

    /**
     * @return An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<RepositoryAssociationRepositoryArgs> repository() {
        return this.repository;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RepositoryAssociationArgs() {}

    private RepositoryAssociationArgs(RepositoryAssociationArgs $) {
        this.kmsKeyDetails = $.kmsKeyDetails;
        this.repository = $.repository;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryAssociationArgs $;

        public Builder() {
            $ = new RepositoryAssociationArgs();
        }

        public Builder(RepositoryAssociationArgs defaults) {
            $ = new RepositoryAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyDetails An object describing the KMS key to asssociate. Block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyDetails(@Nullable Output<RepositoryAssociationKmsKeyDetailsArgs> kmsKeyDetails) {
            $.kmsKeyDetails = kmsKeyDetails;
            return this;
        }

        /**
         * @param kmsKeyDetails An object describing the KMS key to asssociate. Block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyDetails(RepositoryAssociationKmsKeyDetailsArgs kmsKeyDetails) {
            return kmsKeyDetails(Output.of(kmsKeyDetails));
        }

        /**
         * @param repository An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder repository(Output<RepositoryAssociationRepositoryArgs> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder repository(RepositoryAssociationRepositoryArgs repository) {
            return repository(Output.of(repository));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public RepositoryAssociationArgs build() {
            $.repository = Objects.requireNonNull($.repository, "expected parameter 'repository' to be non-null");
            return $;
        }
    }

}
