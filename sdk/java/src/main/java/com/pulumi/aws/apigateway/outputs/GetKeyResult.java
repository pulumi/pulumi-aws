// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyResult {
    /**
     * @return Date and time when the API Key was created.
     * 
     */
    private @Nullable String createdDate;
    /**
     * @return Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.
     * 
     */
    private @Nullable String customerId;
    /**
     * @return Description of the API Key.
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether the API Key is enabled.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Set to the ID of the API Key.
     * 
     */
    private String id;
    /**
     * @return Date and time when the API Key was last updated.
     * 
     */
    private @Nullable String lastUpdatedDate;
    /**
     * @return Set to the name of the API Key.
     * 
     */
    private @Nullable String name;
    /**
     * @return Map of tags for the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Set to the value of the API Key.
     * 
     */
    private @Nullable String value;

    private GetKeyResult() {}
    /**
     * @return Date and time when the API Key was created.
     * 
     */
    public Optional<String> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }
    /**
     * @return Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.
     * 
     */
    public Optional<String> customerId() {
        return Optional.ofNullable(this.customerId);
    }
    /**
     * @return Description of the API Key.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether the API Key is enabled.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Set to the ID of the API Key.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Date and time when the API Key was last updated.
     * 
     */
    public Optional<String> lastUpdatedDate() {
        return Optional.ofNullable(this.lastUpdatedDate);
    }
    /**
     * @return Set to the name of the API Key.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Set to the value of the API Key.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createdDate;
        private @Nullable String customerId;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private String id;
        private @Nullable String lastUpdatedDate;
        private @Nullable String name;
        private @Nullable Map<String,String> tags;
        private @Nullable String value;
        public Builder() {}
        public Builder(GetKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.customerId = defaults.customerId;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder createdDate(@Nullable String createdDate) {
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder customerId(@Nullable String customerId) {
            this.customerId = customerId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedDate(@Nullable String lastUpdatedDate) {
            this.lastUpdatedDate = lastUpdatedDate;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public GetKeyResult build() {
            final var o = new GetKeyResult();
            o.createdDate = createdDate;
            o.customerId = customerId;
            o.description = description;
            o.enabled = enabled;
            o.id = id;
            o.lastUpdatedDate = lastUpdatedDate;
            o.name = name;
            o.tags = tags;
            o.value = value;
            return o;
        }
    }
}
