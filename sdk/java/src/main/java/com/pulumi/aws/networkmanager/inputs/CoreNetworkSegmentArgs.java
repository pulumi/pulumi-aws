// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreNetworkSegmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreNetworkSegmentArgs Empty = new CoreNetworkSegmentArgs();

    /**
     * Regions where the edges are located.
     * 
     */
    @Import(name="edgeLocations")
    private @Nullable Output<List<String>> edgeLocations;

    /**
     * @return Regions where the edges are located.
     * 
     */
    public Optional<Output<List<String>>> edgeLocations() {
        return Optional.ofNullable(this.edgeLocations);
    }

    /**
     * Name of a core network segment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of a core network segment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Shared segments of a core network.
     * 
     */
    @Import(name="sharedSegments")
    private @Nullable Output<List<String>> sharedSegments;

    /**
     * @return Shared segments of a core network.
     * 
     */
    public Optional<Output<List<String>>> sharedSegments() {
        return Optional.ofNullable(this.sharedSegments);
    }

    private CoreNetworkSegmentArgs() {}

    private CoreNetworkSegmentArgs(CoreNetworkSegmentArgs $) {
        this.edgeLocations = $.edgeLocations;
        this.name = $.name;
        this.sharedSegments = $.sharedSegments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreNetworkSegmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreNetworkSegmentArgs $;

        public Builder() {
            $ = new CoreNetworkSegmentArgs();
        }

        public Builder(CoreNetworkSegmentArgs defaults) {
            $ = new CoreNetworkSegmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param edgeLocations Regions where the edges are located.
         * 
         * @return builder
         * 
         */
        public Builder edgeLocations(@Nullable Output<List<String>> edgeLocations) {
            $.edgeLocations = edgeLocations;
            return this;
        }

        /**
         * @param edgeLocations Regions where the edges are located.
         * 
         * @return builder
         * 
         */
        public Builder edgeLocations(List<String> edgeLocations) {
            return edgeLocations(Output.of(edgeLocations));
        }

        /**
         * @param edgeLocations Regions where the edges are located.
         * 
         * @return builder
         * 
         */
        public Builder edgeLocations(String... edgeLocations) {
            return edgeLocations(List.of(edgeLocations));
        }

        /**
         * @param name Name of a core network segment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of a core network segment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sharedSegments Shared segments of a core network.
         * 
         * @return builder
         * 
         */
        public Builder sharedSegments(@Nullable Output<List<String>> sharedSegments) {
            $.sharedSegments = sharedSegments;
            return this;
        }

        /**
         * @param sharedSegments Shared segments of a core network.
         * 
         * @return builder
         * 
         */
        public Builder sharedSegments(List<String> sharedSegments) {
            return sharedSegments(Output.of(sharedSegments));
        }

        /**
         * @param sharedSegments Shared segments of a core network.
         * 
         * @return builder
         * 
         */
        public Builder sharedSegments(String... sharedSegments) {
            return sharedSegments(List.of(sharedSegments));
        }

        public CoreNetworkSegmentArgs build() {
            return $;
        }
    }

}
