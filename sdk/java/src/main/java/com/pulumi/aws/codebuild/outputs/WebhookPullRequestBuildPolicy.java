// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class WebhookPullRequestBuildPolicy {
    /**
     * @return List of repository roles that have approval privileges for pull request builds when comment approval is required. This argument must be specified only when `requires_comment_approval` is not `DISABLED`. See the [AWS documentation](https://docs.aws.amazon.com/codebuild/latest/userguide/pull-request-build-policy.html#pull-request-build-policy.configuration) for valid values and defaults.
     * 
     */
    private @Nullable List<String> approverRoles;
    /**
     * @return Specifies when comment-based approval is required before triggering a build on pull requests. Valid values are: `DISABLED`, `ALL_PULL_REQUESTS`, and `FORK_PULL_REQUESTS`.
     * 
     */
    private String requiresCommentApproval;

    private WebhookPullRequestBuildPolicy() {}
    /**
     * @return List of repository roles that have approval privileges for pull request builds when comment approval is required. This argument must be specified only when `requires_comment_approval` is not `DISABLED`. See the [AWS documentation](https://docs.aws.amazon.com/codebuild/latest/userguide/pull-request-build-policy.html#pull-request-build-policy.configuration) for valid values and defaults.
     * 
     */
    public List<String> approverRoles() {
        return this.approverRoles == null ? List.of() : this.approverRoles;
    }
    /**
     * @return Specifies when comment-based approval is required before triggering a build on pull requests. Valid values are: `DISABLED`, `ALL_PULL_REQUESTS`, and `FORK_PULL_REQUESTS`.
     * 
     */
    public String requiresCommentApproval() {
        return this.requiresCommentApproval;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookPullRequestBuildPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> approverRoles;
        private String requiresCommentApproval;
        public Builder() {}
        public Builder(WebhookPullRequestBuildPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approverRoles = defaults.approverRoles;
    	      this.requiresCommentApproval = defaults.requiresCommentApproval;
        }

        @CustomType.Setter
        public Builder approverRoles(@Nullable List<String> approverRoles) {

            this.approverRoles = approverRoles;
            return this;
        }
        public Builder approverRoles(String... approverRoles) {
            return approverRoles(List.of(approverRoles));
        }
        @CustomType.Setter
        public Builder requiresCommentApproval(String requiresCommentApproval) {
            if (requiresCommentApproval == null) {
              throw new MissingRequiredPropertyException("WebhookPullRequestBuildPolicy", "requiresCommentApproval");
            }
            this.requiresCommentApproval = requiresCommentApproval;
            return this;
        }
        public WebhookPullRequestBuildPolicy build() {
            final var _resultValue = new WebhookPullRequestBuildPolicy();
            _resultValue.approverRoles = approverRoles;
            _resultValue.requiresCommentApproval = requiresCommentApproval;
            return _resultValue;
        }
    }
}
