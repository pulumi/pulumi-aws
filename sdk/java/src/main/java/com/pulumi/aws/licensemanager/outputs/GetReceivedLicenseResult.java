// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.licensemanager.outputs;

import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseConsumptionConfiguration;
import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseEntitlement;
import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseIssuer;
import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseLicenseMetadata;
import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseReceivedMetadata;
import com.pulumi.aws.licensemanager.outputs.GetReceivedLicenseValidity;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReceivedLicenseResult {
    /**
     * @return Granted license beneficiary. This is in the form of the ARN of the root user of the account.
     * 
     */
    private @Nullable String beneficiary;
    /**
     * @return Configuration for consumption of the license. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseConsumptionConfiguration> consumptionConfigurations;
    /**
     * @return Creation time of the granted license in RFC 3339 format.
     * 
     */
    private @Nullable String createTime;
    /**
     * @return License entitlements. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseEntitlement> entitlements;
    /**
     * @return Home Region of the granted license.
     * 
     */
    private @Nullable String homeRegion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Granted license issuer. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseIssuer> issuers;
    /**
     * @return Amazon Resource Name (ARN) of the license.
     * 
     */
    private String licenseArn;
    /**
     * @return Granted license metadata. This is in the form of a set of all meta data. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseLicenseMetadata> licenseMetadatas;
    /**
     * @return License name.
     * 
     */
    private @Nullable String licenseName;
    /**
     * @return Product name.
     * * ` product_sku  ` - Product SKU.
     * 
     */
    private @Nullable String productName;
    private @Nullable String productSku;
    /**
     * @return Granted license received metadata. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseReceivedMetadata> receivedMetadatas;
    /**
     * @return Granted license status.
     * 
     */
    private @Nullable String status;
    /**
     * @return Date and time range during which the granted license is valid, in ISO8601-UTC format. Detailed below
     * 
     */
    private @Nullable List<GetReceivedLicenseValidity> validities;
    /**
     * @return Version of the granted license.
     * 
     */
    private @Nullable String version;

    private GetReceivedLicenseResult() {}
    /**
     * @return Granted license beneficiary. This is in the form of the ARN of the root user of the account.
     * 
     */
    public Optional<String> beneficiary() {
        return Optional.ofNullable(this.beneficiary);
    }
    /**
     * @return Configuration for consumption of the license. Detailed below
     * 
     */
    public List<GetReceivedLicenseConsumptionConfiguration> consumptionConfigurations() {
        return this.consumptionConfigurations == null ? List.of() : this.consumptionConfigurations;
    }
    /**
     * @return Creation time of the granted license in RFC 3339 format.
     * 
     */
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    /**
     * @return License entitlements. Detailed below
     * 
     */
    public List<GetReceivedLicenseEntitlement> entitlements() {
        return this.entitlements == null ? List.of() : this.entitlements;
    }
    /**
     * @return Home Region of the granted license.
     * 
     */
    public Optional<String> homeRegion() {
        return Optional.ofNullable(this.homeRegion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Granted license issuer. Detailed below
     * 
     */
    public List<GetReceivedLicenseIssuer> issuers() {
        return this.issuers == null ? List.of() : this.issuers;
    }
    /**
     * @return Amazon Resource Name (ARN) of the license.
     * 
     */
    public String licenseArn() {
        return this.licenseArn;
    }
    /**
     * @return Granted license metadata. This is in the form of a set of all meta data. Detailed below
     * 
     */
    public List<GetReceivedLicenseLicenseMetadata> licenseMetadatas() {
        return this.licenseMetadatas == null ? List.of() : this.licenseMetadatas;
    }
    /**
     * @return License name.
     * 
     */
    public Optional<String> licenseName() {
        return Optional.ofNullable(this.licenseName);
    }
    /**
     * @return Product name.
     * * ` product_sku  ` - Product SKU.
     * 
     */
    public Optional<String> productName() {
        return Optional.ofNullable(this.productName);
    }
    public Optional<String> productSku() {
        return Optional.ofNullable(this.productSku);
    }
    /**
     * @return Granted license received metadata. Detailed below
     * 
     */
    public List<GetReceivedLicenseReceivedMetadata> receivedMetadatas() {
        return this.receivedMetadatas == null ? List.of() : this.receivedMetadatas;
    }
    /**
     * @return Granted license status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Date and time range during which the granted license is valid, in ISO8601-UTC format. Detailed below
     * 
     */
    public List<GetReceivedLicenseValidity> validities() {
        return this.validities == null ? List.of() : this.validities;
    }
    /**
     * @return Version of the granted license.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReceivedLicenseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String beneficiary;
        private @Nullable List<GetReceivedLicenseConsumptionConfiguration> consumptionConfigurations;
        private @Nullable String createTime;
        private @Nullable List<GetReceivedLicenseEntitlement> entitlements;
        private @Nullable String homeRegion;
        private @Nullable String id;
        private @Nullable List<GetReceivedLicenseIssuer> issuers;
        private String licenseArn;
        private @Nullable List<GetReceivedLicenseLicenseMetadata> licenseMetadatas;
        private @Nullable String licenseName;
        private @Nullable String productName;
        private @Nullable String productSku;
        private @Nullable List<GetReceivedLicenseReceivedMetadata> receivedMetadatas;
        private @Nullable String status;
        private @Nullable List<GetReceivedLicenseValidity> validities;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetReceivedLicenseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beneficiary = defaults.beneficiary;
    	      this.consumptionConfigurations = defaults.consumptionConfigurations;
    	      this.createTime = defaults.createTime;
    	      this.entitlements = defaults.entitlements;
    	      this.homeRegion = defaults.homeRegion;
    	      this.id = defaults.id;
    	      this.issuers = defaults.issuers;
    	      this.licenseArn = defaults.licenseArn;
    	      this.licenseMetadatas = defaults.licenseMetadatas;
    	      this.licenseName = defaults.licenseName;
    	      this.productName = defaults.productName;
    	      this.productSku = defaults.productSku;
    	      this.receivedMetadatas = defaults.receivedMetadatas;
    	      this.status = defaults.status;
    	      this.validities = defaults.validities;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder beneficiary(@Nullable String beneficiary) {
            this.beneficiary = beneficiary;
            return this;
        }
        @CustomType.Setter
        public Builder consumptionConfigurations(@Nullable List<GetReceivedLicenseConsumptionConfiguration> consumptionConfigurations) {
            this.consumptionConfigurations = consumptionConfigurations;
            return this;
        }
        public Builder consumptionConfigurations(GetReceivedLicenseConsumptionConfiguration... consumptionConfigurations) {
            return consumptionConfigurations(List.of(consumptionConfigurations));
        }
        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder entitlements(@Nullable List<GetReceivedLicenseEntitlement> entitlements) {
            this.entitlements = entitlements;
            return this;
        }
        public Builder entitlements(GetReceivedLicenseEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }
        @CustomType.Setter
        public Builder homeRegion(@Nullable String homeRegion) {
            this.homeRegion = homeRegion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuers(@Nullable List<GetReceivedLicenseIssuer> issuers) {
            this.issuers = issuers;
            return this;
        }
        public Builder issuers(GetReceivedLicenseIssuer... issuers) {
            return issuers(List.of(issuers));
        }
        @CustomType.Setter
        public Builder licenseArn(String licenseArn) {
            this.licenseArn = Objects.requireNonNull(licenseArn);
            return this;
        }
        @CustomType.Setter
        public Builder licenseMetadatas(@Nullable List<GetReceivedLicenseLicenseMetadata> licenseMetadatas) {
            this.licenseMetadatas = licenseMetadatas;
            return this;
        }
        public Builder licenseMetadatas(GetReceivedLicenseLicenseMetadata... licenseMetadatas) {
            return licenseMetadatas(List.of(licenseMetadatas));
        }
        @CustomType.Setter
        public Builder licenseName(@Nullable String licenseName) {
            this.licenseName = licenseName;
            return this;
        }
        @CustomType.Setter
        public Builder productName(@Nullable String productName) {
            this.productName = productName;
            return this;
        }
        @CustomType.Setter
        public Builder productSku(@Nullable String productSku) {
            this.productSku = productSku;
            return this;
        }
        @CustomType.Setter
        public Builder receivedMetadatas(@Nullable List<GetReceivedLicenseReceivedMetadata> receivedMetadatas) {
            this.receivedMetadatas = receivedMetadatas;
            return this;
        }
        public Builder receivedMetadatas(GetReceivedLicenseReceivedMetadata... receivedMetadatas) {
            return receivedMetadatas(List.of(receivedMetadatas));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder validities(@Nullable List<GetReceivedLicenseValidity> validities) {
            this.validities = validities;
            return this;
        }
        public Builder validities(GetReceivedLicenseValidity... validities) {
            return validities(List.of(validities));
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetReceivedLicenseResult build() {
            final var o = new GetReceivedLicenseResult();
            o.beneficiary = beneficiary;
            o.consumptionConfigurations = consumptionConfigurations;
            o.createTime = createTime;
            o.entitlements = entitlements;
            o.homeRegion = homeRegion;
            o.id = id;
            o.issuers = issuers;
            o.licenseArn = licenseArn;
            o.licenseMetadatas = licenseMetadatas;
            o.licenseName = licenseName;
            o.productName = productName;
            o.productSku = productSku;
            o.receivedMetadatas = receivedMetadatas;
            o.status = status;
            o.validities = validities;
            o.version = version;
            return o;
        }
    }
}
