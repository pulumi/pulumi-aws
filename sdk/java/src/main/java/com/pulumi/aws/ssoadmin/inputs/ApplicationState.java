// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.inputs;

import com.pulumi.aws.ssoadmin.inputs.ApplicationPortalOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationState Empty = new ApplicationState();

    /**
     * AWS account ID.
     * 
     */
    @Import(name="applicationAccount")
    private @Nullable Output<String> applicationAccount;

    /**
     * @return AWS account ID.
     * 
     */
    public Optional<Output<String>> applicationAccount() {
        return Optional.ofNullable(this.applicationAccount);
    }

    /**
     * ARN of the application.
     * 
     */
    @Import(name="applicationArn")
    private @Nullable Output<String> applicationArn;

    /**
     * @return ARN of the application.
     * 
     */
    public Optional<Output<String>> applicationArn() {
        return Optional.ofNullable(this.applicationArn);
    }

    /**
     * ARN of the application provider.
     * 
     */
    @Import(name="applicationProviderArn")
    private @Nullable Output<String> applicationProviderArn;

    /**
     * @return ARN of the application provider.
     * 
     */
    public Optional<Output<String>> applicationProviderArn() {
        return Optional.ofNullable(this.applicationProviderArn);
    }

    /**
     * A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     * 
     */
    @Import(name="clientToken")
    private @Nullable Output<String> clientToken;

    /**
     * @return A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     * 
     */
    public Optional<Output<String>> clientToken() {
        return Optional.ofNullable(this.clientToken);
    }

    /**
     * Description of the application.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the application.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ARN of the instance of IAM Identity Center.
     * 
     */
    @Import(name="instanceArn")
    private @Nullable Output<String> instanceArn;

    /**
     * @return ARN of the instance of IAM Identity Center.
     * 
     */
    public Optional<Output<String>> instanceArn() {
        return Optional.ofNullable(this.instanceArn);
    }

    /**
     * Name of the application.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the application.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Options for the portal associated with an application. See `portal_options` below.
     * 
     */
    @Import(name="portalOptions")
    private @Nullable Output<ApplicationPortalOptionsArgs> portalOptions;

    /**
     * @return Options for the portal associated with an application. See `portal_options` below.
     * 
     */
    public Optional<Output<ApplicationPortalOptionsArgs>> portalOptions() {
        return Optional.ofNullable(this.portalOptions);
    }

    /**
     * Status of the application. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the application. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ApplicationState() {}

    private ApplicationState(ApplicationState $) {
        this.applicationAccount = $.applicationAccount;
        this.applicationArn = $.applicationArn;
        this.applicationProviderArn = $.applicationProviderArn;
        this.clientToken = $.clientToken;
        this.description = $.description;
        this.instanceArn = $.instanceArn;
        this.name = $.name;
        this.portalOptions = $.portalOptions;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationState $;

        public Builder() {
            $ = new ApplicationState();
        }

        public Builder(ApplicationState defaults) {
            $ = new ApplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationAccount AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationAccount(@Nullable Output<String> applicationAccount) {
            $.applicationAccount = applicationAccount;
            return this;
        }

        /**
         * @param applicationAccount AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationAccount(String applicationAccount) {
            return applicationAccount(Output.of(applicationAccount));
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(@Nullable Output<String> applicationArn) {
            $.applicationArn = applicationArn;
            return this;
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(String applicationArn) {
            return applicationArn(Output.of(applicationArn));
        }

        /**
         * @param applicationProviderArn ARN of the application provider.
         * 
         * @return builder
         * 
         */
        public Builder applicationProviderArn(@Nullable Output<String> applicationProviderArn) {
            $.applicationProviderArn = applicationProviderArn;
            return this;
        }

        /**
         * @param applicationProviderArn ARN of the application provider.
         * 
         * @return builder
         * 
         */
        public Builder applicationProviderArn(String applicationProviderArn) {
            return applicationProviderArn(Output.of(applicationProviderArn));
        }

        /**
         * @param clientToken A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
         * 
         * @return builder
         * 
         */
        public Builder clientToken(@Nullable Output<String> clientToken) {
            $.clientToken = clientToken;
            return this;
        }

        /**
         * @param clientToken A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
         * 
         * @return builder
         * 
         */
        public Builder clientToken(String clientToken) {
            return clientToken(Output.of(clientToken));
        }

        /**
         * @param description Description of the application.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the application.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceArn ARN of the instance of IAM Identity Center.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(@Nullable Output<String> instanceArn) {
            $.instanceArn = instanceArn;
            return this;
        }

        /**
         * @param instanceArn ARN of the instance of IAM Identity Center.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(String instanceArn) {
            return instanceArn(Output.of(instanceArn));
        }

        /**
         * @param name Name of the application.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the application.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param portalOptions Options for the portal associated with an application. See `portal_options` below.
         * 
         * @return builder
         * 
         */
        public Builder portalOptions(@Nullable Output<ApplicationPortalOptionsArgs> portalOptions) {
            $.portalOptions = portalOptions;
            return this;
        }

        /**
         * @param portalOptions Options for the portal associated with an application. See `portal_options` below.
         * 
         * @return builder
         * 
         */
        public Builder portalOptions(ApplicationPortalOptionsArgs portalOptions) {
            return portalOptions(Output.of(portalOptions));
        }

        /**
         * @param status Status of the application. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the application. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ApplicationState build() {
            return $;
        }
    }

}
