// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationErrorDocumentArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationIndexDocumentArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationRedirectAllRequestsToArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationRoutingRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteConfigurationArgs Empty = new BucketWebsiteConfigurationArgs();

    /**
     * Name of the bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Name of the error document for the website. See below.
     * 
     */
    @Import(name="errorDocument")
    private @Nullable Output<BucketWebsiteConfigurationErrorDocumentArgs> errorDocument;

    /**
     * @return Name of the error document for the website. See below.
     * 
     */
    public Optional<Output<BucketWebsiteConfigurationErrorDocumentArgs>> errorDocument() {
        return Optional.ofNullable(this.errorDocument);
    }

    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @Import(name="expectedBucketOwner")
    private @Nullable Output<String> expectedBucketOwner;

    /**
     * @return Account ID of the expected bucket owner.
     * 
     */
    public Optional<Output<String>> expectedBucketOwner() {
        return Optional.ofNullable(this.expectedBucketOwner);
    }

    /**
     * Name of the index document for the website. See below.
     * 
     */
    @Import(name="indexDocument")
    private @Nullable Output<BucketWebsiteConfigurationIndexDocumentArgs> indexDocument;

    /**
     * @return Name of the index document for the website. See below.
     * 
     */
    public Optional<Output<BucketWebsiteConfigurationIndexDocumentArgs>> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }

    /**
     * Redirect behavior for every request to this bucket&#39;s website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
     * 
     */
    @Import(name="redirectAllRequestsTo")
    private @Nullable Output<BucketWebsiteConfigurationRedirectAllRequestsToArgs> redirectAllRequestsTo;

    /**
     * @return Redirect behavior for every request to this bucket&#39;s website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
     * 
     */
    public Optional<Output<BucketWebsiteConfigurationRedirectAllRequestsToArgs>> redirectAllRequestsTo() {
        return Optional.ofNullable(this.redirectAllRequestsTo);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
     * describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`&#34;&#34;`) as seen in the example above.
     * 
     */
    @Import(name="routingRuleDetails")
    private @Nullable Output<String> routingRuleDetails;

    /**
     * @return JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
     * describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`&#34;&#34;`) as seen in the example above.
     * 
     */
    public Optional<Output<String>> routingRuleDetails() {
        return Optional.ofNullable(this.routingRuleDetails);
    }

    /**
     * List of rules that define when a redirect is applied and the redirect behavior. See below.
     * 
     */
    @Import(name="routingRules")
    private @Nullable Output<List<BucketWebsiteConfigurationRoutingRuleArgs>> routingRules;

    /**
     * @return List of rules that define when a redirect is applied and the redirect behavior. See below.
     * 
     */
    public Optional<Output<List<BucketWebsiteConfigurationRoutingRuleArgs>>> routingRules() {
        return Optional.ofNullable(this.routingRules);
    }

    private BucketWebsiteConfigurationArgs() {}

    private BucketWebsiteConfigurationArgs(BucketWebsiteConfigurationArgs $) {
        this.bucket = $.bucket;
        this.errorDocument = $.errorDocument;
        this.expectedBucketOwner = $.expectedBucketOwner;
        this.indexDocument = $.indexDocument;
        this.redirectAllRequestsTo = $.redirectAllRequestsTo;
        this.region = $.region;
        this.routingRuleDetails = $.routingRuleDetails;
        this.routingRules = $.routingRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteConfigurationArgs $;

        public Builder() {
            $ = new BucketWebsiteConfigurationArgs();
        }

        public Builder(BucketWebsiteConfigurationArgs defaults) {
            $ = new BucketWebsiteConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param errorDocument Name of the error document for the website. See below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(@Nullable Output<BucketWebsiteConfigurationErrorDocumentArgs> errorDocument) {
            $.errorDocument = errorDocument;
            return this;
        }

        /**
         * @param errorDocument Name of the error document for the website. See below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(BucketWebsiteConfigurationErrorDocumentArgs errorDocument) {
            return errorDocument(Output.of(errorDocument));
        }

        /**
         * @param expectedBucketOwner Account ID of the expected bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder expectedBucketOwner(@Nullable Output<String> expectedBucketOwner) {
            $.expectedBucketOwner = expectedBucketOwner;
            return this;
        }

        /**
         * @param expectedBucketOwner Account ID of the expected bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder expectedBucketOwner(String expectedBucketOwner) {
            return expectedBucketOwner(Output.of(expectedBucketOwner));
        }

        /**
         * @param indexDocument Name of the index document for the website. See below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(@Nullable Output<BucketWebsiteConfigurationIndexDocumentArgs> indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        /**
         * @param indexDocument Name of the index document for the website. See below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(BucketWebsiteConfigurationIndexDocumentArgs indexDocument) {
            return indexDocument(Output.of(indexDocument));
        }

        /**
         * @param redirectAllRequestsTo Redirect behavior for every request to this bucket&#39;s website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
         * 
         * @return builder
         * 
         */
        public Builder redirectAllRequestsTo(@Nullable Output<BucketWebsiteConfigurationRedirectAllRequestsToArgs> redirectAllRequestsTo) {
            $.redirectAllRequestsTo = redirectAllRequestsTo;
            return this;
        }

        /**
         * @param redirectAllRequestsTo Redirect behavior for every request to this bucket&#39;s website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
         * 
         * @return builder
         * 
         */
        public Builder redirectAllRequestsTo(BucketWebsiteConfigurationRedirectAllRequestsToArgs redirectAllRequestsTo) {
            return redirectAllRequestsTo(Output.of(redirectAllRequestsTo));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param routingRuleDetails JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
         * describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`&#34;&#34;`) as seen in the example above.
         * 
         * @return builder
         * 
         */
        public Builder routingRuleDetails(@Nullable Output<String> routingRuleDetails) {
            $.routingRuleDetails = routingRuleDetails;
            return this;
        }

        /**
         * @param routingRuleDetails JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
         * describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`&#34;&#34;`) as seen in the example above.
         * 
         * @return builder
         * 
         */
        public Builder routingRuleDetails(String routingRuleDetails) {
            return routingRuleDetails(Output.of(routingRuleDetails));
        }

        /**
         * @param routingRules List of rules that define when a redirect is applied and the redirect behavior. See below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(@Nullable Output<List<BucketWebsiteConfigurationRoutingRuleArgs>> routingRules) {
            $.routingRules = routingRules;
            return this;
        }

        /**
         * @param routingRules List of rules that define when a redirect is applied and the redirect behavior. See below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(List<BucketWebsiteConfigurationRoutingRuleArgs> routingRules) {
            return routingRules(Output.of(routingRules));
        }

        /**
         * @param routingRules List of rules that define when a redirect is applied and the redirect behavior. See below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(BucketWebsiteConfigurationRoutingRuleArgs... routingRules) {
            return routingRules(List.of(routingRules));
        }

        public BucketWebsiteConfigurationArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketWebsiteConfigurationArgs", "bucket");
            }
            return $;
        }
    }

}
