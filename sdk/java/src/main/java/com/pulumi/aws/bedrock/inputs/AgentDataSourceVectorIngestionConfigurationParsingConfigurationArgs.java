// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs Empty = new AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs();

    /**
     * Settings for a foundation model used to parse documents in a data source. See `bedrock_foundation_model_configuration` block for details.
     * 
     */
    @Import(name="bedrockFoundationModelConfiguration")
    private @Nullable Output<AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfigurationArgs> bedrockFoundationModelConfiguration;

    /**
     * @return Settings for a foundation model used to parse documents in a data source. See `bedrock_foundation_model_configuration` block for details.
     * 
     */
    public Optional<Output<AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfigurationArgs>> bedrockFoundationModelConfiguration() {
        return Optional.ofNullable(this.bedrockFoundationModelConfiguration);
    }

    /**
     * Currently only `BEDROCK_FOUNDATION_MODEL` is supported
     * 
     */
    @Import(name="parsingStrategy", required=true)
    private Output<String> parsingStrategy;

    /**
     * @return Currently only `BEDROCK_FOUNDATION_MODEL` is supported
     * 
     */
    public Output<String> parsingStrategy() {
        return this.parsingStrategy;
    }

    private AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs() {}

    private AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs(AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs $) {
        this.bedrockFoundationModelConfiguration = $.bedrockFoundationModelConfiguration;
        this.parsingStrategy = $.parsingStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs $;

        public Builder() {
            $ = new AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs();
        }

        public Builder(AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs defaults) {
            $ = new AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bedrockFoundationModelConfiguration Settings for a foundation model used to parse documents in a data source. See `bedrock_foundation_model_configuration` block for details.
         * 
         * @return builder
         * 
         */
        public Builder bedrockFoundationModelConfiguration(@Nullable Output<AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfigurationArgs> bedrockFoundationModelConfiguration) {
            $.bedrockFoundationModelConfiguration = bedrockFoundationModelConfiguration;
            return this;
        }

        /**
         * @param bedrockFoundationModelConfiguration Settings for a foundation model used to parse documents in a data source. See `bedrock_foundation_model_configuration` block for details.
         * 
         * @return builder
         * 
         */
        public Builder bedrockFoundationModelConfiguration(AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfigurationArgs bedrockFoundationModelConfiguration) {
            return bedrockFoundationModelConfiguration(Output.of(bedrockFoundationModelConfiguration));
        }

        /**
         * @param parsingStrategy Currently only `BEDROCK_FOUNDATION_MODEL` is supported
         * 
         * @return builder
         * 
         */
        public Builder parsingStrategy(Output<String> parsingStrategy) {
            $.parsingStrategy = parsingStrategy;
            return this;
        }

        /**
         * @param parsingStrategy Currently only `BEDROCK_FOUNDATION_MODEL` is supported
         * 
         * @return builder
         * 
         */
        public Builder parsingStrategy(String parsingStrategy) {
            return parsingStrategy(Output.of(parsingStrategy));
        }

        public AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs build() {
            if ($.parsingStrategy == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceVectorIngestionConfigurationParsingConfigurationArgs", "parsingStrategy");
            }
            return $;
        }
    }

}
