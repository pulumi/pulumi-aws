// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrcontainers.outputs;

import com.pulumi.aws.emrcontainers.outputs.GetVirtualClusterContainerProvider;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualClusterResult {
    /**
     * @return ARN of the cluster.
     * 
     */
    private String arn;
    /**
     * @return Nested attribute containing information about the underlying container provider (EKS cluster) for your EMR Containers cluster.
     * 
     */
    private List<GetVirtualClusterContainerProvider> containerProviders;
    /**
     * @return Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the cluster.
     * 
     */
    private String name;
    /**
     * @return Status of the EKS cluster. One of `RUNNING`, `TERMINATING`, `TERMINATED`, `ARRESTED`.
     * 
     */
    private String state;
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    private Map<String,String> tags;
    private String virtualClusterId;

    private GetVirtualClusterResult() {}
    /**
     * @return ARN of the cluster.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Nested attribute containing information about the underlying container provider (EKS cluster) for your EMR Containers cluster.
     * 
     */
    public List<GetVirtualClusterContainerProvider> containerProviders() {
        return this.containerProviders;
    }
    /**
     * @return Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the cluster.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Status of the EKS cluster. One of `RUNNING`, `TERMINATING`, `TERMINATED`, `ARRESTED`.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String virtualClusterId() {
        return this.virtualClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetVirtualClusterContainerProvider> containerProviders;
        private String createdAt;
        private String id;
        private String name;
        private String state;
        private Map<String,String> tags;
        private String virtualClusterId;
        public Builder() {}
        public Builder(GetVirtualClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerProviders = defaults.containerProviders;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.virtualClusterId = defaults.virtualClusterId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder containerProviders(List<GetVirtualClusterContainerProvider> containerProviders) {
            if (containerProviders == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "containerProviders");
            }
            this.containerProviders = containerProviders;
            return this;
        }
        public Builder containerProviders(GetVirtualClusterContainerProvider... containerProviders) {
            return containerProviders(List.of(containerProviders));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder virtualClusterId(String virtualClusterId) {
            if (virtualClusterId == null) {
              throw new MissingRequiredPropertyException("GetVirtualClusterResult", "virtualClusterId");
            }
            this.virtualClusterId = virtualClusterId;
            return this;
        }
        public GetVirtualClusterResult build() {
            final var _resultValue = new GetVirtualClusterResult();
            _resultValue.arn = arn;
            _resultValue.containerProviders = containerProviders;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.state = state;
            _resultValue.tags = tags;
            _resultValue.virtualClusterId = virtualClusterId;
            return _resultValue;
        }
    }
}
