// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedPrefixListEntryState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedPrefixListEntryState Empty = new ManagedPrefixListEntryState();

    /**
     * CIDR block of this entry.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return CIDR block of this entry.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * Description of this entry. Due to API limitations, updating only the description of an entry requires recreating the entry.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of this entry. Due to API limitations, updating only the description of an entry requires recreating the entry.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * CIDR block of this entry.
     * 
     */
    @Import(name="prefixListId")
    private @Nullable Output<String> prefixListId;

    /**
     * @return CIDR block of this entry.
     * 
     */
    public Optional<Output<String>> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }

    private ManagedPrefixListEntryState() {}

    private ManagedPrefixListEntryState(ManagedPrefixListEntryState $) {
        this.cidr = $.cidr;
        this.description = $.description;
        this.prefixListId = $.prefixListId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedPrefixListEntryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedPrefixListEntryState $;

        public Builder() {
            $ = new ManagedPrefixListEntryState();
        }

        public Builder(ManagedPrefixListEntryState defaults) {
            $ = new ManagedPrefixListEntryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr CIDR block of this entry.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr CIDR block of this entry.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param description Description of this entry. Due to API limitations, updating only the description of an entry requires recreating the entry.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of this entry. Due to API limitations, updating only the description of an entry requires recreating the entry.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param prefixListId CIDR block of this entry.
         * 
         * @return builder
         * 
         */
        public Builder prefixListId(@Nullable Output<String> prefixListId) {
            $.prefixListId = prefixListId;
            return this;
        }

        /**
         * @param prefixListId CIDR block of this entry.
         * 
         * @return builder
         * 
         */
        public Builder prefixListId(String prefixListId) {
            return prefixListId(Output.of(prefixListId));
        }

        public ManagedPrefixListEntryState build() {
            return $;
        }
    }

}
