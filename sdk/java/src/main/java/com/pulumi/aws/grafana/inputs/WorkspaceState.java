// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.grafana.inputs;

import com.pulumi.aws.grafana.inputs.WorkspaceVpcConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceState Empty = new WorkspaceState();

    @Import(name="accountAccessType")
    private @Nullable Output<String> accountAccessType;

    public Optional<Output<String>> accountAccessType() {
        return Optional.ofNullable(this.accountAccessType);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="authenticationProviders")
    private @Nullable Output<List<String>> authenticationProviders;

    public Optional<Output<List<String>>> authenticationProviders() {
        return Optional.ofNullable(this.authenticationProviders);
    }

    @Import(name="dataSources")
    private @Nullable Output<List<String>> dataSources;

    public Optional<Output<List<String>>> dataSources() {
        return Optional.ofNullable(this.dataSources);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    @Import(name="grafanaVersion")
    private @Nullable Output<String> grafanaVersion;

    public Optional<Output<String>> grafanaVersion() {
        return Optional.ofNullable(this.grafanaVersion);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationDestinations")
    private @Nullable Output<List<String>> notificationDestinations;

    public Optional<Output<List<String>>> notificationDestinations() {
        return Optional.ofNullable(this.notificationDestinations);
    }

    @Import(name="organizationRoleName")
    private @Nullable Output<String> organizationRoleName;

    public Optional<Output<String>> organizationRoleName() {
        return Optional.ofNullable(this.organizationRoleName);
    }

    @Import(name="organizationalUnits")
    private @Nullable Output<List<String>> organizationalUnits;

    public Optional<Output<List<String>>> organizationalUnits() {
        return Optional.ofNullable(this.organizationalUnits);
    }

    @Import(name="permissionType")
    private @Nullable Output<String> permissionType;

    public Optional<Output<String>> permissionType() {
        return Optional.ofNullable(this.permissionType);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="samlConfigurationStatus")
    private @Nullable Output<String> samlConfigurationStatus;

    public Optional<Output<String>> samlConfigurationStatus() {
        return Optional.ofNullable(this.samlConfigurationStatus);
    }

    @Import(name="stackSetName")
    private @Nullable Output<String> stackSetName;

    public Optional<Output<String>> stackSetName() {
        return Optional.ofNullable(this.stackSetName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcConfiguration")
    private @Nullable Output<WorkspaceVpcConfigurationArgs> vpcConfiguration;

    public Optional<Output<WorkspaceVpcConfigurationArgs>> vpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    private WorkspaceState() {}

    private WorkspaceState(WorkspaceState $) {
        this.accountAccessType = $.accountAccessType;
        this.arn = $.arn;
        this.authenticationProviders = $.authenticationProviders;
        this.dataSources = $.dataSources;
        this.description = $.description;
        this.endpoint = $.endpoint;
        this.grafanaVersion = $.grafanaVersion;
        this.name = $.name;
        this.notificationDestinations = $.notificationDestinations;
        this.organizationRoleName = $.organizationRoleName;
        this.organizationalUnits = $.organizationalUnits;
        this.permissionType = $.permissionType;
        this.roleArn = $.roleArn;
        this.samlConfigurationStatus = $.samlConfigurationStatus;
        this.stackSetName = $.stackSetName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceState $;

        public Builder() {
            $ = new WorkspaceState();
        }

        public Builder(WorkspaceState defaults) {
            $ = new WorkspaceState(Objects.requireNonNull(defaults));
        }

        public Builder accountAccessType(@Nullable Output<String> accountAccessType) {
            $.accountAccessType = accountAccessType;
            return this;
        }

        public Builder accountAccessType(String accountAccessType) {
            return accountAccessType(Output.of(accountAccessType));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder authenticationProviders(@Nullable Output<List<String>> authenticationProviders) {
            $.authenticationProviders = authenticationProviders;
            return this;
        }

        public Builder authenticationProviders(List<String> authenticationProviders) {
            return authenticationProviders(Output.of(authenticationProviders));
        }

        public Builder authenticationProviders(String... authenticationProviders) {
            return authenticationProviders(List.of(authenticationProviders));
        }

        public Builder dataSources(@Nullable Output<List<String>> dataSources) {
            $.dataSources = dataSources;
            return this;
        }

        public Builder dataSources(List<String> dataSources) {
            return dataSources(Output.of(dataSources));
        }

        public Builder dataSources(String... dataSources) {
            return dataSources(List.of(dataSources));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder grafanaVersion(@Nullable Output<String> grafanaVersion) {
            $.grafanaVersion = grafanaVersion;
            return this;
        }

        public Builder grafanaVersion(String grafanaVersion) {
            return grafanaVersion(Output.of(grafanaVersion));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationDestinations(@Nullable Output<List<String>> notificationDestinations) {
            $.notificationDestinations = notificationDestinations;
            return this;
        }

        public Builder notificationDestinations(List<String> notificationDestinations) {
            return notificationDestinations(Output.of(notificationDestinations));
        }

        public Builder notificationDestinations(String... notificationDestinations) {
            return notificationDestinations(List.of(notificationDestinations));
        }

        public Builder organizationRoleName(@Nullable Output<String> organizationRoleName) {
            $.organizationRoleName = organizationRoleName;
            return this;
        }

        public Builder organizationRoleName(String organizationRoleName) {
            return organizationRoleName(Output.of(organizationRoleName));
        }

        public Builder organizationalUnits(@Nullable Output<List<String>> organizationalUnits) {
            $.organizationalUnits = organizationalUnits;
            return this;
        }

        public Builder organizationalUnits(List<String> organizationalUnits) {
            return organizationalUnits(Output.of(organizationalUnits));
        }

        public Builder organizationalUnits(String... organizationalUnits) {
            return organizationalUnits(List.of(organizationalUnits));
        }

        public Builder permissionType(@Nullable Output<String> permissionType) {
            $.permissionType = permissionType;
            return this;
        }

        public Builder permissionType(String permissionType) {
            return permissionType(Output.of(permissionType));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder samlConfigurationStatus(@Nullable Output<String> samlConfigurationStatus) {
            $.samlConfigurationStatus = samlConfigurationStatus;
            return this;
        }

        public Builder samlConfigurationStatus(String samlConfigurationStatus) {
            return samlConfigurationStatus(Output.of(samlConfigurationStatus));
        }

        public Builder stackSetName(@Nullable Output<String> stackSetName) {
            $.stackSetName = stackSetName;
            return this;
        }

        public Builder stackSetName(String stackSetName) {
            return stackSetName(Output.of(stackSetName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcConfiguration(@Nullable Output<WorkspaceVpcConfigurationArgs> vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        public Builder vpcConfiguration(WorkspaceVpcConfigurationArgs vpcConfiguration) {
            return vpcConfiguration(Output.of(vpcConfiguration));
        }

        public WorkspaceState build() {
            return $;
        }
    }

}
