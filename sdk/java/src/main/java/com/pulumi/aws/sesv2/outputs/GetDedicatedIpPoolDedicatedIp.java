// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDedicatedIpPoolDedicatedIp {
    /**
     * @return IPv4 address.
     * 
     */
    private String ip;
    /**
     * @return Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
     * 
     */
    private Integer warmupPercentage;
    /**
     * @return The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
     * 
     */
    private String warmupStatus;

    private GetDedicatedIpPoolDedicatedIp() {}
    /**
     * @return IPv4 address.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
     * 
     */
    public Integer warmupPercentage() {
        return this.warmupPercentage;
    }
    /**
     * @return The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
     * 
     */
    public String warmupStatus() {
        return this.warmupStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedIpPoolDedicatedIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ip;
        private Integer warmupPercentage;
        private String warmupStatus;
        public Builder() {}
        public Builder(GetDedicatedIpPoolDedicatedIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.warmupPercentage = defaults.warmupPercentage;
    	      this.warmupStatus = defaults.warmupStatus;
        }

        @CustomType.Setter
        public Builder ip(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }
        @CustomType.Setter
        public Builder warmupPercentage(Integer warmupPercentage) {
            this.warmupPercentage = Objects.requireNonNull(warmupPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder warmupStatus(String warmupStatus) {
            this.warmupStatus = Objects.requireNonNull(warmupStatus);
            return this;
        }
        public GetDedicatedIpPoolDedicatedIp build() {
            final var _resultValue = new GetDedicatedIpPoolDedicatedIp();
            _resultValue.ip = ip;
            _resultValue.warmupPercentage = warmupPercentage;
            _resultValue.warmupStatus = warmupStatus;
            return _resultValue;
        }
    }
}
