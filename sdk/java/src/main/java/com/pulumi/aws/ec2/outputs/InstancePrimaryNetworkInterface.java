// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstancePrimaryNetworkInterface {
    /**
     * @return Whether the network interface will be deleted when the instance terminates.
     * 
     */
    private @Nullable Boolean deleteOnTermination;
    /**
     * @return ID of the network interface to attach.
     * 
     */
    private String networkInterfaceId;

    private InstancePrimaryNetworkInterface() {}
    /**
     * @return Whether the network interface will be deleted when the instance terminates.
     * 
     */
    public Optional<Boolean> deleteOnTermination() {
        return Optional.ofNullable(this.deleteOnTermination);
    }
    /**
     * @return ID of the network interface to attach.
     * 
     */
    public String networkInterfaceId() {
        return this.networkInterfaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePrimaryNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deleteOnTermination;
        private String networkInterfaceId;
        public Builder() {}
        public Builder(InstancePrimaryNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnTermination = defaults.deleteOnTermination;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
        }

        @CustomType.Setter
        public Builder deleteOnTermination(@Nullable Boolean deleteOnTermination) {

            this.deleteOnTermination = deleteOnTermination;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceId(String networkInterfaceId) {
            if (networkInterfaceId == null) {
              throw new MissingRequiredPropertyException("InstancePrimaryNetworkInterface", "networkInterfaceId");
            }
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        public InstancePrimaryNetworkInterface build() {
            final var _resultValue = new InstancePrimaryNetworkInterface();
            _resultValue.deleteOnTermination = deleteOnTermination;
            _resultValue.networkInterfaceId = networkInterfaceId;
            return _resultValue;
        }
    }
}
