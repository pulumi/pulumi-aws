// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessGrantsInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final AccessGrantsInstanceState Empty = new AccessGrantsInstanceState();

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants instance.
     * 
     */
    @Import(name="accessGrantsInstanceArn")
    private @Nullable Output<String> accessGrantsInstanceArn;

    /**
     * @return Amazon Resource Name (ARN) of the S3 Access Grants instance.
     * 
     */
    public Optional<Output<String>> accessGrantsInstanceArn() {
        return Optional.ofNullable(this.accessGrantsInstanceArn);
    }

    /**
     * Unique ID of the S3 Access Grants instance.
     * 
     */
    @Import(name="accessGrantsInstanceId")
    private @Nullable Output<String> accessGrantsInstanceId;

    /**
     * @return Unique ID of the S3 Access Grants instance.
     * 
     */
    public Optional<Output<String>> accessGrantsInstanceId() {
        return Optional.ofNullable(this.accessGrantsInstanceId);
    }

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
     * 
     */
    @Import(name="identityCenterApplicationArn")
    private @Nullable Output<String> identityCenterApplicationArn;

    /**
     * @return The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
     * 
     */
    public Optional<Output<String>> identityCenterApplicationArn() {
        return Optional.ofNullable(this.identityCenterApplicationArn);
    }

    /**
     * The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     * 
     */
    @Import(name="identityCenterArn")
    private @Nullable Output<String> identityCenterArn;

    /**
     * @return The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     * 
     */
    public Optional<Output<String>> identityCenterArn() {
        return Optional.ofNullable(this.identityCenterArn);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private AccessGrantsInstanceState() {}

    private AccessGrantsInstanceState(AccessGrantsInstanceState $) {
        this.accessGrantsInstanceArn = $.accessGrantsInstanceArn;
        this.accessGrantsInstanceId = $.accessGrantsInstanceId;
        this.accountId = $.accountId;
        this.identityCenterApplicationArn = $.identityCenterApplicationArn;
        this.identityCenterArn = $.identityCenterArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessGrantsInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessGrantsInstanceState $;

        public Builder() {
            $ = new AccessGrantsInstanceState();
        }

        public Builder(AccessGrantsInstanceState defaults) {
            $ = new AccessGrantsInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessGrantsInstanceArn Amazon Resource Name (ARN) of the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsInstanceArn(@Nullable Output<String> accessGrantsInstanceArn) {
            $.accessGrantsInstanceArn = accessGrantsInstanceArn;
            return this;
        }

        /**
         * @param accessGrantsInstanceArn Amazon Resource Name (ARN) of the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsInstanceArn(String accessGrantsInstanceArn) {
            return accessGrantsInstanceArn(Output.of(accessGrantsInstanceArn));
        }

        /**
         * @param accessGrantsInstanceId Unique ID of the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsInstanceId(@Nullable Output<String> accessGrantsInstanceId) {
            $.accessGrantsInstanceId = accessGrantsInstanceId;
            return this;
        }

        /**
         * @param accessGrantsInstanceId Unique ID of the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsInstanceId(String accessGrantsInstanceId) {
            return accessGrantsInstanceId(Output.of(accessGrantsInstanceId));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param identityCenterApplicationArn The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterApplicationArn(@Nullable Output<String> identityCenterApplicationArn) {
            $.identityCenterApplicationArn = identityCenterApplicationArn;
            return this;
        }

        /**
         * @param identityCenterApplicationArn The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterApplicationArn(String identityCenterApplicationArn) {
            return identityCenterApplicationArn(Output.of(identityCenterApplicationArn));
        }

        /**
         * @param identityCenterArn The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterArn(@Nullable Output<String> identityCenterArn) {
            $.identityCenterArn = identityCenterArn;
            return this;
        }

        /**
         * @param identityCenterArn The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterArn(String identityCenterArn) {
            return identityCenterArn(Output.of(identityCenterArn));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public AccessGrantsInstanceState build() {
            return $;
        }
    }

}
