// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.qbusiness;

import com.pulumi.aws.qbusiness.inputs.ApplicationAttachmentsConfigurationArgs;
import com.pulumi.aws.qbusiness.inputs.ApplicationEncryptionConfigurationArgs;
import com.pulumi.aws.qbusiness.inputs.ApplicationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    /**
     * Information about whether file upload functionality is activated or deactivated for your end user. See `attachments_configuration` below.
     * 
     */
    @Import(name="attachmentsConfiguration")
    private @Nullable Output<ApplicationAttachmentsConfigurationArgs> attachmentsConfiguration;

    /**
     * @return Information about whether file upload functionality is activated or deactivated for your end user. See `attachments_configuration` below.
     * 
     */
    public Optional<Output<ApplicationAttachmentsConfigurationArgs>> attachmentsConfiguration() {
        return Optional.ofNullable(this.attachmentsConfiguration);
    }

    /**
     * Description of the Amazon Q application.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Amazon Q application.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the Amazon Q application.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Name of the Amazon Q application.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Information about encryption configuration. See `encryption_configuration` below.
     * 
     */
    @Import(name="encryptionConfiguration")
    private @Nullable Output<ApplicationEncryptionConfigurationArgs> encryptionConfiguration;

    /**
     * @return Information about encryption configuration. See `encryption_configuration` below.
     * 
     */
    public Optional<Output<ApplicationEncryptionConfigurationArgs>> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    /**
     * ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
     * 
     */
    @Import(name="iamServiceRoleArn", required=true)
    private Output<String> iamServiceRoleArn;

    /**
     * @return ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
     * 
     */
    public Output<String> iamServiceRoleArn() {
        return this.iamServiceRoleArn;
    }

    /**
     * ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="identityCenterInstanceArn", required=true)
    private Output<String> identityCenterInstanceArn;

    /**
     * @return ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> identityCenterInstanceArn() {
        return this.identityCenterInstanceArn;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<ApplicationTimeoutsArgs> timeouts;

    public Optional<Output<ApplicationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ApplicationArgs() {}

    private ApplicationArgs(ApplicationArgs $) {
        this.attachmentsConfiguration = $.attachmentsConfiguration;
        this.description = $.description;
        this.displayName = $.displayName;
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.iamServiceRoleArn = $.iamServiceRoleArn;
        this.identityCenterInstanceArn = $.identityCenterInstanceArn;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationArgs $;

        public Builder() {
            $ = new ApplicationArgs();
        }

        public Builder(ApplicationArgs defaults) {
            $ = new ApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachmentsConfiguration Information about whether file upload functionality is activated or deactivated for your end user. See `attachments_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder attachmentsConfiguration(@Nullable Output<ApplicationAttachmentsConfigurationArgs> attachmentsConfiguration) {
            $.attachmentsConfiguration = attachmentsConfiguration;
            return this;
        }

        /**
         * @param attachmentsConfiguration Information about whether file upload functionality is activated or deactivated for your end user. See `attachments_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder attachmentsConfiguration(ApplicationAttachmentsConfigurationArgs attachmentsConfiguration) {
            return attachmentsConfiguration(Output.of(attachmentsConfiguration));
        }

        /**
         * @param description Description of the Amazon Q application.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Amazon Q application.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Name of the Amazon Q application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Name of the Amazon Q application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param encryptionConfiguration Information about encryption configuration. See `encryption_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(@Nullable Output<ApplicationEncryptionConfigurationArgs> encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        /**
         * @param encryptionConfiguration Information about encryption configuration. See `encryption_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(ApplicationEncryptionConfigurationArgs encryptionConfiguration) {
            return encryptionConfiguration(Output.of(encryptionConfiguration));
        }

        /**
         * @param iamServiceRoleArn ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
         * 
         * @return builder
         * 
         */
        public Builder iamServiceRoleArn(Output<String> iamServiceRoleArn) {
            $.iamServiceRoleArn = iamServiceRoleArn;
            return this;
        }

        /**
         * @param iamServiceRoleArn ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
         * 
         * @return builder
         * 
         */
        public Builder iamServiceRoleArn(String iamServiceRoleArn) {
            return iamServiceRoleArn(Output.of(iamServiceRoleArn));
        }

        /**
         * @param identityCenterInstanceArn ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder identityCenterInstanceArn(Output<String> identityCenterInstanceArn) {
            $.identityCenterInstanceArn = identityCenterInstanceArn;
            return this;
        }

        /**
         * @param identityCenterInstanceArn ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder identityCenterInstanceArn(String identityCenterInstanceArn) {
            return identityCenterInstanceArn(Output.of(identityCenterInstanceArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<ApplicationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ApplicationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ApplicationArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "displayName");
            }
            if ($.iamServiceRoleArn == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "iamServiceRoleArn");
            }
            if ($.identityCenterInstanceArn == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "identityCenterInstanceArn");
            }
            return $;
        }
    }

}
