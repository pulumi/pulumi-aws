// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.aws.lightsail.inputs.ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ContainerServiceDeploymentVersionPublicEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServiceDeploymentVersionPublicEndpointArgs Empty = new ContainerServiceDeploymentVersionPublicEndpointArgs();

    /**
     * The name of the container for the endpoint.
     * 
     */
    @Import(name="containerName", required=true)
    private Output<String> containerName;

    /**
     * @return The name of the container for the endpoint.
     * 
     */
    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * The port of the container to which traffic is forwarded to.
     * 
     */
    @Import(name="containerPort", required=true)
    private Output<Integer> containerPort;

    /**
     * @return The port of the container to which traffic is forwarded to.
     * 
     */
    public Output<Integer> containerPort() {
        return this.containerPort;
    }

    /**
     * A configuration block that describes the health check configuration of the container. Detailed below.
     * 
     */
    @Import(name="healthCheck", required=true)
    private Output<ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs> healthCheck;

    /**
     * @return A configuration block that describes the health check configuration of the container. Detailed below.
     * 
     */
    public Output<ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs> healthCheck() {
        return this.healthCheck;
    }

    private ContainerServiceDeploymentVersionPublicEndpointArgs() {}

    private ContainerServiceDeploymentVersionPublicEndpointArgs(ContainerServiceDeploymentVersionPublicEndpointArgs $) {
        this.containerName = $.containerName;
        this.containerPort = $.containerPort;
        this.healthCheck = $.healthCheck;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceDeploymentVersionPublicEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceDeploymentVersionPublicEndpointArgs $;

        public Builder() {
            $ = new ContainerServiceDeploymentVersionPublicEndpointArgs();
        }

        public Builder(ContainerServiceDeploymentVersionPublicEndpointArgs defaults) {
            $ = new ContainerServiceDeploymentVersionPublicEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerName The name of the container for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param containerName The name of the container for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        /**
         * @param containerPort The port of the container to which traffic is forwarded to.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(Output<Integer> containerPort) {
            $.containerPort = containerPort;
            return this;
        }

        /**
         * @param containerPort The port of the container to which traffic is forwarded to.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(Integer containerPort) {
            return containerPort(Output.of(containerPort));
        }

        /**
         * @param healthCheck A configuration block that describes the health check configuration of the container. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(Output<ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        /**
         * @param healthCheck A configuration block that describes the health check configuration of the container. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        public ContainerServiceDeploymentVersionPublicEndpointArgs build() {
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            $.containerPort = Objects.requireNonNull($.containerPort, "expected parameter 'containerPort' to be non-null");
            $.healthCheck = Objects.requireNonNull($.healthCheck, "expected parameter 'healthCheck' to be non-null");
            return $;
        }
    }

}
