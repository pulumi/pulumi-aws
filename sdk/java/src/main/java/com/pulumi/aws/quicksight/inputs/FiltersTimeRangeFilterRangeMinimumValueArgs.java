// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.FiltersTimeRangeFilterRangeMinimumValueRollingDateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FiltersTimeRangeFilterRangeMinimumValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final FiltersTimeRangeFilterRangeMinimumValueArgs Empty = new FiltersTimeRangeFilterRangeMinimumValueArgs();

    @Import(name="parameter")
    private @Nullable Output<String> parameter;

    public Optional<Output<String>> parameter() {
        return Optional.ofNullable(this.parameter);
    }

    @Import(name="rollingDate")
    private @Nullable Output<FiltersTimeRangeFilterRangeMinimumValueRollingDateArgs> rollingDate;

    public Optional<Output<FiltersTimeRangeFilterRangeMinimumValueRollingDateArgs>> rollingDate() {
        return Optional.ofNullable(this.rollingDate);
    }

    @Import(name="staticValue")
    private @Nullable Output<String> staticValue;

    public Optional<Output<String>> staticValue() {
        return Optional.ofNullable(this.staticValue);
    }

    private FiltersTimeRangeFilterRangeMinimumValueArgs() {}

    private FiltersTimeRangeFilterRangeMinimumValueArgs(FiltersTimeRangeFilterRangeMinimumValueArgs $) {
        this.parameter = $.parameter;
        this.rollingDate = $.rollingDate;
        this.staticValue = $.staticValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FiltersTimeRangeFilterRangeMinimumValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FiltersTimeRangeFilterRangeMinimumValueArgs $;

        public Builder() {
            $ = new FiltersTimeRangeFilterRangeMinimumValueArgs();
        }

        public Builder(FiltersTimeRangeFilterRangeMinimumValueArgs defaults) {
            $ = new FiltersTimeRangeFilterRangeMinimumValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder parameter(@Nullable Output<String> parameter) {
            $.parameter = parameter;
            return this;
        }

        public Builder parameter(String parameter) {
            return parameter(Output.of(parameter));
        }

        public Builder rollingDate(@Nullable Output<FiltersTimeRangeFilterRangeMinimumValueRollingDateArgs> rollingDate) {
            $.rollingDate = rollingDate;
            return this;
        }

        public Builder rollingDate(FiltersTimeRangeFilterRangeMinimumValueRollingDateArgs rollingDate) {
            return rollingDate(Output.of(rollingDate));
        }

        public Builder staticValue(@Nullable Output<String> staticValue) {
            $.staticValue = staticValue;
            return this;
        }

        public Builder staticValue(String staticValue) {
            return staticValue(Output.of(staticValue));
        }

        public FiltersTimeRangeFilterRangeMinimumValueArgs build() {
            return $;
        }
    }

}
