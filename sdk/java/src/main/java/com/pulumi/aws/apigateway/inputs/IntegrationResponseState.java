// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationResponseState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationResponseState Empty = new IntegrationResponseState();

    @Import(name="contentHandling")
    private @Nullable Output<String> contentHandling;

    public Optional<Output<String>> contentHandling() {
        return Optional.ofNullable(this.contentHandling);
    }

    @Import(name="httpMethod")
    private @Nullable Output<String> httpMethod;

    public Optional<Output<String>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    @Import(name="responseParameters")
    private @Nullable Output<Map<String,String>> responseParameters;

    public Optional<Output<Map<String,String>>> responseParameters() {
        return Optional.ofNullable(this.responseParameters);
    }

    @Import(name="responseTemplates")
    private @Nullable Output<Map<String,String>> responseTemplates;

    public Optional<Output<Map<String,String>>> responseTemplates() {
        return Optional.ofNullable(this.responseTemplates);
    }

    @Import(name="restApi")
    private @Nullable Output<String> restApi;

    public Optional<Output<String>> restApi() {
        return Optional.ofNullable(this.restApi);
    }

    @Import(name="selectionPattern")
    private @Nullable Output<String> selectionPattern;

    public Optional<Output<String>> selectionPattern() {
        return Optional.ofNullable(this.selectionPattern);
    }

    @Import(name="statusCode")
    private @Nullable Output<String> statusCode;

    public Optional<Output<String>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    private IntegrationResponseState() {}

    private IntegrationResponseState(IntegrationResponseState $) {
        this.contentHandling = $.contentHandling;
        this.httpMethod = $.httpMethod;
        this.resourceId = $.resourceId;
        this.responseParameters = $.responseParameters;
        this.responseTemplates = $.responseTemplates;
        this.restApi = $.restApi;
        this.selectionPattern = $.selectionPattern;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationResponseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationResponseState $;

        public Builder() {
            $ = new IntegrationResponseState();
        }

        public Builder(IntegrationResponseState defaults) {
            $ = new IntegrationResponseState(Objects.requireNonNull(defaults));
        }

        public Builder contentHandling(@Nullable Output<String> contentHandling) {
            $.contentHandling = contentHandling;
            return this;
        }

        public Builder contentHandling(String contentHandling) {
            return contentHandling(Output.of(contentHandling));
        }

        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public Builder responseParameters(@Nullable Output<Map<String,String>> responseParameters) {
            $.responseParameters = responseParameters;
            return this;
        }

        public Builder responseParameters(Map<String,String> responseParameters) {
            return responseParameters(Output.of(responseParameters));
        }

        public Builder responseTemplates(@Nullable Output<Map<String,String>> responseTemplates) {
            $.responseTemplates = responseTemplates;
            return this;
        }

        public Builder responseTemplates(Map<String,String> responseTemplates) {
            return responseTemplates(Output.of(responseTemplates));
        }

        public Builder restApi(@Nullable Output<String> restApi) {
            $.restApi = restApi;
            return this;
        }

        public Builder restApi(String restApi) {
            return restApi(Output.of(restApi));
        }

        public Builder selectionPattern(@Nullable Output<String> selectionPattern) {
            $.selectionPattern = selectionPattern;
            return this;
        }

        public Builder selectionPattern(String selectionPattern) {
            return selectionPattern(Output.of(selectionPattern));
        }

        public Builder statusCode(@Nullable Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public IntegrationResponseState build() {
            return $;
        }
    }

}
