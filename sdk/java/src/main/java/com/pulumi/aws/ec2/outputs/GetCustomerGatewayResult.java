// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetCustomerGatewayFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomerGatewayResult {
    /**
     * @return ARN of the customer gateway.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Gateway&#39;s Border Gateway Protocol (BGP) Autonomous System Number (ASN).
     * 
     */
    private @Nullable Integer bgpAsn;
    /**
     * @return ARN for the customer gateway certificate.
     * 
     */
    private @Nullable String certificateArn;
    /**
     * @return Name for the customer gateway device.
     * 
     */
    private @Nullable String deviceName;
    private @Nullable List<GetCustomerGatewayFilter> filters;
    private @Nullable String id;
    /**
     * @return IP address of the gateway&#39;s Internet-routable external interface.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return Map of key-value pairs assigned to the gateway.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of customer gateway. The only type AWS supports at this time is &#34;ipsec.1&#34;.
     * 
     */
    private @Nullable String type;

    private GetCustomerGatewayResult() {}
    /**
     * @return ARN of the customer gateway.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Gateway&#39;s Border Gateway Protocol (BGP) Autonomous System Number (ASN).
     * 
     */
    public Optional<Integer> bgpAsn() {
        return Optional.ofNullable(this.bgpAsn);
    }
    /**
     * @return ARN for the customer gateway certificate.
     * 
     */
    public Optional<String> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }
    /**
     * @return Name for the customer gateway device.
     * 
     */
    public Optional<String> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }
    public List<GetCustomerGatewayFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return IP address of the gateway&#39;s Internet-routable external interface.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Map of key-value pairs assigned to the gateway.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of customer gateway. The only type AWS supports at this time is &#34;ipsec.1&#34;.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomerGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Integer bgpAsn;
        private @Nullable String certificateArn;
        private @Nullable String deviceName;
        private @Nullable List<GetCustomerGatewayFilter> filters;
        private @Nullable String id;
        private @Nullable String ipAddress;
        private @Nullable Map<String,String> tags;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetCustomerGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.bgpAsn = defaults.bgpAsn;
    	      this.certificateArn = defaults.certificateArn;
    	      this.deviceName = defaults.deviceName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder bgpAsn(@Nullable Integer bgpAsn) {
            this.bgpAsn = bgpAsn;
            return this;
        }
        @CustomType.Setter
        public Builder certificateArn(@Nullable String certificateArn) {
            this.certificateArn = certificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder deviceName(@Nullable String deviceName) {
            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetCustomerGatewayFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetCustomerGatewayFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetCustomerGatewayResult build() {
            final var o = new GetCustomerGatewayResult();
            o.arn = arn;
            o.bgpAsn = bgpAsn;
            o.certificateArn = certificateArn;
            o.deviceName = deviceName;
            o.filters = filters;
            o.id = id;
            o.ipAddress = ipAddress;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
