// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.inputs;

import com.pulumi.aws.batch.inputs.ComputeEnvironmentComputeResourcesArgs;
import com.pulumi.aws.batch.inputs.ComputeEnvironmentEksConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComputeEnvironmentState extends com.pulumi.resources.ResourceArgs {

    public static final ComputeEnvironmentState Empty = new ComputeEnvironmentState();

    /**
     * The Amazon Resource Name (ARN) of the compute environment.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the compute environment.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, the provider will assign a random, unique name.
     * 
     */
    @Import(name="computeEnvironmentName")
    private @Nullable Output<String> computeEnvironmentName;

    /**
     * @return The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, the provider will assign a random, unique name.
     * 
     */
    public Optional<Output<String>> computeEnvironmentName() {
        return Optional.ofNullable(this.computeEnvironmentName);
    }

    /**
     * Creates a unique compute environment name beginning with the specified prefix. Conflicts with `compute_environment_name`.
     * 
     */
    @Import(name="computeEnvironmentNamePrefix")
    private @Nullable Output<String> computeEnvironmentNamePrefix;

    /**
     * @return Creates a unique compute environment name beginning with the specified prefix. Conflicts with `compute_environment_name`.
     * 
     */
    public Optional<Output<String>> computeEnvironmentNamePrefix() {
        return Optional.ofNullable(this.computeEnvironmentNamePrefix);
    }

    /**
     * Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
     * 
     */
    @Import(name="computeResources")
    private @Nullable Output<ComputeEnvironmentComputeResourcesArgs> computeResources;

    /**
     * @return Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
     * 
     */
    public Optional<Output<ComputeEnvironmentComputeResourcesArgs>> computeResources() {
        return Optional.ofNullable(this.computeResources);
    }

    /**
     * The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
     * 
     */
    @Import(name="ecsClusterArn")
    private @Nullable Output<String> ecsClusterArn;

    /**
     * @return The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
     * 
     */
    public Optional<Output<String>> ecsClusterArn() {
        return Optional.ofNullable(this.ecsClusterArn);
    }

    /**
     * Details for the Amazon EKS cluster that supports the compute environment. See details below.
     * 
     */
    @Import(name="eksConfiguration")
    private @Nullable Output<ComputeEnvironmentEksConfigurationArgs> eksConfiguration;

    /**
     * @return Details for the Amazon EKS cluster that supports the compute environment. See details below.
     * 
     */
    public Optional<Output<ComputeEnvironmentEksConfigurationArgs>> eksConfiguration() {
        return Optional.ofNullable(this.eksConfiguration);
    }

    /**
     * The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     * 
     */
    @Import(name="serviceRole")
    private @Nullable Output<String> serviceRole;

    /**
     * @return The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     * 
     */
    public Optional<Output<String>> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }

    /**
     * The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The current status of the compute environment (for example, CREATING or VALID).
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the compute environment (for example, CREATING or VALID).
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A short, human-readable string to provide additional details about the current status of the compute environment.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return A short, human-readable string to provide additional details about the current status of the compute environment.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The type of the compute environment. Valid items are `MANAGED` or `UNMANAGED`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the compute environment. Valid items are `MANAGED` or `UNMANAGED`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ComputeEnvironmentState() {}

    private ComputeEnvironmentState(ComputeEnvironmentState $) {
        this.arn = $.arn;
        this.computeEnvironmentName = $.computeEnvironmentName;
        this.computeEnvironmentNamePrefix = $.computeEnvironmentNamePrefix;
        this.computeResources = $.computeResources;
        this.ecsClusterArn = $.ecsClusterArn;
        this.eksConfiguration = $.eksConfiguration;
        this.serviceRole = $.serviceRole;
        this.state = $.state;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeEnvironmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeEnvironmentState $;

        public Builder() {
            $ = new ComputeEnvironmentState();
        }

        public Builder(ComputeEnvironmentState defaults) {
            $ = new ComputeEnvironmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param computeEnvironmentName The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, the provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder computeEnvironmentName(@Nullable Output<String> computeEnvironmentName) {
            $.computeEnvironmentName = computeEnvironmentName;
            return this;
        }

        /**
         * @param computeEnvironmentName The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, the provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder computeEnvironmentName(String computeEnvironmentName) {
            return computeEnvironmentName(Output.of(computeEnvironmentName));
        }

        /**
         * @param computeEnvironmentNamePrefix Creates a unique compute environment name beginning with the specified prefix. Conflicts with `compute_environment_name`.
         * 
         * @return builder
         * 
         */
        public Builder computeEnvironmentNamePrefix(@Nullable Output<String> computeEnvironmentNamePrefix) {
            $.computeEnvironmentNamePrefix = computeEnvironmentNamePrefix;
            return this;
        }

        /**
         * @param computeEnvironmentNamePrefix Creates a unique compute environment name beginning with the specified prefix. Conflicts with `compute_environment_name`.
         * 
         * @return builder
         * 
         */
        public Builder computeEnvironmentNamePrefix(String computeEnvironmentNamePrefix) {
            return computeEnvironmentNamePrefix(Output.of(computeEnvironmentNamePrefix));
        }

        /**
         * @param computeResources Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
         * 
         * @return builder
         * 
         */
        public Builder computeResources(@Nullable Output<ComputeEnvironmentComputeResourcesArgs> computeResources) {
            $.computeResources = computeResources;
            return this;
        }

        /**
         * @param computeResources Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
         * 
         * @return builder
         * 
         */
        public Builder computeResources(ComputeEnvironmentComputeResourcesArgs computeResources) {
            return computeResources(Output.of(computeResources));
        }

        /**
         * @param ecsClusterArn The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder ecsClusterArn(@Nullable Output<String> ecsClusterArn) {
            $.ecsClusterArn = ecsClusterArn;
            return this;
        }

        /**
         * @param ecsClusterArn The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder ecsClusterArn(String ecsClusterArn) {
            return ecsClusterArn(Output.of(ecsClusterArn));
        }

        /**
         * @param eksConfiguration Details for the Amazon EKS cluster that supports the compute environment. See details below.
         * 
         * @return builder
         * 
         */
        public Builder eksConfiguration(@Nullable Output<ComputeEnvironmentEksConfigurationArgs> eksConfiguration) {
            $.eksConfiguration = eksConfiguration;
            return this;
        }

        /**
         * @param eksConfiguration Details for the Amazon EKS cluster that supports the compute environment. See details below.
         * 
         * @return builder
         * 
         */
        public Builder eksConfiguration(ComputeEnvironmentEksConfigurationArgs eksConfiguration) {
            return eksConfiguration(Output.of(eksConfiguration));
        }

        /**
         * @param serviceRole The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder serviceRole(@Nullable Output<String> serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        /**
         * @param serviceRole The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder serviceRole(String serviceRole) {
            return serviceRole(Output.of(serviceRole));
        }

        /**
         * @param state The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status The current status of the compute environment (for example, CREATING or VALID).
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the compute environment (for example, CREATING or VALID).
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason A short, human-readable string to provide additional details about the current status of the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason A short, human-readable string to provide additional details about the current status of the compute environment.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param type The type of the compute environment. Valid items are `MANAGED` or `UNMANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the compute environment. Valid items are `MANAGED` or `UNMANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ComputeEnvironmentState build() {
            return $;
        }
    }

}
