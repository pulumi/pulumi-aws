// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc.outputs;

import com.pulumi.aws.vpc.outputs.GetSecurityGroupRuleFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityGroupRuleResult {
    /**
     * @return The Amazon Resource Name (ARN) of the security group rule.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The destination IPv4 CIDR range.
     * 
     */
    private @Nullable String cidrIpv4;
    /**
     * @return The destination IPv6 CIDR range.
     * 
     */
    private @Nullable String cidrIpv6;
    /**
     * @return The security group rule description.
     * 
     */
    private @Nullable String description;
    private @Nullable List<GetSecurityGroupRuleFilter> filters;
    /**
     * @return The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
     * 
     */
    private @Nullable Integer fromPort;
    private @Nullable String id;
    /**
     * @return The IP protocol name or number. Use `-1` to specify all protocols.
     * 
     */
    private @Nullable String ipProtocol;
    /**
     * @return Indicates whether the security group rule is an outbound rule.
     * 
     */
    private @Nullable Boolean isEgress;
    /**
     * @return The ID of the destination prefix list.
     * 
     */
    private @Nullable String prefixListId;
    /**
     * @return The destination security group that is referenced in the rule.
     * 
     */
    private @Nullable String referencedSecurityGroupId;
    /**
     * @return The ID of the security group.
     * 
     */
    private @Nullable String securityGroupId;
    private @Nullable String securityGroupRuleId;
    /**
     * @return A map of tags assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
     * 
     */
    private @Nullable Integer toPort;

    private GetSecurityGroupRuleResult() {}
    /**
     * @return The Amazon Resource Name (ARN) of the security group rule.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The destination IPv4 CIDR range.
     * 
     */
    public Optional<String> cidrIpv4() {
        return Optional.ofNullable(this.cidrIpv4);
    }
    /**
     * @return The destination IPv6 CIDR range.
     * 
     */
    public Optional<String> cidrIpv6() {
        return Optional.ofNullable(this.cidrIpv6);
    }
    /**
     * @return The security group rule description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<GetSecurityGroupRuleFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
     * 
     */
    public Optional<Integer> fromPort() {
        return Optional.ofNullable(this.fromPort);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The IP protocol name or number. Use `-1` to specify all protocols.
     * 
     */
    public Optional<String> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }
    /**
     * @return Indicates whether the security group rule is an outbound rule.
     * 
     */
    public Optional<Boolean> isEgress() {
        return Optional.ofNullable(this.isEgress);
    }
    /**
     * @return The ID of the destination prefix list.
     * 
     */
    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }
    /**
     * @return The destination security group that is referenced in the rule.
     * 
     */
    public Optional<String> referencedSecurityGroupId() {
        return Optional.ofNullable(this.referencedSecurityGroupId);
    }
    /**
     * @return The ID of the security group.
     * 
     */
    public Optional<String> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }
    public Optional<String> securityGroupRuleId() {
        return Optional.ofNullable(this.securityGroupRuleId);
    }
    /**
     * @return A map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
     * 
     */
    public Optional<Integer> toPort() {
        return Optional.ofNullable(this.toPort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityGroupRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String cidrIpv4;
        private @Nullable String cidrIpv6;
        private @Nullable String description;
        private @Nullable List<GetSecurityGroupRuleFilter> filters;
        private @Nullable Integer fromPort;
        private @Nullable String id;
        private @Nullable String ipProtocol;
        private @Nullable Boolean isEgress;
        private @Nullable String prefixListId;
        private @Nullable String referencedSecurityGroupId;
        private @Nullable String securityGroupId;
        private @Nullable String securityGroupRuleId;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer toPort;
        public Builder() {}
        public Builder(GetSecurityGroupRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cidrIpv4 = defaults.cidrIpv4;
    	      this.cidrIpv6 = defaults.cidrIpv6;
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.fromPort = defaults.fromPort;
    	      this.id = defaults.id;
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.isEgress = defaults.isEgress;
    	      this.prefixListId = defaults.prefixListId;
    	      this.referencedSecurityGroupId = defaults.referencedSecurityGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.securityGroupRuleId = defaults.securityGroupRuleId;
    	      this.tags = defaults.tags;
    	      this.toPort = defaults.toPort;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder cidrIpv4(@Nullable String cidrIpv4) {
            this.cidrIpv4 = cidrIpv4;
            return this;
        }
        @CustomType.Setter
        public Builder cidrIpv6(@Nullable String cidrIpv6) {
            this.cidrIpv6 = cidrIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityGroupRuleFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityGroupRuleFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fromPort(@Nullable Integer fromPort) {
            this.fromPort = fromPort;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipProtocol(@Nullable String ipProtocol) {
            this.ipProtocol = ipProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder isEgress(@Nullable Boolean isEgress) {
            this.isEgress = isEgress;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(@Nullable String prefixListId) {
            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder referencedSecurityGroupId(@Nullable String referencedSecurityGroupId) {
            this.referencedSecurityGroupId = referencedSecurityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(@Nullable String securityGroupId) {
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupRuleId(@Nullable String securityGroupRuleId) {
            this.securityGroupRuleId = securityGroupRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder toPort(@Nullable Integer toPort) {
            this.toPort = toPort;
            return this;
        }
        public GetSecurityGroupRuleResult build() {
            final var o = new GetSecurityGroupRuleResult();
            o.arn = arn;
            o.cidrIpv4 = cidrIpv4;
            o.cidrIpv6 = cidrIpv6;
            o.description = description;
            o.filters = filters;
            o.fromPort = fromPort;
            o.id = id;
            o.ipProtocol = ipProtocol;
            o.isEgress = isEgress;
            o.prefixListId = prefixListId;
            o.referencedSecurityGroupId = referencedSecurityGroupId;
            o.securityGroupId = securityGroupId;
            o.securityGroupRuleId = securityGroupRuleId;
            o.tags = tags;
            o.toPort = toPort;
            return o;
        }
    }
}
