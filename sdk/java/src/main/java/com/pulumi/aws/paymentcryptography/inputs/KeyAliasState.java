// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.paymentcryptography.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyAliasState extends com.pulumi.resources.ResourceArgs {

    public static final KeyAliasState Empty = new KeyAliasState();

    /**
     * Name of the Key Alias.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="aliasName")
    private @Nullable Output<String> aliasName;

    /**
     * @return Name of the Key Alias.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> aliasName() {
        return Optional.ofNullable(this.aliasName);
    }

    /**
     * ARN of the key.
     * 
     */
    @Import(name="keyArn")
    private @Nullable Output<String> keyArn;

    /**
     * @return ARN of the key.
     * 
     */
    public Optional<Output<String>> keyArn() {
        return Optional.ofNullable(this.keyArn);
    }

    private KeyAliasState() {}

    private KeyAliasState(KeyAliasState $) {
        this.aliasName = $.aliasName;
        this.keyArn = $.keyArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyAliasState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyAliasState $;

        public Builder() {
            $ = new KeyAliasState();
        }

        public Builder(KeyAliasState defaults) {
            $ = new KeyAliasState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliasName Name of the Key Alias.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder aliasName(@Nullable Output<String> aliasName) {
            $.aliasName = aliasName;
            return this;
        }

        /**
         * @param aliasName Name of the Key Alias.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder aliasName(String aliasName) {
            return aliasName(Output.of(aliasName));
        }

        /**
         * @param keyArn ARN of the key.
         * 
         * @return builder
         * 
         */
        public Builder keyArn(@Nullable Output<String> keyArn) {
            $.keyArn = keyArn;
            return this;
        }

        /**
         * @param keyArn ARN of the key.
         * 
         * @return builder
         * 
         */
        public Builder keyArn(String keyArn) {
            return keyArn(Output.of(keyArn));
        }

        public KeyAliasState build() {
            return $;
        }
    }

}
