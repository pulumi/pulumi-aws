// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs Empty = new DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs();

    @Import(name="interactiveLayoutConfiguration")
    private @Nullable Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationArgs> interactiveLayoutConfiguration;

    public Optional<Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationArgs>> interactiveLayoutConfiguration() {
        return Optional.ofNullable(this.interactiveLayoutConfiguration);
    }

    @Import(name="paginatedLayoutConfiguration")
    private @Nullable Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfigurationArgs> paginatedLayoutConfiguration;

    public Optional<Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfigurationArgs>> paginatedLayoutConfiguration() {
        return Optional.ofNullable(this.paginatedLayoutConfiguration);
    }

    @Import(name="sheetContentType")
    private @Nullable Output<String> sheetContentType;

    public Optional<Output<String>> sheetContentType() {
        return Optional.ofNullable(this.sheetContentType);
    }

    private DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs() {}

    private DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs(DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs $) {
        this.interactiveLayoutConfiguration = $.interactiveLayoutConfiguration;
        this.paginatedLayoutConfiguration = $.paginatedLayoutConfiguration;
        this.sheetContentType = $.sheetContentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs $;

        public Builder() {
            $ = new DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs();
        }

        public Builder(DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs defaults) {
            $ = new DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder interactiveLayoutConfiguration(@Nullable Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationArgs> interactiveLayoutConfiguration) {
            $.interactiveLayoutConfiguration = interactiveLayoutConfiguration;
            return this;
        }

        public Builder interactiveLayoutConfiguration(DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationArgs interactiveLayoutConfiguration) {
            return interactiveLayoutConfiguration(Output.of(interactiveLayoutConfiguration));
        }

        public Builder paginatedLayoutConfiguration(@Nullable Output<DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfigurationArgs> paginatedLayoutConfiguration) {
            $.paginatedLayoutConfiguration = paginatedLayoutConfiguration;
            return this;
        }

        public Builder paginatedLayoutConfiguration(DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfigurationArgs paginatedLayoutConfiguration) {
            return paginatedLayoutConfiguration(Output.of(paginatedLayoutConfiguration));
        }

        public Builder sheetContentType(@Nullable Output<String> sheetContentType) {
            $.sheetContentType = sheetContentType;
            return this;
        }

        public Builder sheetContentType(String sheetContentType) {
            return sheetContentType(Output.of(sheetContentType));
        }

        public DashboardDefinitionAnalysisDefaultsDefaultNewSheetConfigurationArgs build() {
            return $;
        }
    }

}
