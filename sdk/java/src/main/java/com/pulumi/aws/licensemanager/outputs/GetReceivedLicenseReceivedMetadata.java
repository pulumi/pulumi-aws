// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.licensemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReceivedLicenseReceivedMetadata {
    /**
     * @return A list of allowed operations.
     * 
     */
    private List<String> allowedOperations;
    /**
     * @return Received status.
     * 
     */
    private String receivedStatus;
    /**
     * @return Received status reason.
     * 
     */
    private String receivedStatusReason;

    private GetReceivedLicenseReceivedMetadata() {}
    /**
     * @return A list of allowed operations.
     * 
     */
    public List<String> allowedOperations() {
        return this.allowedOperations;
    }
    /**
     * @return Received status.
     * 
     */
    public String receivedStatus() {
        return this.receivedStatus;
    }
    /**
     * @return Received status reason.
     * 
     */
    public String receivedStatusReason() {
        return this.receivedStatusReason;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReceivedLicenseReceivedMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedOperations;
        private String receivedStatus;
        private String receivedStatusReason;
        public Builder() {}
        public Builder(GetReceivedLicenseReceivedMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedOperations = defaults.allowedOperations;
    	      this.receivedStatus = defaults.receivedStatus;
    	      this.receivedStatusReason = defaults.receivedStatusReason;
        }

        @CustomType.Setter
        public Builder allowedOperations(List<String> allowedOperations) {
            if (allowedOperations == null) {
              throw new MissingRequiredPropertyException("GetReceivedLicenseReceivedMetadata", "allowedOperations");
            }
            this.allowedOperations = allowedOperations;
            return this;
        }
        public Builder allowedOperations(String... allowedOperations) {
            return allowedOperations(List.of(allowedOperations));
        }
        @CustomType.Setter
        public Builder receivedStatus(String receivedStatus) {
            if (receivedStatus == null) {
              throw new MissingRequiredPropertyException("GetReceivedLicenseReceivedMetadata", "receivedStatus");
            }
            this.receivedStatus = receivedStatus;
            return this;
        }
        @CustomType.Setter
        public Builder receivedStatusReason(String receivedStatusReason) {
            if (receivedStatusReason == null) {
              throw new MissingRequiredPropertyException("GetReceivedLicenseReceivedMetadata", "receivedStatusReason");
            }
            this.receivedStatusReason = receivedStatusReason;
            return this;
        }
        public GetReceivedLicenseReceivedMetadata build() {
            final var _resultValue = new GetReceivedLicenseReceivedMetadata();
            _resultValue.allowedOperations = allowedOperations;
            _resultValue.receivedStatus = receivedStatus;
            _resultValue.receivedStatusReason = receivedStatusReason;
            return _resultValue;
        }
    }
}
