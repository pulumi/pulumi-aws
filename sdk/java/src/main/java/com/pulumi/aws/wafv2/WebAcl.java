// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.wafv2.WebAclArgs;
import com.pulumi.aws.wafv2.inputs.WebAclState;
import com.pulumi.aws.wafv2.outputs.WebAclCaptchaConfig;
import com.pulumi.aws.wafv2.outputs.WebAclCustomResponseBody;
import com.pulumi.aws.wafv2.outputs.WebAclDefaultAction;
import com.pulumi.aws.wafv2.outputs.WebAclRule;
import com.pulumi.aws.wafv2.outputs.WebAclVisibilityConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a WAFv2 Web ACL resource.
 * 
 * &gt; **Note:** In `field_to_match` blocks, _e.g._, in `byte_match_statement`, the `body` block includes an optional argument `oversize_handling`. AWS indicates this argument will be required starting February 2023. To avoid configurations breaking when that change happens, treat the `oversize_handling` argument as **required** as soon as possible.
 * 
 * ## Example Usage
 * 
 * This resource is based on `aws.wafv2.RuleGroup`, check the documentation of the `aws.wafv2.RuleGroup` resource to see examples of the various available statements.
 * ### Managed Rule
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionCountArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WebAcl(&#34;example&#34;, WebAclArgs.builder()        
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow()
 *                 .build())
 *             .description(&#34;Example of a managed rule.&#34;)
 *             .rules(WebAclRuleArgs.builder()
 *                 .name(&#34;rule-1&#34;)
 *                 .overrideAction(WebAclRuleOverrideActionArgs.builder()
 *                     .count()
 *                     .build())
 *                 .priority(1)
 *                 .statement(WebAclRuleStatementArgs.builder()
 *                     .managedRuleGroupStatement(WebAclRuleStatementManagedRuleGroupStatementArgs.builder()
 *                         .name(&#34;AWSManagedRulesCommonRuleSet&#34;)
 *                         .ruleActionOverride(                        
 *                             %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
 *                             %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                         .scopeDownStatement(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs.builder()
 *                             .geoMatchStatement(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs.builder()
 *                                 .countryCodes(                                
 *                                     &#34;US&#34;,
 *                                     &#34;NL&#34;)
 *                                 .build())
 *                             .build())
 *                         .vendorName(&#34;AWS&#34;)
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(WebAclRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(false)
 *                     .metricName(&#34;friendly-rule-metric-name&#34;)
 *                     .sampledRequestsEnabled(false)
 *                     .build())
 *                 .build())
 *             .scope(&#34;REGIONAL&#34;)
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;Tag1&#34;, &#34;Value1&#34;),
 *                 Map.entry(&#34;Tag2&#34;, &#34;Value2&#34;)
 *             ))
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(false)
 *                 .metricName(&#34;friendly-metric-name&#34;)
 *                 .sampledRequestsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Account Takeover Protection
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionCountArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var atp_example = new WebAcl(&#34;atp-example&#34;, WebAclArgs.builder()        
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow()
 *                 .build())
 *             .description(&#34;Example of a managed ATP rule.&#34;)
 *             .rules(WebAclRuleArgs.builder()
 *                 .name(&#34;atp-rule-1&#34;)
 *                 .overrideAction(WebAclRuleOverrideActionArgs.builder()
 *                     .count()
 *                     .build())
 *                 .priority(1)
 *                 .statement(WebAclRuleStatementArgs.builder()
 *                     .managedRuleGroupStatement(WebAclRuleStatementManagedRuleGroupStatementArgs.builder()
 *                         .managedRuleGroupConfigs(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.builder()
 *                             .awsManagedRulesAtpRuleSet(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs.builder()
 *                                 .loginPath(&#34;/api/1/signin&#34;)
 *                                 .requestInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs.builder()
 *                                     .passwordField(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs.builder()
 *                                         .identifier(&#34;/password&#34;)
 *                                         .build())
 *                                     .payloadType(&#34;JSON&#34;)
 *                                     .usernameField(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs.builder()
 *                                         .identifier(&#34;/email&#34;)
 *                                         .build())
 *                                     .build())
 *                                 .responseInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs.builder()
 *                                     .statusCode(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs.builder()
 *                                         .failureCodes(&#34;403&#34;)
 *                                         .successCodes(&#34;200&#34;)
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .name(&#34;AWSManagedRulesATPRuleSet&#34;)
 *                         .vendorName(&#34;AWS&#34;)
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(WebAclRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(false)
 *                     .metricName(&#34;friendly-rule-metric-name&#34;)
 *                     .sampledRequestsEnabled(false)
 *                     .build())
 *                 .build())
 *             .scope(&#34;CLOUDFRONT&#34;)
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(false)
 *                 .metricName(&#34;friendly-metric-name&#34;)
 *                 .sampledRequestsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Rate Based
 * Rate-limit US and NL-based clients to 10,000 requests for every 5 minutes.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleActionBlockArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WebAcl(&#34;example&#34;, WebAclArgs.builder()        
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow()
 *                 .build())
 *             .description(&#34;Example of a Cloudfront rate based statement.&#34;)
 *             .rules(WebAclRuleArgs.builder()
 *                 .action(WebAclRuleActionArgs.builder()
 *                     .block()
 *                     .build())
 *                 .name(&#34;rule-1&#34;)
 *                 .priority(1)
 *                 .statement(WebAclRuleStatementArgs.builder()
 *                     .rateBasedStatement(WebAclRuleStatementRateBasedStatementArgs.builder()
 *                         .aggregateKeyType(&#34;IP&#34;)
 *                         .limit(10000)
 *                         .scopeDownStatement(WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.builder()
 *                             .geoMatchStatement(WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs.builder()
 *                                 .countryCodes(                                
 *                                     &#34;US&#34;,
 *                                     &#34;NL&#34;)
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(WebAclRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(false)
 *                     .metricName(&#34;friendly-rule-metric-name&#34;)
 *                     .sampledRequestsEnabled(false)
 *                     .build())
 *                 .build())
 *             .scope(&#34;CLOUDFRONT&#34;)
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;Tag1&#34;, &#34;Value1&#34;),
 *                 Map.entry(&#34;Tag2&#34;, &#34;Value2&#34;)
 *             ))
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(false)
 *                 .metricName(&#34;friendly-metric-name&#34;)
 *                 .sampledRequestsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Rule Group Reference
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.RuleGroup;
 * import com.pulumi.aws.wafv2.RuleGroupArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionCountArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementGeoMatchStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionBlockArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionCountArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRuleGroupReferenceStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RuleGroup(&#34;example&#34;, RuleGroupArgs.builder()        
 *             .capacity(10)
 *             .scope(&#34;REGIONAL&#34;)
 *             .rules(            
 *                 RuleGroupRuleArgs.builder()
 *                     .name(&#34;rule-1&#34;)
 *                     .priority(1)
 *                     .action(RuleGroupRuleActionArgs.builder()
 *                         .count()
 *                         .build())
 *                     .statement(RuleGroupRuleStatementArgs.builder()
 *                         .geoMatchStatement(RuleGroupRuleStatementGeoMatchStatementArgs.builder()
 *                             .countryCodes(&#34;NL&#34;)
 *                             .build())
 *                         .build())
 *                     .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                         .cloudwatchMetricsEnabled(false)
 *                         .metricName(&#34;friendly-rule-metric-name&#34;)
 *                         .sampledRequestsEnabled(false)
 *                         .build())
 *                     .build(),
 *                 RuleGroupRuleArgs.builder()
 *                     .name(&#34;rule-to-exclude-a&#34;)
 *                     .priority(10)
 *                     .action(RuleGroupRuleActionArgs.builder()
 *                         .allow()
 *                         .build())
 *                     .statement(RuleGroupRuleStatementArgs.builder()
 *                         .geoMatchStatement(RuleGroupRuleStatementGeoMatchStatementArgs.builder()
 *                             .countryCodes(&#34;US&#34;)
 *                             .build())
 *                         .build())
 *                     .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                         .cloudwatchMetricsEnabled(false)
 *                         .metricName(&#34;friendly-rule-metric-name&#34;)
 *                         .sampledRequestsEnabled(false)
 *                         .build())
 *                     .build(),
 *                 RuleGroupRuleArgs.builder()
 *                     .name(&#34;rule-to-exclude-b&#34;)
 *                     .priority(15)
 *                     .action(RuleGroupRuleActionArgs.builder()
 *                         .allow()
 *                         .build())
 *                     .statement(RuleGroupRuleStatementArgs.builder()
 *                         .geoMatchStatement(RuleGroupRuleStatementGeoMatchStatementArgs.builder()
 *                             .countryCodes(&#34;GB&#34;)
 *                             .build())
 *                         .build())
 *                     .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                         .cloudwatchMetricsEnabled(false)
 *                         .metricName(&#34;friendly-rule-metric-name&#34;)
 *                         .sampledRequestsEnabled(false)
 *                         .build())
 *                     .build())
 *             .visibilityConfig(RuleGroupVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(false)
 *                 .metricName(&#34;friendly-metric-name&#34;)
 *                 .sampledRequestsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *         var test = new WebAcl(&#34;test&#34;, WebAclArgs.builder()        
 *             .scope(&#34;REGIONAL&#34;)
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .block()
 *                 .build())
 *             .rules(WebAclRuleArgs.builder()
 *                 .name(&#34;rule-1&#34;)
 *                 .priority(1)
 *                 .overrideAction(WebAclRuleOverrideActionArgs.builder()
 *                     .count()
 *                     .build())
 *                 .statement(WebAclRuleStatementArgs.builder()
 *                     .ruleGroupReferenceStatement(WebAclRuleStatementRuleGroupReferenceStatementArgs.builder()
 *                         .arn(example.arn())
 *                         .excludedRules(                        
 *                             WebAclRuleStatementRuleGroupReferenceStatementExcludedRuleArgs.builder()
 *                                 .name(&#34;rule-to-exclude-b&#34;)
 *                                 .build(),
 *                             WebAclRuleStatementRuleGroupReferenceStatementExcludedRuleArgs.builder()
 *                                 .name(&#34;rule-to-exclude-a&#34;)
 *                                 .build())
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(WebAclRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(false)
 *                     .metricName(&#34;friendly-rule-metric-name&#34;)
 *                     .sampledRequestsEnabled(false)
 *                     .build())
 *                 .build())
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;Tag1&#34;, &#34;Value1&#34;),
 *                 Map.entry(&#34;Tag2&#34;, &#34;Value2&#34;)
 *             ))
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(false)
 *                 .metricName(&#34;friendly-metric-name&#34;)
 *                 .sampledRequestsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * WAFv2 Web ACLs can be imported using `ID/Name/Scope` e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:wafv2/webAcl:WebAcl example a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc/example/REGIONAL
 * ```
 * 
 */
@ResourceType(type="aws:wafv2/webAcl:WebAcl")
public class WebAcl extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the IP Set that this statement references.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the IP Set that this statement references.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Web ACL capacity units (WCUs) currently being used by this web ACL.
     * 
     */
    @Export(name="capacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> capacity;

    /**
     * @return Web ACL capacity units (WCUs) currently being used by this web ACL.
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }
    /**
     * Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
     * 
     */
    @Export(name="captchaConfig", refs={WebAclCaptchaConfig.class}, tree="[0]")
    private Output</* @Nullable */ WebAclCaptchaConfig> captchaConfig;

    /**
     * @return Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
     * 
     */
    public Output<Optional<WebAclCaptchaConfig>> captchaConfig() {
        return Codegen.optional(this.captchaConfig);
    }
    /**
     * Defines custom response bodies that can be referenced by `custom_response` actions. See `custom_response_body` below for details.
     * 
     */
    @Export(name="customResponseBodies", refs={List.class,WebAclCustomResponseBody.class}, tree="[0,1]")
    private Output</* @Nullable */ List<WebAclCustomResponseBody>> customResponseBodies;

    /**
     * @return Defines custom response bodies that can be referenced by `custom_response` actions. See `custom_response_body` below for details.
     * 
     */
    public Output<Optional<List<WebAclCustomResponseBody>>> customResponseBodies() {
        return Codegen.optional(this.customResponseBodies);
    }
    /**
     * Action to perform if none of the `rules` contained in the WebACL match. See `default_ action` below for details.
     * 
     */
    @Export(name="defaultAction", refs={WebAclDefaultAction.class}, tree="[0]")
    private Output<WebAclDefaultAction> defaultAction;

    /**
     * @return Action to perform if none of the `rules` contained in the WebACL match. See `default_ action` below for details.
     * 
     */
    public Output<WebAclDefaultAction> defaultAction() {
        return this.defaultAction;
    }
    /**
     * Friendly description of the WebACL.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Friendly description of the WebACL.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="lockToken", refs={String.class}, tree="[0]")
    private Output<String> lockToken;

    public Output<String> lockToken() {
        return this.lockToken;
    }
    /**
     * Friendly name of the WebACL.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Friendly name of the WebACL.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
     * 
     */
    @Export(name="rules", refs={List.class,WebAclRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<WebAclRule>> rules;

    /**
     * @return Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
     * 
     */
    public Output<Optional<List<WebAclRule>>> rules() {
        return Codegen.optional(this.rules);
    }
    /**
     * Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }
    /**
     * Map of key-value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of key-value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibility_config` below for details.
     * 
     */
    @Export(name="visibilityConfig", refs={WebAclVisibilityConfig.class}, tree="[0]")
    private Output<WebAclVisibilityConfig> visibilityConfig;

    /**
     * @return Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibility_config` below for details.
     * 
     */
    public Output<WebAclVisibilityConfig> visibilityConfig() {
        return this.visibilityConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAcl(String name) {
        this(name, WebAclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAcl(String name, WebAclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAcl(String name, WebAclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAcl:WebAcl", name, args == null ? WebAclArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WebAcl(String name, Output<String> id, @Nullable WebAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAcl:WebAcl", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAcl get(String name, Output<String> id, @Nullable WebAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WebAcl(name, id, state, options);
    }
}
