// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.scheduler.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScheduleTargetRetryPolicy {
    /**
     * @return Maximum amount of time, in seconds, to continue to make retry attempts. Ranges from `60` to `86400` (default).
     * 
     */
    private @Nullable Integer maximumEventAgeInSeconds;
    /**
     * @return Maximum number of retry attempts to make before the request fails. Ranges from `0` to `185` (default).
     * 
     */
    private @Nullable Integer maximumRetryAttempts;

    private ScheduleTargetRetryPolicy() {}
    /**
     * @return Maximum amount of time, in seconds, to continue to make retry attempts. Ranges from `60` to `86400` (default).
     * 
     */
    public Optional<Integer> maximumEventAgeInSeconds() {
        return Optional.ofNullable(this.maximumEventAgeInSeconds);
    }
    /**
     * @return Maximum number of retry attempts to make before the request fails. Ranges from `0` to `185` (default).
     * 
     */
    public Optional<Integer> maximumRetryAttempts() {
        return Optional.ofNullable(this.maximumRetryAttempts);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleTargetRetryPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maximumEventAgeInSeconds;
        private @Nullable Integer maximumRetryAttempts;
        public Builder() {}
        public Builder(ScheduleTargetRetryPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumEventAgeInSeconds = defaults.maximumEventAgeInSeconds;
    	      this.maximumRetryAttempts = defaults.maximumRetryAttempts;
        }

        @CustomType.Setter
        public Builder maximumEventAgeInSeconds(@Nullable Integer maximumEventAgeInSeconds) {
            this.maximumEventAgeInSeconds = maximumEventAgeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder maximumRetryAttempts(@Nullable Integer maximumRetryAttempts) {
            this.maximumRetryAttempts = maximumRetryAttempts;
            return this;
        }
        public ScheduleTargetRetryPolicy build() {
            final var _resultValue = new ScheduleTargetRetryPolicy();
            _resultValue.maximumEventAgeInSeconds = maximumEventAgeInSeconds;
            _resultValue.maximumRetryAttempts = maximumRetryAttempts;
            return _resultValue;
        }
    }
}
