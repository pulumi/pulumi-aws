// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone;

import com.pulumi.aws.datazone.inputs.DomainSingleSignOnArgs;
import com.pulumi.aws.datazone.inputs.DomainTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    /**
     * Description of the Domain.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Domain.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ARN of the role used by DataZone to configure the Domain.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="domainExecutionRole", required=true)
    private Output<String> domainExecutionRole;

    /**
     * @return ARN of the role used by DataZone to configure the Domain.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> domainExecutionRole() {
        return this.domainExecutionRole;
    }

    /**
     * ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
     * 
     */
    @Import(name="kmsKeyIdentifier")
    private @Nullable Output<String> kmsKeyIdentifier;

    /**
     * @return ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
     * 
     */
    public Optional<Output<String>> kmsKeyIdentifier() {
        return Optional.ofNullable(this.kmsKeyIdentifier);
    }

    /**
     * Name of the Domain.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Domain.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
     * 
     */
    @Import(name="singleSignOn")
    private @Nullable Output<DomainSingleSignOnArgs> singleSignOn;

    /**
     * @return Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
     * 
     */
    public Optional<Output<DomainSingleSignOnArgs>> singleSignOn() {
        return Optional.ofNullable(this.singleSignOn);
    }

    /**
     * Whether to skip the deletion check for the Domain.
     * 
     */
    @Import(name="skipDeletionCheck")
    private @Nullable Output<Boolean> skipDeletionCheck;

    /**
     * @return Whether to skip the deletion check for the Domain.
     * 
     */
    public Optional<Output<Boolean>> skipDeletionCheck() {
        return Optional.ofNullable(this.skipDeletionCheck);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<DomainTimeoutsArgs> timeouts;

    public Optional<Output<DomainTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private DomainArgs() {}

    private DomainArgs(DomainArgs $) {
        this.description = $.description;
        this.domainExecutionRole = $.domainExecutionRole;
        this.kmsKeyIdentifier = $.kmsKeyIdentifier;
        this.name = $.name;
        this.singleSignOn = $.singleSignOn;
        this.skipDeletionCheck = $.skipDeletionCheck;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainArgs $;

        public Builder() {
            $ = new DomainArgs();
        }

        public Builder(DomainArgs defaults) {
            $ = new DomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the Domain.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Domain.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domainExecutionRole ARN of the role used by DataZone to configure the Domain.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder domainExecutionRole(Output<String> domainExecutionRole) {
            $.domainExecutionRole = domainExecutionRole;
            return this;
        }

        /**
         * @param domainExecutionRole ARN of the role used by DataZone to configure the Domain.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder domainExecutionRole(String domainExecutionRole) {
            return domainExecutionRole(Output.of(domainExecutionRole));
        }

        /**
         * @param kmsKeyIdentifier ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyIdentifier(@Nullable Output<String> kmsKeyIdentifier) {
            $.kmsKeyIdentifier = kmsKeyIdentifier;
            return this;
        }

        /**
         * @param kmsKeyIdentifier ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyIdentifier(String kmsKeyIdentifier) {
            return kmsKeyIdentifier(Output.of(kmsKeyIdentifier));
        }

        /**
         * @param name Name of the Domain.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Domain.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param singleSignOn Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOn(@Nullable Output<DomainSingleSignOnArgs> singleSignOn) {
            $.singleSignOn = singleSignOn;
            return this;
        }

        /**
         * @param singleSignOn Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOn(DomainSingleSignOnArgs singleSignOn) {
            return singleSignOn(Output.of(singleSignOn));
        }

        /**
         * @param skipDeletionCheck Whether to skip the deletion check for the Domain.
         * 
         * @return builder
         * 
         */
        public Builder skipDeletionCheck(@Nullable Output<Boolean> skipDeletionCheck) {
            $.skipDeletionCheck = skipDeletionCheck;
            return this;
        }

        /**
         * @param skipDeletionCheck Whether to skip the deletion check for the Domain.
         * 
         * @return builder
         * 
         */
        public Builder skipDeletionCheck(Boolean skipDeletionCheck) {
            return skipDeletionCheck(Output.of(skipDeletionCheck));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<DomainTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(DomainTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public DomainArgs build() {
            if ($.domainExecutionRole == null) {
                throw new MissingRequiredPropertyException("DomainArgs", "domainExecutionRole");
            }
            return $;
        }
    }

}
