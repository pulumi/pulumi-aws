// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailIdentityFeedbackAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailIdentityFeedbackAttributesArgs Empty = new EmailIdentityFeedbackAttributesArgs();

    /**
     * Sets the feedback forwarding configuration for the identity.
     * 
     */
    @Import(name="emailForwardingEnabled")
    private @Nullable Output<Boolean> emailForwardingEnabled;

    /**
     * @return Sets the feedback forwarding configuration for the identity.
     * 
     */
    public Optional<Output<Boolean>> emailForwardingEnabled() {
        return Optional.ofNullable(this.emailForwardingEnabled);
    }

    /**
     * The email identity.
     * 
     */
    @Import(name="emailIdentity", required=true)
    private Output<String> emailIdentity;

    /**
     * @return The email identity.
     * 
     */
    public Output<String> emailIdentity() {
        return this.emailIdentity;
    }

    private EmailIdentityFeedbackAttributesArgs() {}

    private EmailIdentityFeedbackAttributesArgs(EmailIdentityFeedbackAttributesArgs $) {
        this.emailForwardingEnabled = $.emailForwardingEnabled;
        this.emailIdentity = $.emailIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailIdentityFeedbackAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailIdentityFeedbackAttributesArgs $;

        public Builder() {
            $ = new EmailIdentityFeedbackAttributesArgs();
        }

        public Builder(EmailIdentityFeedbackAttributesArgs defaults) {
            $ = new EmailIdentityFeedbackAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailForwardingEnabled Sets the feedback forwarding configuration for the identity.
         * 
         * @return builder
         * 
         */
        public Builder emailForwardingEnabled(@Nullable Output<Boolean> emailForwardingEnabled) {
            $.emailForwardingEnabled = emailForwardingEnabled;
            return this;
        }

        /**
         * @param emailForwardingEnabled Sets the feedback forwarding configuration for the identity.
         * 
         * @return builder
         * 
         */
        public Builder emailForwardingEnabled(Boolean emailForwardingEnabled) {
            return emailForwardingEnabled(Output.of(emailForwardingEnabled));
        }

        /**
         * @param emailIdentity The email identity.
         * 
         * @return builder
         * 
         */
        public Builder emailIdentity(Output<String> emailIdentity) {
            $.emailIdentity = emailIdentity;
            return this;
        }

        /**
         * @param emailIdentity The email identity.
         * 
         * @return builder
         * 
         */
        public Builder emailIdentity(String emailIdentity) {
            return emailIdentity(Output.of(emailIdentity));
        }

        public EmailIdentityFeedbackAttributesArgs build() {
            $.emailIdentity = Objects.requireNonNull($.emailIdentity, "expected parameter 'emailIdentity' to be non-null");
            return $;
        }
    }

}
