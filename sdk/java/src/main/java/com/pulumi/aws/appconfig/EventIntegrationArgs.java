// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.aws.appconfig.inputs.EventIntegrationEventFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventIntegrationArgs Empty = new EventIntegrationArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="eventFilter", required=true)
    private Output<EventIntegrationEventFilterArgs> eventFilter;

    public Output<EventIntegrationEventFilterArgs> eventFilter() {
        return this.eventFilter;
    }

    @Import(name="eventbridgeBus", required=true)
    private Output<String> eventbridgeBus;

    public Output<String> eventbridgeBus() {
        return this.eventbridgeBus;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EventIntegrationArgs() {}

    private EventIntegrationArgs(EventIntegrationArgs $) {
        this.description = $.description;
        this.eventFilter = $.eventFilter;
        this.eventbridgeBus = $.eventbridgeBus;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventIntegrationArgs $;

        public Builder() {
            $ = new EventIntegrationArgs();
        }

        public Builder(EventIntegrationArgs defaults) {
            $ = new EventIntegrationArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder eventFilter(Output<EventIntegrationEventFilterArgs> eventFilter) {
            $.eventFilter = eventFilter;
            return this;
        }

        public Builder eventFilter(EventIntegrationEventFilterArgs eventFilter) {
            return eventFilter(Output.of(eventFilter));
        }

        public Builder eventbridgeBus(Output<String> eventbridgeBus) {
            $.eventbridgeBus = eventbridgeBus;
            return this;
        }

        public Builder eventbridgeBus(String eventbridgeBus) {
            return eventbridgeBus(Output.of(eventbridgeBus));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EventIntegrationArgs build() {
            $.eventFilter = Objects.requireNonNull($.eventFilter, "expected parameter 'eventFilter' to be non-null");
            $.eventbridgeBus = Objects.requireNonNull($.eventbridgeBus, "expected parameter 'eventbridgeBus' to be non-null");
            return $;
        }
    }

}
