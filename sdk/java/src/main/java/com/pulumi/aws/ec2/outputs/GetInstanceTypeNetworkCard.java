// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceTypeNetworkCard {
    private Double baselineBandwidth;
    private Integer index;
    private Integer maximumInterfaces;
    private Double peakBandwidth;
    private String performance;

    private GetInstanceTypeNetworkCard() {}
    public Double baselineBandwidth() {
        return this.baselineBandwidth;
    }
    public Integer index() {
        return this.index;
    }
    public Integer maximumInterfaces() {
        return this.maximumInterfaces;
    }
    public Double peakBandwidth() {
        return this.peakBandwidth;
    }
    public String performance() {
        return this.performance;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypeNetworkCard defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double baselineBandwidth;
        private Integer index;
        private Integer maximumInterfaces;
        private Double peakBandwidth;
        private String performance;
        public Builder() {}
        public Builder(GetInstanceTypeNetworkCard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineBandwidth = defaults.baselineBandwidth;
    	      this.index = defaults.index;
    	      this.maximumInterfaces = defaults.maximumInterfaces;
    	      this.peakBandwidth = defaults.peakBandwidth;
    	      this.performance = defaults.performance;
        }

        @CustomType.Setter
        public Builder baselineBandwidth(Double baselineBandwidth) {
            if (baselineBandwidth == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypeNetworkCard", "baselineBandwidth");
            }
            this.baselineBandwidth = baselineBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder index(Integer index) {
            if (index == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypeNetworkCard", "index");
            }
            this.index = index;
            return this;
        }
        @CustomType.Setter
        public Builder maximumInterfaces(Integer maximumInterfaces) {
            if (maximumInterfaces == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypeNetworkCard", "maximumInterfaces");
            }
            this.maximumInterfaces = maximumInterfaces;
            return this;
        }
        @CustomType.Setter
        public Builder peakBandwidth(Double peakBandwidth) {
            if (peakBandwidth == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypeNetworkCard", "peakBandwidth");
            }
            this.peakBandwidth = peakBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder performance(String performance) {
            if (performance == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypeNetworkCard", "performance");
            }
            this.performance = performance;
            return this;
        }
        public GetInstanceTypeNetworkCard build() {
            final var _resultValue = new GetInstanceTypeNetworkCard();
            _resultValue.baselineBandwidth = baselineBandwidth;
            _resultValue.index = index;
            _resultValue.maximumInterfaces = maximumInterfaces;
            _resultValue.peakBandwidth = peakBandwidth;
            _resultValue.performance = performance;
            return _resultValue;
        }
    }
}
