// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appfabric;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.appfabric.IngestionDestinationArgs;
import com.pulumi.aws.appfabric.inputs.IngestionDestinationState;
import com.pulumi.aws.appfabric.outputs.IngestionDestinationDestinationConfiguration;
import com.pulumi.aws.appfabric.outputs.IngestionDestinationProcessingConfiguration;
import com.pulumi.aws.appfabric.outputs.IngestionDestinationTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS AppFabric Ingestion Destination.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.appfabric.IngestionDestination;
 * import com.pulumi.aws.appfabric.IngestionDestinationArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationProcessingConfigurationArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationProcessingConfigurationAuditLogArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationAuditLogArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationAuditLogDestinationArgs;
 * import com.pulumi.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new IngestionDestination("example", IngestionDestinationArgs.builder()
 *             .appBundleArn(exampleAwsAppfabricAppBundle.arn())
 *             .ingestionArn(exampleAwsAppfabricIngestion.arn())
 *             .processingConfiguration(IngestionDestinationProcessingConfigurationArgs.builder()
 *                 .auditLog(IngestionDestinationProcessingConfigurationAuditLogArgs.builder()
 *                     .format("json")
 *                     .schema("raw")
 *                     .build())
 *                 .build())
 *             .destinationConfiguration(IngestionDestinationDestinationConfigurationArgs.builder()
 *                 .auditLog(IngestionDestinationDestinationConfigurationAuditLogArgs.builder()
 *                     .destination(IngestionDestinationDestinationConfigurationAuditLogDestinationArgs.builder()
 *                         .s3Bucket(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs.builder()
 *                             .bucketName(exampleAwsS3Bucket.bucket())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="aws:appfabric/ingestionDestination:IngestionDestination")
public class IngestionDestination extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @Export(name="appBundleArn", refs={String.class}, tree="[0]")
    private Output<String> appBundleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    public Output<String> appBundleArn() {
        return this.appBundleArn;
    }
    /**
     * ARN of the Ingestion Destination.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the Ingestion Destination.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Contains information about the destination of ingested data.
     * 
     */
    @Export(name="destinationConfiguration", refs={IngestionDestinationDestinationConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ IngestionDestinationDestinationConfiguration> destinationConfiguration;

    /**
     * @return Contains information about the destination of ingested data.
     * 
     */
    public Output<Optional<IngestionDestinationDestinationConfiguration>> destinationConfiguration() {
        return Codegen.optional(this.destinationConfiguration);
    }
    /**
     * The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    @Export(name="ingestionArn", refs={String.class}, tree="[0]")
    private Output<String> ingestionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    public Output<String> ingestionArn() {
        return this.ingestionArn;
    }
    /**
     * Contains information about how ingested data is processed.
     * 
     */
    @Export(name="processingConfiguration", refs={IngestionDestinationProcessingConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ IngestionDestinationProcessingConfiguration> processingConfiguration;

    /**
     * @return Contains information about how ingested data is processed.
     * 
     */
    public Output<Optional<IngestionDestinationProcessingConfiguration>> processingConfiguration() {
        return Codegen.optional(this.processingConfiguration);
    }
    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={IngestionDestinationTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ IngestionDestinationTimeouts> timeouts;

    public Output<Optional<IngestionDestinationTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IngestionDestination(java.lang.String name) {
        this(name, IngestionDestinationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IngestionDestination(java.lang.String name, IngestionDestinationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IngestionDestination(java.lang.String name, IngestionDestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appfabric/ingestionDestination:IngestionDestination", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IngestionDestination(java.lang.String name, Output<java.lang.String> id, @Nullable IngestionDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appfabric/ingestionDestination:IngestionDestination", name, state, makeResourceOptions(options, id), false);
    }

    private static IngestionDestinationArgs makeArgs(IngestionDestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IngestionDestinationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IngestionDestination get(java.lang.String name, Output<java.lang.String> id, @Nullable IngestionDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IngestionDestination(name, id, state, options);
    }
}
