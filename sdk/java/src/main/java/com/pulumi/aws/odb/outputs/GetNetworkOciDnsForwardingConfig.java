// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkOciDnsForwardingConfig {
    private String domainName;
    private String ociDnsListenerIp;

    private GetNetworkOciDnsForwardingConfig() {}
    public String domainName() {
        return this.domainName;
    }
    public String ociDnsListenerIp() {
        return this.ociDnsListenerIp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkOciDnsForwardingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String ociDnsListenerIp;
        public Builder() {}
        public Builder(GetNetworkOciDnsForwardingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.ociDnsListenerIp = defaults.ociDnsListenerIp;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetNetworkOciDnsForwardingConfig", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder ociDnsListenerIp(String ociDnsListenerIp) {
            if (ociDnsListenerIp == null) {
              throw new MissingRequiredPropertyException("GetNetworkOciDnsForwardingConfig", "ociDnsListenerIp");
            }
            this.ociDnsListenerIp = ociDnsListenerIp;
            return this;
        }
        public GetNetworkOciDnsForwardingConfig build() {
            final var _resultValue = new GetNetworkOciDnsForwardingConfig();
            _resultValue.domainName = domainName;
            _resultValue.ociDnsListenerIp = ociDnsListenerIp;
            return _resultValue;
        }
    }
}
