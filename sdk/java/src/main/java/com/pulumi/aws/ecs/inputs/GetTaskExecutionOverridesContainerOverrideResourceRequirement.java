// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetTaskExecutionOverridesContainerOverrideResourceRequirement extends com.pulumi.resources.InvokeArgs {

    public static final GetTaskExecutionOverridesContainerOverrideResourceRequirement Empty = new GetTaskExecutionOverridesContainerOverrideResourceRequirement();

    /**
     * The type of resource to assign to a container. Valid values are `GPU` or `InferenceAccelerator`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of resource to assign to a container. Valid values are `GPU` or `InferenceAccelerator`.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * The value for the specified resource type. If the `GPU` type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that&#39;s reserved for all containers in a task can&#39;t exceed the number of available GPUs on the container instance that the task is launched on. If the `InferenceAccelerator` type is used, the value matches the `deviceName` for an InferenceAccelerator specified in a task definition.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return The value for the specified resource type. If the `GPU` type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that&#39;s reserved for all containers in a task can&#39;t exceed the number of available GPUs on the container instance that the task is launched on. If the `InferenceAccelerator` type is used, the value matches the `deviceName` for an InferenceAccelerator specified in a task definition.
     * 
     */
    public String value() {
        return this.value;
    }

    private GetTaskExecutionOverridesContainerOverrideResourceRequirement() {}

    private GetTaskExecutionOverridesContainerOverrideResourceRequirement(GetTaskExecutionOverridesContainerOverrideResourceRequirement $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTaskExecutionOverridesContainerOverrideResourceRequirement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTaskExecutionOverridesContainerOverrideResourceRequirement $;

        public Builder() {
            $ = new GetTaskExecutionOverridesContainerOverrideResourceRequirement();
        }

        public Builder(GetTaskExecutionOverridesContainerOverrideResourceRequirement defaults) {
            $ = new GetTaskExecutionOverridesContainerOverrideResourceRequirement(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The type of resource to assign to a container. Valid values are `GPU` or `InferenceAccelerator`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value The value for the specified resource type. If the `GPU` type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that&#39;s reserved for all containers in a task can&#39;t exceed the number of available GPUs on the container instance that the task is launched on. If the `InferenceAccelerator` type is used, the value matches the `deviceName` for an InferenceAccelerator specified in a task definition.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public GetTaskExecutionOverridesContainerOverrideResourceRequirement build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetTaskExecutionOverridesContainerOverrideResourceRequirement", "type");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("GetTaskExecutionOverridesContainerOverrideResourceRequirement", "value");
            }
            return $;
        }
    }

}
