// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventTargetEcsTargetCapacityProviderStrategyArgs;
import com.pulumi.aws.cloudwatch.inputs.EventTargetEcsTargetNetworkConfigurationArgs;
import com.pulumi.aws.cloudwatch.inputs.EventTargetEcsTargetPlacementConstraintArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventTargetEcsTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventTargetEcsTargetArgs Empty = new EventTargetEcsTargetArgs();

    @Import(name="capacityProviderStrategies")
    private @Nullable Output<List<EventTargetEcsTargetCapacityProviderStrategyArgs>> capacityProviderStrategies;

    public Optional<Output<List<EventTargetEcsTargetCapacityProviderStrategyArgs>>> capacityProviderStrategies() {
        return Optional.ofNullable(this.capacityProviderStrategies);
    }

    @Import(name="enableEcsManagedTags")
    private @Nullable Output<Boolean> enableEcsManagedTags;

    public Optional<Output<Boolean>> enableEcsManagedTags() {
        return Optional.ofNullable(this.enableEcsManagedTags);
    }

    @Import(name="enableExecuteCommand")
    private @Nullable Output<Boolean> enableExecuteCommand;

    public Optional<Output<Boolean>> enableExecuteCommand() {
        return Optional.ofNullable(this.enableExecuteCommand);
    }

    @Import(name="group")
    private @Nullable Output<String> group;

    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    @Import(name="launchType")
    private @Nullable Output<String> launchType;

    public Optional<Output<String>> launchType() {
        return Optional.ofNullable(this.launchType);
    }

    @Import(name="networkConfiguration")
    private @Nullable Output<EventTargetEcsTargetNetworkConfigurationArgs> networkConfiguration;

    public Optional<Output<EventTargetEcsTargetNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    @Import(name="placementConstraints")
    private @Nullable Output<List<EventTargetEcsTargetPlacementConstraintArgs>> placementConstraints;

    public Optional<Output<List<EventTargetEcsTargetPlacementConstraintArgs>>> placementConstraints() {
        return Optional.ofNullable(this.placementConstraints);
    }

    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    @Import(name="propagateTags")
    private @Nullable Output<String> propagateTags;

    public Optional<Output<String>> propagateTags() {
        return Optional.ofNullable(this.propagateTags);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="taskCount")
    private @Nullable Output<Integer> taskCount;

    public Optional<Output<Integer>> taskCount() {
        return Optional.ofNullable(this.taskCount);
    }

    @Import(name="taskDefinitionArn", required=true)
    private Output<String> taskDefinitionArn;

    public Output<String> taskDefinitionArn() {
        return this.taskDefinitionArn;
    }

    private EventTargetEcsTargetArgs() {}

    private EventTargetEcsTargetArgs(EventTargetEcsTargetArgs $) {
        this.capacityProviderStrategies = $.capacityProviderStrategies;
        this.enableEcsManagedTags = $.enableEcsManagedTags;
        this.enableExecuteCommand = $.enableExecuteCommand;
        this.group = $.group;
        this.launchType = $.launchType;
        this.networkConfiguration = $.networkConfiguration;
        this.placementConstraints = $.placementConstraints;
        this.platformVersion = $.platformVersion;
        this.propagateTags = $.propagateTags;
        this.tags = $.tags;
        this.taskCount = $.taskCount;
        this.taskDefinitionArn = $.taskDefinitionArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventTargetEcsTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventTargetEcsTargetArgs $;

        public Builder() {
            $ = new EventTargetEcsTargetArgs();
        }

        public Builder(EventTargetEcsTargetArgs defaults) {
            $ = new EventTargetEcsTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder capacityProviderStrategies(@Nullable Output<List<EventTargetEcsTargetCapacityProviderStrategyArgs>> capacityProviderStrategies) {
            $.capacityProviderStrategies = capacityProviderStrategies;
            return this;
        }

        public Builder capacityProviderStrategies(List<EventTargetEcsTargetCapacityProviderStrategyArgs> capacityProviderStrategies) {
            return capacityProviderStrategies(Output.of(capacityProviderStrategies));
        }

        public Builder capacityProviderStrategies(EventTargetEcsTargetCapacityProviderStrategyArgs... capacityProviderStrategies) {
            return capacityProviderStrategies(List.of(capacityProviderStrategies));
        }

        public Builder enableEcsManagedTags(@Nullable Output<Boolean> enableEcsManagedTags) {
            $.enableEcsManagedTags = enableEcsManagedTags;
            return this;
        }

        public Builder enableEcsManagedTags(Boolean enableEcsManagedTags) {
            return enableEcsManagedTags(Output.of(enableEcsManagedTags));
        }

        public Builder enableExecuteCommand(@Nullable Output<Boolean> enableExecuteCommand) {
            $.enableExecuteCommand = enableExecuteCommand;
            return this;
        }

        public Builder enableExecuteCommand(Boolean enableExecuteCommand) {
            return enableExecuteCommand(Output.of(enableExecuteCommand));
        }

        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        public Builder group(String group) {
            return group(Output.of(group));
        }

        public Builder launchType(@Nullable Output<String> launchType) {
            $.launchType = launchType;
            return this;
        }

        public Builder launchType(String launchType) {
            return launchType(Output.of(launchType));
        }

        public Builder networkConfiguration(@Nullable Output<EventTargetEcsTargetNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder networkConfiguration(EventTargetEcsTargetNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        public Builder placementConstraints(@Nullable Output<List<EventTargetEcsTargetPlacementConstraintArgs>> placementConstraints) {
            $.placementConstraints = placementConstraints;
            return this;
        }

        public Builder placementConstraints(List<EventTargetEcsTargetPlacementConstraintArgs> placementConstraints) {
            return placementConstraints(Output.of(placementConstraints));
        }

        public Builder placementConstraints(EventTargetEcsTargetPlacementConstraintArgs... placementConstraints) {
            return placementConstraints(List.of(placementConstraints));
        }

        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        public Builder propagateTags(@Nullable Output<String> propagateTags) {
            $.propagateTags = propagateTags;
            return this;
        }

        public Builder propagateTags(String propagateTags) {
            return propagateTags(Output.of(propagateTags));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder taskCount(@Nullable Output<Integer> taskCount) {
            $.taskCount = taskCount;
            return this;
        }

        public Builder taskCount(Integer taskCount) {
            return taskCount(Output.of(taskCount));
        }

        public Builder taskDefinitionArn(Output<String> taskDefinitionArn) {
            $.taskDefinitionArn = taskDefinitionArn;
            return this;
        }

        public Builder taskDefinitionArn(String taskDefinitionArn) {
            return taskDefinitionArn(Output.of(taskDefinitionArn));
        }

        public EventTargetEcsTargetArgs build() {
            $.taskDefinitionArn = Objects.requireNonNull($.taskDefinitionArn, "expected parameter 'taskDefinitionArn' to be non-null");
            return $;
        }
    }

}
