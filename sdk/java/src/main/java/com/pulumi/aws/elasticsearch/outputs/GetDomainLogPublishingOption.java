// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainLogPublishingOption {
    /**
     * @return The CloudWatch Log Group where the logs are published.
     * 
     */
    private String cloudwatchLogGroupArn;
    /**
     * @return Whether node to node encryption is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The type of Elasticsearch log being published.
     * 
     */
    private String logType;

    private GetDomainLogPublishingOption() {}
    /**
     * @return The CloudWatch Log Group where the logs are published.
     * 
     */
    public String cloudwatchLogGroupArn() {
        return this.cloudwatchLogGroupArn;
    }
    /**
     * @return Whether node to node encryption is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The type of Elasticsearch log being published.
     * 
     */
    public String logType() {
        return this.logType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainLogPublishingOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudwatchLogGroupArn;
        private Boolean enabled;
        private String logType;
        public Builder() {}
        public Builder(GetDomainLogPublishingOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchLogGroupArn = defaults.cloudwatchLogGroupArn;
    	      this.enabled = defaults.enabled;
    	      this.logType = defaults.logType;
        }

        @CustomType.Setter
        public Builder cloudwatchLogGroupArn(String cloudwatchLogGroupArn) {
            if (cloudwatchLogGroupArn == null) {
              throw new MissingRequiredPropertyException("GetDomainLogPublishingOption", "cloudwatchLogGroupArn");
            }
            this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetDomainLogPublishingOption", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder logType(String logType) {
            if (logType == null) {
              throw new MissingRequiredPropertyException("GetDomainLogPublishingOption", "logType");
            }
            this.logType = logType;
            return this;
        }
        public GetDomainLogPublishingOption build() {
            final var _resultValue = new GetDomainLogPublishingOption();
            _resultValue.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            _resultValue.enabled = enabled;
            _resultValue.logType = logType;
            return _resultValue;
        }
    }
}
