// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationSubnetGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationSubnetGroupState Empty = new ReplicationSubnetGroupState();

    @Import(name="replicationSubnetGroupArn")
    private @Nullable Output<String> replicationSubnetGroupArn;

    public Optional<Output<String>> replicationSubnetGroupArn() {
        return Optional.ofNullable(this.replicationSubnetGroupArn);
    }

    @Import(name="replicationSubnetGroupDescription")
    private @Nullable Output<String> replicationSubnetGroupDescription;

    public Optional<Output<String>> replicationSubnetGroupDescription() {
        return Optional.ofNullable(this.replicationSubnetGroupDescription);
    }

    @Import(name="replicationSubnetGroupId")
    private @Nullable Output<String> replicationSubnetGroupId;

    public Optional<Output<String>> replicationSubnetGroupId() {
        return Optional.ofNullable(this.replicationSubnetGroupId);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private ReplicationSubnetGroupState() {}

    private ReplicationSubnetGroupState(ReplicationSubnetGroupState $) {
        this.replicationSubnetGroupArn = $.replicationSubnetGroupArn;
        this.replicationSubnetGroupDescription = $.replicationSubnetGroupDescription;
        this.replicationSubnetGroupId = $.replicationSubnetGroupId;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationSubnetGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationSubnetGroupState $;

        public Builder() {
            $ = new ReplicationSubnetGroupState();
        }

        public Builder(ReplicationSubnetGroupState defaults) {
            $ = new ReplicationSubnetGroupState(Objects.requireNonNull(defaults));
        }

        public Builder replicationSubnetGroupArn(@Nullable Output<String> replicationSubnetGroupArn) {
            $.replicationSubnetGroupArn = replicationSubnetGroupArn;
            return this;
        }

        public Builder replicationSubnetGroupArn(String replicationSubnetGroupArn) {
            return replicationSubnetGroupArn(Output.of(replicationSubnetGroupArn));
        }

        public Builder replicationSubnetGroupDescription(@Nullable Output<String> replicationSubnetGroupDescription) {
            $.replicationSubnetGroupDescription = replicationSubnetGroupDescription;
            return this;
        }

        public Builder replicationSubnetGroupDescription(String replicationSubnetGroupDescription) {
            return replicationSubnetGroupDescription(Output.of(replicationSubnetGroupDescription));
        }

        public Builder replicationSubnetGroupId(@Nullable Output<String> replicationSubnetGroupId) {
            $.replicationSubnetGroupId = replicationSubnetGroupId;
            return this;
        }

        public Builder replicationSubnetGroupId(String replicationSubnetGroupId) {
            return replicationSubnetGroupId(Output.of(replicationSubnetGroupId));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public ReplicationSubnetGroupState build() {
            return $;
        }
    }

}
