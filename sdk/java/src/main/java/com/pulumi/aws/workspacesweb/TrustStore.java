// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspacesweb;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.workspacesweb.TrustStoreArgs;
import com.pulumi.aws.workspacesweb.inputs.TrustStoreState;
import com.pulumi.aws.workspacesweb.outputs.TrustStoreCertificate;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS WorkSpaces Web Trust Store.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.workspacesweb.TrustStore;
 * import com.pulumi.aws.workspacesweb.TrustStoreArgs;
 * import com.pulumi.aws.workspacesweb.inputs.TrustStoreCertificateArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TrustStore("example", TrustStoreArgs.builder()
 *             .certificates(TrustStoreCertificateArgs.builder()
 *                 .body(StdFunctions.file(FileArgs.builder()
 *                     .input("certificate.pem")
 *                     .build()).result())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Multiple Certificates
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.workspacesweb.TrustStore;
 * import com.pulumi.aws.workspacesweb.TrustStoreArgs;
 * import com.pulumi.aws.workspacesweb.inputs.TrustStoreCertificateArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TrustStore("example", TrustStoreArgs.builder()
 *             .certificates(            
 *                 TrustStoreCertificateArgs.builder()
 *                     .body(StdFunctions.file(FileArgs.builder()
 *                         .input("certificate1.pem")
 *                         .build()).result())
 *                     .build(),
 *                 TrustStoreCertificateArgs.builder()
 *                     .body(StdFunctions.file(FileArgs.builder()
 *                         .input("certificate2.pem")
 *                         .build()).result())
 *                     .build())
 *             .tags(Map.of("Name", "example-trust-store"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import WorkSpaces Web Trust Store using the `trust_store_arn`. For example:
 * 
 * ```sh
 * $ pulumi import aws:workspacesweb/trustStore:TrustStore example arn:aws:workspaces-web:us-west-2:123456789012:trustStore/trust_store-id-12345678
 * ```
 * 
 */
@ResourceType(type="aws:workspacesweb/trustStore:TrustStore")
public class TrustStore extends com.pulumi.resources.CustomResource {
    /**
     * List of ARNs of the web portals associated with the trust store.
     * 
     */
    @Export(name="associatedPortalArns", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> associatedPortalArns;

    /**
     * @return List of ARNs of the web portals associated with the trust store.
     * 
     */
    public Output<List<String>> associatedPortalArns() {
        return this.associatedPortalArns;
    }
    /**
     * Set of certificates to include in the trust store. See Certificate below.
     * 
     */
    @Export(name="certificates", refs={List.class,TrustStoreCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TrustStoreCertificate>> certificates;

    /**
     * @return Set of certificates to include in the trust store. See Certificate below.
     * 
     */
    public Output<Optional<List<TrustStoreCertificate>>> certificates() {
        return Codegen.optional(this.certificates);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * ARN of the trust store.
     * 
     */
    @Export(name="trustStoreArn", refs={String.class}, tree="[0]")
    private Output<String> trustStoreArn;

    /**
     * @return ARN of the trust store.
     * 
     */
    public Output<String> trustStoreArn() {
        return this.trustStoreArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TrustStore(java.lang.String name) {
        this(name, TrustStoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TrustStore(java.lang.String name, @Nullable TrustStoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TrustStore(java.lang.String name, @Nullable TrustStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:workspacesweb/trustStore:TrustStore", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TrustStore(java.lang.String name, Output<java.lang.String> id, @Nullable TrustStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:workspacesweb/trustStore:TrustStore", name, state, makeResourceOptions(options, id), false);
    }

    private static TrustStoreArgs makeArgs(@Nullable TrustStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TrustStoreArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TrustStore get(java.lang.String name, Output<java.lang.String> id, @Nullable TrustStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TrustStore(name, id, state, options);
    }
}
