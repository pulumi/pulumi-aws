// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetContainerRecipeComponent;
import com.pulumi.aws.imagebuilder.outputs.GetContainerRecipeInstanceConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetContainerRecipeTargetRepository;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerRecipeResult {
    private String arn;
    /**
     * @return List of objects with components for the container recipe.
     * 
     */
    private @Nullable List<GetContainerRecipeComponent> components;
    /**
     * @return Type of the container.
     * 
     */
    private @Nullable String containerType;
    /**
     * @return Date the container recipe was created.
     * 
     */
    private @Nullable String dateCreated;
    /**
     * @return Description of the container recipe.
     * 
     */
    private @Nullable String description;
    /**
     * @return Dockerfile template used to build the image.
     * 
     */
    private @Nullable String dockerfileTemplateData;
    /**
     * @return Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    private @Nullable Boolean encrypted;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return List of objects with instance configurations for building and testing container images.
     * 
     */
    private @Nullable List<GetContainerRecipeInstanceConfiguration> instanceConfigurations;
    /**
     * @return KMS key used to encrypt the container image.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return Name of the container recipe.
     * 
     */
    private @Nullable String name;
    /**
     * @return Owner of the container recipe.
     * 
     */
    private @Nullable String owner;
    /**
     * @return Base image for the container recipe.
     * 
     */
    private @Nullable String parentImage;
    /**
     * @return Platform of the container recipe.
     * 
     */
    private @Nullable String platform;
    /**
     * @return Key-value map of resource tags for the container recipe.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Destination repository for the container image.
     * 
     */
    private @Nullable List<GetContainerRecipeTargetRepository> targetRepositories;
    /**
     * @return Version of the container recipe.
     * 
     */
    private @Nullable String version;
    /**
     * @return Working directory used during build and test workflows.
     * 
     */
    private @Nullable String workingDirectory;

    private GetContainerRecipeResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return List of objects with components for the container recipe.
     * 
     */
    public List<GetContainerRecipeComponent> components() {
        return this.components == null ? List.of() : this.components;
    }
    /**
     * @return Type of the container.
     * 
     */
    public Optional<String> containerType() {
        return Optional.ofNullable(this.containerType);
    }
    /**
     * @return Date the container recipe was created.
     * 
     */
    public Optional<String> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }
    /**
     * @return Description of the container recipe.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Dockerfile template used to build the image.
     * 
     */
    public Optional<String> dockerfileTemplateData() {
        return Optional.ofNullable(this.dockerfileTemplateData);
    }
    /**
     * @return Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    public Optional<Boolean> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return List of objects with instance configurations for building and testing container images.
     * 
     */
    public List<GetContainerRecipeInstanceConfiguration> instanceConfigurations() {
        return this.instanceConfigurations == null ? List.of() : this.instanceConfigurations;
    }
    /**
     * @return KMS key used to encrypt the container image.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return Name of the container recipe.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Owner of the container recipe.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Base image for the container recipe.
     * 
     */
    public Optional<String> parentImage() {
        return Optional.ofNullable(this.parentImage);
    }
    /**
     * @return Platform of the container recipe.
     * 
     */
    public Optional<String> platform() {
        return Optional.ofNullable(this.platform);
    }
    /**
     * @return Key-value map of resource tags for the container recipe.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Destination repository for the container image.
     * 
     */
    public List<GetContainerRecipeTargetRepository> targetRepositories() {
        return this.targetRepositories == null ? List.of() : this.targetRepositories;
    }
    /**
     * @return Version of the container recipe.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return Working directory used during build and test workflows.
     * 
     */
    public Optional<String> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerRecipeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private @Nullable List<GetContainerRecipeComponent> components;
        private @Nullable String containerType;
        private @Nullable String dateCreated;
        private @Nullable String description;
        private @Nullable String dockerfileTemplateData;
        private @Nullable Boolean encrypted;
        private @Nullable String id;
        private @Nullable List<GetContainerRecipeInstanceConfiguration> instanceConfigurations;
        private @Nullable String kmsKeyId;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable String parentImage;
        private @Nullable String platform;
        private @Nullable Map<String,String> tags;
        private @Nullable List<GetContainerRecipeTargetRepository> targetRepositories;
        private @Nullable String version;
        private @Nullable String workingDirectory;
        public Builder() {}
        public Builder(GetContainerRecipeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.components = defaults.components;
    	      this.containerType = defaults.containerType;
    	      this.dateCreated = defaults.dateCreated;
    	      this.description = defaults.description;
    	      this.dockerfileTemplateData = defaults.dockerfileTemplateData;
    	      this.encrypted = defaults.encrypted;
    	      this.id = defaults.id;
    	      this.instanceConfigurations = defaults.instanceConfigurations;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.parentImage = defaults.parentImage;
    	      this.platform = defaults.platform;
    	      this.tags = defaults.tags;
    	      this.targetRepositories = defaults.targetRepositories;
    	      this.version = defaults.version;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder components(@Nullable List<GetContainerRecipeComponent> components) {
            this.components = components;
            return this;
        }
        public Builder components(GetContainerRecipeComponent... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder containerType(@Nullable String containerType) {
            this.containerType = containerType;
            return this;
        }
        @CustomType.Setter
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder dockerfileTemplateData(@Nullable String dockerfileTemplateData) {
            this.dockerfileTemplateData = dockerfileTemplateData;
            return this;
        }
        @CustomType.Setter
        public Builder encrypted(@Nullable Boolean encrypted) {
            this.encrypted = encrypted;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceConfigurations(@Nullable List<GetContainerRecipeInstanceConfiguration> instanceConfigurations) {
            this.instanceConfigurations = instanceConfigurations;
            return this;
        }
        public Builder instanceConfigurations(GetContainerRecipeInstanceConfiguration... instanceConfigurations) {
            return instanceConfigurations(List.of(instanceConfigurations));
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder parentImage(@Nullable String parentImage) {
            this.parentImage = parentImage;
            return this;
        }
        @CustomType.Setter
        public Builder platform(@Nullable String platform) {
            this.platform = platform;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetRepositories(@Nullable List<GetContainerRecipeTargetRepository> targetRepositories) {
            this.targetRepositories = targetRepositories;
            return this;
        }
        public Builder targetRepositories(GetContainerRecipeTargetRepository... targetRepositories) {
            return targetRepositories(List.of(targetRepositories));
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(@Nullable String workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }
        public GetContainerRecipeResult build() {
            final var o = new GetContainerRecipeResult();
            o.arn = arn;
            o.components = components;
            o.containerType = containerType;
            o.dateCreated = dateCreated;
            o.description = description;
            o.dockerfileTemplateData = dockerfileTemplateData;
            o.encrypted = encrypted;
            o.id = id;
            o.instanceConfigurations = instanceConfigurations;
            o.kmsKeyId = kmsKeyId;
            o.name = name;
            o.owner = owner;
            o.parentImage = parentImage;
            o.platform = platform;
            o.tags = tags;
            o.targetRepositories = targetRepositories;
            o.version = version;
            o.workingDirectory = workingDirectory;
            return o;
        }
    }
}
