// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.outputs;

import com.pulumi.aws.cloudwatch.outputs.GetContributorManagedInsightRulesManagedRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContributorManagedInsightRulesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Managed rules that are available for the specified Amazon Web Services resource. See `managed_rules reference` below for details.
     * 
     */
    private List<GetContributorManagedInsightRulesManagedRule> managedRules;
    /**
     * @return If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource.
     * 
     */
    private String resourceArn;

    private GetContributorManagedInsightRulesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Managed rules that are available for the specified Amazon Web Services resource. See `managed_rules reference` below for details.
     * 
     */
    public List<GetContributorManagedInsightRulesManagedRule> managedRules() {
        return this.managedRules;
    }
    /**
     * @return If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource.
     * 
     */
    public String resourceArn() {
        return this.resourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContributorManagedInsightRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetContributorManagedInsightRulesManagedRule> managedRules;
        private String resourceArn;
        public Builder() {}
        public Builder(GetContributorManagedInsightRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.managedRules = defaults.managedRules;
    	      this.resourceArn = defaults.resourceArn;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedRules(List<GetContributorManagedInsightRulesManagedRule> managedRules) {
            if (managedRules == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesResult", "managedRules");
            }
            this.managedRules = managedRules;
            return this;
        }
        public Builder managedRules(GetContributorManagedInsightRulesManagedRule... managedRules) {
            return managedRules(List.of(managedRules));
        }
        @CustomType.Setter
        public Builder resourceArn(String resourceArn) {
            if (resourceArn == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesResult", "resourceArn");
            }
            this.resourceArn = resourceArn;
            return this;
        }
        public GetContributorManagedInsightRulesResult build() {
            final var _resultValue = new GetContributorManagedInsightRulesResult();
            _resultValue.id = id;
            _resultValue.managedRules = managedRules;
            _resultValue.resourceArn = resourceArn;
            return _resultValue;
        }
    }
}
