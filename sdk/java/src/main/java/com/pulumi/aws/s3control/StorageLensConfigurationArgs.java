// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control;

import com.pulumi.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageLensConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageLensConfigurationArgs Empty = new StorageLensConfigurationArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="configId", required=true)
    private Output<String> configId;

    public Output<String> configId() {
        return this.configId;
    }

    @Import(name="storageLensConfiguration", required=true)
    private Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration;

    public Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration() {
        return this.storageLensConfiguration;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StorageLensConfigurationArgs() {}

    private StorageLensConfigurationArgs(StorageLensConfigurationArgs $) {
        this.accountId = $.accountId;
        this.configId = $.configId;
        this.storageLensConfiguration = $.storageLensConfiguration;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageLensConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageLensConfigurationArgs $;

        public Builder() {
            $ = new StorageLensConfigurationArgs();
        }

        public Builder(StorageLensConfigurationArgs defaults) {
            $ = new StorageLensConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder configId(Output<String> configId) {
            $.configId = configId;
            return this;
        }

        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        public Builder storageLensConfiguration(Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration) {
            $.storageLensConfiguration = storageLensConfiguration;
            return this;
        }

        public Builder storageLensConfiguration(StorageLensConfigurationStorageLensConfigurationArgs storageLensConfiguration) {
            return storageLensConfiguration(Output.of(storageLensConfiguration));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StorageLensConfigurationArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            $.storageLensConfiguration = Objects.requireNonNull($.storageLensConfiguration, "expected parameter 'storageLensConfiguration' to be non-null");
            return $;
        }
    }

}
