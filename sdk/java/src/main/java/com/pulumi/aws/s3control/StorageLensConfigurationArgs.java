// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control;

import com.pulumi.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageLensConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageLensConfigurationArgs Empty = new StorageLensConfigurationArgs();

    /**
     * The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The ID of the S3 Storage Lens configuration.
     * 
     */
    @Import(name="configId", required=true)
    private Output<String> configId;

    /**
     * @return The ID of the S3 Storage Lens configuration.
     * 
     */
    public Output<String> configId() {
        return this.configId;
    }

    /**
     * The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
     * 
     */
    @Import(name="storageLensConfiguration", required=true)
    private Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration;

    /**
     * @return The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
     * 
     */
    public Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration() {
        return this.storageLensConfiguration;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StorageLensConfigurationArgs() {}

    private StorageLensConfigurationArgs(StorageLensConfigurationArgs $) {
        this.accountId = $.accountId;
        this.configId = $.configId;
        this.storageLensConfiguration = $.storageLensConfiguration;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageLensConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageLensConfigurationArgs $;

        public Builder() {
            $ = new StorageLensConfigurationArgs();
        }

        public Builder(StorageLensConfigurationArgs defaults) {
            $ = new StorageLensConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param configId The ID of the S3 Storage Lens configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId The ID of the S3 Storage Lens configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param storageLensConfiguration The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder storageLensConfiguration(Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration) {
            $.storageLensConfiguration = storageLensConfiguration;
            return this;
        }

        /**
         * @param storageLensConfiguration The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder storageLensConfiguration(StorageLensConfigurationStorageLensConfigurationArgs storageLensConfiguration) {
            return storageLensConfiguration(Output.of(storageLensConfiguration));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StorageLensConfigurationArgs build() {
            if ($.configId == null) {
                throw new MissingRequiredPropertyException("StorageLensConfigurationArgs", "configId");
            }
            if ($.storageLensConfiguration == null) {
                throw new MissingRequiredPropertyException("StorageLensConfigurationArgs", "storageLensConfiguration");
            }
            return $;
        }
    }

}
