// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bcmdata.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs Empty = new ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs();

    /**
     * Compression type for the data export. Valid values `GZIP`, `PARQUET`.
     * 
     */
    @Import(name="compression", required=true)
    private Output<String> compression;

    /**
     * @return Compression type for the data export. Valid values `GZIP`, `PARQUET`.
     * 
     */
    public Output<String> compression() {
        return this.compression;
    }

    /**
     * File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
     * 
     */
    @Import(name="format", required=true)
    private Output<String> format;

    /**
     * @return File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
     * 
     */
    public Output<String> format() {
        return this.format;
    }

    /**
     * Output type for the data export. Valid value `CUSTOM`.
     * 
     */
    @Import(name="outputType", required=true)
    private Output<String> outputType;

    /**
     * @return Output type for the data export. Valid value `CUSTOM`.
     * 
     */
    public Output<String> outputType() {
        return this.outputType;
    }

    /**
     * The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
     * 
     */
    @Import(name="overwrite", required=true)
    private Output<String> overwrite;

    /**
     * @return The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
     * 
     */
    public Output<String> overwrite() {
        return this.overwrite;
    }

    private ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs() {}

    private ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs $) {
        this.compression = $.compression;
        this.format = $.format;
        this.outputType = $.outputType;
        this.overwrite = $.overwrite;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs $;

        public Builder() {
            $ = new ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs();
        }

        public Builder(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs defaults) {
            $ = new ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compression Compression type for the data export. Valid values `GZIP`, `PARQUET`.
         * 
         * @return builder
         * 
         */
        public Builder compression(Output<String> compression) {
            $.compression = compression;
            return this;
        }

        /**
         * @param compression Compression type for the data export. Valid values `GZIP`, `PARQUET`.
         * 
         * @return builder
         * 
         */
        public Builder compression(String compression) {
            return compression(Output.of(compression));
        }

        /**
         * @param format File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
         * 
         * @return builder
         * 
         */
        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Output.of(format));
        }

        /**
         * @param outputType Output type for the data export. Valid value `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder outputType(Output<String> outputType) {
            $.outputType = outputType;
            return this;
        }

        /**
         * @param outputType Output type for the data export. Valid value `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder outputType(String outputType) {
            return outputType(Output.of(outputType));
        }

        /**
         * @param overwrite The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
         * 
         * @return builder
         * 
         */
        public Builder overwrite(Output<String> overwrite) {
            $.overwrite = overwrite;
            return this;
        }

        /**
         * @param overwrite The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
         * 
         * @return builder
         * 
         */
        public Builder overwrite(String overwrite) {
            return overwrite(Output.of(overwrite));
        }

        public ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs build() {
            if ($.compression == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs", "compression");
            }
            if ($.format == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs", "format");
            }
            if ($.outputType == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs", "outputType");
            }
            if ($.overwrite == null) {
                throw new MissingRequiredPropertyException("ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs", "overwrite");
            }
            return $;
        }
    }

}
