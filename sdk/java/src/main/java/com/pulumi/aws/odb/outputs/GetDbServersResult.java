// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.aws.odb.outputs.GetDbServersDbServer;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbServersResult {
    private String cloudExadataInfrastructureId;
    /**
     * @return the list of DB servers along with their properties.
     * 
     */
    private List<GetDbServersDbServer> dbServers;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String region;

    private GetDbServersResult() {}
    public String cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }
    /**
     * @return the list of DB servers along with their properties.
     * 
     */
    public List<GetDbServersDbServer> dbServers() {
        return this.dbServers;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudExadataInfrastructureId;
        private List<GetDbServersDbServer> dbServers;
        private String id;
        private String region;
        public Builder() {}
        public Builder(GetDbServersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudExadataInfrastructureId = defaults.cloudExadataInfrastructureId;
    	      this.dbServers = defaults.dbServers;
    	      this.id = defaults.id;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            if (cloudExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "cloudExadataInfrastructureId");
            }
            this.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<GetDbServersDbServer> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(GetDbServersDbServer... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "region");
            }
            this.region = region;
            return this;
        }
        public GetDbServersResult build() {
            final var _resultValue = new GetDbServersResult();
            _resultValue.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            _resultValue.dbServers = dbServers;
            _resultValue.id = id;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
