// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.FeatureGroupOnlineStoreConfigSecurityConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureGroupOnlineStoreConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureGroupOnlineStoreConfigArgs Empty = new FeatureGroupOnlineStoreConfigArgs();

    /**
     * Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
     * 
     */
    @Import(name="enableOnlineStore")
    private @Nullable Output<Boolean> enableOnlineStore;

    /**
     * @return Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
     * 
     */
    public Optional<Output<Boolean>> enableOnlineStore() {
        return Optional.ofNullable(this.enableOnlineStore);
    }

    /**
     * Security config for at-rest encryption of your OnlineStore. See Security Config Below.
     * 
     */
    @Import(name="securityConfig")
    private @Nullable Output<FeatureGroupOnlineStoreConfigSecurityConfigArgs> securityConfig;

    /**
     * @return Security config for at-rest encryption of your OnlineStore. See Security Config Below.
     * 
     */
    public Optional<Output<FeatureGroupOnlineStoreConfigSecurityConfigArgs>> securityConfig() {
        return Optional.ofNullable(this.securityConfig);
    }

    private FeatureGroupOnlineStoreConfigArgs() {}

    private FeatureGroupOnlineStoreConfigArgs(FeatureGroupOnlineStoreConfigArgs $) {
        this.enableOnlineStore = $.enableOnlineStore;
        this.securityConfig = $.securityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureGroupOnlineStoreConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureGroupOnlineStoreConfigArgs $;

        public Builder() {
            $ = new FeatureGroupOnlineStoreConfigArgs();
        }

        public Builder(FeatureGroupOnlineStoreConfigArgs defaults) {
            $ = new FeatureGroupOnlineStoreConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableOnlineStore Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
         * 
         * @return builder
         * 
         */
        public Builder enableOnlineStore(@Nullable Output<Boolean> enableOnlineStore) {
            $.enableOnlineStore = enableOnlineStore;
            return this;
        }

        /**
         * @param enableOnlineStore Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
         * 
         * @return builder
         * 
         */
        public Builder enableOnlineStore(Boolean enableOnlineStore) {
            return enableOnlineStore(Output.of(enableOnlineStore));
        }

        /**
         * @param securityConfig Security config for at-rest encryption of your OnlineStore. See Security Config Below.
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(@Nullable Output<FeatureGroupOnlineStoreConfigSecurityConfigArgs> securityConfig) {
            $.securityConfig = securityConfig;
            return this;
        }

        /**
         * @param securityConfig Security config for at-rest encryption of your OnlineStore. See Security Config Below.
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(FeatureGroupOnlineStoreConfigSecurityConfigArgs securityConfig) {
            return securityConfig(Output.of(securityConfig));
        }

        public FeatureGroupOnlineStoreConfigArgs build() {
            return $;
        }
    }

}
