// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.GetWindowsFileSystemAuditLogConfiguration;
import com.pulumi.aws.fsx.outputs.GetWindowsFileSystemDiskIopsConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWindowsFileSystemResult {
    /**
     * @return The ID for Microsoft Active Directory instance that the file system is join to.
     * 
     */
    private @Nullable String activeDirectoryId;
    /**
     * @return An array DNS alias names associated with the Amazon FSx file system.
     * 
     */
    private @Nullable List<String> aliases;
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system.
     * 
     */
    private @Nullable List<GetWindowsFileSystemAuditLogConfiguration> auditLogConfigurations;
    /**
     * @return The number of days to retain automatic backups.
     * 
     */
    private @Nullable Integer automaticBackupRetentionDays;
    private @Nullable String backupId;
    /**
     * @return A boolean flag indicating whether tags on the file system should be copied to backups.
     * 
     */
    private @Nullable Boolean copyTagsToBackups;
    /**
     * @return The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    private @Nullable String dailyAutomaticBackupStartTime;
    /**
     * @return The file system deployment type.
     * 
     */
    private @Nullable String deploymentType;
    /**
     * @return The SSD IOPS configuration for the file system.
     * 
     */
    private @Nullable List<GetWindowsFileSystemDiskIopsConfiguration> diskIopsConfigurations;
    /**
     * @return DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return Identifier of the file system (e.g. `fs-12345678`).
     * 
     */
    private String id;
    /**
     * @return ARN for the KMS Key to encrypt the file system at rest.
     * 
     */
    private @Nullable String kmsKeyId;
    private @Nullable List<String> networkInterfaceIds;
    /**
     * @return AWS account identifier that created the file system.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return The IP address of the primary, or preferred, file server.
     * 
     */
    private @Nullable String preferredFileServerIp;
    /**
     * @return Specifies the subnet in which you want the preferred file server to be located.
     * 
     */
    private @Nullable String preferredSubnetId;
    private @Nullable List<String> securityGroupIds;
    private @Nullable Boolean skipFinalBackup;
    /**
     * @return The storage capacity of the file system in gibibytes (GiB).
     * 
     */
    private @Nullable Integer storageCapacity;
    /**
     * @return The type of storage the file system is using. If set to `SSD`, the file system uses solid state drive storage. If set to `HDD`, the file system uses hard disk drive storage.
     * 
     */
    private @Nullable String storageType;
    /**
     * @return Specifies the IDs of the subnets that the file system is accessible from.
     * 
     */
    private @Nullable List<String> subnetIds;
    /**
     * @return The tags to associate with the file system.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `8` and maximum of `2048`.
     * 
     */
    private @Nullable Integer throughputCapacity;
    /**
     * @return The ID of the primary virtual private cloud (VPC) for the file system.
     * 
     */
    private @Nullable String vpcId;
    /**
     * @return The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    private @Nullable String weeklyMaintenanceStartTime;

    private GetWindowsFileSystemResult() {}
    /**
     * @return The ID for Microsoft Active Directory instance that the file system is join to.
     * 
     */
    public Optional<String> activeDirectoryId() {
        return Optional.ofNullable(this.activeDirectoryId);
    }
    /**
     * @return An array DNS alias names associated with the Amazon FSx file system.
     * 
     */
    public List<String> aliases() {
        return this.aliases == null ? List.of() : this.aliases;
    }
    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system.
     * 
     */
    public List<GetWindowsFileSystemAuditLogConfiguration> auditLogConfigurations() {
        return this.auditLogConfigurations == null ? List.of() : this.auditLogConfigurations;
    }
    /**
     * @return The number of days to retain automatic backups.
     * 
     */
    public Optional<Integer> automaticBackupRetentionDays() {
        return Optional.ofNullable(this.automaticBackupRetentionDays);
    }
    public Optional<String> backupId() {
        return Optional.ofNullable(this.backupId);
    }
    /**
     * @return A boolean flag indicating whether tags on the file system should be copied to backups.
     * 
     */
    public Optional<Boolean> copyTagsToBackups() {
        return Optional.ofNullable(this.copyTagsToBackups);
    }
    /**
     * @return The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    public Optional<String> dailyAutomaticBackupStartTime() {
        return Optional.ofNullable(this.dailyAutomaticBackupStartTime);
    }
    /**
     * @return The file system deployment type.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return The SSD IOPS configuration for the file system.
     * 
     */
    public List<GetWindowsFileSystemDiskIopsConfiguration> diskIopsConfigurations() {
        return this.diskIopsConfigurations == null ? List.of() : this.diskIopsConfigurations;
    }
    /**
     * @return DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return Identifier of the file system (e.g. `fs-12345678`).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ARN for the KMS Key to encrypt the file system at rest.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public List<String> networkInterfaceIds() {
        return this.networkInterfaceIds == null ? List.of() : this.networkInterfaceIds;
    }
    /**
     * @return AWS account identifier that created the file system.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return The IP address of the primary, or preferred, file server.
     * 
     */
    public Optional<String> preferredFileServerIp() {
        return Optional.ofNullable(this.preferredFileServerIp);
    }
    /**
     * @return Specifies the subnet in which you want the preferred file server to be located.
     * 
     */
    public Optional<String> preferredSubnetId() {
        return Optional.ofNullable(this.preferredSubnetId);
    }
    public List<String> securityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }
    public Optional<Boolean> skipFinalBackup() {
        return Optional.ofNullable(this.skipFinalBackup);
    }
    /**
     * @return The storage capacity of the file system in gibibytes (GiB).
     * 
     */
    public Optional<Integer> storageCapacity() {
        return Optional.ofNullable(this.storageCapacity);
    }
    /**
     * @return The type of storage the file system is using. If set to `SSD`, the file system uses solid state drive storage. If set to `HDD`, the file system uses hard disk drive storage.
     * 
     */
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }
    /**
     * @return Specifies the IDs of the subnets that the file system is accessible from.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds == null ? List.of() : this.subnetIds;
    }
    /**
     * @return The tags to associate with the file system.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `8` and maximum of `2048`.
     * 
     */
    public Optional<Integer> throughputCapacity() {
        return Optional.ofNullable(this.throughputCapacity);
    }
    /**
     * @return The ID of the primary virtual private cloud (VPC) for the file system.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    public Optional<String> weeklyMaintenanceStartTime() {
        return Optional.ofNullable(this.weeklyMaintenanceStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWindowsFileSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activeDirectoryId;
        private @Nullable List<String> aliases;
        private @Nullable String arn;
        private @Nullable List<GetWindowsFileSystemAuditLogConfiguration> auditLogConfigurations;
        private @Nullable Integer automaticBackupRetentionDays;
        private @Nullable String backupId;
        private @Nullable Boolean copyTagsToBackups;
        private @Nullable String dailyAutomaticBackupStartTime;
        private @Nullable String deploymentType;
        private @Nullable List<GetWindowsFileSystemDiskIopsConfiguration> diskIopsConfigurations;
        private @Nullable String dnsName;
        private String id;
        private @Nullable String kmsKeyId;
        private @Nullable List<String> networkInterfaceIds;
        private @Nullable String ownerId;
        private @Nullable String preferredFileServerIp;
        private @Nullable String preferredSubnetId;
        private @Nullable List<String> securityGroupIds;
        private @Nullable Boolean skipFinalBackup;
        private @Nullable Integer storageCapacity;
        private @Nullable String storageType;
        private @Nullable List<String> subnetIds;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer throughputCapacity;
        private @Nullable String vpcId;
        private @Nullable String weeklyMaintenanceStartTime;
        public Builder() {}
        public Builder(GetWindowsFileSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryId = defaults.activeDirectoryId;
    	      this.aliases = defaults.aliases;
    	      this.arn = defaults.arn;
    	      this.auditLogConfigurations = defaults.auditLogConfigurations;
    	      this.automaticBackupRetentionDays = defaults.automaticBackupRetentionDays;
    	      this.backupId = defaults.backupId;
    	      this.copyTagsToBackups = defaults.copyTagsToBackups;
    	      this.dailyAutomaticBackupStartTime = defaults.dailyAutomaticBackupStartTime;
    	      this.deploymentType = defaults.deploymentType;
    	      this.diskIopsConfigurations = defaults.diskIopsConfigurations;
    	      this.dnsName = defaults.dnsName;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.networkInterfaceIds = defaults.networkInterfaceIds;
    	      this.ownerId = defaults.ownerId;
    	      this.preferredFileServerIp = defaults.preferredFileServerIp;
    	      this.preferredSubnetId = defaults.preferredSubnetId;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.skipFinalBackup = defaults.skipFinalBackup;
    	      this.storageCapacity = defaults.storageCapacity;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.throughputCapacity = defaults.throughputCapacity;
    	      this.vpcId = defaults.vpcId;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        @CustomType.Setter
        public Builder activeDirectoryId(@Nullable String activeDirectoryId) {
            this.activeDirectoryId = activeDirectoryId;
            return this;
        }
        @CustomType.Setter
        public Builder aliases(@Nullable List<String> aliases) {
            this.aliases = aliases;
            return this;
        }
        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder auditLogConfigurations(@Nullable List<GetWindowsFileSystemAuditLogConfiguration> auditLogConfigurations) {
            this.auditLogConfigurations = auditLogConfigurations;
            return this;
        }
        public Builder auditLogConfigurations(GetWindowsFileSystemAuditLogConfiguration... auditLogConfigurations) {
            return auditLogConfigurations(List.of(auditLogConfigurations));
        }
        @CustomType.Setter
        public Builder automaticBackupRetentionDays(@Nullable Integer automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder backupId(@Nullable String backupId) {
            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder copyTagsToBackups(@Nullable Boolean copyTagsToBackups) {
            this.copyTagsToBackups = copyTagsToBackups;
            return this;
        }
        @CustomType.Setter
        public Builder dailyAutomaticBackupStartTime(@Nullable String dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder diskIopsConfigurations(@Nullable List<GetWindowsFileSystemDiskIopsConfiguration> diskIopsConfigurations) {
            this.diskIopsConfigurations = diskIopsConfigurations;
            return this;
        }
        public Builder diskIopsConfigurations(GetWindowsFileSystemDiskIopsConfiguration... diskIopsConfigurations) {
            return diskIopsConfigurations(List.of(diskIopsConfigurations));
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceIds(@Nullable List<String> networkInterfaceIds) {
            this.networkInterfaceIds = networkInterfaceIds;
            return this;
        }
        public Builder networkInterfaceIds(String... networkInterfaceIds) {
            return networkInterfaceIds(List.of(networkInterfaceIds));
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder preferredFileServerIp(@Nullable String preferredFileServerIp) {
            this.preferredFileServerIp = preferredFileServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder preferredSubnetId(@Nullable String preferredSubnetId) {
            this.preferredSubnetId = preferredSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder skipFinalBackup(@Nullable Boolean skipFinalBackup) {
            this.skipFinalBackup = skipFinalBackup;
            return this;
        }
        @CustomType.Setter
        public Builder storageCapacity(@Nullable Integer storageCapacity) {
            this.storageCapacity = storageCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {
            this.storageType = storageType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder throughputCapacity(@Nullable Integer throughputCapacity) {
            this.throughputCapacity = throughputCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder weeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }
        public GetWindowsFileSystemResult build() {
            final var o = new GetWindowsFileSystemResult();
            o.activeDirectoryId = activeDirectoryId;
            o.aliases = aliases;
            o.arn = arn;
            o.auditLogConfigurations = auditLogConfigurations;
            o.automaticBackupRetentionDays = automaticBackupRetentionDays;
            o.backupId = backupId;
            o.copyTagsToBackups = copyTagsToBackups;
            o.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            o.deploymentType = deploymentType;
            o.diskIopsConfigurations = diskIopsConfigurations;
            o.dnsName = dnsName;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.networkInterfaceIds = networkInterfaceIds;
            o.ownerId = ownerId;
            o.preferredFileServerIp = preferredFileServerIp;
            o.preferredSubnetId = preferredSubnetId;
            o.securityGroupIds = securityGroupIds;
            o.skipFinalBackup = skipFinalBackup;
            o.storageCapacity = storageCapacity;
            o.storageType = storageType;
            o.subnetIds = subnetIds;
            o.tags = tags;
            o.throughputCapacity = throughputCapacity;
            o.vpcId = vpcId;
            o.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return o;
        }
    }
}
