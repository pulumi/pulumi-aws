// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.VpnConnectionTunnel1LogOptionsArgs;
import com.pulumi.aws.ec2.inputs.VpnConnectionTunnel2LogOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnConnectionArgs Empty = new VpnConnectionArgs();

    @Import(name="customerGatewayId", required=true)
    private Output<String> customerGatewayId;

    public Output<String> customerGatewayId() {
        return this.customerGatewayId;
    }

    @Import(name="enableAcceleration")
    private @Nullable Output<Boolean> enableAcceleration;

    public Optional<Output<Boolean>> enableAcceleration() {
        return Optional.ofNullable(this.enableAcceleration);
    }

    @Import(name="localIpv4NetworkCidr")
    private @Nullable Output<String> localIpv4NetworkCidr;

    public Optional<Output<String>> localIpv4NetworkCidr() {
        return Optional.ofNullable(this.localIpv4NetworkCidr);
    }

    @Import(name="localIpv6NetworkCidr")
    private @Nullable Output<String> localIpv6NetworkCidr;

    public Optional<Output<String>> localIpv6NetworkCidr() {
        return Optional.ofNullable(this.localIpv6NetworkCidr);
    }

    @Import(name="outsideIpAddressType")
    private @Nullable Output<String> outsideIpAddressType;

    public Optional<Output<String>> outsideIpAddressType() {
        return Optional.ofNullable(this.outsideIpAddressType);
    }

    @Import(name="remoteIpv4NetworkCidr")
    private @Nullable Output<String> remoteIpv4NetworkCidr;

    public Optional<Output<String>> remoteIpv4NetworkCidr() {
        return Optional.ofNullable(this.remoteIpv4NetworkCidr);
    }

    @Import(name="remoteIpv6NetworkCidr")
    private @Nullable Output<String> remoteIpv6NetworkCidr;

    public Optional<Output<String>> remoteIpv6NetworkCidr() {
        return Optional.ofNullable(this.remoteIpv6NetworkCidr);
    }

    @Import(name="staticRoutesOnly")
    private @Nullable Output<Boolean> staticRoutesOnly;

    public Optional<Output<Boolean>> staticRoutesOnly() {
        return Optional.ofNullable(this.staticRoutesOnly);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="transitGatewayId")
    private @Nullable Output<String> transitGatewayId;

    public Optional<Output<String>> transitGatewayId() {
        return Optional.ofNullable(this.transitGatewayId);
    }

    @Import(name="transportTransitGatewayAttachmentId")
    private @Nullable Output<String> transportTransitGatewayAttachmentId;

    public Optional<Output<String>> transportTransitGatewayAttachmentId() {
        return Optional.ofNullable(this.transportTransitGatewayAttachmentId);
    }

    @Import(name="tunnel1DpdTimeoutAction")
    private @Nullable Output<String> tunnel1DpdTimeoutAction;

    public Optional<Output<String>> tunnel1DpdTimeoutAction() {
        return Optional.ofNullable(this.tunnel1DpdTimeoutAction);
    }

    @Import(name="tunnel1DpdTimeoutSeconds")
    private @Nullable Output<Integer> tunnel1DpdTimeoutSeconds;

    public Optional<Output<Integer>> tunnel1DpdTimeoutSeconds() {
        return Optional.ofNullable(this.tunnel1DpdTimeoutSeconds);
    }

    @Import(name="tunnel1IkeVersions")
    private @Nullable Output<List<String>> tunnel1IkeVersions;

    public Optional<Output<List<String>>> tunnel1IkeVersions() {
        return Optional.ofNullable(this.tunnel1IkeVersions);
    }

    @Import(name="tunnel1InsideCidr")
    private @Nullable Output<String> tunnel1InsideCidr;

    public Optional<Output<String>> tunnel1InsideCidr() {
        return Optional.ofNullable(this.tunnel1InsideCidr);
    }

    @Import(name="tunnel1InsideIpv6Cidr")
    private @Nullable Output<String> tunnel1InsideIpv6Cidr;

    public Optional<Output<String>> tunnel1InsideIpv6Cidr() {
        return Optional.ofNullable(this.tunnel1InsideIpv6Cidr);
    }

    @Import(name="tunnel1LogOptions")
    private @Nullable Output<VpnConnectionTunnel1LogOptionsArgs> tunnel1LogOptions;

    public Optional<Output<VpnConnectionTunnel1LogOptionsArgs>> tunnel1LogOptions() {
        return Optional.ofNullable(this.tunnel1LogOptions);
    }

    @Import(name="tunnel1Phase1DhGroupNumbers")
    private @Nullable Output<List<Integer>> tunnel1Phase1DhGroupNumbers;

    public Optional<Output<List<Integer>>> tunnel1Phase1DhGroupNumbers() {
        return Optional.ofNullable(this.tunnel1Phase1DhGroupNumbers);
    }

    @Import(name="tunnel1Phase1EncryptionAlgorithms")
    private @Nullable Output<List<String>> tunnel1Phase1EncryptionAlgorithms;

    public Optional<Output<List<String>>> tunnel1Phase1EncryptionAlgorithms() {
        return Optional.ofNullable(this.tunnel1Phase1EncryptionAlgorithms);
    }

    @Import(name="tunnel1Phase1IntegrityAlgorithms")
    private @Nullable Output<List<String>> tunnel1Phase1IntegrityAlgorithms;

    public Optional<Output<List<String>>> tunnel1Phase1IntegrityAlgorithms() {
        return Optional.ofNullable(this.tunnel1Phase1IntegrityAlgorithms);
    }

    @Import(name="tunnel1Phase1LifetimeSeconds")
    private @Nullable Output<Integer> tunnel1Phase1LifetimeSeconds;

    public Optional<Output<Integer>> tunnel1Phase1LifetimeSeconds() {
        return Optional.ofNullable(this.tunnel1Phase1LifetimeSeconds);
    }

    @Import(name="tunnel1Phase2DhGroupNumbers")
    private @Nullable Output<List<Integer>> tunnel1Phase2DhGroupNumbers;

    public Optional<Output<List<Integer>>> tunnel1Phase2DhGroupNumbers() {
        return Optional.ofNullable(this.tunnel1Phase2DhGroupNumbers);
    }

    @Import(name="tunnel1Phase2EncryptionAlgorithms")
    private @Nullable Output<List<String>> tunnel1Phase2EncryptionAlgorithms;

    public Optional<Output<List<String>>> tunnel1Phase2EncryptionAlgorithms() {
        return Optional.ofNullable(this.tunnel1Phase2EncryptionAlgorithms);
    }

    @Import(name="tunnel1Phase2IntegrityAlgorithms")
    private @Nullable Output<List<String>> tunnel1Phase2IntegrityAlgorithms;

    public Optional<Output<List<String>>> tunnel1Phase2IntegrityAlgorithms() {
        return Optional.ofNullable(this.tunnel1Phase2IntegrityAlgorithms);
    }

    @Import(name="tunnel1Phase2LifetimeSeconds")
    private @Nullable Output<Integer> tunnel1Phase2LifetimeSeconds;

    public Optional<Output<Integer>> tunnel1Phase2LifetimeSeconds() {
        return Optional.ofNullable(this.tunnel1Phase2LifetimeSeconds);
    }

    @Import(name="tunnel1PresharedKey")
    private @Nullable Output<String> tunnel1PresharedKey;

    public Optional<Output<String>> tunnel1PresharedKey() {
        return Optional.ofNullable(this.tunnel1PresharedKey);
    }

    @Import(name="tunnel1RekeyFuzzPercentage")
    private @Nullable Output<Integer> tunnel1RekeyFuzzPercentage;

    public Optional<Output<Integer>> tunnel1RekeyFuzzPercentage() {
        return Optional.ofNullable(this.tunnel1RekeyFuzzPercentage);
    }

    @Import(name="tunnel1RekeyMarginTimeSeconds")
    private @Nullable Output<Integer> tunnel1RekeyMarginTimeSeconds;

    public Optional<Output<Integer>> tunnel1RekeyMarginTimeSeconds() {
        return Optional.ofNullable(this.tunnel1RekeyMarginTimeSeconds);
    }

    @Import(name="tunnel1ReplayWindowSize")
    private @Nullable Output<Integer> tunnel1ReplayWindowSize;

    public Optional<Output<Integer>> tunnel1ReplayWindowSize() {
        return Optional.ofNullable(this.tunnel1ReplayWindowSize);
    }

    @Import(name="tunnel1StartupAction")
    private @Nullable Output<String> tunnel1StartupAction;

    public Optional<Output<String>> tunnel1StartupAction() {
        return Optional.ofNullable(this.tunnel1StartupAction);
    }

    @Import(name="tunnel2DpdTimeoutAction")
    private @Nullable Output<String> tunnel2DpdTimeoutAction;

    public Optional<Output<String>> tunnel2DpdTimeoutAction() {
        return Optional.ofNullable(this.tunnel2DpdTimeoutAction);
    }

    @Import(name="tunnel2DpdTimeoutSeconds")
    private @Nullable Output<Integer> tunnel2DpdTimeoutSeconds;

    public Optional<Output<Integer>> tunnel2DpdTimeoutSeconds() {
        return Optional.ofNullable(this.tunnel2DpdTimeoutSeconds);
    }

    @Import(name="tunnel2IkeVersions")
    private @Nullable Output<List<String>> tunnel2IkeVersions;

    public Optional<Output<List<String>>> tunnel2IkeVersions() {
        return Optional.ofNullable(this.tunnel2IkeVersions);
    }

    @Import(name="tunnel2InsideCidr")
    private @Nullable Output<String> tunnel2InsideCidr;

    public Optional<Output<String>> tunnel2InsideCidr() {
        return Optional.ofNullable(this.tunnel2InsideCidr);
    }

    @Import(name="tunnel2InsideIpv6Cidr")
    private @Nullable Output<String> tunnel2InsideIpv6Cidr;

    public Optional<Output<String>> tunnel2InsideIpv6Cidr() {
        return Optional.ofNullable(this.tunnel2InsideIpv6Cidr);
    }

    @Import(name="tunnel2LogOptions")
    private @Nullable Output<VpnConnectionTunnel2LogOptionsArgs> tunnel2LogOptions;

    public Optional<Output<VpnConnectionTunnel2LogOptionsArgs>> tunnel2LogOptions() {
        return Optional.ofNullable(this.tunnel2LogOptions);
    }

    @Import(name="tunnel2Phase1DhGroupNumbers")
    private @Nullable Output<List<Integer>> tunnel2Phase1DhGroupNumbers;

    public Optional<Output<List<Integer>>> tunnel2Phase1DhGroupNumbers() {
        return Optional.ofNullable(this.tunnel2Phase1DhGroupNumbers);
    }

    @Import(name="tunnel2Phase1EncryptionAlgorithms")
    private @Nullable Output<List<String>> tunnel2Phase1EncryptionAlgorithms;

    public Optional<Output<List<String>>> tunnel2Phase1EncryptionAlgorithms() {
        return Optional.ofNullable(this.tunnel2Phase1EncryptionAlgorithms);
    }

    @Import(name="tunnel2Phase1IntegrityAlgorithms")
    private @Nullable Output<List<String>> tunnel2Phase1IntegrityAlgorithms;

    public Optional<Output<List<String>>> tunnel2Phase1IntegrityAlgorithms() {
        return Optional.ofNullable(this.tunnel2Phase1IntegrityAlgorithms);
    }

    @Import(name="tunnel2Phase1LifetimeSeconds")
    private @Nullable Output<Integer> tunnel2Phase1LifetimeSeconds;

    public Optional<Output<Integer>> tunnel2Phase1LifetimeSeconds() {
        return Optional.ofNullable(this.tunnel2Phase1LifetimeSeconds);
    }

    @Import(name="tunnel2Phase2DhGroupNumbers")
    private @Nullable Output<List<Integer>> tunnel2Phase2DhGroupNumbers;

    public Optional<Output<List<Integer>>> tunnel2Phase2DhGroupNumbers() {
        return Optional.ofNullable(this.tunnel2Phase2DhGroupNumbers);
    }

    @Import(name="tunnel2Phase2EncryptionAlgorithms")
    private @Nullable Output<List<String>> tunnel2Phase2EncryptionAlgorithms;

    public Optional<Output<List<String>>> tunnel2Phase2EncryptionAlgorithms() {
        return Optional.ofNullable(this.tunnel2Phase2EncryptionAlgorithms);
    }

    @Import(name="tunnel2Phase2IntegrityAlgorithms")
    private @Nullable Output<List<String>> tunnel2Phase2IntegrityAlgorithms;

    public Optional<Output<List<String>>> tunnel2Phase2IntegrityAlgorithms() {
        return Optional.ofNullable(this.tunnel2Phase2IntegrityAlgorithms);
    }

    @Import(name="tunnel2Phase2LifetimeSeconds")
    private @Nullable Output<Integer> tunnel2Phase2LifetimeSeconds;

    public Optional<Output<Integer>> tunnel2Phase2LifetimeSeconds() {
        return Optional.ofNullable(this.tunnel2Phase2LifetimeSeconds);
    }

    @Import(name="tunnel2PresharedKey")
    private @Nullable Output<String> tunnel2PresharedKey;

    public Optional<Output<String>> tunnel2PresharedKey() {
        return Optional.ofNullable(this.tunnel2PresharedKey);
    }

    @Import(name="tunnel2RekeyFuzzPercentage")
    private @Nullable Output<Integer> tunnel2RekeyFuzzPercentage;

    public Optional<Output<Integer>> tunnel2RekeyFuzzPercentage() {
        return Optional.ofNullable(this.tunnel2RekeyFuzzPercentage);
    }

    @Import(name="tunnel2RekeyMarginTimeSeconds")
    private @Nullable Output<Integer> tunnel2RekeyMarginTimeSeconds;

    public Optional<Output<Integer>> tunnel2RekeyMarginTimeSeconds() {
        return Optional.ofNullable(this.tunnel2RekeyMarginTimeSeconds);
    }

    @Import(name="tunnel2ReplayWindowSize")
    private @Nullable Output<Integer> tunnel2ReplayWindowSize;

    public Optional<Output<Integer>> tunnel2ReplayWindowSize() {
        return Optional.ofNullable(this.tunnel2ReplayWindowSize);
    }

    @Import(name="tunnel2StartupAction")
    private @Nullable Output<String> tunnel2StartupAction;

    public Optional<Output<String>> tunnel2StartupAction() {
        return Optional.ofNullable(this.tunnel2StartupAction);
    }

    @Import(name="tunnelInsideIpVersion")
    private @Nullable Output<String> tunnelInsideIpVersion;

    public Optional<Output<String>> tunnelInsideIpVersion() {
        return Optional.ofNullable(this.tunnelInsideIpVersion);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="vpnGatewayId")
    private @Nullable Output<String> vpnGatewayId;

    public Optional<Output<String>> vpnGatewayId() {
        return Optional.ofNullable(this.vpnGatewayId);
    }

    private VpnConnectionArgs() {}

    private VpnConnectionArgs(VpnConnectionArgs $) {
        this.customerGatewayId = $.customerGatewayId;
        this.enableAcceleration = $.enableAcceleration;
        this.localIpv4NetworkCidr = $.localIpv4NetworkCidr;
        this.localIpv6NetworkCidr = $.localIpv6NetworkCidr;
        this.outsideIpAddressType = $.outsideIpAddressType;
        this.remoteIpv4NetworkCidr = $.remoteIpv4NetworkCidr;
        this.remoteIpv6NetworkCidr = $.remoteIpv6NetworkCidr;
        this.staticRoutesOnly = $.staticRoutesOnly;
        this.tags = $.tags;
        this.transitGatewayId = $.transitGatewayId;
        this.transportTransitGatewayAttachmentId = $.transportTransitGatewayAttachmentId;
        this.tunnel1DpdTimeoutAction = $.tunnel1DpdTimeoutAction;
        this.tunnel1DpdTimeoutSeconds = $.tunnel1DpdTimeoutSeconds;
        this.tunnel1IkeVersions = $.tunnel1IkeVersions;
        this.tunnel1InsideCidr = $.tunnel1InsideCidr;
        this.tunnel1InsideIpv6Cidr = $.tunnel1InsideIpv6Cidr;
        this.tunnel1LogOptions = $.tunnel1LogOptions;
        this.tunnel1Phase1DhGroupNumbers = $.tunnel1Phase1DhGroupNumbers;
        this.tunnel1Phase1EncryptionAlgorithms = $.tunnel1Phase1EncryptionAlgorithms;
        this.tunnel1Phase1IntegrityAlgorithms = $.tunnel1Phase1IntegrityAlgorithms;
        this.tunnel1Phase1LifetimeSeconds = $.tunnel1Phase1LifetimeSeconds;
        this.tunnel1Phase2DhGroupNumbers = $.tunnel1Phase2DhGroupNumbers;
        this.tunnel1Phase2EncryptionAlgorithms = $.tunnel1Phase2EncryptionAlgorithms;
        this.tunnel1Phase2IntegrityAlgorithms = $.tunnel1Phase2IntegrityAlgorithms;
        this.tunnel1Phase2LifetimeSeconds = $.tunnel1Phase2LifetimeSeconds;
        this.tunnel1PresharedKey = $.tunnel1PresharedKey;
        this.tunnel1RekeyFuzzPercentage = $.tunnel1RekeyFuzzPercentage;
        this.tunnel1RekeyMarginTimeSeconds = $.tunnel1RekeyMarginTimeSeconds;
        this.tunnel1ReplayWindowSize = $.tunnel1ReplayWindowSize;
        this.tunnel1StartupAction = $.tunnel1StartupAction;
        this.tunnel2DpdTimeoutAction = $.tunnel2DpdTimeoutAction;
        this.tunnel2DpdTimeoutSeconds = $.tunnel2DpdTimeoutSeconds;
        this.tunnel2IkeVersions = $.tunnel2IkeVersions;
        this.tunnel2InsideCidr = $.tunnel2InsideCidr;
        this.tunnel2InsideIpv6Cidr = $.tunnel2InsideIpv6Cidr;
        this.tunnel2LogOptions = $.tunnel2LogOptions;
        this.tunnel2Phase1DhGroupNumbers = $.tunnel2Phase1DhGroupNumbers;
        this.tunnel2Phase1EncryptionAlgorithms = $.tunnel2Phase1EncryptionAlgorithms;
        this.tunnel2Phase1IntegrityAlgorithms = $.tunnel2Phase1IntegrityAlgorithms;
        this.tunnel2Phase1LifetimeSeconds = $.tunnel2Phase1LifetimeSeconds;
        this.tunnel2Phase2DhGroupNumbers = $.tunnel2Phase2DhGroupNumbers;
        this.tunnel2Phase2EncryptionAlgorithms = $.tunnel2Phase2EncryptionAlgorithms;
        this.tunnel2Phase2IntegrityAlgorithms = $.tunnel2Phase2IntegrityAlgorithms;
        this.tunnel2Phase2LifetimeSeconds = $.tunnel2Phase2LifetimeSeconds;
        this.tunnel2PresharedKey = $.tunnel2PresharedKey;
        this.tunnel2RekeyFuzzPercentage = $.tunnel2RekeyFuzzPercentage;
        this.tunnel2RekeyMarginTimeSeconds = $.tunnel2RekeyMarginTimeSeconds;
        this.tunnel2ReplayWindowSize = $.tunnel2ReplayWindowSize;
        this.tunnel2StartupAction = $.tunnel2StartupAction;
        this.tunnelInsideIpVersion = $.tunnelInsideIpVersion;
        this.type = $.type;
        this.vpnGatewayId = $.vpnGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnConnectionArgs $;

        public Builder() {
            $ = new VpnConnectionArgs();
        }

        public Builder(VpnConnectionArgs defaults) {
            $ = new VpnConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder customerGatewayId(Output<String> customerGatewayId) {
            $.customerGatewayId = customerGatewayId;
            return this;
        }

        public Builder customerGatewayId(String customerGatewayId) {
            return customerGatewayId(Output.of(customerGatewayId));
        }

        public Builder enableAcceleration(@Nullable Output<Boolean> enableAcceleration) {
            $.enableAcceleration = enableAcceleration;
            return this;
        }

        public Builder enableAcceleration(Boolean enableAcceleration) {
            return enableAcceleration(Output.of(enableAcceleration));
        }

        public Builder localIpv4NetworkCidr(@Nullable Output<String> localIpv4NetworkCidr) {
            $.localIpv4NetworkCidr = localIpv4NetworkCidr;
            return this;
        }

        public Builder localIpv4NetworkCidr(String localIpv4NetworkCidr) {
            return localIpv4NetworkCidr(Output.of(localIpv4NetworkCidr));
        }

        public Builder localIpv6NetworkCidr(@Nullable Output<String> localIpv6NetworkCidr) {
            $.localIpv6NetworkCidr = localIpv6NetworkCidr;
            return this;
        }

        public Builder localIpv6NetworkCidr(String localIpv6NetworkCidr) {
            return localIpv6NetworkCidr(Output.of(localIpv6NetworkCidr));
        }

        public Builder outsideIpAddressType(@Nullable Output<String> outsideIpAddressType) {
            $.outsideIpAddressType = outsideIpAddressType;
            return this;
        }

        public Builder outsideIpAddressType(String outsideIpAddressType) {
            return outsideIpAddressType(Output.of(outsideIpAddressType));
        }

        public Builder remoteIpv4NetworkCidr(@Nullable Output<String> remoteIpv4NetworkCidr) {
            $.remoteIpv4NetworkCidr = remoteIpv4NetworkCidr;
            return this;
        }

        public Builder remoteIpv4NetworkCidr(String remoteIpv4NetworkCidr) {
            return remoteIpv4NetworkCidr(Output.of(remoteIpv4NetworkCidr));
        }

        public Builder remoteIpv6NetworkCidr(@Nullable Output<String> remoteIpv6NetworkCidr) {
            $.remoteIpv6NetworkCidr = remoteIpv6NetworkCidr;
            return this;
        }

        public Builder remoteIpv6NetworkCidr(String remoteIpv6NetworkCidr) {
            return remoteIpv6NetworkCidr(Output.of(remoteIpv6NetworkCidr));
        }

        public Builder staticRoutesOnly(@Nullable Output<Boolean> staticRoutesOnly) {
            $.staticRoutesOnly = staticRoutesOnly;
            return this;
        }

        public Builder staticRoutesOnly(Boolean staticRoutesOnly) {
            return staticRoutesOnly(Output.of(staticRoutesOnly));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder transitGatewayId(@Nullable Output<String> transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            return transitGatewayId(Output.of(transitGatewayId));
        }

        public Builder transportTransitGatewayAttachmentId(@Nullable Output<String> transportTransitGatewayAttachmentId) {
            $.transportTransitGatewayAttachmentId = transportTransitGatewayAttachmentId;
            return this;
        }

        public Builder transportTransitGatewayAttachmentId(String transportTransitGatewayAttachmentId) {
            return transportTransitGatewayAttachmentId(Output.of(transportTransitGatewayAttachmentId));
        }

        public Builder tunnel1DpdTimeoutAction(@Nullable Output<String> tunnel1DpdTimeoutAction) {
            $.tunnel1DpdTimeoutAction = tunnel1DpdTimeoutAction;
            return this;
        }

        public Builder tunnel1DpdTimeoutAction(String tunnel1DpdTimeoutAction) {
            return tunnel1DpdTimeoutAction(Output.of(tunnel1DpdTimeoutAction));
        }

        public Builder tunnel1DpdTimeoutSeconds(@Nullable Output<Integer> tunnel1DpdTimeoutSeconds) {
            $.tunnel1DpdTimeoutSeconds = tunnel1DpdTimeoutSeconds;
            return this;
        }

        public Builder tunnel1DpdTimeoutSeconds(Integer tunnel1DpdTimeoutSeconds) {
            return tunnel1DpdTimeoutSeconds(Output.of(tunnel1DpdTimeoutSeconds));
        }

        public Builder tunnel1IkeVersions(@Nullable Output<List<String>> tunnel1IkeVersions) {
            $.tunnel1IkeVersions = tunnel1IkeVersions;
            return this;
        }

        public Builder tunnel1IkeVersions(List<String> tunnel1IkeVersions) {
            return tunnel1IkeVersions(Output.of(tunnel1IkeVersions));
        }

        public Builder tunnel1IkeVersions(String... tunnel1IkeVersions) {
            return tunnel1IkeVersions(List.of(tunnel1IkeVersions));
        }

        public Builder tunnel1InsideCidr(@Nullable Output<String> tunnel1InsideCidr) {
            $.tunnel1InsideCidr = tunnel1InsideCidr;
            return this;
        }

        public Builder tunnel1InsideCidr(String tunnel1InsideCidr) {
            return tunnel1InsideCidr(Output.of(tunnel1InsideCidr));
        }

        public Builder tunnel1InsideIpv6Cidr(@Nullable Output<String> tunnel1InsideIpv6Cidr) {
            $.tunnel1InsideIpv6Cidr = tunnel1InsideIpv6Cidr;
            return this;
        }

        public Builder tunnel1InsideIpv6Cidr(String tunnel1InsideIpv6Cidr) {
            return tunnel1InsideIpv6Cidr(Output.of(tunnel1InsideIpv6Cidr));
        }

        public Builder tunnel1LogOptions(@Nullable Output<VpnConnectionTunnel1LogOptionsArgs> tunnel1LogOptions) {
            $.tunnel1LogOptions = tunnel1LogOptions;
            return this;
        }

        public Builder tunnel1LogOptions(VpnConnectionTunnel1LogOptionsArgs tunnel1LogOptions) {
            return tunnel1LogOptions(Output.of(tunnel1LogOptions));
        }

        public Builder tunnel1Phase1DhGroupNumbers(@Nullable Output<List<Integer>> tunnel1Phase1DhGroupNumbers) {
            $.tunnel1Phase1DhGroupNumbers = tunnel1Phase1DhGroupNumbers;
            return this;
        }

        public Builder tunnel1Phase1DhGroupNumbers(List<Integer> tunnel1Phase1DhGroupNumbers) {
            return tunnel1Phase1DhGroupNumbers(Output.of(tunnel1Phase1DhGroupNumbers));
        }

        public Builder tunnel1Phase1DhGroupNumbers(Integer... tunnel1Phase1DhGroupNumbers) {
            return tunnel1Phase1DhGroupNumbers(List.of(tunnel1Phase1DhGroupNumbers));
        }

        public Builder tunnel1Phase1EncryptionAlgorithms(@Nullable Output<List<String>> tunnel1Phase1EncryptionAlgorithms) {
            $.tunnel1Phase1EncryptionAlgorithms = tunnel1Phase1EncryptionAlgorithms;
            return this;
        }

        public Builder tunnel1Phase1EncryptionAlgorithms(List<String> tunnel1Phase1EncryptionAlgorithms) {
            return tunnel1Phase1EncryptionAlgorithms(Output.of(tunnel1Phase1EncryptionAlgorithms));
        }

        public Builder tunnel1Phase1EncryptionAlgorithms(String... tunnel1Phase1EncryptionAlgorithms) {
            return tunnel1Phase1EncryptionAlgorithms(List.of(tunnel1Phase1EncryptionAlgorithms));
        }

        public Builder tunnel1Phase1IntegrityAlgorithms(@Nullable Output<List<String>> tunnel1Phase1IntegrityAlgorithms) {
            $.tunnel1Phase1IntegrityAlgorithms = tunnel1Phase1IntegrityAlgorithms;
            return this;
        }

        public Builder tunnel1Phase1IntegrityAlgorithms(List<String> tunnel1Phase1IntegrityAlgorithms) {
            return tunnel1Phase1IntegrityAlgorithms(Output.of(tunnel1Phase1IntegrityAlgorithms));
        }

        public Builder tunnel1Phase1IntegrityAlgorithms(String... tunnel1Phase1IntegrityAlgorithms) {
            return tunnel1Phase1IntegrityAlgorithms(List.of(tunnel1Phase1IntegrityAlgorithms));
        }

        public Builder tunnel1Phase1LifetimeSeconds(@Nullable Output<Integer> tunnel1Phase1LifetimeSeconds) {
            $.tunnel1Phase1LifetimeSeconds = tunnel1Phase1LifetimeSeconds;
            return this;
        }

        public Builder tunnel1Phase1LifetimeSeconds(Integer tunnel1Phase1LifetimeSeconds) {
            return tunnel1Phase1LifetimeSeconds(Output.of(tunnel1Phase1LifetimeSeconds));
        }

        public Builder tunnel1Phase2DhGroupNumbers(@Nullable Output<List<Integer>> tunnel1Phase2DhGroupNumbers) {
            $.tunnel1Phase2DhGroupNumbers = tunnel1Phase2DhGroupNumbers;
            return this;
        }

        public Builder tunnel1Phase2DhGroupNumbers(List<Integer> tunnel1Phase2DhGroupNumbers) {
            return tunnel1Phase2DhGroupNumbers(Output.of(tunnel1Phase2DhGroupNumbers));
        }

        public Builder tunnel1Phase2DhGroupNumbers(Integer... tunnel1Phase2DhGroupNumbers) {
            return tunnel1Phase2DhGroupNumbers(List.of(tunnel1Phase2DhGroupNumbers));
        }

        public Builder tunnel1Phase2EncryptionAlgorithms(@Nullable Output<List<String>> tunnel1Phase2EncryptionAlgorithms) {
            $.tunnel1Phase2EncryptionAlgorithms = tunnel1Phase2EncryptionAlgorithms;
            return this;
        }

        public Builder tunnel1Phase2EncryptionAlgorithms(List<String> tunnel1Phase2EncryptionAlgorithms) {
            return tunnel1Phase2EncryptionAlgorithms(Output.of(tunnel1Phase2EncryptionAlgorithms));
        }

        public Builder tunnel1Phase2EncryptionAlgorithms(String... tunnel1Phase2EncryptionAlgorithms) {
            return tunnel1Phase2EncryptionAlgorithms(List.of(tunnel1Phase2EncryptionAlgorithms));
        }

        public Builder tunnel1Phase2IntegrityAlgorithms(@Nullable Output<List<String>> tunnel1Phase2IntegrityAlgorithms) {
            $.tunnel1Phase2IntegrityAlgorithms = tunnel1Phase2IntegrityAlgorithms;
            return this;
        }

        public Builder tunnel1Phase2IntegrityAlgorithms(List<String> tunnel1Phase2IntegrityAlgorithms) {
            return tunnel1Phase2IntegrityAlgorithms(Output.of(tunnel1Phase2IntegrityAlgorithms));
        }

        public Builder tunnel1Phase2IntegrityAlgorithms(String... tunnel1Phase2IntegrityAlgorithms) {
            return tunnel1Phase2IntegrityAlgorithms(List.of(tunnel1Phase2IntegrityAlgorithms));
        }

        public Builder tunnel1Phase2LifetimeSeconds(@Nullable Output<Integer> tunnel1Phase2LifetimeSeconds) {
            $.tunnel1Phase2LifetimeSeconds = tunnel1Phase2LifetimeSeconds;
            return this;
        }

        public Builder tunnel1Phase2LifetimeSeconds(Integer tunnel1Phase2LifetimeSeconds) {
            return tunnel1Phase2LifetimeSeconds(Output.of(tunnel1Phase2LifetimeSeconds));
        }

        public Builder tunnel1PresharedKey(@Nullable Output<String> tunnel1PresharedKey) {
            $.tunnel1PresharedKey = tunnel1PresharedKey;
            return this;
        }

        public Builder tunnel1PresharedKey(String tunnel1PresharedKey) {
            return tunnel1PresharedKey(Output.of(tunnel1PresharedKey));
        }

        public Builder tunnel1RekeyFuzzPercentage(@Nullable Output<Integer> tunnel1RekeyFuzzPercentage) {
            $.tunnel1RekeyFuzzPercentage = tunnel1RekeyFuzzPercentage;
            return this;
        }

        public Builder tunnel1RekeyFuzzPercentage(Integer tunnel1RekeyFuzzPercentage) {
            return tunnel1RekeyFuzzPercentage(Output.of(tunnel1RekeyFuzzPercentage));
        }

        public Builder tunnel1RekeyMarginTimeSeconds(@Nullable Output<Integer> tunnel1RekeyMarginTimeSeconds) {
            $.tunnel1RekeyMarginTimeSeconds = tunnel1RekeyMarginTimeSeconds;
            return this;
        }

        public Builder tunnel1RekeyMarginTimeSeconds(Integer tunnel1RekeyMarginTimeSeconds) {
            return tunnel1RekeyMarginTimeSeconds(Output.of(tunnel1RekeyMarginTimeSeconds));
        }

        public Builder tunnel1ReplayWindowSize(@Nullable Output<Integer> tunnel1ReplayWindowSize) {
            $.tunnel1ReplayWindowSize = tunnel1ReplayWindowSize;
            return this;
        }

        public Builder tunnel1ReplayWindowSize(Integer tunnel1ReplayWindowSize) {
            return tunnel1ReplayWindowSize(Output.of(tunnel1ReplayWindowSize));
        }

        public Builder tunnel1StartupAction(@Nullable Output<String> tunnel1StartupAction) {
            $.tunnel1StartupAction = tunnel1StartupAction;
            return this;
        }

        public Builder tunnel1StartupAction(String tunnel1StartupAction) {
            return tunnel1StartupAction(Output.of(tunnel1StartupAction));
        }

        public Builder tunnel2DpdTimeoutAction(@Nullable Output<String> tunnel2DpdTimeoutAction) {
            $.tunnel2DpdTimeoutAction = tunnel2DpdTimeoutAction;
            return this;
        }

        public Builder tunnel2DpdTimeoutAction(String tunnel2DpdTimeoutAction) {
            return tunnel2DpdTimeoutAction(Output.of(tunnel2DpdTimeoutAction));
        }

        public Builder tunnel2DpdTimeoutSeconds(@Nullable Output<Integer> tunnel2DpdTimeoutSeconds) {
            $.tunnel2DpdTimeoutSeconds = tunnel2DpdTimeoutSeconds;
            return this;
        }

        public Builder tunnel2DpdTimeoutSeconds(Integer tunnel2DpdTimeoutSeconds) {
            return tunnel2DpdTimeoutSeconds(Output.of(tunnel2DpdTimeoutSeconds));
        }

        public Builder tunnel2IkeVersions(@Nullable Output<List<String>> tunnel2IkeVersions) {
            $.tunnel2IkeVersions = tunnel2IkeVersions;
            return this;
        }

        public Builder tunnel2IkeVersions(List<String> tunnel2IkeVersions) {
            return tunnel2IkeVersions(Output.of(tunnel2IkeVersions));
        }

        public Builder tunnel2IkeVersions(String... tunnel2IkeVersions) {
            return tunnel2IkeVersions(List.of(tunnel2IkeVersions));
        }

        public Builder tunnel2InsideCidr(@Nullable Output<String> tunnel2InsideCidr) {
            $.tunnel2InsideCidr = tunnel2InsideCidr;
            return this;
        }

        public Builder tunnel2InsideCidr(String tunnel2InsideCidr) {
            return tunnel2InsideCidr(Output.of(tunnel2InsideCidr));
        }

        public Builder tunnel2InsideIpv6Cidr(@Nullable Output<String> tunnel2InsideIpv6Cidr) {
            $.tunnel2InsideIpv6Cidr = tunnel2InsideIpv6Cidr;
            return this;
        }

        public Builder tunnel2InsideIpv6Cidr(String tunnel2InsideIpv6Cidr) {
            return tunnel2InsideIpv6Cidr(Output.of(tunnel2InsideIpv6Cidr));
        }

        public Builder tunnel2LogOptions(@Nullable Output<VpnConnectionTunnel2LogOptionsArgs> tunnel2LogOptions) {
            $.tunnel2LogOptions = tunnel2LogOptions;
            return this;
        }

        public Builder tunnel2LogOptions(VpnConnectionTunnel2LogOptionsArgs tunnel2LogOptions) {
            return tunnel2LogOptions(Output.of(tunnel2LogOptions));
        }

        public Builder tunnel2Phase1DhGroupNumbers(@Nullable Output<List<Integer>> tunnel2Phase1DhGroupNumbers) {
            $.tunnel2Phase1DhGroupNumbers = tunnel2Phase1DhGroupNumbers;
            return this;
        }

        public Builder tunnel2Phase1DhGroupNumbers(List<Integer> tunnel2Phase1DhGroupNumbers) {
            return tunnel2Phase1DhGroupNumbers(Output.of(tunnel2Phase1DhGroupNumbers));
        }

        public Builder tunnel2Phase1DhGroupNumbers(Integer... tunnel2Phase1DhGroupNumbers) {
            return tunnel2Phase1DhGroupNumbers(List.of(tunnel2Phase1DhGroupNumbers));
        }

        public Builder tunnel2Phase1EncryptionAlgorithms(@Nullable Output<List<String>> tunnel2Phase1EncryptionAlgorithms) {
            $.tunnel2Phase1EncryptionAlgorithms = tunnel2Phase1EncryptionAlgorithms;
            return this;
        }

        public Builder tunnel2Phase1EncryptionAlgorithms(List<String> tunnel2Phase1EncryptionAlgorithms) {
            return tunnel2Phase1EncryptionAlgorithms(Output.of(tunnel2Phase1EncryptionAlgorithms));
        }

        public Builder tunnel2Phase1EncryptionAlgorithms(String... tunnel2Phase1EncryptionAlgorithms) {
            return tunnel2Phase1EncryptionAlgorithms(List.of(tunnel2Phase1EncryptionAlgorithms));
        }

        public Builder tunnel2Phase1IntegrityAlgorithms(@Nullable Output<List<String>> tunnel2Phase1IntegrityAlgorithms) {
            $.tunnel2Phase1IntegrityAlgorithms = tunnel2Phase1IntegrityAlgorithms;
            return this;
        }

        public Builder tunnel2Phase1IntegrityAlgorithms(List<String> tunnel2Phase1IntegrityAlgorithms) {
            return tunnel2Phase1IntegrityAlgorithms(Output.of(tunnel2Phase1IntegrityAlgorithms));
        }

        public Builder tunnel2Phase1IntegrityAlgorithms(String... tunnel2Phase1IntegrityAlgorithms) {
            return tunnel2Phase1IntegrityAlgorithms(List.of(tunnel2Phase1IntegrityAlgorithms));
        }

        public Builder tunnel2Phase1LifetimeSeconds(@Nullable Output<Integer> tunnel2Phase1LifetimeSeconds) {
            $.tunnel2Phase1LifetimeSeconds = tunnel2Phase1LifetimeSeconds;
            return this;
        }

        public Builder tunnel2Phase1LifetimeSeconds(Integer tunnel2Phase1LifetimeSeconds) {
            return tunnel2Phase1LifetimeSeconds(Output.of(tunnel2Phase1LifetimeSeconds));
        }

        public Builder tunnel2Phase2DhGroupNumbers(@Nullable Output<List<Integer>> tunnel2Phase2DhGroupNumbers) {
            $.tunnel2Phase2DhGroupNumbers = tunnel2Phase2DhGroupNumbers;
            return this;
        }

        public Builder tunnel2Phase2DhGroupNumbers(List<Integer> tunnel2Phase2DhGroupNumbers) {
            return tunnel2Phase2DhGroupNumbers(Output.of(tunnel2Phase2DhGroupNumbers));
        }

        public Builder tunnel2Phase2DhGroupNumbers(Integer... tunnel2Phase2DhGroupNumbers) {
            return tunnel2Phase2DhGroupNumbers(List.of(tunnel2Phase2DhGroupNumbers));
        }

        public Builder tunnel2Phase2EncryptionAlgorithms(@Nullable Output<List<String>> tunnel2Phase2EncryptionAlgorithms) {
            $.tunnel2Phase2EncryptionAlgorithms = tunnel2Phase2EncryptionAlgorithms;
            return this;
        }

        public Builder tunnel2Phase2EncryptionAlgorithms(List<String> tunnel2Phase2EncryptionAlgorithms) {
            return tunnel2Phase2EncryptionAlgorithms(Output.of(tunnel2Phase2EncryptionAlgorithms));
        }

        public Builder tunnel2Phase2EncryptionAlgorithms(String... tunnel2Phase2EncryptionAlgorithms) {
            return tunnel2Phase2EncryptionAlgorithms(List.of(tunnel2Phase2EncryptionAlgorithms));
        }

        public Builder tunnel2Phase2IntegrityAlgorithms(@Nullable Output<List<String>> tunnel2Phase2IntegrityAlgorithms) {
            $.tunnel2Phase2IntegrityAlgorithms = tunnel2Phase2IntegrityAlgorithms;
            return this;
        }

        public Builder tunnel2Phase2IntegrityAlgorithms(List<String> tunnel2Phase2IntegrityAlgorithms) {
            return tunnel2Phase2IntegrityAlgorithms(Output.of(tunnel2Phase2IntegrityAlgorithms));
        }

        public Builder tunnel2Phase2IntegrityAlgorithms(String... tunnel2Phase2IntegrityAlgorithms) {
            return tunnel2Phase2IntegrityAlgorithms(List.of(tunnel2Phase2IntegrityAlgorithms));
        }

        public Builder tunnel2Phase2LifetimeSeconds(@Nullable Output<Integer> tunnel2Phase2LifetimeSeconds) {
            $.tunnel2Phase2LifetimeSeconds = tunnel2Phase2LifetimeSeconds;
            return this;
        }

        public Builder tunnel2Phase2LifetimeSeconds(Integer tunnel2Phase2LifetimeSeconds) {
            return tunnel2Phase2LifetimeSeconds(Output.of(tunnel2Phase2LifetimeSeconds));
        }

        public Builder tunnel2PresharedKey(@Nullable Output<String> tunnel2PresharedKey) {
            $.tunnel2PresharedKey = tunnel2PresharedKey;
            return this;
        }

        public Builder tunnel2PresharedKey(String tunnel2PresharedKey) {
            return tunnel2PresharedKey(Output.of(tunnel2PresharedKey));
        }

        public Builder tunnel2RekeyFuzzPercentage(@Nullable Output<Integer> tunnel2RekeyFuzzPercentage) {
            $.tunnel2RekeyFuzzPercentage = tunnel2RekeyFuzzPercentage;
            return this;
        }

        public Builder tunnel2RekeyFuzzPercentage(Integer tunnel2RekeyFuzzPercentage) {
            return tunnel2RekeyFuzzPercentage(Output.of(tunnel2RekeyFuzzPercentage));
        }

        public Builder tunnel2RekeyMarginTimeSeconds(@Nullable Output<Integer> tunnel2RekeyMarginTimeSeconds) {
            $.tunnel2RekeyMarginTimeSeconds = tunnel2RekeyMarginTimeSeconds;
            return this;
        }

        public Builder tunnel2RekeyMarginTimeSeconds(Integer tunnel2RekeyMarginTimeSeconds) {
            return tunnel2RekeyMarginTimeSeconds(Output.of(tunnel2RekeyMarginTimeSeconds));
        }

        public Builder tunnel2ReplayWindowSize(@Nullable Output<Integer> tunnel2ReplayWindowSize) {
            $.tunnel2ReplayWindowSize = tunnel2ReplayWindowSize;
            return this;
        }

        public Builder tunnel2ReplayWindowSize(Integer tunnel2ReplayWindowSize) {
            return tunnel2ReplayWindowSize(Output.of(tunnel2ReplayWindowSize));
        }

        public Builder tunnel2StartupAction(@Nullable Output<String> tunnel2StartupAction) {
            $.tunnel2StartupAction = tunnel2StartupAction;
            return this;
        }

        public Builder tunnel2StartupAction(String tunnel2StartupAction) {
            return tunnel2StartupAction(Output.of(tunnel2StartupAction));
        }

        public Builder tunnelInsideIpVersion(@Nullable Output<String> tunnelInsideIpVersion) {
            $.tunnelInsideIpVersion = tunnelInsideIpVersion;
            return this;
        }

        public Builder tunnelInsideIpVersion(String tunnelInsideIpVersion) {
            return tunnelInsideIpVersion(Output.of(tunnelInsideIpVersion));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder vpnGatewayId(@Nullable Output<String> vpnGatewayId) {
            $.vpnGatewayId = vpnGatewayId;
            return this;
        }

        public Builder vpnGatewayId(String vpnGatewayId) {
            return vpnGatewayId(Output.of(vpnGatewayId));
        }

        public VpnConnectionArgs build() {
            $.customerGatewayId = Objects.requireNonNull($.customerGatewayId, "expected parameter 'customerGatewayId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
