// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrokerLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrokerLogsArgs Empty = new BrokerLogsArgs();

    /**
     * Enables audit logging. Auditing is only possible for `engine_type` of `ActiveMQ`. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
     * 
     */
    @Import(name="audit")
    private @Nullable Output<Boolean> audit;

    /**
     * @return Enables audit logging. Auditing is only possible for `engine_type` of `ActiveMQ`. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> audit() {
        return Optional.ofNullable(this.audit);
    }

    /**
     * Enables general logging via CloudWatch. Defaults to `false`.
     * 
     */
    @Import(name="general")
    private @Nullable Output<Boolean> general;

    /**
     * @return Enables general logging via CloudWatch. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> general() {
        return Optional.ofNullable(this.general);
    }

    private BrokerLogsArgs() {}

    private BrokerLogsArgs(BrokerLogsArgs $) {
        this.audit = $.audit;
        this.general = $.general;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrokerLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrokerLogsArgs $;

        public Builder() {
            $ = new BrokerLogsArgs();
        }

        public Builder(BrokerLogsArgs defaults) {
            $ = new BrokerLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audit Enables audit logging. Auditing is only possible for `engine_type` of `ActiveMQ`. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder audit(@Nullable Output<Boolean> audit) {
            $.audit = audit;
            return this;
        }

        /**
         * @param audit Enables audit logging. Auditing is only possible for `engine_type` of `ActiveMQ`. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder audit(Boolean audit) {
            return audit(Output.of(audit));
        }

        /**
         * @param general Enables general logging via CloudWatch. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder general(@Nullable Output<Boolean> general) {
            $.general = general;
            return this;
        }

        /**
         * @param general Enables general logging via CloudWatch. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder general(Boolean general) {
            return general(Output.of(general));
        }

        public BrokerLogsArgs build() {
            return $;
        }
    }

}
