// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsAxisLabelOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChartAxisLabelOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChartAxisLabelOptionsArgs Empty = new ChartAxisLabelOptionsArgs();

    @Import(name="axisLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsAxisLabelOptionsArgs> axisLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsAxisLabelOptionsArgs>> axisLabelOptions() {
        return Optional.ofNullable(this.axisLabelOptions);
    }

    @Import(name="sortIconVisibility")
    private @Nullable Output<String> sortIconVisibility;

    public Optional<Output<String>> sortIconVisibility() {
        return Optional.ofNullable(this.sortIconVisibility);
    }

    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private ChartAxisLabelOptionsArgs() {}

    private ChartAxisLabelOptionsArgs(ChartAxisLabelOptionsArgs $) {
        this.axisLabelOptions = $.axisLabelOptions;
        this.sortIconVisibility = $.sortIconVisibility;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChartAxisLabelOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChartAxisLabelOptionsArgs $;

        public Builder() {
            $ = new ChartAxisLabelOptionsArgs();
        }

        public Builder(ChartAxisLabelOptionsArgs defaults) {
            $ = new ChartAxisLabelOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder axisLabelOptions(@Nullable Output<ChartAxisLabelOptionsAxisLabelOptionsArgs> axisLabelOptions) {
            $.axisLabelOptions = axisLabelOptions;
            return this;
        }

        public Builder axisLabelOptions(ChartAxisLabelOptionsAxisLabelOptionsArgs axisLabelOptions) {
            return axisLabelOptions(Output.of(axisLabelOptions));
        }

        public Builder sortIconVisibility(@Nullable Output<String> sortIconVisibility) {
            $.sortIconVisibility = sortIconVisibility;
            return this;
        }

        public Builder sortIconVisibility(String sortIconVisibility) {
            return sortIconVisibility(Output.of(sortIconVisibility));
        }

        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public ChartAxisLabelOptionsArgs build() {
            return $;
        }
    }

}
