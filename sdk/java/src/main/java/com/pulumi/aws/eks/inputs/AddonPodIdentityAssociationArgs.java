// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AddonPodIdentityAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddonPodIdentityAssociationArgs Empty = new AddonPodIdentityAssociationArgs();

    /**
     * The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
     * 
     */
    @Import(name="serviceAccount", required=true)
    private Output<String> serviceAccount;

    /**
     * @return The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }

    private AddonPodIdentityAssociationArgs() {}

    private AddonPodIdentityAssociationArgs(AddonPodIdentityAssociationArgs $) {
        this.roleArn = $.roleArn;
        this.serviceAccount = $.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddonPodIdentityAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonPodIdentityAssociationArgs $;

        public Builder() {
            $ = new AddonPodIdentityAssociationArgs();
        }

        public Builder(AddonPodIdentityAssociationArgs defaults) {
            $ = new AddonPodIdentityAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param serviceAccount The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public AddonPodIdentityAssociationArgs build() {
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("AddonPodIdentityAssociationArgs", "roleArn");
            }
            if ($.serviceAccount == null) {
                throw new MissingRequiredPropertyException("AddonPodIdentityAssociationArgs", "serviceAccount");
            }
            return $;
        }
    }

}
