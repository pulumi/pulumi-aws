// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssociationOutputLocation {
    /**
     * @return The S3 bucket name.
     * 
     */
    private String s3BucketName;
    /**
     * @return The S3 bucket prefix. Results stored in the root if not configured.
     * 
     */
    private @Nullable String s3KeyPrefix;
    /**
     * @return The S3 bucket region.
     * 
     * Targets specify what instance IDs or tags to apply the document to and has these keys:
     * 
     */
    private @Nullable String s3Region;

    private AssociationOutputLocation() {}
    /**
     * @return The S3 bucket name.
     * 
     */
    public String s3BucketName() {
        return this.s3BucketName;
    }
    /**
     * @return The S3 bucket prefix. Results stored in the root if not configured.
     * 
     */
    public Optional<String> s3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }
    /**
     * @return The S3 bucket region.
     * 
     * Targets specify what instance IDs or tags to apply the document to and has these keys:
     * 
     */
    public Optional<String> s3Region() {
        return Optional.ofNullable(this.s3Region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssociationOutputLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String s3BucketName;
        private @Nullable String s3KeyPrefix;
        private @Nullable String s3Region;
        public Builder() {}
        public Builder(AssociationOutputLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3KeyPrefix = defaults.s3KeyPrefix;
    	      this.s3Region = defaults.s3Region;
        }

        @CustomType.Setter
        public Builder s3BucketName(String s3BucketName) {
            if (s3BucketName == null) {
              throw new MissingRequiredPropertyException("AssociationOutputLocation", "s3BucketName");
            }
            this.s3BucketName = s3BucketName;
            return this;
        }
        @CustomType.Setter
        public Builder s3KeyPrefix(@Nullable String s3KeyPrefix) {

            this.s3KeyPrefix = s3KeyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder s3Region(@Nullable String s3Region) {

            this.s3Region = s3Region;
            return this;
        }
        public AssociationOutputLocation build() {
            final var _resultValue = new AssociationOutputLocation();
            _resultValue.s3BucketName = s3BucketName;
            _resultValue.s3KeyPrefix = s3KeyPrefix;
            _resultValue.s3Region = s3Region;
            return _resultValue;
        }
    }
}
