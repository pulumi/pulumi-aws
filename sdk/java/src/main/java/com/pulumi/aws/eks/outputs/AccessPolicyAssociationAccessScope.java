// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AccessPolicyAssociationAccessScope {
    /**
     * @return The namespaces to which the access scope applies when type is namespace.
     * 
     */
    private @Nullable List<String> namespaces;
    /**
     * @return Valid values are `namespace` or `cluster`.
     * 
     */
    private String type;

    private AccessPolicyAssociationAccessScope() {}
    /**
     * @return The namespaces to which the access scope applies when type is namespace.
     * 
     */
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    /**
     * @return Valid values are `namespace` or `cluster`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPolicyAssociationAccessScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> namespaces;
        private String type;
        public Builder() {}
        public Builder(AccessPolicyAssociationAccessScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.namespaces = defaults.namespaces;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AccessPolicyAssociationAccessScope", "type");
            }
            this.type = type;
            return this;
        }
        public AccessPolicyAssociationAccessScope build() {
            final var _resultValue = new AccessPolicyAssociationAccessScope();
            _resultValue.namespaces = namespaces;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
