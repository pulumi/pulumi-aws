// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkManagedServiceS3Access {
    private String domainName;
    private List<String> ipv4Addresses;
    private String s3PolicyDocument;
    /**
     * @return The status of the network resource.
     * 
     */
    private String status;

    private GetNetworkManagedServiceS3Access() {}
    public String domainName() {
        return this.domainName;
    }
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses;
    }
    public String s3PolicyDocument() {
        return this.s3PolicyDocument;
    }
    /**
     * @return The status of the network resource.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkManagedServiceS3Access defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private List<String> ipv4Addresses;
        private String s3PolicyDocument;
        private String status;
        public Builder() {}
        public Builder(GetNetworkManagedServiceS3Access defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.s3PolicyDocument = defaults.s3PolicyDocument;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedServiceS3Access", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            if (ipv4Addresses == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedServiceS3Access", "ipv4Addresses");
            }
            this.ipv4Addresses = ipv4Addresses;
            return this;
        }
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }
        @CustomType.Setter
        public Builder s3PolicyDocument(String s3PolicyDocument) {
            if (s3PolicyDocument == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedServiceS3Access", "s3PolicyDocument");
            }
            this.s3PolicyDocument = s3PolicyDocument;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedServiceS3Access", "status");
            }
            this.status = status;
            return this;
        }
        public GetNetworkManagedServiceS3Access build() {
            final var _resultValue = new GetNetworkManagedServiceS3Access();
            _resultValue.domainName = domainName;
            _resultValue.ipv4Addresses = ipv4Addresses;
            _resultValue.s3PolicyDocument = s3PolicyDocument;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
