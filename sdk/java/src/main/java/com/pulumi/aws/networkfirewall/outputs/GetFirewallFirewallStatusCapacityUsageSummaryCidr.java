// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.aws.networkfirewall.outputs.GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFirewallFirewallStatusCapacityUsageSummaryCidr {
    /**
     * @return Available number of CIDR blocks available for use by the IP set references in a firewall.
     * 
     */
    private @Nullable Integer availableCidrCount;
    /**
     * @return The list of IP set references used by a firewall.
     * 
     */
    private @Nullable List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences;
    /**
     * @return Number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    private @Nullable Integer utilizedCidrCount;

    private GetFirewallFirewallStatusCapacityUsageSummaryCidr() {}
    /**
     * @return Available number of CIDR blocks available for use by the IP set references in a firewall.
     * 
     */
    public Optional<Integer> availableCidrCount() {
        return Optional.ofNullable(this.availableCidrCount);
    }
    /**
     * @return The list of IP set references used by a firewall.
     * 
     */
    public List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences() {
        return this.ipSetReferences == null ? List.of() : this.ipSetReferences;
    }
    /**
     * @return Number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    public Optional<Integer> utilizedCidrCount() {
        return Optional.ofNullable(this.utilizedCidrCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallFirewallStatusCapacityUsageSummaryCidr defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer availableCidrCount;
        private @Nullable List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences;
        private @Nullable Integer utilizedCidrCount;
        public Builder() {}
        public Builder(GetFirewallFirewallStatusCapacityUsageSummaryCidr defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableCidrCount = defaults.availableCidrCount;
    	      this.ipSetReferences = defaults.ipSetReferences;
    	      this.utilizedCidrCount = defaults.utilizedCidrCount;
        }

        @CustomType.Setter
        public Builder availableCidrCount(@Nullable Integer availableCidrCount) {
            this.availableCidrCount = availableCidrCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipSetReferences(@Nullable List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences) {
            this.ipSetReferences = ipSetReferences;
            return this;
        }
        public Builder ipSetReferences(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference... ipSetReferences) {
            return ipSetReferences(List.of(ipSetReferences));
        }
        @CustomType.Setter
        public Builder utilizedCidrCount(@Nullable Integer utilizedCidrCount) {
            this.utilizedCidrCount = utilizedCidrCount;
            return this;
        }
        public GetFirewallFirewallStatusCapacityUsageSummaryCidr build() {
            final var o = new GetFirewallFirewallStatusCapacityUsageSummaryCidr();
            o.availableCidrCount = availableCidrCount;
            o.ipSetReferences = ipSetReferences;
            o.utilizedCidrCount = utilizedCidrCount;
            return o;
        }
    }
}
