// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.aws.networkfirewall.outputs.GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFirewallFirewallStatusCapacityUsageSummaryCidr {
    /**
     * @return Available number of CIDR blocks available for use by the IP set references in a firewall.
     * 
     */
    private Integer availableCidrCount;
    /**
     * @return The list of IP set references used by a firewall.
     * 
     */
    private List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences;
    /**
     * @return Number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    private Integer utilizedCidrCount;

    private GetFirewallFirewallStatusCapacityUsageSummaryCidr() {}
    /**
     * @return Available number of CIDR blocks available for use by the IP set references in a firewall.
     * 
     */
    public Integer availableCidrCount() {
        return this.availableCidrCount;
    }
    /**
     * @return The list of IP set references used by a firewall.
     * 
     */
    public List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences() {
        return this.ipSetReferences;
    }
    /**
     * @return Number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    public Integer utilizedCidrCount() {
        return this.utilizedCidrCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallFirewallStatusCapacityUsageSummaryCidr defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availableCidrCount;
        private List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences;
        private Integer utilizedCidrCount;
        public Builder() {}
        public Builder(GetFirewallFirewallStatusCapacityUsageSummaryCidr defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableCidrCount = defaults.availableCidrCount;
    	      this.ipSetReferences = defaults.ipSetReferences;
    	      this.utilizedCidrCount = defaults.utilizedCidrCount;
        }

        @CustomType.Setter
        public Builder availableCidrCount(Integer availableCidrCount) {
            if (availableCidrCount == null) {
              throw new MissingRequiredPropertyException("GetFirewallFirewallStatusCapacityUsageSummaryCidr", "availableCidrCount");
            }
            this.availableCidrCount = availableCidrCount;
            return this;
        }
        @CustomType.Setter
        public Builder ipSetReferences(List<GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference> ipSetReferences) {
            if (ipSetReferences == null) {
              throw new MissingRequiredPropertyException("GetFirewallFirewallStatusCapacityUsageSummaryCidr", "ipSetReferences");
            }
            this.ipSetReferences = ipSetReferences;
            return this;
        }
        public Builder ipSetReferences(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference... ipSetReferences) {
            return ipSetReferences(List.of(ipSetReferences));
        }
        @CustomType.Setter
        public Builder utilizedCidrCount(Integer utilizedCidrCount) {
            if (utilizedCidrCount == null) {
              throw new MissingRequiredPropertyException("GetFirewallFirewallStatusCapacityUsageSummaryCidr", "utilizedCidrCount");
            }
            this.utilizedCidrCount = utilizedCidrCount;
            return this;
        }
        public GetFirewallFirewallStatusCapacityUsageSummaryCidr build() {
            final var _resultValue = new GetFirewallFirewallStatusCapacityUsageSummaryCidr();
            _resultValue.availableCidrCount = availableCidrCount;
            _resultValue.ipSetReferences = ipSetReferences;
            _resultValue.utilizedCidrCount = utilizedCidrCount;
            return _resultValue;
        }
    }
}
