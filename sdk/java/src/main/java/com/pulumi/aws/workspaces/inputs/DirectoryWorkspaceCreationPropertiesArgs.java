// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryWorkspaceCreationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryWorkspaceCreationPropertiesArgs Empty = new DirectoryWorkspaceCreationPropertiesArgs();

    /**
     * The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
     * 
     */
    @Import(name="customSecurityGroupId")
    private @Nullable Output<String> customSecurityGroupId;

    /**
     * @return The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
     * 
     */
    public Optional<Output<String>> customSecurityGroupId() {
        return Optional.ofNullable(this.customSecurityGroupId);
    }

    /**
     * The default organizational unit (OU) for your WorkSpace directories. Should conform `&#34;OU=&lt;value&gt;,DC=&lt;value&gt;,...,DC=&lt;value&gt;&#34;` pattern.
     * 
     */
    @Import(name="defaultOu")
    private @Nullable Output<String> defaultOu;

    /**
     * @return The default organizational unit (OU) for your WorkSpace directories. Should conform `&#34;OU=&lt;value&gt;,DC=&lt;value&gt;,...,DC=&lt;value&gt;&#34;` pattern.
     * 
     */
    public Optional<Output<String>> defaultOu() {
        return Optional.ofNullable(this.defaultOu);
    }

    /**
     * Indicates whether internet access is enabled for your WorkSpaces.
     * 
     */
    @Import(name="enableInternetAccess")
    private @Nullable Output<Boolean> enableInternetAccess;

    /**
     * @return Indicates whether internet access is enabled for your WorkSpaces.
     * 
     */
    public Optional<Output<Boolean>> enableInternetAccess() {
        return Optional.ofNullable(this.enableInternetAccess);
    }

    /**
     * Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
     * 
     */
    @Import(name="enableMaintenanceMode")
    private @Nullable Output<Boolean> enableMaintenanceMode;

    /**
     * @return Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
     * 
     */
    public Optional<Output<Boolean>> enableMaintenanceMode() {
        return Optional.ofNullable(this.enableMaintenanceMode);
    }

    /**
     * Indicates whether users are local administrators of their WorkSpaces.
     * 
     */
    @Import(name="userEnabledAsLocalAdministrator")
    private @Nullable Output<Boolean> userEnabledAsLocalAdministrator;

    /**
     * @return Indicates whether users are local administrators of their WorkSpaces.
     * 
     */
    public Optional<Output<Boolean>> userEnabledAsLocalAdministrator() {
        return Optional.ofNullable(this.userEnabledAsLocalAdministrator);
    }

    private DirectoryWorkspaceCreationPropertiesArgs() {}

    private DirectoryWorkspaceCreationPropertiesArgs(DirectoryWorkspaceCreationPropertiesArgs $) {
        this.customSecurityGroupId = $.customSecurityGroupId;
        this.defaultOu = $.defaultOu;
        this.enableInternetAccess = $.enableInternetAccess;
        this.enableMaintenanceMode = $.enableMaintenanceMode;
        this.userEnabledAsLocalAdministrator = $.userEnabledAsLocalAdministrator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryWorkspaceCreationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryWorkspaceCreationPropertiesArgs $;

        public Builder() {
            $ = new DirectoryWorkspaceCreationPropertiesArgs();
        }

        public Builder(DirectoryWorkspaceCreationPropertiesArgs defaults) {
            $ = new DirectoryWorkspaceCreationPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customSecurityGroupId The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
         * 
         * @return builder
         * 
         */
        public Builder customSecurityGroupId(@Nullable Output<String> customSecurityGroupId) {
            $.customSecurityGroupId = customSecurityGroupId;
            return this;
        }

        /**
         * @param customSecurityGroupId The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
         * 
         * @return builder
         * 
         */
        public Builder customSecurityGroupId(String customSecurityGroupId) {
            return customSecurityGroupId(Output.of(customSecurityGroupId));
        }

        /**
         * @param defaultOu The default organizational unit (OU) for your WorkSpace directories. Should conform `&#34;OU=&lt;value&gt;,DC=&lt;value&gt;,...,DC=&lt;value&gt;&#34;` pattern.
         * 
         * @return builder
         * 
         */
        public Builder defaultOu(@Nullable Output<String> defaultOu) {
            $.defaultOu = defaultOu;
            return this;
        }

        /**
         * @param defaultOu The default organizational unit (OU) for your WorkSpace directories. Should conform `&#34;OU=&lt;value&gt;,DC=&lt;value&gt;,...,DC=&lt;value&gt;&#34;` pattern.
         * 
         * @return builder
         * 
         */
        public Builder defaultOu(String defaultOu) {
            return defaultOu(Output.of(defaultOu));
        }

        /**
         * @param enableInternetAccess Indicates whether internet access is enabled for your WorkSpaces.
         * 
         * @return builder
         * 
         */
        public Builder enableInternetAccess(@Nullable Output<Boolean> enableInternetAccess) {
            $.enableInternetAccess = enableInternetAccess;
            return this;
        }

        /**
         * @param enableInternetAccess Indicates whether internet access is enabled for your WorkSpaces.
         * 
         * @return builder
         * 
         */
        public Builder enableInternetAccess(Boolean enableInternetAccess) {
            return enableInternetAccess(Output.of(enableInternetAccess));
        }

        /**
         * @param enableMaintenanceMode Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
         * 
         * @return builder
         * 
         */
        public Builder enableMaintenanceMode(@Nullable Output<Boolean> enableMaintenanceMode) {
            $.enableMaintenanceMode = enableMaintenanceMode;
            return this;
        }

        /**
         * @param enableMaintenanceMode Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
         * 
         * @return builder
         * 
         */
        public Builder enableMaintenanceMode(Boolean enableMaintenanceMode) {
            return enableMaintenanceMode(Output.of(enableMaintenanceMode));
        }

        /**
         * @param userEnabledAsLocalAdministrator Indicates whether users are local administrators of their WorkSpaces.
         * 
         * @return builder
         * 
         */
        public Builder userEnabledAsLocalAdministrator(@Nullable Output<Boolean> userEnabledAsLocalAdministrator) {
            $.userEnabledAsLocalAdministrator = userEnabledAsLocalAdministrator;
            return this;
        }

        /**
         * @param userEnabledAsLocalAdministrator Indicates whether users are local administrators of their WorkSpaces.
         * 
         * @return builder
         * 
         */
        public Builder userEnabledAsLocalAdministrator(Boolean userEnabledAsLocalAdministrator) {
            return userEnabledAsLocalAdministrator(Output.of(userEnabledAsLocalAdministrator));
        }

        public DirectoryWorkspaceCreationPropertiesArgs build() {
            return $;
        }
    }

}
