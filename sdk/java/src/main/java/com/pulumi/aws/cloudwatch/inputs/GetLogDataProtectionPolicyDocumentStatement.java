// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.GetLogDataProtectionPolicyDocumentStatementOperation;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLogDataProtectionPolicyDocumentStatement extends com.pulumi.resources.InvokeArgs {

    public static final GetLogDataProtectionPolicyDocumentStatement Empty = new GetLogDataProtectionPolicyDocumentStatement();

    /**
     * Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
     * 
     */
    @Import(name="dataIdentifiers", required=true)
    private List<String> dataIdentifiers;

    /**
     * @return Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
     * 
     */
    public List<String> dataIdentifiers() {
        return this.dataIdentifiers;
    }

    /**
     * Configures the data protection operation applied by this statement.
     * 
     */
    @Import(name="operation", required=true)
    private GetLogDataProtectionPolicyDocumentStatementOperation operation;

    /**
     * @return Configures the data protection operation applied by this statement.
     * 
     */
    public GetLogDataProtectionPolicyDocumentStatementOperation operation() {
        return this.operation;
    }

    /**
     * Name of this statement.
     * 
     */
    @Import(name="sid")
    private @Nullable String sid;

    /**
     * @return Name of this statement.
     * 
     */
    public Optional<String> sid() {
        return Optional.ofNullable(this.sid);
    }

    private GetLogDataProtectionPolicyDocumentStatement() {}

    private GetLogDataProtectionPolicyDocumentStatement(GetLogDataProtectionPolicyDocumentStatement $) {
        this.dataIdentifiers = $.dataIdentifiers;
        this.operation = $.operation;
        this.sid = $.sid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogDataProtectionPolicyDocumentStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogDataProtectionPolicyDocumentStatement $;

        public Builder() {
            $ = new GetLogDataProtectionPolicyDocumentStatement();
        }

        public Builder(GetLogDataProtectionPolicyDocumentStatement defaults) {
            $ = new GetLogDataProtectionPolicyDocumentStatement(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataIdentifiers Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
         * 
         * @return builder
         * 
         */
        public Builder dataIdentifiers(List<String> dataIdentifiers) {
            $.dataIdentifiers = dataIdentifiers;
            return this;
        }

        /**
         * @param dataIdentifiers Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
         * 
         * @return builder
         * 
         */
        public Builder dataIdentifiers(String... dataIdentifiers) {
            return dataIdentifiers(List.of(dataIdentifiers));
        }

        /**
         * @param operation Configures the data protection operation applied by this statement.
         * 
         * @return builder
         * 
         */
        public Builder operation(GetLogDataProtectionPolicyDocumentStatementOperation operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param sid Name of this statement.
         * 
         * @return builder
         * 
         */
        public Builder sid(@Nullable String sid) {
            $.sid = sid;
            return this;
        }

        public GetLogDataProtectionPolicyDocumentStatement build() {
            $.dataIdentifiers = Objects.requireNonNull($.dataIdentifiers, "expected parameter 'dataIdentifiers' to be non-null");
            $.operation = Objects.requireNonNull($.operation, "expected parameter 'operation' to be non-null");
            return $;
        }
    }

}
