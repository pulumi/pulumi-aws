// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.outputs;

import com.pulumi.aws.wafv2.outputs.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeaderMatchPattern;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader {
    private WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeaderMatchPattern matchPattern;
    private String matchScope;
    private String oversizeHandling;

    private WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader() {}
    public WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeaderMatchPattern matchPattern() {
        return this.matchPattern;
    }
    public String matchScope() {
        return this.matchScope;
    }
    public String oversizeHandling() {
        return this.oversizeHandling;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeaderMatchPattern matchPattern;
        private String matchScope;
        private String oversizeHandling;
        public Builder() {}
        public Builder(WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchPattern = defaults.matchPattern;
    	      this.matchScope = defaults.matchScope;
    	      this.oversizeHandling = defaults.oversizeHandling;
        }

        @CustomType.Setter
        public Builder matchPattern(WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeaderMatchPattern matchPattern) {
            this.matchPattern = Objects.requireNonNull(matchPattern);
            return this;
        }
        @CustomType.Setter
        public Builder matchScope(String matchScope) {
            this.matchScope = Objects.requireNonNull(matchScope);
            return this;
        }
        @CustomType.Setter
        public Builder oversizeHandling(String oversizeHandling) {
            this.oversizeHandling = Objects.requireNonNull(oversizeHandling);
            return this;
        }
        public WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader build() {
            final var o = new WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchHeader();
            o.matchPattern = matchPattern;
            o.matchScope = matchScope;
            o.oversizeHandling = oversizeHandling;
            return o;
        }
    }
}
