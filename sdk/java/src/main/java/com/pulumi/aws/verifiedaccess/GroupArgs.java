// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupArgs Empty = new GroupArgs();

    /**
     * Description of the verified access group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the verified access group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="policyDocument")
    private @Nullable Output<String> policyDocument;

    public Optional<Output<String>> policyDocument() {
        return Optional.ofNullable(this.policyDocument);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The id of the verified access instance this group is associated with.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="verifiedaccessInstanceId", required=true)
    private Output<String> verifiedaccessInstanceId;

    /**
     * @return The id of the verified access instance this group is associated with.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> verifiedaccessInstanceId() {
        return this.verifiedaccessInstanceId;
    }

    private GroupArgs() {}

    private GroupArgs(GroupArgs $) {
        this.description = $.description;
        this.policyDocument = $.policyDocument;
        this.tags = $.tags;
        this.verifiedaccessInstanceId = $.verifiedaccessInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupArgs $;

        public Builder() {
            $ = new GroupArgs();
        }

        public Builder(GroupArgs defaults) {
            $ = new GroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the verified access group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the verified access group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder policyDocument(@Nullable Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param verifiedaccessInstanceId The id of the verified access instance this group is associated with.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessInstanceId(Output<String> verifiedaccessInstanceId) {
            $.verifiedaccessInstanceId = verifiedaccessInstanceId;
            return this;
        }

        /**
         * @param verifiedaccessInstanceId The id of the verified access instance this group is associated with.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessInstanceId(String verifiedaccessInstanceId) {
            return verifiedaccessInstanceId(Output.of(verifiedaccessInstanceId));
        }

        public GroupArgs build() {
            if ($.verifiedaccessInstanceId == null) {
                throw new MissingRequiredPropertyException("GroupArgs", "verifiedaccessInstanceId");
            }
            return $;
        }
    }

}
