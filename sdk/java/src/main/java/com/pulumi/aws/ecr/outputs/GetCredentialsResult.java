// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCredentialsResult {
    private String authorizationToken;
    private String expiresAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String proxyEndpoint;
    private String registryId;

    private GetCredentialsResult() {}
    public String authorizationToken() {
        return this.authorizationToken;
    }
    public String expiresAt() {
        return this.expiresAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String proxyEndpoint() {
        return this.proxyEndpoint;
    }
    public String registryId() {
        return this.registryId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCredentialsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorizationToken;
        private String expiresAt;
        private String id;
        private String proxyEndpoint;
        private String registryId;
        public Builder() {}
        public Builder(GetCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationToken = defaults.authorizationToken;
    	      this.expiresAt = defaults.expiresAt;
    	      this.id = defaults.id;
    	      this.proxyEndpoint = defaults.proxyEndpoint;
    	      this.registryId = defaults.registryId;
        }

        @CustomType.Setter
        public Builder authorizationToken(String authorizationToken) {
            if (authorizationToken == null) {
              throw new MissingRequiredPropertyException("GetCredentialsResult", "authorizationToken");
            }
            this.authorizationToken = authorizationToken;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetCredentialsResult", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCredentialsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder proxyEndpoint(String proxyEndpoint) {
            if (proxyEndpoint == null) {
              throw new MissingRequiredPropertyException("GetCredentialsResult", "proxyEndpoint");
            }
            this.proxyEndpoint = proxyEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder registryId(String registryId) {
            if (registryId == null) {
              throw new MissingRequiredPropertyException("GetCredentialsResult", "registryId");
            }
            this.registryId = registryId;
            return this;
        }
        public GetCredentialsResult build() {
            final var _resultValue = new GetCredentialsResult();
            _resultValue.authorizationToken = authorizationToken;
            _resultValue.expiresAt = expiresAt;
            _resultValue.id = id;
            _resultValue.proxyEndpoint = proxyEndpoint;
            _resultValue.registryId = registryId;
            return _resultValue;
        }
    }
}
