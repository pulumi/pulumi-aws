// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.outputs;

import com.pulumi.aws.datazone.outputs.EnvironmentLastDeploymentFailureReason;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class EnvironmentLastDeployment {
    private String deploymentId;
    private String deploymentStatus;
    private String deploymentType;
    private List<EnvironmentLastDeploymentFailureReason> failureReasons;
    private Boolean isDeploymentComplete;
    private List<String> messages;

    private EnvironmentLastDeployment() {}
    public String deploymentId() {
        return this.deploymentId;
    }
    public String deploymentStatus() {
        return this.deploymentStatus;
    }
    public String deploymentType() {
        return this.deploymentType;
    }
    public List<EnvironmentLastDeploymentFailureReason> failureReasons() {
        return this.failureReasons;
    }
    public Boolean isDeploymentComplete() {
        return this.isDeploymentComplete;
    }
    public List<String> messages() {
        return this.messages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentLastDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentId;
        private String deploymentStatus;
        private String deploymentType;
        private List<EnvironmentLastDeploymentFailureReason> failureReasons;
        private Boolean isDeploymentComplete;
        private List<String> messages;
        public Builder() {}
        public Builder(EnvironmentLastDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentId = defaults.deploymentId;
    	      this.deploymentStatus = defaults.deploymentStatus;
    	      this.deploymentType = defaults.deploymentType;
    	      this.failureReasons = defaults.failureReasons;
    	      this.isDeploymentComplete = defaults.isDeploymentComplete;
    	      this.messages = defaults.messages;
        }

        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentStatus(String deploymentStatus) {
            if (deploymentStatus == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "deploymentStatus");
            }
            this.deploymentStatus = deploymentStatus;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder failureReasons(List<EnvironmentLastDeploymentFailureReason> failureReasons) {
            if (failureReasons == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "failureReasons");
            }
            this.failureReasons = failureReasons;
            return this;
        }
        public Builder failureReasons(EnvironmentLastDeploymentFailureReason... failureReasons) {
            return failureReasons(List.of(failureReasons));
        }
        @CustomType.Setter
        public Builder isDeploymentComplete(Boolean isDeploymentComplete) {
            if (isDeploymentComplete == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "isDeploymentComplete");
            }
            this.isDeploymentComplete = isDeploymentComplete;
            return this;
        }
        @CustomType.Setter
        public Builder messages(List<String> messages) {
            if (messages == null) {
              throw new MissingRequiredPropertyException("EnvironmentLastDeployment", "messages");
            }
            this.messages = messages;
            return this;
        }
        public Builder messages(String... messages) {
            return messages(List.of(messages));
        }
        public EnvironmentLastDeployment build() {
            final var _resultValue = new EnvironmentLastDeployment();
            _resultValue.deploymentId = deploymentId;
            _resultValue.deploymentStatus = deploymentStatus;
            _resultValue.deploymentType = deploymentType;
            _resultValue.failureReasons = failureReasons;
            _resultValue.isDeploymentComplete = isDeploymentComplete;
            _resultValue.messages = messages;
            return _resultValue;
        }
    }
}
