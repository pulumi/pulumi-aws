// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kms.outputs;

import com.pulumi.aws.kms.outputs.GetKeyMultiRegionConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyResult {
    /**
     * @return The key ARN of a primary or replica key of a multi-Region key.
     * 
     */
    private String arn;
    /**
     * @return The twelve-digit account ID of the AWS account that owns the key
     * 
     */
    private String awsAccountId;
    /**
     * @return The date and time when the key was created
     * 
     */
    private String creationDate;
    /**
     * @return Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports
     * 
     */
    private String customerMasterKeySpec;
    /**
     * @return The date and time after which AWS KMS deletes the key. This value is present only when `key_state` is `PendingDeletion`, otherwise this value is 0
     * 
     */
    private String deletionDate;
    /**
     * @return The description of the key.
     * 
     */
    private String description;
    /**
     * @return Specifies whether the key is enabled. When `key_state` is `Enabled` this value is true, otherwise it is false
     * 
     */
    private Boolean enabled;
    /**
     * @return Specifies whether the Key&#39;s key material expires. This value is present only when `origin` is `EXTERNAL`, otherwise this value is empty
     * 
     */
    private String expirationModel;
    private @Nullable List<String> grantTokens;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String keyId;
    /**
     * @return The key&#39;s manager
     * 
     */
    private String keyManager;
    /**
     * @return The state of the key
     * 
     */
    private String keyState;
    /**
     * @return Specifies the intended use of the key
     * 
     */
    private String keyUsage;
    /**
     * @return Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key.
     * 
     */
    private Boolean multiRegion;
    /**
     * @return Lists the primary and replica keys in same multi-Region key. Present only when the value of `multi_region` is `true`.
     * 
     */
    private List<GetKeyMultiRegionConfiguration> multiRegionConfigurations;
    /**
     * @return When this value is `AWS_KMS`, AWS KMS created the key material. When this value is `EXTERNAL`, the key material was imported from your existing key management infrastructure or the CMK lacks key material
     * 
     */
    private String origin;
    /**
     * @return The time at which the imported key material expires. This value is present only when `origin` is `EXTERNAL` and whose `expiration_model` is `KEY_MATERIAL_EXPIRES`, otherwise this value is 0
     * 
     */
    private String validTo;

    private GetKeyResult() {}
    /**
     * @return The key ARN of a primary or replica key of a multi-Region key.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The twelve-digit account ID of the AWS account that owns the key
     * 
     */
    public String awsAccountId() {
        return this.awsAccountId;
    }
    /**
     * @return The date and time when the key was created
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports
     * 
     */
    public String customerMasterKeySpec() {
        return this.customerMasterKeySpec;
    }
    /**
     * @return The date and time after which AWS KMS deletes the key. This value is present only when `key_state` is `PendingDeletion`, otherwise this value is 0
     * 
     */
    public String deletionDate() {
        return this.deletionDate;
    }
    /**
     * @return The description of the key.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies whether the key is enabled. When `key_state` is `Enabled` this value is true, otherwise it is false
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Specifies whether the Key&#39;s key material expires. This value is present only when `origin` is `EXTERNAL`, otherwise this value is empty
     * 
     */
    public String expirationModel() {
        return this.expirationModel;
    }
    public List<String> grantTokens() {
        return this.grantTokens == null ? List.of() : this.grantTokens;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The key&#39;s manager
     * 
     */
    public String keyManager() {
        return this.keyManager;
    }
    /**
     * @return The state of the key
     * 
     */
    public String keyState() {
        return this.keyState;
    }
    /**
     * @return Specifies the intended use of the key
     * 
     */
    public String keyUsage() {
        return this.keyUsage;
    }
    /**
     * @return Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key.
     * 
     */
    public Boolean multiRegion() {
        return this.multiRegion;
    }
    /**
     * @return Lists the primary and replica keys in same multi-Region key. Present only when the value of `multi_region` is `true`.
     * 
     */
    public List<GetKeyMultiRegionConfiguration> multiRegionConfigurations() {
        return this.multiRegionConfigurations;
    }
    /**
     * @return When this value is `AWS_KMS`, AWS KMS created the key material. When this value is `EXTERNAL`, the key material was imported from your existing key management infrastructure or the CMK lacks key material
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return The time at which the imported key material expires. This value is present only when `origin` is `EXTERNAL` and whose `expiration_model` is `KEY_MATERIAL_EXPIRES`, otherwise this value is 0
     * 
     */
    public String validTo() {
        return this.validTo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String awsAccountId;
        private String creationDate;
        private String customerMasterKeySpec;
        private String deletionDate;
        private String description;
        private Boolean enabled;
        private String expirationModel;
        private @Nullable List<String> grantTokens;
        private String id;
        private String keyId;
        private String keyManager;
        private String keyState;
        private String keyUsage;
        private Boolean multiRegion;
        private List<GetKeyMultiRegionConfiguration> multiRegionConfigurations;
        private String origin;
        private String validTo;
        public Builder() {}
        public Builder(GetKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.creationDate = defaults.creationDate;
    	      this.customerMasterKeySpec = defaults.customerMasterKeySpec;
    	      this.deletionDate = defaults.deletionDate;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.expirationModel = defaults.expirationModel;
    	      this.grantTokens = defaults.grantTokens;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.keyManager = defaults.keyManager;
    	      this.keyState = defaults.keyState;
    	      this.keyUsage = defaults.keyUsage;
    	      this.multiRegion = defaults.multiRegion;
    	      this.multiRegionConfigurations = defaults.multiRegionConfigurations;
    	      this.origin = defaults.origin;
    	      this.validTo = defaults.validTo;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder awsAccountId(String awsAccountId) {
            this.awsAccountId = Objects.requireNonNull(awsAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder customerMasterKeySpec(String customerMasterKeySpec) {
            this.customerMasterKeySpec = Objects.requireNonNull(customerMasterKeySpec);
            return this;
        }
        @CustomType.Setter
        public Builder deletionDate(String deletionDate) {
            this.deletionDate = Objects.requireNonNull(deletionDate);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder expirationModel(String expirationModel) {
            this.expirationModel = Objects.requireNonNull(expirationModel);
            return this;
        }
        @CustomType.Setter
        public Builder grantTokens(@Nullable List<String> grantTokens) {
            this.grantTokens = grantTokens;
            return this;
        }
        public Builder grantTokens(String... grantTokens) {
            return grantTokens(List.of(grantTokens));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        @CustomType.Setter
        public Builder keyManager(String keyManager) {
            this.keyManager = Objects.requireNonNull(keyManager);
            return this;
        }
        @CustomType.Setter
        public Builder keyState(String keyState) {
            this.keyState = Objects.requireNonNull(keyState);
            return this;
        }
        @CustomType.Setter
        public Builder keyUsage(String keyUsage) {
            this.keyUsage = Objects.requireNonNull(keyUsage);
            return this;
        }
        @CustomType.Setter
        public Builder multiRegion(Boolean multiRegion) {
            this.multiRegion = Objects.requireNonNull(multiRegion);
            return this;
        }
        @CustomType.Setter
        public Builder multiRegionConfigurations(List<GetKeyMultiRegionConfiguration> multiRegionConfigurations) {
            this.multiRegionConfigurations = Objects.requireNonNull(multiRegionConfigurations);
            return this;
        }
        public Builder multiRegionConfigurations(GetKeyMultiRegionConfiguration... multiRegionConfigurations) {
            return multiRegionConfigurations(List.of(multiRegionConfigurations));
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }
        @CustomType.Setter
        public Builder validTo(String validTo) {
            this.validTo = Objects.requireNonNull(validTo);
            return this;
        }
        public GetKeyResult build() {
            final var o = new GetKeyResult();
            o.arn = arn;
            o.awsAccountId = awsAccountId;
            o.creationDate = creationDate;
            o.customerMasterKeySpec = customerMasterKeySpec;
            o.deletionDate = deletionDate;
            o.description = description;
            o.enabled = enabled;
            o.expirationModel = expirationModel;
            o.grantTokens = grantTokens;
            o.id = id;
            o.keyId = keyId;
            o.keyManager = keyManager;
            o.keyState = keyState;
            o.keyUsage = keyUsage;
            o.multiRegion = multiRegion;
            o.multiRegionConfigurations = multiRegionConfigurations;
            o.origin = origin;
            o.validTo = validTo;
            return o;
        }
    }
}
