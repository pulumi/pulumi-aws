// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kms.outputs;

import com.pulumi.aws.kms.outputs.GetKeyMultiRegionConfiguration;
import com.pulumi.aws.kms.outputs.GetKeyXksKeyConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyResult {
    /**
     * @return The key ARN of a primary or replica key of a multi-Region key.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The twelve-digit account ID of the AWS account that owns the key
     * 
     */
    private @Nullable String awsAccountId;
    /**
     * @return The cluster ID of the AWS CloudHSM cluster that contains the key material for the KMS key.
     * 
     */
    private @Nullable String cloudHsmClusterId;
    /**
     * @return The date and time when the key was created
     * 
     */
    private @Nullable String creationDate;
    /**
     * @return A unique identifier for the custom key store that contains the KMS key.
     * 
     */
    private @Nullable String customKeyStoreId;
    /**
     * @return Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports
     * 
     */
    private @Nullable String customerMasterKeySpec;
    /**
     * @return The date and time after which AWS KMS deletes the key. This value is present only when `key_state` is `PendingDeletion`, otherwise this value is 0
     * 
     */
    private @Nullable String deletionDate;
    /**
     * @return The description of the key.
     * 
     */
    private @Nullable String description;
    /**
     * @return Specifies whether the key is enabled. When `key_state` is `Enabled` this value is true, otherwise it is false
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Specifies whether the Key&#39;s key material expires. This value is present only when `origin` is `EXTERNAL`, otherwise this value is empty
     * 
     */
    private @Nullable String expirationModel;
    private @Nullable List<String> grantTokens;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String keyId;
    /**
     * @return The key&#39;s manager
     * 
     */
    private @Nullable String keyManager;
    /**
     * @return Describes the type of key material in the KMS key.
     * 
     */
    private @Nullable String keySpec;
    /**
     * @return The state of the key
     * 
     */
    private @Nullable String keyState;
    /**
     * @return Specifies the intended use of the key
     * 
     */
    private @Nullable String keyUsage;
    /**
     * @return Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key.
     * 
     */
    private @Nullable Boolean multiRegion;
    /**
     * @return Lists the primary and replica keys in same multi-Region key. Present only when the value of `multi_region` is `true`.
     * 
     */
    private @Nullable List<GetKeyMultiRegionConfiguration> multiRegionConfigurations;
    /**
     * @return When this value is `AWS_KMS`, AWS KMS created the key material. When this value is `EXTERNAL`, the key material was imported from your existing key management infrastructure or the CMK lacks key material
     * 
     */
    private @Nullable String origin;
    /**
     * @return The waiting period before the primary key in a multi-Region key is deleted.
     * 
     */
    private @Nullable Integer pendingDeletionWindowInDays;
    /**
     * @return The time at which the imported key material expires. This value is present only when `origin` is `EXTERNAL` and whose `expiration_model` is `KEY_MATERIAL_EXPIRES`, otherwise this value is 0
     * 
     */
    private @Nullable String validTo;
    /**
     * @return Information about the external key that is associated with a KMS key in an external key store.
     * 
     */
    private @Nullable List<GetKeyXksKeyConfiguration> xksKeyConfigurations;

    private GetKeyResult() {}
    /**
     * @return The key ARN of a primary or replica key of a multi-Region key.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The twelve-digit account ID of the AWS account that owns the key
     * 
     */
    public Optional<String> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }
    /**
     * @return The cluster ID of the AWS CloudHSM cluster that contains the key material for the KMS key.
     * 
     */
    public Optional<String> cloudHsmClusterId() {
        return Optional.ofNullable(this.cloudHsmClusterId);
    }
    /**
     * @return The date and time when the key was created
     * 
     */
    public Optional<String> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }
    /**
     * @return A unique identifier for the custom key store that contains the KMS key.
     * 
     */
    public Optional<String> customKeyStoreId() {
        return Optional.ofNullable(this.customKeyStoreId);
    }
    /**
     * @return Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports
     * 
     */
    public Optional<String> customerMasterKeySpec() {
        return Optional.ofNullable(this.customerMasterKeySpec);
    }
    /**
     * @return The date and time after which AWS KMS deletes the key. This value is present only when `key_state` is `PendingDeletion`, otherwise this value is 0
     * 
     */
    public Optional<String> deletionDate() {
        return Optional.ofNullable(this.deletionDate);
    }
    /**
     * @return The description of the key.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Specifies whether the key is enabled. When `key_state` is `Enabled` this value is true, otherwise it is false
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Specifies whether the Key&#39;s key material expires. This value is present only when `origin` is `EXTERNAL`, otherwise this value is empty
     * 
     */
    public Optional<String> expirationModel() {
        return Optional.ofNullable(this.expirationModel);
    }
    public List<String> grantTokens() {
        return this.grantTokens == null ? List.of() : this.grantTokens;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The key&#39;s manager
     * 
     */
    public Optional<String> keyManager() {
        return Optional.ofNullable(this.keyManager);
    }
    /**
     * @return Describes the type of key material in the KMS key.
     * 
     */
    public Optional<String> keySpec() {
        return Optional.ofNullable(this.keySpec);
    }
    /**
     * @return The state of the key
     * 
     */
    public Optional<String> keyState() {
        return Optional.ofNullable(this.keyState);
    }
    /**
     * @return Specifies the intended use of the key
     * 
     */
    public Optional<String> keyUsage() {
        return Optional.ofNullable(this.keyUsage);
    }
    /**
     * @return Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key.
     * 
     */
    public Optional<Boolean> multiRegion() {
        return Optional.ofNullable(this.multiRegion);
    }
    /**
     * @return Lists the primary and replica keys in same multi-Region key. Present only when the value of `multi_region` is `true`.
     * 
     */
    public List<GetKeyMultiRegionConfiguration> multiRegionConfigurations() {
        return this.multiRegionConfigurations == null ? List.of() : this.multiRegionConfigurations;
    }
    /**
     * @return When this value is `AWS_KMS`, AWS KMS created the key material. When this value is `EXTERNAL`, the key material was imported from your existing key management infrastructure or the CMK lacks key material
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }
    /**
     * @return The waiting period before the primary key in a multi-Region key is deleted.
     * 
     */
    public Optional<Integer> pendingDeletionWindowInDays() {
        return Optional.ofNullable(this.pendingDeletionWindowInDays);
    }
    /**
     * @return The time at which the imported key material expires. This value is present only when `origin` is `EXTERNAL` and whose `expiration_model` is `KEY_MATERIAL_EXPIRES`, otherwise this value is 0
     * 
     */
    public Optional<String> validTo() {
        return Optional.ofNullable(this.validTo);
    }
    /**
     * @return Information about the external key that is associated with a KMS key in an external key store.
     * 
     */
    public List<GetKeyXksKeyConfiguration> xksKeyConfigurations() {
        return this.xksKeyConfigurations == null ? List.of() : this.xksKeyConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String awsAccountId;
        private @Nullable String cloudHsmClusterId;
        private @Nullable String creationDate;
        private @Nullable String customKeyStoreId;
        private @Nullable String customerMasterKeySpec;
        private @Nullable String deletionDate;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private @Nullable String expirationModel;
        private @Nullable List<String> grantTokens;
        private @Nullable String id;
        private String keyId;
        private @Nullable String keyManager;
        private @Nullable String keySpec;
        private @Nullable String keyState;
        private @Nullable String keyUsage;
        private @Nullable Boolean multiRegion;
        private @Nullable List<GetKeyMultiRegionConfiguration> multiRegionConfigurations;
        private @Nullable String origin;
        private @Nullable Integer pendingDeletionWindowInDays;
        private @Nullable String validTo;
        private @Nullable List<GetKeyXksKeyConfiguration> xksKeyConfigurations;
        public Builder() {}
        public Builder(GetKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.cloudHsmClusterId = defaults.cloudHsmClusterId;
    	      this.creationDate = defaults.creationDate;
    	      this.customKeyStoreId = defaults.customKeyStoreId;
    	      this.customerMasterKeySpec = defaults.customerMasterKeySpec;
    	      this.deletionDate = defaults.deletionDate;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.expirationModel = defaults.expirationModel;
    	      this.grantTokens = defaults.grantTokens;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.keyManager = defaults.keyManager;
    	      this.keySpec = defaults.keySpec;
    	      this.keyState = defaults.keyState;
    	      this.keyUsage = defaults.keyUsage;
    	      this.multiRegion = defaults.multiRegion;
    	      this.multiRegionConfigurations = defaults.multiRegionConfigurations;
    	      this.origin = defaults.origin;
    	      this.pendingDeletionWindowInDays = defaults.pendingDeletionWindowInDays;
    	      this.validTo = defaults.validTo;
    	      this.xksKeyConfigurations = defaults.xksKeyConfigurations;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder awsAccountId(@Nullable String awsAccountId) {
            this.awsAccountId = awsAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudHsmClusterId(@Nullable String cloudHsmClusterId) {
            this.cloudHsmClusterId = cloudHsmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        @CustomType.Setter
        public Builder customKeyStoreId(@Nullable String customKeyStoreId) {
            this.customKeyStoreId = customKeyStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder customerMasterKeySpec(@Nullable String customerMasterKeySpec) {
            this.customerMasterKeySpec = customerMasterKeySpec;
            return this;
        }
        @CustomType.Setter
        public Builder deletionDate(@Nullable String deletionDate) {
            this.deletionDate = deletionDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder expirationModel(@Nullable String expirationModel) {
            this.expirationModel = expirationModel;
            return this;
        }
        @CustomType.Setter
        public Builder grantTokens(@Nullable List<String> grantTokens) {
            this.grantTokens = grantTokens;
            return this;
        }
        public Builder grantTokens(String... grantTokens) {
            return grantTokens(List.of(grantTokens));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        @CustomType.Setter
        public Builder keyManager(@Nullable String keyManager) {
            this.keyManager = keyManager;
            return this;
        }
        @CustomType.Setter
        public Builder keySpec(@Nullable String keySpec) {
            this.keySpec = keySpec;
            return this;
        }
        @CustomType.Setter
        public Builder keyState(@Nullable String keyState) {
            this.keyState = keyState;
            return this;
        }
        @CustomType.Setter
        public Builder keyUsage(@Nullable String keyUsage) {
            this.keyUsage = keyUsage;
            return this;
        }
        @CustomType.Setter
        public Builder multiRegion(@Nullable Boolean multiRegion) {
            this.multiRegion = multiRegion;
            return this;
        }
        @CustomType.Setter
        public Builder multiRegionConfigurations(@Nullable List<GetKeyMultiRegionConfiguration> multiRegionConfigurations) {
            this.multiRegionConfigurations = multiRegionConfigurations;
            return this;
        }
        public Builder multiRegionConfigurations(GetKeyMultiRegionConfiguration... multiRegionConfigurations) {
            return multiRegionConfigurations(List.of(multiRegionConfigurations));
        }
        @CustomType.Setter
        public Builder origin(@Nullable String origin) {
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder pendingDeletionWindowInDays(@Nullable Integer pendingDeletionWindowInDays) {
            this.pendingDeletionWindowInDays = pendingDeletionWindowInDays;
            return this;
        }
        @CustomType.Setter
        public Builder validTo(@Nullable String validTo) {
            this.validTo = validTo;
            return this;
        }
        @CustomType.Setter
        public Builder xksKeyConfigurations(@Nullable List<GetKeyXksKeyConfiguration> xksKeyConfigurations) {
            this.xksKeyConfigurations = xksKeyConfigurations;
            return this;
        }
        public Builder xksKeyConfigurations(GetKeyXksKeyConfiguration... xksKeyConfigurations) {
            return xksKeyConfigurations(List.of(xksKeyConfigurations));
        }
        public GetKeyResult build() {
            final var o = new GetKeyResult();
            o.arn = arn;
            o.awsAccountId = awsAccountId;
            o.cloudHsmClusterId = cloudHsmClusterId;
            o.creationDate = creationDate;
            o.customKeyStoreId = customKeyStoreId;
            o.customerMasterKeySpec = customerMasterKeySpec;
            o.deletionDate = deletionDate;
            o.description = description;
            o.enabled = enabled;
            o.expirationModel = expirationModel;
            o.grantTokens = grantTokens;
            o.id = id;
            o.keyId = keyId;
            o.keyManager = keyManager;
            o.keySpec = keySpec;
            o.keyState = keyState;
            o.keyUsage = keyUsage;
            o.multiRegion = multiRegion;
            o.multiRegionConfigurations = multiRegionConfigurations;
            o.origin = origin;
            o.pendingDeletionWindowInDays = pendingDeletionWindowInDays;
            o.validTo = validTo;
            o.xksKeyConfigurations = xksKeyConfigurations;
            return o;
        }
    }
}
