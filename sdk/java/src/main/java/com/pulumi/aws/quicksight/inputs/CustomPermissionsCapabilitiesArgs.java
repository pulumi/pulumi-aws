// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomPermissionsCapabilitiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomPermissionsCapabilitiesArgs Empty = new CustomPermissionsCapabilitiesArgs();

    /**
     * The ability to add or run anomaly detection. Valid values: `DENY`.
     * 
     */
    @Import(name="addOrRunAnomalyDetectionForAnalyses")
    private @Nullable Output<String> addOrRunAnomalyDetectionForAnalyses;

    /**
     * @return The ability to add or run anomaly detection. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> addOrRunAnomalyDetectionForAnalyses() {
        return Optional.ofNullable(this.addOrRunAnomalyDetectionForAnalyses);
    }

    /**
     * The ability to create and update email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="createAndUpdateDashboardEmailReports")
    private @Nullable Output<String> createAndUpdateDashboardEmailReports;

    /**
     * @return The ability to create and update email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createAndUpdateDashboardEmailReports() {
        return Optional.ofNullable(this.createAndUpdateDashboardEmailReports);
    }

    /**
     * The ability to create and update data sources. Valid values: `DENY`.
     * 
     */
    @Import(name="createAndUpdateDataSources")
    private @Nullable Output<String> createAndUpdateDataSources;

    /**
     * @return The ability to create and update data sources. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createAndUpdateDataSources() {
        return Optional.ofNullable(this.createAndUpdateDataSources);
    }

    /**
     * The ability to create and update datasets. Valid values: `DENY`.
     * 
     */
    @Import(name="createAndUpdateDatasets")
    private @Nullable Output<String> createAndUpdateDatasets;

    /**
     * @return The ability to create and update datasets. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createAndUpdateDatasets() {
        return Optional.ofNullable(this.createAndUpdateDatasets);
    }

    /**
     * The ability to export to create and update themes. Valid values: `DENY`.
     * 
     */
    @Import(name="createAndUpdateThemes")
    private @Nullable Output<String> createAndUpdateThemes;

    /**
     * @return The ability to export to create and update themes. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createAndUpdateThemes() {
        return Optional.ofNullable(this.createAndUpdateThemes);
    }

    /**
     * The ability to create and update threshold alerts. Valid values: `DENY`.
     * 
     */
    @Import(name="createAndUpdateThresholdAlerts")
    private @Nullable Output<String> createAndUpdateThresholdAlerts;

    /**
     * @return The ability to create and update threshold alerts. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createAndUpdateThresholdAlerts() {
        return Optional.ofNullable(this.createAndUpdateThresholdAlerts);
    }

    /**
     * The ability to create shared folders. Valid values: `DENY`.
     * 
     */
    @Import(name="createSharedFolders")
    private @Nullable Output<String> createSharedFolders;

    /**
     * @return The ability to create shared folders. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createSharedFolders() {
        return Optional.ofNullable(this.createSharedFolders);
    }

    /**
     * The ability to create a SPICE dataset. Valid values: `DENY`.
     * 
     */
    @Import(name="createSpiceDataset")
    private @Nullable Output<String> createSpiceDataset;

    /**
     * @return The ability to create a SPICE dataset. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> createSpiceDataset() {
        return Optional.ofNullable(this.createSpiceDataset);
    }

    /**
     * The ability to export to CSV files from the UI. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToCsv")
    private @Nullable Output<String> exportToCsv;

    /**
     * @return The ability to export to CSV files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToCsv() {
        return Optional.ofNullable(this.exportToCsv);
    }

    /**
     * The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToCsvInScheduledReports")
    private @Nullable Output<String> exportToCsvInScheduledReports;

    /**
     * @return The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToCsvInScheduledReports() {
        return Optional.ofNullable(this.exportToCsvInScheduledReports);
    }

    /**
     * The ability to export to Excel files from the UI. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToExcel")
    private @Nullable Output<String> exportToExcel;

    /**
     * @return The ability to export to Excel files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToExcel() {
        return Optional.ofNullable(this.exportToExcel);
    }

    /**
     * The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToExcelInScheduledReports")
    private @Nullable Output<String> exportToExcelInScheduledReports;

    /**
     * @return The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToExcelInScheduledReports() {
        return Optional.ofNullable(this.exportToExcelInScheduledReports);
    }

    /**
     * The ability to export to PDF files from the UI. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToPdf")
    private @Nullable Output<String> exportToPdf;

    /**
     * @return The ability to export to PDF files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToPdf() {
        return Optional.ofNullable(this.exportToPdf);
    }

    /**
     * The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="exportToPdfInScheduledReports")
    private @Nullable Output<String> exportToPdfInScheduledReports;

    /**
     * @return The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> exportToPdfInScheduledReports() {
        return Optional.ofNullable(this.exportToPdfInScheduledReports);
    }

    /**
     * The ability to include content in scheduled email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="includeContentInScheduledReportsEmail")
    private @Nullable Output<String> includeContentInScheduledReportsEmail;

    /**
     * @return The ability to include content in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> includeContentInScheduledReportsEmail() {
        return Optional.ofNullable(this.includeContentInScheduledReportsEmail);
    }

    /**
     * The ability to print reports. Valid values: `DENY`.
     * 
     */
    @Import(name="printReports")
    private @Nullable Output<String> printReports;

    /**
     * @return The ability to print reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> printReports() {
        return Optional.ofNullable(this.printReports);
    }

    /**
     * The ability to rename shared folders. Valid values: `DENY`.
     * 
     */
    @Import(name="renameSharedFolders")
    private @Nullable Output<String> renameSharedFolders;

    /**
     * @return The ability to rename shared folders. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> renameSharedFolders() {
        return Optional.ofNullable(this.renameSharedFolders);
    }

    /**
     * The ability to share analyses. Valid values: `DENY`.
     * 
     */
    @Import(name="shareAnalyses")
    private @Nullable Output<String> shareAnalyses;

    /**
     * @return The ability to share analyses. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> shareAnalyses() {
        return Optional.ofNullable(this.shareAnalyses);
    }

    /**
     * The ability to share dashboards. Valid values: `DENY`.
     * 
     */
    @Import(name="shareDashboards")
    private @Nullable Output<String> shareDashboards;

    /**
     * @return The ability to share dashboards. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> shareDashboards() {
        return Optional.ofNullable(this.shareDashboards);
    }

    /**
     * The ability to share data sources. Valid values: `DENY`.
     * 
     */
    @Import(name="shareDataSources")
    private @Nullable Output<String> shareDataSources;

    /**
     * @return The ability to share data sources. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> shareDataSources() {
        return Optional.ofNullable(this.shareDataSources);
    }

    /**
     * The ability to share datasets. Valid values: `DENY`.
     * 
     */
    @Import(name="shareDatasets")
    private @Nullable Output<String> shareDatasets;

    /**
     * @return The ability to share datasets. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> shareDatasets() {
        return Optional.ofNullable(this.shareDatasets);
    }

    /**
     * The ability to subscribe to email reports. Valid values: `DENY`.
     * 
     */
    @Import(name="subscribeDashboardEmailReports")
    private @Nullable Output<String> subscribeDashboardEmailReports;

    /**
     * @return The ability to subscribe to email reports. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> subscribeDashboardEmailReports() {
        return Optional.ofNullable(this.subscribeDashboardEmailReports);
    }

    /**
     * The ability to view account SPICE capacity. Valid values: `DENY`.
     * 
     */
    @Import(name="viewAccountSpiceCapacity")
    private @Nullable Output<String> viewAccountSpiceCapacity;

    /**
     * @return The ability to view account SPICE capacity. Valid values: `DENY`.
     * 
     */
    public Optional<Output<String>> viewAccountSpiceCapacity() {
        return Optional.ofNullable(this.viewAccountSpiceCapacity);
    }

    private CustomPermissionsCapabilitiesArgs() {}

    private CustomPermissionsCapabilitiesArgs(CustomPermissionsCapabilitiesArgs $) {
        this.addOrRunAnomalyDetectionForAnalyses = $.addOrRunAnomalyDetectionForAnalyses;
        this.createAndUpdateDashboardEmailReports = $.createAndUpdateDashboardEmailReports;
        this.createAndUpdateDataSources = $.createAndUpdateDataSources;
        this.createAndUpdateDatasets = $.createAndUpdateDatasets;
        this.createAndUpdateThemes = $.createAndUpdateThemes;
        this.createAndUpdateThresholdAlerts = $.createAndUpdateThresholdAlerts;
        this.createSharedFolders = $.createSharedFolders;
        this.createSpiceDataset = $.createSpiceDataset;
        this.exportToCsv = $.exportToCsv;
        this.exportToCsvInScheduledReports = $.exportToCsvInScheduledReports;
        this.exportToExcel = $.exportToExcel;
        this.exportToExcelInScheduledReports = $.exportToExcelInScheduledReports;
        this.exportToPdf = $.exportToPdf;
        this.exportToPdfInScheduledReports = $.exportToPdfInScheduledReports;
        this.includeContentInScheduledReportsEmail = $.includeContentInScheduledReportsEmail;
        this.printReports = $.printReports;
        this.renameSharedFolders = $.renameSharedFolders;
        this.shareAnalyses = $.shareAnalyses;
        this.shareDashboards = $.shareDashboards;
        this.shareDataSources = $.shareDataSources;
        this.shareDatasets = $.shareDatasets;
        this.subscribeDashboardEmailReports = $.subscribeDashboardEmailReports;
        this.viewAccountSpiceCapacity = $.viewAccountSpiceCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomPermissionsCapabilitiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomPermissionsCapabilitiesArgs $;

        public Builder() {
            $ = new CustomPermissionsCapabilitiesArgs();
        }

        public Builder(CustomPermissionsCapabilitiesArgs defaults) {
            $ = new CustomPermissionsCapabilitiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addOrRunAnomalyDetectionForAnalyses The ability to add or run anomaly detection. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder addOrRunAnomalyDetectionForAnalyses(@Nullable Output<String> addOrRunAnomalyDetectionForAnalyses) {
            $.addOrRunAnomalyDetectionForAnalyses = addOrRunAnomalyDetectionForAnalyses;
            return this;
        }

        /**
         * @param addOrRunAnomalyDetectionForAnalyses The ability to add or run anomaly detection. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder addOrRunAnomalyDetectionForAnalyses(String addOrRunAnomalyDetectionForAnalyses) {
            return addOrRunAnomalyDetectionForAnalyses(Output.of(addOrRunAnomalyDetectionForAnalyses));
        }

        /**
         * @param createAndUpdateDashboardEmailReports The ability to create and update email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDashboardEmailReports(@Nullable Output<String> createAndUpdateDashboardEmailReports) {
            $.createAndUpdateDashboardEmailReports = createAndUpdateDashboardEmailReports;
            return this;
        }

        /**
         * @param createAndUpdateDashboardEmailReports The ability to create and update email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDashboardEmailReports(String createAndUpdateDashboardEmailReports) {
            return createAndUpdateDashboardEmailReports(Output.of(createAndUpdateDashboardEmailReports));
        }

        /**
         * @param createAndUpdateDataSources The ability to create and update data sources. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDataSources(@Nullable Output<String> createAndUpdateDataSources) {
            $.createAndUpdateDataSources = createAndUpdateDataSources;
            return this;
        }

        /**
         * @param createAndUpdateDataSources The ability to create and update data sources. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDataSources(String createAndUpdateDataSources) {
            return createAndUpdateDataSources(Output.of(createAndUpdateDataSources));
        }

        /**
         * @param createAndUpdateDatasets The ability to create and update datasets. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDatasets(@Nullable Output<String> createAndUpdateDatasets) {
            $.createAndUpdateDatasets = createAndUpdateDatasets;
            return this;
        }

        /**
         * @param createAndUpdateDatasets The ability to create and update datasets. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateDatasets(String createAndUpdateDatasets) {
            return createAndUpdateDatasets(Output.of(createAndUpdateDatasets));
        }

        /**
         * @param createAndUpdateThemes The ability to export to create and update themes. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateThemes(@Nullable Output<String> createAndUpdateThemes) {
            $.createAndUpdateThemes = createAndUpdateThemes;
            return this;
        }

        /**
         * @param createAndUpdateThemes The ability to export to create and update themes. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateThemes(String createAndUpdateThemes) {
            return createAndUpdateThemes(Output.of(createAndUpdateThemes));
        }

        /**
         * @param createAndUpdateThresholdAlerts The ability to create and update threshold alerts. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateThresholdAlerts(@Nullable Output<String> createAndUpdateThresholdAlerts) {
            $.createAndUpdateThresholdAlerts = createAndUpdateThresholdAlerts;
            return this;
        }

        /**
         * @param createAndUpdateThresholdAlerts The ability to create and update threshold alerts. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createAndUpdateThresholdAlerts(String createAndUpdateThresholdAlerts) {
            return createAndUpdateThresholdAlerts(Output.of(createAndUpdateThresholdAlerts));
        }

        /**
         * @param createSharedFolders The ability to create shared folders. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createSharedFolders(@Nullable Output<String> createSharedFolders) {
            $.createSharedFolders = createSharedFolders;
            return this;
        }

        /**
         * @param createSharedFolders The ability to create shared folders. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createSharedFolders(String createSharedFolders) {
            return createSharedFolders(Output.of(createSharedFolders));
        }

        /**
         * @param createSpiceDataset The ability to create a SPICE dataset. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createSpiceDataset(@Nullable Output<String> createSpiceDataset) {
            $.createSpiceDataset = createSpiceDataset;
            return this;
        }

        /**
         * @param createSpiceDataset The ability to create a SPICE dataset. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder createSpiceDataset(String createSpiceDataset) {
            return createSpiceDataset(Output.of(createSpiceDataset));
        }

        /**
         * @param exportToCsv The ability to export to CSV files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToCsv(@Nullable Output<String> exportToCsv) {
            $.exportToCsv = exportToCsv;
            return this;
        }

        /**
         * @param exportToCsv The ability to export to CSV files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToCsv(String exportToCsv) {
            return exportToCsv(Output.of(exportToCsv));
        }

        /**
         * @param exportToCsvInScheduledReports The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToCsvInScheduledReports(@Nullable Output<String> exportToCsvInScheduledReports) {
            $.exportToCsvInScheduledReports = exportToCsvInScheduledReports;
            return this;
        }

        /**
         * @param exportToCsvInScheduledReports The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToCsvInScheduledReports(String exportToCsvInScheduledReports) {
            return exportToCsvInScheduledReports(Output.of(exportToCsvInScheduledReports));
        }

        /**
         * @param exportToExcel The ability to export to Excel files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToExcel(@Nullable Output<String> exportToExcel) {
            $.exportToExcel = exportToExcel;
            return this;
        }

        /**
         * @param exportToExcel The ability to export to Excel files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToExcel(String exportToExcel) {
            return exportToExcel(Output.of(exportToExcel));
        }

        /**
         * @param exportToExcelInScheduledReports The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToExcelInScheduledReports(@Nullable Output<String> exportToExcelInScheduledReports) {
            $.exportToExcelInScheduledReports = exportToExcelInScheduledReports;
            return this;
        }

        /**
         * @param exportToExcelInScheduledReports The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToExcelInScheduledReports(String exportToExcelInScheduledReports) {
            return exportToExcelInScheduledReports(Output.of(exportToExcelInScheduledReports));
        }

        /**
         * @param exportToPdf The ability to export to PDF files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToPdf(@Nullable Output<String> exportToPdf) {
            $.exportToPdf = exportToPdf;
            return this;
        }

        /**
         * @param exportToPdf The ability to export to PDF files from the UI. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToPdf(String exportToPdf) {
            return exportToPdf(Output.of(exportToPdf));
        }

        /**
         * @param exportToPdfInScheduledReports The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToPdfInScheduledReports(@Nullable Output<String> exportToPdfInScheduledReports) {
            $.exportToPdfInScheduledReports = exportToPdfInScheduledReports;
            return this;
        }

        /**
         * @param exportToPdfInScheduledReports The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder exportToPdfInScheduledReports(String exportToPdfInScheduledReports) {
            return exportToPdfInScheduledReports(Output.of(exportToPdfInScheduledReports));
        }

        /**
         * @param includeContentInScheduledReportsEmail The ability to include content in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder includeContentInScheduledReportsEmail(@Nullable Output<String> includeContentInScheduledReportsEmail) {
            $.includeContentInScheduledReportsEmail = includeContentInScheduledReportsEmail;
            return this;
        }

        /**
         * @param includeContentInScheduledReportsEmail The ability to include content in scheduled email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder includeContentInScheduledReportsEmail(String includeContentInScheduledReportsEmail) {
            return includeContentInScheduledReportsEmail(Output.of(includeContentInScheduledReportsEmail));
        }

        /**
         * @param printReports The ability to print reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder printReports(@Nullable Output<String> printReports) {
            $.printReports = printReports;
            return this;
        }

        /**
         * @param printReports The ability to print reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder printReports(String printReports) {
            return printReports(Output.of(printReports));
        }

        /**
         * @param renameSharedFolders The ability to rename shared folders. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder renameSharedFolders(@Nullable Output<String> renameSharedFolders) {
            $.renameSharedFolders = renameSharedFolders;
            return this;
        }

        /**
         * @param renameSharedFolders The ability to rename shared folders. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder renameSharedFolders(String renameSharedFolders) {
            return renameSharedFolders(Output.of(renameSharedFolders));
        }

        /**
         * @param shareAnalyses The ability to share analyses. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareAnalyses(@Nullable Output<String> shareAnalyses) {
            $.shareAnalyses = shareAnalyses;
            return this;
        }

        /**
         * @param shareAnalyses The ability to share analyses. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareAnalyses(String shareAnalyses) {
            return shareAnalyses(Output.of(shareAnalyses));
        }

        /**
         * @param shareDashboards The ability to share dashboards. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDashboards(@Nullable Output<String> shareDashboards) {
            $.shareDashboards = shareDashboards;
            return this;
        }

        /**
         * @param shareDashboards The ability to share dashboards. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDashboards(String shareDashboards) {
            return shareDashboards(Output.of(shareDashboards));
        }

        /**
         * @param shareDataSources The ability to share data sources. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDataSources(@Nullable Output<String> shareDataSources) {
            $.shareDataSources = shareDataSources;
            return this;
        }

        /**
         * @param shareDataSources The ability to share data sources. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDataSources(String shareDataSources) {
            return shareDataSources(Output.of(shareDataSources));
        }

        /**
         * @param shareDatasets The ability to share datasets. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDatasets(@Nullable Output<String> shareDatasets) {
            $.shareDatasets = shareDatasets;
            return this;
        }

        /**
         * @param shareDatasets The ability to share datasets. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder shareDatasets(String shareDatasets) {
            return shareDatasets(Output.of(shareDatasets));
        }

        /**
         * @param subscribeDashboardEmailReports The ability to subscribe to email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder subscribeDashboardEmailReports(@Nullable Output<String> subscribeDashboardEmailReports) {
            $.subscribeDashboardEmailReports = subscribeDashboardEmailReports;
            return this;
        }

        /**
         * @param subscribeDashboardEmailReports The ability to subscribe to email reports. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder subscribeDashboardEmailReports(String subscribeDashboardEmailReports) {
            return subscribeDashboardEmailReports(Output.of(subscribeDashboardEmailReports));
        }

        /**
         * @param viewAccountSpiceCapacity The ability to view account SPICE capacity. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder viewAccountSpiceCapacity(@Nullable Output<String> viewAccountSpiceCapacity) {
            $.viewAccountSpiceCapacity = viewAccountSpiceCapacity;
            return this;
        }

        /**
         * @param viewAccountSpiceCapacity The ability to view account SPICE capacity. Valid values: `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder viewAccountSpiceCapacity(String viewAccountSpiceCapacity) {
            return viewAccountSpiceCapacity(Output.of(viewAccountSpiceCapacity));
        }

        public CustomPermissionsCapabilitiesArgs build() {
            return $;
        }
    }

}
