// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StudioSessionMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioSessionMappingArgs Empty = new StudioSessionMappingArgs();

    @Import(name="identityId")
    private @Nullable Output<String> identityId;

    public Optional<Output<String>> identityId() {
        return Optional.ofNullable(this.identityId);
    }

    @Import(name="identityName")
    private @Nullable Output<String> identityName;

    public Optional<Output<String>> identityName() {
        return Optional.ofNullable(this.identityName);
    }

    @Import(name="identityType", required=true)
    private Output<String> identityType;

    public Output<String> identityType() {
        return this.identityType;
    }

    @Import(name="sessionPolicyArn", required=true)
    private Output<String> sessionPolicyArn;

    public Output<String> sessionPolicyArn() {
        return this.sessionPolicyArn;
    }

    @Import(name="studioId", required=true)
    private Output<String> studioId;

    public Output<String> studioId() {
        return this.studioId;
    }

    private StudioSessionMappingArgs() {}

    private StudioSessionMappingArgs(StudioSessionMappingArgs $) {
        this.identityId = $.identityId;
        this.identityName = $.identityName;
        this.identityType = $.identityType;
        this.sessionPolicyArn = $.sessionPolicyArn;
        this.studioId = $.studioId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioSessionMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioSessionMappingArgs $;

        public Builder() {
            $ = new StudioSessionMappingArgs();
        }

        public Builder(StudioSessionMappingArgs defaults) {
            $ = new StudioSessionMappingArgs(Objects.requireNonNull(defaults));
        }

        public Builder identityId(@Nullable Output<String> identityId) {
            $.identityId = identityId;
            return this;
        }

        public Builder identityId(String identityId) {
            return identityId(Output.of(identityId));
        }

        public Builder identityName(@Nullable Output<String> identityName) {
            $.identityName = identityName;
            return this;
        }

        public Builder identityName(String identityName) {
            return identityName(Output.of(identityName));
        }

        public Builder identityType(Output<String> identityType) {
            $.identityType = identityType;
            return this;
        }

        public Builder identityType(String identityType) {
            return identityType(Output.of(identityType));
        }

        public Builder sessionPolicyArn(Output<String> sessionPolicyArn) {
            $.sessionPolicyArn = sessionPolicyArn;
            return this;
        }

        public Builder sessionPolicyArn(String sessionPolicyArn) {
            return sessionPolicyArn(Output.of(sessionPolicyArn));
        }

        public Builder studioId(Output<String> studioId) {
            $.studioId = studioId;
            return this;
        }

        public Builder studioId(String studioId) {
            return studioId(Output.of(studioId));
        }

        public StudioSessionMappingArgs build() {
            $.identityType = Objects.requireNonNull($.identityType, "expected parameter 'identityType' to be non-null");
            $.sessionPolicyArn = Objects.requireNonNull($.sessionPolicyArn, "expected parameter 'sessionPolicyArn' to be non-null");
            $.studioId = Objects.requireNonNull($.studioId, "expected parameter 'studioId' to be non-null");
            return $;
        }
    }

}
