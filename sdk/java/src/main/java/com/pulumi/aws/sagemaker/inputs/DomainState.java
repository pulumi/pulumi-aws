// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.DomainDefaultSpaceSettingsArgs;
import com.pulumi.aws.sagemaker.inputs.DomainDefaultUserSettingsArgs;
import com.pulumi.aws.sagemaker.inputs.DomainDomainSettingsArgs;
import com.pulumi.aws.sagemaker.inputs.DomainRetentionPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainState extends com.pulumi.resources.ResourceArgs {

    public static final DomainState Empty = new DomainState();

    /**
     * Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
     * 
     */
    @Import(name="appNetworkAccessType")
    private @Nullable Output<String> appNetworkAccessType;

    /**
     * @return Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
     * 
     */
    public Optional<Output<String>> appNetworkAccessType() {
        return Optional.ofNullable(this.appNetworkAccessType);
    }

    /**
     * The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
     * 
     */
    @Import(name="appSecurityGroupManagement")
    private @Nullable Output<String> appSecurityGroupManagement;

    /**
     * @return The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
     * 
     */
    public Optional<Output<String>> appSecurityGroupManagement() {
        return Optional.ofNullable(this.appSecurityGroupManagement);
    }

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Domain.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this Domain.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
     * 
     */
    @Import(name="authMode")
    private @Nullable Output<String> authMode;

    /**
     * @return The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
     * 
     */
    public Optional<Output<String>> authMode() {
        return Optional.ofNullable(this.authMode);
    }

    /**
     * The default space settings. See Default Space Settings below.
     * 
     */
    @Import(name="defaultSpaceSettings")
    private @Nullable Output<DomainDefaultSpaceSettingsArgs> defaultSpaceSettings;

    /**
     * @return The default space settings. See Default Space Settings below.
     * 
     */
    public Optional<Output<DomainDefaultSpaceSettingsArgs>> defaultSpaceSettings() {
        return Optional.ofNullable(this.defaultSpaceSettings);
    }

    /**
     * The default user settings. See Default User Settings below.
     * 
     */
    @Import(name="defaultUserSettings")
    private @Nullable Output<DomainDefaultUserSettingsArgs> defaultUserSettings;

    /**
     * @return The default user settings. See Default User Settings below.
     * 
     */
    public Optional<Output<DomainDefaultUserSettingsArgs>> defaultUserSettings() {
        return Optional.ofNullable(this.defaultUserSettings);
    }

    /**
     * The domain name.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return The domain name.
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * The domain&#39;s settings.
     * 
     */
    @Import(name="domainSettings")
    private @Nullable Output<DomainDomainSettingsArgs> domainSettings;

    /**
     * @return The domain&#39;s settings.
     * 
     */
    public Optional<Output<DomainDomainSettingsArgs>> domainSettings() {
        return Optional.ofNullable(this.domainSettings);
    }

    /**
     * The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     * 
     */
    @Import(name="homeEfsFileSystemId")
    private @Nullable Output<String> homeEfsFileSystemId;

    /**
     * @return The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     * 
     */
    public Optional<Output<String>> homeEfsFileSystemId() {
        return Optional.ofNullable(this.homeEfsFileSystemId);
    }

    /**
     * The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
     * 
     */
    @Import(name="retentionPolicy")
    private @Nullable Output<DomainRetentionPolicyArgs> retentionPolicy;

    /**
     * @return The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
     * 
     */
    public Optional<Output<DomainRetentionPolicyArgs>> retentionPolicy() {
        return Optional.ofNullable(this.retentionPolicy);
    }

    /**
     * The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
     * 
     */
    @Import(name="securityGroupIdForDomainBoundary")
    private @Nullable Output<String> securityGroupIdForDomainBoundary;

    /**
     * @return The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
     * 
     */
    public Optional<Output<String>> securityGroupIdForDomainBoundary() {
        return Optional.ofNullable(this.securityGroupIdForDomainBoundary);
    }

    /**
     * The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after September 19, 2023.
     * 
     */
    @Import(name="singleSignOnApplicationArn")
    private @Nullable Output<String> singleSignOnApplicationArn;

    /**
     * @return The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after September 19, 2023.
     * 
     */
    public Optional<Output<String>> singleSignOnApplicationArn() {
        return Optional.ofNullable(this.singleSignOnApplicationArn);
    }

    /**
     * The SSO managed application instance ID.
     * 
     */
    @Import(name="singleSignOnManagedApplicationInstanceId")
    private @Nullable Output<String> singleSignOnManagedApplicationInstanceId;

    /**
     * @return The SSO managed application instance ID.
     * 
     */
    public Optional<Output<String>> singleSignOnManagedApplicationInstanceId() {
        return Optional.ofNullable(this.singleSignOnManagedApplicationInstanceId);
    }

    /**
     * The VPC subnets that Studio uses for communication.
     * 
     */
    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    /**
     * @return The VPC subnets that Studio uses for communication.
     * 
     */
    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The domain&#39;s URL.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The domain&#39;s URL.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private DomainState() {}

    private DomainState(DomainState $) {
        this.appNetworkAccessType = $.appNetworkAccessType;
        this.appSecurityGroupManagement = $.appSecurityGroupManagement;
        this.arn = $.arn;
        this.authMode = $.authMode;
        this.defaultSpaceSettings = $.defaultSpaceSettings;
        this.defaultUserSettings = $.defaultUserSettings;
        this.domainName = $.domainName;
        this.domainSettings = $.domainSettings;
        this.homeEfsFileSystemId = $.homeEfsFileSystemId;
        this.kmsKeyId = $.kmsKeyId;
        this.retentionPolicy = $.retentionPolicy;
        this.securityGroupIdForDomainBoundary = $.securityGroupIdForDomainBoundary;
        this.singleSignOnApplicationArn = $.singleSignOnApplicationArn;
        this.singleSignOnManagedApplicationInstanceId = $.singleSignOnManagedApplicationInstanceId;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.url = $.url;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainState $;

        public Builder() {
            $ = new DomainState();
        }

        public Builder(DomainState defaults) {
            $ = new DomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appNetworkAccessType Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
         * 
         * @return builder
         * 
         */
        public Builder appNetworkAccessType(@Nullable Output<String> appNetworkAccessType) {
            $.appNetworkAccessType = appNetworkAccessType;
            return this;
        }

        /**
         * @param appNetworkAccessType Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
         * 
         * @return builder
         * 
         */
        public Builder appNetworkAccessType(String appNetworkAccessType) {
            return appNetworkAccessType(Output.of(appNetworkAccessType));
        }

        /**
         * @param appSecurityGroupManagement The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
         * 
         * @return builder
         * 
         */
        public Builder appSecurityGroupManagement(@Nullable Output<String> appSecurityGroupManagement) {
            $.appSecurityGroupManagement = appSecurityGroupManagement;
            return this;
        }

        /**
         * @param appSecurityGroupManagement The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
         * 
         * @return builder
         * 
         */
        public Builder appSecurityGroupManagement(String appSecurityGroupManagement) {
            return appSecurityGroupManagement(Output.of(appSecurityGroupManagement));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Domain.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Domain.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param authMode The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
         * 
         * @return builder
         * 
         */
        public Builder authMode(@Nullable Output<String> authMode) {
            $.authMode = authMode;
            return this;
        }

        /**
         * @param authMode The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
         * 
         * @return builder
         * 
         */
        public Builder authMode(String authMode) {
            return authMode(Output.of(authMode));
        }

        /**
         * @param defaultSpaceSettings The default space settings. See Default Space Settings below.
         * 
         * @return builder
         * 
         */
        public Builder defaultSpaceSettings(@Nullable Output<DomainDefaultSpaceSettingsArgs> defaultSpaceSettings) {
            $.defaultSpaceSettings = defaultSpaceSettings;
            return this;
        }

        /**
         * @param defaultSpaceSettings The default space settings. See Default Space Settings below.
         * 
         * @return builder
         * 
         */
        public Builder defaultSpaceSettings(DomainDefaultSpaceSettingsArgs defaultSpaceSettings) {
            return defaultSpaceSettings(Output.of(defaultSpaceSettings));
        }

        /**
         * @param defaultUserSettings The default user settings. See Default User Settings below.
         * 
         * @return builder
         * 
         */
        public Builder defaultUserSettings(@Nullable Output<DomainDefaultUserSettingsArgs> defaultUserSettings) {
            $.defaultUserSettings = defaultUserSettings;
            return this;
        }

        /**
         * @param defaultUserSettings The default user settings. See Default User Settings below.
         * 
         * @return builder
         * 
         */
        public Builder defaultUserSettings(DomainDefaultUserSettingsArgs defaultUserSettings) {
            return defaultUserSettings(Output.of(defaultUserSettings));
        }

        /**
         * @param domainName The domain name.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The domain name.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param domainSettings The domain&#39;s settings.
         * 
         * @return builder
         * 
         */
        public Builder domainSettings(@Nullable Output<DomainDomainSettingsArgs> domainSettings) {
            $.domainSettings = domainSettings;
            return this;
        }

        /**
         * @param domainSettings The domain&#39;s settings.
         * 
         * @return builder
         * 
         */
        public Builder domainSettings(DomainDomainSettingsArgs domainSettings) {
            return domainSettings(Output.of(domainSettings));
        }

        /**
         * @param homeEfsFileSystemId The ID of the Amazon Elastic File System (EFS) managed by this Domain.
         * 
         * @return builder
         * 
         */
        public Builder homeEfsFileSystemId(@Nullable Output<String> homeEfsFileSystemId) {
            $.homeEfsFileSystemId = homeEfsFileSystemId;
            return this;
        }

        /**
         * @param homeEfsFileSystemId The ID of the Amazon Elastic File System (EFS) managed by this Domain.
         * 
         * @return builder
         * 
         */
        public Builder homeEfsFileSystemId(String homeEfsFileSystemId) {
            return homeEfsFileSystemId(Output.of(homeEfsFileSystemId));
        }

        /**
         * @param kmsKeyId The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param retentionPolicy The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
         * 
         * @return builder
         * 
         */
        public Builder retentionPolicy(@Nullable Output<DomainRetentionPolicyArgs> retentionPolicy) {
            $.retentionPolicy = retentionPolicy;
            return this;
        }

        /**
         * @param retentionPolicy The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
         * 
         * @return builder
         * 
         */
        public Builder retentionPolicy(DomainRetentionPolicyArgs retentionPolicy) {
            return retentionPolicy(Output.of(retentionPolicy));
        }

        /**
         * @param securityGroupIdForDomainBoundary The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIdForDomainBoundary(@Nullable Output<String> securityGroupIdForDomainBoundary) {
            $.securityGroupIdForDomainBoundary = securityGroupIdForDomainBoundary;
            return this;
        }

        /**
         * @param securityGroupIdForDomainBoundary The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIdForDomainBoundary(String securityGroupIdForDomainBoundary) {
            return securityGroupIdForDomainBoundary(Output.of(securityGroupIdForDomainBoundary));
        }

        /**
         * @param singleSignOnApplicationArn The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after September 19, 2023.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnApplicationArn(@Nullable Output<String> singleSignOnApplicationArn) {
            $.singleSignOnApplicationArn = singleSignOnApplicationArn;
            return this;
        }

        /**
         * @param singleSignOnApplicationArn The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after September 19, 2023.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnApplicationArn(String singleSignOnApplicationArn) {
            return singleSignOnApplicationArn(Output.of(singleSignOnApplicationArn));
        }

        /**
         * @param singleSignOnManagedApplicationInstanceId The SSO managed application instance ID.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnManagedApplicationInstanceId(@Nullable Output<String> singleSignOnManagedApplicationInstanceId) {
            $.singleSignOnManagedApplicationInstanceId = singleSignOnManagedApplicationInstanceId;
            return this;
        }

        /**
         * @param singleSignOnManagedApplicationInstanceId The SSO managed application instance ID.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnManagedApplicationInstanceId(String singleSignOnManagedApplicationInstanceId) {
            return singleSignOnManagedApplicationInstanceId(Output.of(singleSignOnManagedApplicationInstanceId));
        }

        /**
         * @param subnetIds The VPC subnets that Studio uses for communication.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds The VPC subnets that Studio uses for communication.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds The VPC subnets that Studio uses for communication.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param tags A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param url The domain&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The domain&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param vpcId The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public DomainState build() {
            return $;
        }
    }

}
