// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appintegrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DataIntegrationScheduleConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataIntegrationScheduleConfigArgs Empty = new DataIntegrationScheduleConfigArgs();

    /**
     * The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
     * 
     */
    @Import(name="firstExecutionFrom", required=true)
    private Output<String> firstExecutionFrom;

    /**
     * @return The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
     * 
     */
    public Output<String> firstExecutionFrom() {
        return this.firstExecutionFrom;
    }

    /**
     * The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
     * 
     */
    @Import(name="object", required=true)
    private Output<String> object;

    /**
     * @return The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
     * 
     */
    public Output<String> object() {
        return this.object;
    }

    /**
     * How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
     * 
     */
    @Import(name="scheduleExpression", required=true)
    private Output<String> scheduleExpression;

    /**
     * @return How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
     * 
     */
    public Output<String> scheduleExpression() {
        return this.scheduleExpression;
    }

    private DataIntegrationScheduleConfigArgs() {}

    private DataIntegrationScheduleConfigArgs(DataIntegrationScheduleConfigArgs $) {
        this.firstExecutionFrom = $.firstExecutionFrom;
        this.object = $.object;
        this.scheduleExpression = $.scheduleExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataIntegrationScheduleConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataIntegrationScheduleConfigArgs $;

        public Builder() {
            $ = new DataIntegrationScheduleConfigArgs();
        }

        public Builder(DataIntegrationScheduleConfigArgs defaults) {
            $ = new DataIntegrationScheduleConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param firstExecutionFrom The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
         * 
         * @return builder
         * 
         */
        public Builder firstExecutionFrom(Output<String> firstExecutionFrom) {
            $.firstExecutionFrom = firstExecutionFrom;
            return this;
        }

        /**
         * @param firstExecutionFrom The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
         * 
         * @return builder
         * 
         */
        public Builder firstExecutionFrom(String firstExecutionFrom) {
            return firstExecutionFrom(Output.of(firstExecutionFrom));
        }

        /**
         * @param object The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
         * 
         * @return builder
         * 
         */
        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        /**
         * @param scheduleExpression How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        /**
         * @param scheduleExpression How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public DataIntegrationScheduleConfigArgs build() {
            if ($.firstExecutionFrom == null) {
                throw new MissingRequiredPropertyException("DataIntegrationScheduleConfigArgs", "firstExecutionFrom");
            }
            if ($.object == null) {
                throw new MissingRequiredPropertyException("DataIntegrationScheduleConfigArgs", "object");
            }
            if ($.scheduleExpression == null) {
                throw new MissingRequiredPropertyException("DataIntegrationScheduleConfigArgs", "scheduleExpression");
            }
            return $;
        }
    }

}
