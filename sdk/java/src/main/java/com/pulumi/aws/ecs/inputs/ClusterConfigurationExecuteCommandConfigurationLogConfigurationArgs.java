// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs Empty = new ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs();

    @Import(name="cloudWatchEncryptionEnabled")
    private @Nullable Output<Boolean> cloudWatchEncryptionEnabled;

    public Optional<Output<Boolean>> cloudWatchEncryptionEnabled() {
        return Optional.ofNullable(this.cloudWatchEncryptionEnabled);
    }

    @Import(name="cloudWatchLogGroupName")
    private @Nullable Output<String> cloudWatchLogGroupName;

    public Optional<Output<String>> cloudWatchLogGroupName() {
        return Optional.ofNullable(this.cloudWatchLogGroupName);
    }

    @Import(name="s3BucketEncryptionEnabled")
    private @Nullable Output<Boolean> s3BucketEncryptionEnabled;

    public Optional<Output<Boolean>> s3BucketEncryptionEnabled() {
        return Optional.ofNullable(this.s3BucketEncryptionEnabled);
    }

    @Import(name="s3BucketName")
    private @Nullable Output<String> s3BucketName;

    public Optional<Output<String>> s3BucketName() {
        return Optional.ofNullable(this.s3BucketName);
    }

    @Import(name="s3KeyPrefix")
    private @Nullable Output<String> s3KeyPrefix;

    public Optional<Output<String>> s3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }

    private ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs() {}

    private ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs(ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs $) {
        this.cloudWatchEncryptionEnabled = $.cloudWatchEncryptionEnabled;
        this.cloudWatchLogGroupName = $.cloudWatchLogGroupName;
        this.s3BucketEncryptionEnabled = $.s3BucketEncryptionEnabled;
        this.s3BucketName = $.s3BucketName;
        this.s3KeyPrefix = $.s3KeyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs $;

        public Builder() {
            $ = new ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs();
        }

        public Builder(ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs defaults) {
            $ = new ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudWatchEncryptionEnabled(@Nullable Output<Boolean> cloudWatchEncryptionEnabled) {
            $.cloudWatchEncryptionEnabled = cloudWatchEncryptionEnabled;
            return this;
        }

        public Builder cloudWatchEncryptionEnabled(Boolean cloudWatchEncryptionEnabled) {
            return cloudWatchEncryptionEnabled(Output.of(cloudWatchEncryptionEnabled));
        }

        public Builder cloudWatchLogGroupName(@Nullable Output<String> cloudWatchLogGroupName) {
            $.cloudWatchLogGroupName = cloudWatchLogGroupName;
            return this;
        }

        public Builder cloudWatchLogGroupName(String cloudWatchLogGroupName) {
            return cloudWatchLogGroupName(Output.of(cloudWatchLogGroupName));
        }

        public Builder s3BucketEncryptionEnabled(@Nullable Output<Boolean> s3BucketEncryptionEnabled) {
            $.s3BucketEncryptionEnabled = s3BucketEncryptionEnabled;
            return this;
        }

        public Builder s3BucketEncryptionEnabled(Boolean s3BucketEncryptionEnabled) {
            return s3BucketEncryptionEnabled(Output.of(s3BucketEncryptionEnabled));
        }

        public Builder s3BucketName(@Nullable Output<String> s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        public Builder s3BucketName(String s3BucketName) {
            return s3BucketName(Output.of(s3BucketName));
        }

        public Builder s3KeyPrefix(@Nullable Output<String> s3KeyPrefix) {
            $.s3KeyPrefix = s3KeyPrefix;
            return this;
        }

        public Builder s3KeyPrefix(String s3KeyPrefix) {
            return s3KeyPrefix(Output.of(s3KeyPrefix));
        }

        public ClusterConfigurationExecuteCommandConfigurationLogConfigurationArgs build() {
            return $;
        }
    }

}
