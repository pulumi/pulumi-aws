// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.aws.odb.outputs.CloudVmClusterIormConfigCachDbPlan;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class CloudVmClusterIormConfigCach {
    private List<CloudVmClusterIormConfigCachDbPlan> dbPlans;
    private String lifecycleDetails;
    private String lifecycleState;
    private String objective;

    private CloudVmClusterIormConfigCach() {}
    public List<CloudVmClusterIormConfigCachDbPlan> dbPlans() {
        return this.dbPlans;
    }
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String lifecycleState() {
        return this.lifecycleState;
    }
    public String objective() {
        return this.objective;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudVmClusterIormConfigCach defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<CloudVmClusterIormConfigCachDbPlan> dbPlans;
        private String lifecycleDetails;
        private String lifecycleState;
        private String objective;
        public Builder() {}
        public Builder(CloudVmClusterIormConfigCach defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbPlans = defaults.dbPlans;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.objective = defaults.objective;
        }

        @CustomType.Setter
        public Builder dbPlans(List<CloudVmClusterIormConfigCachDbPlan> dbPlans) {
            if (dbPlans == null) {
              throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCach", "dbPlans");
            }
            this.dbPlans = dbPlans;
            return this;
        }
        public Builder dbPlans(CloudVmClusterIormConfigCachDbPlan... dbPlans) {
            return dbPlans(List.of(dbPlans));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCach", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleState(String lifecycleState) {
            if (lifecycleState == null) {
              throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCach", "lifecycleState");
            }
            this.lifecycleState = lifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder objective(String objective) {
            if (objective == null) {
              throw new MissingRequiredPropertyException("CloudVmClusterIormConfigCach", "objective");
            }
            this.objective = objective;
            return this;
        }
        public CloudVmClusterIormConfigCach build() {
            final var _resultValue = new CloudVmClusterIormConfigCach();
            _resultValue.dbPlans = dbPlans;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleState = lifecycleState;
            _resultValue.objective = objective;
            return _resultValue;
        }
    }
}
