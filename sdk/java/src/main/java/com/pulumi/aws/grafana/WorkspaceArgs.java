// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.grafana;

import com.pulumi.aws.grafana.inputs.WorkspaceVpcConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    @Import(name="accountAccessType", required=true)
    private Output<String> accountAccessType;

    public Output<String> accountAccessType() {
        return this.accountAccessType;
    }

    @Import(name="authenticationProviders", required=true)
    private Output<List<String>> authenticationProviders;

    public Output<List<String>> authenticationProviders() {
        return this.authenticationProviders;
    }

    @Import(name="dataSources")
    private @Nullable Output<List<String>> dataSources;

    public Optional<Output<List<String>>> dataSources() {
        return Optional.ofNullable(this.dataSources);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationDestinations")
    private @Nullable Output<List<String>> notificationDestinations;

    public Optional<Output<List<String>>> notificationDestinations() {
        return Optional.ofNullable(this.notificationDestinations);
    }

    @Import(name="organizationRoleName")
    private @Nullable Output<String> organizationRoleName;

    public Optional<Output<String>> organizationRoleName() {
        return Optional.ofNullable(this.organizationRoleName);
    }

    @Import(name="organizationalUnits")
    private @Nullable Output<List<String>> organizationalUnits;

    public Optional<Output<List<String>>> organizationalUnits() {
        return Optional.ofNullable(this.organizationalUnits);
    }

    @Import(name="permissionType", required=true)
    private Output<String> permissionType;

    public Output<String> permissionType() {
        return this.permissionType;
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="stackSetName")
    private @Nullable Output<String> stackSetName;

    public Optional<Output<String>> stackSetName() {
        return Optional.ofNullable(this.stackSetName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcConfiguration")
    private @Nullable Output<WorkspaceVpcConfigurationArgs> vpcConfiguration;

    public Optional<Output<WorkspaceVpcConfigurationArgs>> vpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.accountAccessType = $.accountAccessType;
        this.authenticationProviders = $.authenticationProviders;
        this.dataSources = $.dataSources;
        this.description = $.description;
        this.name = $.name;
        this.notificationDestinations = $.notificationDestinations;
        this.organizationRoleName = $.organizationRoleName;
        this.organizationalUnits = $.organizationalUnits;
        this.permissionType = $.permissionType;
        this.roleArn = $.roleArn;
        this.stackSetName = $.stackSetName;
        this.tags = $.tags;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountAccessType(Output<String> accountAccessType) {
            $.accountAccessType = accountAccessType;
            return this;
        }

        public Builder accountAccessType(String accountAccessType) {
            return accountAccessType(Output.of(accountAccessType));
        }

        public Builder authenticationProviders(Output<List<String>> authenticationProviders) {
            $.authenticationProviders = authenticationProviders;
            return this;
        }

        public Builder authenticationProviders(List<String> authenticationProviders) {
            return authenticationProviders(Output.of(authenticationProviders));
        }

        public Builder authenticationProviders(String... authenticationProviders) {
            return authenticationProviders(List.of(authenticationProviders));
        }

        public Builder dataSources(@Nullable Output<List<String>> dataSources) {
            $.dataSources = dataSources;
            return this;
        }

        public Builder dataSources(List<String> dataSources) {
            return dataSources(Output.of(dataSources));
        }

        public Builder dataSources(String... dataSources) {
            return dataSources(List.of(dataSources));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationDestinations(@Nullable Output<List<String>> notificationDestinations) {
            $.notificationDestinations = notificationDestinations;
            return this;
        }

        public Builder notificationDestinations(List<String> notificationDestinations) {
            return notificationDestinations(Output.of(notificationDestinations));
        }

        public Builder notificationDestinations(String... notificationDestinations) {
            return notificationDestinations(List.of(notificationDestinations));
        }

        public Builder organizationRoleName(@Nullable Output<String> organizationRoleName) {
            $.organizationRoleName = organizationRoleName;
            return this;
        }

        public Builder organizationRoleName(String organizationRoleName) {
            return organizationRoleName(Output.of(organizationRoleName));
        }

        public Builder organizationalUnits(@Nullable Output<List<String>> organizationalUnits) {
            $.organizationalUnits = organizationalUnits;
            return this;
        }

        public Builder organizationalUnits(List<String> organizationalUnits) {
            return organizationalUnits(Output.of(organizationalUnits));
        }

        public Builder organizationalUnits(String... organizationalUnits) {
            return organizationalUnits(List.of(organizationalUnits));
        }

        public Builder permissionType(Output<String> permissionType) {
            $.permissionType = permissionType;
            return this;
        }

        public Builder permissionType(String permissionType) {
            return permissionType(Output.of(permissionType));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder stackSetName(@Nullable Output<String> stackSetName) {
            $.stackSetName = stackSetName;
            return this;
        }

        public Builder stackSetName(String stackSetName) {
            return stackSetName(Output.of(stackSetName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpcConfiguration(@Nullable Output<WorkspaceVpcConfigurationArgs> vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        public Builder vpcConfiguration(WorkspaceVpcConfigurationArgs vpcConfiguration) {
            return vpcConfiguration(Output.of(vpcConfiguration));
        }

        public WorkspaceArgs build() {
            $.accountAccessType = Objects.requireNonNull($.accountAccessType, "expected parameter 'accountAccessType' to be non-null");
            $.authenticationProviders = Objects.requireNonNull($.authenticationProviders, "expected parameter 'authenticationProviders' to be non-null");
            $.permissionType = Objects.requireNonNull($.permissionType, "expected parameter 'permissionType' to be non-null");
            return $;
        }
    }

}
