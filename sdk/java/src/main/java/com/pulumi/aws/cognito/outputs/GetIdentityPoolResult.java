// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.aws.cognito.outputs.GetIdentityPoolCognitoIdentityProvider;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIdentityPoolResult {
    /**
     * @return Whether the classic / basic authentication flow is enabled.
     * 
     */
    private @Nullable Boolean allowClassicFlow;
    /**
     * @return Whether the identity pool supports unauthenticated logins or not.
     * 
     */
    private @Nullable Boolean allowUnauthenticatedIdentities;
    /**
     * @return ARN of the Pool.
     * 
     */
    private @Nullable String arn;
    /**
     * @return An array of Amazon Cognito Identity user pools and their client IDs.
     * 
     */
    private @Nullable List<GetIdentityPoolCognitoIdentityProvider> cognitoIdentityProviders;
    /**
     * @return The &#34;domain&#34; by which Cognito will refer to your users.
     * 
     */
    private @Nullable String developerProviderName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String identityPoolName;
    /**
     * @return Set of OpendID Connect provider ARNs.
     * 
     */
    private @Nullable List<String> openidConnectProviderArns;
    /**
     * @return An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
     * 
     */
    private @Nullable List<String> samlProviderArns;
    /**
     * @return Key-Value pairs mapping provider names to provider app IDs.
     * 
     */
    private @Nullable Map<String,String> supportedLoginProviders;
    /**
     * @return A map of tags to assigned to the Identity Pool.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetIdentityPoolResult() {}
    /**
     * @return Whether the classic / basic authentication flow is enabled.
     * 
     */
    public Optional<Boolean> allowClassicFlow() {
        return Optional.ofNullable(this.allowClassicFlow);
    }
    /**
     * @return Whether the identity pool supports unauthenticated logins or not.
     * 
     */
    public Optional<Boolean> allowUnauthenticatedIdentities() {
        return Optional.ofNullable(this.allowUnauthenticatedIdentities);
    }
    /**
     * @return ARN of the Pool.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return An array of Amazon Cognito Identity user pools and their client IDs.
     * 
     */
    public List<GetIdentityPoolCognitoIdentityProvider> cognitoIdentityProviders() {
        return this.cognitoIdentityProviders == null ? List.of() : this.cognitoIdentityProviders;
    }
    /**
     * @return The &#34;domain&#34; by which Cognito will refer to your users.
     * 
     */
    public Optional<String> developerProviderName() {
        return Optional.ofNullable(this.developerProviderName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String identityPoolName() {
        return this.identityPoolName;
    }
    /**
     * @return Set of OpendID Connect provider ARNs.
     * 
     */
    public List<String> openidConnectProviderArns() {
        return this.openidConnectProviderArns == null ? List.of() : this.openidConnectProviderArns;
    }
    /**
     * @return An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
     * 
     */
    public List<String> samlProviderArns() {
        return this.samlProviderArns == null ? List.of() : this.samlProviderArns;
    }
    /**
     * @return Key-Value pairs mapping provider names to provider app IDs.
     * 
     */
    public Map<String,String> supportedLoginProviders() {
        return this.supportedLoginProviders == null ? Map.of() : this.supportedLoginProviders;
    }
    /**
     * @return A map of tags to assigned to the Identity Pool.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIdentityPoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowClassicFlow;
        private @Nullable Boolean allowUnauthenticatedIdentities;
        private @Nullable String arn;
        private @Nullable List<GetIdentityPoolCognitoIdentityProvider> cognitoIdentityProviders;
        private @Nullable String developerProviderName;
        private @Nullable String id;
        private String identityPoolName;
        private @Nullable List<String> openidConnectProviderArns;
        private @Nullable List<String> samlProviderArns;
        private @Nullable Map<String,String> supportedLoginProviders;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetIdentityPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowClassicFlow = defaults.allowClassicFlow;
    	      this.allowUnauthenticatedIdentities = defaults.allowUnauthenticatedIdentities;
    	      this.arn = defaults.arn;
    	      this.cognitoIdentityProviders = defaults.cognitoIdentityProviders;
    	      this.developerProviderName = defaults.developerProviderName;
    	      this.id = defaults.id;
    	      this.identityPoolName = defaults.identityPoolName;
    	      this.openidConnectProviderArns = defaults.openidConnectProviderArns;
    	      this.samlProviderArns = defaults.samlProviderArns;
    	      this.supportedLoginProviders = defaults.supportedLoginProviders;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder allowClassicFlow(@Nullable Boolean allowClassicFlow) {
            this.allowClassicFlow = allowClassicFlow;
            return this;
        }
        @CustomType.Setter
        public Builder allowUnauthenticatedIdentities(@Nullable Boolean allowUnauthenticatedIdentities) {
            this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder cognitoIdentityProviders(@Nullable List<GetIdentityPoolCognitoIdentityProvider> cognitoIdentityProviders) {
            this.cognitoIdentityProviders = cognitoIdentityProviders;
            return this;
        }
        public Builder cognitoIdentityProviders(GetIdentityPoolCognitoIdentityProvider... cognitoIdentityProviders) {
            return cognitoIdentityProviders(List.of(cognitoIdentityProviders));
        }
        @CustomType.Setter
        public Builder developerProviderName(@Nullable String developerProviderName) {
            this.developerProviderName = developerProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityPoolName(String identityPoolName) {
            this.identityPoolName = Objects.requireNonNull(identityPoolName);
            return this;
        }
        @CustomType.Setter
        public Builder openidConnectProviderArns(@Nullable List<String> openidConnectProviderArns) {
            this.openidConnectProviderArns = openidConnectProviderArns;
            return this;
        }
        public Builder openidConnectProviderArns(String... openidConnectProviderArns) {
            return openidConnectProviderArns(List.of(openidConnectProviderArns));
        }
        @CustomType.Setter
        public Builder samlProviderArns(@Nullable List<String> samlProviderArns) {
            this.samlProviderArns = samlProviderArns;
            return this;
        }
        public Builder samlProviderArns(String... samlProviderArns) {
            return samlProviderArns(List.of(samlProviderArns));
        }
        @CustomType.Setter
        public Builder supportedLoginProviders(@Nullable Map<String,String> supportedLoginProviders) {
            this.supportedLoginProviders = supportedLoginProviders;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetIdentityPoolResult build() {
            final var o = new GetIdentityPoolResult();
            o.allowClassicFlow = allowClassicFlow;
            o.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
            o.arn = arn;
            o.cognitoIdentityProviders = cognitoIdentityProviders;
            o.developerProviderName = developerProviderName;
            o.id = id;
            o.identityPoolName = identityPoolName;
            o.openidConnectProviderArns = openidConnectProviderArns;
            o.samlProviderArns = samlProviderArns;
            o.supportedLoginProviders = supportedLoginProviders;
            o.tags = tags;
            return o;
        }
    }
}
