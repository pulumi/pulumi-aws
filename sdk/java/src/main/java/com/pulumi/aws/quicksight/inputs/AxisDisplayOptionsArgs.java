// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsDataOptionsArgs;
import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsScrollbarOptionsArgs;
import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsTickLabelOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AxisDisplayOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AxisDisplayOptionsArgs Empty = new AxisDisplayOptionsArgs();

    @Import(name="axisLineVisibility")
    private @Nullable Output<String> axisLineVisibility;

    public Optional<Output<String>> axisLineVisibility() {
        return Optional.ofNullable(this.axisLineVisibility);
    }

    @Import(name="axisOffset")
    private @Nullable Output<String> axisOffset;

    public Optional<Output<String>> axisOffset() {
        return Optional.ofNullable(this.axisOffset);
    }

    @Import(name="dataOptions")
    private @Nullable Output<AxisDisplayOptionsDataOptionsArgs> dataOptions;

    public Optional<Output<AxisDisplayOptionsDataOptionsArgs>> dataOptions() {
        return Optional.ofNullable(this.dataOptions);
    }

    @Import(name="gridLineVisibility")
    private @Nullable Output<String> gridLineVisibility;

    public Optional<Output<String>> gridLineVisibility() {
        return Optional.ofNullable(this.gridLineVisibility);
    }

    @Import(name="scrollbarOptions")
    private @Nullable Output<AxisDisplayOptionsScrollbarOptionsArgs> scrollbarOptions;

    public Optional<Output<AxisDisplayOptionsScrollbarOptionsArgs>> scrollbarOptions() {
        return Optional.ofNullable(this.scrollbarOptions);
    }

    @Import(name="tickLabelOptions")
    private @Nullable Output<AxisDisplayOptionsTickLabelOptionsArgs> tickLabelOptions;

    public Optional<Output<AxisDisplayOptionsTickLabelOptionsArgs>> tickLabelOptions() {
        return Optional.ofNullable(this.tickLabelOptions);
    }

    private AxisDisplayOptionsArgs() {}

    private AxisDisplayOptionsArgs(AxisDisplayOptionsArgs $) {
        this.axisLineVisibility = $.axisLineVisibility;
        this.axisOffset = $.axisOffset;
        this.dataOptions = $.dataOptions;
        this.gridLineVisibility = $.gridLineVisibility;
        this.scrollbarOptions = $.scrollbarOptions;
        this.tickLabelOptions = $.tickLabelOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AxisDisplayOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AxisDisplayOptionsArgs $;

        public Builder() {
            $ = new AxisDisplayOptionsArgs();
        }

        public Builder(AxisDisplayOptionsArgs defaults) {
            $ = new AxisDisplayOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder axisLineVisibility(@Nullable Output<String> axisLineVisibility) {
            $.axisLineVisibility = axisLineVisibility;
            return this;
        }

        public Builder axisLineVisibility(String axisLineVisibility) {
            return axisLineVisibility(Output.of(axisLineVisibility));
        }

        public Builder axisOffset(@Nullable Output<String> axisOffset) {
            $.axisOffset = axisOffset;
            return this;
        }

        public Builder axisOffset(String axisOffset) {
            return axisOffset(Output.of(axisOffset));
        }

        public Builder dataOptions(@Nullable Output<AxisDisplayOptionsDataOptionsArgs> dataOptions) {
            $.dataOptions = dataOptions;
            return this;
        }

        public Builder dataOptions(AxisDisplayOptionsDataOptionsArgs dataOptions) {
            return dataOptions(Output.of(dataOptions));
        }

        public Builder gridLineVisibility(@Nullable Output<String> gridLineVisibility) {
            $.gridLineVisibility = gridLineVisibility;
            return this;
        }

        public Builder gridLineVisibility(String gridLineVisibility) {
            return gridLineVisibility(Output.of(gridLineVisibility));
        }

        public Builder scrollbarOptions(@Nullable Output<AxisDisplayOptionsScrollbarOptionsArgs> scrollbarOptions) {
            $.scrollbarOptions = scrollbarOptions;
            return this;
        }

        public Builder scrollbarOptions(AxisDisplayOptionsScrollbarOptionsArgs scrollbarOptions) {
            return scrollbarOptions(Output.of(scrollbarOptions));
        }

        public Builder tickLabelOptions(@Nullable Output<AxisDisplayOptionsTickLabelOptionsArgs> tickLabelOptions) {
            $.tickLabelOptions = tickLabelOptions;
            return this;
        }

        public Builder tickLabelOptions(AxisDisplayOptionsTickLabelOptionsArgs tickLabelOptions) {
            return tickLabelOptions(Output.of(tickLabelOptions));
        }

        public AxisDisplayOptionsArgs build() {
            return $;
        }
    }

}
