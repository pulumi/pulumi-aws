// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.aws.medialive.inputs.ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs Empty = new ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs();

    @Import(name="channelMappings", required=true)
    private Output<List<ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs>> channelMappings;

    public Output<List<ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs>> channelMappings() {
        return this.channelMappings;
    }

    @Import(name="channelsIn")
    private @Nullable Output<Integer> channelsIn;

    public Optional<Output<Integer>> channelsIn() {
        return Optional.ofNullable(this.channelsIn);
    }

    @Import(name="channelsOut")
    private @Nullable Output<Integer> channelsOut;

    public Optional<Output<Integer>> channelsOut() {
        return Optional.ofNullable(this.channelsOut);
    }

    private ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs() {}

    private ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs(ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs $) {
        this.channelMappings = $.channelMappings;
        this.channelsIn = $.channelsIn;
        this.channelsOut = $.channelsOut;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs();
        }

        public Builder(ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs defaults) {
            $ = new ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder channelMappings(Output<List<ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs>> channelMappings) {
            $.channelMappings = channelMappings;
            return this;
        }

        public Builder channelMappings(List<ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs> channelMappings) {
            return channelMappings(Output.of(channelMappings));
        }

        public Builder channelMappings(ChannelEncoderSettingsAudioDescriptionRemixSettingsChannelMappingArgs... channelMappings) {
            return channelMappings(List.of(channelMappings));
        }

        public Builder channelsIn(@Nullable Output<Integer> channelsIn) {
            $.channelsIn = channelsIn;
            return this;
        }

        public Builder channelsIn(Integer channelsIn) {
            return channelsIn(Output.of(channelsIn));
        }

        public Builder channelsOut(@Nullable Output<Integer> channelsOut) {
            $.channelsOut = channelsOut;
            return this;
        }

        public Builder channelsOut(Integer channelsOut) {
            return channelsOut(Output.of(channelsOut));
        }

        public ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs build() {
            if ($.channelMappings == null) {
                throw new MissingRequiredPropertyException("ChannelEncoderSettingsAudioDescriptionRemixSettingsArgs", "channelMappings");
            }
            return $;
        }
    }

}
