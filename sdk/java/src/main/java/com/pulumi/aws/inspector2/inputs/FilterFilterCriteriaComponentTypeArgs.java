// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FilterFilterCriteriaComponentTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterFilterCriteriaComponentTypeArgs Empty = new FilterFilterCriteriaComponentTypeArgs();

    /**
     * (Required) The comparison operator. Valid values: `EQUALS`.
     * 
     */
    @Import(name="comparison", required=true)
    private Output<String> comparison;

    /**
     * @return (Required) The comparison operator. Valid values: `EQUALS`.
     * 
     */
    public Output<String> comparison() {
        return this.comparison;
    }

    /**
     * (Required) The value to filter on.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Required) The value to filter on.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private FilterFilterCriteriaComponentTypeArgs() {}

    private FilterFilterCriteriaComponentTypeArgs(FilterFilterCriteriaComponentTypeArgs $) {
        this.comparison = $.comparison;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterFilterCriteriaComponentTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterFilterCriteriaComponentTypeArgs $;

        public Builder() {
            $ = new FilterFilterCriteriaComponentTypeArgs();
        }

        public Builder(FilterFilterCriteriaComponentTypeArgs defaults) {
            $ = new FilterFilterCriteriaComponentTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comparison (Required) The comparison operator. Valid values: `EQUALS`.
         * 
         * @return builder
         * 
         */
        public Builder comparison(Output<String> comparison) {
            $.comparison = comparison;
            return this;
        }

        /**
         * @param comparison (Required) The comparison operator. Valid values: `EQUALS`.
         * 
         * @return builder
         * 
         */
        public Builder comparison(String comparison) {
            return comparison(Output.of(comparison));
        }

        /**
         * @param value (Required) The value to filter on.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Required) The value to filter on.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public FilterFilterCriteriaComponentTypeArgs build() {
            if ($.comparison == null) {
                throw new MissingRequiredPropertyException("FilterFilterCriteriaComponentTypeArgs", "comparison");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("FilterFilterCriteriaComponentTypeArgs", "value");
            }
            return $;
        }
    }

}
