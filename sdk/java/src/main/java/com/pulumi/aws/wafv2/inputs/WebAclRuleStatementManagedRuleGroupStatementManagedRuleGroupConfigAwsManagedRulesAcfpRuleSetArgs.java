// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetRequestInspectionArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetResponseInspectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs Empty = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs();

    /**
     * The path of the account creation endpoint for your application. This is the page on your website that accepts the completed registration form for a new user. This page must accept POST requests.
     * 
     */
    @Import(name="creationPath", required=true)
    private Output<String> creationPath;

    /**
     * @return The path of the account creation endpoint for your application. This is the page on your website that accepts the completed registration form for a new user. This page must accept POST requests.
     * 
     */
    public Output<String> creationPath() {
        return this.creationPath;
    }

    /**
     * Whether or not to allow the use of regular expressions in the login page path.
     * 
     */
    @Import(name="enableRegexInPath")
    private @Nullable Output<Boolean> enableRegexInPath;

    /**
     * @return Whether or not to allow the use of regular expressions in the login page path.
     * 
     */
    public Optional<Output<Boolean>> enableRegexInPath() {
        return Optional.ofNullable(this.enableRegexInPath);
    }

    /**
     * The path of the account registration endpoint for your application. This is the page on your website that presents the registration form to new users. This page must accept GET text/html requests.
     * 
     */
    @Import(name="registrationPagePath", required=true)
    private Output<String> registrationPagePath;

    /**
     * @return The path of the account registration endpoint for your application. This is the page on your website that presents the registration form to new users. This page must accept GET text/html requests.
     * 
     */
    public Output<String> registrationPagePath() {
        return this.registrationPagePath;
    }

    /**
     * The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
     * 
     */
    @Import(name="requestInspection", required=true)
    private Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetRequestInspectionArgs> requestInspection;

    /**
     * @return The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
     * 
     */
    public Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetRequestInspectionArgs> requestInspection() {
        return this.requestInspection;
    }

    /**
     * The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
     * 
     */
    @Import(name="responseInspection")
    private @Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetResponseInspectionArgs> responseInspection;

    /**
     * @return The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
     * 
     */
    public Optional<Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetResponseInspectionArgs>> responseInspection() {
        return Optional.ofNullable(this.responseInspection);
    }

    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs() {}

    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs $) {
        this.creationPath = $.creationPath;
        this.enableRegexInPath = $.enableRegexInPath;
        this.registrationPagePath = $.registrationPagePath;
        this.requestInspection = $.requestInspection;
        this.responseInspection = $.responseInspection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs $;

        public Builder() {
            $ = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs();
        }

        public Builder(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs defaults) {
            $ = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationPath The path of the account creation endpoint for your application. This is the page on your website that accepts the completed registration form for a new user. This page must accept POST requests.
         * 
         * @return builder
         * 
         */
        public Builder creationPath(Output<String> creationPath) {
            $.creationPath = creationPath;
            return this;
        }

        /**
         * @param creationPath The path of the account creation endpoint for your application. This is the page on your website that accepts the completed registration form for a new user. This page must accept POST requests.
         * 
         * @return builder
         * 
         */
        public Builder creationPath(String creationPath) {
            return creationPath(Output.of(creationPath));
        }

        /**
         * @param enableRegexInPath Whether or not to allow the use of regular expressions in the login page path.
         * 
         * @return builder
         * 
         */
        public Builder enableRegexInPath(@Nullable Output<Boolean> enableRegexInPath) {
            $.enableRegexInPath = enableRegexInPath;
            return this;
        }

        /**
         * @param enableRegexInPath Whether or not to allow the use of regular expressions in the login page path.
         * 
         * @return builder
         * 
         */
        public Builder enableRegexInPath(Boolean enableRegexInPath) {
            return enableRegexInPath(Output.of(enableRegexInPath));
        }

        /**
         * @param registrationPagePath The path of the account registration endpoint for your application. This is the page on your website that presents the registration form to new users. This page must accept GET text/html requests.
         * 
         * @return builder
         * 
         */
        public Builder registrationPagePath(Output<String> registrationPagePath) {
            $.registrationPagePath = registrationPagePath;
            return this;
        }

        /**
         * @param registrationPagePath The path of the account registration endpoint for your application. This is the page on your website that presents the registration form to new users. This page must accept GET text/html requests.
         * 
         * @return builder
         * 
         */
        public Builder registrationPagePath(String registrationPagePath) {
            return registrationPagePath(Output.of(registrationPagePath));
        }

        /**
         * @param requestInspection The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder requestInspection(Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetRequestInspectionArgs> requestInspection) {
            $.requestInspection = requestInspection;
            return this;
        }

        /**
         * @param requestInspection The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder requestInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetRequestInspectionArgs requestInspection) {
            return requestInspection(Output.of(requestInspection));
        }

        /**
         * @param responseInspection The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder responseInspection(@Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetResponseInspectionArgs> responseInspection) {
            $.responseInspection = responseInspection;
            return this;
        }

        /**
         * @param responseInspection The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder responseInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetResponseInspectionArgs responseInspection) {
            return responseInspection(Output.of(responseInspection));
        }

        public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs build() {
            if ($.creationPath == null) {
                throw new MissingRequiredPropertyException("WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs", "creationPath");
            }
            if ($.registrationPagePath == null) {
                throw new MissingRequiredPropertyException("WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs", "registrationPagePath");
            }
            if ($.requestInspection == null) {
                throw new MissingRequiredPropertyException("WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs", "requestInspection");
            }
            return $;
        }
    }

}
