// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetAliasTargetArgs;
import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs;
import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetGeolocationArgs;
import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetGeoproximityLocationArgs;
import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetResourceRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordsExclusiveResourceRecordSetArgs Empty = new RecordsExclusiveResourceRecordSetArgs();

    /**
     * Alias target block.
     * See `alias_target` below.
     * 
     */
    @Import(name="aliasTarget")
    private @Nullable Output<RecordsExclusiveResourceRecordSetAliasTargetArgs> aliasTarget;

    /**
     * @return Alias target block.
     * See `alias_target` below.
     * 
     */
    public Optional<Output<RecordsExclusiveResourceRecordSetAliasTargetArgs>> aliasTarget() {
        return Optional.ofNullable(this.aliasTarget);
    }

    @Import(name="cidrRoutingConfig")
    private @Nullable Output<RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs> cidrRoutingConfig;

    public Optional<Output<RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs>> cidrRoutingConfig() {
        return Optional.ofNullable(this.cidrRoutingConfig);
    }

    /**
     * Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    @Import(name="failover")
    private @Nullable Output<String> failover;

    /**
     * @return Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    public Optional<Output<String>> failover() {
        return Optional.ofNullable(this.failover);
    }

    /**
     * Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    @Import(name="geolocation")
    private @Nullable Output<RecordsExclusiveResourceRecordSetGeolocationArgs> geolocation;

    /**
     * @return Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    public Optional<Output<RecordsExclusiveResourceRecordSetGeolocationArgs>> geolocation() {
        return Optional.ofNullable(this.geolocation);
    }

    /**
     * Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    @Import(name="geoproximityLocation")
    private @Nullable Output<RecordsExclusiveResourceRecordSetGeoproximityLocationArgs> geoproximityLocation;

    /**
     * @return Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    public Optional<Output<RecordsExclusiveResourceRecordSetGeoproximityLocationArgs>> geoproximityLocation() {
        return Optional.ofNullable(this.geoproximityLocation);
    }

    /**
     * Health check the record should be associated with.
     * 
     */
    @Import(name="healthCheckId")
    private @Nullable Output<String> healthCheckId;

    /**
     * @return Health check the record should be associated with.
     * 
     */
    public Optional<Output<String>> healthCheckId() {
        return Optional.ofNullable(this.healthCheckId);
    }

    @Import(name="multiValueAnswer")
    private @Nullable Output<Boolean> multiValueAnswer;

    public Optional<Output<Boolean>> multiValueAnswer() {
        return Optional.ofNullable(this.multiValueAnswer);
    }

    /**
     * Name of the record.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the record.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    @Import(name="resourceRecords")
    private @Nullable Output<List<RecordsExclusiveResourceRecordSetResourceRecordArgs>> resourceRecords;

    /**
     * @return Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    public Optional<Output<List<RecordsExclusiveResourceRecordSetResourceRecordArgs>>> resourceRecords() {
        return Optional.ofNullable(this.resourceRecords);
    }

    /**
     * An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    @Import(name="setIdentifier")
    private @Nullable Output<String> setIdentifier;

    /**
     * @return An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    public Optional<Output<String>> setIdentifier() {
        return Optional.ofNullable(this.setIdentifier);
    }

    @Import(name="trafficPolicyInstanceId")
    private @Nullable Output<String> trafficPolicyInstanceId;

    public Optional<Output<String>> trafficPolicyInstanceId() {
        return Optional.ofNullable(this.trafficPolicyInstanceId);
    }

    /**
     * Resource record cache time to live (TTL), in seconds.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return Resource record cache time to live (TTL), in seconds.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private RecordsExclusiveResourceRecordSetArgs() {}

    private RecordsExclusiveResourceRecordSetArgs(RecordsExclusiveResourceRecordSetArgs $) {
        this.aliasTarget = $.aliasTarget;
        this.cidrRoutingConfig = $.cidrRoutingConfig;
        this.failover = $.failover;
        this.geolocation = $.geolocation;
        this.geoproximityLocation = $.geoproximityLocation;
        this.healthCheckId = $.healthCheckId;
        this.multiValueAnswer = $.multiValueAnswer;
        this.name = $.name;
        this.region = $.region;
        this.resourceRecords = $.resourceRecords;
        this.setIdentifier = $.setIdentifier;
        this.trafficPolicyInstanceId = $.trafficPolicyInstanceId;
        this.ttl = $.ttl;
        this.type = $.type;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordsExclusiveResourceRecordSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordsExclusiveResourceRecordSetArgs $;

        public Builder() {
            $ = new RecordsExclusiveResourceRecordSetArgs();
        }

        public Builder(RecordsExclusiveResourceRecordSetArgs defaults) {
            $ = new RecordsExclusiveResourceRecordSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliasTarget Alias target block.
         * See `alias_target` below.
         * 
         * @return builder
         * 
         */
        public Builder aliasTarget(@Nullable Output<RecordsExclusiveResourceRecordSetAliasTargetArgs> aliasTarget) {
            $.aliasTarget = aliasTarget;
            return this;
        }

        /**
         * @param aliasTarget Alias target block.
         * See `alias_target` below.
         * 
         * @return builder
         * 
         */
        public Builder aliasTarget(RecordsExclusiveResourceRecordSetAliasTargetArgs aliasTarget) {
            return aliasTarget(Output.of(aliasTarget));
        }

        public Builder cidrRoutingConfig(@Nullable Output<RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs> cidrRoutingConfig) {
            $.cidrRoutingConfig = cidrRoutingConfig;
            return this;
        }

        public Builder cidrRoutingConfig(RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs cidrRoutingConfig) {
            return cidrRoutingConfig(Output.of(cidrRoutingConfig));
        }

        /**
         * @param failover Type of failover resource record.
         * Valid values are `PRIMARY` and `SECONDARY`.
         * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder failover(@Nullable Output<String> failover) {
            $.failover = failover;
            return this;
        }

        /**
         * @param failover Type of failover resource record.
         * Valid values are `PRIMARY` and `SECONDARY`.
         * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder failover(String failover) {
            return failover(Output.of(failover));
        }

        /**
         * @param geolocation Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
         * See `geolocation` below.
         * 
         * @return builder
         * 
         */
        public Builder geolocation(@Nullable Output<RecordsExclusiveResourceRecordSetGeolocationArgs> geolocation) {
            $.geolocation = geolocation;
            return this;
        }

        /**
         * @param geolocation Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
         * See `geolocation` below.
         * 
         * @return builder
         * 
         */
        public Builder geolocation(RecordsExclusiveResourceRecordSetGeolocationArgs geolocation) {
            return geolocation(Output.of(geolocation));
        }

        /**
         * @param geoproximityLocation Geoproximity location block.
         * See `geoproximity_location` below.
         * 
         * @return builder
         * 
         */
        public Builder geoproximityLocation(@Nullable Output<RecordsExclusiveResourceRecordSetGeoproximityLocationArgs> geoproximityLocation) {
            $.geoproximityLocation = geoproximityLocation;
            return this;
        }

        /**
         * @param geoproximityLocation Geoproximity location block.
         * See `geoproximity_location` below.
         * 
         * @return builder
         * 
         */
        public Builder geoproximityLocation(RecordsExclusiveResourceRecordSetGeoproximityLocationArgs geoproximityLocation) {
            return geoproximityLocation(Output.of(geoproximityLocation));
        }

        /**
         * @param healthCheckId Health check the record should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckId(@Nullable Output<String> healthCheckId) {
            $.healthCheckId = healthCheckId;
            return this;
        }

        /**
         * @param healthCheckId Health check the record should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckId(String healthCheckId) {
            return healthCheckId(Output.of(healthCheckId));
        }

        public Builder multiValueAnswer(@Nullable Output<Boolean> multiValueAnswer) {
            $.multiValueAnswer = multiValueAnswer;
            return this;
        }

        public Builder multiValueAnswer(Boolean multiValueAnswer) {
            return multiValueAnswer(Output.of(multiValueAnswer));
        }

        /**
         * @param name Name of the record.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the record.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region AWS region of the resource this record set refers to.
         * Must be a valid AWS region name.
         * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region AWS region of the resource this record set refers to.
         * Must be a valid AWS region name.
         * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resourceRecords Information about the resource records to act upon.
         * See `resource_records` below.
         * 
         * @return builder
         * 
         */
        public Builder resourceRecords(@Nullable Output<List<RecordsExclusiveResourceRecordSetResourceRecordArgs>> resourceRecords) {
            $.resourceRecords = resourceRecords;
            return this;
        }

        /**
         * @param resourceRecords Information about the resource records to act upon.
         * See `resource_records` below.
         * 
         * @return builder
         * 
         */
        public Builder resourceRecords(List<RecordsExclusiveResourceRecordSetResourceRecordArgs> resourceRecords) {
            return resourceRecords(Output.of(resourceRecords));
        }

        /**
         * @param resourceRecords Information about the resource records to act upon.
         * See `resource_records` below.
         * 
         * @return builder
         * 
         */
        public Builder resourceRecords(RecordsExclusiveResourceRecordSetResourceRecordArgs... resourceRecords) {
            return resourceRecords(List.of(resourceRecords));
        }

        /**
         * @param setIdentifier An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
         * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
         * 
         * @return builder
         * 
         */
        public Builder setIdentifier(@Nullable Output<String> setIdentifier) {
            $.setIdentifier = setIdentifier;
            return this;
        }

        /**
         * @param setIdentifier An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
         * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
         * 
         * @return builder
         * 
         */
        public Builder setIdentifier(String setIdentifier) {
            return setIdentifier(Output.of(setIdentifier));
        }

        public Builder trafficPolicyInstanceId(@Nullable Output<String> trafficPolicyInstanceId) {
            $.trafficPolicyInstanceId = trafficPolicyInstanceId;
            return this;
        }

        public Builder trafficPolicyInstanceId(String trafficPolicyInstanceId) {
            return trafficPolicyInstanceId(Output.of(trafficPolicyInstanceId));
        }

        /**
         * @param ttl Resource record cache time to live (TTL), in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Resource record cache time to live (TTL), in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param type Record type.
         * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
         * 
         * The following arguments are optional:
         * 
         * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Record type.
         * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
         * 
         * The following arguments are optional:
         * 
         * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param weight Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public RecordsExclusiveResourceRecordSetArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RecordsExclusiveResourceRecordSetArgs", "name");
            }
            return $;
        }
    }

}
