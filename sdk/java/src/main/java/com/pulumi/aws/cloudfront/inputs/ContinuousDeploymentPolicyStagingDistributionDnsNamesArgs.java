// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs Empty = new ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs();

    /**
     * A list of CloudFront domain names for the staging distribution.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<String>> items;

    /**
     * @return A list of CloudFront domain names for the staging distribution.
     * 
     */
    public Optional<Output<List<String>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * Number of CloudFront domain names in the staging distribution.
     * 
     */
    @Import(name="quantity", required=true)
    private Output<Integer> quantity;

    /**
     * @return Number of CloudFront domain names in the staging distribution.
     * 
     */
    public Output<Integer> quantity() {
        return this.quantity;
    }

    private ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs() {}

    private ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs(ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs $) {
        this.items = $.items;
        this.quantity = $.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs $;

        public Builder() {
            $ = new ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs();
        }

        public Builder(ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs defaults) {
            $ = new ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param items A list of CloudFront domain names for the staging distribution.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<String>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items A list of CloudFront domain names for the staging distribution.
         * 
         * @return builder
         * 
         */
        public Builder items(List<String> items) {
            return items(Output.of(items));
        }

        /**
         * @param items A list of CloudFront domain names for the staging distribution.
         * 
         * @return builder
         * 
         */
        public Builder items(String... items) {
            return items(List.of(items));
        }

        /**
         * @param quantity Number of CloudFront domain names in the staging distribution.
         * 
         * @return builder
         * 
         */
        public Builder quantity(Output<Integer> quantity) {
            $.quantity = quantity;
            return this;
        }

        /**
         * @param quantity Number of CloudFront domain names in the staging distribution.
         * 
         * @return builder
         * 
         */
        public Builder quantity(Integer quantity) {
            return quantity(Output.of(quantity));
        }

        public ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs build() {
            $.quantity = Objects.requireNonNull($.quantity, "expected parameter 'quantity' to be non-null");
            return $;
        }
    }

}
