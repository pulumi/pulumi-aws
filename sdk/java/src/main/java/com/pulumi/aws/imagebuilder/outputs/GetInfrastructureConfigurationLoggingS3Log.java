// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInfrastructureConfigurationLoggingS3Log {
    /**
     * @return Name of the S3 Bucket for logging.
     * 
     */
    private String s3BucketName;
    /**
     * @return Key prefix for S3 Bucket logging.
     * 
     */
    private String s3KeyPrefix;

    private GetInfrastructureConfigurationLoggingS3Log() {}
    /**
     * @return Name of the S3 Bucket for logging.
     * 
     */
    public String s3BucketName() {
        return this.s3BucketName;
    }
    /**
     * @return Key prefix for S3 Bucket logging.
     * 
     */
    public String s3KeyPrefix() {
        return this.s3KeyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInfrastructureConfigurationLoggingS3Log defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String s3BucketName;
        private String s3KeyPrefix;
        public Builder() {}
        public Builder(GetInfrastructureConfigurationLoggingS3Log defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3KeyPrefix = defaults.s3KeyPrefix;
        }

        @CustomType.Setter
        public Builder s3BucketName(String s3BucketName) {
            if (s3BucketName == null) {
              throw new MissingRequiredPropertyException("GetInfrastructureConfigurationLoggingS3Log", "s3BucketName");
            }
            this.s3BucketName = s3BucketName;
            return this;
        }
        @CustomType.Setter
        public Builder s3KeyPrefix(String s3KeyPrefix) {
            if (s3KeyPrefix == null) {
              throw new MissingRequiredPropertyException("GetInfrastructureConfigurationLoggingS3Log", "s3KeyPrefix");
            }
            this.s3KeyPrefix = s3KeyPrefix;
            return this;
        }
        public GetInfrastructureConfigurationLoggingS3Log build() {
            final var _resultValue = new GetInfrastructureConfigurationLoggingS3Log();
            _resultValue.s3BucketName = s3BucketName;
            _resultValue.s3KeyPrefix = s3KeyPrefix;
            return _resultValue;
        }
    }
}
