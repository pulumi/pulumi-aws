// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.aws.sagemaker.inputs.AppResourceSpecArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppArgs Empty = new AppArgs();

    @Import(name="appName", required=true)
    private Output<String> appName;

    public Output<String> appName() {
        return this.appName;
    }

    @Import(name="appType", required=true)
    private Output<String> appType;

    public Output<String> appType() {
        return this.appType;
    }

    @Import(name="domainId", required=true)
    private Output<String> domainId;

    public Output<String> domainId() {
        return this.domainId;
    }

    @Import(name="resourceSpec")
    private @Nullable Output<AppResourceSpecArgs> resourceSpec;

    public Optional<Output<AppResourceSpecArgs>> resourceSpec() {
        return Optional.ofNullable(this.resourceSpec);
    }

    @Import(name="spaceName")
    private @Nullable Output<String> spaceName;

    public Optional<Output<String>> spaceName() {
        return Optional.ofNullable(this.spaceName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userProfileName")
    private @Nullable Output<String> userProfileName;

    public Optional<Output<String>> userProfileName() {
        return Optional.ofNullable(this.userProfileName);
    }

    private AppArgs() {}

    private AppArgs(AppArgs $) {
        this.appName = $.appName;
        this.appType = $.appType;
        this.domainId = $.domainId;
        this.resourceSpec = $.resourceSpec;
        this.spaceName = $.spaceName;
        this.tags = $.tags;
        this.userProfileName = $.userProfileName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppArgs $;

        public Builder() {
            $ = new AppArgs();
        }

        public Builder(AppArgs defaults) {
            $ = new AppArgs(Objects.requireNonNull(defaults));
        }

        public Builder appName(Output<String> appName) {
            $.appName = appName;
            return this;
        }

        public Builder appName(String appName) {
            return appName(Output.of(appName));
        }

        public Builder appType(Output<String> appType) {
            $.appType = appType;
            return this;
        }

        public Builder appType(String appType) {
            return appType(Output.of(appType));
        }

        public Builder domainId(Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        public Builder resourceSpec(@Nullable Output<AppResourceSpecArgs> resourceSpec) {
            $.resourceSpec = resourceSpec;
            return this;
        }

        public Builder resourceSpec(AppResourceSpecArgs resourceSpec) {
            return resourceSpec(Output.of(resourceSpec));
        }

        public Builder spaceName(@Nullable Output<String> spaceName) {
            $.spaceName = spaceName;
            return this;
        }

        public Builder spaceName(String spaceName) {
            return spaceName(Output.of(spaceName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userProfileName(@Nullable Output<String> userProfileName) {
            $.userProfileName = userProfileName;
            return this;
        }

        public Builder userProfileName(String userProfileName) {
            return userProfileName(Output.of(userProfileName));
        }

        public AppArgs build() {
            $.appName = Objects.requireNonNull($.appName, "expected parameter 'appName' to be non-null");
            $.appType = Objects.requireNonNull($.appType, "expected parameter 'appType' to be non-null");
            $.domainId = Objects.requireNonNull($.domainId, "expected parameter 'domainId' to be non-null");
            return $;
        }
    }

}
