// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeTargetParametersEcsTaskParametersCapacityProviderStrategy {
    /**
     * @return The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. Maximum value of 100,000.
     * 
     */
    private @Nullable Integer base;
    /**
     * @return The short name of the capacity provider. Maximum value of 255.
     * 
     */
    private String capacityProvider;
    /**
     * @return The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Maximum value of 1,000.
     * 
     */
    private @Nullable Integer weight;

    private PipeTargetParametersEcsTaskParametersCapacityProviderStrategy() {}
    /**
     * @return The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. Maximum value of 100,000.
     * 
     */
    public Optional<Integer> base() {
        return Optional.ofNullable(this.base);
    }
    /**
     * @return The short name of the capacity provider. Maximum value of 255.
     * 
     */
    public String capacityProvider() {
        return this.capacityProvider;
    }
    /**
     * @return The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Maximum value of 1,000.
     * 
     */
    public Optional<Integer> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeTargetParametersEcsTaskParametersCapacityProviderStrategy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer base;
        private String capacityProvider;
        private @Nullable Integer weight;
        public Builder() {}
        public Builder(PipeTargetParametersEcsTaskParametersCapacityProviderStrategy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.base = defaults.base;
    	      this.capacityProvider = defaults.capacityProvider;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder base(@Nullable Integer base) {
            this.base = base;
            return this;
        }
        @CustomType.Setter
        public Builder capacityProvider(String capacityProvider) {
            this.capacityProvider = Objects.requireNonNull(capacityProvider);
            return this;
        }
        @CustomType.Setter
        public Builder weight(@Nullable Integer weight) {
            this.weight = weight;
            return this;
        }
        public PipeTargetParametersEcsTaskParametersCapacityProviderStrategy build() {
            final var _resultValue = new PipeTargetParametersEcsTaskParametersCapacityProviderStrategy();
            _resultValue.base = base;
            _resultValue.capacityProvider = capacityProvider;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
