// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appstream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DirectoryConfigServiceAccountCredentials {
    /**
     * @return User name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
     * 
     */
    private String accountName;
    /**
     * @return Password for the account.
     * 
     */
    private String accountPassword;

    private DirectoryConfigServiceAccountCredentials() {}
    /**
     * @return User name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return Password for the account.
     * 
     */
    public String accountPassword() {
        return this.accountPassword;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DirectoryConfigServiceAccountCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private String accountPassword;
        public Builder() {}
        public Builder(DirectoryConfigServiceAccountCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.accountPassword = defaults.accountPassword;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("DirectoryConfigServiceAccountCredentials", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder accountPassword(String accountPassword) {
            if (accountPassword == null) {
              throw new MissingRequiredPropertyException("DirectoryConfigServiceAccountCredentials", "accountPassword");
            }
            this.accountPassword = accountPassword;
            return this;
        }
        public DirectoryConfigServiceAccountCredentials build() {
            final var _resultValue = new DirectoryConfigServiceAccountCredentials();
            _resultValue.accountName = accountName;
            _resultValue.accountPassword = accountPassword;
            return _resultValue;
        }
    }
}
