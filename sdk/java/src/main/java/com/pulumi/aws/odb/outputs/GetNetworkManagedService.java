// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.aws.odb.outputs.GetNetworkManagedServiceManagedS3BackupAccess;
import com.pulumi.aws.odb.outputs.GetNetworkManagedServiceS3Access;
import com.pulumi.aws.odb.outputs.GetNetworkManagedServiceServiceNetworkEndpoint;
import com.pulumi.aws.odb.outputs.GetNetworkManagedServiceZeroTlAccess;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkManagedService {
    private List<GetNetworkManagedServiceManagedS3BackupAccess> managedS3BackupAccesses;
    private List<String> managedServiceIpv4Cidrs;
    private String resourceGatewayArn;
    private List<GetNetworkManagedServiceS3Access> s3Accesses;
    private String serviceNetworkArn;
    private List<GetNetworkManagedServiceServiceNetworkEndpoint> serviceNetworkEndpoints;
    private List<GetNetworkManagedServiceZeroTlAccess> zeroTlAccesses;

    private GetNetworkManagedService() {}
    public List<GetNetworkManagedServiceManagedS3BackupAccess> managedS3BackupAccesses() {
        return this.managedS3BackupAccesses;
    }
    public List<String> managedServiceIpv4Cidrs() {
        return this.managedServiceIpv4Cidrs;
    }
    public String resourceGatewayArn() {
        return this.resourceGatewayArn;
    }
    public List<GetNetworkManagedServiceS3Access> s3Accesses() {
        return this.s3Accesses;
    }
    public String serviceNetworkArn() {
        return this.serviceNetworkArn;
    }
    public List<GetNetworkManagedServiceServiceNetworkEndpoint> serviceNetworkEndpoints() {
        return this.serviceNetworkEndpoints;
    }
    public List<GetNetworkManagedServiceZeroTlAccess> zeroTlAccesses() {
        return this.zeroTlAccesses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkManagedService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNetworkManagedServiceManagedS3BackupAccess> managedS3BackupAccesses;
        private List<String> managedServiceIpv4Cidrs;
        private String resourceGatewayArn;
        private List<GetNetworkManagedServiceS3Access> s3Accesses;
        private String serviceNetworkArn;
        private List<GetNetworkManagedServiceServiceNetworkEndpoint> serviceNetworkEndpoints;
        private List<GetNetworkManagedServiceZeroTlAccess> zeroTlAccesses;
        public Builder() {}
        public Builder(GetNetworkManagedService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.managedS3BackupAccesses = defaults.managedS3BackupAccesses;
    	      this.managedServiceIpv4Cidrs = defaults.managedServiceIpv4Cidrs;
    	      this.resourceGatewayArn = defaults.resourceGatewayArn;
    	      this.s3Accesses = defaults.s3Accesses;
    	      this.serviceNetworkArn = defaults.serviceNetworkArn;
    	      this.serviceNetworkEndpoints = defaults.serviceNetworkEndpoints;
    	      this.zeroTlAccesses = defaults.zeroTlAccesses;
        }

        @CustomType.Setter
        public Builder managedS3BackupAccesses(List<GetNetworkManagedServiceManagedS3BackupAccess> managedS3BackupAccesses) {
            if (managedS3BackupAccesses == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "managedS3BackupAccesses");
            }
            this.managedS3BackupAccesses = managedS3BackupAccesses;
            return this;
        }
        public Builder managedS3BackupAccesses(GetNetworkManagedServiceManagedS3BackupAccess... managedS3BackupAccesses) {
            return managedS3BackupAccesses(List.of(managedS3BackupAccesses));
        }
        @CustomType.Setter
        public Builder managedServiceIpv4Cidrs(List<String> managedServiceIpv4Cidrs) {
            if (managedServiceIpv4Cidrs == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "managedServiceIpv4Cidrs");
            }
            this.managedServiceIpv4Cidrs = managedServiceIpv4Cidrs;
            return this;
        }
        public Builder managedServiceIpv4Cidrs(String... managedServiceIpv4Cidrs) {
            return managedServiceIpv4Cidrs(List.of(managedServiceIpv4Cidrs));
        }
        @CustomType.Setter
        public Builder resourceGatewayArn(String resourceGatewayArn) {
            if (resourceGatewayArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "resourceGatewayArn");
            }
            this.resourceGatewayArn = resourceGatewayArn;
            return this;
        }
        @CustomType.Setter
        public Builder s3Accesses(List<GetNetworkManagedServiceS3Access> s3Accesses) {
            if (s3Accesses == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "s3Accesses");
            }
            this.s3Accesses = s3Accesses;
            return this;
        }
        public Builder s3Accesses(GetNetworkManagedServiceS3Access... s3Accesses) {
            return s3Accesses(List.of(s3Accesses));
        }
        @CustomType.Setter
        public Builder serviceNetworkArn(String serviceNetworkArn) {
            if (serviceNetworkArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "serviceNetworkArn");
            }
            this.serviceNetworkArn = serviceNetworkArn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNetworkEndpoints(List<GetNetworkManagedServiceServiceNetworkEndpoint> serviceNetworkEndpoints) {
            if (serviceNetworkEndpoints == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "serviceNetworkEndpoints");
            }
            this.serviceNetworkEndpoints = serviceNetworkEndpoints;
            return this;
        }
        public Builder serviceNetworkEndpoints(GetNetworkManagedServiceServiceNetworkEndpoint... serviceNetworkEndpoints) {
            return serviceNetworkEndpoints(List.of(serviceNetworkEndpoints));
        }
        @CustomType.Setter
        public Builder zeroTlAccesses(List<GetNetworkManagedServiceZeroTlAccess> zeroTlAccesses) {
            if (zeroTlAccesses == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagedService", "zeroTlAccesses");
            }
            this.zeroTlAccesses = zeroTlAccesses;
            return this;
        }
        public Builder zeroTlAccesses(GetNetworkManagedServiceZeroTlAccess... zeroTlAccesses) {
            return zeroTlAccesses(List.of(zeroTlAccesses));
        }
        public GetNetworkManagedService build() {
            final var _resultValue = new GetNetworkManagedService();
            _resultValue.managedS3BackupAccesses = managedS3BackupAccesses;
            _resultValue.managedServiceIpv4Cidrs = managedServiceIpv4Cidrs;
            _resultValue.resourceGatewayArn = resourceGatewayArn;
            _resultValue.s3Accesses = s3Accesses;
            _resultValue.serviceNetworkArn = serviceNetworkArn;
            _resultValue.serviceNetworkEndpoints = serviceNetworkEndpoints;
            _resultValue.zeroTlAccesses = zeroTlAccesses;
            return _resultValue;
        }
    }
}
