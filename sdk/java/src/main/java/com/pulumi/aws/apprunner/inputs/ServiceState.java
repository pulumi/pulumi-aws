// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.aws.apprunner.inputs.ServiceEncryptionConfigurationArgs;
import com.pulumi.aws.apprunner.inputs.ServiceHealthCheckConfigurationArgs;
import com.pulumi.aws.apprunner.inputs.ServiceInstanceConfigurationArgs;
import com.pulumi.aws.apprunner.inputs.ServiceNetworkConfigurationArgs;
import com.pulumi.aws.apprunner.inputs.ServiceObservabilityConfigurationArgs;
import com.pulumi.aws.apprunner.inputs.ServiceSourceConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="autoScalingConfigurationArn")
    private @Nullable Output<String> autoScalingConfigurationArn;

    public Optional<Output<String>> autoScalingConfigurationArn() {
        return Optional.ofNullable(this.autoScalingConfigurationArn);
    }

    @Import(name="encryptionConfiguration")
    private @Nullable Output<ServiceEncryptionConfigurationArgs> encryptionConfiguration;

    public Optional<Output<ServiceEncryptionConfigurationArgs>> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    @Import(name="healthCheckConfiguration")
    private @Nullable Output<ServiceHealthCheckConfigurationArgs> healthCheckConfiguration;

    public Optional<Output<ServiceHealthCheckConfigurationArgs>> healthCheckConfiguration() {
        return Optional.ofNullable(this.healthCheckConfiguration);
    }

    @Import(name="instanceConfiguration")
    private @Nullable Output<ServiceInstanceConfigurationArgs> instanceConfiguration;

    public Optional<Output<ServiceInstanceConfigurationArgs>> instanceConfiguration() {
        return Optional.ofNullable(this.instanceConfiguration);
    }

    @Import(name="networkConfiguration")
    private @Nullable Output<ServiceNetworkConfigurationArgs> networkConfiguration;

    public Optional<Output<ServiceNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    @Import(name="observabilityConfiguration")
    private @Nullable Output<ServiceObservabilityConfigurationArgs> observabilityConfiguration;

    public Optional<Output<ServiceObservabilityConfigurationArgs>> observabilityConfiguration() {
        return Optional.ofNullable(this.observabilityConfiguration);
    }

    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    @Import(name="serviceUrl")
    private @Nullable Output<String> serviceUrl;

    public Optional<Output<String>> serviceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }

    @Import(name="sourceConfiguration")
    private @Nullable Output<ServiceSourceConfigurationArgs> sourceConfiguration;

    public Optional<Output<ServiceSourceConfigurationArgs>> sourceConfiguration() {
        return Optional.ofNullable(this.sourceConfiguration);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ServiceState() {}

    private ServiceState(ServiceState $) {
        this.arn = $.arn;
        this.autoScalingConfigurationArn = $.autoScalingConfigurationArn;
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.healthCheckConfiguration = $.healthCheckConfiguration;
        this.instanceConfiguration = $.instanceConfiguration;
        this.networkConfiguration = $.networkConfiguration;
        this.observabilityConfiguration = $.observabilityConfiguration;
        this.serviceId = $.serviceId;
        this.serviceName = $.serviceName;
        this.serviceUrl = $.serviceUrl;
        this.sourceConfiguration = $.sourceConfiguration;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceState $;

        public Builder() {
            $ = new ServiceState();
        }

        public Builder(ServiceState defaults) {
            $ = new ServiceState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoScalingConfigurationArn(@Nullable Output<String> autoScalingConfigurationArn) {
            $.autoScalingConfigurationArn = autoScalingConfigurationArn;
            return this;
        }

        public Builder autoScalingConfigurationArn(String autoScalingConfigurationArn) {
            return autoScalingConfigurationArn(Output.of(autoScalingConfigurationArn));
        }

        public Builder encryptionConfiguration(@Nullable Output<ServiceEncryptionConfigurationArgs> encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder encryptionConfiguration(ServiceEncryptionConfigurationArgs encryptionConfiguration) {
            return encryptionConfiguration(Output.of(encryptionConfiguration));
        }

        public Builder healthCheckConfiguration(@Nullable Output<ServiceHealthCheckConfigurationArgs> healthCheckConfiguration) {
            $.healthCheckConfiguration = healthCheckConfiguration;
            return this;
        }

        public Builder healthCheckConfiguration(ServiceHealthCheckConfigurationArgs healthCheckConfiguration) {
            return healthCheckConfiguration(Output.of(healthCheckConfiguration));
        }

        public Builder instanceConfiguration(@Nullable Output<ServiceInstanceConfigurationArgs> instanceConfiguration) {
            $.instanceConfiguration = instanceConfiguration;
            return this;
        }

        public Builder instanceConfiguration(ServiceInstanceConfigurationArgs instanceConfiguration) {
            return instanceConfiguration(Output.of(instanceConfiguration));
        }

        public Builder networkConfiguration(@Nullable Output<ServiceNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder networkConfiguration(ServiceNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        public Builder observabilityConfiguration(@Nullable Output<ServiceObservabilityConfigurationArgs> observabilityConfiguration) {
            $.observabilityConfiguration = observabilityConfiguration;
            return this;
        }

        public Builder observabilityConfiguration(ServiceObservabilityConfigurationArgs observabilityConfiguration) {
            return observabilityConfiguration(Output.of(observabilityConfiguration));
        }

        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public Builder serviceUrl(@Nullable Output<String> serviceUrl) {
            $.serviceUrl = serviceUrl;
            return this;
        }

        public Builder serviceUrl(String serviceUrl) {
            return serviceUrl(Output.of(serviceUrl));
        }

        public Builder sourceConfiguration(@Nullable Output<ServiceSourceConfigurationArgs> sourceConfiguration) {
            $.sourceConfiguration = sourceConfiguration;
            return this;
        }

        public Builder sourceConfiguration(ServiceSourceConfigurationArgs sourceConfiguration) {
            return sourceConfiguration(Output.of(sourceConfiguration));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ServiceState build() {
            return $;
        }
    }

}
