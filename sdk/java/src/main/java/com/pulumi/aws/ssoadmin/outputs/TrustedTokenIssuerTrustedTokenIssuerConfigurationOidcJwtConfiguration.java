// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration {
    /**
     * @return Specifies the path of the source attribute in the JWT from the trusted token issuer.
     * 
     */
    private String claimAttributePath;
    /**
     * @return Specifies path of the destination attribute in a JWT from IAM Identity Center. The attribute mapped by this JMESPath expression is compared against the attribute mapped by `claim_attribute_path` when a trusted token issuer token is exchanged for an IAM Identity Center token.
     * 
     */
    private String identityStoreAttributePath;
    /**
     * @return Specifies the URL that IAM Identity Center uses for OpenID Discovery. OpenID Discovery is used to obtain the information required to verify the tokens that the trusted token issuer generates.
     * 
     */
    private String issuerUrl;
    /**
     * @return The method that the trusted token issuer can use to retrieve the JSON Web Key Set used to verify a JWT. Valid values are `OPEN_ID_DISCOVERY`
     * 
     */
    private String jwksRetrievalOption;

    private TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration() {}
    /**
     * @return Specifies the path of the source attribute in the JWT from the trusted token issuer.
     * 
     */
    public String claimAttributePath() {
        return this.claimAttributePath;
    }
    /**
     * @return Specifies path of the destination attribute in a JWT from IAM Identity Center. The attribute mapped by this JMESPath expression is compared against the attribute mapped by `claim_attribute_path` when a trusted token issuer token is exchanged for an IAM Identity Center token.
     * 
     */
    public String identityStoreAttributePath() {
        return this.identityStoreAttributePath;
    }
    /**
     * @return Specifies the URL that IAM Identity Center uses for OpenID Discovery. OpenID Discovery is used to obtain the information required to verify the tokens that the trusted token issuer generates.
     * 
     */
    public String issuerUrl() {
        return this.issuerUrl;
    }
    /**
     * @return The method that the trusted token issuer can use to retrieve the JSON Web Key Set used to verify a JWT. Valid values are `OPEN_ID_DISCOVERY`
     * 
     */
    public String jwksRetrievalOption() {
        return this.jwksRetrievalOption;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String claimAttributePath;
        private String identityStoreAttributePath;
        private String issuerUrl;
        private String jwksRetrievalOption;
        public Builder() {}
        public Builder(TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimAttributePath = defaults.claimAttributePath;
    	      this.identityStoreAttributePath = defaults.identityStoreAttributePath;
    	      this.issuerUrl = defaults.issuerUrl;
    	      this.jwksRetrievalOption = defaults.jwksRetrievalOption;
        }

        @CustomType.Setter
        public Builder claimAttributePath(String claimAttributePath) {
            this.claimAttributePath = Objects.requireNonNull(claimAttributePath);
            return this;
        }
        @CustomType.Setter
        public Builder identityStoreAttributePath(String identityStoreAttributePath) {
            this.identityStoreAttributePath = Objects.requireNonNull(identityStoreAttributePath);
            return this;
        }
        @CustomType.Setter
        public Builder issuerUrl(String issuerUrl) {
            this.issuerUrl = Objects.requireNonNull(issuerUrl);
            return this;
        }
        @CustomType.Setter
        public Builder jwksRetrievalOption(String jwksRetrievalOption) {
            this.jwksRetrievalOption = Objects.requireNonNull(jwksRetrievalOption);
            return this;
        }
        public TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration build() {
            final var _resultValue = new TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration();
            _resultValue.claimAttributePath = claimAttributePath;
            _resultValue.identityStoreAttributePath = identityStoreAttributePath;
            _resultValue.issuerUrl = issuerUrl;
            _resultValue.jwksRetrievalOption = jwksRetrievalOption;
            return _resultValue;
        }
    }
}
