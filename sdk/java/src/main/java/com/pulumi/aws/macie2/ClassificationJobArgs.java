// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie2;

import com.pulumi.aws.macie2.inputs.ClassificationJobS3JobDefinitionArgs;
import com.pulumi.aws.macie2.inputs.ClassificationJobScheduleFrequencyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClassificationJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClassificationJobArgs Empty = new ClassificationJobArgs();

    @Import(name="customDataIdentifierIds")
    private @Nullable Output<List<String>> customDataIdentifierIds;

    public Optional<Output<List<String>>> customDataIdentifierIds() {
        return Optional.ofNullable(this.customDataIdentifierIds);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="initialRun")
    private @Nullable Output<Boolean> initialRun;

    public Optional<Output<Boolean>> initialRun() {
        return Optional.ofNullable(this.initialRun);
    }

    @Import(name="jobStatus")
    private @Nullable Output<String> jobStatus;

    public Optional<Output<String>> jobStatus() {
        return Optional.ofNullable(this.jobStatus);
    }

    @Import(name="jobType", required=true)
    private Output<String> jobType;

    public Output<String> jobType() {
        return this.jobType;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="s3JobDefinition", required=true)
    private Output<ClassificationJobS3JobDefinitionArgs> s3JobDefinition;

    public Output<ClassificationJobS3JobDefinitionArgs> s3JobDefinition() {
        return this.s3JobDefinition;
    }

    @Import(name="samplingPercentage")
    private @Nullable Output<Integer> samplingPercentage;

    public Optional<Output<Integer>> samplingPercentage() {
        return Optional.ofNullable(this.samplingPercentage);
    }

    @Import(name="scheduleFrequency")
    private @Nullable Output<ClassificationJobScheduleFrequencyArgs> scheduleFrequency;

    public Optional<Output<ClassificationJobScheduleFrequencyArgs>> scheduleFrequency() {
        return Optional.ofNullable(this.scheduleFrequency);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ClassificationJobArgs() {}

    private ClassificationJobArgs(ClassificationJobArgs $) {
        this.customDataIdentifierIds = $.customDataIdentifierIds;
        this.description = $.description;
        this.initialRun = $.initialRun;
        this.jobStatus = $.jobStatus;
        this.jobType = $.jobType;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.s3JobDefinition = $.s3JobDefinition;
        this.samplingPercentage = $.samplingPercentage;
        this.scheduleFrequency = $.scheduleFrequency;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClassificationJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClassificationJobArgs $;

        public Builder() {
            $ = new ClassificationJobArgs();
        }

        public Builder(ClassificationJobArgs defaults) {
            $ = new ClassificationJobArgs(Objects.requireNonNull(defaults));
        }

        public Builder customDataIdentifierIds(@Nullable Output<List<String>> customDataIdentifierIds) {
            $.customDataIdentifierIds = customDataIdentifierIds;
            return this;
        }

        public Builder customDataIdentifierIds(List<String> customDataIdentifierIds) {
            return customDataIdentifierIds(Output.of(customDataIdentifierIds));
        }

        public Builder customDataIdentifierIds(String... customDataIdentifierIds) {
            return customDataIdentifierIds(List.of(customDataIdentifierIds));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder initialRun(@Nullable Output<Boolean> initialRun) {
            $.initialRun = initialRun;
            return this;
        }

        public Builder initialRun(Boolean initialRun) {
            return initialRun(Output.of(initialRun));
        }

        public Builder jobStatus(@Nullable Output<String> jobStatus) {
            $.jobStatus = jobStatus;
            return this;
        }

        public Builder jobStatus(String jobStatus) {
            return jobStatus(Output.of(jobStatus));
        }

        public Builder jobType(Output<String> jobType) {
            $.jobType = jobType;
            return this;
        }

        public Builder jobType(String jobType) {
            return jobType(Output.of(jobType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder s3JobDefinition(Output<ClassificationJobS3JobDefinitionArgs> s3JobDefinition) {
            $.s3JobDefinition = s3JobDefinition;
            return this;
        }

        public Builder s3JobDefinition(ClassificationJobS3JobDefinitionArgs s3JobDefinition) {
            return s3JobDefinition(Output.of(s3JobDefinition));
        }

        public Builder samplingPercentage(@Nullable Output<Integer> samplingPercentage) {
            $.samplingPercentage = samplingPercentage;
            return this;
        }

        public Builder samplingPercentage(Integer samplingPercentage) {
            return samplingPercentage(Output.of(samplingPercentage));
        }

        public Builder scheduleFrequency(@Nullable Output<ClassificationJobScheduleFrequencyArgs> scheduleFrequency) {
            $.scheduleFrequency = scheduleFrequency;
            return this;
        }

        public Builder scheduleFrequency(ClassificationJobScheduleFrequencyArgs scheduleFrequency) {
            return scheduleFrequency(Output.of(scheduleFrequency));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ClassificationJobArgs build() {
            $.jobType = Objects.requireNonNull($.jobType, "expected parameter 'jobType' to be non-null");
            $.s3JobDefinition = Objects.requireNonNull($.s3JobDefinition, "expected parameter 's3JobDefinition' to be non-null");
            return $;
        }
    }

}
