// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsHistogramVisualChartConfigurationBinOptionsBinWidth {
    private @Nullable Integer binCountLimit;
    private @Nullable Double value;

    private VisualsHistogramVisualChartConfigurationBinOptionsBinWidth() {}
    public Optional<Integer> binCountLimit() {
        return Optional.ofNullable(this.binCountLimit);
    }
    public Optional<Double> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsHistogramVisualChartConfigurationBinOptionsBinWidth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer binCountLimit;
        private @Nullable Double value;
        public Builder() {}
        public Builder(VisualsHistogramVisualChartConfigurationBinOptionsBinWidth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.binCountLimit = defaults.binCountLimit;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder binCountLimit(@Nullable Integer binCountLimit) {

            this.binCountLimit = binCountLimit;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable Double value) {

            this.value = value;
            return this;
        }
        public VisualsHistogramVisualChartConfigurationBinOptionsBinWidth build() {
            final var _resultValue = new VisualsHistogramVisualChartConfigurationBinOptionsBinWidth();
            _resultValue.binCountLimit = binCountLimit;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
