// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc.inputs;

import com.pulumi.aws.vpc.inputs.RouteServerEndpointTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteServerEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final RouteServerEndpointState Empty = new RouteServerEndpointState();

    /**
     * The ARN of the route server endpoint.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the route server endpoint.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The IP address of the Elastic network interface for the endpoint.
     * 
     */
    @Import(name="eniAddress")
    private @Nullable Output<String> eniAddress;

    /**
     * @return The IP address of the Elastic network interface for the endpoint.
     * 
     */
    public Optional<Output<String>> eniAddress() {
        return Optional.ofNullable(this.eniAddress);
    }

    /**
     * The ID of the Elastic network interface for the endpoint.
     * 
     */
    @Import(name="eniId")
    private @Nullable Output<String> eniId;

    /**
     * @return The ID of the Elastic network interface for the endpoint.
     * 
     */
    public Optional<Output<String>> eniId() {
        return Optional.ofNullable(this.eniId);
    }

    /**
     * The unique identifier of the route server endpoint.
     * 
     */
    @Import(name="routeServerEndpointId")
    private @Nullable Output<String> routeServerEndpointId;

    /**
     * @return The unique identifier of the route server endpoint.
     * 
     */
    public Optional<Output<String>> routeServerEndpointId() {
        return Optional.ofNullable(this.routeServerEndpointId);
    }

    /**
     * The ID of the route server for which to create an endpoint.
     * 
     */
    @Import(name="routeServerId")
    private @Nullable Output<String> routeServerId;

    /**
     * @return The ID of the route server for which to create an endpoint.
     * 
     */
    public Optional<Output<String>> routeServerId() {
        return Optional.ofNullable(this.routeServerId);
    }

    /**
     * The ID of the subnet in which to create the route server endpoint.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The ID of the subnet in which to create the route server endpoint.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<RouteServerEndpointTimeoutsArgs> timeouts;

    public Optional<Output<RouteServerEndpointTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The ID of the VPC containing the endpoint.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the VPC containing the endpoint.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private RouteServerEndpointState() {}

    private RouteServerEndpointState(RouteServerEndpointState $) {
        this.arn = $.arn;
        this.eniAddress = $.eniAddress;
        this.eniId = $.eniId;
        this.routeServerEndpointId = $.routeServerEndpointId;
        this.routeServerId = $.routeServerId;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteServerEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteServerEndpointState $;

        public Builder() {
            $ = new RouteServerEndpointState();
        }

        public Builder(RouteServerEndpointState defaults) {
            $ = new RouteServerEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the route server endpoint.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the route server endpoint.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param eniAddress The IP address of the Elastic network interface for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder eniAddress(@Nullable Output<String> eniAddress) {
            $.eniAddress = eniAddress;
            return this;
        }

        /**
         * @param eniAddress The IP address of the Elastic network interface for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder eniAddress(String eniAddress) {
            return eniAddress(Output.of(eniAddress));
        }

        /**
         * @param eniId The ID of the Elastic network interface for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder eniId(@Nullable Output<String> eniId) {
            $.eniId = eniId;
            return this;
        }

        /**
         * @param eniId The ID of the Elastic network interface for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder eniId(String eniId) {
            return eniId(Output.of(eniId));
        }

        /**
         * @param routeServerEndpointId The unique identifier of the route server endpoint.
         * 
         * @return builder
         * 
         */
        public Builder routeServerEndpointId(@Nullable Output<String> routeServerEndpointId) {
            $.routeServerEndpointId = routeServerEndpointId;
            return this;
        }

        /**
         * @param routeServerEndpointId The unique identifier of the route server endpoint.
         * 
         * @return builder
         * 
         */
        public Builder routeServerEndpointId(String routeServerEndpointId) {
            return routeServerEndpointId(Output.of(routeServerEndpointId));
        }

        /**
         * @param routeServerId The ID of the route server for which to create an endpoint.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(@Nullable Output<String> routeServerId) {
            $.routeServerId = routeServerId;
            return this;
        }

        /**
         * @param routeServerId The ID of the route server for which to create an endpoint.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(String routeServerId) {
            return routeServerId(Output.of(routeServerId));
        }

        /**
         * @param subnetId The ID of the subnet in which to create the route server endpoint.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet in which to create the route server endpoint.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<RouteServerEndpointTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(RouteServerEndpointTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param vpcId The ID of the VPC containing the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC containing the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public RouteServerEndpointState build() {
            return $;
        }
    }

}
