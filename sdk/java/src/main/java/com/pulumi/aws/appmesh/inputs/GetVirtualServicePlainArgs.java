// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVirtualServicePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualServicePlainArgs Empty = new GetVirtualServicePlainArgs();

    /**
     * Name of the service mesh in which the virtual service exists.
     * 
     */
    @Import(name="meshName", required=true)
    private String meshName;

    /**
     * @return Name of the service mesh in which the virtual service exists.
     * 
     */
    public String meshName() {
        return this.meshName;
    }

    /**
     * AWS account ID of the service mesh&#39;s owner.
     * 
     */
    @Import(name="meshOwner")
    private @Nullable String meshOwner;

    /**
     * @return AWS account ID of the service mesh&#39;s owner.
     * 
     */
    public Optional<String> meshOwner() {
        return Optional.ofNullable(this.meshOwner);
    }

    /**
     * Name of the virtual service.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the virtual service.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Map of tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetVirtualServicePlainArgs() {}

    private GetVirtualServicePlainArgs(GetVirtualServicePlainArgs $) {
        this.meshName = $.meshName;
        this.meshOwner = $.meshOwner;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualServicePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualServicePlainArgs $;

        public Builder() {
            $ = new GetVirtualServicePlainArgs();
        }

        public Builder(GetVirtualServicePlainArgs defaults) {
            $ = new GetVirtualServicePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param meshName Name of the service mesh in which the virtual service exists.
         * 
         * @return builder
         * 
         */
        public Builder meshName(String meshName) {
            $.meshName = meshName;
            return this;
        }

        /**
         * @param meshOwner AWS account ID of the service mesh&#39;s owner.
         * 
         * @return builder
         * 
         */
        public Builder meshOwner(@Nullable String meshOwner) {
            $.meshOwner = meshOwner;
            return this;
        }

        /**
         * @param name Name of the virtual service.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tags Map of tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetVirtualServicePlainArgs build() {
            if ($.meshName == null) {
                throw new MissingRequiredPropertyException("GetVirtualServicePlainArgs", "meshName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetVirtualServicePlainArgs", "name");
            }
            return $;
        }
    }

}
