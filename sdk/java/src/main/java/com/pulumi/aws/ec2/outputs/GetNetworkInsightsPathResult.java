// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetNetworkInsightsPathFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkInsightsPathResult {
    /**
     * @return ARN of the selected Network Insights Path.
     * 
     */
    private @Nullable String arn;
    /**
     * @return AWS resource that is the destination of the path.
     * 
     */
    private @Nullable String destination;
    /**
     * @return ARN of the destination.
     * 
     */
    private @Nullable String destinationArn;
    /**
     * @return IP address of the AWS resource that is the destination of the path.
     * 
     */
    private @Nullable String destinationIp;
    /**
     * @return Destination port.
     * 
     */
    private @Nullable Integer destinationPort;
    private @Nullable List<GetNetworkInsightsPathFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String networkInsightsPathId;
    /**
     * @return Protocol.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return AWS resource that is the source of the path.
     * 
     */
    private @Nullable String source;
    /**
     * @return ARN of the source.
     * 
     */
    private @Nullable String sourceArn;
    /**
     * @return IP address of the AWS resource that is the source of the path.
     * 
     */
    private @Nullable String sourceIp;
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetNetworkInsightsPathResult() {}
    /**
     * @return ARN of the selected Network Insights Path.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return AWS resource that is the destination of the path.
     * 
     */
    public Optional<String> destination() {
        return Optional.ofNullable(this.destination);
    }
    /**
     * @return ARN of the destination.
     * 
     */
    public Optional<String> destinationArn() {
        return Optional.ofNullable(this.destinationArn);
    }
    /**
     * @return IP address of the AWS resource that is the destination of the path.
     * 
     */
    public Optional<String> destinationIp() {
        return Optional.ofNullable(this.destinationIp);
    }
    /**
     * @return Destination port.
     * 
     */
    public Optional<Integer> destinationPort() {
        return Optional.ofNullable(this.destinationPort);
    }
    public List<GetNetworkInsightsPathFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> networkInsightsPathId() {
        return Optional.ofNullable(this.networkInsightsPathId);
    }
    /**
     * @return Protocol.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return AWS resource that is the source of the path.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return ARN of the source.
     * 
     */
    public Optional<String> sourceArn() {
        return Optional.ofNullable(this.sourceArn);
    }
    /**
     * @return IP address of the AWS resource that is the source of the path.
     * 
     */
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInsightsPathResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String destination;
        private @Nullable String destinationArn;
        private @Nullable String destinationIp;
        private @Nullable Integer destinationPort;
        private @Nullable List<GetNetworkInsightsPathFilter> filters;
        private @Nullable String id;
        private @Nullable String networkInsightsPathId;
        private @Nullable String protocol;
        private @Nullable String source;
        private @Nullable String sourceArn;
        private @Nullable String sourceIp;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetNetworkInsightsPathResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.destination = defaults.destination;
    	      this.destinationArn = defaults.destinationArn;
    	      this.destinationIp = defaults.destinationIp;
    	      this.destinationPort = defaults.destinationPort;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.networkInsightsPathId = defaults.networkInsightsPathId;
    	      this.protocol = defaults.protocol;
    	      this.source = defaults.source;
    	      this.sourceArn = defaults.sourceArn;
    	      this.sourceIp = defaults.sourceIp;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder destination(@Nullable String destination) {
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder destinationArn(@Nullable String destinationArn) {
            this.destinationArn = destinationArn;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIp(@Nullable String destinationIp) {
            this.destinationIp = destinationIp;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPort(@Nullable Integer destinationPort) {
            this.destinationPort = destinationPort;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetNetworkInsightsPathFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetNetworkInsightsPathFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networkInsightsPathId(@Nullable String networkInsightsPathId) {
            this.networkInsightsPathId = networkInsightsPathId;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder sourceArn(@Nullable String sourceArn) {
            this.sourceArn = sourceArn;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable String sourceIp) {
            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetNetworkInsightsPathResult build() {
            final var o = new GetNetworkInsightsPathResult();
            o.arn = arn;
            o.destination = destination;
            o.destinationArn = destinationArn;
            o.destinationIp = destinationIp;
            o.destinationPort = destinationPort;
            o.filters = filters;
            o.id = id;
            o.networkInsightsPathId = networkInsightsPathId;
            o.protocol = protocol;
            o.source = source;
            o.sourceArn = sourceArn;
            o.sourceIp = sourceIp;
            o.tags = tags;
            return o;
        }
    }
}
