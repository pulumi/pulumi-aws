// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetImagePipelineImageScanningConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImagePipelineImageTestsConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImagePipelineSchedule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagePipelineResult {
    private String arn;
    /**
     * @return ARN of the container recipe.
     * 
     */
    private @Nullable String containerRecipeArn;
    /**
     * @return Date the image pipeline was created.
     * 
     */
    private @Nullable String dateCreated;
    /**
     * @return Date the image pipeline was last run.
     * 
     */
    private @Nullable String dateLastRun;
    /**
     * @return Date the image pipeline will run next.
     * 
     */
    private @Nullable String dateNextRun;
    /**
     * @return Date the image pipeline was updated.
     * 
     */
    private @Nullable String dateUpdated;
    /**
     * @return Description of the image pipeline.
     * 
     */
    private @Nullable String description;
    /**
     * @return ARN of the Image Builder Distribution Configuration.
     * 
     */
    private @Nullable String distributionConfigurationArn;
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    private @Nullable Boolean enhancedImageMetadataEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ARN of the image recipe.
     * 
     */
    private @Nullable String imageRecipeArn;
    private @Nullable List<GetImagePipelineImageScanningConfiguration> imageScanningConfigurations;
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    private @Nullable List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations;
    /**
     * @return ARN of the Image Builder Infrastructure Configuration.
     * 
     */
    private @Nullable String infrastructureConfigurationArn;
    /**
     * @return Name of the image pipeline.
     * 
     */
    private @Nullable String name;
    /**
     * @return Platform of the image pipeline.
     * 
     */
    private @Nullable String platform;
    /**
     * @return List of an object with schedule settings.
     * 
     */
    private @Nullable List<GetImagePipelineSchedule> schedules;
    /**
     * @return Status of the image pipeline.
     * 
     */
    private @Nullable String status;
    /**
     * @return Key-value map of resource tags for the image pipeline.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetImagePipelineResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return ARN of the container recipe.
     * 
     */
    public Optional<String> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }
    /**
     * @return Date the image pipeline was created.
     * 
     */
    public Optional<String> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }
    /**
     * @return Date the image pipeline was last run.
     * 
     */
    public Optional<String> dateLastRun() {
        return Optional.ofNullable(this.dateLastRun);
    }
    /**
     * @return Date the image pipeline will run next.
     * 
     */
    public Optional<String> dateNextRun() {
        return Optional.ofNullable(this.dateNextRun);
    }
    /**
     * @return Date the image pipeline was updated.
     * 
     */
    public Optional<String> dateUpdated() {
        return Optional.ofNullable(this.dateUpdated);
    }
    /**
     * @return Description of the image pipeline.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ARN of the Image Builder Distribution Configuration.
     * 
     */
    public Optional<String> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    public Optional<Boolean> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ARN of the image recipe.
     * 
     */
    public Optional<String> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }
    public List<GetImagePipelineImageScanningConfiguration> imageScanningConfigurations() {
        return this.imageScanningConfigurations == null ? List.of() : this.imageScanningConfigurations;
    }
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    public List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations() {
        return this.imageTestsConfigurations == null ? List.of() : this.imageTestsConfigurations;
    }
    /**
     * @return ARN of the Image Builder Infrastructure Configuration.
     * 
     */
    public Optional<String> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }
    /**
     * @return Name of the image pipeline.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Platform of the image pipeline.
     * 
     */
    public Optional<String> platform() {
        return Optional.ofNullable(this.platform);
    }
    /**
     * @return List of an object with schedule settings.
     * 
     */
    public List<GetImagePipelineSchedule> schedules() {
        return this.schedules == null ? List.of() : this.schedules;
    }
    /**
     * @return Status of the image pipeline.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Key-value map of resource tags for the image pipeline.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagePipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private @Nullable String containerRecipeArn;
        private @Nullable String dateCreated;
        private @Nullable String dateLastRun;
        private @Nullable String dateNextRun;
        private @Nullable String dateUpdated;
        private @Nullable String description;
        private @Nullable String distributionConfigurationArn;
        private @Nullable Boolean enhancedImageMetadataEnabled;
        private @Nullable String id;
        private @Nullable String imageRecipeArn;
        private @Nullable List<GetImagePipelineImageScanningConfiguration> imageScanningConfigurations;
        private @Nullable List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations;
        private @Nullable String infrastructureConfigurationArn;
        private @Nullable String name;
        private @Nullable String platform;
        private @Nullable List<GetImagePipelineSchedule> schedules;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetImagePipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerRecipeArn = defaults.containerRecipeArn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateLastRun = defaults.dateLastRun;
    	      this.dateNextRun = defaults.dateNextRun;
    	      this.dateUpdated = defaults.dateUpdated;
    	      this.description = defaults.description;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.id = defaults.id;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageScanningConfigurations = defaults.imageScanningConfigurations;
    	      this.imageTestsConfigurations = defaults.imageTestsConfigurations;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.platform = defaults.platform;
    	      this.schedules = defaults.schedules;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder containerRecipeArn(@Nullable String containerRecipeArn) {
            this.containerRecipeArn = containerRecipeArn;
            return this;
        }
        @CustomType.Setter
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        @CustomType.Setter
        public Builder dateLastRun(@Nullable String dateLastRun) {
            this.dateLastRun = dateLastRun;
            return this;
        }
        @CustomType.Setter
        public Builder dateNextRun(@Nullable String dateNextRun) {
            this.dateNextRun = dateNextRun;
            return this;
        }
        @CustomType.Setter
        public Builder dateUpdated(@Nullable String dateUpdated) {
            this.dateUpdated = dateUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }
        @CustomType.Setter
        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageRecipeArn(@Nullable String imageRecipeArn) {
            this.imageRecipeArn = imageRecipeArn;
            return this;
        }
        @CustomType.Setter
        public Builder imageScanningConfigurations(@Nullable List<GetImagePipelineImageScanningConfiguration> imageScanningConfigurations) {
            this.imageScanningConfigurations = imageScanningConfigurations;
            return this;
        }
        public Builder imageScanningConfigurations(GetImagePipelineImageScanningConfiguration... imageScanningConfigurations) {
            return imageScanningConfigurations(List.of(imageScanningConfigurations));
        }
        @CustomType.Setter
        public Builder imageTestsConfigurations(@Nullable List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations) {
            this.imageTestsConfigurations = imageTestsConfigurations;
            return this;
        }
        public Builder imageTestsConfigurations(GetImagePipelineImageTestsConfiguration... imageTestsConfigurations) {
            return imageTestsConfigurations(List.of(imageTestsConfigurations));
        }
        @CustomType.Setter
        public Builder infrastructureConfigurationArn(@Nullable String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder platform(@Nullable String platform) {
            this.platform = platform;
            return this;
        }
        @CustomType.Setter
        public Builder schedules(@Nullable List<GetImagePipelineSchedule> schedules) {
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetImagePipelineSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetImagePipelineResult build() {
            final var o = new GetImagePipelineResult();
            o.arn = arn;
            o.containerRecipeArn = containerRecipeArn;
            o.dateCreated = dateCreated;
            o.dateLastRun = dateLastRun;
            o.dateNextRun = dateNextRun;
            o.dateUpdated = dateUpdated;
            o.description = description;
            o.distributionConfigurationArn = distributionConfigurationArn;
            o.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            o.id = id;
            o.imageRecipeArn = imageRecipeArn;
            o.imageScanningConfigurations = imageScanningConfigurations;
            o.imageTestsConfigurations = imageTestsConfigurations;
            o.infrastructureConfigurationArn = infrastructureConfigurationArn;
            o.name = name;
            o.platform = platform;
            o.schedules = schedules;
            o.status = status;
            o.tags = tags;
            return o;
        }
    }
}
