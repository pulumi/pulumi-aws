// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentAgentKnowledgeBaseAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final AgentAgentKnowledgeBaseAssociationState Empty = new AgentAgentKnowledgeBaseAssociationState();

    /**
     * Unique identifier of the agent with which you want to associate the knowledge base.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return Unique identifier of the agent with which you want to associate the knowledge base.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     * 
     */
    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    /**
     * @return Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     * 
     */
    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * Description of what the agent should use the knowledge base for.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of what the agent should use the knowledge base for.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Unique identifier of the knowledge base to associate with the agent.
     * 
     */
    @Import(name="knowledgeBaseId")
    private @Nullable Output<String> knowledgeBaseId;

    /**
     * @return Unique identifier of the knowledge base to associate with the agent.
     * 
     */
    public Optional<Output<String>> knowledgeBaseId() {
        return Optional.ofNullable(this.knowledgeBaseId);
    }

    /**
     * Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="knowledgeBaseState")
    private @Nullable Output<String> knowledgeBaseState;

    /**
     * @return Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> knowledgeBaseState() {
        return Optional.ofNullable(this.knowledgeBaseState);
    }

    private AgentAgentKnowledgeBaseAssociationState() {}

    private AgentAgentKnowledgeBaseAssociationState(AgentAgentKnowledgeBaseAssociationState $) {
        this.agentId = $.agentId;
        this.agentVersion = $.agentVersion;
        this.description = $.description;
        this.knowledgeBaseId = $.knowledgeBaseId;
        this.knowledgeBaseState = $.knowledgeBaseState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentAgentKnowledgeBaseAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentAgentKnowledgeBaseAssociationState $;

        public Builder() {
            $ = new AgentAgentKnowledgeBaseAssociationState();
        }

        public Builder(AgentAgentKnowledgeBaseAssociationState defaults) {
            $ = new AgentAgentKnowledgeBaseAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId Unique identifier of the agent with which you want to associate the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId Unique identifier of the agent with which you want to associate the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param agentVersion Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        /**
         * @param agentVersion Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param description Description of what the agent should use the knowledge base for.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of what the agent should use the knowledge base for.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param knowledgeBaseId Unique identifier of the knowledge base to associate with the agent.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(@Nullable Output<String> knowledgeBaseId) {
            $.knowledgeBaseId = knowledgeBaseId;
            return this;
        }

        /**
         * @param knowledgeBaseId Unique identifier of the knowledge base to associate with the agent.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(String knowledgeBaseId) {
            return knowledgeBaseId(Output.of(knowledgeBaseId));
        }

        /**
         * @param knowledgeBaseState Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseState(@Nullable Output<String> knowledgeBaseState) {
            $.knowledgeBaseState = knowledgeBaseState;
            return this;
        }

        /**
         * @param knowledgeBaseState Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseState(String knowledgeBaseState) {
            return knowledgeBaseState(Output.of(knowledgeBaseState));
        }

        public AgentAgentKnowledgeBaseAssociationState build() {
            return $;
        }
    }

}
