// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
    /**
     * @return Determines the level of granularity that&#39;s included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
     * 
     */
    private @Nullable String prefixFormat;
    /**
     * @return Determines whether the destination file path includes either or both of the selected elements. Valid values are `EXECUTION_ID` and `SCHEMA_VERSION`
     * 
     */
    private @Nullable List<String> prefixHierarchies;
    /**
     * @return Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
     * 
     */
    private @Nullable String prefixType;

    private FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig() {}
    /**
     * @return Determines the level of granularity that&#39;s included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
     * 
     */
    public Optional<String> prefixFormat() {
        return Optional.ofNullable(this.prefixFormat);
    }
    /**
     * @return Determines whether the destination file path includes either or both of the selected elements. Valid values are `EXECUTION_ID` and `SCHEMA_VERSION`
     * 
     */
    public List<String> prefixHierarchies() {
        return this.prefixHierarchies == null ? List.of() : this.prefixHierarchies;
    }
    /**
     * @return Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
     * 
     */
    public Optional<String> prefixType() {
        return Optional.ofNullable(this.prefixType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String prefixFormat;
        private @Nullable List<String> prefixHierarchies;
        private @Nullable String prefixType;
        public Builder() {}
        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.prefixFormat = defaults.prefixFormat;
    	      this.prefixHierarchies = defaults.prefixHierarchies;
    	      this.prefixType = defaults.prefixType;
        }

        @CustomType.Setter
        public Builder prefixFormat(@Nullable String prefixFormat) {

            this.prefixFormat = prefixFormat;
            return this;
        }
        @CustomType.Setter
        public Builder prefixHierarchies(@Nullable List<String> prefixHierarchies) {

            this.prefixHierarchies = prefixHierarchies;
            return this;
        }
        public Builder prefixHierarchies(String... prefixHierarchies) {
            return prefixHierarchies(List.of(prefixHierarchies));
        }
        @CustomType.Setter
        public Builder prefixType(@Nullable String prefixType) {

            this.prefixType = prefixType;
            return this;
        }
        public FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig build() {
            final var _resultValue = new FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig();
            _resultValue.prefixFormat = prefixFormat;
            _resultValue.prefixHierarchies = prefixHierarchies;
            _resultValue.prefixType = prefixType;
            return _resultValue;
        }
    }
}
