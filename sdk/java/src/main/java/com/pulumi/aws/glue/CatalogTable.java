// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.glue.CatalogTableArgs;
import com.pulumi.aws.glue.inputs.CatalogTableState;
import com.pulumi.aws.glue.outputs.CatalogTablePartitionIndex;
import com.pulumi.aws.glue.outputs.CatalogTablePartitionKey;
import com.pulumi.aws.glue.outputs.CatalogTableStorageDescriptor;
import com.pulumi.aws.glue.outputs.CatalogTableTargetTable;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:glue/catalogTable:CatalogTable")
public class CatalogTable extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="catalogId", refs={String.class}, tree="[0]")
    private Output<String> catalogId;

    public Output<String> catalogId() {
        return this.catalogId;
    }
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> owner;

    public Output<Optional<String>> owner() {
        return Codegen.optional(this.owner);
    }
    @Export(name="parameters", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> parameters;

    public Output<Optional<Map<String,String>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    @Export(name="partitionIndices", refs={List.class,CatalogTablePartitionIndex.class}, tree="[0,1]")
    private Output<List<CatalogTablePartitionIndex>> partitionIndices;

    public Output<List<CatalogTablePartitionIndex>> partitionIndices() {
        return this.partitionIndices;
    }
    @Export(name="partitionKeys", refs={List.class,CatalogTablePartitionKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CatalogTablePartitionKey>> partitionKeys;

    public Output<Optional<List<CatalogTablePartitionKey>>> partitionKeys() {
        return Codegen.optional(this.partitionKeys);
    }
    @Export(name="retention", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retention;

    public Output<Optional<Integer>> retention() {
        return Codegen.optional(this.retention);
    }
    @Export(name="storageDescriptor", refs={CatalogTableStorageDescriptor.class}, tree="[0]")
    private Output</* @Nullable */ CatalogTableStorageDescriptor> storageDescriptor;

    public Output<Optional<CatalogTableStorageDescriptor>> storageDescriptor() {
        return Codegen.optional(this.storageDescriptor);
    }
    @Export(name="tableType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tableType;

    public Output<Optional<String>> tableType() {
        return Codegen.optional(this.tableType);
    }
    @Export(name="targetTable", refs={CatalogTableTargetTable.class}, tree="[0]")
    private Output</* @Nullable */ CatalogTableTargetTable> targetTable;

    public Output<Optional<CatalogTableTargetTable>> targetTable() {
        return Codegen.optional(this.targetTable);
    }
    @Export(name="viewExpandedText", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> viewExpandedText;

    public Output<Optional<String>> viewExpandedText() {
        return Codegen.optional(this.viewExpandedText);
    }
    @Export(name="viewOriginalText", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> viewOriginalText;

    public Output<Optional<String>> viewOriginalText() {
        return Codegen.optional(this.viewOriginalText);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CatalogTable(String name) {
        this(name, CatalogTableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CatalogTable(String name, CatalogTableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CatalogTable(String name, CatalogTableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/catalogTable:CatalogTable", name, args == null ? CatalogTableArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CatalogTable(String name, Output<String> id, @Nullable CatalogTableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/catalogTable:CatalogTable", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CatalogTable get(String name, Output<String> id, @Nullable CatalogTableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CatalogTable(name, id, state, options);
    }
}
