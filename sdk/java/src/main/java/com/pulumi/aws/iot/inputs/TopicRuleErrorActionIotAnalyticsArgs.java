// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionIotAnalyticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleErrorActionIotAnalyticsArgs Empty = new TopicRuleErrorActionIotAnalyticsArgs();

    /**
     * The payload that contains a JSON array of records will be sent to IoT Analytics via a batch call.
     * 
     */
    @Import(name="batchMode")
    private @Nullable Output<Boolean> batchMode;

    /**
     * @return The payload that contains a JSON array of records will be sent to IoT Analytics via a batch call.
     * 
     */
    public Optional<Output<Boolean>> batchMode() {
        return Optional.ofNullable(this.batchMode);
    }

    /**
     * Name of AWS IOT Analytics channel.
     * 
     */
    @Import(name="channelName", required=true)
    private Output<String> channelName;

    /**
     * @return Name of AWS IOT Analytics channel.
     * 
     */
    public Output<String> channelName() {
        return this.channelName;
    }

    /**
     * The ARN of the IAM role that grants access.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the IAM role that grants access.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private TopicRuleErrorActionIotAnalyticsArgs() {}

    private TopicRuleErrorActionIotAnalyticsArgs(TopicRuleErrorActionIotAnalyticsArgs $) {
        this.batchMode = $.batchMode;
        this.channelName = $.channelName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleErrorActionIotAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleErrorActionIotAnalyticsArgs $;

        public Builder() {
            $ = new TopicRuleErrorActionIotAnalyticsArgs();
        }

        public Builder(TopicRuleErrorActionIotAnalyticsArgs defaults) {
            $ = new TopicRuleErrorActionIotAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param batchMode The payload that contains a JSON array of records will be sent to IoT Analytics via a batch call.
         * 
         * @return builder
         * 
         */
        public Builder batchMode(@Nullable Output<Boolean> batchMode) {
            $.batchMode = batchMode;
            return this;
        }

        /**
         * @param batchMode The payload that contains a JSON array of records will be sent to IoT Analytics via a batch call.
         * 
         * @return builder
         * 
         */
        public Builder batchMode(Boolean batchMode) {
            return batchMode(Output.of(batchMode));
        }

        /**
         * @param channelName Name of AWS IOT Analytics channel.
         * 
         * @return builder
         * 
         */
        public Builder channelName(Output<String> channelName) {
            $.channelName = channelName;
            return this;
        }

        /**
         * @param channelName Name of AWS IOT Analytics channel.
         * 
         * @return builder
         * 
         */
        public Builder channelName(String channelName) {
            return channelName(Output.of(channelName));
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public TopicRuleErrorActionIotAnalyticsArgs build() {
            if ($.channelName == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionIotAnalyticsArgs", "channelName");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionIotAnalyticsArgs", "roleArn");
            }
            return $;
        }
    }

}
