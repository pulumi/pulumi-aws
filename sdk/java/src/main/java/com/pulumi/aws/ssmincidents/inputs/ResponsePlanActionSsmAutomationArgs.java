// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssmincidents.inputs;

import com.pulumi.aws.ssmincidents.inputs.ResponsePlanActionSsmAutomationParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResponsePlanActionSsmAutomationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResponsePlanActionSsmAutomationArgs Empty = new ResponsePlanActionSsmAutomationArgs();

    @Import(name="documentName", required=true)
    private Output<String> documentName;

    public Output<String> documentName() {
        return this.documentName;
    }

    @Import(name="documentVersion")
    private @Nullable Output<String> documentVersion;

    public Optional<Output<String>> documentVersion() {
        return Optional.ofNullable(this.documentVersion);
    }

    @Import(name="dynamicParameters")
    private @Nullable Output<Map<String,String>> dynamicParameters;

    public Optional<Output<Map<String,String>>> dynamicParameters() {
        return Optional.ofNullable(this.dynamicParameters);
    }

    @Import(name="parameters")
    private @Nullable Output<List<ResponsePlanActionSsmAutomationParameterArgs>> parameters;

    public Optional<Output<List<ResponsePlanActionSsmAutomationParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="targetAccount")
    private @Nullable Output<String> targetAccount;

    public Optional<Output<String>> targetAccount() {
        return Optional.ofNullable(this.targetAccount);
    }

    private ResponsePlanActionSsmAutomationArgs() {}

    private ResponsePlanActionSsmAutomationArgs(ResponsePlanActionSsmAutomationArgs $) {
        this.documentName = $.documentName;
        this.documentVersion = $.documentVersion;
        this.dynamicParameters = $.dynamicParameters;
        this.parameters = $.parameters;
        this.roleArn = $.roleArn;
        this.targetAccount = $.targetAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponsePlanActionSsmAutomationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponsePlanActionSsmAutomationArgs $;

        public Builder() {
            $ = new ResponsePlanActionSsmAutomationArgs();
        }

        public Builder(ResponsePlanActionSsmAutomationArgs defaults) {
            $ = new ResponsePlanActionSsmAutomationArgs(Objects.requireNonNull(defaults));
        }

        public Builder documentName(Output<String> documentName) {
            $.documentName = documentName;
            return this;
        }

        public Builder documentName(String documentName) {
            return documentName(Output.of(documentName));
        }

        public Builder documentVersion(@Nullable Output<String> documentVersion) {
            $.documentVersion = documentVersion;
            return this;
        }

        public Builder documentVersion(String documentVersion) {
            return documentVersion(Output.of(documentVersion));
        }

        public Builder dynamicParameters(@Nullable Output<Map<String,String>> dynamicParameters) {
            $.dynamicParameters = dynamicParameters;
            return this;
        }

        public Builder dynamicParameters(Map<String,String> dynamicParameters) {
            return dynamicParameters(Output.of(dynamicParameters));
        }

        public Builder parameters(@Nullable Output<List<ResponsePlanActionSsmAutomationParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<ResponsePlanActionSsmAutomationParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(ResponsePlanActionSsmAutomationParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder targetAccount(@Nullable Output<String> targetAccount) {
            $.targetAccount = targetAccount;
            return this;
        }

        public Builder targetAccount(String targetAccount) {
            return targetAccount(Output.of(targetAccount));
        }

        public ResponsePlanActionSsmAutomationArgs build() {
            if ($.documentName == null) {
                throw new MissingRequiredPropertyException("ResponsePlanActionSsmAutomationArgs", "documentName");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("ResponsePlanActionSsmAutomationArgs", "roleArn");
            }
            return $;
        }
    }

}
