// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.inputs;

import com.pulumi.aws.codepipeline.inputs.PipelineTriggerAllGitConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineTriggerAllArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineTriggerAllArgs Empty = new PipelineTriggerAllArgs();

    /**
     * Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `git_configuration` block is documented below.
     * 
     */
    @Import(name="gitConfigurations")
    private @Nullable Output<List<PipelineTriggerAllGitConfigurationArgs>> gitConfigurations;

    /**
     * @return Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `git_configuration` block is documented below.
     * 
     */
    public Optional<Output<List<PipelineTriggerAllGitConfigurationArgs>>> gitConfigurations() {
        return Optional.ofNullable(this.gitConfigurations);
    }

    /**
     * The source provider for the event. Possible value is `CodeStarSourceConnection`.
     * 
     */
    @Import(name="providerType")
    private @Nullable Output<String> providerType;

    /**
     * @return The source provider for the event. Possible value is `CodeStarSourceConnection`.
     * 
     */
    public Optional<Output<String>> providerType() {
        return Optional.ofNullable(this.providerType);
    }

    private PipelineTriggerAllArgs() {}

    private PipelineTriggerAllArgs(PipelineTriggerAllArgs $) {
        this.gitConfigurations = $.gitConfigurations;
        this.providerType = $.providerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineTriggerAllArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineTriggerAllArgs $;

        public Builder() {
            $ = new PipelineTriggerAllArgs();
        }

        public Builder(PipelineTriggerAllArgs defaults) {
            $ = new PipelineTriggerAllArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gitConfigurations Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `git_configuration` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gitConfigurations(@Nullable Output<List<PipelineTriggerAllGitConfigurationArgs>> gitConfigurations) {
            $.gitConfigurations = gitConfigurations;
            return this;
        }

        /**
         * @param gitConfigurations Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `git_configuration` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gitConfigurations(List<PipelineTriggerAllGitConfigurationArgs> gitConfigurations) {
            return gitConfigurations(Output.of(gitConfigurations));
        }

        /**
         * @param gitConfigurations Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `git_configuration` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gitConfigurations(PipelineTriggerAllGitConfigurationArgs... gitConfigurations) {
            return gitConfigurations(List.of(gitConfigurations));
        }

        /**
         * @param providerType The source provider for the event. Possible value is `CodeStarSourceConnection`.
         * 
         * @return builder
         * 
         */
        public Builder providerType(@Nullable Output<String> providerType) {
            $.providerType = providerType;
            return this;
        }

        /**
         * @param providerType The source provider for the event. Possible value is `CodeStarSourceConnection`.
         * 
         * @return builder
         * 
         */
        public Builder providerType(String providerType) {
            return providerType(Output.of(providerType));
        }

        public PipelineTriggerAllArgs build() {
            return $;
        }
    }

}
