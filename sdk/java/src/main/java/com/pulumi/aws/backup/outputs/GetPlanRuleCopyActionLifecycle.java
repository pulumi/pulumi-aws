// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetPlanRuleCopyActionLifecycle {
    private Integer coldStorageAfter;
    private Integer deleteAfter;
    private Boolean optInToArchiveForSupportedResources;

    private GetPlanRuleCopyActionLifecycle() {}
    public Integer coldStorageAfter() {
        return this.coldStorageAfter;
    }
    public Integer deleteAfter() {
        return this.deleteAfter;
    }
    public Boolean optInToArchiveForSupportedResources() {
        return this.optInToArchiveForSupportedResources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPlanRuleCopyActionLifecycle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer coldStorageAfter;
        private Integer deleteAfter;
        private Boolean optInToArchiveForSupportedResources;
        public Builder() {}
        public Builder(GetPlanRuleCopyActionLifecycle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coldStorageAfter = defaults.coldStorageAfter;
    	      this.deleteAfter = defaults.deleteAfter;
    	      this.optInToArchiveForSupportedResources = defaults.optInToArchiveForSupportedResources;
        }

        @CustomType.Setter
        public Builder coldStorageAfter(Integer coldStorageAfter) {
            if (coldStorageAfter == null) {
              throw new MissingRequiredPropertyException("GetPlanRuleCopyActionLifecycle", "coldStorageAfter");
            }
            this.coldStorageAfter = coldStorageAfter;
            return this;
        }
        @CustomType.Setter
        public Builder deleteAfter(Integer deleteAfter) {
            if (deleteAfter == null) {
              throw new MissingRequiredPropertyException("GetPlanRuleCopyActionLifecycle", "deleteAfter");
            }
            this.deleteAfter = deleteAfter;
            return this;
        }
        @CustomType.Setter
        public Builder optInToArchiveForSupportedResources(Boolean optInToArchiveForSupportedResources) {
            if (optInToArchiveForSupportedResources == null) {
              throw new MissingRequiredPropertyException("GetPlanRuleCopyActionLifecycle", "optInToArchiveForSupportedResources");
            }
            this.optInToArchiveForSupportedResources = optInToArchiveForSupportedResources;
            return this;
        }
        public GetPlanRuleCopyActionLifecycle build() {
            final var _resultValue = new GetPlanRuleCopyActionLifecycle();
            _resultValue.coldStorageAfter = coldStorageAfter;
            _resultValue.deleteAfter = deleteAfter;
            _resultValue.optInToArchiveForSupportedResources = optInToArchiveForSupportedResources;
            return _resultValue;
        }
    }
}
