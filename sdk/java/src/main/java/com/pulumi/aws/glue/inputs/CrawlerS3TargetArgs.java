// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CrawlerS3TargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CrawlerS3TargetArgs Empty = new CrawlerS3TargetArgs();

    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    @Import(name="dlqEventQueueArn")
    private @Nullable Output<String> dlqEventQueueArn;

    public Optional<Output<String>> dlqEventQueueArn() {
        return Optional.ofNullable(this.dlqEventQueueArn);
    }

    @Import(name="eventQueueArn")
    private @Nullable Output<String> eventQueueArn;

    public Optional<Output<String>> eventQueueArn() {
        return Optional.ofNullable(this.eventQueueArn);
    }

    @Import(name="exclusions")
    private @Nullable Output<List<String>> exclusions;

    public Optional<Output<List<String>>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    @Import(name="sampleSize")
    private @Nullable Output<Integer> sampleSize;

    public Optional<Output<Integer>> sampleSize() {
        return Optional.ofNullable(this.sampleSize);
    }

    private CrawlerS3TargetArgs() {}

    private CrawlerS3TargetArgs(CrawlerS3TargetArgs $) {
        this.connectionName = $.connectionName;
        this.dlqEventQueueArn = $.dlqEventQueueArn;
        this.eventQueueArn = $.eventQueueArn;
        this.exclusions = $.exclusions;
        this.path = $.path;
        this.sampleSize = $.sampleSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CrawlerS3TargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CrawlerS3TargetArgs $;

        public Builder() {
            $ = new CrawlerS3TargetArgs();
        }

        public Builder(CrawlerS3TargetArgs defaults) {
            $ = new CrawlerS3TargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        public Builder dlqEventQueueArn(@Nullable Output<String> dlqEventQueueArn) {
            $.dlqEventQueueArn = dlqEventQueueArn;
            return this;
        }

        public Builder dlqEventQueueArn(String dlqEventQueueArn) {
            return dlqEventQueueArn(Output.of(dlqEventQueueArn));
        }

        public Builder eventQueueArn(@Nullable Output<String> eventQueueArn) {
            $.eventQueueArn = eventQueueArn;
            return this;
        }

        public Builder eventQueueArn(String eventQueueArn) {
            return eventQueueArn(Output.of(eventQueueArn));
        }

        public Builder exclusions(@Nullable Output<List<String>> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        public Builder exclusions(List<String> exclusions) {
            return exclusions(Output.of(exclusions));
        }

        public Builder exclusions(String... exclusions) {
            return exclusions(List.of(exclusions));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder sampleSize(@Nullable Output<Integer> sampleSize) {
            $.sampleSize = sampleSize;
            return this;
        }

        public Builder sampleSize(Integer sampleSize) {
            return sampleSize(Output.of(sampleSize));
        }

        public CrawlerS3TargetArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
