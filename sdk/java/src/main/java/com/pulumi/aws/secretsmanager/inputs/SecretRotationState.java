// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.inputs;

import com.pulumi.aws.secretsmanager.inputs.SecretRotationRotationRulesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretRotationState extends com.pulumi.resources.ResourceArgs {

    public static final SecretRotationState Empty = new SecretRotationState();

    @Import(name="rotationEnabled")
    private @Nullable Output<Boolean> rotationEnabled;

    public Optional<Output<Boolean>> rotationEnabled() {
        return Optional.ofNullable(this.rotationEnabled);
    }

    @Import(name="rotationLambdaArn")
    private @Nullable Output<String> rotationLambdaArn;

    public Optional<Output<String>> rotationLambdaArn() {
        return Optional.ofNullable(this.rotationLambdaArn);
    }

    @Import(name="rotationRules")
    private @Nullable Output<SecretRotationRotationRulesArgs> rotationRules;

    public Optional<Output<SecretRotationRotationRulesArgs>> rotationRules() {
        return Optional.ofNullable(this.rotationRules);
    }

    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    private SecretRotationState() {}

    private SecretRotationState(SecretRotationState $) {
        this.rotationEnabled = $.rotationEnabled;
        this.rotationLambdaArn = $.rotationLambdaArn;
        this.rotationRules = $.rotationRules;
        this.secretId = $.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretRotationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretRotationState $;

        public Builder() {
            $ = new SecretRotationState();
        }

        public Builder(SecretRotationState defaults) {
            $ = new SecretRotationState(Objects.requireNonNull(defaults));
        }

        public Builder rotationEnabled(@Nullable Output<Boolean> rotationEnabled) {
            $.rotationEnabled = rotationEnabled;
            return this;
        }

        public Builder rotationEnabled(Boolean rotationEnabled) {
            return rotationEnabled(Output.of(rotationEnabled));
        }

        public Builder rotationLambdaArn(@Nullable Output<String> rotationLambdaArn) {
            $.rotationLambdaArn = rotationLambdaArn;
            return this;
        }

        public Builder rotationLambdaArn(String rotationLambdaArn) {
            return rotationLambdaArn(Output.of(rotationLambdaArn));
        }

        public Builder rotationRules(@Nullable Output<SecretRotationRotationRulesArgs> rotationRules) {
            $.rotationRules = rotationRules;
            return this;
        }

        public Builder rotationRules(SecretRotationRotationRulesArgs rotationRules) {
            return rotationRules(Output.of(rotationRules));
        }

        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        public SecretRotationState build() {
            return $;
        }
    }

}
