// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleCustomPermissionState extends com.pulumi.resources.ResourceArgs {

    public static final RoleCustomPermissionState Empty = new RoleCustomPermissionState();

    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * Custom permissions profile name.
     * 
     */
    @Import(name="customPermissionsName")
    private @Nullable Output<String> customPermissionsName;

    /**
     * @return Custom permissions profile name.
     * 
     */
    public Optional<Output<String>> customPermissionsName() {
        return Optional.ofNullable(this.customPermissionsName);
    }

    /**
     * Namespace containing the role. Defaults to `default`.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Namespace containing the role. Defaults to `default`.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Role. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return Role. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private RoleCustomPermissionState() {}

    private RoleCustomPermissionState(RoleCustomPermissionState $) {
        this.awsAccountId = $.awsAccountId;
        this.customPermissionsName = $.customPermissionsName;
        this.namespace = $.namespace;
        this.region = $.region;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleCustomPermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleCustomPermissionState $;

        public Builder() {
            $ = new RoleCustomPermissionState();
        }

        public Builder(RoleCustomPermissionState defaults) {
            $ = new RoleCustomPermissionState(Objects.requireNonNull(defaults));
        }

        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param customPermissionsName Custom permissions profile name.
         * 
         * @return builder
         * 
         */
        public Builder customPermissionsName(@Nullable Output<String> customPermissionsName) {
            $.customPermissionsName = customPermissionsName;
            return this;
        }

        /**
         * @param customPermissionsName Custom permissions profile name.
         * 
         * @return builder
         * 
         */
        public Builder customPermissionsName(String customPermissionsName) {
            return customPermissionsName(Output.of(customPermissionsName));
        }

        /**
         * @param namespace Namespace containing the role. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Namespace containing the role. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param role Role. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public RoleCustomPermissionState build() {
            return $;
        }
    }

}
