// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resourcegroups;

import com.pulumi.aws.resourcegroups.inputs.GroupConfigurationArgs;
import com.pulumi.aws.resourcegroups.inputs.GroupResourceQueryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupArgs Empty = new GroupArgs();

    @Import(name="configurations")
    private @Nullable Output<List<GroupConfigurationArgs>> configurations;

    public Optional<Output<List<GroupConfigurationArgs>>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="resourceQuery")
    private @Nullable Output<GroupResourceQueryArgs> resourceQuery;

    public Optional<Output<GroupResourceQueryArgs>> resourceQuery() {
        return Optional.ofNullable(this.resourceQuery);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GroupArgs() {}

    private GroupArgs(GroupArgs $) {
        this.configurations = $.configurations;
        this.description = $.description;
        this.name = $.name;
        this.resourceQuery = $.resourceQuery;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupArgs $;

        public Builder() {
            $ = new GroupArgs();
        }

        public Builder(GroupArgs defaults) {
            $ = new GroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder configurations(@Nullable Output<List<GroupConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        public Builder configurations(List<GroupConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        public Builder configurations(GroupConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceQuery(@Nullable Output<GroupResourceQueryArgs> resourceQuery) {
            $.resourceQuery = resourceQuery;
            return this;
        }

        public Builder resourceQuery(GroupResourceQueryArgs resourceQuery) {
            return resourceQuery(Output.of(resourceQuery));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GroupArgs build() {
            return $;
        }
    }

}
