// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mskconnect;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.mskconnect.WorkerConfigurationArgs;
import com.pulumi.aws.mskconnect.inputs.WorkerConfigurationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:mskconnect/workerConfiguration:WorkerConfiguration")
public class WorkerConfiguration extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="latestRevision", refs={Integer.class}, tree="[0]")
    private Output<Integer> latestRevision;

    public Output<Integer> latestRevision() {
        return this.latestRevision;
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="propertiesFileContent", refs={String.class}, tree="[0]")
    private Output<String> propertiesFileContent;

    public Output<String> propertiesFileContent() {
        return this.propertiesFileContent;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkerConfiguration(String name) {
        this(name, WorkerConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkerConfiguration(String name, WorkerConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkerConfiguration(String name, WorkerConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, args == null ? WorkerConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WorkerConfiguration(String name, Output<String> id, @Nullable WorkerConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkerConfiguration get(String name, Output<String> id, @Nullable WorkerConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkerConfiguration(name, id, state, options);
    }
}
