// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.aws.sagemaker.outputs.EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader;
import com.pulumi.aws.sagemaker.outputs.EndpointConfigurationDataCaptureConfigCaptureOption;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointConfigurationDataCaptureConfig {
    /**
     * @return The content type headers to capture. Fields are documented below.
     * 
     */
    private @Nullable EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader captureContentTypeHeader;
    /**
     * @return Specifies what data to capture. Fields are documented below.
     * 
     */
    private List<EndpointConfigurationDataCaptureConfigCaptureOption> captureOptions;
    /**
     * @return The URL for S3 location where the captured data is stored.
     * 
     */
    private String destinationS3Uri;
    /**
     * @return Flag to enable data capture. Defaults to `false`.
     * 
     */
    private @Nullable Boolean enableCapture;
    /**
     * @return Portion of data to capture. Should be between 0 and 100.
     * 
     */
    private Integer initialSamplingPercentage;
    /**
     * @return Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.
     * 
     */
    private @Nullable String kmsKeyId;

    private EndpointConfigurationDataCaptureConfig() {}
    /**
     * @return The content type headers to capture. Fields are documented below.
     * 
     */
    public Optional<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader> captureContentTypeHeader() {
        return Optional.ofNullable(this.captureContentTypeHeader);
    }
    /**
     * @return Specifies what data to capture. Fields are documented below.
     * 
     */
    public List<EndpointConfigurationDataCaptureConfigCaptureOption> captureOptions() {
        return this.captureOptions;
    }
    /**
     * @return The URL for S3 location where the captured data is stored.
     * 
     */
    public String destinationS3Uri() {
        return this.destinationS3Uri;
    }
    /**
     * @return Flag to enable data capture. Defaults to `false`.
     * 
     */
    public Optional<Boolean> enableCapture() {
        return Optional.ofNullable(this.enableCapture);
    }
    /**
     * @return Portion of data to capture. Should be between 0 and 100.
     * 
     */
    public Integer initialSamplingPercentage() {
        return this.initialSamplingPercentage;
    }
    /**
     * @return Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointConfigurationDataCaptureConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader captureContentTypeHeader;
        private List<EndpointConfigurationDataCaptureConfigCaptureOption> captureOptions;
        private String destinationS3Uri;
        private @Nullable Boolean enableCapture;
        private Integer initialSamplingPercentage;
        private @Nullable String kmsKeyId;
        public Builder() {}
        public Builder(EndpointConfigurationDataCaptureConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureContentTypeHeader = defaults.captureContentTypeHeader;
    	      this.captureOptions = defaults.captureOptions;
    	      this.destinationS3Uri = defaults.destinationS3Uri;
    	      this.enableCapture = defaults.enableCapture;
    	      this.initialSamplingPercentage = defaults.initialSamplingPercentage;
    	      this.kmsKeyId = defaults.kmsKeyId;
        }

        @CustomType.Setter
        public Builder captureContentTypeHeader(@Nullable EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader captureContentTypeHeader) {

            this.captureContentTypeHeader = captureContentTypeHeader;
            return this;
        }
        @CustomType.Setter
        public Builder captureOptions(List<EndpointConfigurationDataCaptureConfigCaptureOption> captureOptions) {
            if (captureOptions == null) {
              throw new MissingRequiredPropertyException("EndpointConfigurationDataCaptureConfig", "captureOptions");
            }
            this.captureOptions = captureOptions;
            return this;
        }
        public Builder captureOptions(EndpointConfigurationDataCaptureConfigCaptureOption... captureOptions) {
            return captureOptions(List.of(captureOptions));
        }
        @CustomType.Setter
        public Builder destinationS3Uri(String destinationS3Uri) {
            if (destinationS3Uri == null) {
              throw new MissingRequiredPropertyException("EndpointConfigurationDataCaptureConfig", "destinationS3Uri");
            }
            this.destinationS3Uri = destinationS3Uri;
            return this;
        }
        @CustomType.Setter
        public Builder enableCapture(@Nullable Boolean enableCapture) {

            this.enableCapture = enableCapture;
            return this;
        }
        @CustomType.Setter
        public Builder initialSamplingPercentage(Integer initialSamplingPercentage) {
            if (initialSamplingPercentage == null) {
              throw new MissingRequiredPropertyException("EndpointConfigurationDataCaptureConfig", "initialSamplingPercentage");
            }
            this.initialSamplingPercentage = initialSamplingPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {

            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public EndpointConfigurationDataCaptureConfig build() {
            final var _resultValue = new EndpointConfigurationDataCaptureConfig();
            _resultValue.captureContentTypeHeader = captureContentTypeHeader;
            _resultValue.captureOptions = captureOptions;
            _resultValue.destinationS3Uri = destinationS3Uri;
            _resultValue.enableCapture = enableCapture;
            _resultValue.initialSamplingPercentage = initialSamplingPercentage;
            _resultValue.kmsKeyId = kmsKeyId;
            return _resultValue;
        }
    }
}
