// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.outputs;

import com.pulumi.aws.vpclattice.outputs.ListenerRuleMatchHttpMatchHeaderMatch;
import com.pulumi.aws.vpclattice.outputs.ListenerRuleMatchHttpMatchPathMatch;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListenerRuleMatchHttpMatch {
    /**
     * @return The header matches. Matches incoming requests with rule based on request header value before applying rule action.
     * 
     */
    private @Nullable List<ListenerRuleMatchHttpMatchHeaderMatch> headerMatches;
    /**
     * @return The HTTP method type.
     * 
     */
    private @Nullable String method;
    /**
     * @return The path match.
     * 
     */
    private @Nullable ListenerRuleMatchHttpMatchPathMatch pathMatch;

    private ListenerRuleMatchHttpMatch() {}
    /**
     * @return The header matches. Matches incoming requests with rule based on request header value before applying rule action.
     * 
     */
    public List<ListenerRuleMatchHttpMatchHeaderMatch> headerMatches() {
        return this.headerMatches == null ? List.of() : this.headerMatches;
    }
    /**
     * @return The HTTP method type.
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    /**
     * @return The path match.
     * 
     */
    public Optional<ListenerRuleMatchHttpMatchPathMatch> pathMatch() {
        return Optional.ofNullable(this.pathMatch);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerRuleMatchHttpMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ListenerRuleMatchHttpMatchHeaderMatch> headerMatches;
        private @Nullable String method;
        private @Nullable ListenerRuleMatchHttpMatchPathMatch pathMatch;
        public Builder() {}
        public Builder(ListenerRuleMatchHttpMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headerMatches = defaults.headerMatches;
    	      this.method = defaults.method;
    	      this.pathMatch = defaults.pathMatch;
        }

        @CustomType.Setter
        public Builder headerMatches(@Nullable List<ListenerRuleMatchHttpMatchHeaderMatch> headerMatches) {
            this.headerMatches = headerMatches;
            return this;
        }
        public Builder headerMatches(ListenerRuleMatchHttpMatchHeaderMatch... headerMatches) {
            return headerMatches(List.of(headerMatches));
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder pathMatch(@Nullable ListenerRuleMatchHttpMatchPathMatch pathMatch) {
            this.pathMatch = pathMatch;
            return this;
        }
        public ListenerRuleMatchHttpMatch build() {
            final var _resultValue = new ListenerRuleMatchHttpMatch();
            _resultValue.headerMatches = headerMatches;
            _resultValue.method = method;
            _resultValue.pathMatch = pathMatch;
            return _resultValue;
        }
    }
}
