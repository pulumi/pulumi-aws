// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationCloudwatchLoggingOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationCloudwatchLoggingOptionsArgs Empty = new ApplicationCloudwatchLoggingOptionsArgs();

    @Import(name="cloudwatchLoggingOptionId")
    private @Nullable Output<String> cloudwatchLoggingOptionId;

    public Optional<Output<String>> cloudwatchLoggingOptionId() {
        return Optional.ofNullable(this.cloudwatchLoggingOptionId);
    }

    /**
     * The ARN of the CloudWatch log stream to receive application messages.
     * 
     */
    @Import(name="logStreamArn", required=true)
    private Output<String> logStreamArn;

    /**
     * @return The ARN of the CloudWatch log stream to receive application messages.
     * 
     */
    public Output<String> logStreamArn() {
        return this.logStreamArn;
    }

    private ApplicationCloudwatchLoggingOptionsArgs() {}

    private ApplicationCloudwatchLoggingOptionsArgs(ApplicationCloudwatchLoggingOptionsArgs $) {
        this.cloudwatchLoggingOptionId = $.cloudwatchLoggingOptionId;
        this.logStreamArn = $.logStreamArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationCloudwatchLoggingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationCloudwatchLoggingOptionsArgs $;

        public Builder() {
            $ = new ApplicationCloudwatchLoggingOptionsArgs();
        }

        public Builder(ApplicationCloudwatchLoggingOptionsArgs defaults) {
            $ = new ApplicationCloudwatchLoggingOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudwatchLoggingOptionId(@Nullable Output<String> cloudwatchLoggingOptionId) {
            $.cloudwatchLoggingOptionId = cloudwatchLoggingOptionId;
            return this;
        }

        public Builder cloudwatchLoggingOptionId(String cloudwatchLoggingOptionId) {
            return cloudwatchLoggingOptionId(Output.of(cloudwatchLoggingOptionId));
        }

        /**
         * @param logStreamArn The ARN of the CloudWatch log stream to receive application messages.
         * 
         * @return builder
         * 
         */
        public Builder logStreamArn(Output<String> logStreamArn) {
            $.logStreamArn = logStreamArn;
            return this;
        }

        /**
         * @param logStreamArn The ARN of the CloudWatch log stream to receive application messages.
         * 
         * @return builder
         * 
         */
        public Builder logStreamArn(String logStreamArn) {
            return logStreamArn(Output.of(logStreamArn));
        }

        public ApplicationCloudwatchLoggingOptionsArgs build() {
            if ($.logStreamArn == null) {
                throw new MissingRequiredPropertyException("ApplicationCloudwatchLoggingOptionsArgs", "logStreamArn");
            }
            return $;
        }
    }

}
