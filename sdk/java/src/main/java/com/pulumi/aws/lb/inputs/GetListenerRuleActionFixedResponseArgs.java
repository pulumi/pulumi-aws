// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetListenerRuleActionFixedResponseArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetListenerRuleActionFixedResponseArgs Empty = new GetListenerRuleActionFixedResponseArgs();

    /**
     * Content type of the response.
     * 
     */
    @Import(name="contentType", required=true)
    private Output<String> contentType;

    /**
     * @return Content type of the response.
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }

    /**
     * Message body of the response.
     * 
     */
    @Import(name="messageBody", required=true)
    private Output<String> messageBody;

    /**
     * @return Message body of the response.
     * 
     */
    public Output<String> messageBody() {
        return this.messageBody;
    }

    /**
     * The HTTP redirect code.
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<String> statusCode;

    /**
     * @return The HTTP redirect code.
     * 
     */
    public Output<String> statusCode() {
        return this.statusCode;
    }

    private GetListenerRuleActionFixedResponseArgs() {}

    private GetListenerRuleActionFixedResponseArgs(GetListenerRuleActionFixedResponseArgs $) {
        this.contentType = $.contentType;
        this.messageBody = $.messageBody;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleActionFixedResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleActionFixedResponseArgs $;

        public Builder() {
            $ = new GetListenerRuleActionFixedResponseArgs();
        }

        public Builder(GetListenerRuleActionFixedResponseArgs defaults) {
            $ = new GetListenerRuleActionFixedResponseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentType Content type of the response.
         * 
         * @return builder
         * 
         */
        public Builder contentType(Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType Content type of the response.
         * 
         * @return builder
         * 
         */
        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param messageBody Message body of the response.
         * 
         * @return builder
         * 
         */
        public Builder messageBody(Output<String> messageBody) {
            $.messageBody = messageBody;
            return this;
        }

        /**
         * @param messageBody Message body of the response.
         * 
         * @return builder
         * 
         */
        public Builder messageBody(String messageBody) {
            return messageBody(Output.of(messageBody));
        }

        /**
         * @param statusCode The HTTP redirect code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The HTTP redirect code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public GetListenerRuleActionFixedResponseArgs build() {
            if ($.contentType == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionFixedResponseArgs", "contentType");
            }
            if ($.messageBody == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionFixedResponseArgs", "messageBody");
            }
            if ($.statusCode == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionFixedResponseArgs", "statusCode");
            }
            return $;
        }
    }

}
