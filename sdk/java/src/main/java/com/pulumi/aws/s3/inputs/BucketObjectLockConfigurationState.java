// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketObjectLockConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketObjectLockConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final BucketObjectLockConfigurationState Empty = new BucketObjectLockConfigurationState();

    /**
     * Name of the bucket.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return Name of the bucket.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @Import(name="expectedBucketOwner")
    private @Nullable Output<String> expectedBucketOwner;

    /**
     * @return Account ID of the expected bucket owner.
     * 
     */
    public Optional<Output<String>> expectedBucketOwner() {
        return Optional.ofNullable(this.expectedBucketOwner);
    }

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Defaults to `Enabled`. Valid values: `Enabled`.
     * 
     */
    @Import(name="objectLockEnabled")
    private @Nullable Output<String> objectLockEnabled;

    /**
     * @return Indicates whether this bucket has an Object Lock configuration enabled. Defaults to `Enabled`. Valid values: `Enabled`.
     * 
     */
    public Optional<Output<String>> objectLockEnabled() {
        return Optional.ofNullable(this.objectLockEnabled);
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Configuration block for specifying the Object Lock rule for the specified object. See below.
     * 
     */
    @Import(name="rule")
    private @Nullable Output<BucketObjectLockConfigurationRuleArgs> rule;

    /**
     * @return Configuration block for specifying the Object Lock rule for the specified object. See below.
     * 
     */
    public Optional<Output<BucketObjectLockConfigurationRuleArgs>> rule() {
        return Optional.ofNullable(this.rule);
    }

    /**
     * This argument is deprecated and no longer needed to enable Object Lock.
     * To enable Object Lock for an existing bucket, you must first enable versioning on the bucket and then enable Object Lock. For more details on versioning, see the `aws.s3.BucketVersioning` resource.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return This argument is deprecated and no longer needed to enable Object Lock.
     * To enable Object Lock for an existing bucket, you must first enable versioning on the bucket and then enable Object Lock. For more details on versioning, see the `aws.s3.BucketVersioning` resource.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private BucketObjectLockConfigurationState() {}

    private BucketObjectLockConfigurationState(BucketObjectLockConfigurationState $) {
        this.bucket = $.bucket;
        this.expectedBucketOwner = $.expectedBucketOwner;
        this.objectLockEnabled = $.objectLockEnabled;
        this.region = $.region;
        this.rule = $.rule;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketObjectLockConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketObjectLockConfigurationState $;

        public Builder() {
            $ = new BucketObjectLockConfigurationState();
        }

        public Builder(BucketObjectLockConfigurationState defaults) {
            $ = new BucketObjectLockConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param expectedBucketOwner Account ID of the expected bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder expectedBucketOwner(@Nullable Output<String> expectedBucketOwner) {
            $.expectedBucketOwner = expectedBucketOwner;
            return this;
        }

        /**
         * @param expectedBucketOwner Account ID of the expected bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder expectedBucketOwner(String expectedBucketOwner) {
            return expectedBucketOwner(Output.of(expectedBucketOwner));
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Defaults to `Enabled`. Valid values: `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(@Nullable Output<String> objectLockEnabled) {
            $.objectLockEnabled = objectLockEnabled;
            return this;
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Defaults to `Enabled`. Valid values: `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(String objectLockEnabled) {
            return objectLockEnabled(Output.of(objectLockEnabled));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param rule Configuration block for specifying the Object Lock rule for the specified object. See below.
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<BucketObjectLockConfigurationRuleArgs> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule Configuration block for specifying the Object Lock rule for the specified object. See below.
         * 
         * @return builder
         * 
         */
        public Builder rule(BucketObjectLockConfigurationRuleArgs rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param token This argument is deprecated and no longer needed to enable Object Lock.
         * To enable Object Lock for an existing bucket, you must first enable versioning on the bucket and then enable Object Lock. For more details on versioning, see the `aws.s3.BucketVersioning` resource.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token This argument is deprecated and no longer needed to enable Object Lock.
         * To enable Object Lock for an existing bucket, you must first enable versioning on the bucket and then enable Object Lock. For more details on versioning, see the `aws.s3.BucketVersioning` resource.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public BucketObjectLockConfigurationState build() {
            return $;
        }
    }

}
