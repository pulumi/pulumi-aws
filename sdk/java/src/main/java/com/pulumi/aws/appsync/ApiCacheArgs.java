// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiCacheArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiCacheArgs Empty = new ApiCacheArgs();

    @Import(name="apiCachingBehavior", required=true)
    private Output<String> apiCachingBehavior;

    public Output<String> apiCachingBehavior() {
        return this.apiCachingBehavior;
    }

    @Import(name="apiId", required=true)
    private Output<String> apiId;

    public Output<String> apiId() {
        return this.apiId;
    }

    @Import(name="atRestEncryptionEnabled")
    private @Nullable Output<Boolean> atRestEncryptionEnabled;

    public Optional<Output<Boolean>> atRestEncryptionEnabled() {
        return Optional.ofNullable(this.atRestEncryptionEnabled);
    }

    @Import(name="transitEncryptionEnabled")
    private @Nullable Output<Boolean> transitEncryptionEnabled;

    public Optional<Output<Boolean>> transitEncryptionEnabled() {
        return Optional.ofNullable(this.transitEncryptionEnabled);
    }

    @Import(name="ttl", required=true)
    private Output<Integer> ttl;

    public Output<Integer> ttl() {
        return this.ttl;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ApiCacheArgs() {}

    private ApiCacheArgs(ApiCacheArgs $) {
        this.apiCachingBehavior = $.apiCachingBehavior;
        this.apiId = $.apiId;
        this.atRestEncryptionEnabled = $.atRestEncryptionEnabled;
        this.transitEncryptionEnabled = $.transitEncryptionEnabled;
        this.ttl = $.ttl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiCacheArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiCacheArgs $;

        public Builder() {
            $ = new ApiCacheArgs();
        }

        public Builder(ApiCacheArgs defaults) {
            $ = new ApiCacheArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiCachingBehavior(Output<String> apiCachingBehavior) {
            $.apiCachingBehavior = apiCachingBehavior;
            return this;
        }

        public Builder apiCachingBehavior(String apiCachingBehavior) {
            return apiCachingBehavior(Output.of(apiCachingBehavior));
        }

        public Builder apiId(Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        public Builder atRestEncryptionEnabled(@Nullable Output<Boolean> atRestEncryptionEnabled) {
            $.atRestEncryptionEnabled = atRestEncryptionEnabled;
            return this;
        }

        public Builder atRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
            return atRestEncryptionEnabled(Output.of(atRestEncryptionEnabled));
        }

        public Builder transitEncryptionEnabled(@Nullable Output<Boolean> transitEncryptionEnabled) {
            $.transitEncryptionEnabled = transitEncryptionEnabled;
            return this;
        }

        public Builder transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
            return transitEncryptionEnabled(Output.of(transitEncryptionEnabled));
        }

        public Builder ttl(Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ApiCacheArgs build() {
            $.apiCachingBehavior = Objects.requireNonNull($.apiCachingBehavior, "expected parameter 'apiCachingBehavior' to be non-null");
            $.apiId = Objects.requireNonNull($.apiId, "expected parameter 'apiId' to be non-null");
            $.ttl = Objects.requireNonNull($.ttl, "expected parameter 'ttl' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
