// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetInstanceCreditSpecification;
import com.pulumi.aws.ec2.outputs.GetInstanceEbsBlockDevice;
import com.pulumi.aws.ec2.outputs.GetInstanceEnclaveOption;
import com.pulumi.aws.ec2.outputs.GetInstanceEphemeralBlockDevice;
import com.pulumi.aws.ec2.outputs.GetInstanceFilter;
import com.pulumi.aws.ec2.outputs.GetInstanceMaintenanceOption;
import com.pulumi.aws.ec2.outputs.GetInstanceMetadataOption;
import com.pulumi.aws.ec2.outputs.GetInstancePrivateDnsNameOption;
import com.pulumi.aws.ec2.outputs.GetInstanceRootBlockDevice;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceResult {
    /**
     * @return ID of the AMI used to launch the instance.
     * 
     */
    private @Nullable String ami;
    /**
     * @return ARN of the instance.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Whether or not the Instance is associated with a public IP address or not (Boolean).
     * 
     */
    private @Nullable Boolean associatePublicIpAddress;
    /**
     * @return Availability zone of the Instance.
     * 
     */
    private @Nullable String availabilityZone;
    /**
     * @return Credit specification of the Instance.
     * 
     */
    private @Nullable List<GetInstanceCreditSpecification> creditSpecifications;
    /**
     * @return Whether or not EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection) is enabled (Boolean).
     * 
     */
    private @Nullable Boolean disableApiStop;
    /**
     * @return Whether or not [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination) is enabled (Boolean).
     * 
     */
    private @Nullable Boolean disableApiTermination;
    /**
     * @return EBS block device mappings of the Instance.
     * 
     */
    private @Nullable List<GetInstanceEbsBlockDevice> ebsBlockDevices;
    /**
     * @return Whether the Instance is EBS optimized or not (Boolean).
     * 
     */
    private @Nullable Boolean ebsOptimized;
    /**
     * @return Enclave options of the instance.
     * 
     */
    private @Nullable List<GetInstanceEnclaveOption> enclaveOptions;
    /**
     * @return Ephemeral block device mappings of the Instance.
     * 
     */
    private @Nullable List<GetInstanceEphemeralBlockDevice> ephemeralBlockDevices;
    private @Nullable List<GetInstanceFilter> filters;
    private @Nullable Boolean getPasswordData;
    private @Nullable Boolean getUserData;
    /**
     * @return ID of the dedicated host the instance will be assigned to.
     * 
     */
    private @Nullable String hostId;
    /**
     * @return ARN of the host resource group the instance is associated with.
     * 
     */
    private @Nullable String hostResourceGroupArn;
    /**
     * @return Name of the instance profile associated with the Instance.
     * 
     */
    private @Nullable String iamInstanceProfile;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String instanceId;
    /**
     * @return State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
     * 
     */
    private @Nullable String instanceState;
    private @Nullable Map<String,String> instanceTags;
    /**
     * @return Type of the Instance.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn&#39;t change if you attach an EIP to the instance.
     * 
     */
    private @Nullable List<String> ipv6Addresses;
    /**
     * @return Key name of the Instance.
     * 
     */
    private @Nullable String keyName;
    /**
     * @return Maintenance and recovery options for the instance.
     * 
     */
    private @Nullable List<GetInstanceMaintenanceOption> maintenanceOptions;
    /**
     * @return Metadata options of the Instance.
     * 
     */
    private @Nullable List<GetInstanceMetadataOption> metadataOptions;
    /**
     * @return Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
     * 
     */
    private @Nullable Boolean monitoring;
    /**
     * @return ID of the network interface that was created with the Instance.
     * 
     */
    private @Nullable String networkInterfaceId;
    /**
     * @return ARN of the Outpost.
     * 
     */
    private @Nullable String outpostArn;
    /**
     * @return Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    private @Nullable String passwordData;
    /**
     * @return Placement group of the Instance.
     * 
     */
    private @Nullable String placementGroup;
    /**
     * @return Number of the partition the instance is in.
     * 
     */
    private @Nullable Integer placementPartitionNumber;
    /**
     * @return Private DNS name assigned to the Instance. Can only be used inside the Amazon EC2, and only available if you&#39;ve enabled DNS hostnames for your VPC.
     * 
     */
    private @Nullable String privateDns;
    /**
     * @return Options for the instance hostname.
     * 
     */
    private @Nullable List<GetInstancePrivateDnsNameOption> privateDnsNameOptions;
    /**
     * @return Private IP address assigned to the Instance.
     * 
     */
    private @Nullable String privateIp;
    /**
     * @return Public DNS name assigned to the Instance. For EC2-VPC, this is only available if you&#39;ve enabled DNS hostnames for your VPC.
     * 
     */
    private @Nullable String publicDns;
    /**
     * @return Public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an `aws.ec2.Eip` with your instance, you should refer to the EIP&#39;s address directly and not use `public_ip`, as this field will change after the EIP is attached.
     * 
     */
    private @Nullable String publicIp;
    /**
     * @return Root block device mappings of the Instance
     * 
     */
    private @Nullable List<GetInstanceRootBlockDevice> rootBlockDevices;
    /**
     * @return Secondary private IPv4 addresses assigned to the instance&#39;s primary network interface (eth0) in a VPC.
     * 
     */
    private @Nullable List<String> secondaryPrivateIps;
    /**
     * @return Associated security groups.
     * 
     */
    private @Nullable List<String> securityGroups;
    /**
     * @return Whether the network interface performs source/destination checking (Boolean).
     * 
     */
    private @Nullable Boolean sourceDestCheck;
    /**
     * @return VPC subnet ID.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return Map of tags assigned to the Instance.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Tenancy of the instance: `dedicated`, `default`, `host`.
     * 
     */
    private @Nullable String tenancy;
    /**
     * @return SHA-1 hash of User Data supplied to the Instance.
     * 
     */
    private @Nullable String userData;
    /**
     * @return Base64 encoded contents of User Data supplied to the Instance. This attribute is only exported if `get_user_data` is true.
     * 
     */
    private @Nullable String userDataBase64;
    /**
     * @return Associated security groups in a non-default VPC.
     * 
     */
    private @Nullable List<String> vpcSecurityGroupIds;

    private GetInstanceResult() {}
    /**
     * @return ID of the AMI used to launch the instance.
     * 
     */
    public Optional<String> ami() {
        return Optional.ofNullable(this.ami);
    }
    /**
     * @return ARN of the instance.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Whether or not the Instance is associated with a public IP address or not (Boolean).
     * 
     */
    public Optional<Boolean> associatePublicIpAddress() {
        return Optional.ofNullable(this.associatePublicIpAddress);
    }
    /**
     * @return Availability zone of the Instance.
     * 
     */
    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * @return Credit specification of the Instance.
     * 
     */
    public List<GetInstanceCreditSpecification> creditSpecifications() {
        return this.creditSpecifications == null ? List.of() : this.creditSpecifications;
    }
    /**
     * @return Whether or not EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection) is enabled (Boolean).
     * 
     */
    public Optional<Boolean> disableApiStop() {
        return Optional.ofNullable(this.disableApiStop);
    }
    /**
     * @return Whether or not [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination) is enabled (Boolean).
     * 
     */
    public Optional<Boolean> disableApiTermination() {
        return Optional.ofNullable(this.disableApiTermination);
    }
    /**
     * @return EBS block device mappings of the Instance.
     * 
     */
    public List<GetInstanceEbsBlockDevice> ebsBlockDevices() {
        return this.ebsBlockDevices == null ? List.of() : this.ebsBlockDevices;
    }
    /**
     * @return Whether the Instance is EBS optimized or not (Boolean).
     * 
     */
    public Optional<Boolean> ebsOptimized() {
        return Optional.ofNullable(this.ebsOptimized);
    }
    /**
     * @return Enclave options of the instance.
     * 
     */
    public List<GetInstanceEnclaveOption> enclaveOptions() {
        return this.enclaveOptions == null ? List.of() : this.enclaveOptions;
    }
    /**
     * @return Ephemeral block device mappings of the Instance.
     * 
     */
    public List<GetInstanceEphemeralBlockDevice> ephemeralBlockDevices() {
        return this.ephemeralBlockDevices == null ? List.of() : this.ephemeralBlockDevices;
    }
    public List<GetInstanceFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<Boolean> getPasswordData() {
        return Optional.ofNullable(this.getPasswordData);
    }
    public Optional<Boolean> getUserData() {
        return Optional.ofNullable(this.getUserData);
    }
    /**
     * @return ID of the dedicated host the instance will be assigned to.
     * 
     */
    public Optional<String> hostId() {
        return Optional.ofNullable(this.hostId);
    }
    /**
     * @return ARN of the host resource group the instance is associated with.
     * 
     */
    public Optional<String> hostResourceGroupArn() {
        return Optional.ofNullable(this.hostResourceGroupArn);
    }
    /**
     * @return Name of the instance profile associated with the Instance.
     * 
     */
    public Optional<String> iamInstanceProfile() {
        return Optional.ofNullable(this.iamInstanceProfile);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
     * 
     */
    public Optional<String> instanceState() {
        return Optional.ofNullable(this.instanceState);
    }
    public Map<String,String> instanceTags() {
        return this.instanceTags == null ? Map.of() : this.instanceTags;
    }
    /**
     * @return Type of the Instance.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn&#39;t change if you attach an EIP to the instance.
     * 
     */
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses == null ? List.of() : this.ipv6Addresses;
    }
    /**
     * @return Key name of the Instance.
     * 
     */
    public Optional<String> keyName() {
        return Optional.ofNullable(this.keyName);
    }
    /**
     * @return Maintenance and recovery options for the instance.
     * 
     */
    public List<GetInstanceMaintenanceOption> maintenanceOptions() {
        return this.maintenanceOptions == null ? List.of() : this.maintenanceOptions;
    }
    /**
     * @return Metadata options of the Instance.
     * 
     */
    public List<GetInstanceMetadataOption> metadataOptions() {
        return this.metadataOptions == null ? List.of() : this.metadataOptions;
    }
    /**
     * @return Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
     * 
     */
    public Optional<Boolean> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }
    /**
     * @return ID of the network interface that was created with the Instance.
     * 
     */
    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }
    /**
     * @return ARN of the Outpost.
     * 
     */
    public Optional<String> outpostArn() {
        return Optional.ofNullable(this.outpostArn);
    }
    /**
     * @return Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    public Optional<String> passwordData() {
        return Optional.ofNullable(this.passwordData);
    }
    /**
     * @return Placement group of the Instance.
     * 
     */
    public Optional<String> placementGroup() {
        return Optional.ofNullable(this.placementGroup);
    }
    /**
     * @return Number of the partition the instance is in.
     * 
     */
    public Optional<Integer> placementPartitionNumber() {
        return Optional.ofNullable(this.placementPartitionNumber);
    }
    /**
     * @return Private DNS name assigned to the Instance. Can only be used inside the Amazon EC2, and only available if you&#39;ve enabled DNS hostnames for your VPC.
     * 
     */
    public Optional<String> privateDns() {
        return Optional.ofNullable(this.privateDns);
    }
    /**
     * @return Options for the instance hostname.
     * 
     */
    public List<GetInstancePrivateDnsNameOption> privateDnsNameOptions() {
        return this.privateDnsNameOptions == null ? List.of() : this.privateDnsNameOptions;
    }
    /**
     * @return Private IP address assigned to the Instance.
     * 
     */
    public Optional<String> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }
    /**
     * @return Public DNS name assigned to the Instance. For EC2-VPC, this is only available if you&#39;ve enabled DNS hostnames for your VPC.
     * 
     */
    public Optional<String> publicDns() {
        return Optional.ofNullable(this.publicDns);
    }
    /**
     * @return Public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an `aws.ec2.Eip` with your instance, you should refer to the EIP&#39;s address directly and not use `public_ip`, as this field will change after the EIP is attached.
     * 
     */
    public Optional<String> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }
    /**
     * @return Root block device mappings of the Instance
     * 
     */
    public List<GetInstanceRootBlockDevice> rootBlockDevices() {
        return this.rootBlockDevices == null ? List.of() : this.rootBlockDevices;
    }
    /**
     * @return Secondary private IPv4 addresses assigned to the instance&#39;s primary network interface (eth0) in a VPC.
     * 
     */
    public List<String> secondaryPrivateIps() {
        return this.secondaryPrivateIps == null ? List.of() : this.secondaryPrivateIps;
    }
    /**
     * @return Associated security groups.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    /**
     * @return Whether the network interface performs source/destination checking (Boolean).
     * 
     */
    public Optional<Boolean> sourceDestCheck() {
        return Optional.ofNullable(this.sourceDestCheck);
    }
    /**
     * @return VPC subnet ID.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return Map of tags assigned to the Instance.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Tenancy of the instance: `dedicated`, `default`, `host`.
     * 
     */
    public Optional<String> tenancy() {
        return Optional.ofNullable(this.tenancy);
    }
    /**
     * @return SHA-1 hash of User Data supplied to the Instance.
     * 
     */
    public Optional<String> userData() {
        return Optional.ofNullable(this.userData);
    }
    /**
     * @return Base64 encoded contents of User Data supplied to the Instance. This attribute is only exported if `get_user_data` is true.
     * 
     */
    public Optional<String> userDataBase64() {
        return Optional.ofNullable(this.userDataBase64);
    }
    /**
     * @return Associated security groups in a non-default VPC.
     * 
     */
    public List<String> vpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds == null ? List.of() : this.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ami;
        private @Nullable String arn;
        private @Nullable Boolean associatePublicIpAddress;
        private @Nullable String availabilityZone;
        private @Nullable List<GetInstanceCreditSpecification> creditSpecifications;
        private @Nullable Boolean disableApiStop;
        private @Nullable Boolean disableApiTermination;
        private @Nullable List<GetInstanceEbsBlockDevice> ebsBlockDevices;
        private @Nullable Boolean ebsOptimized;
        private @Nullable List<GetInstanceEnclaveOption> enclaveOptions;
        private @Nullable List<GetInstanceEphemeralBlockDevice> ephemeralBlockDevices;
        private @Nullable List<GetInstanceFilter> filters;
        private @Nullable Boolean getPasswordData;
        private @Nullable Boolean getUserData;
        private @Nullable String hostId;
        private @Nullable String hostResourceGroupArn;
        private @Nullable String iamInstanceProfile;
        private @Nullable String id;
        private @Nullable String instanceId;
        private @Nullable String instanceState;
        private @Nullable Map<String,String> instanceTags;
        private @Nullable String instanceType;
        private @Nullable List<String> ipv6Addresses;
        private @Nullable String keyName;
        private @Nullable List<GetInstanceMaintenanceOption> maintenanceOptions;
        private @Nullable List<GetInstanceMetadataOption> metadataOptions;
        private @Nullable Boolean monitoring;
        private @Nullable String networkInterfaceId;
        private @Nullable String outpostArn;
        private @Nullable String passwordData;
        private @Nullable String placementGroup;
        private @Nullable Integer placementPartitionNumber;
        private @Nullable String privateDns;
        private @Nullable List<GetInstancePrivateDnsNameOption> privateDnsNameOptions;
        private @Nullable String privateIp;
        private @Nullable String publicDns;
        private @Nullable String publicIp;
        private @Nullable List<GetInstanceRootBlockDevice> rootBlockDevices;
        private @Nullable List<String> secondaryPrivateIps;
        private @Nullable List<String> securityGroups;
        private @Nullable Boolean sourceDestCheck;
        private @Nullable String subnetId;
        private @Nullable Map<String,String> tags;
        private @Nullable String tenancy;
        private @Nullable String userData;
        private @Nullable String userDataBase64;
        private @Nullable List<String> vpcSecurityGroupIds;
        public Builder() {}
        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ami = defaults.ami;
    	      this.arn = defaults.arn;
    	      this.associatePublicIpAddress = defaults.associatePublicIpAddress;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.creditSpecifications = defaults.creditSpecifications;
    	      this.disableApiStop = defaults.disableApiStop;
    	      this.disableApiTermination = defaults.disableApiTermination;
    	      this.ebsBlockDevices = defaults.ebsBlockDevices;
    	      this.ebsOptimized = defaults.ebsOptimized;
    	      this.enclaveOptions = defaults.enclaveOptions;
    	      this.ephemeralBlockDevices = defaults.ephemeralBlockDevices;
    	      this.filters = defaults.filters;
    	      this.getPasswordData = defaults.getPasswordData;
    	      this.getUserData = defaults.getUserData;
    	      this.hostId = defaults.hostId;
    	      this.hostResourceGroupArn = defaults.hostResourceGroupArn;
    	      this.iamInstanceProfile = defaults.iamInstanceProfile;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceState = defaults.instanceState;
    	      this.instanceTags = defaults.instanceTags;
    	      this.instanceType = defaults.instanceType;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.keyName = defaults.keyName;
    	      this.maintenanceOptions = defaults.maintenanceOptions;
    	      this.metadataOptions = defaults.metadataOptions;
    	      this.monitoring = defaults.monitoring;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.outpostArn = defaults.outpostArn;
    	      this.passwordData = defaults.passwordData;
    	      this.placementGroup = defaults.placementGroup;
    	      this.placementPartitionNumber = defaults.placementPartitionNumber;
    	      this.privateDns = defaults.privateDns;
    	      this.privateDnsNameOptions = defaults.privateDnsNameOptions;
    	      this.privateIp = defaults.privateIp;
    	      this.publicDns = defaults.publicDns;
    	      this.publicIp = defaults.publicIp;
    	      this.rootBlockDevices = defaults.rootBlockDevices;
    	      this.secondaryPrivateIps = defaults.secondaryPrivateIps;
    	      this.securityGroups = defaults.securityGroups;
    	      this.sourceDestCheck = defaults.sourceDestCheck;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.tenancy = defaults.tenancy;
    	      this.userData = defaults.userData;
    	      this.userDataBase64 = defaults.userDataBase64;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        @CustomType.Setter
        public Builder ami(@Nullable String ami) {
            this.ami = ami;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder associatePublicIpAddress(@Nullable Boolean associatePublicIpAddress) {
            this.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder creditSpecifications(@Nullable List<GetInstanceCreditSpecification> creditSpecifications) {
            this.creditSpecifications = creditSpecifications;
            return this;
        }
        public Builder creditSpecifications(GetInstanceCreditSpecification... creditSpecifications) {
            return creditSpecifications(List.of(creditSpecifications));
        }
        @CustomType.Setter
        public Builder disableApiStop(@Nullable Boolean disableApiStop) {
            this.disableApiStop = disableApiStop;
            return this;
        }
        @CustomType.Setter
        public Builder disableApiTermination(@Nullable Boolean disableApiTermination) {
            this.disableApiTermination = disableApiTermination;
            return this;
        }
        @CustomType.Setter
        public Builder ebsBlockDevices(@Nullable List<GetInstanceEbsBlockDevice> ebsBlockDevices) {
            this.ebsBlockDevices = ebsBlockDevices;
            return this;
        }
        public Builder ebsBlockDevices(GetInstanceEbsBlockDevice... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }
        @CustomType.Setter
        public Builder ebsOptimized(@Nullable Boolean ebsOptimized) {
            this.ebsOptimized = ebsOptimized;
            return this;
        }
        @CustomType.Setter
        public Builder enclaveOptions(@Nullable List<GetInstanceEnclaveOption> enclaveOptions) {
            this.enclaveOptions = enclaveOptions;
            return this;
        }
        public Builder enclaveOptions(GetInstanceEnclaveOption... enclaveOptions) {
            return enclaveOptions(List.of(enclaveOptions));
        }
        @CustomType.Setter
        public Builder ephemeralBlockDevices(@Nullable List<GetInstanceEphemeralBlockDevice> ephemeralBlockDevices) {
            this.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }
        public Builder ephemeralBlockDevices(GetInstanceEphemeralBlockDevice... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInstanceFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInstanceFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder getPasswordData(@Nullable Boolean getPasswordData) {
            this.getPasswordData = getPasswordData;
            return this;
        }
        @CustomType.Setter
        public Builder getUserData(@Nullable Boolean getUserData) {
            this.getUserData = getUserData;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(@Nullable String hostId) {
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostResourceGroupArn(@Nullable String hostResourceGroupArn) {
            this.hostResourceGroupArn = hostResourceGroupArn;
            return this;
        }
        @CustomType.Setter
        public Builder iamInstanceProfile(@Nullable String iamInstanceProfile) {
            this.iamInstanceProfile = iamInstanceProfile;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceState(@Nullable String instanceState) {
            this.instanceState = instanceState;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTags(@Nullable Map<String,String> instanceTags) {
            this.instanceTags = instanceTags;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Addresses(@Nullable List<String> ipv6Addresses) {
            this.ipv6Addresses = ipv6Addresses;
            return this;
        }
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        @CustomType.Setter
        public Builder keyName(@Nullable String keyName) {
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceOptions(@Nullable List<GetInstanceMaintenanceOption> maintenanceOptions) {
            this.maintenanceOptions = maintenanceOptions;
            return this;
        }
        public Builder maintenanceOptions(GetInstanceMaintenanceOption... maintenanceOptions) {
            return maintenanceOptions(List.of(maintenanceOptions));
        }
        @CustomType.Setter
        public Builder metadataOptions(@Nullable List<GetInstanceMetadataOption> metadataOptions) {
            this.metadataOptions = metadataOptions;
            return this;
        }
        public Builder metadataOptions(GetInstanceMetadataOption... metadataOptions) {
            return metadataOptions(List.of(metadataOptions));
        }
        @CustomType.Setter
        public Builder monitoring(@Nullable Boolean monitoring) {
            this.monitoring = monitoring;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder outpostArn(@Nullable String outpostArn) {
            this.outpostArn = outpostArn;
            return this;
        }
        @CustomType.Setter
        public Builder passwordData(@Nullable String passwordData) {
            this.passwordData = passwordData;
            return this;
        }
        @CustomType.Setter
        public Builder placementGroup(@Nullable String placementGroup) {
            this.placementGroup = placementGroup;
            return this;
        }
        @CustomType.Setter
        public Builder placementPartitionNumber(@Nullable Integer placementPartitionNumber) {
            this.placementPartitionNumber = placementPartitionNumber;
            return this;
        }
        @CustomType.Setter
        public Builder privateDns(@Nullable String privateDns) {
            this.privateDns = privateDns;
            return this;
        }
        @CustomType.Setter
        public Builder privateDnsNameOptions(@Nullable List<GetInstancePrivateDnsNameOption> privateDnsNameOptions) {
            this.privateDnsNameOptions = privateDnsNameOptions;
            return this;
        }
        public Builder privateDnsNameOptions(GetInstancePrivateDnsNameOption... privateDnsNameOptions) {
            return privateDnsNameOptions(List.of(privateDnsNameOptions));
        }
        @CustomType.Setter
        public Builder privateIp(@Nullable String privateIp) {
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder publicDns(@Nullable String publicDns) {
            this.publicDns = publicDns;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(@Nullable String publicIp) {
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder rootBlockDevices(@Nullable List<GetInstanceRootBlockDevice> rootBlockDevices) {
            this.rootBlockDevices = rootBlockDevices;
            return this;
        }
        public Builder rootBlockDevices(GetInstanceRootBlockDevice... rootBlockDevices) {
            return rootBlockDevices(List.of(rootBlockDevices));
        }
        @CustomType.Setter
        public Builder secondaryPrivateIps(@Nullable List<String> secondaryPrivateIps) {
            this.secondaryPrivateIps = secondaryPrivateIps;
            return this;
        }
        public Builder secondaryPrivateIps(String... secondaryPrivateIps) {
            return secondaryPrivateIps(List.of(secondaryPrivateIps));
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder sourceDestCheck(@Nullable Boolean sourceDestCheck) {
            this.sourceDestCheck = sourceDestCheck;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tenancy(@Nullable String tenancy) {
            this.tenancy = tenancy;
            return this;
        }
        @CustomType.Setter
        public Builder userData(@Nullable String userData) {
            this.userData = userData;
            return this;
        }
        @CustomType.Setter
        public Builder userDataBase64(@Nullable String userDataBase64) {
            this.userDataBase64 = userDataBase64;
            return this;
        }
        @CustomType.Setter
        public Builder vpcSecurityGroupIds(@Nullable List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }
        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }
        public GetInstanceResult build() {
            final var o = new GetInstanceResult();
            o.ami = ami;
            o.arn = arn;
            o.associatePublicIpAddress = associatePublicIpAddress;
            o.availabilityZone = availabilityZone;
            o.creditSpecifications = creditSpecifications;
            o.disableApiStop = disableApiStop;
            o.disableApiTermination = disableApiTermination;
            o.ebsBlockDevices = ebsBlockDevices;
            o.ebsOptimized = ebsOptimized;
            o.enclaveOptions = enclaveOptions;
            o.ephemeralBlockDevices = ephemeralBlockDevices;
            o.filters = filters;
            o.getPasswordData = getPasswordData;
            o.getUserData = getUserData;
            o.hostId = hostId;
            o.hostResourceGroupArn = hostResourceGroupArn;
            o.iamInstanceProfile = iamInstanceProfile;
            o.id = id;
            o.instanceId = instanceId;
            o.instanceState = instanceState;
            o.instanceTags = instanceTags;
            o.instanceType = instanceType;
            o.ipv6Addresses = ipv6Addresses;
            o.keyName = keyName;
            o.maintenanceOptions = maintenanceOptions;
            o.metadataOptions = metadataOptions;
            o.monitoring = monitoring;
            o.networkInterfaceId = networkInterfaceId;
            o.outpostArn = outpostArn;
            o.passwordData = passwordData;
            o.placementGroup = placementGroup;
            o.placementPartitionNumber = placementPartitionNumber;
            o.privateDns = privateDns;
            o.privateDnsNameOptions = privateDnsNameOptions;
            o.privateIp = privateIp;
            o.publicDns = publicDns;
            o.publicIp = publicIp;
            o.rootBlockDevices = rootBlockDevices;
            o.secondaryPrivateIps = secondaryPrivateIps;
            o.securityGroups = securityGroups;
            o.sourceDestCheck = sourceDestCheck;
            o.subnetId = subnetId;
            o.tags = tags;
            o.tenancy = tenancy;
            o.userData = userData;
            o.userDataBase64 = userDataBase64;
            o.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return o;
        }
    }
}
