// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint.outputs;

import com.pulumi.aws.pinpoint.outputs.EmailTemplateEmailTemplateHeader;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EmailTemplateEmailTemplate {
    /**
     * @return JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
     * 
     */
    private @Nullable String defaultSubstitutions;
    private @Nullable String description;
    private @Nullable List<EmailTemplateEmailTemplateHeader> headers;
    /**
     * @return The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
     * 
     */
    private @Nullable String htmlPart;
    /**
     * @return The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
     * 
     */
    private @Nullable String recommenderId;
    /**
     * @return Subject line, or title, to use in email messages that are based on the message template.
     * 
     */
    private @Nullable String subject;
    /**
     * @return Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
     * 
     */
    private @Nullable String textPart;

    private EmailTemplateEmailTemplate() {}
    /**
     * @return JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
     * 
     */
    public Optional<String> defaultSubstitutions() {
        return Optional.ofNullable(this.defaultSubstitutions);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<EmailTemplateEmailTemplateHeader> headers() {
        return this.headers == null ? List.of() : this.headers;
    }
    /**
     * @return The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
     * 
     */
    public Optional<String> htmlPart() {
        return Optional.ofNullable(this.htmlPart);
    }
    /**
     * @return The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
     * 
     */
    public Optional<String> recommenderId() {
        return Optional.ofNullable(this.recommenderId);
    }
    /**
     * @return Subject line, or title, to use in email messages that are based on the message template.
     * 
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }
    /**
     * @return Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
     * 
     */
    public Optional<String> textPart() {
        return Optional.ofNullable(this.textPart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmailTemplateEmailTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultSubstitutions;
        private @Nullable String description;
        private @Nullable List<EmailTemplateEmailTemplateHeader> headers;
        private @Nullable String htmlPart;
        private @Nullable String recommenderId;
        private @Nullable String subject;
        private @Nullable String textPart;
        public Builder() {}
        public Builder(EmailTemplateEmailTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultSubstitutions = defaults.defaultSubstitutions;
    	      this.description = defaults.description;
    	      this.headers = defaults.headers;
    	      this.htmlPart = defaults.htmlPart;
    	      this.recommenderId = defaults.recommenderId;
    	      this.subject = defaults.subject;
    	      this.textPart = defaults.textPart;
        }

        @CustomType.Setter
        public Builder defaultSubstitutions(@Nullable String defaultSubstitutions) {

            this.defaultSubstitutions = defaultSubstitutions;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder headers(@Nullable List<EmailTemplateEmailTemplateHeader> headers) {

            this.headers = headers;
            return this;
        }
        public Builder headers(EmailTemplateEmailTemplateHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder htmlPart(@Nullable String htmlPart) {

            this.htmlPart = htmlPart;
            return this;
        }
        @CustomType.Setter
        public Builder recommenderId(@Nullable String recommenderId) {

            this.recommenderId = recommenderId;
            return this;
        }
        @CustomType.Setter
        public Builder subject(@Nullable String subject) {

            this.subject = subject;
            return this;
        }
        @CustomType.Setter
        public Builder textPart(@Nullable String textPart) {

            this.textPart = textPart;
            return this;
        }
        public EmailTemplateEmailTemplate build() {
            final var _resultValue = new EmailTemplateEmailTemplate();
            _resultValue.defaultSubstitutions = defaultSubstitutions;
            _resultValue.description = description;
            _resultValue.headers = headers;
            _resultValue.htmlPart = htmlPart;
            _resultValue.recommenderId = recommenderId;
            _resultValue.subject = subject;
            _resultValue.textPart = textPart;
            return _resultValue;
        }
    }
}
