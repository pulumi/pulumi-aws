// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MulticastDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final MulticastDomainArgs Empty = new MulticastDomainArgs();

    @Import(name="autoAcceptSharedAssociations")
    private @Nullable Output<String> autoAcceptSharedAssociations;

    public Optional<Output<String>> autoAcceptSharedAssociations() {
        return Optional.ofNullable(this.autoAcceptSharedAssociations);
    }

    @Import(name="igmpv2Support")
    private @Nullable Output<String> igmpv2Support;

    public Optional<Output<String>> igmpv2Support() {
        return Optional.ofNullable(this.igmpv2Support);
    }

    @Import(name="staticSourcesSupport")
    private @Nullable Output<String> staticSourcesSupport;

    public Optional<Output<String>> staticSourcesSupport() {
        return Optional.ofNullable(this.staticSourcesSupport);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="transitGatewayId", required=true)
    private Output<String> transitGatewayId;

    public Output<String> transitGatewayId() {
        return this.transitGatewayId;
    }

    private MulticastDomainArgs() {}

    private MulticastDomainArgs(MulticastDomainArgs $) {
        this.autoAcceptSharedAssociations = $.autoAcceptSharedAssociations;
        this.igmpv2Support = $.igmpv2Support;
        this.staticSourcesSupport = $.staticSourcesSupport;
        this.tags = $.tags;
        this.transitGatewayId = $.transitGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MulticastDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MulticastDomainArgs $;

        public Builder() {
            $ = new MulticastDomainArgs();
        }

        public Builder(MulticastDomainArgs defaults) {
            $ = new MulticastDomainArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoAcceptSharedAssociations(@Nullable Output<String> autoAcceptSharedAssociations) {
            $.autoAcceptSharedAssociations = autoAcceptSharedAssociations;
            return this;
        }

        public Builder autoAcceptSharedAssociations(String autoAcceptSharedAssociations) {
            return autoAcceptSharedAssociations(Output.of(autoAcceptSharedAssociations));
        }

        public Builder igmpv2Support(@Nullable Output<String> igmpv2Support) {
            $.igmpv2Support = igmpv2Support;
            return this;
        }

        public Builder igmpv2Support(String igmpv2Support) {
            return igmpv2Support(Output.of(igmpv2Support));
        }

        public Builder staticSourcesSupport(@Nullable Output<String> staticSourcesSupport) {
            $.staticSourcesSupport = staticSourcesSupport;
            return this;
        }

        public Builder staticSourcesSupport(String staticSourcesSupport) {
            return staticSourcesSupport(Output.of(staticSourcesSupport));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder transitGatewayId(Output<String> transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            return transitGatewayId(Output.of(transitGatewayId));
        }

        public MulticastDomainArgs build() {
            $.transitGatewayId = Objects.requireNonNull($.transitGatewayId, "expected parameter 'transitGatewayId' to be non-null");
            return $;
        }
    }

}
