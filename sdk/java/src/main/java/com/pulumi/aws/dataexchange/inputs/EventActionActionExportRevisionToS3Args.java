// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange.inputs;

import com.pulumi.aws.dataexchange.inputs.EventActionActionExportRevisionToS3EncryptionArgs;
import com.pulumi.aws.dataexchange.inputs.EventActionActionExportRevisionToS3RevisionDestinationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventActionActionExportRevisionToS3Args extends com.pulumi.resources.ResourceArgs {

    public static final EventActionActionExportRevisionToS3Args Empty = new EventActionActionExportRevisionToS3Args();

    /**
     * Configures server-side encryption of the exported revision.
     * Described in `encryption` Configuration Block below.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<EventActionActionExportRevisionToS3EncryptionArgs> encryption;

    /**
     * @return Configures server-side encryption of the exported revision.
     * Described in `encryption` Configuration Block below.
     * 
     */
    public Optional<Output<EventActionActionExportRevisionToS3EncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * Configures the S3 destination of the exported revision.
     * Described in `revision_destination` Configuration Block below.
     * 
     */
    @Import(name="revisionDestination")
    private @Nullable Output<EventActionActionExportRevisionToS3RevisionDestinationArgs> revisionDestination;

    /**
     * @return Configures the S3 destination of the exported revision.
     * Described in `revision_destination` Configuration Block below.
     * 
     */
    public Optional<Output<EventActionActionExportRevisionToS3RevisionDestinationArgs>> revisionDestination() {
        return Optional.ofNullable(this.revisionDestination);
    }

    private EventActionActionExportRevisionToS3Args() {}

    private EventActionActionExportRevisionToS3Args(EventActionActionExportRevisionToS3Args $) {
        this.encryption = $.encryption;
        this.revisionDestination = $.revisionDestination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventActionActionExportRevisionToS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventActionActionExportRevisionToS3Args $;

        public Builder() {
            $ = new EventActionActionExportRevisionToS3Args();
        }

        public Builder(EventActionActionExportRevisionToS3Args defaults) {
            $ = new EventActionActionExportRevisionToS3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryption Configures server-side encryption of the exported revision.
         * Described in `encryption` Configuration Block below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(@Nullable Output<EventActionActionExportRevisionToS3EncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param encryption Configures server-side encryption of the exported revision.
         * Described in `encryption` Configuration Block below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(EventActionActionExportRevisionToS3EncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        /**
         * @param revisionDestination Configures the S3 destination of the exported revision.
         * Described in `revision_destination` Configuration Block below.
         * 
         * @return builder
         * 
         */
        public Builder revisionDestination(@Nullable Output<EventActionActionExportRevisionToS3RevisionDestinationArgs> revisionDestination) {
            $.revisionDestination = revisionDestination;
            return this;
        }

        /**
         * @param revisionDestination Configures the S3 destination of the exported revision.
         * Described in `revision_destination` Configuration Block below.
         * 
         * @return builder
         * 
         */
        public Builder revisionDestination(EventActionActionExportRevisionToS3RevisionDestinationArgs revisionDestination) {
            return revisionDestination(Output.of(revisionDestination));
        }

        public EventActionActionExportRevisionToS3Args build() {
            return $;
        }
    }

}
