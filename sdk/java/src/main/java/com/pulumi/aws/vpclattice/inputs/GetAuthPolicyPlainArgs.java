// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuthPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthPolicyPlainArgs Empty = new GetAuthPolicyPlainArgs();

    /**
     * The auth policy. The policy string in JSON must not contain newlines or blank lines.
     * 
     */
    @Import(name="policy")
    private @Nullable String policy;

    /**
     * @return The auth policy. The policy string in JSON must not contain newlines or blank lines.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
     * 
     */
    @Import(name="resourceIdentifier", required=true)
    private String resourceIdentifier;

    /**
     * @return The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
     * 
     */
    public String resourceIdentifier() {
        return this.resourceIdentifier;
    }

    /**
     * The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client&#39;s IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client&#39;s IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAuthPolicyPlainArgs() {}

    private GetAuthPolicyPlainArgs(GetAuthPolicyPlainArgs $) {
        this.policy = $.policy;
        this.resourceIdentifier = $.resourceIdentifier;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthPolicyPlainArgs $;

        public Builder() {
            $ = new GetAuthPolicyPlainArgs();
        }

        public Builder(GetAuthPolicyPlainArgs defaults) {
            $ = new GetAuthPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy The auth policy. The policy string in JSON must not contain newlines or blank lines.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable String policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param resourceIdentifier The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
         * 
         * @return builder
         * 
         */
        public Builder resourceIdentifier(String resourceIdentifier) {
            $.resourceIdentifier = resourceIdentifier;
            return this;
        }

        /**
         * @param state The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client&#39;s IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAuthPolicyPlainArgs build() {
            if ($.resourceIdentifier == null) {
                throw new MissingRequiredPropertyException("GetAuthPolicyPlainArgs", "resourceIdentifier");
            }
            return $;
        }
    }

}
