// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outposts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOutpostsResult {
    /**
     * @return Set of Amazon Resource Names (ARNs).
     * 
     */
    private List<String> arns;
    private String availabilityZone;
    private String availabilityZoneId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Set of identifiers.
     * 
     */
    private List<String> ids;
    private String ownerId;
    private String siteId;

    private GetOutpostsResult() {}
    /**
     * @return Set of Amazon Resource Names (ARNs).
     * 
     */
    public List<String> arns() {
        return this.arns;
    }
    public String availabilityZone() {
        return this.availabilityZone;
    }
    public String availabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set of identifiers.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public String ownerId() {
        return this.ownerId;
    }
    public String siteId() {
        return this.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOutpostsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> arns;
        private String availabilityZone;
        private String availabilityZoneId;
        private String id;
        private List<String> ids;
        private String ownerId;
        private String siteId;
        public Builder() {}
        public Builder(GetOutpostsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arns = defaults.arns;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ownerId = defaults.ownerId;
    	      this.siteId = defaults.siteId;
        }

        @CustomType.Setter
        public Builder arns(List<String> arns) {
            if (arns == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "arns");
            }
            this.arns = arns;
            return this;
        }
        public Builder arns(String... arns) {
            return arns(List.of(arns));
        }
        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(String availabilityZoneId) {
            if (availabilityZoneId == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "availabilityZoneId");
            }
            this.availabilityZoneId = availabilityZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            if (ownerId == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "ownerId");
            }
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetOutpostsResult", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        public GetOutpostsResult build() {
            final var _resultValue = new GetOutpostsResult();
            _resultValue.arns = arns;
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.availabilityZoneId = availabilityZoneId;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.ownerId = ownerId;
            _resultValue.siteId = siteId;
            return _resultValue;
        }
    }
}
