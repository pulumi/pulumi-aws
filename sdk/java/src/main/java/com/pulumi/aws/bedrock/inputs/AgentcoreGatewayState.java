// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayAuthorizerConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayProtocolConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTimeoutsArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayWorkloadIdentityDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreGatewayState Empty = new AgentcoreGatewayState();

    /**
     * Configuration for request authorization. See `authorizerConfiguration` below.
     * 
     */
    @Import(name="authorizerConfiguration")
    private @Nullable Output<AgentcoreGatewayAuthorizerConfigurationArgs> authorizerConfiguration;

    /**
     * @return Configuration for request authorization. See `authorizerConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreGatewayAuthorizerConfigurationArgs>> authorizerConfiguration() {
        return Optional.ofNullable(this.authorizerConfiguration);
    }

    /**
     * Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
     * 
     */
    @Import(name="authorizerType")
    private @Nullable Output<String> authorizerType;

    /**
     * @return Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
     * 
     */
    public Optional<Output<String>> authorizerType() {
        return Optional.ofNullable(this.authorizerType);
    }

    /**
     * Description of the gateway.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the gateway.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
     * 
     */
    @Import(name="exceptionLevel")
    private @Nullable Output<String> exceptionLevel;

    /**
     * @return Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
     * 
     */
    public Optional<Output<String>> exceptionLevel() {
        return Optional.ofNullable(this.exceptionLevel);
    }

    /**
     * ARN of the Gateway.
     * 
     */
    @Import(name="gatewayArn")
    private @Nullable Output<String> gatewayArn;

    /**
     * @return ARN of the Gateway.
     * 
     */
    public Optional<Output<String>> gatewayArn() {
        return Optional.ofNullable(this.gatewayArn);
    }

    /**
     * Unique identifier of the Gateway.
     * 
     */
    @Import(name="gatewayId")
    private @Nullable Output<String> gatewayId;

    /**
     * @return Unique identifier of the Gateway.
     * 
     */
    public Optional<Output<String>> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    /**
     * URL endpoint for the gateway.
     * 
     */
    @Import(name="gatewayUrl")
    private @Nullable Output<String> gatewayUrl;

    /**
     * @return URL endpoint for the gateway.
     * 
     */
    public Optional<Output<String>> gatewayUrl() {
        return Optional.ofNullable(this.gatewayUrl);
    }

    /**
     * ARN of the KMS key used to encrypt the gateway data.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    /**
     * @return ARN of the KMS key used to encrypt the gateway data.
     * 
     */
    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    /**
     * Name of the gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the gateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
     * 
     */
    @Import(name="protocolConfiguration")
    private @Nullable Output<AgentcoreGatewayProtocolConfigurationArgs> protocolConfiguration;

    /**
     * @return Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreGatewayProtocolConfigurationArgs>> protocolConfiguration() {
        return Optional.ofNullable(this.protocolConfiguration);
    }

    /**
     * Protocol type for the gateway. Valid values: `MCP`.
     * 
     */
    @Import(name="protocolType")
    private @Nullable Output<String> protocolType;

    /**
     * @return Protocol type for the gateway. Valid values: `MCP`.
     * 
     */
    public Optional<Output<String>> protocolType() {
        return Optional.ofNullable(this.protocolType);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * ARN of the IAM role that the gateway assumes to access AWS services.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return ARN of the IAM role that the gateway assumes to access AWS services.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentcoreGatewayTimeoutsArgs> timeouts;

    public Optional<Output<AgentcoreGatewayTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Workload identity details for the gateway. See `workloadIdentityDetails` below.
     * 
     */
    @Import(name="workloadIdentityDetails")
    private @Nullable Output<List<AgentcoreGatewayWorkloadIdentityDetailArgs>> workloadIdentityDetails;

    /**
     * @return Workload identity details for the gateway. See `workloadIdentityDetails` below.
     * 
     */
    public Optional<Output<List<AgentcoreGatewayWorkloadIdentityDetailArgs>>> workloadIdentityDetails() {
        return Optional.ofNullable(this.workloadIdentityDetails);
    }

    private AgentcoreGatewayState() {}

    private AgentcoreGatewayState(AgentcoreGatewayState $) {
        this.authorizerConfiguration = $.authorizerConfiguration;
        this.authorizerType = $.authorizerType;
        this.description = $.description;
        this.exceptionLevel = $.exceptionLevel;
        this.gatewayArn = $.gatewayArn;
        this.gatewayId = $.gatewayId;
        this.gatewayUrl = $.gatewayUrl;
        this.kmsKeyArn = $.kmsKeyArn;
        this.name = $.name;
        this.protocolConfiguration = $.protocolConfiguration;
        this.protocolType = $.protocolType;
        this.region = $.region;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.workloadIdentityDetails = $.workloadIdentityDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreGatewayState $;

        public Builder() {
            $ = new AgentcoreGatewayState();
        }

        public Builder(AgentcoreGatewayState defaults) {
            $ = new AgentcoreGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizerConfiguration Configuration for request authorization. See `authorizerConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder authorizerConfiguration(@Nullable Output<AgentcoreGatewayAuthorizerConfigurationArgs> authorizerConfiguration) {
            $.authorizerConfiguration = authorizerConfiguration;
            return this;
        }

        /**
         * @param authorizerConfiguration Configuration for request authorization. See `authorizerConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder authorizerConfiguration(AgentcoreGatewayAuthorizerConfigurationArgs authorizerConfiguration) {
            return authorizerConfiguration(Output.of(authorizerConfiguration));
        }

        /**
         * @param authorizerType Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
         * 
         * @return builder
         * 
         */
        public Builder authorizerType(@Nullable Output<String> authorizerType) {
            $.authorizerType = authorizerType;
            return this;
        }

        /**
         * @param authorizerType Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
         * 
         * @return builder
         * 
         */
        public Builder authorizerType(String authorizerType) {
            return authorizerType(Output.of(authorizerType));
        }

        /**
         * @param description Description of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param exceptionLevel Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
         * 
         * @return builder
         * 
         */
        public Builder exceptionLevel(@Nullable Output<String> exceptionLevel) {
            $.exceptionLevel = exceptionLevel;
            return this;
        }

        /**
         * @param exceptionLevel Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
         * 
         * @return builder
         * 
         */
        public Builder exceptionLevel(String exceptionLevel) {
            return exceptionLevel(Output.of(exceptionLevel));
        }

        /**
         * @param gatewayArn ARN of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayArn(@Nullable Output<String> gatewayArn) {
            $.gatewayArn = gatewayArn;
            return this;
        }

        /**
         * @param gatewayArn ARN of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayArn(String gatewayArn) {
            return gatewayArn(Output.of(gatewayArn));
        }

        /**
         * @param gatewayId Unique identifier of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(@Nullable Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId Unique identifier of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        /**
         * @param gatewayUrl URL endpoint for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayUrl(@Nullable Output<String> gatewayUrl) {
            $.gatewayUrl = gatewayUrl;
            return this;
        }

        /**
         * @param gatewayUrl URL endpoint for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayUrl(String gatewayUrl) {
            return gatewayUrl(Output.of(gatewayUrl));
        }

        /**
         * @param kmsKeyArn ARN of the KMS key used to encrypt the gateway data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        /**
         * @param kmsKeyArn ARN of the KMS key used to encrypt the gateway data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        /**
         * @param name Name of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocolConfiguration Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder protocolConfiguration(@Nullable Output<AgentcoreGatewayProtocolConfigurationArgs> protocolConfiguration) {
            $.protocolConfiguration = protocolConfiguration;
            return this;
        }

        /**
         * @param protocolConfiguration Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder protocolConfiguration(AgentcoreGatewayProtocolConfigurationArgs protocolConfiguration) {
            return protocolConfiguration(Output.of(protocolConfiguration));
        }

        /**
         * @param protocolType Protocol type for the gateway. Valid values: `MCP`.
         * 
         * @return builder
         * 
         */
        public Builder protocolType(@Nullable Output<String> protocolType) {
            $.protocolType = protocolType;
            return this;
        }

        /**
         * @param protocolType Protocol type for the gateway. Valid values: `MCP`.
         * 
         * @return builder
         * 
         */
        public Builder protocolType(String protocolType) {
            return protocolType(Output.of(protocolType));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param roleArn ARN of the IAM role that the gateway assumes to access AWS services.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn ARN of the IAM role that the gateway assumes to access AWS services.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<AgentcoreGatewayTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentcoreGatewayTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the gateway. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(@Nullable Output<List<AgentcoreGatewayWorkloadIdentityDetailArgs>> workloadIdentityDetails) {
            $.workloadIdentityDetails = workloadIdentityDetails;
            return this;
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the gateway. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(List<AgentcoreGatewayWorkloadIdentityDetailArgs> workloadIdentityDetails) {
            return workloadIdentityDetails(Output.of(workloadIdentityDetails));
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the gateway. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(AgentcoreGatewayWorkloadIdentityDetailArgs... workloadIdentityDetails) {
            return workloadIdentityDetails(List.of(workloadIdentityDetails));
        }

        public AgentcoreGatewayState build() {
            return $;
        }
    }

}
