// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LifecyclePolicyResourceSelectionRecipeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyResourceSelectionRecipeArgs Empty = new LifecyclePolicyResourceSelectionRecipeArgs();

    /**
     * The name of an Image Builder recipe that the lifecycle policy uses for resource selection.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of an Image Builder recipe that the lifecycle policy uses for resource selection.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The version of the Image Builder recipe specified by the name field.
     * 
     */
    @Import(name="semanticVersion", required=true)
    private Output<String> semanticVersion;

    /**
     * @return The version of the Image Builder recipe specified by the name field.
     * 
     */
    public Output<String> semanticVersion() {
        return this.semanticVersion;
    }

    private LifecyclePolicyResourceSelectionRecipeArgs() {}

    private LifecyclePolicyResourceSelectionRecipeArgs(LifecyclePolicyResourceSelectionRecipeArgs $) {
        this.name = $.name;
        this.semanticVersion = $.semanticVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyResourceSelectionRecipeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyResourceSelectionRecipeArgs $;

        public Builder() {
            $ = new LifecyclePolicyResourceSelectionRecipeArgs();
        }

        public Builder(LifecyclePolicyResourceSelectionRecipeArgs defaults) {
            $ = new LifecyclePolicyResourceSelectionRecipeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of an Image Builder recipe that the lifecycle policy uses for resource selection.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of an Image Builder recipe that the lifecycle policy uses for resource selection.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param semanticVersion The version of the Image Builder recipe specified by the name field.
         * 
         * @return builder
         * 
         */
        public Builder semanticVersion(Output<String> semanticVersion) {
            $.semanticVersion = semanticVersion;
            return this;
        }

        /**
         * @param semanticVersion The version of the Image Builder recipe specified by the name field.
         * 
         * @return builder
         * 
         */
        public Builder semanticVersion(String semanticVersion) {
            return semanticVersion(Output.of(semanticVersion));
        }

        public LifecyclePolicyResourceSelectionRecipeArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyResourceSelectionRecipeArgs", "name");
            }
            if ($.semanticVersion == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyResourceSelectionRecipeArgs", "semanticVersion");
            }
            return $;
        }
    }

}
