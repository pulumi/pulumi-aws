// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cfg.RemediationConfigurationArgs;
import com.pulumi.aws.cfg.inputs.RemediationConfigurationState;
import com.pulumi.aws.cfg.outputs.RemediationConfigurationExecutionControls;
import com.pulumi.aws.cfg.outputs.RemediationConfigurationParameter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:cfg/remediationConfiguration:RemediationConfiguration")
public class RemediationConfiguration extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="automatic", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automatic;

    public Output<Optional<Boolean>> automatic() {
        return Codegen.optional(this.automatic);
    }
    @Export(name="configRuleName", refs={String.class}, tree="[0]")
    private Output<String> configRuleName;

    public Output<String> configRuleName() {
        return this.configRuleName;
    }
    @Export(name="executionControls", refs={RemediationConfigurationExecutionControls.class}, tree="[0]")
    private Output</* @Nullable */ RemediationConfigurationExecutionControls> executionControls;

    public Output<Optional<RemediationConfigurationExecutionControls>> executionControls() {
        return Codegen.optional(this.executionControls);
    }
    @Export(name="maximumAutomaticAttempts", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maximumAutomaticAttempts;

    public Output<Optional<Integer>> maximumAutomaticAttempts() {
        return Codegen.optional(this.maximumAutomaticAttempts);
    }
    @Export(name="parameters", refs={List.class,RemediationConfigurationParameter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RemediationConfigurationParameter>> parameters;

    public Output<Optional<List<RemediationConfigurationParameter>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceType;

    public Output<Optional<String>> resourceType() {
        return Codegen.optional(this.resourceType);
    }
    @Export(name="retryAttemptSeconds", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retryAttemptSeconds;

    public Output<Optional<Integer>> retryAttemptSeconds() {
        return Codegen.optional(this.retryAttemptSeconds);
    }
    @Export(name="targetId", refs={String.class}, tree="[0]")
    private Output<String> targetId;

    public Output<String> targetId() {
        return this.targetId;
    }
    @Export(name="targetType", refs={String.class}, tree="[0]")
    private Output<String> targetType;

    public Output<String> targetType() {
        return this.targetType;
    }
    @Export(name="targetVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetVersion;

    public Output<Optional<String>> targetVersion() {
        return Codegen.optional(this.targetVersion);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RemediationConfiguration(String name) {
        this(name, RemediationConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RemediationConfiguration(String name, RemediationConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RemediationConfiguration(String name, RemediationConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/remediationConfiguration:RemediationConfiguration", name, args == null ? RemediationConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RemediationConfiguration(String name, Output<String> id, @Nullable RemediationConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/remediationConfiguration:RemediationConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RemediationConfiguration get(String name, Output<String> id, @Nullable RemediationConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RemediationConfiguration(name, id, state, options);
    }
}
