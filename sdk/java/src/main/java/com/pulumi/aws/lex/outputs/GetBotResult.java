// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBotResult {
    /**
     * @return ARN of the bot.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Checksum of the bot used to identify a specific revision of the bot&#39;s `$LATEST` version.
     * 
     */
    private @Nullable String checksum;
    /**
     * @return If this Amazon Lex Bot is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.
     * 
     */
    private @Nullable Boolean childDirected;
    /**
     * @return Date that the bot was created.
     * 
     */
    private @Nullable String createdDate;
    /**
     * @return Description of the bot.
     * 
     */
    private @Nullable String description;
    /**
     * @return When set to true user utterances are sent to Amazon Comprehend for sentiment analysis.
     * 
     */
    private @Nullable Boolean detectSentiment;
    /**
     * @return Set to true if natural language understanding improvements are enabled.
     * 
     */
    private @Nullable Boolean enableModelImprovements;
    /**
     * @return If the `status` is `FAILED`, the reason why the bot failed to build.
     * 
     */
    private @Nullable String failureReason;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
     * 
     */
    private @Nullable Integer idleSessionTtlInSeconds;
    /**
     * @return Date that the bot was updated.
     * 
     */
    private @Nullable String lastUpdatedDate;
    /**
     * @return Target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot.
     * 
     */
    private @Nullable String locale;
    /**
     * @return Name of the bot, case sensitive.
     * 
     */
    private String name;
    /**
     * @return The threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.
     * 
     */
    private @Nullable Double nluIntentConfidenceThreshold;
    /**
     * @return Status of the bot.
     * 
     */
    private @Nullable String status;
    /**
     * @return Version of the bot. For a new bot, the version is always `$LATEST`.
     * 
     */
    private @Nullable String version;
    /**
     * @return Amazon Polly voice ID that the Amazon Lex Bot uses for voice interactions with the user.
     * 
     */
    private @Nullable String voiceId;

    private GetBotResult() {}
    /**
     * @return ARN of the bot.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Checksum of the bot used to identify a specific revision of the bot&#39;s `$LATEST` version.
     * 
     */
    public Optional<String> checksum() {
        return Optional.ofNullable(this.checksum);
    }
    /**
     * @return If this Amazon Lex Bot is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.
     * 
     */
    public Optional<Boolean> childDirected() {
        return Optional.ofNullable(this.childDirected);
    }
    /**
     * @return Date that the bot was created.
     * 
     */
    public Optional<String> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }
    /**
     * @return Description of the bot.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return When set to true user utterances are sent to Amazon Comprehend for sentiment analysis.
     * 
     */
    public Optional<Boolean> detectSentiment() {
        return Optional.ofNullable(this.detectSentiment);
    }
    /**
     * @return Set to true if natural language understanding improvements are enabled.
     * 
     */
    public Optional<Boolean> enableModelImprovements() {
        return Optional.ofNullable(this.enableModelImprovements);
    }
    /**
     * @return If the `status` is `FAILED`, the reason why the bot failed to build.
     * 
     */
    public Optional<String> failureReason() {
        return Optional.ofNullable(this.failureReason);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
     * 
     */
    public Optional<Integer> idleSessionTtlInSeconds() {
        return Optional.ofNullable(this.idleSessionTtlInSeconds);
    }
    /**
     * @return Date that the bot was updated.
     * 
     */
    public Optional<String> lastUpdatedDate() {
        return Optional.ofNullable(this.lastUpdatedDate);
    }
    /**
     * @return Target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot.
     * 
     */
    public Optional<String> locale() {
        return Optional.ofNullable(this.locale);
    }
    /**
     * @return Name of the bot, case sensitive.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.
     * 
     */
    public Optional<Double> nluIntentConfidenceThreshold() {
        return Optional.ofNullable(this.nluIntentConfidenceThreshold);
    }
    /**
     * @return Status of the bot.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Version of the bot. For a new bot, the version is always `$LATEST`.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return Amazon Polly voice ID that the Amazon Lex Bot uses for voice interactions with the user.
     * 
     */
    public Optional<String> voiceId() {
        return Optional.ofNullable(this.voiceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String checksum;
        private @Nullable Boolean childDirected;
        private @Nullable String createdDate;
        private @Nullable String description;
        private @Nullable Boolean detectSentiment;
        private @Nullable Boolean enableModelImprovements;
        private @Nullable String failureReason;
        private @Nullable String id;
        private @Nullable Integer idleSessionTtlInSeconds;
        private @Nullable String lastUpdatedDate;
        private @Nullable String locale;
        private String name;
        private @Nullable Double nluIntentConfidenceThreshold;
        private @Nullable String status;
        private @Nullable String version;
        private @Nullable String voiceId;
        public Builder() {}
        public Builder(GetBotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.checksum = defaults.checksum;
    	      this.childDirected = defaults.childDirected;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.detectSentiment = defaults.detectSentiment;
    	      this.enableModelImprovements = defaults.enableModelImprovements;
    	      this.failureReason = defaults.failureReason;
    	      this.id = defaults.id;
    	      this.idleSessionTtlInSeconds = defaults.idleSessionTtlInSeconds;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.locale = defaults.locale;
    	      this.name = defaults.name;
    	      this.nluIntentConfidenceThreshold = defaults.nluIntentConfidenceThreshold;
    	      this.status = defaults.status;
    	      this.version = defaults.version;
    	      this.voiceId = defaults.voiceId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder checksum(@Nullable String checksum) {
            this.checksum = checksum;
            return this;
        }
        @CustomType.Setter
        public Builder childDirected(@Nullable Boolean childDirected) {
            this.childDirected = childDirected;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(@Nullable String createdDate) {
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder detectSentiment(@Nullable Boolean detectSentiment) {
            this.detectSentiment = detectSentiment;
            return this;
        }
        @CustomType.Setter
        public Builder enableModelImprovements(@Nullable Boolean enableModelImprovements) {
            this.enableModelImprovements = enableModelImprovements;
            return this;
        }
        @CustomType.Setter
        public Builder failureReason(@Nullable String failureReason) {
            this.failureReason = failureReason;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleSessionTtlInSeconds(@Nullable Integer idleSessionTtlInSeconds) {
            this.idleSessionTtlInSeconds = idleSessionTtlInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedDate(@Nullable String lastUpdatedDate) {
            this.lastUpdatedDate = lastUpdatedDate;
            return this;
        }
        @CustomType.Setter
        public Builder locale(@Nullable String locale) {
            this.locale = locale;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nluIntentConfidenceThreshold(@Nullable Double nluIntentConfidenceThreshold) {
            this.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder voiceId(@Nullable String voiceId) {
            this.voiceId = voiceId;
            return this;
        }
        public GetBotResult build() {
            final var o = new GetBotResult();
            o.arn = arn;
            o.checksum = checksum;
            o.childDirected = childDirected;
            o.createdDate = createdDate;
            o.description = description;
            o.detectSentiment = detectSentiment;
            o.enableModelImprovements = enableModelImprovements;
            o.failureReason = failureReason;
            o.id = id;
            o.idleSessionTtlInSeconds = idleSessionTtlInSeconds;
            o.lastUpdatedDate = lastUpdatedDate;
            o.locale = locale;
            o.name = name;
            o.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
            o.status = status;
            o.version = version;
            o.voiceId = voiceId;
            return o;
        }
    }
}
