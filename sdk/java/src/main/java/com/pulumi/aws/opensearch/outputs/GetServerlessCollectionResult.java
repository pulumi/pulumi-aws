// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServerlessCollectionResult {
    /**
     * @return Amazon Resource Name (ARN) of the collection.
     * 
     */
    private String arn;
    /**
     * @return Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
     * 
     */
    private String collectionEndpoint;
    /**
     * @return Date the Collection was created.
     * 
     */
    private String createdDate;
    /**
     * @return Collection-specific endpoint used to access OpenSearch Dashboards.
     * 
     */
    private String dashboardEndpoint;
    /**
     * @return Description of the collection.
     * 
     */
    private String description;
    private String id;
    /**
     * @return The ARN of the Amazon Web Services KMS key used to encrypt the collection.
     * 
     */
    private String kmsKeyArn;
    /**
     * @return Date the Collection was last modified.
     * 
     */
    private String lastModifiedDate;
    private String name;
    /**
     * @return A map of tags to assign to the collection.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Type of collection.
     * 
     */
    private String type;

    private GetServerlessCollectionResult() {}
    /**
     * @return Amazon Resource Name (ARN) of the collection.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
     * 
     */
    public String collectionEndpoint() {
        return this.collectionEndpoint;
    }
    /**
     * @return Date the Collection was created.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return Collection-specific endpoint used to access OpenSearch Dashboards.
     * 
     */
    public String dashboardEndpoint() {
        return this.dashboardEndpoint;
    }
    /**
     * @return Description of the collection.
     * 
     */
    public String description() {
        return this.description;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The ARN of the Amazon Web Services KMS key used to encrypt the collection.
     * 
     */
    public String kmsKeyArn() {
        return this.kmsKeyArn;
    }
    /**
     * @return Date the Collection was last modified.
     * 
     */
    public String lastModifiedDate() {
        return this.lastModifiedDate;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A map of tags to assign to the collection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Type of collection.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerlessCollectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String collectionEndpoint;
        private String createdDate;
        private String dashboardEndpoint;
        private String description;
        private String id;
        private String kmsKeyArn;
        private String lastModifiedDate;
        private String name;
        private Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetServerlessCollectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.collectionEndpoint = defaults.collectionEndpoint;
    	      this.createdDate = defaults.createdDate;
    	      this.dashboardEndpoint = defaults.dashboardEndpoint;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder collectionEndpoint(String collectionEndpoint) {
            this.collectionEndpoint = Objects.requireNonNull(collectionEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder dashboardEndpoint(String dashboardEndpoint) {
            this.dashboardEndpoint = Objects.requireNonNull(dashboardEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyArn(String kmsKeyArn) {
            this.kmsKeyArn = Objects.requireNonNull(kmsKeyArn);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedDate(String lastModifiedDate) {
            this.lastModifiedDate = Objects.requireNonNull(lastModifiedDate);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetServerlessCollectionResult build() {
            final var o = new GetServerlessCollectionResult();
            o.arn = arn;
            o.collectionEndpoint = collectionEndpoint;
            o.createdDate = createdDate;
            o.dashboardEndpoint = dashboardEndpoint;
            o.description = description;
            o.id = id;
            o.kmsKeyArn = kmsKeyArn;
            o.lastModifiedDate = lastModifiedDate;
            o.name = name;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
