// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs Empty = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs();

    /**
     * The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     * 
     */
    @Import(name="amplitude")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs> amplitude;

    /**
     * @return The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs>> amplitude() {
        return Optional.ofNullable(this.amplitude);
    }

    /**
     * The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
     * 
     */
    @Import(name="customConnector")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs> customConnector;

    /**
     * @return The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs>> customConnector() {
        return Optional.ofNullable(this.customConnector);
    }

    /**
     * Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
     * 
     */
    @Import(name="datadog")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs> datadog;

    /**
     * @return Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs>> datadog() {
        return Optional.ofNullable(this.datadog);
    }

    /**
     * The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
     * 
     */
    @Import(name="dynatrace")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs> dynatrace;

    /**
     * @return The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs>> dynatrace() {
        return Optional.ofNullable(this.dynatrace);
    }

    /**
     * The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     * 
     */
    @Import(name="googleAnalytics")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs> googleAnalytics;

    /**
     * @return The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs>> googleAnalytics() {
        return Optional.ofNullable(this.googleAnalytics);
    }

    /**
     * The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     * 
     */
    @Import(name="honeycode")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs> honeycode;

    /**
     * @return The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs>> honeycode() {
        return Optional.ofNullable(this.honeycode);
    }

    /**
     * The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
     * 
     */
    @Import(name="inforNexus")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs> inforNexus;

    /**
     * @return The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs>> inforNexus() {
        return Optional.ofNullable(this.inforNexus);
    }

    /**
     * Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
     * 
     */
    @Import(name="marketo")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs> marketo;

    /**
     * @return Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs>> marketo() {
        return Optional.ofNullable(this.marketo);
    }

    /**
     * Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
     * 
     */
    @Import(name="redshift")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs> redshift;

    /**
     * @return Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs>> redshift() {
        return Optional.ofNullable(this.redshift);
    }

    /**
     * The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
     * 
     */
    @Import(name="salesforce")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs> salesforce;

    /**
     * @return The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs>> salesforce() {
        return Optional.ofNullable(this.salesforce);
    }

    /**
     * The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
     * 
     */
    @Import(name="sapoData")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs> sapoData;

    /**
     * @return The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs>> sapoData() {
        return Optional.ofNullable(this.sapoData);
    }

    /**
     * The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
     * 
     */
    @Import(name="serviceNow")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs> serviceNow;

    /**
     * @return The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs>> serviceNow() {
        return Optional.ofNullable(this.serviceNow);
    }

    /**
     * Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     * 
     */
    @Import(name="singular")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs> singular;

    /**
     * @return Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs>> singular() {
        return Optional.ofNullable(this.singular);
    }

    /**
     * Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
     * 
     */
    @Import(name="slack")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs> slack;

    /**
     * @return Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs>> slack() {
        return Optional.ofNullable(this.slack);
    }

    /**
     * The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
     * 
     */
    @Import(name="snowflake")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs> snowflake;

    /**
     * @return The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs>> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }

    /**
     * The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     * 
     */
    @Import(name="trendmicro")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs> trendmicro;

    /**
     * @return The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs>> trendmicro() {
        return Optional.ofNullable(this.trendmicro);
    }

    /**
     * Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
     * 
     */
    @Import(name="veeva")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs> veeva;

    /**
     * @return Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs>> veeva() {
        return Optional.ofNullable(this.veeva);
    }

    /**
     * Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
     * 
     */
    @Import(name="zendesk")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs> zendesk;

    /**
     * @return Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
     * 
     */
    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs>> zendesk() {
        return Optional.ofNullable(this.zendesk);
    }

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs() {}

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs $) {
        this.amplitude = $.amplitude;
        this.customConnector = $.customConnector;
        this.datadog = $.datadog;
        this.dynatrace = $.dynatrace;
        this.googleAnalytics = $.googleAnalytics;
        this.honeycode = $.honeycode;
        this.inforNexus = $.inforNexus;
        this.marketo = $.marketo;
        this.redshift = $.redshift;
        this.salesforce = $.salesforce;
        this.sapoData = $.sapoData;
        this.serviceNow = $.serviceNow;
        this.singular = $.singular;
        this.slack = $.slack;
        this.snowflake = $.snowflake;
        this.trendmicro = $.trendmicro;
        this.veeva = $.veeva;
        this.zendesk = $.zendesk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs $;

        public Builder() {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs();
        }

        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs defaults) {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amplitude The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder amplitude(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs> amplitude) {
            $.amplitude = amplitude;
            return this;
        }

        /**
         * @param amplitude The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder amplitude(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs amplitude) {
            return amplitude(Output.of(amplitude));
        }

        /**
         * @param customConnector The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder customConnector(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs> customConnector) {
            $.customConnector = customConnector;
            return this;
        }

        /**
         * @param customConnector The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder customConnector(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs customConnector) {
            return customConnector(Output.of(customConnector));
        }

        /**
         * @param datadog Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder datadog(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs> datadog) {
            $.datadog = datadog;
            return this;
        }

        /**
         * @param datadog Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder datadog(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs datadog) {
            return datadog(Output.of(datadog));
        }

        /**
         * @param dynatrace The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder dynatrace(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs> dynatrace) {
            $.dynatrace = dynatrace;
            return this;
        }

        /**
         * @param dynatrace The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder dynatrace(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs dynatrace) {
            return dynatrace(Output.of(dynatrace));
        }

        /**
         * @param googleAnalytics The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder googleAnalytics(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs> googleAnalytics) {
            $.googleAnalytics = googleAnalytics;
            return this;
        }

        /**
         * @param googleAnalytics The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder googleAnalytics(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs googleAnalytics) {
            return googleAnalytics(Output.of(googleAnalytics));
        }

        /**
         * @param honeycode The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder honeycode(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs> honeycode) {
            $.honeycode = honeycode;
            return this;
        }

        /**
         * @param honeycode The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder honeycode(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs honeycode) {
            return honeycode(Output.of(honeycode));
        }

        /**
         * @param inforNexus The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder inforNexus(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs> inforNexus) {
            $.inforNexus = inforNexus;
            return this;
        }

        /**
         * @param inforNexus The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder inforNexus(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs inforNexus) {
            return inforNexus(Output.of(inforNexus));
        }

        /**
         * @param marketo Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder marketo(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs> marketo) {
            $.marketo = marketo;
            return this;
        }

        /**
         * @param marketo Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder marketo(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs marketo) {
            return marketo(Output.of(marketo));
        }

        /**
         * @param redshift Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder redshift(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs> redshift) {
            $.redshift = redshift;
            return this;
        }

        /**
         * @param redshift Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder redshift(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs redshift) {
            return redshift(Output.of(redshift));
        }

        /**
         * @param salesforce The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder salesforce(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs> salesforce) {
            $.salesforce = salesforce;
            return this;
        }

        /**
         * @param salesforce The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder salesforce(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs salesforce) {
            return salesforce(Output.of(salesforce));
        }

        /**
         * @param sapoData The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder sapoData(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs> sapoData) {
            $.sapoData = sapoData;
            return this;
        }

        /**
         * @param sapoData The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder sapoData(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs sapoData) {
            return sapoData(Output.of(sapoData));
        }

        /**
         * @param serviceNow The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder serviceNow(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs> serviceNow) {
            $.serviceNow = serviceNow;
            return this;
        }

        /**
         * @param serviceNow The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder serviceNow(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs serviceNow) {
            return serviceNow(Output.of(serviceNow));
        }

        /**
         * @param singular Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder singular(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs> singular) {
            $.singular = singular;
            return this;
        }

        /**
         * @param singular Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder singular(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs singular) {
            return singular(Output.of(singular));
        }

        /**
         * @param slack Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder slack(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs> slack) {
            $.slack = slack;
            return this;
        }

        /**
         * @param slack Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder slack(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs slack) {
            return slack(Output.of(slack));
        }

        /**
         * @param snowflake The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder snowflake(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs> snowflake) {
            $.snowflake = snowflake;
            return this;
        }

        /**
         * @param snowflake The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder snowflake(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs snowflake) {
            return snowflake(Output.of(snowflake));
        }

        /**
         * @param trendmicro The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder trendmicro(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs> trendmicro) {
            $.trendmicro = trendmicro;
            return this;
        }

        /**
         * @param trendmicro The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder trendmicro(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs trendmicro) {
            return trendmicro(Output.of(trendmicro));
        }

        /**
         * @param veeva Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder veeva(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs> veeva) {
            $.veeva = veeva;
            return this;
        }

        /**
         * @param veeva Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder veeva(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs veeva) {
            return veeva(Output.of(veeva));
        }

        /**
         * @param zendesk Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder zendesk(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs> zendesk) {
            $.zendesk = zendesk;
            return this;
        }

        /**
         * @param zendesk Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder zendesk(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs zendesk) {
            return zendesk(Output.of(zendesk));
        }

        public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs build() {
            return $;
        }
    }

}
