// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketAclV2AccessControlPolicyGrantGranteeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketAclV2AccessControlPolicyGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketAclV2AccessControlPolicyGrantArgs Empty = new BucketAclV2AccessControlPolicyGrantArgs();

    /**
     * Configuration block for the person being granted permissions documented below.
     * 
     */
    @Import(name="grantee")
    private @Nullable Output<BucketAclV2AccessControlPolicyGrantGranteeArgs> grantee;

    /**
     * @return Configuration block for the person being granted permissions documented below.
     * 
     */
    public Optional<Output<BucketAclV2AccessControlPolicyGrantGranteeArgs>> grantee() {
        return Optional.ofNullable(this.grantee);
    }

    /**
     * Logging permissions assigned to the grantee for the bucket.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Logging permissions assigned to the grantee for the bucket.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private BucketAclV2AccessControlPolicyGrantArgs() {}

    private BucketAclV2AccessControlPolicyGrantArgs(BucketAclV2AccessControlPolicyGrantArgs $) {
        this.grantee = $.grantee;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketAclV2AccessControlPolicyGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketAclV2AccessControlPolicyGrantArgs $;

        public Builder() {
            $ = new BucketAclV2AccessControlPolicyGrantArgs();
        }

        public Builder(BucketAclV2AccessControlPolicyGrantArgs defaults) {
            $ = new BucketAclV2AccessControlPolicyGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grantee Configuration block for the person being granted permissions documented below.
         * 
         * @return builder
         * 
         */
        public Builder grantee(@Nullable Output<BucketAclV2AccessControlPolicyGrantGranteeArgs> grantee) {
            $.grantee = grantee;
            return this;
        }

        /**
         * @param grantee Configuration block for the person being granted permissions documented below.
         * 
         * @return builder
         * 
         */
        public Builder grantee(BucketAclV2AccessControlPolicyGrantGranteeArgs grantee) {
            return grantee(Output.of(grantee));
        }

        /**
         * @param permission Logging permissions assigned to the grantee for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Logging permissions assigned to the grantee for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public BucketAclV2AccessControlPolicyGrantArgs build() {
            $.permission = Objects.requireNonNull($.permission, "expected parameter 'permission' to be non-null");
            return $;
        }
    }

}
