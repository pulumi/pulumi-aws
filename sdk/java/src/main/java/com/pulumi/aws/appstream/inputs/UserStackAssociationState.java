// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appstream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserStackAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final UserStackAssociationState Empty = new UserStackAssociationState();

    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    @Import(name="sendEmailNotification")
    private @Nullable Output<Boolean> sendEmailNotification;

    public Optional<Output<Boolean>> sendEmailNotification() {
        return Optional.ofNullable(this.sendEmailNotification);
    }

    @Import(name="stackName")
    private @Nullable Output<String> stackName;

    public Optional<Output<String>> stackName() {
        return Optional.ofNullable(this.stackName);
    }

    @Import(name="userName")
    private @Nullable Output<String> userName;

    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private UserStackAssociationState() {}

    private UserStackAssociationState(UserStackAssociationState $) {
        this.authenticationType = $.authenticationType;
        this.sendEmailNotification = $.sendEmailNotification;
        this.stackName = $.stackName;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserStackAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserStackAssociationState $;

        public Builder() {
            $ = new UserStackAssociationState();
        }

        public Builder(UserStackAssociationState defaults) {
            $ = new UserStackAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        public Builder sendEmailNotification(@Nullable Output<Boolean> sendEmailNotification) {
            $.sendEmailNotification = sendEmailNotification;
            return this;
        }

        public Builder sendEmailNotification(Boolean sendEmailNotification) {
            return sendEmailNotification(Output.of(sendEmailNotification));
        }

        public Builder stackName(@Nullable Output<String> stackName) {
            $.stackName = stackName;
            return this;
        }

        public Builder stackName(String stackName) {
            return stackName(Output.of(stackName));
        }

        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserStackAssociationState build() {
            return $;
        }
    }

}
