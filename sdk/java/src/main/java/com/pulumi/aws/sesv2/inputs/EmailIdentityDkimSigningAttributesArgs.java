// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailIdentityDkimSigningAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailIdentityDkimSigningAttributesArgs Empty = new EmailIdentityDkimSigningAttributesArgs();

    /**
     * [Easy DKIM] The key length of the DKIM key pair in use.
     * 
     */
    @Import(name="currentSigningKeyLength")
    private @Nullable Output<String> currentSigningKeyLength;

    /**
     * @return [Easy DKIM] The key length of the DKIM key pair in use.
     * 
     */
    public Optional<Output<String>> currentSigningKeyLength() {
        return Optional.ofNullable(this.currentSigningKeyLength);
    }

    /**
     * [Bring Your Own DKIM] A private key that&#39;s used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
     * 
     */
    @Import(name="domainSigningPrivateKey")
    private @Nullable Output<String> domainSigningPrivateKey;

    /**
     * @return [Bring Your Own DKIM] A private key that&#39;s used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
     * 
     */
    public Optional<Output<String>> domainSigningPrivateKey() {
        return Optional.ofNullable(this.domainSigningPrivateKey);
    }

    /**
     * [Bring Your Own DKIM] A string that&#39;s used to identify a public key in the DNS configuration for a domain.
     * 
     */
    @Import(name="domainSigningSelector")
    private @Nullable Output<String> domainSigningSelector;

    /**
     * @return [Bring Your Own DKIM] A string that&#39;s used to identify a public key in the DNS configuration for a domain.
     * 
     */
    public Optional<Output<String>> domainSigningSelector() {
        return Optional.ofNullable(this.domainSigningSelector);
    }

    /**
     * [Easy DKIM] The last time a key pair was generated for this identity.
     * 
     */
    @Import(name="lastKeyGenerationTimestamp")
    private @Nullable Output<String> lastKeyGenerationTimestamp;

    /**
     * @return [Easy DKIM] The last time a key pair was generated for this identity.
     * 
     */
    public Optional<Output<String>> lastKeyGenerationTimestamp() {
        return Optional.ofNullable(this.lastKeyGenerationTimestamp);
    }

    /**
     * [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
     * 
     */
    @Import(name="nextSigningKeyLength")
    private @Nullable Output<String> nextSigningKeyLength;

    /**
     * @return [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
     * 
     */
    public Optional<Output<String>> nextSigningKeyLength() {
        return Optional.ofNullable(this.nextSigningKeyLength);
    }

    /**
     * A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
     * 
     */
    @Import(name="signingAttributesOrigin")
    private @Nullable Output<String> signingAttributesOrigin;

    /**
     * @return A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
     * 
     */
    public Optional<Output<String>> signingAttributesOrigin() {
        return Optional.ofNullable(this.signingAttributesOrigin);
    }

    /**
     * Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
     * 
     */
    @Import(name="tokens")
    private @Nullable Output<List<String>> tokens;

    /**
     * @return If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
     * 
     */
    public Optional<Output<List<String>>> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    private EmailIdentityDkimSigningAttributesArgs() {}

    private EmailIdentityDkimSigningAttributesArgs(EmailIdentityDkimSigningAttributesArgs $) {
        this.currentSigningKeyLength = $.currentSigningKeyLength;
        this.domainSigningPrivateKey = $.domainSigningPrivateKey;
        this.domainSigningSelector = $.domainSigningSelector;
        this.lastKeyGenerationTimestamp = $.lastKeyGenerationTimestamp;
        this.nextSigningKeyLength = $.nextSigningKeyLength;
        this.signingAttributesOrigin = $.signingAttributesOrigin;
        this.status = $.status;
        this.tokens = $.tokens;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailIdentityDkimSigningAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailIdentityDkimSigningAttributesArgs $;

        public Builder() {
            $ = new EmailIdentityDkimSigningAttributesArgs();
        }

        public Builder(EmailIdentityDkimSigningAttributesArgs defaults) {
            $ = new EmailIdentityDkimSigningAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentSigningKeyLength [Easy DKIM] The key length of the DKIM key pair in use.
         * 
         * @return builder
         * 
         */
        public Builder currentSigningKeyLength(@Nullable Output<String> currentSigningKeyLength) {
            $.currentSigningKeyLength = currentSigningKeyLength;
            return this;
        }

        /**
         * @param currentSigningKeyLength [Easy DKIM] The key length of the DKIM key pair in use.
         * 
         * @return builder
         * 
         */
        public Builder currentSigningKeyLength(String currentSigningKeyLength) {
            return currentSigningKeyLength(Output.of(currentSigningKeyLength));
        }

        /**
         * @param domainSigningPrivateKey [Bring Your Own DKIM] A private key that&#39;s used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
         * 
         * @return builder
         * 
         */
        public Builder domainSigningPrivateKey(@Nullable Output<String> domainSigningPrivateKey) {
            $.domainSigningPrivateKey = domainSigningPrivateKey;
            return this;
        }

        /**
         * @param domainSigningPrivateKey [Bring Your Own DKIM] A private key that&#39;s used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
         * 
         * @return builder
         * 
         */
        public Builder domainSigningPrivateKey(String domainSigningPrivateKey) {
            return domainSigningPrivateKey(Output.of(domainSigningPrivateKey));
        }

        /**
         * @param domainSigningSelector [Bring Your Own DKIM] A string that&#39;s used to identify a public key in the DNS configuration for a domain.
         * 
         * @return builder
         * 
         */
        public Builder domainSigningSelector(@Nullable Output<String> domainSigningSelector) {
            $.domainSigningSelector = domainSigningSelector;
            return this;
        }

        /**
         * @param domainSigningSelector [Bring Your Own DKIM] A string that&#39;s used to identify a public key in the DNS configuration for a domain.
         * 
         * @return builder
         * 
         */
        public Builder domainSigningSelector(String domainSigningSelector) {
            return domainSigningSelector(Output.of(domainSigningSelector));
        }

        /**
         * @param lastKeyGenerationTimestamp [Easy DKIM] The last time a key pair was generated for this identity.
         * 
         * @return builder
         * 
         */
        public Builder lastKeyGenerationTimestamp(@Nullable Output<String> lastKeyGenerationTimestamp) {
            $.lastKeyGenerationTimestamp = lastKeyGenerationTimestamp;
            return this;
        }

        /**
         * @param lastKeyGenerationTimestamp [Easy DKIM] The last time a key pair was generated for this identity.
         * 
         * @return builder
         * 
         */
        public Builder lastKeyGenerationTimestamp(String lastKeyGenerationTimestamp) {
            return lastKeyGenerationTimestamp(Output.of(lastKeyGenerationTimestamp));
        }

        /**
         * @param nextSigningKeyLength [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
         * 
         * @return builder
         * 
         */
        public Builder nextSigningKeyLength(@Nullable Output<String> nextSigningKeyLength) {
            $.nextSigningKeyLength = nextSigningKeyLength;
            return this;
        }

        /**
         * @param nextSigningKeyLength [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
         * 
         * @return builder
         * 
         */
        public Builder nextSigningKeyLength(String nextSigningKeyLength) {
            return nextSigningKeyLength(Output.of(nextSigningKeyLength));
        }

        /**
         * @param signingAttributesOrigin A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
         * 
         * @return builder
         * 
         */
        public Builder signingAttributesOrigin(@Nullable Output<String> signingAttributesOrigin) {
            $.signingAttributesOrigin = signingAttributesOrigin;
            return this;
        }

        /**
         * @param signingAttributesOrigin A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
         * 
         * @return builder
         * 
         */
        public Builder signingAttributesOrigin(String signingAttributesOrigin) {
            return signingAttributesOrigin(Output.of(signingAttributesOrigin));
        }

        /**
         * @param status Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tokens If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
         * 
         * @return builder
         * 
         */
        public Builder tokens(@Nullable Output<List<String>> tokens) {
            $.tokens = tokens;
            return this;
        }

        /**
         * @param tokens If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
         * 
         * @return builder
         * 
         */
        public Builder tokens(List<String> tokens) {
            return tokens(Output.of(tokens));
        }

        /**
         * @param tokens If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
         * 
         * @return builder
         * 
         */
        public Builder tokens(String... tokens) {
            return tokens(List.of(tokens));
        }

        public EmailIdentityDkimSigningAttributesArgs build() {
            return $;
        }
    }

}
