// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailIdentityDkimSigningAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailIdentityDkimSigningAttributesArgs Empty = new EmailIdentityDkimSigningAttributesArgs();

    @Import(name="currentSigningKeyLength")
    private @Nullable Output<String> currentSigningKeyLength;

    public Optional<Output<String>> currentSigningKeyLength() {
        return Optional.ofNullable(this.currentSigningKeyLength);
    }

    @Import(name="domainSigningPrivateKey")
    private @Nullable Output<String> domainSigningPrivateKey;

    public Optional<Output<String>> domainSigningPrivateKey() {
        return Optional.ofNullable(this.domainSigningPrivateKey);
    }

    @Import(name="domainSigningSelector")
    private @Nullable Output<String> domainSigningSelector;

    public Optional<Output<String>> domainSigningSelector() {
        return Optional.ofNullable(this.domainSigningSelector);
    }

    @Import(name="lastKeyGenerationTimestamp")
    private @Nullable Output<String> lastKeyGenerationTimestamp;

    public Optional<Output<String>> lastKeyGenerationTimestamp() {
        return Optional.ofNullable(this.lastKeyGenerationTimestamp);
    }

    @Import(name="nextSigningKeyLength")
    private @Nullable Output<String> nextSigningKeyLength;

    public Optional<Output<String>> nextSigningKeyLength() {
        return Optional.ofNullable(this.nextSigningKeyLength);
    }

    @Import(name="signingAttributesOrigin")
    private @Nullable Output<String> signingAttributesOrigin;

    public Optional<Output<String>> signingAttributesOrigin() {
        return Optional.ofNullable(this.signingAttributesOrigin);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tokens")
    private @Nullable Output<List<String>> tokens;

    public Optional<Output<List<String>>> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    private EmailIdentityDkimSigningAttributesArgs() {}

    private EmailIdentityDkimSigningAttributesArgs(EmailIdentityDkimSigningAttributesArgs $) {
        this.currentSigningKeyLength = $.currentSigningKeyLength;
        this.domainSigningPrivateKey = $.domainSigningPrivateKey;
        this.domainSigningSelector = $.domainSigningSelector;
        this.lastKeyGenerationTimestamp = $.lastKeyGenerationTimestamp;
        this.nextSigningKeyLength = $.nextSigningKeyLength;
        this.signingAttributesOrigin = $.signingAttributesOrigin;
        this.status = $.status;
        this.tokens = $.tokens;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailIdentityDkimSigningAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailIdentityDkimSigningAttributesArgs $;

        public Builder() {
            $ = new EmailIdentityDkimSigningAttributesArgs();
        }

        public Builder(EmailIdentityDkimSigningAttributesArgs defaults) {
            $ = new EmailIdentityDkimSigningAttributesArgs(Objects.requireNonNull(defaults));
        }

        public Builder currentSigningKeyLength(@Nullable Output<String> currentSigningKeyLength) {
            $.currentSigningKeyLength = currentSigningKeyLength;
            return this;
        }

        public Builder currentSigningKeyLength(String currentSigningKeyLength) {
            return currentSigningKeyLength(Output.of(currentSigningKeyLength));
        }

        public Builder domainSigningPrivateKey(@Nullable Output<String> domainSigningPrivateKey) {
            $.domainSigningPrivateKey = domainSigningPrivateKey;
            return this;
        }

        public Builder domainSigningPrivateKey(String domainSigningPrivateKey) {
            return domainSigningPrivateKey(Output.of(domainSigningPrivateKey));
        }

        public Builder domainSigningSelector(@Nullable Output<String> domainSigningSelector) {
            $.domainSigningSelector = domainSigningSelector;
            return this;
        }

        public Builder domainSigningSelector(String domainSigningSelector) {
            return domainSigningSelector(Output.of(domainSigningSelector));
        }

        public Builder lastKeyGenerationTimestamp(@Nullable Output<String> lastKeyGenerationTimestamp) {
            $.lastKeyGenerationTimestamp = lastKeyGenerationTimestamp;
            return this;
        }

        public Builder lastKeyGenerationTimestamp(String lastKeyGenerationTimestamp) {
            return lastKeyGenerationTimestamp(Output.of(lastKeyGenerationTimestamp));
        }

        public Builder nextSigningKeyLength(@Nullable Output<String> nextSigningKeyLength) {
            $.nextSigningKeyLength = nextSigningKeyLength;
            return this;
        }

        public Builder nextSigningKeyLength(String nextSigningKeyLength) {
            return nextSigningKeyLength(Output.of(nextSigningKeyLength));
        }

        public Builder signingAttributesOrigin(@Nullable Output<String> signingAttributesOrigin) {
            $.signingAttributesOrigin = signingAttributesOrigin;
            return this;
        }

        public Builder signingAttributesOrigin(String signingAttributesOrigin) {
            return signingAttributesOrigin(Output.of(signingAttributesOrigin));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tokens(@Nullable Output<List<String>> tokens) {
            $.tokens = tokens;
            return this;
        }

        public Builder tokens(List<String> tokens) {
            return tokens(Output.of(tokens));
        }

        public Builder tokens(String... tokens) {
            return tokens(List.of(tokens));
        }

        public EmailIdentityDkimSigningAttributesArgs build() {
            return $;
        }
    }

}
