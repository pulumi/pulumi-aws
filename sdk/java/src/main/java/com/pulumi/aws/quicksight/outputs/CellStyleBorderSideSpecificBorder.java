// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.TableBorderOptions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class CellStyleBorderSideSpecificBorder {
    private TableBorderOptions bottom;
    private TableBorderOptions innerHorizontal;
    private TableBorderOptions innerVertical;
    private TableBorderOptions left;
    private TableBorderOptions right;
    private TableBorderOptions top;

    private CellStyleBorderSideSpecificBorder() {}
    public TableBorderOptions bottom() {
        return this.bottom;
    }
    public TableBorderOptions innerHorizontal() {
        return this.innerHorizontal;
    }
    public TableBorderOptions innerVertical() {
        return this.innerVertical;
    }
    public TableBorderOptions left() {
        return this.left;
    }
    public TableBorderOptions right() {
        return this.right;
    }
    public TableBorderOptions top() {
        return this.top;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CellStyleBorderSideSpecificBorder defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TableBorderOptions bottom;
        private TableBorderOptions innerHorizontal;
        private TableBorderOptions innerVertical;
        private TableBorderOptions left;
        private TableBorderOptions right;
        private TableBorderOptions top;
        public Builder() {}
        public Builder(CellStyleBorderSideSpecificBorder defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bottom = defaults.bottom;
    	      this.innerHorizontal = defaults.innerHorizontal;
    	      this.innerVertical = defaults.innerVertical;
    	      this.left = defaults.left;
    	      this.right = defaults.right;
    	      this.top = defaults.top;
        }

        @CustomType.Setter
        public Builder bottom(TableBorderOptions bottom) {
            if (bottom == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "bottom");
            }
            this.bottom = bottom;
            return this;
        }
        @CustomType.Setter
        public Builder innerHorizontal(TableBorderOptions innerHorizontal) {
            if (innerHorizontal == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "innerHorizontal");
            }
            this.innerHorizontal = innerHorizontal;
            return this;
        }
        @CustomType.Setter
        public Builder innerVertical(TableBorderOptions innerVertical) {
            if (innerVertical == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "innerVertical");
            }
            this.innerVertical = innerVertical;
            return this;
        }
        @CustomType.Setter
        public Builder left(TableBorderOptions left) {
            if (left == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "left");
            }
            this.left = left;
            return this;
        }
        @CustomType.Setter
        public Builder right(TableBorderOptions right) {
            if (right == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "right");
            }
            this.right = right;
            return this;
        }
        @CustomType.Setter
        public Builder top(TableBorderOptions top) {
            if (top == null) {
              throw new MissingRequiredPropertyException("CellStyleBorderSideSpecificBorder", "top");
            }
            this.top = top;
            return this;
        }
        public CellStyleBorderSideSpecificBorder build() {
            final var _resultValue = new CellStyleBorderSideSpecificBorder();
            _resultValue.bottom = bottom;
            _resultValue.innerHorizontal = innerHorizontal;
            _resultValue.innerVertical = innerVertical;
            _resultValue.left = left;
            _resultValue.right = right;
            _resultValue.top = top;
            return _resultValue;
        }
    }
}
