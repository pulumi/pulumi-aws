// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrderableDbInstanceResult {
    private @Nullable String availabilityZoneGroup;
    /**
     * @return Availability zones where the instance is available.
     * 
     */
    private @Nullable List<String> availabilityZones;
    private String engine;
    private @Nullable String engineVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String instanceClass;
    private @Nullable String licenseModel;
    /**
     * @return Maximum total provisioned IOPS for a DB instance.
     * 
     */
    private @Nullable Integer maxIopsPerDbInstance;
    /**
     * @return Maximum provisioned IOPS per GiB for a DB instance.
     * 
     */
    private @Nullable Double maxIopsPerGib;
    /**
     * @return Maximum storage size for a DB instance.
     * 
     */
    private @Nullable Integer maxStorageSize;
    /**
     * @return Minimum total provisioned IOPS for a DB instance.
     * 
     */
    private @Nullable Integer minIopsPerDbInstance;
    /**
     * @return Minimum provisioned IOPS per GiB for a DB instance.
     * 
     */
    private @Nullable Double minIopsPerGib;
    /**
     * @return Minimum storage size for a DB instance.
     * 
     */
    private @Nullable Integer minStorageSize;
    /**
     * @return Whether a DB instance is Multi-AZ capable.
     * 
     */
    private @Nullable Boolean multiAzCapable;
    /**
     * @return Whether a DB instance supports RDS on Outposts.
     * 
     */
    private @Nullable Boolean outpostCapable;
    private @Nullable List<String> preferredEngineVersions;
    private @Nullable List<String> preferredInstanceClasses;
    /**
     * @return Whether a DB instance can have a read replica.
     * 
     */
    private @Nullable Boolean readReplicaCapable;
    private @Nullable String storageType;
    /**
     * @return A list of the supported DB engine modes.
     * 
     */
    private @Nullable List<String> supportedEngineModes;
    /**
     * @return The network types supported by the DB instance (`IPV4` or `DUAL`).
     * 
     */
    private @Nullable List<String> supportedNetworkTypes;
    private @Nullable Boolean supportsEnhancedMonitoring;
    private @Nullable Boolean supportsGlobalDatabases;
    private @Nullable Boolean supportsIamDatabaseAuthentication;
    private @Nullable Boolean supportsIops;
    private @Nullable Boolean supportsKerberosAuthentication;
    private @Nullable Boolean supportsPerformanceInsights;
    private @Nullable Boolean supportsStorageAutoscaling;
    private @Nullable Boolean supportsStorageEncryption;
    private @Nullable Boolean vpc;

    private GetOrderableDbInstanceResult() {}
    public Optional<String> availabilityZoneGroup() {
        return Optional.ofNullable(this.availabilityZoneGroup);
    }
    /**
     * @return Availability zones where the instance is available.
     * 
     */
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public String engine() {
        return this.engine;
    }
    public Optional<String> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }
    public Optional<String> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }
    /**
     * @return Maximum total provisioned IOPS for a DB instance.
     * 
     */
    public Optional<Integer> maxIopsPerDbInstance() {
        return Optional.ofNullable(this.maxIopsPerDbInstance);
    }
    /**
     * @return Maximum provisioned IOPS per GiB for a DB instance.
     * 
     */
    public Optional<Double> maxIopsPerGib() {
        return Optional.ofNullable(this.maxIopsPerGib);
    }
    /**
     * @return Maximum storage size for a DB instance.
     * 
     */
    public Optional<Integer> maxStorageSize() {
        return Optional.ofNullable(this.maxStorageSize);
    }
    /**
     * @return Minimum total provisioned IOPS for a DB instance.
     * 
     */
    public Optional<Integer> minIopsPerDbInstance() {
        return Optional.ofNullable(this.minIopsPerDbInstance);
    }
    /**
     * @return Minimum provisioned IOPS per GiB for a DB instance.
     * 
     */
    public Optional<Double> minIopsPerGib() {
        return Optional.ofNullable(this.minIopsPerGib);
    }
    /**
     * @return Minimum storage size for a DB instance.
     * 
     */
    public Optional<Integer> minStorageSize() {
        return Optional.ofNullable(this.minStorageSize);
    }
    /**
     * @return Whether a DB instance is Multi-AZ capable.
     * 
     */
    public Optional<Boolean> multiAzCapable() {
        return Optional.ofNullable(this.multiAzCapable);
    }
    /**
     * @return Whether a DB instance supports RDS on Outposts.
     * 
     */
    public Optional<Boolean> outpostCapable() {
        return Optional.ofNullable(this.outpostCapable);
    }
    public List<String> preferredEngineVersions() {
        return this.preferredEngineVersions == null ? List.of() : this.preferredEngineVersions;
    }
    public List<String> preferredInstanceClasses() {
        return this.preferredInstanceClasses == null ? List.of() : this.preferredInstanceClasses;
    }
    /**
     * @return Whether a DB instance can have a read replica.
     * 
     */
    public Optional<Boolean> readReplicaCapable() {
        return Optional.ofNullable(this.readReplicaCapable);
    }
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }
    /**
     * @return A list of the supported DB engine modes.
     * 
     */
    public List<String> supportedEngineModes() {
        return this.supportedEngineModes == null ? List.of() : this.supportedEngineModes;
    }
    /**
     * @return The network types supported by the DB instance (`IPV4` or `DUAL`).
     * 
     */
    public List<String> supportedNetworkTypes() {
        return this.supportedNetworkTypes == null ? List.of() : this.supportedNetworkTypes;
    }
    public Optional<Boolean> supportsEnhancedMonitoring() {
        return Optional.ofNullable(this.supportsEnhancedMonitoring);
    }
    public Optional<Boolean> supportsGlobalDatabases() {
        return Optional.ofNullable(this.supportsGlobalDatabases);
    }
    public Optional<Boolean> supportsIamDatabaseAuthentication() {
        return Optional.ofNullable(this.supportsIamDatabaseAuthentication);
    }
    public Optional<Boolean> supportsIops() {
        return Optional.ofNullable(this.supportsIops);
    }
    public Optional<Boolean> supportsKerberosAuthentication() {
        return Optional.ofNullable(this.supportsKerberosAuthentication);
    }
    public Optional<Boolean> supportsPerformanceInsights() {
        return Optional.ofNullable(this.supportsPerformanceInsights);
    }
    public Optional<Boolean> supportsStorageAutoscaling() {
        return Optional.ofNullable(this.supportsStorageAutoscaling);
    }
    public Optional<Boolean> supportsStorageEncryption() {
        return Optional.ofNullable(this.supportsStorageEncryption);
    }
    public Optional<Boolean> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrderableDbInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityZoneGroup;
        private @Nullable List<String> availabilityZones;
        private String engine;
        private @Nullable String engineVersion;
        private @Nullable String id;
        private @Nullable String instanceClass;
        private @Nullable String licenseModel;
        private @Nullable Integer maxIopsPerDbInstance;
        private @Nullable Double maxIopsPerGib;
        private @Nullable Integer maxStorageSize;
        private @Nullable Integer minIopsPerDbInstance;
        private @Nullable Double minIopsPerGib;
        private @Nullable Integer minStorageSize;
        private @Nullable Boolean multiAzCapable;
        private @Nullable Boolean outpostCapable;
        private @Nullable List<String> preferredEngineVersions;
        private @Nullable List<String> preferredInstanceClasses;
        private @Nullable Boolean readReplicaCapable;
        private @Nullable String storageType;
        private @Nullable List<String> supportedEngineModes;
        private @Nullable List<String> supportedNetworkTypes;
        private @Nullable Boolean supportsEnhancedMonitoring;
        private @Nullable Boolean supportsGlobalDatabases;
        private @Nullable Boolean supportsIamDatabaseAuthentication;
        private @Nullable Boolean supportsIops;
        private @Nullable Boolean supportsKerberosAuthentication;
        private @Nullable Boolean supportsPerformanceInsights;
        private @Nullable Boolean supportsStorageAutoscaling;
        private @Nullable Boolean supportsStorageEncryption;
        private @Nullable Boolean vpc;
        public Builder() {}
        public Builder(GetOrderableDbInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZoneGroup = defaults.availabilityZoneGroup;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.id = defaults.id;
    	      this.instanceClass = defaults.instanceClass;
    	      this.licenseModel = defaults.licenseModel;
    	      this.maxIopsPerDbInstance = defaults.maxIopsPerDbInstance;
    	      this.maxIopsPerGib = defaults.maxIopsPerGib;
    	      this.maxStorageSize = defaults.maxStorageSize;
    	      this.minIopsPerDbInstance = defaults.minIopsPerDbInstance;
    	      this.minIopsPerGib = defaults.minIopsPerGib;
    	      this.minStorageSize = defaults.minStorageSize;
    	      this.multiAzCapable = defaults.multiAzCapable;
    	      this.outpostCapable = defaults.outpostCapable;
    	      this.preferredEngineVersions = defaults.preferredEngineVersions;
    	      this.preferredInstanceClasses = defaults.preferredInstanceClasses;
    	      this.readReplicaCapable = defaults.readReplicaCapable;
    	      this.storageType = defaults.storageType;
    	      this.supportedEngineModes = defaults.supportedEngineModes;
    	      this.supportedNetworkTypes = defaults.supportedNetworkTypes;
    	      this.supportsEnhancedMonitoring = defaults.supportsEnhancedMonitoring;
    	      this.supportsGlobalDatabases = defaults.supportsGlobalDatabases;
    	      this.supportsIamDatabaseAuthentication = defaults.supportsIamDatabaseAuthentication;
    	      this.supportsIops = defaults.supportsIops;
    	      this.supportsKerberosAuthentication = defaults.supportsKerberosAuthentication;
    	      this.supportsPerformanceInsights = defaults.supportsPerformanceInsights;
    	      this.supportsStorageAutoscaling = defaults.supportsStorageAutoscaling;
    	      this.supportsStorageEncryption = defaults.supportsStorageEncryption;
    	      this.vpc = defaults.vpc;
        }

        @CustomType.Setter
        public Builder availabilityZoneGroup(@Nullable String availabilityZoneGroup) {
            this.availabilityZoneGroup = availabilityZoneGroup;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceClass(@Nullable String instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(@Nullable String licenseModel) {
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder maxIopsPerDbInstance(@Nullable Integer maxIopsPerDbInstance) {
            this.maxIopsPerDbInstance = maxIopsPerDbInstance;
            return this;
        }
        @CustomType.Setter
        public Builder maxIopsPerGib(@Nullable Double maxIopsPerGib) {
            this.maxIopsPerGib = maxIopsPerGib;
            return this;
        }
        @CustomType.Setter
        public Builder maxStorageSize(@Nullable Integer maxStorageSize) {
            this.maxStorageSize = maxStorageSize;
            return this;
        }
        @CustomType.Setter
        public Builder minIopsPerDbInstance(@Nullable Integer minIopsPerDbInstance) {
            this.minIopsPerDbInstance = minIopsPerDbInstance;
            return this;
        }
        @CustomType.Setter
        public Builder minIopsPerGib(@Nullable Double minIopsPerGib) {
            this.minIopsPerGib = minIopsPerGib;
            return this;
        }
        @CustomType.Setter
        public Builder minStorageSize(@Nullable Integer minStorageSize) {
            this.minStorageSize = minStorageSize;
            return this;
        }
        @CustomType.Setter
        public Builder multiAzCapable(@Nullable Boolean multiAzCapable) {
            this.multiAzCapable = multiAzCapable;
            return this;
        }
        @CustomType.Setter
        public Builder outpostCapable(@Nullable Boolean outpostCapable) {
            this.outpostCapable = outpostCapable;
            return this;
        }
        @CustomType.Setter
        public Builder preferredEngineVersions(@Nullable List<String> preferredEngineVersions) {
            this.preferredEngineVersions = preferredEngineVersions;
            return this;
        }
        public Builder preferredEngineVersions(String... preferredEngineVersions) {
            return preferredEngineVersions(List.of(preferredEngineVersions));
        }
        @CustomType.Setter
        public Builder preferredInstanceClasses(@Nullable List<String> preferredInstanceClasses) {
            this.preferredInstanceClasses = preferredInstanceClasses;
            return this;
        }
        public Builder preferredInstanceClasses(String... preferredInstanceClasses) {
            return preferredInstanceClasses(List.of(preferredInstanceClasses));
        }
        @CustomType.Setter
        public Builder readReplicaCapable(@Nullable Boolean readReplicaCapable) {
            this.readReplicaCapable = readReplicaCapable;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {
            this.storageType = storageType;
            return this;
        }
        @CustomType.Setter
        public Builder supportedEngineModes(@Nullable List<String> supportedEngineModes) {
            this.supportedEngineModes = supportedEngineModes;
            return this;
        }
        public Builder supportedEngineModes(String... supportedEngineModes) {
            return supportedEngineModes(List.of(supportedEngineModes));
        }
        @CustomType.Setter
        public Builder supportedNetworkTypes(@Nullable List<String> supportedNetworkTypes) {
            this.supportedNetworkTypes = supportedNetworkTypes;
            return this;
        }
        public Builder supportedNetworkTypes(String... supportedNetworkTypes) {
            return supportedNetworkTypes(List.of(supportedNetworkTypes));
        }
        @CustomType.Setter
        public Builder supportsEnhancedMonitoring(@Nullable Boolean supportsEnhancedMonitoring) {
            this.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
            return this;
        }
        @CustomType.Setter
        public Builder supportsGlobalDatabases(@Nullable Boolean supportsGlobalDatabases) {
            this.supportsGlobalDatabases = supportsGlobalDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder supportsIamDatabaseAuthentication(@Nullable Boolean supportsIamDatabaseAuthentication) {
            this.supportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder supportsIops(@Nullable Boolean supportsIops) {
            this.supportsIops = supportsIops;
            return this;
        }
        @CustomType.Setter
        public Builder supportsKerberosAuthentication(@Nullable Boolean supportsKerberosAuthentication) {
            this.supportsKerberosAuthentication = supportsKerberosAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder supportsPerformanceInsights(@Nullable Boolean supportsPerformanceInsights) {
            this.supportsPerformanceInsights = supportsPerformanceInsights;
            return this;
        }
        @CustomType.Setter
        public Builder supportsStorageAutoscaling(@Nullable Boolean supportsStorageAutoscaling) {
            this.supportsStorageAutoscaling = supportsStorageAutoscaling;
            return this;
        }
        @CustomType.Setter
        public Builder supportsStorageEncryption(@Nullable Boolean supportsStorageEncryption) {
            this.supportsStorageEncryption = supportsStorageEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder vpc(@Nullable Boolean vpc) {
            this.vpc = vpc;
            return this;
        }
        public GetOrderableDbInstanceResult build() {
            final var o = new GetOrderableDbInstanceResult();
            o.availabilityZoneGroup = availabilityZoneGroup;
            o.availabilityZones = availabilityZones;
            o.engine = engine;
            o.engineVersion = engineVersion;
            o.id = id;
            o.instanceClass = instanceClass;
            o.licenseModel = licenseModel;
            o.maxIopsPerDbInstance = maxIopsPerDbInstance;
            o.maxIopsPerGib = maxIopsPerGib;
            o.maxStorageSize = maxStorageSize;
            o.minIopsPerDbInstance = minIopsPerDbInstance;
            o.minIopsPerGib = minIopsPerGib;
            o.minStorageSize = minStorageSize;
            o.multiAzCapable = multiAzCapable;
            o.outpostCapable = outpostCapable;
            o.preferredEngineVersions = preferredEngineVersions;
            o.preferredInstanceClasses = preferredInstanceClasses;
            o.readReplicaCapable = readReplicaCapable;
            o.storageType = storageType;
            o.supportedEngineModes = supportedEngineModes;
            o.supportedNetworkTypes = supportedNetworkTypes;
            o.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
            o.supportsGlobalDatabases = supportsGlobalDatabases;
            o.supportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
            o.supportsIops = supportsIops;
            o.supportsKerberosAuthentication = supportsKerberosAuthentication;
            o.supportsPerformanceInsights = supportsPerformanceInsights;
            o.supportsStorageAutoscaling = supportsStorageAutoscaling;
            o.supportsStorageEncryption = supportsStorageEncryption;
            o.vpc = vpc;
            return o;
        }
    }
}
