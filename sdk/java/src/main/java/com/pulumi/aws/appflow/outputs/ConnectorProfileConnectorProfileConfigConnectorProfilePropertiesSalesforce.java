// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
    private @Nullable String instanceUrl;
    /**
     * @return Indicates whether the connector profile applies to a sandbox or production environment.
     * 
     */
    private @Nullable Boolean isSandboxEnvironment;
    /**
     * @return Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
     * 
     */
    private @Nullable Boolean usePrivatelinkForMetadataAndAuthorization;

    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce() {}
    public Optional<String> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }
    /**
     * @return Indicates whether the connector profile applies to a sandbox or production environment.
     * 
     */
    public Optional<Boolean> isSandboxEnvironment() {
        return Optional.ofNullable(this.isSandboxEnvironment);
    }
    /**
     * @return Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
     * 
     */
    public Optional<Boolean> usePrivatelinkForMetadataAndAuthorization() {
        return Optional.ofNullable(this.usePrivatelinkForMetadataAndAuthorization);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String instanceUrl;
        private @Nullable Boolean isSandboxEnvironment;
        private @Nullable Boolean usePrivatelinkForMetadataAndAuthorization;
        public Builder() {}
        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceUrl = defaults.instanceUrl;
    	      this.isSandboxEnvironment = defaults.isSandboxEnvironment;
    	      this.usePrivatelinkForMetadataAndAuthorization = defaults.usePrivatelinkForMetadataAndAuthorization;
        }

        @CustomType.Setter
        public Builder instanceUrl(@Nullable String instanceUrl) {

            this.instanceUrl = instanceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder isSandboxEnvironment(@Nullable Boolean isSandboxEnvironment) {

            this.isSandboxEnvironment = isSandboxEnvironment;
            return this;
        }
        @CustomType.Setter
        public Builder usePrivatelinkForMetadataAndAuthorization(@Nullable Boolean usePrivatelinkForMetadataAndAuthorization) {

            this.usePrivatelinkForMetadataAndAuthorization = usePrivatelinkForMetadataAndAuthorization;
            return this;
        }
        public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce build() {
            final var _resultValue = new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce();
            _resultValue.instanceUrl = instanceUrl;
            _resultValue.isSandboxEnvironment = isSandboxEnvironment;
            _resultValue.usePrivatelinkForMetadataAndAuthorization = usePrivatelinkForMetadataAndAuthorization;
            return _resultValue;
        }
    }
}
