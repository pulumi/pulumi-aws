// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicediscovery.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDnsNamespacePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDnsNamespacePlainArgs Empty = new GetDnsNamespacePlainArgs();

    /**
     * Name of the namespace.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the namespace.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Map of tags for the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of tags for the resource.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetDnsNamespacePlainArgs() {}

    private GetDnsNamespacePlainArgs(GetDnsNamespacePlainArgs $) {
        this.name = $.name;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDnsNamespacePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDnsNamespacePlainArgs $;

        public Builder() {
            $ = new GetDnsNamespacePlainArgs();
        }

        public Builder(GetDnsNamespacePlainArgs defaults) {
            $ = new GetDnsNamespacePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the namespace.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tags Map of tags for the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param type Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetDnsNamespacePlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
