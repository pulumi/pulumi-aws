// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLaunchTemplatePlacement {
    private String affinity;
    private String availabilityZone;
    private String groupName;
    private String hostId;
    private String hostResourceGroupArn;
    private Integer partitionNumber;
    private String spreadDomain;
    private String tenancy;

    private GetLaunchTemplatePlacement() {}
    public String affinity() {
        return this.affinity;
    }
    public String availabilityZone() {
        return this.availabilityZone;
    }
    public String groupName() {
        return this.groupName;
    }
    public String hostId() {
        return this.hostId;
    }
    public String hostResourceGroupArn() {
        return this.hostResourceGroupArn;
    }
    public Integer partitionNumber() {
        return this.partitionNumber;
    }
    public String spreadDomain() {
        return this.spreadDomain;
    }
    public String tenancy() {
        return this.tenancy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLaunchTemplatePlacement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String affinity;
        private String availabilityZone;
        private String groupName;
        private String hostId;
        private String hostResourceGroupArn;
        private Integer partitionNumber;
        private String spreadDomain;
        private String tenancy;
        public Builder() {}
        public Builder(GetLaunchTemplatePlacement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinity = defaults.affinity;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.groupName = defaults.groupName;
    	      this.hostId = defaults.hostId;
    	      this.hostResourceGroupArn = defaults.hostResourceGroupArn;
    	      this.partitionNumber = defaults.partitionNumber;
    	      this.spreadDomain = defaults.spreadDomain;
    	      this.tenancy = defaults.tenancy;
        }

        @CustomType.Setter
        public Builder affinity(String affinity) {
            if (affinity == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "affinity");
            }
            this.affinity = affinity;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder groupName(String groupName) {
            if (groupName == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "groupName");
            }
            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(String hostId) {
            if (hostId == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "hostId");
            }
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostResourceGroupArn(String hostResourceGroupArn) {
            if (hostResourceGroupArn == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "hostResourceGroupArn");
            }
            this.hostResourceGroupArn = hostResourceGroupArn;
            return this;
        }
        @CustomType.Setter
        public Builder partitionNumber(Integer partitionNumber) {
            if (partitionNumber == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "partitionNumber");
            }
            this.partitionNumber = partitionNumber;
            return this;
        }
        @CustomType.Setter
        public Builder spreadDomain(String spreadDomain) {
            if (spreadDomain == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "spreadDomain");
            }
            this.spreadDomain = spreadDomain;
            return this;
        }
        @CustomType.Setter
        public Builder tenancy(String tenancy) {
            if (tenancy == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplatePlacement", "tenancy");
            }
            this.tenancy = tenancy;
            return this;
        }
        public GetLaunchTemplatePlacement build() {
            final var _resultValue = new GetLaunchTemplatePlacement();
            _resultValue.affinity = affinity;
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.groupName = groupName;
            _resultValue.hostId = hostId;
            _resultValue.hostResourceGroupArn = hostResourceGroupArn;
            _resultValue.partitionNumber = partitionNumber;
            _resultValue.spreadDomain = spreadDomain;
            _resultValue.tenancy = tenancy;
            return _resultValue;
        }
    }
}
