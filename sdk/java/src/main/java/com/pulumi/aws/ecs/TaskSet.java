// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ecs.TaskSetArgs;
import com.pulumi.aws.ecs.inputs.TaskSetState;
import com.pulumi.aws.ecs.outputs.TaskSetCapacityProviderStrategy;
import com.pulumi.aws.ecs.outputs.TaskSetLoadBalancer;
import com.pulumi.aws.ecs.outputs.TaskSetNetworkConfiguration;
import com.pulumi.aws.ecs.outputs.TaskSetScale;
import com.pulumi.aws.ecs.outputs.TaskSetServiceRegistries;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:ecs/taskSet:TaskSet")
public class TaskSet extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="capacityProviderStrategies", refs={List.class,TaskSetCapacityProviderStrategy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TaskSetCapacityProviderStrategy>> capacityProviderStrategies;

    public Output<Optional<List<TaskSetCapacityProviderStrategy>>> capacityProviderStrategies() {
        return Codegen.optional(this.capacityProviderStrategies);
    }
    @Export(name="cluster", refs={String.class}, tree="[0]")
    private Output<String> cluster;

    public Output<String> cluster() {
        return this.cluster;
    }
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    public Output<String> externalId() {
        return this.externalId;
    }
    @Export(name="forceDelete", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDelete;

    public Output<Optional<Boolean>> forceDelete() {
        return Codegen.optional(this.forceDelete);
    }
    @Export(name="launchType", refs={String.class}, tree="[0]")
    private Output<String> launchType;

    public Output<String> launchType() {
        return this.launchType;
    }
    @Export(name="loadBalancers", refs={List.class,TaskSetLoadBalancer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TaskSetLoadBalancer>> loadBalancers;

    public Output<Optional<List<TaskSetLoadBalancer>>> loadBalancers() {
        return Codegen.optional(this.loadBalancers);
    }
    @Export(name="networkConfiguration", refs={TaskSetNetworkConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TaskSetNetworkConfiguration> networkConfiguration;

    public Output<Optional<TaskSetNetworkConfiguration>> networkConfiguration() {
        return Codegen.optional(this.networkConfiguration);
    }
    @Export(name="platformVersion", refs={String.class}, tree="[0]")
    private Output<String> platformVersion;

    public Output<String> platformVersion() {
        return this.platformVersion;
    }
    @Export(name="scale", refs={TaskSetScale.class}, tree="[0]")
    private Output<TaskSetScale> scale;

    public Output<TaskSetScale> scale() {
        return this.scale;
    }
    @Export(name="service", refs={String.class}, tree="[0]")
    private Output<String> service;

    public Output<String> service() {
        return this.service;
    }
    @Export(name="serviceRegistries", refs={TaskSetServiceRegistries.class}, tree="[0]")
    private Output</* @Nullable */ TaskSetServiceRegistries> serviceRegistries;

    public Output<Optional<TaskSetServiceRegistries>> serviceRegistries() {
        return Codegen.optional(this.serviceRegistries);
    }
    @Export(name="stabilityStatus", refs={String.class}, tree="[0]")
    private Output<String> stabilityStatus;

    public Output<String> stabilityStatus() {
        return this.stabilityStatus;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="taskDefinition", refs={String.class}, tree="[0]")
    private Output<String> taskDefinition;

    public Output<String> taskDefinition() {
        return this.taskDefinition;
    }
    @Export(name="taskSetId", refs={String.class}, tree="[0]")
    private Output<String> taskSetId;

    public Output<String> taskSetId() {
        return this.taskSetId;
    }
    @Export(name="waitUntilStable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> waitUntilStable;

    public Output<Optional<Boolean>> waitUntilStable() {
        return Codegen.optional(this.waitUntilStable);
    }
    @Export(name="waitUntilStableTimeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> waitUntilStableTimeout;

    public Output<Optional<String>> waitUntilStableTimeout() {
        return Codegen.optional(this.waitUntilStableTimeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TaskSet(String name) {
        this(name, TaskSetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TaskSet(String name, TaskSetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TaskSet(String name, TaskSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecs/taskSet:TaskSet", name, args == null ? TaskSetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TaskSet(String name, Output<String> id, @Nullable TaskSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecs/taskSet:TaskSet", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TaskSet get(String name, Output<String> id, @Nullable TaskSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TaskSet(name, id, state, options);
    }
}
