// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLaunchTemplateInstanceMarketOptionSpotOption {
    private Integer blockDurationMinutes;
    private String instanceInterruptionBehavior;
    private String maxPrice;
    private String spotInstanceType;
    private String validUntil;

    private GetLaunchTemplateInstanceMarketOptionSpotOption() {}
    public Integer blockDurationMinutes() {
        return this.blockDurationMinutes;
    }
    public String instanceInterruptionBehavior() {
        return this.instanceInterruptionBehavior;
    }
    public String maxPrice() {
        return this.maxPrice;
    }
    public String spotInstanceType() {
        return this.spotInstanceType;
    }
    public String validUntil() {
        return this.validUntil;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLaunchTemplateInstanceMarketOptionSpotOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer blockDurationMinutes;
        private String instanceInterruptionBehavior;
        private String maxPrice;
        private String spotInstanceType;
        private String validUntil;
        public Builder() {}
        public Builder(GetLaunchTemplateInstanceMarketOptionSpotOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockDurationMinutes = defaults.blockDurationMinutes;
    	      this.instanceInterruptionBehavior = defaults.instanceInterruptionBehavior;
    	      this.maxPrice = defaults.maxPrice;
    	      this.spotInstanceType = defaults.spotInstanceType;
    	      this.validUntil = defaults.validUntil;
        }

        @CustomType.Setter
        public Builder blockDurationMinutes(Integer blockDurationMinutes) {
            if (blockDurationMinutes == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplateInstanceMarketOptionSpotOption", "blockDurationMinutes");
            }
            this.blockDurationMinutes = blockDurationMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder instanceInterruptionBehavior(String instanceInterruptionBehavior) {
            if (instanceInterruptionBehavior == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplateInstanceMarketOptionSpotOption", "instanceInterruptionBehavior");
            }
            this.instanceInterruptionBehavior = instanceInterruptionBehavior;
            return this;
        }
        @CustomType.Setter
        public Builder maxPrice(String maxPrice) {
            if (maxPrice == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplateInstanceMarketOptionSpotOption", "maxPrice");
            }
            this.maxPrice = maxPrice;
            return this;
        }
        @CustomType.Setter
        public Builder spotInstanceType(String spotInstanceType) {
            if (spotInstanceType == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplateInstanceMarketOptionSpotOption", "spotInstanceType");
            }
            this.spotInstanceType = spotInstanceType;
            return this;
        }
        @CustomType.Setter
        public Builder validUntil(String validUntil) {
            if (validUntil == null) {
              throw new MissingRequiredPropertyException("GetLaunchTemplateInstanceMarketOptionSpotOption", "validUntil");
            }
            this.validUntil = validUntil;
            return this;
        }
        public GetLaunchTemplateInstanceMarketOptionSpotOption build() {
            final var _resultValue = new GetLaunchTemplateInstanceMarketOptionSpotOption();
            _resultValue.blockDurationMinutes = blockDurationMinutes;
            _resultValue.instanceInterruptionBehavior = instanceInterruptionBehavior;
            _resultValue.maxPrice = maxPrice;
            _resultValue.spotInstanceType = spotInstanceType;
            _resultValue.validUntil = validUntil;
            return _resultValue;
        }
    }
}
