// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogDestinationPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final LogDestinationPolicyState Empty = new LogDestinationPolicyState();

    /**
     * The policy document. This is a JSON formatted string.
     * 
     */
    @Import(name="accessPolicy")
    private @Nullable Output<String> accessPolicy;

    /**
     * @return The policy document. This is a JSON formatted string.
     * 
     */
    public Optional<Output<String>> accessPolicy() {
        return Optional.ofNullable(this.accessPolicy);
    }

    /**
     * A name for the subscription filter
     * 
     */
    @Import(name="destinationName")
    private @Nullable Output<String> destinationName;

    /**
     * @return A name for the subscription filter
     * 
     */
    public Optional<Output<String>> destinationName() {
        return Optional.ofNullable(this.destinationName);
    }

    /**
     * Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
     * 
     */
    @Import(name="forceUpdate")
    private @Nullable Output<Boolean> forceUpdate;

    /**
     * @return Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
     * 
     */
    public Optional<Output<Boolean>> forceUpdate() {
        return Optional.ofNullable(this.forceUpdate);
    }

    private LogDestinationPolicyState() {}

    private LogDestinationPolicyState(LogDestinationPolicyState $) {
        this.accessPolicy = $.accessPolicy;
        this.destinationName = $.destinationName;
        this.forceUpdate = $.forceUpdate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDestinationPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDestinationPolicyState $;

        public Builder() {
            $ = new LogDestinationPolicyState();
        }

        public Builder(LogDestinationPolicyState defaults) {
            $ = new LogDestinationPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPolicy The policy document. This is a JSON formatted string.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicy(@Nullable Output<String> accessPolicy) {
            $.accessPolicy = accessPolicy;
            return this;
        }

        /**
         * @param accessPolicy The policy document. This is a JSON formatted string.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicy(String accessPolicy) {
            return accessPolicy(Output.of(accessPolicy));
        }

        /**
         * @param destinationName A name for the subscription filter
         * 
         * @return builder
         * 
         */
        public Builder destinationName(@Nullable Output<String> destinationName) {
            $.destinationName = destinationName;
            return this;
        }

        /**
         * @param destinationName A name for the subscription filter
         * 
         * @return builder
         * 
         */
        public Builder destinationName(String destinationName) {
            return destinationName(Output.of(destinationName));
        }

        /**
         * @param forceUpdate Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
         * 
         * @return builder
         * 
         */
        public Builder forceUpdate(@Nullable Output<Boolean> forceUpdate) {
            $.forceUpdate = forceUpdate;
            return this;
        }

        /**
         * @param forceUpdate Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
         * 
         * @return builder
         * 
         */
        public Builder forceUpdate(Boolean forceUpdate) {
            return forceUpdate(Output.of(forceUpdate));
        }

        public LogDestinationPolicyState build() {
            return $;
        }
    }

}
