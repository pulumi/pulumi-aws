// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecGrpcRouteArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttp2RouteArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayRouteSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecArgs Empty = new GatewayRouteSpecArgs();

    /**
     * Specification of a gRPC gateway route.
     * 
     */
    @Import(name="grpcRoute")
    private @Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute;

    /**
     * @return Specification of a gRPC gateway route.
     * 
     */
    public Optional<Output<GatewayRouteSpecGrpcRouteArgs>> grpcRoute() {
        return Optional.ofNullable(this.grpcRoute);
    }

    /**
     * Specification of an HTTP/2 gateway route.
     * 
     */
    @Import(name="http2Route")
    private @Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route;

    /**
     * @return Specification of an HTTP/2 gateway route.
     * 
     */
    public Optional<Output<GatewayRouteSpecHttp2RouteArgs>> http2Route() {
        return Optional.ofNullable(this.http2Route);
    }

    /**
     * Specification of an HTTP gateway route.
     * 
     */
    @Import(name="httpRoute")
    private @Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute;

    /**
     * @return Specification of an HTTP gateway route.
     * 
     */
    public Optional<Output<GatewayRouteSpecHttpRouteArgs>> httpRoute() {
        return Optional.ofNullable(this.httpRoute);
    }

    private GatewayRouteSpecArgs() {}

    private GatewayRouteSpecArgs(GatewayRouteSpecArgs $) {
        this.grpcRoute = $.grpcRoute;
        this.http2Route = $.http2Route;
        this.httpRoute = $.httpRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecArgs $;

        public Builder() {
            $ = new GatewayRouteSpecArgs();
        }

        public Builder(GatewayRouteSpecArgs defaults) {
            $ = new GatewayRouteSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpcRoute Specification of a gRPC gateway route.
         * 
         * @return builder
         * 
         */
        public Builder grpcRoute(@Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute) {
            $.grpcRoute = grpcRoute;
            return this;
        }

        /**
         * @param grpcRoute Specification of a gRPC gateway route.
         * 
         * @return builder
         * 
         */
        public Builder grpcRoute(GatewayRouteSpecGrpcRouteArgs grpcRoute) {
            return grpcRoute(Output.of(grpcRoute));
        }

        /**
         * @param http2Route Specification of an HTTP/2 gateway route.
         * 
         * @return builder
         * 
         */
        public Builder http2Route(@Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route) {
            $.http2Route = http2Route;
            return this;
        }

        /**
         * @param http2Route Specification of an HTTP/2 gateway route.
         * 
         * @return builder
         * 
         */
        public Builder http2Route(GatewayRouteSpecHttp2RouteArgs http2Route) {
            return http2Route(Output.of(http2Route));
        }

        /**
         * @param httpRoute Specification of an HTTP gateway route.
         * 
         * @return builder
         * 
         */
        public Builder httpRoute(@Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute) {
            $.httpRoute = httpRoute;
            return this;
        }

        /**
         * @param httpRoute Specification of an HTTP gateway route.
         * 
         * @return builder
         * 
         */
        public Builder httpRoute(GatewayRouteSpecHttpRouteArgs httpRoute) {
            return httpRoute(Output.of(httpRoute));
        }

        public GatewayRouteSpecArgs build() {
            return $;
        }
    }

}
