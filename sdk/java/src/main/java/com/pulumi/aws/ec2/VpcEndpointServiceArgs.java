// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointServiceArgs Empty = new VpcEndpointServiceArgs();

    @Import(name="acceptanceRequired", required=true)
    private Output<Boolean> acceptanceRequired;

    public Output<Boolean> acceptanceRequired() {
        return this.acceptanceRequired;
    }

    @Import(name="allowedPrincipals")
    private @Nullable Output<List<String>> allowedPrincipals;

    public Optional<Output<List<String>>> allowedPrincipals() {
        return Optional.ofNullable(this.allowedPrincipals);
    }

    @Import(name="gatewayLoadBalancerArns")
    private @Nullable Output<List<String>> gatewayLoadBalancerArns;

    public Optional<Output<List<String>>> gatewayLoadBalancerArns() {
        return Optional.ofNullable(this.gatewayLoadBalancerArns);
    }

    @Import(name="networkLoadBalancerArns")
    private @Nullable Output<List<String>> networkLoadBalancerArns;

    public Optional<Output<List<String>>> networkLoadBalancerArns() {
        return Optional.ofNullable(this.networkLoadBalancerArns);
    }

    @Import(name="privateDnsName")
    private @Nullable Output<String> privateDnsName;

    public Optional<Output<String>> privateDnsName() {
        return Optional.ofNullable(this.privateDnsName);
    }

    @Import(name="supportedIpAddressTypes")
    private @Nullable Output<List<String>> supportedIpAddressTypes;

    public Optional<Output<List<String>>> supportedIpAddressTypes() {
        return Optional.ofNullable(this.supportedIpAddressTypes);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private VpcEndpointServiceArgs() {}

    private VpcEndpointServiceArgs(VpcEndpointServiceArgs $) {
        this.acceptanceRequired = $.acceptanceRequired;
        this.allowedPrincipals = $.allowedPrincipals;
        this.gatewayLoadBalancerArns = $.gatewayLoadBalancerArns;
        this.networkLoadBalancerArns = $.networkLoadBalancerArns;
        this.privateDnsName = $.privateDnsName;
        this.supportedIpAddressTypes = $.supportedIpAddressTypes;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointServiceArgs $;

        public Builder() {
            $ = new VpcEndpointServiceArgs();
        }

        public Builder(VpcEndpointServiceArgs defaults) {
            $ = new VpcEndpointServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder acceptanceRequired(Output<Boolean> acceptanceRequired) {
            $.acceptanceRequired = acceptanceRequired;
            return this;
        }

        public Builder acceptanceRequired(Boolean acceptanceRequired) {
            return acceptanceRequired(Output.of(acceptanceRequired));
        }

        public Builder allowedPrincipals(@Nullable Output<List<String>> allowedPrincipals) {
            $.allowedPrincipals = allowedPrincipals;
            return this;
        }

        public Builder allowedPrincipals(List<String> allowedPrincipals) {
            return allowedPrincipals(Output.of(allowedPrincipals));
        }

        public Builder allowedPrincipals(String... allowedPrincipals) {
            return allowedPrincipals(List.of(allowedPrincipals));
        }

        public Builder gatewayLoadBalancerArns(@Nullable Output<List<String>> gatewayLoadBalancerArns) {
            $.gatewayLoadBalancerArns = gatewayLoadBalancerArns;
            return this;
        }

        public Builder gatewayLoadBalancerArns(List<String> gatewayLoadBalancerArns) {
            return gatewayLoadBalancerArns(Output.of(gatewayLoadBalancerArns));
        }

        public Builder gatewayLoadBalancerArns(String... gatewayLoadBalancerArns) {
            return gatewayLoadBalancerArns(List.of(gatewayLoadBalancerArns));
        }

        public Builder networkLoadBalancerArns(@Nullable Output<List<String>> networkLoadBalancerArns) {
            $.networkLoadBalancerArns = networkLoadBalancerArns;
            return this;
        }

        public Builder networkLoadBalancerArns(List<String> networkLoadBalancerArns) {
            return networkLoadBalancerArns(Output.of(networkLoadBalancerArns));
        }

        public Builder networkLoadBalancerArns(String... networkLoadBalancerArns) {
            return networkLoadBalancerArns(List.of(networkLoadBalancerArns));
        }

        public Builder privateDnsName(@Nullable Output<String> privateDnsName) {
            $.privateDnsName = privateDnsName;
            return this;
        }

        public Builder privateDnsName(String privateDnsName) {
            return privateDnsName(Output.of(privateDnsName));
        }

        public Builder supportedIpAddressTypes(@Nullable Output<List<String>> supportedIpAddressTypes) {
            $.supportedIpAddressTypes = supportedIpAddressTypes;
            return this;
        }

        public Builder supportedIpAddressTypes(List<String> supportedIpAddressTypes) {
            return supportedIpAddressTypes(Output.of(supportedIpAddressTypes));
        }

        public Builder supportedIpAddressTypes(String... supportedIpAddressTypes) {
            return supportedIpAddressTypes(List.of(supportedIpAddressTypes));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public VpcEndpointServiceArgs build() {
            $.acceptanceRequired = Objects.requireNonNull($.acceptanceRequired, "expected parameter 'acceptanceRequired' to be non-null");
            return $;
        }
    }

}
