// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetUserSshKeyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserSshKeyPlainArgs Empty = new GetUserSshKeyPlainArgs();

    @Import(name="encoding", required=true)
    private String encoding;

    public String encoding() {
        return this.encoding;
    }

    @Import(name="sshPublicKeyId", required=true)
    private String sshPublicKeyId;

    public String sshPublicKeyId() {
        return this.sshPublicKeyId;
    }

    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private GetUserSshKeyPlainArgs() {}

    private GetUserSshKeyPlainArgs(GetUserSshKeyPlainArgs $) {
        this.encoding = $.encoding;
        this.sshPublicKeyId = $.sshPublicKeyId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserSshKeyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserSshKeyPlainArgs $;

        public Builder() {
            $ = new GetUserSshKeyPlainArgs();
        }

        public Builder(GetUserSshKeyPlainArgs defaults) {
            $ = new GetUserSshKeyPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder encoding(String encoding) {
            $.encoding = encoding;
            return this;
        }

        public Builder sshPublicKeyId(String sshPublicKeyId) {
            $.sshPublicKeyId = sshPublicKeyId;
            return this;
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetUserSshKeyPlainArgs build() {
            $.encoding = Objects.requireNonNull($.encoding, "expected parameter 'encoding' to be non-null");
            $.sshPublicKeyId = Objects.requireNonNull($.sshPublicKeyId, "expected parameter 'sshPublicKeyId' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
