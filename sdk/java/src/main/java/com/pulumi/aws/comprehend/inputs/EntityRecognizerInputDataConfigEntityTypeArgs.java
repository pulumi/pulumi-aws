// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.comprehend.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class EntityRecognizerInputDataConfigEntityTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntityRecognizerInputDataConfigEntityTypeArgs Empty = new EntityRecognizerInputDataConfigEntityTypeArgs();

    /**
     * An entity type to be matched by the Entity Recognizer.
     * Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return An entity type to be matched by the Entity Recognizer.
     * Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private EntityRecognizerInputDataConfigEntityTypeArgs() {}

    private EntityRecognizerInputDataConfigEntityTypeArgs(EntityRecognizerInputDataConfigEntityTypeArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntityRecognizerInputDataConfigEntityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntityRecognizerInputDataConfigEntityTypeArgs $;

        public Builder() {
            $ = new EntityRecognizerInputDataConfigEntityTypeArgs();
        }

        public Builder(EntityRecognizerInputDataConfigEntityTypeArgs defaults) {
            $ = new EntityRecognizerInputDataConfigEntityTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type An entity type to be matched by the Entity Recognizer.
         * Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type An entity type to be matched by the Entity Recognizer.
         * Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EntityRecognizerInputDataConfigEntityTypeArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("EntityRecognizerInputDataConfigEntityTypeArgs", "type");
            }
            return $;
        }
    }

}
