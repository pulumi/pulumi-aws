// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeSourceParametersSqsQueueParameters {
    /**
     * @return The maximum number of records to include in each batch. Maximum value of 10000.
     * 
     */
    private @Nullable Integer batchSize;
    /**
     * @return The maximum length of a time to wait for events. Maximum value of 300.
     * 
     */
    private @Nullable Integer maximumBatchingWindowInSeconds;

    private PipeSourceParametersSqsQueueParameters() {}
    /**
     * @return The maximum number of records to include in each batch. Maximum value of 10000.
     * 
     */
    public Optional<Integer> batchSize() {
        return Optional.ofNullable(this.batchSize);
    }
    /**
     * @return The maximum length of a time to wait for events. Maximum value of 300.
     * 
     */
    public Optional<Integer> maximumBatchingWindowInSeconds() {
        return Optional.ofNullable(this.maximumBatchingWindowInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeSourceParametersSqsQueueParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer batchSize;
        private @Nullable Integer maximumBatchingWindowInSeconds;
        public Builder() {}
        public Builder(PipeSourceParametersSqsQueueParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchSize = defaults.batchSize;
    	      this.maximumBatchingWindowInSeconds = defaults.maximumBatchingWindowInSeconds;
        }

        @CustomType.Setter
        public Builder batchSize(@Nullable Integer batchSize) {

            this.batchSize = batchSize;
            return this;
        }
        @CustomType.Setter
        public Builder maximumBatchingWindowInSeconds(@Nullable Integer maximumBatchingWindowInSeconds) {

            this.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
            return this;
        }
        public PipeSourceParametersSqsQueueParameters build() {
            final var _resultValue = new PipeSourceParametersSqsQueueParameters();
            _resultValue.batchSize = batchSize;
            _resultValue.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
            return _resultValue;
        }
    }
}
