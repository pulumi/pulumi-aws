// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codeartifact.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryEndpointResult {
    private String domain;
    private String domainOwner;
    private String format;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String repository;
    /**
     * @return URL of the returned endpoint.
     * 
     */
    private String repositoryEndpoint;

    private GetRepositoryEndpointResult() {}
    public String domain() {
        return this.domain;
    }
    public String domainOwner() {
        return this.domainOwner;
    }
    public String format() {
        return this.format;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String repository() {
        return this.repository;
    }
    /**
     * @return URL of the returned endpoint.
     * 
     */
    public String repositoryEndpoint() {
        return this.repositoryEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String domainOwner;
        private String format;
        private String id;
        private String repository;
        private String repositoryEndpoint;
        public Builder() {}
        public Builder(GetRepositoryEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.domainOwner = defaults.domainOwner;
    	      this.format = defaults.format;
    	      this.id = defaults.id;
    	      this.repository = defaults.repository;
    	      this.repositoryEndpoint = defaults.repositoryEndpoint;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder domainOwner(String domainOwner) {
            if (domainOwner == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "domainOwner");
            }
            this.domainOwner = domainOwner;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder repository(String repository) {
            if (repository == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "repository");
            }
            this.repository = repository;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryEndpoint(String repositoryEndpoint) {
            if (repositoryEndpoint == null) {
              throw new MissingRequiredPropertyException("GetRepositoryEndpointResult", "repositoryEndpoint");
            }
            this.repositoryEndpoint = repositoryEndpoint;
            return this;
        }
        public GetRepositoryEndpointResult build() {
            final var _resultValue = new GetRepositoryEndpointResult();
            _resultValue.domain = domain;
            _resultValue.domainOwner = domainOwner;
            _resultValue.format = format;
            _resultValue.id = id;
            _resultValue.repository = repository;
            _resultValue.repositoryEndpoint = repositoryEndpoint;
            return _resultValue;
        }
    }
}
