// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
    /**
     * @return The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
     * 
     */
    private String repositoryName;
    /**
     * @return The service in which this image is registered. Valid values: `ECR`.
     * 
     */
    private String service;

    private DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository() {}
    /**
     * @return The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
     * 
     */
    public String repositoryName() {
        return this.repositoryName;
    }
    /**
     * @return The service in which this image is registered. Valid values: `ECR`.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String repositoryName;
        private String service;
        public Builder() {}
        public Builder(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repositoryName = defaults.repositoryName;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder repositoryName(String repositoryName) {
            this.repositoryName = Objects.requireNonNull(repositoryName);
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }
        public DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository build() {
            final var _resultValue = new DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository();
            _resultValue.repositoryName = repositoryName;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
