// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrserverless.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationSchedulerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationSchedulerConfigurationArgs Empty = new ApplicationSchedulerConfigurationArgs();

    /**
     * Maximum concurrent job runs on this application. Valid range is `1` to `1000`. Defaults to `15`.
     * 
     */
    @Import(name="maxConcurrentRuns")
    private @Nullable Output<Integer> maxConcurrentRuns;

    /**
     * @return Maximum concurrent job runs on this application. Valid range is `1` to `1000`. Defaults to `15`.
     * 
     */
    public Optional<Output<Integer>> maxConcurrentRuns() {
        return Optional.ofNullable(this.maxConcurrentRuns);
    }

    /**
     * Maximum duration in minutes for the job in QUEUED state. Valid range is from `15` to `720`. Defaults to `360`.
     * 
     */
    @Import(name="queueTimeoutMinutes")
    private @Nullable Output<Integer> queueTimeoutMinutes;

    /**
     * @return Maximum duration in minutes for the job in QUEUED state. Valid range is from `15` to `720`. Defaults to `360`.
     * 
     */
    public Optional<Output<Integer>> queueTimeoutMinutes() {
        return Optional.ofNullable(this.queueTimeoutMinutes);
    }

    private ApplicationSchedulerConfigurationArgs() {}

    private ApplicationSchedulerConfigurationArgs(ApplicationSchedulerConfigurationArgs $) {
        this.maxConcurrentRuns = $.maxConcurrentRuns;
        this.queueTimeoutMinutes = $.queueTimeoutMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationSchedulerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationSchedulerConfigurationArgs $;

        public Builder() {
            $ = new ApplicationSchedulerConfigurationArgs();
        }

        public Builder(ApplicationSchedulerConfigurationArgs defaults) {
            $ = new ApplicationSchedulerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxConcurrentRuns Maximum concurrent job runs on this application. Valid range is `1` to `1000`. Defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder maxConcurrentRuns(@Nullable Output<Integer> maxConcurrentRuns) {
            $.maxConcurrentRuns = maxConcurrentRuns;
            return this;
        }

        /**
         * @param maxConcurrentRuns Maximum concurrent job runs on this application. Valid range is `1` to `1000`. Defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder maxConcurrentRuns(Integer maxConcurrentRuns) {
            return maxConcurrentRuns(Output.of(maxConcurrentRuns));
        }

        /**
         * @param queueTimeoutMinutes Maximum duration in minutes for the job in QUEUED state. Valid range is from `15` to `720`. Defaults to `360`.
         * 
         * @return builder
         * 
         */
        public Builder queueTimeoutMinutes(@Nullable Output<Integer> queueTimeoutMinutes) {
            $.queueTimeoutMinutes = queueTimeoutMinutes;
            return this;
        }

        /**
         * @param queueTimeoutMinutes Maximum duration in minutes for the job in QUEUED state. Valid range is from `15` to `720`. Defaults to `360`.
         * 
         * @return builder
         * 
         */
        public Builder queueTimeoutMinutes(Integer queueTimeoutMinutes) {
            return queueTimeoutMinutes(Output.of(queueTimeoutMinutes));
        }

        public ApplicationSchedulerConfigurationArgs build() {
            return $;
        }
    }

}
