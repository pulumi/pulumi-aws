// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeLogConfigurationS3LogDestination {
    /**
     * @return Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    private String bucketName;
    /**
     * @return Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    private String bucketOwner;
    /**
     * @return EventBridge format for the log records. Valid values `json`, `plain` and `w3c`.
     * 
     */
    private @Nullable String outputFormat;
    /**
     * @return Prefix text with which to begin Amazon S3 log object names.
     * 
     */
    private @Nullable String prefix;

    private PipeLogConfigurationS3LogDestination() {}
    /**
     * @return Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    public String bucketOwner() {
        return this.bucketOwner;
    }
    /**
     * @return EventBridge format for the log records. Valid values `json`, `plain` and `w3c`.
     * 
     */
    public Optional<String> outputFormat() {
        return Optional.ofNullable(this.outputFormat);
    }
    /**
     * @return Prefix text with which to begin Amazon S3 log object names.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeLogConfigurationS3LogDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucketName;
        private String bucketOwner;
        private @Nullable String outputFormat;
        private @Nullable String prefix;
        public Builder() {}
        public Builder(PipeLogConfigurationS3LogDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.bucketOwner = defaults.bucketOwner;
    	      this.outputFormat = defaults.outputFormat;
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("PipeLogConfigurationS3LogDestination", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder bucketOwner(String bucketOwner) {
            if (bucketOwner == null) {
              throw new MissingRequiredPropertyException("PipeLogConfigurationS3LogDestination", "bucketOwner");
            }
            this.bucketOwner = bucketOwner;
            return this;
        }
        @CustomType.Setter
        public Builder outputFormat(@Nullable String outputFormat) {

            this.outputFormat = outputFormat;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        public PipeLogConfigurationS3LogDestination build() {
            final var _resultValue = new PipeLogConfigurationS3LogDestination();
            _resultValue.bucketName = bucketName;
            _resultValue.bucketOwner = bucketOwner;
            _resultValue.outputFormat = outputFormat;
            _resultValue.prefix = prefix;
            return _resultValue;
        }
    }
}
