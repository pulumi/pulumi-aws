// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.aws.route53.outputs.GetQueryLogConfigFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQueryLogConfigResult {
    private String arn;
    private String destinationArn;
    private @Nullable List<GetQueryLogConfigFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String name;
    private String ownerId;
    private @Nullable String resolverQueryLogConfigId;
    private String shareStatus;
    private Map<String,String> tags;

    private GetQueryLogConfigResult() {}
    public String arn() {
        return this.arn;
    }
    public String destinationArn() {
        return this.destinationArn;
    }
    public List<GetQueryLogConfigFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String ownerId() {
        return this.ownerId;
    }
    public Optional<String> resolverQueryLogConfigId() {
        return Optional.ofNullable(this.resolverQueryLogConfigId);
    }
    public String shareStatus() {
        return this.shareStatus;
    }
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueryLogConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String destinationArn;
        private @Nullable List<GetQueryLogConfigFilter> filters;
        private String id;
        private @Nullable String name;
        private String ownerId;
        private @Nullable String resolverQueryLogConfigId;
        private String shareStatus;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetQueryLogConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.destinationArn = defaults.destinationArn;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.resolverQueryLogConfigId = defaults.resolverQueryLogConfigId;
    	      this.shareStatus = defaults.shareStatus;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder destinationArn(String destinationArn) {
            if (destinationArn == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "destinationArn");
            }
            this.destinationArn = destinationArn;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetQueryLogConfigFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetQueryLogConfigFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            if (ownerId == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "ownerId");
            }
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder resolverQueryLogConfigId(@Nullable String resolverQueryLogConfigId) {

            this.resolverQueryLogConfigId = resolverQueryLogConfigId;
            return this;
        }
        @CustomType.Setter
        public Builder shareStatus(String shareStatus) {
            if (shareStatus == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "shareStatus");
            }
            this.shareStatus = shareStatus;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetQueryLogConfigResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetQueryLogConfigResult build() {
            final var _resultValue = new GetQueryLogConfigResult();
            _resultValue.arn = arn;
            _resultValue.destinationArn = destinationArn;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ownerId = ownerId;
            _resultValue.resolverQueryLogConfigId = resolverQueryLogConfigId;
            _resultValue.shareStatus = shareStatus;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
