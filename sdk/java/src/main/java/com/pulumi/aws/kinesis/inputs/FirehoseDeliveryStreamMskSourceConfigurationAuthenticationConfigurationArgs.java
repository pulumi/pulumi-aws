// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs Empty = new FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs();

    /**
     * The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
     * 
     */
    @Import(name="connectivity", required=true)
    private Output<String> connectivity;

    /**
     * @return The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
     * 
     */
    public Output<String> connectivity() {
        return this.connectivity;
    }

    /**
     * The ARN of the role used to access the Amazon MSK cluster.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the role used to access the Amazon MSK cluster.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs() {}

    private FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs $) {
        this.connectivity = $.connectivity;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs $;

        public Builder() {
            $ = new FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs();
        }

        public Builder(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs defaults) {
            $ = new FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectivity The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder connectivity(Output<String> connectivity) {
            $.connectivity = connectivity;
            return this;
        }

        /**
         * @param connectivity The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder connectivity(String connectivity) {
            return connectivity(Output.of(connectivity));
        }

        /**
         * @param roleArn The ARN of the role used to access the Amazon MSK cluster.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role used to access the Amazon MSK cluster.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs build() {
            if ($.connectivity == null) {
                throw new MissingRequiredPropertyException("FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs", "connectivity");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs", "roleArn");
            }
            return $;
        }
    }

}
