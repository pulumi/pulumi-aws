// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.CellStyle;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions {
    private @Nullable String customLabel;
    private @Nullable String fieldLevel;
    private @Nullable List<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption> fieldLevelOptions;
    private @Nullable CellStyle metricHeaderCellStyle;
    private @Nullable CellStyle totalCellStyle;
    private @Nullable String totalsVisibility;
    private @Nullable CellStyle valueCellStyle;

    private VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions() {}
    public Optional<String> customLabel() {
        return Optional.ofNullable(this.customLabel);
    }
    public Optional<String> fieldLevel() {
        return Optional.ofNullable(this.fieldLevel);
    }
    public List<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption> fieldLevelOptions() {
        return this.fieldLevelOptions == null ? List.of() : this.fieldLevelOptions;
    }
    public Optional<CellStyle> metricHeaderCellStyle() {
        return Optional.ofNullable(this.metricHeaderCellStyle);
    }
    public Optional<CellStyle> totalCellStyle() {
        return Optional.ofNullable(this.totalCellStyle);
    }
    public Optional<String> totalsVisibility() {
        return Optional.ofNullable(this.totalsVisibility);
    }
    public Optional<CellStyle> valueCellStyle() {
        return Optional.ofNullable(this.valueCellStyle);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customLabel;
        private @Nullable String fieldLevel;
        private @Nullable List<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption> fieldLevelOptions;
        private @Nullable CellStyle metricHeaderCellStyle;
        private @Nullable CellStyle totalCellStyle;
        private @Nullable String totalsVisibility;
        private @Nullable CellStyle valueCellStyle;
        public Builder() {}
        public Builder(VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLabel = defaults.customLabel;
    	      this.fieldLevel = defaults.fieldLevel;
    	      this.fieldLevelOptions = defaults.fieldLevelOptions;
    	      this.metricHeaderCellStyle = defaults.metricHeaderCellStyle;
    	      this.totalCellStyle = defaults.totalCellStyle;
    	      this.totalsVisibility = defaults.totalsVisibility;
    	      this.valueCellStyle = defaults.valueCellStyle;
        }

        @CustomType.Setter
        public Builder customLabel(@Nullable String customLabel) {

            this.customLabel = customLabel;
            return this;
        }
        @CustomType.Setter
        public Builder fieldLevel(@Nullable String fieldLevel) {

            this.fieldLevel = fieldLevel;
            return this;
        }
        @CustomType.Setter
        public Builder fieldLevelOptions(@Nullable List<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption> fieldLevelOptions) {

            this.fieldLevelOptions = fieldLevelOptions;
            return this;
        }
        public Builder fieldLevelOptions(VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsFieldLevelOption... fieldLevelOptions) {
            return fieldLevelOptions(List.of(fieldLevelOptions));
        }
        @CustomType.Setter
        public Builder metricHeaderCellStyle(@Nullable CellStyle metricHeaderCellStyle) {

            this.metricHeaderCellStyle = metricHeaderCellStyle;
            return this;
        }
        @CustomType.Setter
        public Builder totalCellStyle(@Nullable CellStyle totalCellStyle) {

            this.totalCellStyle = totalCellStyle;
            return this;
        }
        @CustomType.Setter
        public Builder totalsVisibility(@Nullable String totalsVisibility) {

            this.totalsVisibility = totalsVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder valueCellStyle(@Nullable CellStyle valueCellStyle) {

            this.valueCellStyle = valueCellStyle;
            return this;
        }
        public VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions build() {
            final var _resultValue = new VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptions();
            _resultValue.customLabel = customLabel;
            _resultValue.fieldLevel = fieldLevel;
            _resultValue.fieldLevelOptions = fieldLevelOptions;
            _resultValue.metricHeaderCellStyle = metricHeaderCellStyle;
            _resultValue.totalCellStyle = totalCellStyle;
            _resultValue.totalsVisibility = totalsVisibility;
            _resultValue.valueCellStyle = valueCellStyle;
            return _resultValue;
        }
    }
}
