// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLocalDiskResult {
    /**
     * @return Disk identifierE.g., `pci-0000:03:00.0-scsi-0:0:0:0`
     * 
     */
    private String diskId;
    private String diskNode;
    private String diskPath;
    private String gatewayArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String region;

    private GetLocalDiskResult() {}
    /**
     * @return Disk identifierE.g., `pci-0000:03:00.0-scsi-0:0:0:0`
     * 
     */
    public String diskId() {
        return this.diskId;
    }
    public String diskNode() {
        return this.diskNode;
    }
    public String diskPath() {
        return this.diskPath;
    }
    public String gatewayArn() {
        return this.gatewayArn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocalDiskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String diskId;
        private String diskNode;
        private String diskPath;
        private String gatewayArn;
        private String id;
        private String region;
        public Builder() {}
        public Builder(GetLocalDiskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskId = defaults.diskId;
    	      this.diskNode = defaults.diskNode;
    	      this.diskPath = defaults.diskPath;
    	      this.gatewayArn = defaults.gatewayArn;
    	      this.id = defaults.id;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder diskId(String diskId) {
            if (diskId == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "diskId");
            }
            this.diskId = diskId;
            return this;
        }
        @CustomType.Setter
        public Builder diskNode(String diskNode) {
            if (diskNode == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "diskNode");
            }
            this.diskNode = diskNode;
            return this;
        }
        @CustomType.Setter
        public Builder diskPath(String diskPath) {
            if (diskPath == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "diskPath");
            }
            this.diskPath = diskPath;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayArn(String gatewayArn) {
            if (gatewayArn == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "gatewayArn");
            }
            this.gatewayArn = gatewayArn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetLocalDiskResult", "region");
            }
            this.region = region;
            return this;
        }
        public GetLocalDiskResult build() {
            final var _resultValue = new GetLocalDiskResult();
            _resultValue.diskId = diskId;
            _resultValue.diskNode = diskNode;
            _resultValue.diskPath = diskPath;
            _resultValue.gatewayArn = gatewayArn;
            _resultValue.id = id;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
