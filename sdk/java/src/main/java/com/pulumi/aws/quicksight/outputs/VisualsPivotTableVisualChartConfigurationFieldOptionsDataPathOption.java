// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption {
    private List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList> dataPathLists;
    private @Nullable String width;

    private VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption() {}
    public List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList> dataPathLists() {
        return this.dataPathLists;
    }
    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList> dataPathLists;
        private @Nullable String width;
        public Builder() {}
        public Builder(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataPathLists = defaults.dataPathLists;
    	      this.width = defaults.width;
        }

        @CustomType.Setter
        public Builder dataPathLists(List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList> dataPathLists) {
            if (dataPathLists == null) {
              throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption", "dataPathLists");
            }
            this.dataPathLists = dataPathLists;
            return this;
        }
        public Builder dataPathLists(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathList... dataPathLists) {
            return dataPathLists(List.of(dataPathLists));
        }
        @CustomType.Setter
        public Builder width(@Nullable String width) {

            this.width = width;
            return this;
        }
        public VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption build() {
            final var _resultValue = new VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOption();
            _resultValue.dataPathLists = dataPathLists;
            _resultValue.width = width;
            return _resultValue;
        }
    }
}
