// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr;

import com.pulumi.aws.emr.inputs.ManagedScalingPolicyComputeLimitArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ManagedScalingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedScalingPolicyArgs Empty = new ManagedScalingPolicyArgs();

    /**
     * ID of the EMR cluster
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return ID of the EMR cluster
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * Configuration block with compute limit settings. Described below.
     * 
     */
    @Import(name="computeLimits", required=true)
    private Output<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits;

    /**
     * @return Configuration block with compute limit settings. Described below.
     * 
     */
    public Output<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits() {
        return this.computeLimits;
    }

    private ManagedScalingPolicyArgs() {}

    private ManagedScalingPolicyArgs(ManagedScalingPolicyArgs $) {
        this.clusterId = $.clusterId;
        this.computeLimits = $.computeLimits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedScalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedScalingPolicyArgs $;

        public Builder() {
            $ = new ManagedScalingPolicyArgs();
        }

        public Builder(ManagedScalingPolicyArgs defaults) {
            $ = new ManagedScalingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId ID of the EMR cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId ID of the EMR cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param computeLimits Configuration block with compute limit settings. Described below.
         * 
         * @return builder
         * 
         */
        public Builder computeLimits(Output<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits) {
            $.computeLimits = computeLimits;
            return this;
        }

        /**
         * @param computeLimits Configuration block with compute limit settings. Described below.
         * 
         * @return builder
         * 
         */
        public Builder computeLimits(List<ManagedScalingPolicyComputeLimitArgs> computeLimits) {
            return computeLimits(Output.of(computeLimits));
        }

        /**
         * @param computeLimits Configuration block with compute limit settings. Described below.
         * 
         * @return builder
         * 
         */
        public Builder computeLimits(ManagedScalingPolicyComputeLimitArgs... computeLimits) {
            return computeLimits(List.of(computeLimits));
        }

        public ManagedScalingPolicyArgs build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            $.computeLimits = Objects.requireNonNull($.computeLimits, "expected parameter 'computeLimits' to be non-null");
            return $;
        }
    }

}
