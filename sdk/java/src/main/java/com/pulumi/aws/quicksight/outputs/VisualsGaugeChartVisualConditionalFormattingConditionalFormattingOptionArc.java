// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ConditionalFormattingColor;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc {
    private ConditionalFormattingColor foregroundColor;

    private VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc() {}
    public ConditionalFormattingColor foregroundColor() {
        return this.foregroundColor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ConditionalFormattingColor foregroundColor;
        public Builder() {}
        public Builder(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.foregroundColor = defaults.foregroundColor;
        }

        @CustomType.Setter
        public Builder foregroundColor(ConditionalFormattingColor foregroundColor) {
            if (foregroundColor == null) {
              throw new MissingRequiredPropertyException("VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc", "foregroundColor");
            }
            this.foregroundColor = foregroundColor;
            return this;
        }
        public VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc build() {
            final var _resultValue = new VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArc();
            _resultValue.foregroundColor = foregroundColor;
            return _resultValue;
        }
    }
}
