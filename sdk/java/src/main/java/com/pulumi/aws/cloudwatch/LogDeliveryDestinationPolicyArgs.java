// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LogDeliveryDestinationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogDeliveryDestinationPolicyArgs Empty = new LogDeliveryDestinationPolicyArgs();

    /**
     * The name of the delivery destination to assign this policy to.
     * 
     */
    @Import(name="deliveryDestinationName", required=true)
    private Output<String> deliveryDestinationName;

    /**
     * @return The name of the delivery destination to assign this policy to.
     * 
     */
    public Output<String> deliveryDestinationName() {
        return this.deliveryDestinationName;
    }

    /**
     * The contents of the policy.
     * 
     */
    @Import(name="deliveryDestinationPolicy", required=true)
    private Output<String> deliveryDestinationPolicy;

    /**
     * @return The contents of the policy.
     * 
     */
    public Output<String> deliveryDestinationPolicy() {
        return this.deliveryDestinationPolicy;
    }

    private LogDeliveryDestinationPolicyArgs() {}

    private LogDeliveryDestinationPolicyArgs(LogDeliveryDestinationPolicyArgs $) {
        this.deliveryDestinationName = $.deliveryDestinationName;
        this.deliveryDestinationPolicy = $.deliveryDestinationPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDeliveryDestinationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDeliveryDestinationPolicyArgs $;

        public Builder() {
            $ = new LogDeliveryDestinationPolicyArgs();
        }

        public Builder(LogDeliveryDestinationPolicyArgs defaults) {
            $ = new LogDeliveryDestinationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deliveryDestinationName The name of the delivery destination to assign this policy to.
         * 
         * @return builder
         * 
         */
        public Builder deliveryDestinationName(Output<String> deliveryDestinationName) {
            $.deliveryDestinationName = deliveryDestinationName;
            return this;
        }

        /**
         * @param deliveryDestinationName The name of the delivery destination to assign this policy to.
         * 
         * @return builder
         * 
         */
        public Builder deliveryDestinationName(String deliveryDestinationName) {
            return deliveryDestinationName(Output.of(deliveryDestinationName));
        }

        /**
         * @param deliveryDestinationPolicy The contents of the policy.
         * 
         * @return builder
         * 
         */
        public Builder deliveryDestinationPolicy(Output<String> deliveryDestinationPolicy) {
            $.deliveryDestinationPolicy = deliveryDestinationPolicy;
            return this;
        }

        /**
         * @param deliveryDestinationPolicy The contents of the policy.
         * 
         * @return builder
         * 
         */
        public Builder deliveryDestinationPolicy(String deliveryDestinationPolicy) {
            return deliveryDestinationPolicy(Output.of(deliveryDestinationPolicy));
        }

        public LogDeliveryDestinationPolicyArgs build() {
            if ($.deliveryDestinationName == null) {
                throw new MissingRequiredPropertyException("LogDeliveryDestinationPolicyArgs", "deliveryDestinationName");
            }
            if ($.deliveryDestinationPolicy == null) {
                throw new MissingRequiredPropertyException("LogDeliveryDestinationPolicyArgs", "deliveryDestinationPolicy");
            }
            return $;
        }
    }

}
