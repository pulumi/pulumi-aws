// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.aws.appsync.inputs.SourceApiAssociationSourceApiAssociationConfigArgs;
import com.pulumi.aws.appsync.inputs.SourceApiAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceApiAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceApiAssociationArgs Empty = new SourceApiAssociationArgs();

    /**
     * Description of the source API being merged.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the source API being merged.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ARN of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
     * 
     */
    @Import(name="mergedApiArn")
    private @Nullable Output<String> mergedApiArn;

    /**
     * @return ARN of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
     * 
     */
    public Optional<Output<String>> mergedApiArn() {
        return Optional.ofNullable(this.mergedApiArn);
    }

    /**
     * ID of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
     * 
     */
    @Import(name="mergedApiId")
    private @Nullable Output<String> mergedApiId;

    /**
     * @return ID of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
     * 
     */
    public Optional<Output<String>> mergedApiId() {
        return Optional.ofNullable(this.mergedApiId);
    }

    /**
     * ARN of the source API. One of `source_api_arn` or `source_api_id` must be specified.
     * 
     */
    @Import(name="sourceApiArn")
    private @Nullable Output<String> sourceApiArn;

    /**
     * @return ARN of the source API. One of `source_api_arn` or `source_api_id` must be specified.
     * 
     */
    public Optional<Output<String>> sourceApiArn() {
        return Optional.ofNullable(this.sourceApiArn);
    }

    @Import(name="sourceApiAssociationConfigs")
    private @Nullable Output<List<SourceApiAssociationSourceApiAssociationConfigArgs>> sourceApiAssociationConfigs;

    public Optional<Output<List<SourceApiAssociationSourceApiAssociationConfigArgs>>> sourceApiAssociationConfigs() {
        return Optional.ofNullable(this.sourceApiAssociationConfigs);
    }

    /**
     * ID of the source API. One of `source_api_arn` or `source_api_id` must be specified.
     * 
     */
    @Import(name="sourceApiId")
    private @Nullable Output<String> sourceApiId;

    /**
     * @return ID of the source API. One of `source_api_arn` or `source_api_id` must be specified.
     * 
     */
    public Optional<Output<String>> sourceApiId() {
        return Optional.ofNullable(this.sourceApiId);
    }

    @Import(name="timeouts")
    private @Nullable Output<SourceApiAssociationTimeoutsArgs> timeouts;

    public Optional<Output<SourceApiAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private SourceApiAssociationArgs() {}

    private SourceApiAssociationArgs(SourceApiAssociationArgs $) {
        this.description = $.description;
        this.mergedApiArn = $.mergedApiArn;
        this.mergedApiId = $.mergedApiId;
        this.sourceApiArn = $.sourceApiArn;
        this.sourceApiAssociationConfigs = $.sourceApiAssociationConfigs;
        this.sourceApiId = $.sourceApiId;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceApiAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceApiAssociationArgs $;

        public Builder() {
            $ = new SourceApiAssociationArgs();
        }

        public Builder(SourceApiAssociationArgs defaults) {
            $ = new SourceApiAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the source API being merged.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the source API being merged.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param mergedApiArn ARN of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder mergedApiArn(@Nullable Output<String> mergedApiArn) {
            $.mergedApiArn = mergedApiArn;
            return this;
        }

        /**
         * @param mergedApiArn ARN of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder mergedApiArn(String mergedApiArn) {
            return mergedApiArn(Output.of(mergedApiArn));
        }

        /**
         * @param mergedApiId ID of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder mergedApiId(@Nullable Output<String> mergedApiId) {
            $.mergedApiId = mergedApiId;
            return this;
        }

        /**
         * @param mergedApiId ID of the merged API. One of `merged_api_arn` or `merged_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder mergedApiId(String mergedApiId) {
            return mergedApiId(Output.of(mergedApiId));
        }

        /**
         * @param sourceApiArn ARN of the source API. One of `source_api_arn` or `source_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiArn(@Nullable Output<String> sourceApiArn) {
            $.sourceApiArn = sourceApiArn;
            return this;
        }

        /**
         * @param sourceApiArn ARN of the source API. One of `source_api_arn` or `source_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiArn(String sourceApiArn) {
            return sourceApiArn(Output.of(sourceApiArn));
        }

        public Builder sourceApiAssociationConfigs(@Nullable Output<List<SourceApiAssociationSourceApiAssociationConfigArgs>> sourceApiAssociationConfigs) {
            $.sourceApiAssociationConfigs = sourceApiAssociationConfigs;
            return this;
        }

        public Builder sourceApiAssociationConfigs(List<SourceApiAssociationSourceApiAssociationConfigArgs> sourceApiAssociationConfigs) {
            return sourceApiAssociationConfigs(Output.of(sourceApiAssociationConfigs));
        }

        public Builder sourceApiAssociationConfigs(SourceApiAssociationSourceApiAssociationConfigArgs... sourceApiAssociationConfigs) {
            return sourceApiAssociationConfigs(List.of(sourceApiAssociationConfigs));
        }

        /**
         * @param sourceApiId ID of the source API. One of `source_api_arn` or `source_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiId(@Nullable Output<String> sourceApiId) {
            $.sourceApiId = sourceApiId;
            return this;
        }

        /**
         * @param sourceApiId ID of the source API. One of `source_api_arn` or `source_api_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiId(String sourceApiId) {
            return sourceApiId(Output.of(sourceApiId));
        }

        public Builder timeouts(@Nullable Output<SourceApiAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(SourceApiAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public SourceApiAssociationArgs build() {
            return $;
        }
    }

}
