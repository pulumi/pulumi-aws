// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeAgentRuntimeArtifactArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeAuthorizerConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeLifecycleConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeNetworkConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeProtocolConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeRequestHeaderConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeTimeoutsArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreAgentRuntimeWorkloadIdentityDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreAgentRuntimeState extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreAgentRuntimeState Empty = new AgentcoreAgentRuntimeState();

    /**
     * ARN of the Agent Runtime.
     * 
     */
    @Import(name="agentRuntimeArn")
    private @Nullable Output<String> agentRuntimeArn;

    /**
     * @return ARN of the Agent Runtime.
     * 
     */
    public Optional<Output<String>> agentRuntimeArn() {
        return Optional.ofNullable(this.agentRuntimeArn);
    }

    /**
     * Container artifact configuration. See `agentRuntimeArtifact` below.
     * 
     */
    @Import(name="agentRuntimeArtifact")
    private @Nullable Output<AgentcoreAgentRuntimeAgentRuntimeArtifactArgs> agentRuntimeArtifact;

    /**
     * @return Container artifact configuration. See `agentRuntimeArtifact` below.
     * 
     */
    public Optional<Output<AgentcoreAgentRuntimeAgentRuntimeArtifactArgs>> agentRuntimeArtifact() {
        return Optional.ofNullable(this.agentRuntimeArtifact);
    }

    /**
     * Unique identifier of the Agent Runtime.
     * 
     */
    @Import(name="agentRuntimeId")
    private @Nullable Output<String> agentRuntimeId;

    /**
     * @return Unique identifier of the Agent Runtime.
     * 
     */
    public Optional<Output<String>> agentRuntimeId() {
        return Optional.ofNullable(this.agentRuntimeId);
    }

    /**
     * Name of the agent runtime.
     * 
     */
    @Import(name="agentRuntimeName")
    private @Nullable Output<String> agentRuntimeName;

    /**
     * @return Name of the agent runtime.
     * 
     */
    public Optional<Output<String>> agentRuntimeName() {
        return Optional.ofNullable(this.agentRuntimeName);
    }

    /**
     * Version of the Agent Runtime.
     * 
     */
    @Import(name="agentRuntimeVersion")
    private @Nullable Output<String> agentRuntimeVersion;

    /**
     * @return Version of the Agent Runtime.
     * 
     */
    public Optional<Output<String>> agentRuntimeVersion() {
        return Optional.ofNullable(this.agentRuntimeVersion);
    }

    /**
     * Authorization configuration for authenticating incoming requests. See `authorizerConfiguration` below.
     * 
     */
    @Import(name="authorizerConfiguration")
    private @Nullable Output<AgentcoreAgentRuntimeAuthorizerConfigurationArgs> authorizerConfiguration;

    /**
     * @return Authorization configuration for authenticating incoming requests. See `authorizerConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreAgentRuntimeAuthorizerConfigurationArgs>> authorizerConfiguration() {
        return Optional.ofNullable(this.authorizerConfiguration);
    }

    /**
     * Description of the agent runtime.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the agent runtime.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Map of environment variables to pass to the container.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,String>> environmentVariables;

    /**
     * @return Map of environment variables to pass to the container.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Runtime session and resource lifecycle configuration for the agent runtime. See `lifecycleConfiguration` below.
     * 
     */
    @Import(name="lifecycleConfigurations")
    private @Nullable Output<List<AgentcoreAgentRuntimeLifecycleConfigurationArgs>> lifecycleConfigurations;

    /**
     * @return Runtime session and resource lifecycle configuration for the agent runtime. See `lifecycleConfiguration` below.
     * 
     */
    public Optional<Output<List<AgentcoreAgentRuntimeLifecycleConfigurationArgs>>> lifecycleConfigurations() {
        return Optional.ofNullable(this.lifecycleConfigurations);
    }

    /**
     * Network configuration for the agent runtime. See `networkConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable Output<AgentcoreAgentRuntimeNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return Network configuration for the agent runtime. See `networkConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<AgentcoreAgentRuntimeNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * Protocol configuration for the agent runtime. See `protocolConfiguration` below.
     * 
     */
    @Import(name="protocolConfiguration")
    private @Nullable Output<AgentcoreAgentRuntimeProtocolConfigurationArgs> protocolConfiguration;

    /**
     * @return Protocol configuration for the agent runtime. See `protocolConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreAgentRuntimeProtocolConfigurationArgs>> protocolConfiguration() {
        return Optional.ofNullable(this.protocolConfiguration);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Configuration for HTTP request headers that will be passed through to the runtime. See `requestHeaderConfiguration` below.
     * 
     */
    @Import(name="requestHeaderConfiguration")
    private @Nullable Output<AgentcoreAgentRuntimeRequestHeaderConfigurationArgs> requestHeaderConfiguration;

    /**
     * @return Configuration for HTTP request headers that will be passed through to the runtime. See `requestHeaderConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreAgentRuntimeRequestHeaderConfigurationArgs>> requestHeaderConfiguration() {
        return Optional.ofNullable(this.requestHeaderConfiguration);
    }

    /**
     * ARN of the IAM role that the agent runtime assumes to access AWS services.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return ARN of the IAM role that the agent runtime assumes to access AWS services.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentcoreAgentRuntimeTimeoutsArgs> timeouts;

    public Optional<Output<AgentcoreAgentRuntimeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Workload identity details for the agent runtime. See `workloadIdentityDetails` below.
     * 
     */
    @Import(name="workloadIdentityDetails")
    private @Nullable Output<List<AgentcoreAgentRuntimeWorkloadIdentityDetailArgs>> workloadIdentityDetails;

    /**
     * @return Workload identity details for the agent runtime. See `workloadIdentityDetails` below.
     * 
     */
    public Optional<Output<List<AgentcoreAgentRuntimeWorkloadIdentityDetailArgs>>> workloadIdentityDetails() {
        return Optional.ofNullable(this.workloadIdentityDetails);
    }

    private AgentcoreAgentRuntimeState() {}

    private AgentcoreAgentRuntimeState(AgentcoreAgentRuntimeState $) {
        this.agentRuntimeArn = $.agentRuntimeArn;
        this.agentRuntimeArtifact = $.agentRuntimeArtifact;
        this.agentRuntimeId = $.agentRuntimeId;
        this.agentRuntimeName = $.agentRuntimeName;
        this.agentRuntimeVersion = $.agentRuntimeVersion;
        this.authorizerConfiguration = $.authorizerConfiguration;
        this.description = $.description;
        this.environmentVariables = $.environmentVariables;
        this.lifecycleConfigurations = $.lifecycleConfigurations;
        this.networkConfiguration = $.networkConfiguration;
        this.protocolConfiguration = $.protocolConfiguration;
        this.region = $.region;
        this.requestHeaderConfiguration = $.requestHeaderConfiguration;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.workloadIdentityDetails = $.workloadIdentityDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreAgentRuntimeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreAgentRuntimeState $;

        public Builder() {
            $ = new AgentcoreAgentRuntimeState();
        }

        public Builder(AgentcoreAgentRuntimeState defaults) {
            $ = new AgentcoreAgentRuntimeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentRuntimeArn ARN of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeArn(@Nullable Output<String> agentRuntimeArn) {
            $.agentRuntimeArn = agentRuntimeArn;
            return this;
        }

        /**
         * @param agentRuntimeArn ARN of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeArn(String agentRuntimeArn) {
            return agentRuntimeArn(Output.of(agentRuntimeArn));
        }

        /**
         * @param agentRuntimeArtifact Container artifact configuration. See `agentRuntimeArtifact` below.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeArtifact(@Nullable Output<AgentcoreAgentRuntimeAgentRuntimeArtifactArgs> agentRuntimeArtifact) {
            $.agentRuntimeArtifact = agentRuntimeArtifact;
            return this;
        }

        /**
         * @param agentRuntimeArtifact Container artifact configuration. See `agentRuntimeArtifact` below.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeArtifact(AgentcoreAgentRuntimeAgentRuntimeArtifactArgs agentRuntimeArtifact) {
            return agentRuntimeArtifact(Output.of(agentRuntimeArtifact));
        }

        /**
         * @param agentRuntimeId Unique identifier of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeId(@Nullable Output<String> agentRuntimeId) {
            $.agentRuntimeId = agentRuntimeId;
            return this;
        }

        /**
         * @param agentRuntimeId Unique identifier of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeId(String agentRuntimeId) {
            return agentRuntimeId(Output.of(agentRuntimeId));
        }

        /**
         * @param agentRuntimeName Name of the agent runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeName(@Nullable Output<String> agentRuntimeName) {
            $.agentRuntimeName = agentRuntimeName;
            return this;
        }

        /**
         * @param agentRuntimeName Name of the agent runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeName(String agentRuntimeName) {
            return agentRuntimeName(Output.of(agentRuntimeName));
        }

        /**
         * @param agentRuntimeVersion Version of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeVersion(@Nullable Output<String> agentRuntimeVersion) {
            $.agentRuntimeVersion = agentRuntimeVersion;
            return this;
        }

        /**
         * @param agentRuntimeVersion Version of the Agent Runtime.
         * 
         * @return builder
         * 
         */
        public Builder agentRuntimeVersion(String agentRuntimeVersion) {
            return agentRuntimeVersion(Output.of(agentRuntimeVersion));
        }

        /**
         * @param authorizerConfiguration Authorization configuration for authenticating incoming requests. See `authorizerConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder authorizerConfiguration(@Nullable Output<AgentcoreAgentRuntimeAuthorizerConfigurationArgs> authorizerConfiguration) {
            $.authorizerConfiguration = authorizerConfiguration;
            return this;
        }

        /**
         * @param authorizerConfiguration Authorization configuration for authenticating incoming requests. See `authorizerConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder authorizerConfiguration(AgentcoreAgentRuntimeAuthorizerConfigurationArgs authorizerConfiguration) {
            return authorizerConfiguration(Output.of(authorizerConfiguration));
        }

        /**
         * @param description Description of the agent runtime.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the agent runtime.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param environmentVariables Map of environment variables to pass to the container.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Map of environment variables to pass to the container.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,String> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param lifecycleConfigurations Runtime session and resource lifecycle configuration for the agent runtime. See `lifecycleConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleConfigurations(@Nullable Output<List<AgentcoreAgentRuntimeLifecycleConfigurationArgs>> lifecycleConfigurations) {
            $.lifecycleConfigurations = lifecycleConfigurations;
            return this;
        }

        /**
         * @param lifecycleConfigurations Runtime session and resource lifecycle configuration for the agent runtime. See `lifecycleConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleConfigurations(List<AgentcoreAgentRuntimeLifecycleConfigurationArgs> lifecycleConfigurations) {
            return lifecycleConfigurations(Output.of(lifecycleConfigurations));
        }

        /**
         * @param lifecycleConfigurations Runtime session and resource lifecycle configuration for the agent runtime. See `lifecycleConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleConfigurations(AgentcoreAgentRuntimeLifecycleConfigurationArgs... lifecycleConfigurations) {
            return lifecycleConfigurations(List.of(lifecycleConfigurations));
        }

        /**
         * @param networkConfiguration Network configuration for the agent runtime. See `networkConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(@Nullable Output<AgentcoreAgentRuntimeNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration Network configuration for the agent runtime. See `networkConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(AgentcoreAgentRuntimeNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param protocolConfiguration Protocol configuration for the agent runtime. See `protocolConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder protocolConfiguration(@Nullable Output<AgentcoreAgentRuntimeProtocolConfigurationArgs> protocolConfiguration) {
            $.protocolConfiguration = protocolConfiguration;
            return this;
        }

        /**
         * @param protocolConfiguration Protocol configuration for the agent runtime. See `protocolConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder protocolConfiguration(AgentcoreAgentRuntimeProtocolConfigurationArgs protocolConfiguration) {
            return protocolConfiguration(Output.of(protocolConfiguration));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param requestHeaderConfiguration Configuration for HTTP request headers that will be passed through to the runtime. See `requestHeaderConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeaderConfiguration(@Nullable Output<AgentcoreAgentRuntimeRequestHeaderConfigurationArgs> requestHeaderConfiguration) {
            $.requestHeaderConfiguration = requestHeaderConfiguration;
            return this;
        }

        /**
         * @param requestHeaderConfiguration Configuration for HTTP request headers that will be passed through to the runtime. See `requestHeaderConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeaderConfiguration(AgentcoreAgentRuntimeRequestHeaderConfigurationArgs requestHeaderConfiguration) {
            return requestHeaderConfiguration(Output.of(requestHeaderConfiguration));
        }

        /**
         * @param roleArn ARN of the IAM role that the agent runtime assumes to access AWS services.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn ARN of the IAM role that the agent runtime assumes to access AWS services.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<AgentcoreAgentRuntimeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentcoreAgentRuntimeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the agent runtime. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(@Nullable Output<List<AgentcoreAgentRuntimeWorkloadIdentityDetailArgs>> workloadIdentityDetails) {
            $.workloadIdentityDetails = workloadIdentityDetails;
            return this;
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the agent runtime. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(List<AgentcoreAgentRuntimeWorkloadIdentityDetailArgs> workloadIdentityDetails) {
            return workloadIdentityDetails(Output.of(workloadIdentityDetails));
        }

        /**
         * @param workloadIdentityDetails Workload identity details for the agent runtime. See `workloadIdentityDetails` below.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityDetails(AgentcoreAgentRuntimeWorkloadIdentityDetailArgs... workloadIdentityDetails) {
            return workloadIdentityDetails(List.of(workloadIdentityDetails));
        }

        public AgentcoreAgentRuntimeState build() {
            return $;
        }
    }

}
