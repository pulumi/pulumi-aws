// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetThemeConfigurationDataColorPalette {
    /**
     * @return List of hexadecimal codes for the colors. Minimum of 8 items and maximum of 20 items.
     * 
     */
    private List<String> colors;
    /**
     * @return The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
     * 
     */
    private String emptyFillColor;
    /**
     * @return The minimum and maximum hexadecimal codes that describe a color gradient. List of exactly 2 items.
     * 
     */
    private List<String> minMaxGradients;

    private GetThemeConfigurationDataColorPalette() {}
    /**
     * @return List of hexadecimal codes for the colors. Minimum of 8 items and maximum of 20 items.
     * 
     */
    public List<String> colors() {
        return this.colors;
    }
    /**
     * @return The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
     * 
     */
    public String emptyFillColor() {
        return this.emptyFillColor;
    }
    /**
     * @return The minimum and maximum hexadecimal codes that describe a color gradient. List of exactly 2 items.
     * 
     */
    public List<String> minMaxGradients() {
        return this.minMaxGradients;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetThemeConfigurationDataColorPalette defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> colors;
        private String emptyFillColor;
        private List<String> minMaxGradients;
        public Builder() {}
        public Builder(GetThemeConfigurationDataColorPalette defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colors = defaults.colors;
    	      this.emptyFillColor = defaults.emptyFillColor;
    	      this.minMaxGradients = defaults.minMaxGradients;
        }

        @CustomType.Setter
        public Builder colors(List<String> colors) {
            this.colors = Objects.requireNonNull(colors);
            return this;
        }
        public Builder colors(String... colors) {
            return colors(List.of(colors));
        }
        @CustomType.Setter
        public Builder emptyFillColor(String emptyFillColor) {
            this.emptyFillColor = Objects.requireNonNull(emptyFillColor);
            return this;
        }
        @CustomType.Setter
        public Builder minMaxGradients(List<String> minMaxGradients) {
            this.minMaxGradients = Objects.requireNonNull(minMaxGradients);
            return this;
        }
        public Builder minMaxGradients(String... minMaxGradients) {
            return minMaxGradients(List.of(minMaxGradients));
        }
        public GetThemeConfigurationDataColorPalette build() {
            final var _resultValue = new GetThemeConfigurationDataColorPalette();
            _resultValue.colors = colors;
            _resultValue.emptyFillColor = emptyFillColor;
            _resultValue.minMaxGradients = minMaxGradients;
            return _resultValue;
        }
    }
}
