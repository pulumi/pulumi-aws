// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex;

import com.pulumi.aws.lex.inputs.IntentConclusionStatementArgs;
import com.pulumi.aws.lex.inputs.IntentConfirmationPromptArgs;
import com.pulumi.aws.lex.inputs.IntentDialogCodeHookArgs;
import com.pulumi.aws.lex.inputs.IntentFollowUpPromptArgs;
import com.pulumi.aws.lex.inputs.IntentFulfillmentActivityArgs;
import com.pulumi.aws.lex.inputs.IntentRejectionStatementArgs;
import com.pulumi.aws.lex.inputs.IntentSlotArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntentArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntentArgs Empty = new IntentArgs();

    @Import(name="conclusionStatement")
    private @Nullable Output<IntentConclusionStatementArgs> conclusionStatement;

    public Optional<Output<IntentConclusionStatementArgs>> conclusionStatement() {
        return Optional.ofNullable(this.conclusionStatement);
    }

    @Import(name="confirmationPrompt")
    private @Nullable Output<IntentConfirmationPromptArgs> confirmationPrompt;

    public Optional<Output<IntentConfirmationPromptArgs>> confirmationPrompt() {
        return Optional.ofNullable(this.confirmationPrompt);
    }

    @Import(name="createVersion")
    private @Nullable Output<Boolean> createVersion;

    public Optional<Output<Boolean>> createVersion() {
        return Optional.ofNullable(this.createVersion);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="dialogCodeHook")
    private @Nullable Output<IntentDialogCodeHookArgs> dialogCodeHook;

    public Optional<Output<IntentDialogCodeHookArgs>> dialogCodeHook() {
        return Optional.ofNullable(this.dialogCodeHook);
    }

    @Import(name="followUpPrompt")
    private @Nullable Output<IntentFollowUpPromptArgs> followUpPrompt;

    public Optional<Output<IntentFollowUpPromptArgs>> followUpPrompt() {
        return Optional.ofNullable(this.followUpPrompt);
    }

    @Import(name="fulfillmentActivity", required=true)
    private Output<IntentFulfillmentActivityArgs> fulfillmentActivity;

    public Output<IntentFulfillmentActivityArgs> fulfillmentActivity() {
        return this.fulfillmentActivity;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parentIntentSignature")
    private @Nullable Output<String> parentIntentSignature;

    public Optional<Output<String>> parentIntentSignature() {
        return Optional.ofNullable(this.parentIntentSignature);
    }

    @Import(name="rejectionStatement")
    private @Nullable Output<IntentRejectionStatementArgs> rejectionStatement;

    public Optional<Output<IntentRejectionStatementArgs>> rejectionStatement() {
        return Optional.ofNullable(this.rejectionStatement);
    }

    @Import(name="sampleUtterances")
    private @Nullable Output<List<String>> sampleUtterances;

    public Optional<Output<List<String>>> sampleUtterances() {
        return Optional.ofNullable(this.sampleUtterances);
    }

    @Import(name="slots")
    private @Nullable Output<List<IntentSlotArgs>> slots;

    public Optional<Output<List<IntentSlotArgs>>> slots() {
        return Optional.ofNullable(this.slots);
    }

    private IntentArgs() {}

    private IntentArgs(IntentArgs $) {
        this.conclusionStatement = $.conclusionStatement;
        this.confirmationPrompt = $.confirmationPrompt;
        this.createVersion = $.createVersion;
        this.description = $.description;
        this.dialogCodeHook = $.dialogCodeHook;
        this.followUpPrompt = $.followUpPrompt;
        this.fulfillmentActivity = $.fulfillmentActivity;
        this.name = $.name;
        this.parentIntentSignature = $.parentIntentSignature;
        this.rejectionStatement = $.rejectionStatement;
        this.sampleUtterances = $.sampleUtterances;
        this.slots = $.slots;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntentArgs $;

        public Builder() {
            $ = new IntentArgs();
        }

        public Builder(IntentArgs defaults) {
            $ = new IntentArgs(Objects.requireNonNull(defaults));
        }

        public Builder conclusionStatement(@Nullable Output<IntentConclusionStatementArgs> conclusionStatement) {
            $.conclusionStatement = conclusionStatement;
            return this;
        }

        public Builder conclusionStatement(IntentConclusionStatementArgs conclusionStatement) {
            return conclusionStatement(Output.of(conclusionStatement));
        }

        public Builder confirmationPrompt(@Nullable Output<IntentConfirmationPromptArgs> confirmationPrompt) {
            $.confirmationPrompt = confirmationPrompt;
            return this;
        }

        public Builder confirmationPrompt(IntentConfirmationPromptArgs confirmationPrompt) {
            return confirmationPrompt(Output.of(confirmationPrompt));
        }

        public Builder createVersion(@Nullable Output<Boolean> createVersion) {
            $.createVersion = createVersion;
            return this;
        }

        public Builder createVersion(Boolean createVersion) {
            return createVersion(Output.of(createVersion));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder dialogCodeHook(@Nullable Output<IntentDialogCodeHookArgs> dialogCodeHook) {
            $.dialogCodeHook = dialogCodeHook;
            return this;
        }

        public Builder dialogCodeHook(IntentDialogCodeHookArgs dialogCodeHook) {
            return dialogCodeHook(Output.of(dialogCodeHook));
        }

        public Builder followUpPrompt(@Nullable Output<IntentFollowUpPromptArgs> followUpPrompt) {
            $.followUpPrompt = followUpPrompt;
            return this;
        }

        public Builder followUpPrompt(IntentFollowUpPromptArgs followUpPrompt) {
            return followUpPrompt(Output.of(followUpPrompt));
        }

        public Builder fulfillmentActivity(Output<IntentFulfillmentActivityArgs> fulfillmentActivity) {
            $.fulfillmentActivity = fulfillmentActivity;
            return this;
        }

        public Builder fulfillmentActivity(IntentFulfillmentActivityArgs fulfillmentActivity) {
            return fulfillmentActivity(Output.of(fulfillmentActivity));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parentIntentSignature(@Nullable Output<String> parentIntentSignature) {
            $.parentIntentSignature = parentIntentSignature;
            return this;
        }

        public Builder parentIntentSignature(String parentIntentSignature) {
            return parentIntentSignature(Output.of(parentIntentSignature));
        }

        public Builder rejectionStatement(@Nullable Output<IntentRejectionStatementArgs> rejectionStatement) {
            $.rejectionStatement = rejectionStatement;
            return this;
        }

        public Builder rejectionStatement(IntentRejectionStatementArgs rejectionStatement) {
            return rejectionStatement(Output.of(rejectionStatement));
        }

        public Builder sampleUtterances(@Nullable Output<List<String>> sampleUtterances) {
            $.sampleUtterances = sampleUtterances;
            return this;
        }

        public Builder sampleUtterances(List<String> sampleUtterances) {
            return sampleUtterances(Output.of(sampleUtterances));
        }

        public Builder sampleUtterances(String... sampleUtterances) {
            return sampleUtterances(List.of(sampleUtterances));
        }

        public Builder slots(@Nullable Output<List<IntentSlotArgs>> slots) {
            $.slots = slots;
            return this;
        }

        public Builder slots(List<IntentSlotArgs> slots) {
            return slots(Output.of(slots));
        }

        public Builder slots(IntentSlotArgs... slots) {
            return slots(List.of(slots));
        }

        public IntentArgs build() {
            $.fulfillmentActivity = Objects.requireNonNull($.fulfillmentActivity, "expected parameter 'fulfillmentActivity' to be non-null");
            return $;
        }
    }

}
