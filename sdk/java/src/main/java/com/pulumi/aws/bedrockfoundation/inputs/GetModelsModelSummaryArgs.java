// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockfoundation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetModelsModelSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetModelsModelSummaryArgs Empty = new GetModelsModelSummaryArgs();

    /**
     * Customizations that the model supports.
     * 
     */
    @Import(name="customizationsSupporteds")
    private @Nullable Output<List<String>> customizationsSupporteds;

    /**
     * @return Customizations that the model supports.
     * 
     */
    public Optional<Output<List<String>>> customizationsSupporteds() {
        return Optional.ofNullable(this.customizationsSupporteds);
    }

    /**
     * Inference types that the model supports.
     * 
     */
    @Import(name="inferenceTypesSupporteds")
    private @Nullable Output<List<String>> inferenceTypesSupporteds;

    /**
     * @return Inference types that the model supports.
     * 
     */
    public Optional<Output<List<String>>> inferenceTypesSupporteds() {
        return Optional.ofNullable(this.inferenceTypesSupporteds);
    }

    /**
     * Input modalities that the model supports.
     * 
     */
    @Import(name="inputModalities")
    private @Nullable Output<List<String>> inputModalities;

    /**
     * @return Input modalities that the model supports.
     * 
     */
    public Optional<Output<List<String>>> inputModalities() {
        return Optional.ofNullable(this.inputModalities);
    }

    /**
     * Model ARN.
     * 
     */
    @Import(name="modelArn")
    private @Nullable Output<String> modelArn;

    /**
     * @return Model ARN.
     * 
     */
    public Optional<Output<String>> modelArn() {
        return Optional.ofNullable(this.modelArn);
    }

    /**
     * Model identifier.
     * 
     */
    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    /**
     * @return Model identifier.
     * 
     */
    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    /**
     * Model name.
     * 
     */
    @Import(name="modelName")
    private @Nullable Output<String> modelName;

    /**
     * @return Model name.
     * 
     */
    public Optional<Output<String>> modelName() {
        return Optional.ofNullable(this.modelName);
    }

    /**
     * Output modalities that the model supports.
     * 
     */
    @Import(name="outputModalities")
    private @Nullable Output<List<String>> outputModalities;

    /**
     * @return Output modalities that the model supports.
     * 
     */
    public Optional<Output<List<String>>> outputModalities() {
        return Optional.ofNullable(this.outputModalities);
    }

    /**
     * Model provider name.
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return Model provider name.
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * Indicates whether the model supports streaming.
     * 
     */
    @Import(name="responseStreamingSupported")
    private @Nullable Output<Boolean> responseStreamingSupported;

    /**
     * @return Indicates whether the model supports streaming.
     * 
     */
    public Optional<Output<Boolean>> responseStreamingSupported() {
        return Optional.ofNullable(this.responseStreamingSupported);
    }

    private GetModelsModelSummaryArgs() {}

    private GetModelsModelSummaryArgs(GetModelsModelSummaryArgs $) {
        this.customizationsSupporteds = $.customizationsSupporteds;
        this.inferenceTypesSupporteds = $.inferenceTypesSupporteds;
        this.inputModalities = $.inputModalities;
        this.modelArn = $.modelArn;
        this.modelId = $.modelId;
        this.modelName = $.modelName;
        this.outputModalities = $.outputModalities;
        this.providerName = $.providerName;
        this.responseStreamingSupported = $.responseStreamingSupported;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetModelsModelSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetModelsModelSummaryArgs $;

        public Builder() {
            $ = new GetModelsModelSummaryArgs();
        }

        public Builder(GetModelsModelSummaryArgs defaults) {
            $ = new GetModelsModelSummaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customizationsSupporteds Customizations that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder customizationsSupporteds(@Nullable Output<List<String>> customizationsSupporteds) {
            $.customizationsSupporteds = customizationsSupporteds;
            return this;
        }

        /**
         * @param customizationsSupporteds Customizations that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder customizationsSupporteds(List<String> customizationsSupporteds) {
            return customizationsSupporteds(Output.of(customizationsSupporteds));
        }

        /**
         * @param customizationsSupporteds Customizations that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder customizationsSupporteds(String... customizationsSupporteds) {
            return customizationsSupporteds(List.of(customizationsSupporteds));
        }

        /**
         * @param inferenceTypesSupporteds Inference types that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inferenceTypesSupporteds(@Nullable Output<List<String>> inferenceTypesSupporteds) {
            $.inferenceTypesSupporteds = inferenceTypesSupporteds;
            return this;
        }

        /**
         * @param inferenceTypesSupporteds Inference types that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inferenceTypesSupporteds(List<String> inferenceTypesSupporteds) {
            return inferenceTypesSupporteds(Output.of(inferenceTypesSupporteds));
        }

        /**
         * @param inferenceTypesSupporteds Inference types that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inferenceTypesSupporteds(String... inferenceTypesSupporteds) {
            return inferenceTypesSupporteds(List.of(inferenceTypesSupporteds));
        }

        /**
         * @param inputModalities Input modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inputModalities(@Nullable Output<List<String>> inputModalities) {
            $.inputModalities = inputModalities;
            return this;
        }

        /**
         * @param inputModalities Input modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inputModalities(List<String> inputModalities) {
            return inputModalities(Output.of(inputModalities));
        }

        /**
         * @param inputModalities Input modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder inputModalities(String... inputModalities) {
            return inputModalities(List.of(inputModalities));
        }

        /**
         * @param modelArn Model ARN.
         * 
         * @return builder
         * 
         */
        public Builder modelArn(@Nullable Output<String> modelArn) {
            $.modelArn = modelArn;
            return this;
        }

        /**
         * @param modelArn Model ARN.
         * 
         * @return builder
         * 
         */
        public Builder modelArn(String modelArn) {
            return modelArn(Output.of(modelArn));
        }

        /**
         * @param modelId Model identifier.
         * 
         * @return builder
         * 
         */
        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId Model identifier.
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        /**
         * @param modelName Model name.
         * 
         * @return builder
         * 
         */
        public Builder modelName(@Nullable Output<String> modelName) {
            $.modelName = modelName;
            return this;
        }

        /**
         * @param modelName Model name.
         * 
         * @return builder
         * 
         */
        public Builder modelName(String modelName) {
            return modelName(Output.of(modelName));
        }

        /**
         * @param outputModalities Output modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder outputModalities(@Nullable Output<List<String>> outputModalities) {
            $.outputModalities = outputModalities;
            return this;
        }

        /**
         * @param outputModalities Output modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder outputModalities(List<String> outputModalities) {
            return outputModalities(Output.of(outputModalities));
        }

        /**
         * @param outputModalities Output modalities that the model supports.
         * 
         * @return builder
         * 
         */
        public Builder outputModalities(String... outputModalities) {
            return outputModalities(List.of(outputModalities));
        }

        /**
         * @param providerName Model provider name.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Model provider name.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param responseStreamingSupported Indicates whether the model supports streaming.
         * 
         * @return builder
         * 
         */
        public Builder responseStreamingSupported(@Nullable Output<Boolean> responseStreamingSupported) {
            $.responseStreamingSupported = responseStreamingSupported;
            return this;
        }

        /**
         * @param responseStreamingSupported Indicates whether the model supports streaming.
         * 
         * @return builder
         * 
         */
        public Builder responseStreamingSupported(Boolean responseStreamingSupported) {
            return responseStreamingSupported(Output.of(responseStreamingSupported));
        }

        public GetModelsModelSummaryArgs build() {
            return $;
        }
    }

}
