// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RoleAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleAssociationArgs Empty = new RoleAssociationArgs();

    /**
     * DB Instance Identifier to associate with the IAM Role.
     * 
     */
    @Import(name="dbInstanceIdentifier", required=true)
    private Output<String> dbInstanceIdentifier;

    /**
     * @return DB Instance Identifier to associate with the IAM Role.
     * 
     */
    public Output<String> dbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }

    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     * 
     */
    @Import(name="featureName", required=true)
    private Output<String> featureName;

    /**
     * @return Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     * 
     */
    public Output<String> featureName() {
        return this.featureName;
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private RoleAssociationArgs() {}

    private RoleAssociationArgs(RoleAssociationArgs $) {
        this.dbInstanceIdentifier = $.dbInstanceIdentifier;
        this.featureName = $.featureName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleAssociationArgs $;

        public Builder() {
            $ = new RoleAssociationArgs();
        }

        public Builder(RoleAssociationArgs defaults) {
            $ = new RoleAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbInstanceIdentifier DB Instance Identifier to associate with the IAM Role.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIdentifier(Output<String> dbInstanceIdentifier) {
            $.dbInstanceIdentifier = dbInstanceIdentifier;
            return this;
        }

        /**
         * @param dbInstanceIdentifier DB Instance Identifier to associate with the IAM Role.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIdentifier(String dbInstanceIdentifier) {
            return dbInstanceIdentifier(Output.of(dbInstanceIdentifier));
        }

        /**
         * @param featureName Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
         * 
         * @return builder
         * 
         */
        public Builder featureName(Output<String> featureName) {
            $.featureName = featureName;
            return this;
        }

        /**
         * @param featureName Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
         * 
         * @return builder
         * 
         */
        public Builder featureName(String featureName) {
            return featureName(Output.of(featureName));
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public RoleAssociationArgs build() {
            if ($.dbInstanceIdentifier == null) {
                throw new MissingRequiredPropertyException("RoleAssociationArgs", "dbInstanceIdentifier");
            }
            if ($.featureName == null) {
                throw new MissingRequiredPropertyException("RoleAssociationArgs", "featureName");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("RoleAssociationArgs", "roleArn");
            }
            return $;
        }
    }

}
