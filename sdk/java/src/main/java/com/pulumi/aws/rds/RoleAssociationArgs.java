// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RoleAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleAssociationArgs Empty = new RoleAssociationArgs();

    @Import(name="dbInstanceIdentifier", required=true)
    private Output<String> dbInstanceIdentifier;

    public Output<String> dbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }

    @Import(name="featureName", required=true)
    private Output<String> featureName;

    public Output<String> featureName() {
        return this.featureName;
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    private RoleAssociationArgs() {}

    private RoleAssociationArgs(RoleAssociationArgs $) {
        this.dbInstanceIdentifier = $.dbInstanceIdentifier;
        this.featureName = $.featureName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleAssociationArgs $;

        public Builder() {
            $ = new RoleAssociationArgs();
        }

        public Builder(RoleAssociationArgs defaults) {
            $ = new RoleAssociationArgs(Objects.requireNonNull(defaults));
        }

        public Builder dbInstanceIdentifier(Output<String> dbInstanceIdentifier) {
            $.dbInstanceIdentifier = dbInstanceIdentifier;
            return this;
        }

        public Builder dbInstanceIdentifier(String dbInstanceIdentifier) {
            return dbInstanceIdentifier(Output.of(dbInstanceIdentifier));
        }

        public Builder featureName(Output<String> featureName) {
            $.featureName = featureName;
            return this;
        }

        public Builder featureName(String featureName) {
            return featureName(Output.of(featureName));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public RoleAssociationArgs build() {
            $.dbInstanceIdentifier = Objects.requireNonNull($.dbInstanceIdentifier, "expected parameter 'dbInstanceIdentifier' to be non-null");
            $.featureName = Objects.requireNonNull($.featureName, "expected parameter 'featureName' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
