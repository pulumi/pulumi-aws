// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.outputs;

import com.pulumi.aws.finspace.outputs.KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode;
import com.pulumi.aws.finspace.outputs.KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration {
    /**
     * @return The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
     * 
     */
    private String cidrBlock;
    /**
     * @return Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
     * 
     */
    private @Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode icmpTypeCode;
    /**
     * @return Range of ports the rule applies to. Defined below.
     * 
     */
    private @Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange portRange;
    /**
     * @return Protocol number. A value of `1` means all the protocols.
     * 
     */
    private String protocol;
    /**
     * @return Indicates whether to `allow` or `deny` the traffic that matches the rule.
     * 
     */
    private String ruleAction;
    /**
     * @return Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
     * 
     */
    private Integer ruleNumber;

    private KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration() {}
    /**
     * @return The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
     * 
     */
    public String cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * @return Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
     * 
     */
    public Optional<KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode> icmpTypeCode() {
        return Optional.ofNullable(this.icmpTypeCode);
    }
    /**
     * @return Range of ports the rule applies to. Defined below.
     * 
     */
    public Optional<KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange> portRange() {
        return Optional.ofNullable(this.portRange);
    }
    /**
     * @return Protocol number. A value of `1` means all the protocols.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Indicates whether to `allow` or `deny` the traffic that matches the rule.
     * 
     */
    public String ruleAction() {
        return this.ruleAction;
    }
    /**
     * @return Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
     * 
     */
    public Integer ruleNumber() {
        return this.ruleNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidrBlock;
        private @Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode icmpTypeCode;
        private @Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange portRange;
        private String protocol;
        private String ruleAction;
        private Integer ruleNumber;
        public Builder() {}
        public Builder(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.icmpTypeCode = defaults.icmpTypeCode;
    	      this.portRange = defaults.portRange;
    	      this.protocol = defaults.protocol;
    	      this.ruleAction = defaults.ruleAction;
    	      this.ruleNumber = defaults.ruleNumber;
        }

        @CustomType.Setter
        public Builder cidrBlock(String cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder icmpTypeCode(@Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode icmpTypeCode) {
            this.icmpTypeCode = icmpTypeCode;
            return this;
        }
        @CustomType.Setter
        public Builder portRange(@Nullable KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange portRange) {
            this.portRange = portRange;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder ruleAction(String ruleAction) {
            this.ruleAction = Objects.requireNonNull(ruleAction);
            return this;
        }
        @CustomType.Setter
        public Builder ruleNumber(Integer ruleNumber) {
            this.ruleNumber = Objects.requireNonNull(ruleNumber);
            return this;
        }
        public KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration build() {
            final var _resultValue = new KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration();
            _resultValue.cidrBlock = cidrBlock;
            _resultValue.icmpTypeCode = icmpTypeCode;
            _resultValue.portRange = portRange;
            _resultValue.protocol = protocol;
            _resultValue.ruleAction = ruleAction;
            _resultValue.ruleNumber = ruleNumber;
            return _resultValue;
        }
    }
}
