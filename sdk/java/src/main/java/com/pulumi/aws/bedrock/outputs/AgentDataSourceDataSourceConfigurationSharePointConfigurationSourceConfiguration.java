// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration {
    /**
     * @return The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    private String authType;
    /**
     * @return The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    private String credentialsSecretArn;
    /**
     * @return The domain of your SharePoint instance or site URL/URLs.
     * 
     */
    private String domain;
    /**
     * @return The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    private String hostType;
    /**
     * @return A list of one or more SharePoint site URLs.
     * 
     */
    private List<String> siteUrls;
    /**
     * @return The identifier of your Microsoft 365 tenant.
     * 
     */
    private @Nullable String tenantId;

    private AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration() {}
    /**
     * @return The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    public String authType() {
        return this.authType;
    }
    /**
     * @return The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    public String credentialsSecretArn() {
        return this.credentialsSecretArn;
    }
    /**
     * @return The domain of your SharePoint instance or site URL/URLs.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    public String hostType() {
        return this.hostType;
    }
    /**
     * @return A list of one or more SharePoint site URLs.
     * 
     */
    public List<String> siteUrls() {
        return this.siteUrls;
    }
    /**
     * @return The identifier of your Microsoft 365 tenant.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authType;
        private String credentialsSecretArn;
        private String domain;
        private String hostType;
        private List<String> siteUrls;
        private @Nullable String tenantId;
        public Builder() {}
        public Builder(AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.credentialsSecretArn = defaults.credentialsSecretArn;
    	      this.domain = defaults.domain;
    	      this.hostType = defaults.hostType;
    	      this.siteUrls = defaults.siteUrls;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder authType(String authType) {
            if (authType == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration", "authType");
            }
            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            if (credentialsSecretArn == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration", "credentialsSecretArn");
            }
            this.credentialsSecretArn = credentialsSecretArn;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder hostType(String hostType) {
            if (hostType == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration", "hostType");
            }
            this.hostType = hostType;
            return this;
        }
        @CustomType.Setter
        public Builder siteUrls(List<String> siteUrls) {
            if (siteUrls == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration", "siteUrls");
            }
            this.siteUrls = siteUrls;
            return this;
        }
        public Builder siteUrls(String... siteUrls) {
            return siteUrls(List.of(siteUrls));
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {

            this.tenantId = tenantId;
            return this;
        }
        public AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration build() {
            final var _resultValue = new AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration();
            _resultValue.authType = authType;
            _resultValue.credentialsSecretArn = credentialsSecretArn;
            _resultValue.domain = domain;
            _resultValue.hostType = hostType;
            _resultValue.siteUrls = siteUrls;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
