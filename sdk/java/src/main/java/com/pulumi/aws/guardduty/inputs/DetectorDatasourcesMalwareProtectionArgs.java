// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.aws.guardduty.inputs.DetectorDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class DetectorDatasourcesMalwareProtectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DetectorDatasourcesMalwareProtectionArgs Empty = new DetectorDatasourcesMalwareProtectionArgs();

    @Import(name="scanEc2InstanceWithFindings", required=true)
    private Output<DetectorDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings;

    public Output<DetectorDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings() {
        return this.scanEc2InstanceWithFindings;
    }

    private DetectorDatasourcesMalwareProtectionArgs() {}

    private DetectorDatasourcesMalwareProtectionArgs(DetectorDatasourcesMalwareProtectionArgs $) {
        this.scanEc2InstanceWithFindings = $.scanEc2InstanceWithFindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorDatasourcesMalwareProtectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorDatasourcesMalwareProtectionArgs $;

        public Builder() {
            $ = new DetectorDatasourcesMalwareProtectionArgs();
        }

        public Builder(DetectorDatasourcesMalwareProtectionArgs defaults) {
            $ = new DetectorDatasourcesMalwareProtectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder scanEc2InstanceWithFindings(Output<DetectorDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings) {
            $.scanEc2InstanceWithFindings = scanEc2InstanceWithFindings;
            return this;
        }

        public Builder scanEc2InstanceWithFindings(DetectorDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs scanEc2InstanceWithFindings) {
            return scanEc2InstanceWithFindings(Output.of(scanEc2InstanceWithFindings));
        }

        public DetectorDatasourcesMalwareProtectionArgs build() {
            $.scanEc2InstanceWithFindings = Objects.requireNonNull($.scanEc2InstanceWithFindings, "expected parameter 'scanEc2InstanceWithFindings' to be non-null");
            return $;
        }
    }

}
