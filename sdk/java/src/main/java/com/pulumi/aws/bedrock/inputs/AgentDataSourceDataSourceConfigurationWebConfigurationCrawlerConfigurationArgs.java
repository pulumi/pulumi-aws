// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs Empty = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs();

    /**
     * Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
     * 
     */
    @Import(name="crawlerLimits")
    private @Nullable Output<AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs> crawlerLimits;

    /**
     * @return Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
     * 
     */
    public Optional<Output<AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs>> crawlerLimits() {
        return Optional.ofNullable(this.crawlerLimits);
    }

    /**
     * List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    @Import(name="exclusionFilters")
    private @Nullable Output<List<String>> exclusionFilters;

    /**
     * @return List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    public Optional<Output<List<String>>> exclusionFilters() {
        return Optional.ofNullable(this.exclusionFilters);
    }

    /**
     * List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    @Import(name="inclusionFilters")
    private @Nullable Output<List<String>> inclusionFilters;

    /**
     * @return List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    public Optional<Output<List<String>>> inclusionFilters() {
        return Optional.ofNullable(this.inclusionFilters);
    }

    /**
     * Scope of what is crawled for your URLs.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Scope of what is crawled for your URLs.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
     * 
     */
    @Import(name="userAgent")
    private @Nullable Output<String> userAgent;

    /**
     * @return String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
     * 
     */
    public Optional<Output<String>> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs() {}

    private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs $) {
        this.crawlerLimits = $.crawlerLimits;
        this.exclusionFilters = $.exclusionFilters;
        this.inclusionFilters = $.inclusionFilters;
        this.scope = $.scope;
        this.userAgent = $.userAgent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs $;

        public Builder() {
            $ = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs();
        }

        public Builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs defaults) {
            $ = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param crawlerLimits Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
         * 
         * @return builder
         * 
         */
        public Builder crawlerLimits(@Nullable Output<AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs> crawlerLimits) {
            $.crawlerLimits = crawlerLimits;
            return this;
        }

        /**
         * @param crawlerLimits Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
         * 
         * @return builder
         * 
         */
        public Builder crawlerLimits(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs crawlerLimits) {
            return crawlerLimits(Output.of(crawlerLimits));
        }

        /**
         * @param exclusionFilters List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(@Nullable Output<List<String>> exclusionFilters) {
            $.exclusionFilters = exclusionFilters;
            return this;
        }

        /**
         * @param exclusionFilters List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(List<String> exclusionFilters) {
            return exclusionFilters(Output.of(exclusionFilters));
        }

        /**
         * @param exclusionFilters List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(String... exclusionFilters) {
            return exclusionFilters(List.of(exclusionFilters));
        }

        /**
         * @param inclusionFilters List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(@Nullable Output<List<String>> inclusionFilters) {
            $.inclusionFilters = inclusionFilters;
            return this;
        }

        /**
         * @param inclusionFilters List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(List<String> inclusionFilters) {
            return inclusionFilters(Output.of(inclusionFilters));
        }

        /**
         * @param inclusionFilters List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(String... inclusionFilters) {
            return inclusionFilters(List.of(inclusionFilters));
        }

        /**
         * @param scope Scope of what is crawled for your URLs.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Scope of what is crawled for your URLs.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param userAgent String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
         * 
         * @return builder
         * 
         */
        public Builder userAgent(@Nullable Output<String> userAgent) {
            $.userAgent = userAgent;
            return this;
        }

        /**
         * @param userAgent String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
         * 
         * @return builder
         * 
         */
        public Builder userAgent(String userAgent) {
            return userAgent(Output.of(userAgent));
        }

        public AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationArgs build() {
            return $;
        }
    }

}
