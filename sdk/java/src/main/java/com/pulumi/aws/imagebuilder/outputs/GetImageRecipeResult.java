// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetImageRecipeBlockDeviceMapping;
import com.pulumi.aws.imagebuilder.outputs.GetImageRecipeComponent;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetImageRecipeResult {
    private String arn;
    /**
     * @return Set of objects with block device mappings for the image recipe.
     * 
     */
    private List<GetImageRecipeBlockDeviceMapping> blockDeviceMappings;
    /**
     * @return List of objects with components for the image recipe.
     * 
     */
    private List<GetImageRecipeComponent> components;
    /**
     * @return Date the image recipe was created.
     * 
     */
    private String dateCreated;
    /**
     * @return Description of the image recipe.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the image recipe.
     * 
     */
    private String name;
    /**
     * @return Owner of the image recipe.
     * 
     */
    private String owner;
    /**
     * @return Base image of the image recipe.
     * 
     */
    private String parentImage;
    /**
     * @return Platform of the image recipe.
     * 
     */
    private String platform;
    /**
     * @return Key-value map of resource tags for the image recipe.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Base64 encoded contents of user data. Commands or a command script to run when build instance is launched.
     * 
     */
    private String userDataBase64;
    /**
     * @return Version of the image recipe.
     * 
     */
    private String version;
    /**
     * @return Working directory used during build and test workflows.
     * 
     */
    private String workingDirectory;

    private GetImageRecipeResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return Set of objects with block device mappings for the image recipe.
     * 
     */
    public List<GetImageRecipeBlockDeviceMapping> blockDeviceMappings() {
        return this.blockDeviceMappings;
    }
    /**
     * @return List of objects with components for the image recipe.
     * 
     */
    public List<GetImageRecipeComponent> components() {
        return this.components;
    }
    /**
     * @return Date the image recipe was created.
     * 
     */
    public String dateCreated() {
        return this.dateCreated;
    }
    /**
     * @return Description of the image recipe.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the image recipe.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Owner of the image recipe.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Base image of the image recipe.
     * 
     */
    public String parentImage() {
        return this.parentImage;
    }
    /**
     * @return Platform of the image recipe.
     * 
     */
    public String platform() {
        return this.platform;
    }
    /**
     * @return Key-value map of resource tags for the image recipe.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Base64 encoded contents of user data. Commands or a command script to run when build instance is launched.
     * 
     */
    public String userDataBase64() {
        return this.userDataBase64;
    }
    /**
     * @return Version of the image recipe.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return Working directory used during build and test workflows.
     * 
     */
    public String workingDirectory() {
        return this.workingDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageRecipeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetImageRecipeBlockDeviceMapping> blockDeviceMappings;
        private List<GetImageRecipeComponent> components;
        private String dateCreated;
        private String description;
        private String id;
        private String name;
        private String owner;
        private String parentImage;
        private String platform;
        private @Nullable Map<String,String> tags;
        private String userDataBase64;
        private String version;
        private String workingDirectory;
        public Builder() {}
        public Builder(GetImageRecipeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.blockDeviceMappings = defaults.blockDeviceMappings;
    	      this.components = defaults.components;
    	      this.dateCreated = defaults.dateCreated;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.parentImage = defaults.parentImage;
    	      this.platform = defaults.platform;
    	      this.tags = defaults.tags;
    	      this.userDataBase64 = defaults.userDataBase64;
    	      this.version = defaults.version;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder blockDeviceMappings(List<GetImageRecipeBlockDeviceMapping> blockDeviceMappings) {
            this.blockDeviceMappings = Objects.requireNonNull(blockDeviceMappings);
            return this;
        }
        public Builder blockDeviceMappings(GetImageRecipeBlockDeviceMapping... blockDeviceMappings) {
            return blockDeviceMappings(List.of(blockDeviceMappings));
        }
        @CustomType.Setter
        public Builder components(List<GetImageRecipeComponent> components) {
            this.components = Objects.requireNonNull(components);
            return this;
        }
        public Builder components(GetImageRecipeComponent... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder dateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        @CustomType.Setter
        public Builder parentImage(String parentImage) {
            this.parentImage = Objects.requireNonNull(parentImage);
            return this;
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userDataBase64(String userDataBase64) {
            this.userDataBase64 = Objects.requireNonNull(userDataBase64);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(String workingDirectory) {
            this.workingDirectory = Objects.requireNonNull(workingDirectory);
            return this;
        }
        public GetImageRecipeResult build() {
            final var o = new GetImageRecipeResult();
            o.arn = arn;
            o.blockDeviceMappings = blockDeviceMappings;
            o.components = components;
            o.dateCreated = dateCreated;
            o.description = description;
            o.id = id;
            o.name = name;
            o.owner = owner;
            o.parentImage = parentImage;
            o.platform = platform;
            o.tags = tags;
            o.userDataBase64 = userDataBase64;
            o.version = version;
            o.workingDirectory = workingDirectory;
            return o;
        }
    }
}
