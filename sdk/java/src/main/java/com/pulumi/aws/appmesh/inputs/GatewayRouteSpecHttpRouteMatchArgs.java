// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchHeaderArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchHostnameArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchPathArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchQueryParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayRouteSpecHttpRouteMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecHttpRouteMatchArgs Empty = new GatewayRouteSpecHttpRouteMatchArgs();

    /**
     * Client request headers to match on.
     * 
     */
    @Import(name="headers")
    private @Nullable Output<List<GatewayRouteSpecHttpRouteMatchHeaderArgs>> headers;

    /**
     * @return Client request headers to match on.
     * 
     */
    public Optional<Output<List<GatewayRouteSpecHttpRouteMatchHeaderArgs>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * Host name to match on.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<GatewayRouteSpecHttpRouteMatchHostnameArgs> hostname;

    /**
     * @return Host name to match on.
     * 
     */
    public Optional<Output<GatewayRouteSpecHttpRouteMatchHostnameArgs>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Client request path to match on.
     * 
     */
    @Import(name="path")
    private @Nullable Output<GatewayRouteSpecHttpRouteMatchPathArgs> path;

    /**
     * @return Client request path to match on.
     * 
     */
    public Optional<Output<GatewayRouteSpecHttpRouteMatchPathArgs>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The port number to match from the request.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port number to match from the request.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Header value sent by the client must begin with the specified characters.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Header value sent by the client must begin with the specified characters.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Client request query parameters to match on.
     * 
     */
    @Import(name="queryParameters")
    private @Nullable Output<List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs>> queryParameters;

    /**
     * @return Client request query parameters to match on.
     * 
     */
    public Optional<Output<List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs>>> queryParameters() {
        return Optional.ofNullable(this.queryParameters);
    }

    private GatewayRouteSpecHttpRouteMatchArgs() {}

    private GatewayRouteSpecHttpRouteMatchArgs(GatewayRouteSpecHttpRouteMatchArgs $) {
        this.headers = $.headers;
        this.hostname = $.hostname;
        this.path = $.path;
        this.port = $.port;
        this.prefix = $.prefix;
        this.queryParameters = $.queryParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecHttpRouteMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecHttpRouteMatchArgs $;

        public Builder() {
            $ = new GatewayRouteSpecHttpRouteMatchArgs();
        }

        public Builder(GatewayRouteSpecHttpRouteMatchArgs defaults) {
            $ = new GatewayRouteSpecHttpRouteMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headers Client request headers to match on.
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable Output<List<GatewayRouteSpecHttpRouteMatchHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers Client request headers to match on.
         * 
         * @return builder
         * 
         */
        public Builder headers(List<GatewayRouteSpecHttpRouteMatchHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers Client request headers to match on.
         * 
         * @return builder
         * 
         */
        public Builder headers(GatewayRouteSpecHttpRouteMatchHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param hostname Host name to match on.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<GatewayRouteSpecHttpRouteMatchHostnameArgs> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Host name to match on.
         * 
         * @return builder
         * 
         */
        public Builder hostname(GatewayRouteSpecHttpRouteMatchHostnameArgs hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param path Client request path to match on.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<GatewayRouteSpecHttpRouteMatchPathArgs> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Client request path to match on.
         * 
         * @return builder
         * 
         */
        public Builder path(GatewayRouteSpecHttpRouteMatchPathArgs path) {
            return path(Output.of(path));
        }

        /**
         * @param port The port number to match from the request.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port number to match from the request.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param prefix Header value sent by the client must begin with the specified characters.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Header value sent by the client must begin with the specified characters.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param queryParameters Client request query parameters to match on.
         * 
         * @return builder
         * 
         */
        public Builder queryParameters(@Nullable Output<List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs>> queryParameters) {
            $.queryParameters = queryParameters;
            return this;
        }

        /**
         * @param queryParameters Client request query parameters to match on.
         * 
         * @return builder
         * 
         */
        public Builder queryParameters(List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs> queryParameters) {
            return queryParameters(Output.of(queryParameters));
        }

        /**
         * @param queryParameters Client request query parameters to match on.
         * 
         * @return builder
         * 
         */
        public Builder queryParameters(GatewayRouteSpecHttpRouteMatchQueryParameterArgs... queryParameters) {
            return queryParameters(List.of(queryParameters));
        }

        public GatewayRouteSpecHttpRouteMatchArgs build() {
            return $;
        }
    }

}
