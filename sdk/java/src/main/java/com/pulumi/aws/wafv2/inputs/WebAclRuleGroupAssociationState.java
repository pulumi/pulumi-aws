// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationManagedRuleGroupArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclRuleGroupAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleGroupAssociationState Empty = new WebAclRuleGroupAssociationState();

    /**
     * Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
     * 
     */
    @Import(name="managedRuleGroup")
    private @Nullable Output<WebAclRuleGroupAssociationManagedRuleGroupArgs> managedRuleGroup;

    /**
     * @return Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
     * 
     */
    public Optional<Output<WebAclRuleGroupAssociationManagedRuleGroupArgs>> managedRuleGroup() {
        return Optional.ofNullable(this.managedRuleGroup);
    }

    /**
     * Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
     * 
     */
    @Import(name="overrideAction")
    private @Nullable Output<String> overrideAction;

    /**
     * @return Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
     * 
     */
    public Optional<Output<String>> overrideAction() {
        return Optional.ofNullable(this.overrideAction);
    }

    /**
     * Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
     * 
     */
    @Import(name="ruleGroupReference")
    private @Nullable Output<WebAclRuleGroupAssociationRuleGroupReferenceArgs> ruleGroupReference;

    /**
     * @return Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
     * 
     */
    public Optional<Output<WebAclRuleGroupAssociationRuleGroupReferenceArgs>> ruleGroupReference() {
        return Optional.ofNullable(this.ruleGroupReference);
    }

    /**
     * Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    @Import(name="timeouts")
    private @Nullable Output<WebAclRuleGroupAssociationTimeoutsArgs> timeouts;

    public Optional<Output<WebAclRuleGroupAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * ARN of the Web ACL to associate the Rule Group with.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="webAclArn")
    private @Nullable Output<String> webAclArn;

    /**
     * @return ARN of the Web ACL to associate the Rule Group with.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> webAclArn() {
        return Optional.ofNullable(this.webAclArn);
    }

    private WebAclRuleGroupAssociationState() {}

    private WebAclRuleGroupAssociationState(WebAclRuleGroupAssociationState $) {
        this.managedRuleGroup = $.managedRuleGroup;
        this.overrideAction = $.overrideAction;
        this.priority = $.priority;
        this.region = $.region;
        this.ruleGroupReference = $.ruleGroupReference;
        this.ruleName = $.ruleName;
        this.timeouts = $.timeouts;
        this.webAclArn = $.webAclArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleGroupAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleGroupAssociationState $;

        public Builder() {
            $ = new WebAclRuleGroupAssociationState();
        }

        public Builder(WebAclRuleGroupAssociationState defaults) {
            $ = new WebAclRuleGroupAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedRuleGroup Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
         * 
         * @return builder
         * 
         */
        public Builder managedRuleGroup(@Nullable Output<WebAclRuleGroupAssociationManagedRuleGroupArgs> managedRuleGroup) {
            $.managedRuleGroup = managedRuleGroup;
            return this;
        }

        /**
         * @param managedRuleGroup Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
         * 
         * @return builder
         * 
         */
        public Builder managedRuleGroup(WebAclRuleGroupAssociationManagedRuleGroupArgs managedRuleGroup) {
            return managedRuleGroup(Output.of(managedRuleGroup));
        }

        /**
         * @param overrideAction Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
         * 
         * @return builder
         * 
         */
        public Builder overrideAction(@Nullable Output<String> overrideAction) {
            $.overrideAction = overrideAction;
            return this;
        }

        /**
         * @param overrideAction Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
         * 
         * @return builder
         * 
         */
        public Builder overrideAction(String overrideAction) {
            return overrideAction(Output.of(overrideAction));
        }

        /**
         * @param priority Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param ruleGroupReference Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupReference(@Nullable Output<WebAclRuleGroupAssociationRuleGroupReferenceArgs> ruleGroupReference) {
            $.ruleGroupReference = ruleGroupReference;
            return this;
        }

        /**
         * @param ruleGroupReference Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupReference(WebAclRuleGroupAssociationRuleGroupReferenceArgs ruleGroupReference) {
            return ruleGroupReference(Output.of(ruleGroupReference));
        }

        /**
         * @param ruleName Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public Builder timeouts(@Nullable Output<WebAclRuleGroupAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(WebAclRuleGroupAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param webAclArn ARN of the Web ACL to associate the Rule Group with.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder webAclArn(@Nullable Output<String> webAclArn) {
            $.webAclArn = webAclArn;
            return this;
        }

        /**
         * @param webAclArn ARN of the Web ACL to associate the Rule Group with.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder webAclArn(String webAclArn) {
            return webAclArn(Output.of(webAclArn));
        }

        public WebAclRuleGroupAssociationState build() {
            return $;
        }
    }

}
