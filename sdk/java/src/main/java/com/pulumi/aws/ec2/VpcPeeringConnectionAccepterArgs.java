// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.VpcPeeringConnectionAccepterAccepterArgs;
import com.pulumi.aws.ec2.inputs.VpcPeeringConnectionAccepterRequesterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcPeeringConnectionAccepterArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcPeeringConnectionAccepterArgs Empty = new VpcPeeringConnectionAccepterArgs();

    /**
     * A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
     * 
     */
    @Import(name="accepter")
    private @Nullable Output<VpcPeeringConnectionAccepterAccepterArgs> accepter;

    /**
     * @return A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
     * 
     */
    public Optional<Output<VpcPeeringConnectionAccepterAccepterArgs>> accepter() {
        return Optional.ofNullable(this.accepter);
    }

    /**
     * Whether or not to accept the peering request. Defaults to `false`.
     * 
     */
    @Import(name="autoAccept")
    private @Nullable Output<Boolean> autoAccept;

    /**
     * @return Whether or not to accept the peering request. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> autoAccept() {
        return Optional.ofNullable(this.autoAccept);
    }

    /**
     * A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
     * 
     */
    @Import(name="requester")
    private @Nullable Output<VpcPeeringConnectionAccepterRequesterArgs> requester;

    /**
     * @return A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
     * 
     */
    public Optional<Output<VpcPeeringConnectionAccepterRequesterArgs>> requester() {
        return Optional.ofNullable(this.requester);
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The VPC Peering Connection ID to manage.
     * 
     */
    @Import(name="vpcPeeringConnectionId", required=true)
    private Output<String> vpcPeeringConnectionId;

    /**
     * @return The VPC Peering Connection ID to manage.
     * 
     */
    public Output<String> vpcPeeringConnectionId() {
        return this.vpcPeeringConnectionId;
    }

    private VpcPeeringConnectionAccepterArgs() {}

    private VpcPeeringConnectionAccepterArgs(VpcPeeringConnectionAccepterArgs $) {
        this.accepter = $.accepter;
        this.autoAccept = $.autoAccept;
        this.requester = $.requester;
        this.tags = $.tags;
        this.vpcPeeringConnectionId = $.vpcPeeringConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcPeeringConnectionAccepterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcPeeringConnectionAccepterArgs $;

        public Builder() {
            $ = new VpcPeeringConnectionAccepterArgs();
        }

        public Builder(VpcPeeringConnectionAccepterArgs defaults) {
            $ = new VpcPeeringConnectionAccepterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accepter A configuration block that describes [VPC Peering Connection]
         * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
         * 
         * @return builder
         * 
         */
        public Builder accepter(@Nullable Output<VpcPeeringConnectionAccepterAccepterArgs> accepter) {
            $.accepter = accepter;
            return this;
        }

        /**
         * @param accepter A configuration block that describes [VPC Peering Connection]
         * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
         * 
         * @return builder
         * 
         */
        public Builder accepter(VpcPeeringConnectionAccepterAccepterArgs accepter) {
            return accepter(Output.of(accepter));
        }

        /**
         * @param autoAccept Whether or not to accept the peering request. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoAccept(@Nullable Output<Boolean> autoAccept) {
            $.autoAccept = autoAccept;
            return this;
        }

        /**
         * @param autoAccept Whether or not to accept the peering request. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoAccept(Boolean autoAccept) {
            return autoAccept(Output.of(autoAccept));
        }

        /**
         * @param requester A configuration block that describes [VPC Peering Connection]
         * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
         * 
         * @return builder
         * 
         */
        public Builder requester(@Nullable Output<VpcPeeringConnectionAccepterRequesterArgs> requester) {
            $.requester = requester;
            return this;
        }

        /**
         * @param requester A configuration block that describes [VPC Peering Connection]
         * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
         * 
         * @return builder
         * 
         */
        public Builder requester(VpcPeeringConnectionAccepterRequesterArgs requester) {
            return requester(Output.of(requester));
        }

        /**
         * @param tags A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcPeeringConnectionId The VPC Peering Connection ID to manage.
         * 
         * @return builder
         * 
         */
        public Builder vpcPeeringConnectionId(Output<String> vpcPeeringConnectionId) {
            $.vpcPeeringConnectionId = vpcPeeringConnectionId;
            return this;
        }

        /**
         * @param vpcPeeringConnectionId The VPC Peering Connection ID to manage.
         * 
         * @return builder
         * 
         */
        public Builder vpcPeeringConnectionId(String vpcPeeringConnectionId) {
            return vpcPeeringConnectionId(Output.of(vpcPeeringConnectionId));
        }

        public VpcPeeringConnectionAccepterArgs build() {
            $.vpcPeeringConnectionId = Objects.requireNonNull($.vpcPeeringConnectionId, "expected parameter 'vpcPeeringConnectionId' to be non-null");
            return $;
        }
    }

}
