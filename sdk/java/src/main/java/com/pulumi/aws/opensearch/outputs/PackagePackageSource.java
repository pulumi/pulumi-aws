// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PackagePackageSource {
    /**
     * @return The name of the Amazon S3 bucket containing the package.
     * 
     */
    private String s3BucketName;
    /**
     * @return Key (file name) of the package.
     * 
     */
    private String s3Key;

    private PackagePackageSource() {}
    /**
     * @return The name of the Amazon S3 bucket containing the package.
     * 
     */
    public String s3BucketName() {
        return this.s3BucketName;
    }
    /**
     * @return Key (file name) of the package.
     * 
     */
    public String s3Key() {
        return this.s3Key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackagePackageSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String s3BucketName;
        private String s3Key;
        public Builder() {}
        public Builder(PackagePackageSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3Key = defaults.s3Key;
        }

        @CustomType.Setter
        public Builder s3BucketName(String s3BucketName) {
            if (s3BucketName == null) {
              throw new MissingRequiredPropertyException("PackagePackageSource", "s3BucketName");
            }
            this.s3BucketName = s3BucketName;
            return this;
        }
        @CustomType.Setter
        public Builder s3Key(String s3Key) {
            if (s3Key == null) {
              throw new MissingRequiredPropertyException("PackagePackageSource", "s3Key");
            }
            this.s3Key = s3Key;
            return this;
        }
        public PackagePackageSource build() {
            final var _resultValue = new PackagePackageSource();
            _resultValue.s3BucketName = s3BucketName;
            _resultValue.s3Key = s3Key;
            return _resultValue;
        }
    }
}
