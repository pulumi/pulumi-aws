// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;


public final class TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs Empty = new TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs();

    /**
     * Snapshots older than this will be marked for deletiion.
     * Must be at least `1`.
     * 
     */
    @Import(name="maxSnapshotAgeHours", required=true)
    private Output<Double> maxSnapshotAgeHours;

    /**
     * @return Snapshots older than this will be marked for deletiion.
     * Must be at least `1`.
     * 
     */
    public Output<Double> maxSnapshotAgeHours() {
        return this.maxSnapshotAgeHours;
    }

    /**
     * Minimum number of snapshots to keep.
     * Must be at least `1`.
     * 
     */
    @Import(name="minSnapshotsToKeep", required=true)
    private Output<Double> minSnapshotsToKeep;

    /**
     * @return Minimum number of snapshots to keep.
     * Must be at least `1`.
     * 
     */
    public Output<Double> minSnapshotsToKeep() {
        return this.minSnapshotsToKeep;
    }

    private TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs() {}

    private TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs(TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs $) {
        this.maxSnapshotAgeHours = $.maxSnapshotAgeHours;
        this.minSnapshotsToKeep = $.minSnapshotsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs $;

        public Builder() {
            $ = new TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs();
        }

        public Builder(TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs defaults) {
            $ = new TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxSnapshotAgeHours Snapshots older than this will be marked for deletiion.
         * Must be at least `1`.
         * 
         * @return builder
         * 
         */
        public Builder maxSnapshotAgeHours(Output<Double> maxSnapshotAgeHours) {
            $.maxSnapshotAgeHours = maxSnapshotAgeHours;
            return this;
        }

        /**
         * @param maxSnapshotAgeHours Snapshots older than this will be marked for deletiion.
         * Must be at least `1`.
         * 
         * @return builder
         * 
         */
        public Builder maxSnapshotAgeHours(Double maxSnapshotAgeHours) {
            return maxSnapshotAgeHours(Output.of(maxSnapshotAgeHours));
        }

        /**
         * @param minSnapshotsToKeep Minimum number of snapshots to keep.
         * Must be at least `1`.
         * 
         * @return builder
         * 
         */
        public Builder minSnapshotsToKeep(Output<Double> minSnapshotsToKeep) {
            $.minSnapshotsToKeep = minSnapshotsToKeep;
            return this;
        }

        /**
         * @param minSnapshotsToKeep Minimum number of snapshots to keep.
         * Must be at least `1`.
         * 
         * @return builder
         * 
         */
        public Builder minSnapshotsToKeep(Double minSnapshotsToKeep) {
            return minSnapshotsToKeep(Output.of(minSnapshotsToKeep));
        }

        public TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs build() {
            if ($.maxSnapshotAgeHours == null) {
                throw new MissingRequiredPropertyException("TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs", "maxSnapshotAgeHours");
            }
            if ($.minSnapshotsToKeep == null) {
                throw new MissingRequiredPropertyException("TablesTableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs", "minSnapshotsToKeep");
            }
            return $;
        }
    }

}
