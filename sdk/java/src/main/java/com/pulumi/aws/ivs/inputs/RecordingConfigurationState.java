// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ivs.inputs;

import com.pulumi.aws.ivs.inputs.RecordingConfigurationDestinationConfigurationArgs;
import com.pulumi.aws.ivs.inputs.RecordingConfigurationThumbnailConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordingConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final RecordingConfigurationState Empty = new RecordingConfigurationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="destinationConfiguration")
    private @Nullable Output<RecordingConfigurationDestinationConfigurationArgs> destinationConfiguration;

    public Optional<Output<RecordingConfigurationDestinationConfigurationArgs>> destinationConfiguration() {
        return Optional.ofNullable(this.destinationConfiguration);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="recordingReconnectWindowSeconds")
    private @Nullable Output<Integer> recordingReconnectWindowSeconds;

    public Optional<Output<Integer>> recordingReconnectWindowSeconds() {
        return Optional.ofNullable(this.recordingReconnectWindowSeconds);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="thumbnailConfiguration")
    private @Nullable Output<RecordingConfigurationThumbnailConfigurationArgs> thumbnailConfiguration;

    public Optional<Output<RecordingConfigurationThumbnailConfigurationArgs>> thumbnailConfiguration() {
        return Optional.ofNullable(this.thumbnailConfiguration);
    }

    private RecordingConfigurationState() {}

    private RecordingConfigurationState(RecordingConfigurationState $) {
        this.arn = $.arn;
        this.destinationConfiguration = $.destinationConfiguration;
        this.name = $.name;
        this.recordingReconnectWindowSeconds = $.recordingReconnectWindowSeconds;
        this.state = $.state;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.thumbnailConfiguration = $.thumbnailConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordingConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordingConfigurationState $;

        public Builder() {
            $ = new RecordingConfigurationState();
        }

        public Builder(RecordingConfigurationState defaults) {
            $ = new RecordingConfigurationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder destinationConfiguration(@Nullable Output<RecordingConfigurationDestinationConfigurationArgs> destinationConfiguration) {
            $.destinationConfiguration = destinationConfiguration;
            return this;
        }

        public Builder destinationConfiguration(RecordingConfigurationDestinationConfigurationArgs destinationConfiguration) {
            return destinationConfiguration(Output.of(destinationConfiguration));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder recordingReconnectWindowSeconds(@Nullable Output<Integer> recordingReconnectWindowSeconds) {
            $.recordingReconnectWindowSeconds = recordingReconnectWindowSeconds;
            return this;
        }

        public Builder recordingReconnectWindowSeconds(Integer recordingReconnectWindowSeconds) {
            return recordingReconnectWindowSeconds(Output.of(recordingReconnectWindowSeconds));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder thumbnailConfiguration(@Nullable Output<RecordingConfigurationThumbnailConfigurationArgs> thumbnailConfiguration) {
            $.thumbnailConfiguration = thumbnailConfiguration;
            return this;
        }

        public Builder thumbnailConfiguration(RecordingConfigurationThumbnailConfigurationArgs thumbnailConfiguration) {
            return thumbnailConfiguration(Output.of(thumbnailConfiguration));
        }

        public RecordingConfigurationState build() {
            return $;
        }
    }

}
