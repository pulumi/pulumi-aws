// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetInstanceFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceArgs Empty = new GetInstanceArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetInstanceFilterArgs>> filters;

    public Optional<Output<List<GetInstanceFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="getPasswordData")
    private @Nullable Output<Boolean> getPasswordData;

    public Optional<Output<Boolean>> getPasswordData() {
        return Optional.ofNullable(this.getPasswordData);
    }

    @Import(name="getUserData")
    private @Nullable Output<Boolean> getUserData;

    public Optional<Output<Boolean>> getUserData() {
        return Optional.ofNullable(this.getUserData);
    }

    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    @Import(name="instanceTags")
    private @Nullable Output<Map<String,String>> instanceTags;

    public Optional<Output<Map<String,String>>> instanceTags() {
        return Optional.ofNullable(this.instanceTags);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetInstanceArgs() {}

    private GetInstanceArgs(GetInstanceArgs $) {
        this.filters = $.filters;
        this.getPasswordData = $.getPasswordData;
        this.getUserData = $.getUserData;
        this.instanceId = $.instanceId;
        this.instanceTags = $.instanceTags;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceArgs $;

        public Builder() {
            $ = new GetInstanceArgs();
        }

        public Builder(GetInstanceArgs defaults) {
            $ = new GetInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetInstanceFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetInstanceFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetInstanceFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder getPasswordData(@Nullable Output<Boolean> getPasswordData) {
            $.getPasswordData = getPasswordData;
            return this;
        }

        public Builder getPasswordData(Boolean getPasswordData) {
            return getPasswordData(Output.of(getPasswordData));
        }

        public Builder getUserData(@Nullable Output<Boolean> getUserData) {
            $.getUserData = getUserData;
            return this;
        }

        public Builder getUserData(Boolean getUserData) {
            return getUserData(Output.of(getUserData));
        }

        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public Builder instanceTags(@Nullable Output<Map<String,String>> instanceTags) {
            $.instanceTags = instanceTags;
            return this;
        }

        public Builder instanceTags(Map<String,String> instanceTags) {
            return instanceTags(Output.of(instanceTags));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetInstanceArgs build() {
            return $;
        }
    }

}
