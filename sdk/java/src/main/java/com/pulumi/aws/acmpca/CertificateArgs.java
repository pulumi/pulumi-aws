// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca;

import com.pulumi.aws.acmpca.inputs.CertificateValidityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateArgs Empty = new CertificateArgs();

    @Import(name="certificateAuthorityArn", required=true)
    private Output<String> certificateAuthorityArn;

    public Output<String> certificateAuthorityArn() {
        return this.certificateAuthorityArn;
    }

    @Import(name="certificateSigningRequest", required=true)
    private Output<String> certificateSigningRequest;

    public Output<String> certificateSigningRequest() {
        return this.certificateSigningRequest;
    }

    @Import(name="signingAlgorithm", required=true)
    private Output<String> signingAlgorithm;

    public Output<String> signingAlgorithm() {
        return this.signingAlgorithm;
    }

    @Import(name="templateArn")
    private @Nullable Output<String> templateArn;

    public Optional<Output<String>> templateArn() {
        return Optional.ofNullable(this.templateArn);
    }

    @Import(name="validity", required=true)
    private Output<CertificateValidityArgs> validity;

    public Output<CertificateValidityArgs> validity() {
        return this.validity;
    }

    private CertificateArgs() {}

    private CertificateArgs(CertificateArgs $) {
        this.certificateAuthorityArn = $.certificateAuthorityArn;
        this.certificateSigningRequest = $.certificateSigningRequest;
        this.signingAlgorithm = $.signingAlgorithm;
        this.templateArn = $.templateArn;
        this.validity = $.validity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateArgs $;

        public Builder() {
            $ = new CertificateArgs();
        }

        public Builder(CertificateArgs defaults) {
            $ = new CertificateArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateAuthorityArn(Output<String> certificateAuthorityArn) {
            $.certificateAuthorityArn = certificateAuthorityArn;
            return this;
        }

        public Builder certificateAuthorityArn(String certificateAuthorityArn) {
            return certificateAuthorityArn(Output.of(certificateAuthorityArn));
        }

        public Builder certificateSigningRequest(Output<String> certificateSigningRequest) {
            $.certificateSigningRequest = certificateSigningRequest;
            return this;
        }

        public Builder certificateSigningRequest(String certificateSigningRequest) {
            return certificateSigningRequest(Output.of(certificateSigningRequest));
        }

        public Builder signingAlgorithm(Output<String> signingAlgorithm) {
            $.signingAlgorithm = signingAlgorithm;
            return this;
        }

        public Builder signingAlgorithm(String signingAlgorithm) {
            return signingAlgorithm(Output.of(signingAlgorithm));
        }

        public Builder templateArn(@Nullable Output<String> templateArn) {
            $.templateArn = templateArn;
            return this;
        }

        public Builder templateArn(String templateArn) {
            return templateArn(Output.of(templateArn));
        }

        public Builder validity(Output<CertificateValidityArgs> validity) {
            $.validity = validity;
            return this;
        }

        public Builder validity(CertificateValidityArgs validity) {
            return validity(Output.of(validity));
        }

        public CertificateArgs build() {
            $.certificateAuthorityArn = Objects.requireNonNull($.certificateAuthorityArn, "expected parameter 'certificateAuthorityArn' to be non-null");
            $.certificateSigningRequest = Objects.requireNonNull($.certificateSigningRequest, "expected parameter 'certificateSigningRequest' to be non-null");
            $.signingAlgorithm = Objects.requireNonNull($.signingAlgorithm, "expected parameter 'signingAlgorithm' to be non-null");
            $.validity = Objects.requireNonNull($.validity, "expected parameter 'validity' to be non-null");
            return $;
        }
    }

}
