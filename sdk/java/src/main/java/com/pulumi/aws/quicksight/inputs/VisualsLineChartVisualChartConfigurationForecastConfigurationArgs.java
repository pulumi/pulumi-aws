// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationForecastPropertiesArgs;
import com.pulumi.aws.quicksight.inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsLineChartVisualChartConfigurationForecastConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsLineChartVisualChartConfigurationForecastConfigurationArgs Empty = new VisualsLineChartVisualChartConfigurationForecastConfigurationArgs();

    @Import(name="forecastProperties")
    private @Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationForecastPropertiesArgs> forecastProperties;

    public Optional<Output<VisualsLineChartVisualChartConfigurationForecastConfigurationForecastPropertiesArgs>> forecastProperties() {
        return Optional.ofNullable(this.forecastProperties);
    }

    @Import(name="scenario")
    private @Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs> scenario;

    public Optional<Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs>> scenario() {
        return Optional.ofNullable(this.scenario);
    }

    private VisualsLineChartVisualChartConfigurationForecastConfigurationArgs() {}

    private VisualsLineChartVisualChartConfigurationForecastConfigurationArgs(VisualsLineChartVisualChartConfigurationForecastConfigurationArgs $) {
        this.forecastProperties = $.forecastProperties;
        this.scenario = $.scenario;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsLineChartVisualChartConfigurationForecastConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsLineChartVisualChartConfigurationForecastConfigurationArgs $;

        public Builder() {
            $ = new VisualsLineChartVisualChartConfigurationForecastConfigurationArgs();
        }

        public Builder(VisualsLineChartVisualChartConfigurationForecastConfigurationArgs defaults) {
            $ = new VisualsLineChartVisualChartConfigurationForecastConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder forecastProperties(@Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationForecastPropertiesArgs> forecastProperties) {
            $.forecastProperties = forecastProperties;
            return this;
        }

        public Builder forecastProperties(VisualsLineChartVisualChartConfigurationForecastConfigurationForecastPropertiesArgs forecastProperties) {
            return forecastProperties(Output.of(forecastProperties));
        }

        public Builder scenario(@Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs> scenario) {
            $.scenario = scenario;
            return this;
        }

        public Builder scenario(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs scenario) {
            return scenario(Output.of(scenario));
        }

        public VisualsLineChartVisualChartConfigurationForecastConfigurationArgs build() {
            return $;
        }
    }

}
