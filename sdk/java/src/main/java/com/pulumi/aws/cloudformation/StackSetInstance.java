// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cloudformation.StackSetInstanceArgs;
import com.pulumi.aws.cloudformation.inputs.StackSetInstanceState;
import com.pulumi.aws.cloudformation.outputs.StackSetInstanceDeploymentTargets;
import com.pulumi.aws.cloudformation.outputs.StackSetInstanceOperationPreferences;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:cloudformation/stackSetInstance:StackSetInstance")
public class StackSetInstance extends com.pulumi.resources.CustomResource {
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }
    @Export(name="callAs", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> callAs;

    public Output<Optional<String>> callAs() {
        return Codegen.optional(this.callAs);
    }
    @Export(name="deploymentTargets", refs={StackSetInstanceDeploymentTargets.class}, tree="[0]")
    private Output</* @Nullable */ StackSetInstanceDeploymentTargets> deploymentTargets;

    public Output<Optional<StackSetInstanceDeploymentTargets>> deploymentTargets() {
        return Codegen.optional(this.deploymentTargets);
    }
    @Export(name="operationPreferences", refs={StackSetInstanceOperationPreferences.class}, tree="[0]")
    private Output</* @Nullable */ StackSetInstanceOperationPreferences> operationPreferences;

    public Output<Optional<StackSetInstanceOperationPreferences>> operationPreferences() {
        return Codegen.optional(this.operationPreferences);
    }
    @Export(name="organizationalUnitId", refs={String.class}, tree="[0]")
    private Output<String> organizationalUnitId;

    public Output<String> organizationalUnitId() {
        return this.organizationalUnitId;
    }
    @Export(name="parameterOverrides", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> parameterOverrides;

    public Output<Optional<Map<String,String>>> parameterOverrides() {
        return Codegen.optional(this.parameterOverrides);
    }
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }
    @Export(name="retainStack", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> retainStack;

    public Output<Optional<Boolean>> retainStack() {
        return Codegen.optional(this.retainStack);
    }
    @Export(name="stackId", refs={String.class}, tree="[0]")
    private Output<String> stackId;

    public Output<String> stackId() {
        return this.stackId;
    }
    @Export(name="stackSetName", refs={String.class}, tree="[0]")
    private Output<String> stackSetName;

    public Output<String> stackSetName() {
        return this.stackSetName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StackSetInstance(String name) {
        this(name, StackSetInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StackSetInstance(String name, StackSetInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StackSetInstance(String name, StackSetInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudformation/stackSetInstance:StackSetInstance", name, args == null ? StackSetInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StackSetInstance(String name, Output<String> id, @Nullable StackSetInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudformation/stackSetInstance:StackSetInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StackSetInstance get(String name, Output<String> id, @Nullable StackSetInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StackSetInstance(name, id, state, options);
    }
}
