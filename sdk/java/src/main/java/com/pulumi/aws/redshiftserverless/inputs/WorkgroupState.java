// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless.inputs;

import com.pulumi.aws.redshiftserverless.inputs.WorkgroupConfigParameterArgs;
import com.pulumi.aws.redshiftserverless.inputs.WorkgroupEndpointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkgroupState extends com.pulumi.resources.ResourceArgs {

    public static final WorkgroupState Empty = new WorkgroupState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="baseCapacity")
    private @Nullable Output<Integer> baseCapacity;

    public Optional<Output<Integer>> baseCapacity() {
        return Optional.ofNullable(this.baseCapacity);
    }

    @Import(name="configParameters")
    private @Nullable Output<List<WorkgroupConfigParameterArgs>> configParameters;

    public Optional<Output<List<WorkgroupConfigParameterArgs>>> configParameters() {
        return Optional.ofNullable(this.configParameters);
    }

    @Import(name="endpoints")
    private @Nullable Output<List<WorkgroupEndpointArgs>> endpoints;

    public Optional<Output<List<WorkgroupEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    @Import(name="enhancedVpcRouting")
    private @Nullable Output<Boolean> enhancedVpcRouting;

    public Optional<Output<Boolean>> enhancedVpcRouting() {
        return Optional.ofNullable(this.enhancedVpcRouting);
    }

    @Import(name="namespaceName")
    private @Nullable Output<String> namespaceName;

    public Optional<Output<String>> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }

    @Import(name="publiclyAccessible")
    private @Nullable Output<Boolean> publiclyAccessible;

    public Optional<Output<Boolean>> publiclyAccessible() {
        return Optional.ofNullable(this.publiclyAccessible);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="workgroupId")
    private @Nullable Output<String> workgroupId;

    public Optional<Output<String>> workgroupId() {
        return Optional.ofNullable(this.workgroupId);
    }

    @Import(name="workgroupName")
    private @Nullable Output<String> workgroupName;

    public Optional<Output<String>> workgroupName() {
        return Optional.ofNullable(this.workgroupName);
    }

    private WorkgroupState() {}

    private WorkgroupState(WorkgroupState $) {
        this.arn = $.arn;
        this.baseCapacity = $.baseCapacity;
        this.configParameters = $.configParameters;
        this.endpoints = $.endpoints;
        this.enhancedVpcRouting = $.enhancedVpcRouting;
        this.namespaceName = $.namespaceName;
        this.publiclyAccessible = $.publiclyAccessible;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.workgroupId = $.workgroupId;
        this.workgroupName = $.workgroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkgroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkgroupState $;

        public Builder() {
            $ = new WorkgroupState();
        }

        public Builder(WorkgroupState defaults) {
            $ = new WorkgroupState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder baseCapacity(@Nullable Output<Integer> baseCapacity) {
            $.baseCapacity = baseCapacity;
            return this;
        }

        public Builder baseCapacity(Integer baseCapacity) {
            return baseCapacity(Output.of(baseCapacity));
        }

        public Builder configParameters(@Nullable Output<List<WorkgroupConfigParameterArgs>> configParameters) {
            $.configParameters = configParameters;
            return this;
        }

        public Builder configParameters(List<WorkgroupConfigParameterArgs> configParameters) {
            return configParameters(Output.of(configParameters));
        }

        public Builder configParameters(WorkgroupConfigParameterArgs... configParameters) {
            return configParameters(List.of(configParameters));
        }

        public Builder endpoints(@Nullable Output<List<WorkgroupEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(List<WorkgroupEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        public Builder endpoints(WorkgroupEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        public Builder enhancedVpcRouting(@Nullable Output<Boolean> enhancedVpcRouting) {
            $.enhancedVpcRouting = enhancedVpcRouting;
            return this;
        }

        public Builder enhancedVpcRouting(Boolean enhancedVpcRouting) {
            return enhancedVpcRouting(Output.of(enhancedVpcRouting));
        }

        public Builder namespaceName(@Nullable Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        public Builder publiclyAccessible(@Nullable Output<Boolean> publiclyAccessible) {
            $.publiclyAccessible = publiclyAccessible;
            return this;
        }

        public Builder publiclyAccessible(Boolean publiclyAccessible) {
            return publiclyAccessible(Output.of(publiclyAccessible));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder workgroupId(@Nullable Output<String> workgroupId) {
            $.workgroupId = workgroupId;
            return this;
        }

        public Builder workgroupId(String workgroupId) {
            return workgroupId(Output.of(workgroupId));
        }

        public Builder workgroupName(@Nullable Output<String> workgroupName) {
            $.workgroupName = workgroupName;
            return this;
        }

        public Builder workgroupName(String workgroupName) {
            return workgroupName(Output.of(workgroupName));
        }

        public WorkgroupState build() {
            return $;
        }
    }

}
