// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FindingAggregatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final FindingAggregatorArgs Empty = new FindingAggregatorArgs();

    /**
     * Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are `ALL_REGIONS`, `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`. When `ALL_REGIONS` or `ALL_REGIONS_EXCEPT_SPECIFIED` are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
     * 
     */
    @Import(name="linkingMode", required=true)
    private Output<String> linkingMode;

    /**
     * @return Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are `ALL_REGIONS`, `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`. When `ALL_REGIONS` or `ALL_REGIONS_EXCEPT_SPECIFIED` are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
     * 
     */
    public Output<String> linkingMode() {
        return this.linkingMode;
    }

    /**
     * List of regions to include or exclude (required if `linking_mode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)
     * 
     */
    @Import(name="specifiedRegions")
    private @Nullable Output<List<String>> specifiedRegions;

    /**
     * @return List of regions to include or exclude (required if `linking_mode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)
     * 
     */
    public Optional<Output<List<String>>> specifiedRegions() {
        return Optional.ofNullable(this.specifiedRegions);
    }

    private FindingAggregatorArgs() {}

    private FindingAggregatorArgs(FindingAggregatorArgs $) {
        this.linkingMode = $.linkingMode;
        this.specifiedRegions = $.specifiedRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FindingAggregatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FindingAggregatorArgs $;

        public Builder() {
            $ = new FindingAggregatorArgs();
        }

        public Builder(FindingAggregatorArgs defaults) {
            $ = new FindingAggregatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linkingMode Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are `ALL_REGIONS`, `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`. When `ALL_REGIONS` or `ALL_REGIONS_EXCEPT_SPECIFIED` are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
         * 
         * @return builder
         * 
         */
        public Builder linkingMode(Output<String> linkingMode) {
            $.linkingMode = linkingMode;
            return this;
        }

        /**
         * @param linkingMode Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are `ALL_REGIONS`, `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`. When `ALL_REGIONS` or `ALL_REGIONS_EXCEPT_SPECIFIED` are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
         * 
         * @return builder
         * 
         */
        public Builder linkingMode(String linkingMode) {
            return linkingMode(Output.of(linkingMode));
        }

        /**
         * @param specifiedRegions List of regions to include or exclude (required if `linking_mode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)
         * 
         * @return builder
         * 
         */
        public Builder specifiedRegions(@Nullable Output<List<String>> specifiedRegions) {
            $.specifiedRegions = specifiedRegions;
            return this;
        }

        /**
         * @param specifiedRegions List of regions to include or exclude (required if `linking_mode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)
         * 
         * @return builder
         * 
         */
        public Builder specifiedRegions(List<String> specifiedRegions) {
            return specifiedRegions(Output.of(specifiedRegions));
        }

        /**
         * @param specifiedRegions List of regions to include or exclude (required if `linking_mode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)
         * 
         * @return builder
         * 
         */
        public Builder specifiedRegions(String... specifiedRegions) {
            return specifiedRegions(List.of(specifiedRegions));
        }

        public FindingAggregatorArgs build() {
            if ($.linkingMode == null) {
                throw new MissingRequiredPropertyException("FindingAggregatorArgs", "linkingMode");
            }
            return $;
        }
    }

}
