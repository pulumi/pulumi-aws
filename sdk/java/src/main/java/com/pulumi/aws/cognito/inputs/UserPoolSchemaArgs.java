// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.aws.cognito.inputs.UserPoolSchemaNumberAttributeConstraintsArgs;
import com.pulumi.aws.cognito.inputs.UserPoolSchemaStringAttributeConstraintsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPoolSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPoolSchemaArgs Empty = new UserPoolSchemaArgs();

    @Import(name="attributeDataType", required=true)
    private Output<String> attributeDataType;

    public Output<String> attributeDataType() {
        return this.attributeDataType;
    }

    @Import(name="developerOnlyAttribute")
    private @Nullable Output<Boolean> developerOnlyAttribute;

    public Optional<Output<Boolean>> developerOnlyAttribute() {
        return Optional.ofNullable(this.developerOnlyAttribute);
    }

    @Import(name="mutable")
    private @Nullable Output<Boolean> mutable;

    public Optional<Output<Boolean>> mutable() {
        return Optional.ofNullable(this.mutable);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="numberAttributeConstraints")
    private @Nullable Output<UserPoolSchemaNumberAttributeConstraintsArgs> numberAttributeConstraints;

    public Optional<Output<UserPoolSchemaNumberAttributeConstraintsArgs>> numberAttributeConstraints() {
        return Optional.ofNullable(this.numberAttributeConstraints);
    }

    @Import(name="required")
    private @Nullable Output<Boolean> required;

    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    @Import(name="stringAttributeConstraints")
    private @Nullable Output<UserPoolSchemaStringAttributeConstraintsArgs> stringAttributeConstraints;

    public Optional<Output<UserPoolSchemaStringAttributeConstraintsArgs>> stringAttributeConstraints() {
        return Optional.ofNullable(this.stringAttributeConstraints);
    }

    private UserPoolSchemaArgs() {}

    private UserPoolSchemaArgs(UserPoolSchemaArgs $) {
        this.attributeDataType = $.attributeDataType;
        this.developerOnlyAttribute = $.developerOnlyAttribute;
        this.mutable = $.mutable;
        this.name = $.name;
        this.numberAttributeConstraints = $.numberAttributeConstraints;
        this.required = $.required;
        this.stringAttributeConstraints = $.stringAttributeConstraints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPoolSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPoolSchemaArgs $;

        public Builder() {
            $ = new UserPoolSchemaArgs();
        }

        public Builder(UserPoolSchemaArgs defaults) {
            $ = new UserPoolSchemaArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributeDataType(Output<String> attributeDataType) {
            $.attributeDataType = attributeDataType;
            return this;
        }

        public Builder attributeDataType(String attributeDataType) {
            return attributeDataType(Output.of(attributeDataType));
        }

        public Builder developerOnlyAttribute(@Nullable Output<Boolean> developerOnlyAttribute) {
            $.developerOnlyAttribute = developerOnlyAttribute;
            return this;
        }

        public Builder developerOnlyAttribute(Boolean developerOnlyAttribute) {
            return developerOnlyAttribute(Output.of(developerOnlyAttribute));
        }

        public Builder mutable(@Nullable Output<Boolean> mutable) {
            $.mutable = mutable;
            return this;
        }

        public Builder mutable(Boolean mutable) {
            return mutable(Output.of(mutable));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder numberAttributeConstraints(@Nullable Output<UserPoolSchemaNumberAttributeConstraintsArgs> numberAttributeConstraints) {
            $.numberAttributeConstraints = numberAttributeConstraints;
            return this;
        }

        public Builder numberAttributeConstraints(UserPoolSchemaNumberAttributeConstraintsArgs numberAttributeConstraints) {
            return numberAttributeConstraints(Output.of(numberAttributeConstraints));
        }

        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        public Builder stringAttributeConstraints(@Nullable Output<UserPoolSchemaStringAttributeConstraintsArgs> stringAttributeConstraints) {
            $.stringAttributeConstraints = stringAttributeConstraints;
            return this;
        }

        public Builder stringAttributeConstraints(UserPoolSchemaStringAttributeConstraintsArgs stringAttributeConstraints) {
            return stringAttributeConstraints(Output.of(stringAttributeConstraints));
        }

        public UserPoolSchemaArgs build() {
            $.attributeDataType = Objects.requireNonNull($.attributeDataType, "expected parameter 'attributeDataType' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
