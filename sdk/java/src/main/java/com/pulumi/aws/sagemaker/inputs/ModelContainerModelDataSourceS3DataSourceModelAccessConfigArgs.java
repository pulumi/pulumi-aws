// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs Empty = new ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs();

    /**
     * Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
     * 
     */
    @Import(name="acceptEula", required=true)
    private Output<Boolean> acceptEula;

    /**
     * @return Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
     * 
     */
    public Output<Boolean> acceptEula() {
        return this.acceptEula;
    }

    private ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs() {}

    private ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs(ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs $) {
        this.acceptEula = $.acceptEula;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs $;

        public Builder() {
            $ = new ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs();
        }

        public Builder(ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs defaults) {
            $ = new ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptEula Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
         * 
         * @return builder
         * 
         */
        public Builder acceptEula(Output<Boolean> acceptEula) {
            $.acceptEula = acceptEula;
            return this;
        }

        /**
         * @param acceptEula Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
         * 
         * @return builder
         * 
         */
        public Builder acceptEula(Boolean acceptEula) {
            return acceptEula(Output.of(acceptEula));
        }

        public ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs build() {
            if ($.acceptEula == null) {
                throw new MissingRequiredPropertyException("ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs", "acceptEula");
            }
            return $;
        }
    }

}
