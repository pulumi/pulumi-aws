// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalReplicationGroupGlobalNodeGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalReplicationGroupGlobalNodeGroupArgs Empty = new GlobalReplicationGroupGlobalNodeGroupArgs();

    /**
     * The ID of the global node group.
     * 
     */
    @Import(name="globalNodeGroupId")
    private @Nullable Output<String> globalNodeGroupId;

    /**
     * @return The ID of the global node group.
     * 
     */
    public Optional<Output<String>> globalNodeGroupId() {
        return Optional.ofNullable(this.globalNodeGroupId);
    }

    /**
     * The keyspace for this node group.
     * 
     */
    @Import(name="slots")
    private @Nullable Output<String> slots;

    /**
     * @return The keyspace for this node group.
     * 
     */
    public Optional<Output<String>> slots() {
        return Optional.ofNullable(this.slots);
    }

    private GlobalReplicationGroupGlobalNodeGroupArgs() {}

    private GlobalReplicationGroupGlobalNodeGroupArgs(GlobalReplicationGroupGlobalNodeGroupArgs $) {
        this.globalNodeGroupId = $.globalNodeGroupId;
        this.slots = $.slots;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalReplicationGroupGlobalNodeGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalReplicationGroupGlobalNodeGroupArgs $;

        public Builder() {
            $ = new GlobalReplicationGroupGlobalNodeGroupArgs();
        }

        public Builder(GlobalReplicationGroupGlobalNodeGroupArgs defaults) {
            $ = new GlobalReplicationGroupGlobalNodeGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param globalNodeGroupId The ID of the global node group.
         * 
         * @return builder
         * 
         */
        public Builder globalNodeGroupId(@Nullable Output<String> globalNodeGroupId) {
            $.globalNodeGroupId = globalNodeGroupId;
            return this;
        }

        /**
         * @param globalNodeGroupId The ID of the global node group.
         * 
         * @return builder
         * 
         */
        public Builder globalNodeGroupId(String globalNodeGroupId) {
            return globalNodeGroupId(Output.of(globalNodeGroupId));
        }

        /**
         * @param slots The keyspace for this node group.
         * 
         * @return builder
         * 
         */
        public Builder slots(@Nullable Output<String> slots) {
            $.slots = slots;
            return this;
        }

        /**
         * @param slots The keyspace for this node group.
         * 
         * @return builder
         * 
         */
        public Builder slots(String slots) {
            return slots(Output.of(slots));
        }

        public GlobalReplicationGroupGlobalNodeGroupArgs build() {
            return $;
        }
    }

}
