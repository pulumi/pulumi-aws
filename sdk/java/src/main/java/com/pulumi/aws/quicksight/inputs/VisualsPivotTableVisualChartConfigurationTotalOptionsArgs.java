// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationTotalOptionsColumnSubtotalOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationTotalOptionsColumnTotalOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationTotalOptionsRowTotalOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualChartConfigurationTotalOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationTotalOptionsArgs Empty = new VisualsPivotTableVisualChartConfigurationTotalOptionsArgs();

    @Import(name="columnSubtotalOptions")
    private @Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnSubtotalOptionsArgs> columnSubtotalOptions;

    public Optional<Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnSubtotalOptionsArgs>> columnSubtotalOptions() {
        return Optional.ofNullable(this.columnSubtotalOptions);
    }

    @Import(name="columnTotalOptions")
    private @Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnTotalOptionsArgs> columnTotalOptions;

    public Optional<Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnTotalOptionsArgs>> columnTotalOptions() {
        return Optional.ofNullable(this.columnTotalOptions);
    }

    @Import(name="rowSubtotalOptions")
    private @Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsArgs> rowSubtotalOptions;

    public Optional<Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsArgs>> rowSubtotalOptions() {
        return Optional.ofNullable(this.rowSubtotalOptions);
    }

    @Import(name="rowTotalOptions")
    private @Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowTotalOptionsArgs> rowTotalOptions;

    public Optional<Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowTotalOptionsArgs>> rowTotalOptions() {
        return Optional.ofNullable(this.rowTotalOptions);
    }

    private VisualsPivotTableVisualChartConfigurationTotalOptionsArgs() {}

    private VisualsPivotTableVisualChartConfigurationTotalOptionsArgs(VisualsPivotTableVisualChartConfigurationTotalOptionsArgs $) {
        this.columnSubtotalOptions = $.columnSubtotalOptions;
        this.columnTotalOptions = $.columnTotalOptions;
        this.rowSubtotalOptions = $.rowSubtotalOptions;
        this.rowTotalOptions = $.rowTotalOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationTotalOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationTotalOptionsArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationTotalOptionsArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationTotalOptionsArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationTotalOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder columnSubtotalOptions(@Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnSubtotalOptionsArgs> columnSubtotalOptions) {
            $.columnSubtotalOptions = columnSubtotalOptions;
            return this;
        }

        public Builder columnSubtotalOptions(VisualsPivotTableVisualChartConfigurationTotalOptionsColumnSubtotalOptionsArgs columnSubtotalOptions) {
            return columnSubtotalOptions(Output.of(columnSubtotalOptions));
        }

        public Builder columnTotalOptions(@Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsColumnTotalOptionsArgs> columnTotalOptions) {
            $.columnTotalOptions = columnTotalOptions;
            return this;
        }

        public Builder columnTotalOptions(VisualsPivotTableVisualChartConfigurationTotalOptionsColumnTotalOptionsArgs columnTotalOptions) {
            return columnTotalOptions(Output.of(columnTotalOptions));
        }

        public Builder rowSubtotalOptions(@Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsArgs> rowSubtotalOptions) {
            $.rowSubtotalOptions = rowSubtotalOptions;
            return this;
        }

        public Builder rowSubtotalOptions(VisualsPivotTableVisualChartConfigurationTotalOptionsRowSubtotalOptionsArgs rowSubtotalOptions) {
            return rowSubtotalOptions(Output.of(rowSubtotalOptions));
        }

        public Builder rowTotalOptions(@Nullable Output<VisualsPivotTableVisualChartConfigurationTotalOptionsRowTotalOptionsArgs> rowTotalOptions) {
            $.rowTotalOptions = rowTotalOptions;
            return this;
        }

        public Builder rowTotalOptions(VisualsPivotTableVisualChartConfigurationTotalOptionsRowTotalOptionsArgs rowTotalOptions) {
            return rowTotalOptions(Output.of(rowTotalOptions));
        }

        public VisualsPivotTableVisualChartConfigurationTotalOptionsArgs build() {
            return $;
        }
    }

}
