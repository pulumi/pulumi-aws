// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsArgs;
import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.DataLabelsOptionsArgs;
import com.pulumi.aws.quicksight.inputs.LegendOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualPaletteArgs;
import com.pulumi.aws.quicksight.inputs.VisualsWaterfallVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsWaterfallVisualChartConfigurationSortConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.VisualsWaterfallVisualChartConfigurationWaterfallChartOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsWaterfallVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsWaterfallVisualChartConfigurationArgs Empty = new VisualsWaterfallVisualChartConfigurationArgs();

    @Import(name="categoryAxisDisplayOptions")
    private @Nullable Output<AxisDisplayOptionsArgs> categoryAxisDisplayOptions;

    public Optional<Output<AxisDisplayOptionsArgs>> categoryAxisDisplayOptions() {
        return Optional.ofNullable(this.categoryAxisDisplayOptions);
    }

    @Import(name="categoryAxisLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> categoryAxisLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> categoryAxisLabelOptions() {
        return Optional.ofNullable(this.categoryAxisLabelOptions);
    }

    @Import(name="dataLabels")
    private @Nullable Output<DataLabelsOptionsArgs> dataLabels;

    public Optional<Output<DataLabelsOptionsArgs>> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }

    @Import(name="fieldWells")
    private @Nullable Output<VisualsWaterfallVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsWaterfallVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="legend")
    private @Nullable Output<LegendOptionsArgs> legend;

    public Optional<Output<LegendOptionsArgs>> legend() {
        return Optional.ofNullable(this.legend);
    }

    @Import(name="primaryYAxisDisplayOptions")
    private @Nullable Output<AxisDisplayOptionsArgs> primaryYAxisDisplayOptions;

    public Optional<Output<AxisDisplayOptionsArgs>> primaryYAxisDisplayOptions() {
        return Optional.ofNullable(this.primaryYAxisDisplayOptions);
    }

    @Import(name="primaryYAxisLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> primaryYAxisLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> primaryYAxisLabelOptions() {
        return Optional.ofNullable(this.primaryYAxisLabelOptions);
    }

    @Import(name="sortConfiguration")
    private @Nullable Output<VisualsWaterfallVisualChartConfigurationSortConfigurationArgs> sortConfiguration;

    public Optional<Output<VisualsWaterfallVisualChartConfigurationSortConfigurationArgs>> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }

    @Import(name="visualPalette")
    private @Nullable Output<VisualPaletteArgs> visualPalette;

    public Optional<Output<VisualPaletteArgs>> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    @Import(name="waterfallChartOptions")
    private @Nullable Output<VisualsWaterfallVisualChartConfigurationWaterfallChartOptionsArgs> waterfallChartOptions;

    public Optional<Output<VisualsWaterfallVisualChartConfigurationWaterfallChartOptionsArgs>> waterfallChartOptions() {
        return Optional.ofNullable(this.waterfallChartOptions);
    }

    private VisualsWaterfallVisualChartConfigurationArgs() {}

    private VisualsWaterfallVisualChartConfigurationArgs(VisualsWaterfallVisualChartConfigurationArgs $) {
        this.categoryAxisDisplayOptions = $.categoryAxisDisplayOptions;
        this.categoryAxisLabelOptions = $.categoryAxisLabelOptions;
        this.dataLabels = $.dataLabels;
        this.fieldWells = $.fieldWells;
        this.legend = $.legend;
        this.primaryYAxisDisplayOptions = $.primaryYAxisDisplayOptions;
        this.primaryYAxisLabelOptions = $.primaryYAxisLabelOptions;
        this.sortConfiguration = $.sortConfiguration;
        this.visualPalette = $.visualPalette;
        this.waterfallChartOptions = $.waterfallChartOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsWaterfallVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsWaterfallVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsWaterfallVisualChartConfigurationArgs();
        }

        public Builder(VisualsWaterfallVisualChartConfigurationArgs defaults) {
            $ = new VisualsWaterfallVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder categoryAxisDisplayOptions(@Nullable Output<AxisDisplayOptionsArgs> categoryAxisDisplayOptions) {
            $.categoryAxisDisplayOptions = categoryAxisDisplayOptions;
            return this;
        }

        public Builder categoryAxisDisplayOptions(AxisDisplayOptionsArgs categoryAxisDisplayOptions) {
            return categoryAxisDisplayOptions(Output.of(categoryAxisDisplayOptions));
        }

        public Builder categoryAxisLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> categoryAxisLabelOptions) {
            $.categoryAxisLabelOptions = categoryAxisLabelOptions;
            return this;
        }

        public Builder categoryAxisLabelOptions(ChartAxisLabelOptionsArgs categoryAxisLabelOptions) {
            return categoryAxisLabelOptions(Output.of(categoryAxisLabelOptions));
        }

        public Builder dataLabels(@Nullable Output<DataLabelsOptionsArgs> dataLabels) {
            $.dataLabels = dataLabels;
            return this;
        }

        public Builder dataLabels(DataLabelsOptionsArgs dataLabels) {
            return dataLabels(Output.of(dataLabels));
        }

        public Builder fieldWells(@Nullable Output<VisualsWaterfallVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsWaterfallVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder legend(@Nullable Output<LegendOptionsArgs> legend) {
            $.legend = legend;
            return this;
        }

        public Builder legend(LegendOptionsArgs legend) {
            return legend(Output.of(legend));
        }

        public Builder primaryYAxisDisplayOptions(@Nullable Output<AxisDisplayOptionsArgs> primaryYAxisDisplayOptions) {
            $.primaryYAxisDisplayOptions = primaryYAxisDisplayOptions;
            return this;
        }

        public Builder primaryYAxisDisplayOptions(AxisDisplayOptionsArgs primaryYAxisDisplayOptions) {
            return primaryYAxisDisplayOptions(Output.of(primaryYAxisDisplayOptions));
        }

        public Builder primaryYAxisLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> primaryYAxisLabelOptions) {
            $.primaryYAxisLabelOptions = primaryYAxisLabelOptions;
            return this;
        }

        public Builder primaryYAxisLabelOptions(ChartAxisLabelOptionsArgs primaryYAxisLabelOptions) {
            return primaryYAxisLabelOptions(Output.of(primaryYAxisLabelOptions));
        }

        public Builder sortConfiguration(@Nullable Output<VisualsWaterfallVisualChartConfigurationSortConfigurationArgs> sortConfiguration) {
            $.sortConfiguration = sortConfiguration;
            return this;
        }

        public Builder sortConfiguration(VisualsWaterfallVisualChartConfigurationSortConfigurationArgs sortConfiguration) {
            return sortConfiguration(Output.of(sortConfiguration));
        }

        public Builder visualPalette(@Nullable Output<VisualPaletteArgs> visualPalette) {
            $.visualPalette = visualPalette;
            return this;
        }

        public Builder visualPalette(VisualPaletteArgs visualPalette) {
            return visualPalette(Output.of(visualPalette));
        }

        public Builder waterfallChartOptions(@Nullable Output<VisualsWaterfallVisualChartConfigurationWaterfallChartOptionsArgs> waterfallChartOptions) {
            $.waterfallChartOptions = waterfallChartOptions;
            return this;
        }

        public Builder waterfallChartOptions(VisualsWaterfallVisualChartConfigurationWaterfallChartOptionsArgs waterfallChartOptions) {
            return waterfallChartOptions(Output.of(waterfallChartOptions));
        }

        public VisualsWaterfallVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
