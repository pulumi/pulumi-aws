// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MultiplexMultiplexSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MultiplexMultiplexSettingsArgs Empty = new MultiplexMultiplexSettingsArgs();

    @Import(name="maximumVideoBufferDelayMilliseconds")
    private @Nullable Output<Integer> maximumVideoBufferDelayMilliseconds;

    public Optional<Output<Integer>> maximumVideoBufferDelayMilliseconds() {
        return Optional.ofNullable(this.maximumVideoBufferDelayMilliseconds);
    }

    @Import(name="transportStreamBitrate", required=true)
    private Output<Integer> transportStreamBitrate;

    public Output<Integer> transportStreamBitrate() {
        return this.transportStreamBitrate;
    }

    @Import(name="transportStreamId", required=true)
    private Output<Integer> transportStreamId;

    public Output<Integer> transportStreamId() {
        return this.transportStreamId;
    }

    @Import(name="transportStreamReservedBitrate")
    private @Nullable Output<Integer> transportStreamReservedBitrate;

    public Optional<Output<Integer>> transportStreamReservedBitrate() {
        return Optional.ofNullable(this.transportStreamReservedBitrate);
    }

    private MultiplexMultiplexSettingsArgs() {}

    private MultiplexMultiplexSettingsArgs(MultiplexMultiplexSettingsArgs $) {
        this.maximumVideoBufferDelayMilliseconds = $.maximumVideoBufferDelayMilliseconds;
        this.transportStreamBitrate = $.transportStreamBitrate;
        this.transportStreamId = $.transportStreamId;
        this.transportStreamReservedBitrate = $.transportStreamReservedBitrate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiplexMultiplexSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiplexMultiplexSettingsArgs $;

        public Builder() {
            $ = new MultiplexMultiplexSettingsArgs();
        }

        public Builder(MultiplexMultiplexSettingsArgs defaults) {
            $ = new MultiplexMultiplexSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder maximumVideoBufferDelayMilliseconds(@Nullable Output<Integer> maximumVideoBufferDelayMilliseconds) {
            $.maximumVideoBufferDelayMilliseconds = maximumVideoBufferDelayMilliseconds;
            return this;
        }

        public Builder maximumVideoBufferDelayMilliseconds(Integer maximumVideoBufferDelayMilliseconds) {
            return maximumVideoBufferDelayMilliseconds(Output.of(maximumVideoBufferDelayMilliseconds));
        }

        public Builder transportStreamBitrate(Output<Integer> transportStreamBitrate) {
            $.transportStreamBitrate = transportStreamBitrate;
            return this;
        }

        public Builder transportStreamBitrate(Integer transportStreamBitrate) {
            return transportStreamBitrate(Output.of(transportStreamBitrate));
        }

        public Builder transportStreamId(Output<Integer> transportStreamId) {
            $.transportStreamId = transportStreamId;
            return this;
        }

        public Builder transportStreamId(Integer transportStreamId) {
            return transportStreamId(Output.of(transportStreamId));
        }

        public Builder transportStreamReservedBitrate(@Nullable Output<Integer> transportStreamReservedBitrate) {
            $.transportStreamReservedBitrate = transportStreamReservedBitrate;
            return this;
        }

        public Builder transportStreamReservedBitrate(Integer transportStreamReservedBitrate) {
            return transportStreamReservedBitrate(Output.of(transportStreamReservedBitrate));
        }

        public MultiplexMultiplexSettingsArgs build() {
            $.transportStreamBitrate = Objects.requireNonNull($.transportStreamBitrate, "expected parameter 'transportStreamBitrate' to be non-null");
            $.transportStreamId = Objects.requireNonNull($.transportStreamId, "expected parameter 'transportStreamId' to be non-null");
            return $;
        }
    }

}
