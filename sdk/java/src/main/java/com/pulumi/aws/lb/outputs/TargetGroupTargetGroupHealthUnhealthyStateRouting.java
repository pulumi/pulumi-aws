// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetGroupTargetGroupHealthUnhealthyStateRouting {
    /**
     * @return The minimum number of targets that must be healthy. If the number of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are `1` to the maximum number of targets. The default is `1`.
     * 
     */
    private @Nullable Integer minimumHealthyTargetsCount;
    /**
     * @return The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are `off` or an integer from `1` to `100`. The default is `off`.
     * 
     */
    private @Nullable String minimumHealthyTargetsPercentage;

    private TargetGroupTargetGroupHealthUnhealthyStateRouting() {}
    /**
     * @return The minimum number of targets that must be healthy. If the number of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are `1` to the maximum number of targets. The default is `1`.
     * 
     */
    public Optional<Integer> minimumHealthyTargetsCount() {
        return Optional.ofNullable(this.minimumHealthyTargetsCount);
    }
    /**
     * @return The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are `off` or an integer from `1` to `100`. The default is `off`.
     * 
     */
    public Optional<String> minimumHealthyTargetsPercentage() {
        return Optional.ofNullable(this.minimumHealthyTargetsPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetGroupTargetGroupHealthUnhealthyStateRouting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer minimumHealthyTargetsCount;
        private @Nullable String minimumHealthyTargetsPercentage;
        public Builder() {}
        public Builder(TargetGroupTargetGroupHealthUnhealthyStateRouting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minimumHealthyTargetsCount = defaults.minimumHealthyTargetsCount;
    	      this.minimumHealthyTargetsPercentage = defaults.minimumHealthyTargetsPercentage;
        }

        @CustomType.Setter
        public Builder minimumHealthyTargetsCount(@Nullable Integer minimumHealthyTargetsCount) {

            this.minimumHealthyTargetsCount = minimumHealthyTargetsCount;
            return this;
        }
        @CustomType.Setter
        public Builder minimumHealthyTargetsPercentage(@Nullable String minimumHealthyTargetsPercentage) {

            this.minimumHealthyTargetsPercentage = minimumHealthyTargetsPercentage;
            return this;
        }
        public TargetGroupTargetGroupHealthUnhealthyStateRouting build() {
            final var _resultValue = new TargetGroupTargetGroupHealthUnhealthyStateRouting();
            _resultValue.minimumHealthyTargetsCount = minimumHealthyTargetsCount;
            _resultValue.minimumHealthyTargetsPercentage = minimumHealthyTargetsPercentage;
            return _resultValue;
        }
    }
}
