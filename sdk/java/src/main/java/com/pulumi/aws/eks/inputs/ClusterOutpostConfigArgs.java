// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.aws.eks.inputs.ClusterOutpostConfigControlPlanePlacementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterOutpostConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterOutpostConfigArgs Empty = new ClusterOutpostConfigArgs();

    @Import(name="controlPlaneInstanceType", required=true)
    private Output<String> controlPlaneInstanceType;

    public Output<String> controlPlaneInstanceType() {
        return this.controlPlaneInstanceType;
    }

    @Import(name="controlPlanePlacement")
    private @Nullable Output<ClusterOutpostConfigControlPlanePlacementArgs> controlPlanePlacement;

    public Optional<Output<ClusterOutpostConfigControlPlanePlacementArgs>> controlPlanePlacement() {
        return Optional.ofNullable(this.controlPlanePlacement);
    }

    @Import(name="outpostArns", required=true)
    private Output<List<String>> outpostArns;

    public Output<List<String>> outpostArns() {
        return this.outpostArns;
    }

    private ClusterOutpostConfigArgs() {}

    private ClusterOutpostConfigArgs(ClusterOutpostConfigArgs $) {
        this.controlPlaneInstanceType = $.controlPlaneInstanceType;
        this.controlPlanePlacement = $.controlPlanePlacement;
        this.outpostArns = $.outpostArns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterOutpostConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterOutpostConfigArgs $;

        public Builder() {
            $ = new ClusterOutpostConfigArgs();
        }

        public Builder(ClusterOutpostConfigArgs defaults) {
            $ = new ClusterOutpostConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder controlPlaneInstanceType(Output<String> controlPlaneInstanceType) {
            $.controlPlaneInstanceType = controlPlaneInstanceType;
            return this;
        }

        public Builder controlPlaneInstanceType(String controlPlaneInstanceType) {
            return controlPlaneInstanceType(Output.of(controlPlaneInstanceType));
        }

        public Builder controlPlanePlacement(@Nullable Output<ClusterOutpostConfigControlPlanePlacementArgs> controlPlanePlacement) {
            $.controlPlanePlacement = controlPlanePlacement;
            return this;
        }

        public Builder controlPlanePlacement(ClusterOutpostConfigControlPlanePlacementArgs controlPlanePlacement) {
            return controlPlanePlacement(Output.of(controlPlanePlacement));
        }

        public Builder outpostArns(Output<List<String>> outpostArns) {
            $.outpostArns = outpostArns;
            return this;
        }

        public Builder outpostArns(List<String> outpostArns) {
            return outpostArns(Output.of(outpostArns));
        }

        public Builder outpostArns(String... outpostArns) {
            return outpostArns(List.of(outpostArns));
        }

        public ClusterOutpostConfigArgs build() {
            $.controlPlaneInstanceType = Objects.requireNonNull($.controlPlaneInstanceType, "expected parameter 'controlPlaneInstanceType' to be non-null");
            $.outpostArns = Objects.requireNonNull($.outpostArns, "expected parameter 'outpostArns' to be non-null");
            return $;
        }
    }

}
