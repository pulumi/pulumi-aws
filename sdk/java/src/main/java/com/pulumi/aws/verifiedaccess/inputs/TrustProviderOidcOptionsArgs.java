// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrustProviderOidcOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrustProviderOidcOptionsArgs Empty = new TrustProviderOidcOptionsArgs();

    @Import(name="authorizationEndpoint")
    private @Nullable Output<String> authorizationEndpoint;

    public Optional<Output<String>> authorizationEndpoint() {
        return Optional.ofNullable(this.authorizationEndpoint);
    }

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    @Import(name="scope")
    private @Nullable Output<String> scope;

    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    @Import(name="tokenEndpoint")
    private @Nullable Output<String> tokenEndpoint;

    public Optional<Output<String>> tokenEndpoint() {
        return Optional.ofNullable(this.tokenEndpoint);
    }

    @Import(name="userInfoEndpoint")
    private @Nullable Output<String> userInfoEndpoint;

    public Optional<Output<String>> userInfoEndpoint() {
        return Optional.ofNullable(this.userInfoEndpoint);
    }

    private TrustProviderOidcOptionsArgs() {}

    private TrustProviderOidcOptionsArgs(TrustProviderOidcOptionsArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.scope = $.scope;
        this.tokenEndpoint = $.tokenEndpoint;
        this.userInfoEndpoint = $.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrustProviderOidcOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrustProviderOidcOptionsArgs $;

        public Builder() {
            $ = new TrustProviderOidcOptionsArgs();
        }

        public Builder(TrustProviderOidcOptionsArgs defaults) {
            $ = new TrustProviderOidcOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationEndpoint(@Nullable Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public Builder tokenEndpoint(@Nullable Output<String> tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        public Builder tokenEndpoint(String tokenEndpoint) {
            return tokenEndpoint(Output.of(tokenEndpoint));
        }

        public Builder userInfoEndpoint(@Nullable Output<String> userInfoEndpoint) {
            $.userInfoEndpoint = userInfoEndpoint;
            return this;
        }

        public Builder userInfoEndpoint(String userInfoEndpoint) {
            return userInfoEndpoint(Output.of(userInfoEndpoint));
        }

        public TrustProviderOidcOptionsArgs build() {
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("TrustProviderOidcOptionsArgs", "clientSecret");
            }
            return $;
        }
    }

}
