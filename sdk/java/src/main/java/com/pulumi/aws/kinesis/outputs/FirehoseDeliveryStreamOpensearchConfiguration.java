// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.outputs;

import com.pulumi.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions;
import com.pulumi.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration;
import com.pulumi.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationVpcConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirehoseDeliveryStreamOpensearchConfiguration {
    /**
     * @return Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
     * 
     */
    private @Nullable Integer bufferingInterval;
    /**
     * @return Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
     * 
     */
    private @Nullable Integer bufferingSize;
    /**
     * @return The CloudWatch Logging Options for the delivery stream. More details are given below
     * 
     */
    private @Nullable FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions;
    /**
     * @return The endpoint to use when communicating with the cluster. Conflicts with `domain_arn`.
     * 
     */
    private @Nullable String clusterEndpoint;
    /**
     * @return The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `cluster_endpoint`.
     * 
     */
    private @Nullable String domainArn;
    /**
     * @return The Opensearch index name.
     * 
     */
    private String indexName;
    /**
     * @return The Opensearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
     * 
     */
    private @Nullable String indexRotationPeriod;
    /**
     * @return The data processing configuration.  More details are given below.
     * 
     */
    private @Nullable FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration processingConfiguration;
    /**
     * @return After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
     * 
     */
    private @Nullable Integer retryDuration;
    /**
     * @return The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
     * 
     */
    private String roleArn;
    /**
     * @return Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
     * 
     */
    private @Nullable String s3BackupMode;
    /**
     * @return The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
     * 
     */
    private @Nullable String typeName;
    /**
     * @return The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
     * 
     */
    private @Nullable FirehoseDeliveryStreamOpensearchConfigurationVpcConfig vpcConfig;

    private FirehoseDeliveryStreamOpensearchConfiguration() {}
    /**
     * @return Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
     * 
     */
    public Optional<Integer> bufferingInterval() {
        return Optional.ofNullable(this.bufferingInterval);
    }
    /**
     * @return Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
     * 
     */
    public Optional<Integer> bufferingSize() {
        return Optional.ofNullable(this.bufferingSize);
    }
    /**
     * @return The CloudWatch Logging Options for the delivery stream. More details are given below
     * 
     */
    public Optional<FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions> cloudwatchLoggingOptions() {
        return Optional.ofNullable(this.cloudwatchLoggingOptions);
    }
    /**
     * @return The endpoint to use when communicating with the cluster. Conflicts with `domain_arn`.
     * 
     */
    public Optional<String> clusterEndpoint() {
        return Optional.ofNullable(this.clusterEndpoint);
    }
    /**
     * @return The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `cluster_endpoint`.
     * 
     */
    public Optional<String> domainArn() {
        return Optional.ofNullable(this.domainArn);
    }
    /**
     * @return The Opensearch index name.
     * 
     */
    public String indexName() {
        return this.indexName;
    }
    /**
     * @return The Opensearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
     * 
     */
    public Optional<String> indexRotationPeriod() {
        return Optional.ofNullable(this.indexRotationPeriod);
    }
    /**
     * @return The data processing configuration.  More details are given below.
     * 
     */
    public Optional<FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }
    /**
     * @return After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
     * 
     */
    public Optional<Integer> retryDuration() {
        return Optional.ofNullable(this.retryDuration);
    }
    /**
     * @return The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
     * 
     */
    public Optional<String> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }
    /**
     * @return The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }
    /**
     * @return The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
     * 
     */
    public Optional<FirehoseDeliveryStreamOpensearchConfigurationVpcConfig> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamOpensearchConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer bufferingInterval;
        private @Nullable Integer bufferingSize;
        private @Nullable FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions;
        private @Nullable String clusterEndpoint;
        private @Nullable String domainArn;
        private String indexName;
        private @Nullable String indexRotationPeriod;
        private @Nullable FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration processingConfiguration;
        private @Nullable Integer retryDuration;
        private String roleArn;
        private @Nullable String s3BackupMode;
        private @Nullable String typeName;
        private @Nullable FirehoseDeliveryStreamOpensearchConfigurationVpcConfig vpcConfig;
        public Builder() {}
        public Builder(FirehoseDeliveryStreamOpensearchConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingInterval = defaults.bufferingInterval;
    	      this.bufferingSize = defaults.bufferingSize;
    	      this.cloudwatchLoggingOptions = defaults.cloudwatchLoggingOptions;
    	      this.clusterEndpoint = defaults.clusterEndpoint;
    	      this.domainArn = defaults.domainArn;
    	      this.indexName = defaults.indexName;
    	      this.indexRotationPeriod = defaults.indexRotationPeriod;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.retryDuration = defaults.retryDuration;
    	      this.roleArn = defaults.roleArn;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.typeName = defaults.typeName;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        @CustomType.Setter
        public Builder bufferingInterval(@Nullable Integer bufferingInterval) {
            this.bufferingInterval = bufferingInterval;
            return this;
        }
        @CustomType.Setter
        public Builder bufferingSize(@Nullable Integer bufferingSize) {
            this.bufferingSize = bufferingSize;
            return this;
        }
        @CustomType.Setter
        public Builder cloudwatchLoggingOptions(@Nullable FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions) {
            this.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            return this;
        }
        @CustomType.Setter
        public Builder clusterEndpoint(@Nullable String clusterEndpoint) {
            this.clusterEndpoint = clusterEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder domainArn(@Nullable String domainArn) {
            this.domainArn = domainArn;
            return this;
        }
        @CustomType.Setter
        public Builder indexName(String indexName) {
            this.indexName = Objects.requireNonNull(indexName);
            return this;
        }
        @CustomType.Setter
        public Builder indexRotationPeriod(@Nullable String indexRotationPeriod) {
            this.indexRotationPeriod = indexRotationPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder processingConfiguration(@Nullable FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder retryDuration(@Nullable Integer retryDuration) {
            this.retryDuration = retryDuration;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        @CustomType.Setter
        public Builder s3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfig(@Nullable FirehoseDeliveryStreamOpensearchConfigurationVpcConfig vpcConfig) {
            this.vpcConfig = vpcConfig;
            return this;
        }
        public FirehoseDeliveryStreamOpensearchConfiguration build() {
            final var o = new FirehoseDeliveryStreamOpensearchConfiguration();
            o.bufferingInterval = bufferingInterval;
            o.bufferingSize = bufferingSize;
            o.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            o.clusterEndpoint = clusterEndpoint;
            o.domainArn = domainArn;
            o.indexName = indexName;
            o.indexRotationPeriod = indexRotationPeriod;
            o.processingConfiguration = processingConfiguration;
            o.retryDuration = retryDuration;
            o.roleArn = roleArn;
            o.s3BackupMode = s3BackupMode;
            o.typeName = typeName;
            o.vpcConfig = vpcConfig;
            return o;
        }
    }
}
