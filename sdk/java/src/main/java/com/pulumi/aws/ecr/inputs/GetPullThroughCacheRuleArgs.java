// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPullThroughCacheRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPullThroughCacheRuleArgs Empty = new GetPullThroughCacheRuleArgs();

    /**
     * The repository name prefix to use when caching images from the source registry.
     * 
     */
    @Import(name="ecrRepositoryPrefix", required=true)
    private Output<String> ecrRepositoryPrefix;

    /**
     * @return The repository name prefix to use when caching images from the source registry.
     * 
     */
    public Output<String> ecrRepositoryPrefix() {
        return this.ecrRepositoryPrefix;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private GetPullThroughCacheRuleArgs() {}

    private GetPullThroughCacheRuleArgs(GetPullThroughCacheRuleArgs $) {
        this.ecrRepositoryPrefix = $.ecrRepositoryPrefix;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPullThroughCacheRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPullThroughCacheRuleArgs $;

        public Builder() {
            $ = new GetPullThroughCacheRuleArgs();
        }

        public Builder(GetPullThroughCacheRuleArgs defaults) {
            $ = new GetPullThroughCacheRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ecrRepositoryPrefix The repository name prefix to use when caching images from the source registry.
         * 
         * @return builder
         * 
         */
        public Builder ecrRepositoryPrefix(Output<String> ecrRepositoryPrefix) {
            $.ecrRepositoryPrefix = ecrRepositoryPrefix;
            return this;
        }

        /**
         * @param ecrRepositoryPrefix The repository name prefix to use when caching images from the source registry.
         * 
         * @return builder
         * 
         */
        public Builder ecrRepositoryPrefix(String ecrRepositoryPrefix) {
            return ecrRepositoryPrefix(Output.of(ecrRepositoryPrefix));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GetPullThroughCacheRuleArgs build() {
            if ($.ecrRepositoryPrefix == null) {
                throw new MissingRequiredPropertyException("GetPullThroughCacheRuleArgs", "ecrRepositoryPrefix");
            }
            return $;
        }
    }

}
