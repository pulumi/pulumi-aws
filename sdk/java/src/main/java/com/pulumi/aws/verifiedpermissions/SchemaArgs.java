// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions;

import com.pulumi.aws.verifiedpermissions.inputs.SchemaDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaArgs Empty = new SchemaArgs();

    /**
     * The definition of the schema.
     * 
     */
    @Import(name="definition")
    private @Nullable Output<SchemaDefinitionArgs> definition;

    /**
     * @return The definition of the schema.
     * 
     */
    public Optional<Output<SchemaDefinitionArgs>> definition() {
        return Optional.ofNullable(this.definition);
    }

    /**
     * The ID of the Policy Store.
     * 
     */
    @Import(name="policyStoreId", required=true)
    private Output<String> policyStoreId;

    /**
     * @return The ID of the Policy Store.
     * 
     */
    public Output<String> policyStoreId() {
        return this.policyStoreId;
    }

    private SchemaArgs() {}

    private SchemaArgs(SchemaArgs $) {
        this.definition = $.definition;
        this.policyStoreId = $.policyStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaArgs $;

        public Builder() {
            $ = new SchemaArgs();
        }

        public Builder(SchemaArgs defaults) {
            $ = new SchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definition The definition of the schema.
         * 
         * @return builder
         * 
         */
        public Builder definition(@Nullable Output<SchemaDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition The definition of the schema.
         * 
         * @return builder
         * 
         */
        public Builder definition(SchemaDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param policyStoreId The ID of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(Output<String> policyStoreId) {
            $.policyStoreId = policyStoreId;
            return this;
        }

        /**
         * @param policyStoreId The ID of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(String policyStoreId) {
            return policyStoreId(Output.of(policyStoreId));
        }

        public SchemaArgs build() {
            if ($.policyStoreId == null) {
                throw new MissingRequiredPropertyException("SchemaArgs", "policyStoreId");
            }
            return $;
        }
    }

}
