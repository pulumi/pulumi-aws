// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.mq.BrokerArgs;
import com.pulumi.aws.mq.inputs.BrokerState;
import com.pulumi.aws.mq.outputs.BrokerConfiguration;
import com.pulumi.aws.mq.outputs.BrokerEncryptionOptions;
import com.pulumi.aws.mq.outputs.BrokerInstance;
import com.pulumi.aws.mq.outputs.BrokerLdapServerMetadata;
import com.pulumi.aws.mq.outputs.BrokerLogs;
import com.pulumi.aws.mq.outputs.BrokerMaintenanceWindowStartTime;
import com.pulumi.aws.mq.outputs.BrokerUser;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Basic Example
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.mq.Broker;
 * import com.pulumi.aws.mq.BrokerArgs;
 * import com.pulumi.aws.mq.inputs.BrokerConfigurationArgs;
 * import com.pulumi.aws.mq.inputs.BrokerUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Broker("example", BrokerArgs.builder()
 *             .brokerName("example")
 *             .configuration(BrokerConfigurationArgs.builder()
 *                 .id(test.id())
 *                 .revision(test.latestRevision())
 *                 .build())
 *             .engineType("ActiveMQ")
 *             .engineVersion("5.17.6")
 *             .hostInstanceType("mq.t2.micro")
 *             .securityGroups(testAwsSecurityGroup.id())
 *             .users(BrokerUserArgs.builder()
 *                 .username("example_user")
 *                 .password("<password>")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### High-throughput Optimized Example
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.mq.Broker;
 * import com.pulumi.aws.mq.BrokerArgs;
 * import com.pulumi.aws.mq.inputs.BrokerConfigurationArgs;
 * import com.pulumi.aws.mq.inputs.BrokerUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Broker("example", BrokerArgs.builder()
 *             .brokerName("example")
 *             .configuration(BrokerConfigurationArgs.builder()
 *                 .id(test.id())
 *                 .revision(test.latestRevision())
 *                 .build())
 *             .engineType("ActiveMQ")
 *             .engineVersion("5.17.6")
 *             .storageType("ebs")
 *             .hostInstanceType("mq.m5.large")
 *             .securityGroups(testAwsSecurityGroup.id())
 *             .users(BrokerUserArgs.builder()
 *                 .username("example_user")
 *                 .password("<password>")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Cross-Region Data Replication
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.mq.Broker;
 * import com.pulumi.aws.mq.BrokerArgs;
 * import com.pulumi.aws.mq.inputs.BrokerUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var examplePrimary = new Broker("examplePrimary", BrokerArgs.builder()
 *             .applyImmediately(true)
 *             .brokerName("example_primary")
 *             .engineType("ActiveMQ")
 *             .engineVersion("5.17.6")
 *             .hostInstanceType("mq.m5.large")
 *             .securityGroups(examplePrimaryAwsSecurityGroup.id())
 *             .deploymentMode("ACTIVE_STANDBY_MULTI_AZ")
 *             .users(            
 *                 BrokerUserArgs.builder()
 *                     .username("example_user")
 *                     .password("<password>")
 *                     .build(),
 *                 BrokerUserArgs.builder()
 *                     .username("example_replication_user")
 *                     .password("<password>")
 *                     .replicationUser(true)
 *                     .build())
 *             .build());
 * 
 *         var example = new Broker("example", BrokerArgs.builder()
 *             .applyImmediately(true)
 *             .brokerName("example")
 *             .engineType("ActiveMQ")
 *             .engineVersion("5.17.6")
 *             .hostInstanceType("mq.m5.large")
 *             .securityGroups(exampleAwsSecurityGroup.id())
 *             .deploymentMode("ACTIVE_STANDBY_MULTI_AZ")
 *             .dataReplicationMode("CRDR")
 *             .dataReplicationPrimaryBrokerArn(primary.arn())
 *             .users(            
 *                 BrokerUserArgs.builder()
 *                     .username("example_user")
 *                     .password("<password>")
 *                     .build(),
 *                 BrokerUserArgs.builder()
 *                     .username("example_replication_user")
 *                     .password("<password>")
 *                     .replicationUser(true)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * See the [AWS MQ documentation](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/crdr-for-active-mq.html) on cross-region data replication for additional details.
 * 
 * ## Import
 * 
 * Using `pulumi import`, import MQ Brokers using their broker id. For example:
 * 
 * ```sh
 * $ pulumi import aws:mq/broker:Broker example a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc
 * ```
 * 
 */
@ResourceType(type="aws:mq/broker:Broker")
public class Broker extends com.pulumi.resources.CustomResource {
    /**
     * Whether to apply broker modifications immediately. Default is `false`.
     * 
     */
    @Export(name="applyImmediately", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> applyImmediately;

    /**
     * @return Whether to apply broker modifications immediately. Default is `false`.
     * 
     */
    public Output<Optional<Boolean>> applyImmediately() {
        return Codegen.optional(this.applyImmediately);
    }
    /**
     * ARN of the broker.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the broker.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Authentication strategy used to secure the broker. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
     * 
     */
    @Export(name="authenticationStrategy", refs={String.class}, tree="[0]")
    private Output<String> authenticationStrategy;

    /**
     * @return Authentication strategy used to secure the broker. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
     * 
     */
    public Output<String> authenticationStrategy() {
        return this.authenticationStrategy;
    }
    /**
     * Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.
     * 
     */
    @Export(name="autoMinorVersionUpgrade", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoMinorVersionUpgrade;

    /**
     * @return Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.
     * 
     */
    public Output<Optional<Boolean>> autoMinorVersionUpgrade() {
        return Codegen.optional(this.autoMinorVersionUpgrade);
    }
    /**
     * Name of the broker.
     * 
     */
    @Export(name="brokerName", refs={String.class}, tree="[0]")
    private Output<String> brokerName;

    /**
     * @return Name of the broker.
     * 
     */
    public Output<String> brokerName() {
        return this.brokerName;
    }
    /**
     * Configuration block for broker configuration. Applies to `engine_type` of `ActiveMQ` and `RabbitMQ` only. Detailed below.
     * 
     */
    @Export(name="configuration", refs={BrokerConfiguration.class}, tree="[0]")
    private Output<BrokerConfiguration> configuration;

    /**
     * @return Configuration block for broker configuration. Applies to `engine_type` of `ActiveMQ` and `RabbitMQ` only. Detailed below.
     * 
     */
    public Output<BrokerConfiguration> configuration() {
        return this.configuration;
    }
    /**
     * Whether this broker is part of a data replication pair. Valid values are `CRDR` and `NONE`.
     * 
     */
    @Export(name="dataReplicationMode", refs={String.class}, tree="[0]")
    private Output<String> dataReplicationMode;

    /**
     * @return Whether this broker is part of a data replication pair. Valid values are `CRDR` and `NONE`.
     * 
     */
    public Output<String> dataReplicationMode() {
        return this.dataReplicationMode;
    }
    /**
     * ARN of the primary broker used to replicate data in a data replication pair. Required when `data_replication_mode` is `CRDR`.
     * 
     */
    @Export(name="dataReplicationPrimaryBrokerArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataReplicationPrimaryBrokerArn;

    /**
     * @return ARN of the primary broker used to replicate data in a data replication pair. Required when `data_replication_mode` is `CRDR`.
     * 
     */
    public Output<Optional<String>> dataReplicationPrimaryBrokerArn() {
        return Codegen.optional(this.dataReplicationPrimaryBrokerArn);
    }
    /**
     * Deployment mode of the broker. Valid values are `SINGLE_INSTANCE`, `ACTIVE_STANDBY_MULTI_AZ`, and `CLUSTER_MULTI_AZ`. Default is `SINGLE_INSTANCE`.
     * 
     */
    @Export(name="deploymentMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deploymentMode;

    /**
     * @return Deployment mode of the broker. Valid values are `SINGLE_INSTANCE`, `ACTIVE_STANDBY_MULTI_AZ`, and `CLUSTER_MULTI_AZ`. Default is `SINGLE_INSTANCE`.
     * 
     */
    public Output<Optional<String>> deploymentMode() {
        return Codegen.optional(this.deploymentMode);
    }
    /**
     * Configuration block containing encryption options. Detailed below.
     * 
     */
    @Export(name="encryptionOptions", refs={BrokerEncryptionOptions.class}, tree="[0]")
    private Output</* @Nullable */ BrokerEncryptionOptions> encryptionOptions;

    /**
     * @return Configuration block containing encryption options. Detailed below.
     * 
     */
    public Output<Optional<BrokerEncryptionOptions>> encryptionOptions() {
        return Codegen.optional(this.encryptionOptions);
    }
    /**
     * Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
     * 
     */
    @Export(name="engineType", refs={String.class}, tree="[0]")
    private Output<String> engineType;

    /**
     * @return Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
     * 
     */
    public Output<String> engineType() {
        return this.engineType;
    }
    /**
     * Version of the broker engine.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return Version of the broker engine.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * Broker&#39;s instance type. For example, `mq.t3.micro`, `mq.m5.large`.
     * 
     */
    @Export(name="hostInstanceType", refs={String.class}, tree="[0]")
    private Output<String> hostInstanceType;

    /**
     * @return Broker&#39;s instance type. For example, `mq.t3.micro`, `mq.m5.large`.
     * 
     */
    public Output<String> hostInstanceType() {
        return this.hostInstanceType;
    }
    /**
     * List of information about allocated brokers (both active &amp; standby).
     * 
     */
    @Export(name="instances", refs={List.class,BrokerInstance.class}, tree="[0,1]")
    private Output<List<BrokerInstance>> instances;

    /**
     * @return List of information about allocated brokers (both active &amp; standby).
     * 
     */
    public Output<List<BrokerInstance>> instances() {
        return this.instances;
    }
    /**
     * Configuration block for the LDAP server used to authenticate and authorize connections. Not supported for `engine_type` `RabbitMQ`. Detailed below.
     * 
     */
    @Export(name="ldapServerMetadata", refs={BrokerLdapServerMetadata.class}, tree="[0]")
    private Output</* @Nullable */ BrokerLdapServerMetadata> ldapServerMetadata;

    /**
     * @return Configuration block for the LDAP server used to authenticate and authorize connections. Not supported for `engine_type` `RabbitMQ`. Detailed below.
     * 
     */
    public Output<Optional<BrokerLdapServerMetadata>> ldapServerMetadata() {
        return Codegen.optional(this.ldapServerMetadata);
    }
    /**
     * Configuration block for the logging configuration. Detailed below.
     * 
     */
    @Export(name="logs", refs={BrokerLogs.class}, tree="[0]")
    private Output</* @Nullable */ BrokerLogs> logs;

    /**
     * @return Configuration block for the logging configuration. Detailed below.
     * 
     */
    public Output<Optional<BrokerLogs>> logs() {
        return Codegen.optional(this.logs);
    }
    /**
     * Configuration block for the maintenance window start time. Detailed below.
     * 
     */
    @Export(name="maintenanceWindowStartTime", refs={BrokerMaintenanceWindowStartTime.class}, tree="[0]")
    private Output<BrokerMaintenanceWindowStartTime> maintenanceWindowStartTime;

    /**
     * @return Configuration block for the maintenance window start time. Detailed below.
     * 
     */
    public Output<BrokerMaintenanceWindowStartTime> maintenanceWindowStartTime() {
        return this.maintenanceWindowStartTime;
    }
    /**
     * Data replication mode that will be applied after reboot.
     * 
     */
    @Export(name="pendingDataReplicationMode", refs={String.class}, tree="[0]")
    private Output<String> pendingDataReplicationMode;

    /**
     * @return Data replication mode that will be applied after reboot.
     * 
     */
    public Output<String> pendingDataReplicationMode() {
        return this.pendingDataReplicationMode;
    }
    /**
     * Whether to enable connections from applications outside of the VPC that hosts the broker&#39;s subnets.
     * 
     */
    @Export(name="publiclyAccessible", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publiclyAccessible;

    /**
     * @return Whether to enable connections from applications outside of the VPC that hosts the broker&#39;s subnets.
     * 
     */
    public Output<Optional<Boolean>> publiclyAccessible() {
        return Codegen.optional(this.publiclyAccessible);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * List of security group IDs assigned to the broker.
     * 
     */
    @Export(name="securityGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> securityGroups;

    /**
     * @return List of security group IDs assigned to the broker.
     * 
     */
    public Output<Optional<List<String>>> securityGroups() {
        return Codegen.optional(this.securityGroups);
    }
    /**
     * Storage type of the broker. For `engine_type` `ActiveMQ`, valid values are `efs` and `ebs` (AWS-default is `efs`). For `engine_type` `RabbitMQ`, only `ebs` is supported. When using `ebs`, only the `mq.m5` broker instance type family is supported.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return Storage type of the broker. For `engine_type` `ActiveMQ`, valid values are `efs` and `ebs` (AWS-default is `efs`). For `engine_type` `RabbitMQ`, only `ebs` is supported. When using `ebs`, only the `mq.m5` broker instance type family is supported.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * List of subnet IDs in which to launch the broker. A `SINGLE_INSTANCE` deployment requires one subnet. An `ACTIVE_STANDBY_MULTI_AZ` deployment requires multiple subnets.
     * 
     */
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subnetIds;

    /**
     * @return List of subnet IDs in which to launch the broker. A `SINGLE_INSTANCE` deployment requires one subnet. An `ACTIVE_STANDBY_MULTI_AZ` deployment requires multiple subnets.
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }
    /**
     * Map of tags to assign to the broker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the broker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * Configuration block for broker users. For `engine_type` of `RabbitMQ`, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="users", refs={List.class,BrokerUser.class}, tree="[0,1]")
    private Output<List<BrokerUser>> users;

    /**
     * @return Configuration block for broker users. For `engine_type` of `RabbitMQ`, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<List<BrokerUser>> users() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Broker(java.lang.String name) {
        this(name, BrokerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Broker(java.lang.String name, BrokerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Broker(java.lang.String name, BrokerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:mq/broker:Broker", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Broker(java.lang.String name, Output<java.lang.String> id, @Nullable BrokerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:mq/broker:Broker", name, state, makeResourceOptions(options, id), false);
    }

    private static BrokerArgs makeArgs(BrokerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BrokerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Broker get(java.lang.String name, Output<java.lang.String> id, @Nullable BrokerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Broker(name, id, state, options);
    }
}
