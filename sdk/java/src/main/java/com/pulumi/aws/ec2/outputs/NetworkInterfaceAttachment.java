// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInterfaceAttachment {
    private @Nullable String attachmentId;
    /**
     * @return Integer to define the devices index.
     * 
     */
    private Integer deviceIndex;
    /**
     * @return ID of the instance to attach to.
     * 
     */
    private String instance;
    /**
     * @return Index of the network card. Specify a value greater than 0 when using multiple network cards, which are supported by [some instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#network-cards). The default is 0.
     * 
     */
    private @Nullable Integer networkCardIndex;

    private NetworkInterfaceAttachment() {}
    public Optional<String> attachmentId() {
        return Optional.ofNullable(this.attachmentId);
    }
    /**
     * @return Integer to define the devices index.
     * 
     */
    public Integer deviceIndex() {
        return this.deviceIndex;
    }
    /**
     * @return ID of the instance to attach to.
     * 
     */
    public String instance() {
        return this.instance;
    }
    /**
     * @return Index of the network card. Specify a value greater than 0 when using multiple network cards, which are supported by [some instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#network-cards). The default is 0.
     * 
     */
    public Optional<Integer> networkCardIndex() {
        return Optional.ofNullable(this.networkCardIndex);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String attachmentId;
        private Integer deviceIndex;
        private String instance;
        private @Nullable Integer networkCardIndex;
        public Builder() {}
        public Builder(NetworkInterfaceAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachmentId = defaults.attachmentId;
    	      this.deviceIndex = defaults.deviceIndex;
    	      this.instance = defaults.instance;
    	      this.networkCardIndex = defaults.networkCardIndex;
        }

        @CustomType.Setter
        public Builder attachmentId(@Nullable String attachmentId) {

            this.attachmentId = attachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder deviceIndex(Integer deviceIndex) {
            if (deviceIndex == null) {
              throw new MissingRequiredPropertyException("NetworkInterfaceAttachment", "deviceIndex");
            }
            this.deviceIndex = deviceIndex;
            return this;
        }
        @CustomType.Setter
        public Builder instance(String instance) {
            if (instance == null) {
              throw new MissingRequiredPropertyException("NetworkInterfaceAttachment", "instance");
            }
            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder networkCardIndex(@Nullable Integer networkCardIndex) {

            this.networkCardIndex = networkCardIndex;
            return this;
        }
        public NetworkInterfaceAttachment build() {
            final var _resultValue = new NetworkInterfaceAttachment();
            _resultValue.attachmentId = attachmentId;
            _resultValue.deviceIndex = deviceIndex;
            _resultValue.instance = instance;
            _resultValue.networkCardIndex = networkCardIndex;
            return _resultValue;
        }
    }
}
