// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs Empty = new BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs();

    /**
     * KMS key ARN when `sse_algorithm` is `aws:kms`.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    /**
     * @return KMS key ARN when `sse_algorithm` is `aws:kms`.
     * 
     */
    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    /**
     * Encryption type for the metadata table. Valid values: `aws:kms`, `AES256`.
     * 
     */
    @Import(name="sseAlgorithm", required=true)
    private Output<String> sseAlgorithm;

    /**
     * @return Encryption type for the metadata table. Valid values: `aws:kms`, `AES256`.
     * 
     */
    public Output<String> sseAlgorithm() {
        return this.sseAlgorithm;
    }

    private BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs() {}

    private BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs(BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs $) {
        this.kmsKeyArn = $.kmsKeyArn;
        this.sseAlgorithm = $.sseAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs $;

        public Builder() {
            $ = new BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs();
        }

        public Builder(BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs defaults) {
            $ = new BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyArn KMS key ARN when `sse_algorithm` is `aws:kms`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        /**
         * @param kmsKeyArn KMS key ARN when `sse_algorithm` is `aws:kms`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        /**
         * @param sseAlgorithm Encryption type for the metadata table. Valid values: `aws:kms`, `AES256`.
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(Output<String> sseAlgorithm) {
            $.sseAlgorithm = sseAlgorithm;
            return this;
        }

        /**
         * @param sseAlgorithm Encryption type for the metadata table. Valid values: `aws:kms`, `AES256`.
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(String sseAlgorithm) {
            return sseAlgorithm(Output.of(sseAlgorithm));
        }

        public BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs build() {
            if ($.sseAlgorithm == null) {
                throw new MissingRequiredPropertyException("BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationEncryptionConfigurationArgs", "sseAlgorithm");
            }
            return $;
        }
    }

}
