// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceState extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceState Empty = new NamespaceState();

    /**
     * Date and time when the namespace was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date and time when the namespace was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Account ID of the account that created the namespace.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return Account ID of the account that created the namespace.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * Name of the namespace.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Name of the namespace.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Account ID of the account that owns the namespace.
     * 
     */
    @Import(name="ownerAccountId")
    private @Nullable Output<String> ownerAccountId;

    /**
     * @return Account ID of the account that owns the namespace.
     * 
     */
    public Optional<Output<String>> ownerAccountId() {
        return Optional.ofNullable(this.ownerAccountId);
    }

    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     * 
     */
    @Import(name="tableBucketArn")
    private @Nullable Output<String> tableBucketArn;

    /**
     * @return ARN referencing the Table Bucket that contains this Namespace.
     * 
     */
    public Optional<Output<String>> tableBucketArn() {
        return Optional.ofNullable(this.tableBucketArn);
    }

    private NamespaceState() {}

    private NamespaceState(NamespaceState $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.namespace = $.namespace;
        this.ownerAccountId = $.ownerAccountId;
        this.tableBucketArn = $.tableBucketArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceState $;

        public Builder() {
            $ = new NamespaceState();
        }

        public Builder(NamespaceState defaults) {
            $ = new NamespaceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Date and time when the namespace was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date and time when the namespace was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy Account ID of the account that created the namespace.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy Account ID of the account that created the namespace.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param namespace Name of the namespace.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Name of the namespace.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param ownerAccountId Account ID of the account that owns the namespace.
         * 
         * @return builder
         * 
         */
        public Builder ownerAccountId(@Nullable Output<String> ownerAccountId) {
            $.ownerAccountId = ownerAccountId;
            return this;
        }

        /**
         * @param ownerAccountId Account ID of the account that owns the namespace.
         * 
         * @return builder
         * 
         */
        public Builder ownerAccountId(String ownerAccountId) {
            return ownerAccountId(Output.of(ownerAccountId));
        }

        /**
         * @param tableBucketArn ARN referencing the Table Bucket that contains this Namespace.
         * 
         * @return builder
         * 
         */
        public Builder tableBucketArn(@Nullable Output<String> tableBucketArn) {
            $.tableBucketArn = tableBucketArn;
            return this;
        }

        /**
         * @param tableBucketArn ARN referencing the Table Bucket that contains this Namespace.
         * 
         * @return builder
         * 
         */
        public Builder tableBucketArn(String tableBucketArn) {
            return tableBucketArn(Output.of(tableBucketArn));
        }

        public NamespaceState build() {
            return $;
        }
    }

}
