// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLayerVersionResult {
    private String arn;
    private @Nullable String compatibleArchitecture;
    private List<String> compatibleArchitectures;
    private @Nullable String compatibleRuntime;
    private List<String> compatibleRuntimes;
    private String createdDate;
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String layerArn;
    private String layerName;
    private String licenseInfo;
    private String signingJobArn;
    private String signingProfileVersionArn;
    private String sourceCodeHash;
    private Integer sourceCodeSize;
    private Integer version;

    private GetLayerVersionResult() {}
    public String arn() {
        return this.arn;
    }
    public Optional<String> compatibleArchitecture() {
        return Optional.ofNullable(this.compatibleArchitecture);
    }
    public List<String> compatibleArchitectures() {
        return this.compatibleArchitectures;
    }
    public Optional<String> compatibleRuntime() {
        return Optional.ofNullable(this.compatibleRuntime);
    }
    public List<String> compatibleRuntimes() {
        return this.compatibleRuntimes;
    }
    public String createdDate() {
        return this.createdDate;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String layerArn() {
        return this.layerArn;
    }
    public String layerName() {
        return this.layerName;
    }
    public String licenseInfo() {
        return this.licenseInfo;
    }
    public String signingJobArn() {
        return this.signingJobArn;
    }
    public String signingProfileVersionArn() {
        return this.signingProfileVersionArn;
    }
    public String sourceCodeHash() {
        return this.sourceCodeHash;
    }
    public Integer sourceCodeSize() {
        return this.sourceCodeSize;
    }
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLayerVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private @Nullable String compatibleArchitecture;
        private List<String> compatibleArchitectures;
        private @Nullable String compatibleRuntime;
        private List<String> compatibleRuntimes;
        private String createdDate;
        private String description;
        private String id;
        private String layerArn;
        private String layerName;
        private String licenseInfo;
        private String signingJobArn;
        private String signingProfileVersionArn;
        private String sourceCodeHash;
        private Integer sourceCodeSize;
        private Integer version;
        public Builder() {}
        public Builder(GetLayerVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.compatibleArchitecture = defaults.compatibleArchitecture;
    	      this.compatibleArchitectures = defaults.compatibleArchitectures;
    	      this.compatibleRuntime = defaults.compatibleRuntime;
    	      this.compatibleRuntimes = defaults.compatibleRuntimes;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.layerArn = defaults.layerArn;
    	      this.layerName = defaults.layerName;
    	      this.licenseInfo = defaults.licenseInfo;
    	      this.signingJobArn = defaults.signingJobArn;
    	      this.signingProfileVersionArn = defaults.signingProfileVersionArn;
    	      this.sourceCodeHash = defaults.sourceCodeHash;
    	      this.sourceCodeSize = defaults.sourceCodeSize;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder compatibleArchitecture(@Nullable String compatibleArchitecture) {
            this.compatibleArchitecture = compatibleArchitecture;
            return this;
        }
        @CustomType.Setter
        public Builder compatibleArchitectures(List<String> compatibleArchitectures) {
            this.compatibleArchitectures = Objects.requireNonNull(compatibleArchitectures);
            return this;
        }
        public Builder compatibleArchitectures(String... compatibleArchitectures) {
            return compatibleArchitectures(List.of(compatibleArchitectures));
        }
        @CustomType.Setter
        public Builder compatibleRuntime(@Nullable String compatibleRuntime) {
            this.compatibleRuntime = compatibleRuntime;
            return this;
        }
        @CustomType.Setter
        public Builder compatibleRuntimes(List<String> compatibleRuntimes) {
            this.compatibleRuntimes = Objects.requireNonNull(compatibleRuntimes);
            return this;
        }
        public Builder compatibleRuntimes(String... compatibleRuntimes) {
            return compatibleRuntimes(List.of(compatibleRuntimes));
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder layerArn(String layerArn) {
            this.layerArn = Objects.requireNonNull(layerArn);
            return this;
        }
        @CustomType.Setter
        public Builder layerName(String layerName) {
            this.layerName = Objects.requireNonNull(layerName);
            return this;
        }
        @CustomType.Setter
        public Builder licenseInfo(String licenseInfo) {
            this.licenseInfo = Objects.requireNonNull(licenseInfo);
            return this;
        }
        @CustomType.Setter
        public Builder signingJobArn(String signingJobArn) {
            this.signingJobArn = Objects.requireNonNull(signingJobArn);
            return this;
        }
        @CustomType.Setter
        public Builder signingProfileVersionArn(String signingProfileVersionArn) {
            this.signingProfileVersionArn = Objects.requireNonNull(signingProfileVersionArn);
            return this;
        }
        @CustomType.Setter
        public Builder sourceCodeHash(String sourceCodeHash) {
            this.sourceCodeHash = Objects.requireNonNull(sourceCodeHash);
            return this;
        }
        @CustomType.Setter
        public Builder sourceCodeSize(Integer sourceCodeSize) {
            this.sourceCodeSize = Objects.requireNonNull(sourceCodeSize);
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetLayerVersionResult build() {
            final var o = new GetLayerVersionResult();
            o.arn = arn;
            o.compatibleArchitecture = compatibleArchitecture;
            o.compatibleArchitectures = compatibleArchitectures;
            o.compatibleRuntime = compatibleRuntime;
            o.compatibleRuntimes = compatibleRuntimes;
            o.createdDate = createdDate;
            o.description = description;
            o.id = id;
            o.layerArn = layerArn;
            o.layerName = layerName;
            o.licenseInfo = licenseInfo;
            o.signingJobArn = signingJobArn;
            o.signingProfileVersionArn = signingProfileVersionArn;
            o.sourceCodeHash = sourceCodeHash;
            o.sourceCodeSize = sourceCodeSize;
            o.version = version;
            return o;
        }
    }
}
