// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityProviderState extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderState Empty = new IdentityProviderState();

    @Import(name="attributeMapping")
    private @Nullable Output<Map<String,String>> attributeMapping;

    public Optional<Output<Map<String,String>>> attributeMapping() {
        return Optional.ofNullable(this.attributeMapping);
    }

    @Import(name="idpIdentifiers")
    private @Nullable Output<List<String>> idpIdentifiers;

    public Optional<Output<List<String>>> idpIdentifiers() {
        return Optional.ofNullable(this.idpIdentifiers);
    }

    @Import(name="providerDetails")
    private @Nullable Output<Map<String,String>> providerDetails;

    public Optional<Output<Map<String,String>>> providerDetails() {
        return Optional.ofNullable(this.providerDetails);
    }

    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    @Import(name="providerType")
    private @Nullable Output<String> providerType;

    public Optional<Output<String>> providerType() {
        return Optional.ofNullable(this.providerType);
    }

    @Import(name="userPoolId")
    private @Nullable Output<String> userPoolId;

    public Optional<Output<String>> userPoolId() {
        return Optional.ofNullable(this.userPoolId);
    }

    private IdentityProviderState() {}

    private IdentityProviderState(IdentityProviderState $) {
        this.attributeMapping = $.attributeMapping;
        this.idpIdentifiers = $.idpIdentifiers;
        this.providerDetails = $.providerDetails;
        this.providerName = $.providerName;
        this.providerType = $.providerType;
        this.userPoolId = $.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderState $;

        public Builder() {
            $ = new IdentityProviderState();
        }

        public Builder(IdentityProviderState defaults) {
            $ = new IdentityProviderState(Objects.requireNonNull(defaults));
        }

        public Builder attributeMapping(@Nullable Output<Map<String,String>> attributeMapping) {
            $.attributeMapping = attributeMapping;
            return this;
        }

        public Builder attributeMapping(Map<String,String> attributeMapping) {
            return attributeMapping(Output.of(attributeMapping));
        }

        public Builder idpIdentifiers(@Nullable Output<List<String>> idpIdentifiers) {
            $.idpIdentifiers = idpIdentifiers;
            return this;
        }

        public Builder idpIdentifiers(List<String> idpIdentifiers) {
            return idpIdentifiers(Output.of(idpIdentifiers));
        }

        public Builder idpIdentifiers(String... idpIdentifiers) {
            return idpIdentifiers(List.of(idpIdentifiers));
        }

        public Builder providerDetails(@Nullable Output<Map<String,String>> providerDetails) {
            $.providerDetails = providerDetails;
            return this;
        }

        public Builder providerDetails(Map<String,String> providerDetails) {
            return providerDetails(Output.of(providerDetails));
        }

        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public Builder providerType(@Nullable Output<String> providerType) {
            $.providerType = providerType;
            return this;
        }

        public Builder providerType(String providerType) {
            return providerType(Output.of(providerType));
        }

        public Builder userPoolId(@Nullable Output<String> userPoolId) {
            $.userPoolId = userPoolId;
            return this;
        }

        public Builder userPoolId(String userPoolId) {
            return userPoolId(Output.of(userPoolId));
        }

        public IdentityProviderState build() {
            return $;
        }
    }

}
