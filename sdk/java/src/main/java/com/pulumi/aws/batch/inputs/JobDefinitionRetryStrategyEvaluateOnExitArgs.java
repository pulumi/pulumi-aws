// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDefinitionRetryStrategyEvaluateOnExitArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDefinitionRetryStrategyEvaluateOnExitArgs Empty = new JobDefinitionRetryStrategyEvaluateOnExitArgs();

    /**
     * Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * A glob pattern to match against the decimal representation of the exit code returned for a job.
     * 
     */
    @Import(name="onExitCode")
    private @Nullable Output<String> onExitCode;

    /**
     * @return A glob pattern to match against the decimal representation of the exit code returned for a job.
     * 
     */
    public Optional<Output<String>> onExitCode() {
        return Optional.ofNullable(this.onExitCode);
    }

    /**
     * A glob pattern to match against the reason returned for a job.
     * 
     */
    @Import(name="onReason")
    private @Nullable Output<String> onReason;

    /**
     * @return A glob pattern to match against the reason returned for a job.
     * 
     */
    public Optional<Output<String>> onReason() {
        return Optional.ofNullable(this.onReason);
    }

    /**
     * A glob pattern to match against the status reason returned for a job.
     * 
     */
    @Import(name="onStatusReason")
    private @Nullable Output<String> onStatusReason;

    /**
     * @return A glob pattern to match against the status reason returned for a job.
     * 
     */
    public Optional<Output<String>> onStatusReason() {
        return Optional.ofNullable(this.onStatusReason);
    }

    private JobDefinitionRetryStrategyEvaluateOnExitArgs() {}

    private JobDefinitionRetryStrategyEvaluateOnExitArgs(JobDefinitionRetryStrategyEvaluateOnExitArgs $) {
        this.action = $.action;
        this.onExitCode = $.onExitCode;
        this.onReason = $.onReason;
        this.onStatusReason = $.onStatusReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDefinitionRetryStrategyEvaluateOnExitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDefinitionRetryStrategyEvaluateOnExitArgs $;

        public Builder() {
            $ = new JobDefinitionRetryStrategyEvaluateOnExitArgs();
        }

        public Builder(JobDefinitionRetryStrategyEvaluateOnExitArgs defaults) {
            $ = new JobDefinitionRetryStrategyEvaluateOnExitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param onExitCode A glob pattern to match against the decimal representation of the exit code returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onExitCode(@Nullable Output<String> onExitCode) {
            $.onExitCode = onExitCode;
            return this;
        }

        /**
         * @param onExitCode A glob pattern to match against the decimal representation of the exit code returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onExitCode(String onExitCode) {
            return onExitCode(Output.of(onExitCode));
        }

        /**
         * @param onReason A glob pattern to match against the reason returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onReason(@Nullable Output<String> onReason) {
            $.onReason = onReason;
            return this;
        }

        /**
         * @param onReason A glob pattern to match against the reason returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onReason(String onReason) {
            return onReason(Output.of(onReason));
        }

        /**
         * @param onStatusReason A glob pattern to match against the status reason returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onStatusReason(@Nullable Output<String> onStatusReason) {
            $.onStatusReason = onStatusReason;
            return this;
        }

        /**
         * @param onStatusReason A glob pattern to match against the status reason returned for a job.
         * 
         * @return builder
         * 
         */
        public Builder onStatusReason(String onStatusReason) {
            return onStatusReason(Output.of(onStatusReason));
        }

        public JobDefinitionRetryStrategyEvaluateOnExitArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            return $;
        }
    }

}
