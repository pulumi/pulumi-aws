// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.aws.glue.inputs.TriggerPredicateConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerPredicateArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerPredicateArgs Empty = new TriggerPredicateArgs();

    @Import(name="conditions", required=true)
    private Output<List<TriggerPredicateConditionArgs>> conditions;

    public Output<List<TriggerPredicateConditionArgs>> conditions() {
        return this.conditions;
    }

    @Import(name="logical")
    private @Nullable Output<String> logical;

    public Optional<Output<String>> logical() {
        return Optional.ofNullable(this.logical);
    }

    private TriggerPredicateArgs() {}

    private TriggerPredicateArgs(TriggerPredicateArgs $) {
        this.conditions = $.conditions;
        this.logical = $.logical;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerPredicateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerPredicateArgs $;

        public Builder() {
            $ = new TriggerPredicateArgs();
        }

        public Builder(TriggerPredicateArgs defaults) {
            $ = new TriggerPredicateArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(Output<List<TriggerPredicateConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<TriggerPredicateConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(TriggerPredicateConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder logical(@Nullable Output<String> logical) {
            $.logical = logical;
            return this;
        }

        public Builder logical(String logical) {
            return logical(Output.of(logical));
        }

        public TriggerPredicateArgs build() {
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            return $;
        }
    }

}
