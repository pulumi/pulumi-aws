// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.outputs;

import com.pulumi.aws.rds.outputs.GetClusterMasterUserSecret;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    private @Nullable String arn;
    private @Nullable List<String> availabilityZones;
    private @Nullable Integer backtrackWindow;
    private @Nullable Integer backupRetentionPeriod;
    private String clusterIdentifier;
    private @Nullable List<String> clusterMembers;
    private @Nullable String clusterResourceId;
    private @Nullable String databaseName;
    private @Nullable String dbClusterParameterGroupName;
    private @Nullable String dbSubnetGroupName;
    private @Nullable String dbSystemId;
    private @Nullable List<String> enabledCloudwatchLogsExports;
    private @Nullable String endpoint;
    private @Nullable String engine;
    private @Nullable String engineMode;
    private @Nullable String engineVersion;
    private @Nullable String finalSnapshotIdentifier;
    private @Nullable String hostedZoneId;
    private @Nullable Boolean iamDatabaseAuthenticationEnabled;
    private @Nullable List<String> iamRoles;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String kmsKeyId;
    private @Nullable List<GetClusterMasterUserSecret> masterUserSecrets;
    private @Nullable String masterUsername;
    private @Nullable String networkType;
    private @Nullable Integer port;
    private @Nullable String preferredBackupWindow;
    private @Nullable String preferredMaintenanceWindow;
    private @Nullable String readerEndpoint;
    private @Nullable String replicationSourceIdentifier;
    private @Nullable Boolean storageEncrypted;
    /**
     * @return A map of tags assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    private @Nullable List<String> vpcSecurityGroupIds;

    private GetClusterResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public Optional<Integer> backtrackWindow() {
        return Optional.ofNullable(this.backtrackWindow);
    }
    public Optional<Integer> backupRetentionPeriod() {
        return Optional.ofNullable(this.backupRetentionPeriod);
    }
    public String clusterIdentifier() {
        return this.clusterIdentifier;
    }
    public List<String> clusterMembers() {
        return this.clusterMembers == null ? List.of() : this.clusterMembers;
    }
    public Optional<String> clusterResourceId() {
        return Optional.ofNullable(this.clusterResourceId);
    }
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> dbClusterParameterGroupName() {
        return Optional.ofNullable(this.dbClusterParameterGroupName);
    }
    public Optional<String> dbSubnetGroupName() {
        return Optional.ofNullable(this.dbSubnetGroupName);
    }
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    public List<String> enabledCloudwatchLogsExports() {
        return this.enabledCloudwatchLogsExports == null ? List.of() : this.enabledCloudwatchLogsExports;
    }
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    public Optional<String> engine() {
        return Optional.ofNullable(this.engine);
    }
    public Optional<String> engineMode() {
        return Optional.ofNullable(this.engineMode);
    }
    public Optional<String> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }
    public Optional<String> finalSnapshotIdentifier() {
        return Optional.ofNullable(this.finalSnapshotIdentifier);
    }
    public Optional<String> hostedZoneId() {
        return Optional.ofNullable(this.hostedZoneId);
    }
    public Optional<Boolean> iamDatabaseAuthenticationEnabled() {
        return Optional.ofNullable(this.iamDatabaseAuthenticationEnabled);
    }
    public List<String> iamRoles() {
        return this.iamRoles == null ? List.of() : this.iamRoles;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public List<GetClusterMasterUserSecret> masterUserSecrets() {
        return this.masterUserSecrets == null ? List.of() : this.masterUserSecrets;
    }
    public Optional<String> masterUsername() {
        return Optional.ofNullable(this.masterUsername);
    }
    public Optional<String> networkType() {
        return Optional.ofNullable(this.networkType);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public Optional<String> preferredBackupWindow() {
        return Optional.ofNullable(this.preferredBackupWindow);
    }
    public Optional<String> preferredMaintenanceWindow() {
        return Optional.ofNullable(this.preferredMaintenanceWindow);
    }
    public Optional<String> readerEndpoint() {
        return Optional.ofNullable(this.readerEndpoint);
    }
    public Optional<String> replicationSourceIdentifier() {
        return Optional.ofNullable(this.replicationSourceIdentifier);
    }
    public Optional<Boolean> storageEncrypted() {
        return Optional.ofNullable(this.storageEncrypted);
    }
    /**
     * @return A map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public List<String> vpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds == null ? List.of() : this.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<String> availabilityZones;
        private @Nullable Integer backtrackWindow;
        private @Nullable Integer backupRetentionPeriod;
        private String clusterIdentifier;
        private @Nullable List<String> clusterMembers;
        private @Nullable String clusterResourceId;
        private @Nullable String databaseName;
        private @Nullable String dbClusterParameterGroupName;
        private @Nullable String dbSubnetGroupName;
        private @Nullable String dbSystemId;
        private @Nullable List<String> enabledCloudwatchLogsExports;
        private @Nullable String endpoint;
        private @Nullable String engine;
        private @Nullable String engineMode;
        private @Nullable String engineVersion;
        private @Nullable String finalSnapshotIdentifier;
        private @Nullable String hostedZoneId;
        private @Nullable Boolean iamDatabaseAuthenticationEnabled;
        private @Nullable List<String> iamRoles;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable List<GetClusterMasterUserSecret> masterUserSecrets;
        private @Nullable String masterUsername;
        private @Nullable String networkType;
        private @Nullable Integer port;
        private @Nullable String preferredBackupWindow;
        private @Nullable String preferredMaintenanceWindow;
        private @Nullable String readerEndpoint;
        private @Nullable String replicationSourceIdentifier;
        private @Nullable Boolean storageEncrypted;
        private @Nullable Map<String,String> tags;
        private @Nullable List<String> vpcSecurityGroupIds;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.backtrackWindow = defaults.backtrackWindow;
    	      this.backupRetentionPeriod = defaults.backupRetentionPeriod;
    	      this.clusterIdentifier = defaults.clusterIdentifier;
    	      this.clusterMembers = defaults.clusterMembers;
    	      this.clusterResourceId = defaults.clusterResourceId;
    	      this.databaseName = defaults.databaseName;
    	      this.dbClusterParameterGroupName = defaults.dbClusterParameterGroupName;
    	      this.dbSubnetGroupName = defaults.dbSubnetGroupName;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.enabledCloudwatchLogsExports = defaults.enabledCloudwatchLogsExports;
    	      this.endpoint = defaults.endpoint;
    	      this.engine = defaults.engine;
    	      this.engineMode = defaults.engineMode;
    	      this.engineVersion = defaults.engineVersion;
    	      this.finalSnapshotIdentifier = defaults.finalSnapshotIdentifier;
    	      this.hostedZoneId = defaults.hostedZoneId;
    	      this.iamDatabaseAuthenticationEnabled = defaults.iamDatabaseAuthenticationEnabled;
    	      this.iamRoles = defaults.iamRoles;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.masterUserSecrets = defaults.masterUserSecrets;
    	      this.masterUsername = defaults.masterUsername;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.preferredBackupWindow = defaults.preferredBackupWindow;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.readerEndpoint = defaults.readerEndpoint;
    	      this.replicationSourceIdentifier = defaults.replicationSourceIdentifier;
    	      this.storageEncrypted = defaults.storageEncrypted;
    	      this.tags = defaults.tags;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder backtrackWindow(@Nullable Integer backtrackWindow) {
            this.backtrackWindow = backtrackWindow;
            return this;
        }
        @CustomType.Setter
        public Builder backupRetentionPeriod(@Nullable Integer backupRetentionPeriod) {
            this.backupRetentionPeriod = backupRetentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder clusterIdentifier(String clusterIdentifier) {
            this.clusterIdentifier = Objects.requireNonNull(clusterIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder clusterMembers(@Nullable List<String> clusterMembers) {
            this.clusterMembers = clusterMembers;
            return this;
        }
        public Builder clusterMembers(String... clusterMembers) {
            return clusterMembers(List.of(clusterMembers));
        }
        @CustomType.Setter
        public Builder clusterResourceId(@Nullable String clusterResourceId) {
            this.clusterResourceId = clusterResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterParameterGroupName(@Nullable String dbClusterParameterGroupName) {
            this.dbClusterParameterGroupName = dbClusterParameterGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder dbSubnetGroupName(@Nullable String dbSubnetGroupName) {
            this.dbSubnetGroupName = dbSubnetGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder enabledCloudwatchLogsExports(@Nullable List<String> enabledCloudwatchLogsExports) {
            this.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports;
            return this;
        }
        public Builder enabledCloudwatchLogsExports(String... enabledCloudwatchLogsExports) {
            return enabledCloudwatchLogsExports(List.of(enabledCloudwatchLogsExports));
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder engine(@Nullable String engine) {
            this.engine = engine;
            return this;
        }
        @CustomType.Setter
        public Builder engineMode(@Nullable String engineMode) {
            this.engineMode = engineMode;
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder finalSnapshotIdentifier(@Nullable String finalSnapshotIdentifier) {
            this.finalSnapshotIdentifier = finalSnapshotIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder hostedZoneId(@Nullable String hostedZoneId) {
            this.hostedZoneId = hostedZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder iamDatabaseAuthenticationEnabled(@Nullable Boolean iamDatabaseAuthenticationEnabled) {
            this.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder iamRoles(@Nullable List<String> iamRoles) {
            this.iamRoles = iamRoles;
            return this;
        }
        public Builder iamRoles(String... iamRoles) {
            return iamRoles(List.of(iamRoles));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder masterUserSecrets(@Nullable List<GetClusterMasterUserSecret> masterUserSecrets) {
            this.masterUserSecrets = masterUserSecrets;
            return this;
        }
        public Builder masterUserSecrets(GetClusterMasterUserSecret... masterUserSecrets) {
            return masterUserSecrets(List.of(masterUserSecrets));
        }
        @CustomType.Setter
        public Builder masterUsername(@Nullable String masterUsername) {
            this.masterUsername = masterUsername;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(@Nullable String networkType) {
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder preferredBackupWindow(@Nullable String preferredBackupWindow) {
            this.preferredBackupWindow = preferredBackupWindow;
            return this;
        }
        @CustomType.Setter
        public Builder preferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }
        @CustomType.Setter
        public Builder readerEndpoint(@Nullable String readerEndpoint) {
            this.readerEndpoint = readerEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder replicationSourceIdentifier(@Nullable String replicationSourceIdentifier) {
            this.replicationSourceIdentifier = replicationSourceIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder storageEncrypted(@Nullable Boolean storageEncrypted) {
            this.storageEncrypted = storageEncrypted;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcSecurityGroupIds(@Nullable List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }
        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }
        public GetClusterResult build() {
            final var o = new GetClusterResult();
            o.arn = arn;
            o.availabilityZones = availabilityZones;
            o.backtrackWindow = backtrackWindow;
            o.backupRetentionPeriod = backupRetentionPeriod;
            o.clusterIdentifier = clusterIdentifier;
            o.clusterMembers = clusterMembers;
            o.clusterResourceId = clusterResourceId;
            o.databaseName = databaseName;
            o.dbClusterParameterGroupName = dbClusterParameterGroupName;
            o.dbSubnetGroupName = dbSubnetGroupName;
            o.dbSystemId = dbSystemId;
            o.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports;
            o.endpoint = endpoint;
            o.engine = engine;
            o.engineMode = engineMode;
            o.engineVersion = engineVersion;
            o.finalSnapshotIdentifier = finalSnapshotIdentifier;
            o.hostedZoneId = hostedZoneId;
            o.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled;
            o.iamRoles = iamRoles;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.masterUserSecrets = masterUserSecrets;
            o.masterUsername = masterUsername;
            o.networkType = networkType;
            o.port = port;
            o.preferredBackupWindow = preferredBackupWindow;
            o.preferredMaintenanceWindow = preferredMaintenanceWindow;
            o.readerEndpoint = readerEndpoint;
            o.replicationSourceIdentifier = replicationSourceIdentifier;
            o.storageEncrypted = storageEncrypted;
            o.tags = tags;
            o.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return o;
        }
    }
}
