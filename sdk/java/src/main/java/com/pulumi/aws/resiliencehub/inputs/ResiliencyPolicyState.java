// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resiliencehub.inputs;

import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyPolicyArgs;
import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResiliencyPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ResiliencyPolicyState Empty = new ResiliencyPolicyState();

    /**
     * ARN of the Resiliency Policy.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Resiliency Policy.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Data Location Constraint of the Policy.
     * Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
     * 
     */
    @Import(name="dataLocationConstraint")
    private @Nullable Output<String> dataLocationConstraint;

    /**
     * @return Data Location Constraint of the Policy.
     * Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
     * 
     */
    public Optional<Output<String>> dataLocationConstraint() {
        return Optional.ofNullable(this.dataLocationConstraint);
    }

    /**
     * Description of Resiliency Policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of Resiliency Policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Estimated Cost Tier of the Resiliency Policy.
     * 
     */
    @Import(name="estimatedCostTier")
    private @Nullable Output<String> estimatedCostTier;

    /**
     * @return Estimated Cost Tier of the Resiliency Policy.
     * 
     */
    public Optional<Output<String>> estimatedCostTier() {
        return Optional.ofNullable(this.estimatedCostTier);
    }

    /**
     * Name of Resiliency Policy.
     * Must be between 2 and 60 characters long.
     * Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of Resiliency Policy.
     * Must be between 2 and 60 characters long.
     * Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See `policy`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="policy")
    private @Nullable Output<ResiliencyPolicyPolicyArgs> policy;

    /**
     * @return The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See `policy`.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<ResiliencyPolicyPolicyArgs>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Resiliency Policy Tier.
     * Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
     * 
     */
    @Import(name="tier")
    private @Nullable Output<String> tier;

    /**
     * @return Resiliency Policy Tier.
     * Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
     * 
     */
    public Optional<Output<String>> tier() {
        return Optional.ofNullable(this.tier);
    }

    @Import(name="timeouts")
    private @Nullable Output<ResiliencyPolicyTimeoutsArgs> timeouts;

    public Optional<Output<ResiliencyPolicyTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ResiliencyPolicyState() {}

    private ResiliencyPolicyState(ResiliencyPolicyState $) {
        this.arn = $.arn;
        this.dataLocationConstraint = $.dataLocationConstraint;
        this.description = $.description;
        this.estimatedCostTier = $.estimatedCostTier;
        this.name = $.name;
        this.policy = $.policy;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.tier = $.tier;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResiliencyPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResiliencyPolicyState $;

        public Builder() {
            $ = new ResiliencyPolicyState();
        }

        public Builder(ResiliencyPolicyState defaults) {
            $ = new ResiliencyPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param dataLocationConstraint Data Location Constraint of the Policy.
         * Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
         * 
         * @return builder
         * 
         */
        public Builder dataLocationConstraint(@Nullable Output<String> dataLocationConstraint) {
            $.dataLocationConstraint = dataLocationConstraint;
            return this;
        }

        /**
         * @param dataLocationConstraint Data Location Constraint of the Policy.
         * Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
         * 
         * @return builder
         * 
         */
        public Builder dataLocationConstraint(String dataLocationConstraint) {
            return dataLocationConstraint(Output.of(dataLocationConstraint));
        }

        /**
         * @param description Description of Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param estimatedCostTier Estimated Cost Tier of the Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder estimatedCostTier(@Nullable Output<String> estimatedCostTier) {
            $.estimatedCostTier = estimatedCostTier;
            return this;
        }

        /**
         * @param estimatedCostTier Estimated Cost Tier of the Resiliency Policy.
         * 
         * @return builder
         * 
         */
        public Builder estimatedCostTier(String estimatedCostTier) {
            return estimatedCostTier(Output.of(estimatedCostTier));
        }

        /**
         * @param name Name of Resiliency Policy.
         * Must be between 2 and 60 characters long.
         * Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of Resiliency Policy.
         * Must be between 2 and 60 characters long.
         * Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policy The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See `policy`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<ResiliencyPolicyPolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See `policy`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder policy(ResiliencyPolicyPolicyArgs policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param tier Resiliency Policy Tier.
         * Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
         * 
         * @return builder
         * 
         */
        public Builder tier(@Nullable Output<String> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier Resiliency Policy Tier.
         * Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        public Builder timeouts(@Nullable Output<ResiliencyPolicyTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ResiliencyPolicyTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ResiliencyPolicyState build() {
            return $;
        }
    }

}
