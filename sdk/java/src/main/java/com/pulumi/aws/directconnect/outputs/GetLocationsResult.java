// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLocationsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Code for the locations.
     * 
     */
    private List<String> locationCodes;

    private GetLocationsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Code for the locations.
     * 
     */
    public List<String> locationCodes() {
        return this.locationCodes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> locationCodes;
        public Builder() {}
        public Builder(GetLocationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.locationCodes = defaults.locationCodes;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locationCodes(List<String> locationCodes) {
            if (locationCodes == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "locationCodes");
            }
            this.locationCodes = locationCodes;
            return this;
        }
        public Builder locationCodes(String... locationCodes) {
            return locationCodes(List.of(locationCodes));
        }
        public GetLocationsResult build() {
            final var _resultValue = new GetLocationsResult();
            _resultValue.id = id;
            _resultValue.locationCodes = locationCodes;
            return _resultValue;
        }
    }
}
