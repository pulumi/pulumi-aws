// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule {
    /**
     * @return How often this lifecycle policy should be evaluated. `1`, `2`,`3`,`4`,`6`,`8`,`12` or `24` are valid values.
     * 
     */
    private Integer interval;
    /**
     * @return The unit for how often the lifecycle policy should be evaluated. `HOURS` is currently the only allowed value and also the default value.
     * 
     */
    private String intervalUnit;

    private LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule() {}
    /**
     * @return How often this lifecycle policy should be evaluated. `1`, `2`,`3`,`4`,`6`,`8`,`12` or `24` are valid values.
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return The unit for how often the lifecycle policy should be evaluated. `HOURS` is currently the only allowed value and also the default value.
     * 
     */
    public String intervalUnit() {
        return this.intervalUnit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer interval;
        private String intervalUnit;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.intervalUnit = defaults.intervalUnit;
        }

        @CustomType.Setter
        public Builder interval(Integer interval) {
            this.interval = Objects.requireNonNull(interval);
            return this;
        }
        @CustomType.Setter
        public Builder intervalUnit(String intervalUnit) {
            this.intervalUnit = Objects.requireNonNull(intervalUnit);
            return this;
        }
        public LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule build() {
            final var o = new LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRule();
            o.interval = interval;
            o.intervalUnit = intervalUnit;
            return o;
        }
    }
}
