// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFindingIdsResult {
    private String detectorId;
    /**
     * @return A list of finding IDs for the specified detector.
     * 
     */
    private @Nullable List<String> findingIds;
    /**
     * @return Indicates whether findings are present for the specified detector.
     * 
     */
    private @Nullable Boolean hasFindings;
    private @Nullable String id;

    private GetFindingIdsResult() {}
    public String detectorId() {
        return this.detectorId;
    }
    /**
     * @return A list of finding IDs for the specified detector.
     * 
     */
    public List<String> findingIds() {
        return this.findingIds == null ? List.of() : this.findingIds;
    }
    /**
     * @return Indicates whether findings are present for the specified detector.
     * 
     */
    public Optional<Boolean> hasFindings() {
        return Optional.ofNullable(this.hasFindings);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFindingIdsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String detectorId;
        private @Nullable List<String> findingIds;
        private @Nullable Boolean hasFindings;
        private @Nullable String id;
        public Builder() {}
        public Builder(GetFindingIdsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectorId = defaults.detectorId;
    	      this.findingIds = defaults.findingIds;
    	      this.hasFindings = defaults.hasFindings;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder detectorId(String detectorId) {
            this.detectorId = Objects.requireNonNull(detectorId);
            return this;
        }
        @CustomType.Setter
        public Builder findingIds(@Nullable List<String> findingIds) {
            this.findingIds = findingIds;
            return this;
        }
        public Builder findingIds(String... findingIds) {
            return findingIds(List.of(findingIds));
        }
        @CustomType.Setter
        public Builder hasFindings(@Nullable Boolean hasFindings) {
            this.hasFindings = hasFindings;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public GetFindingIdsResult build() {
            final var o = new GetFindingIdsResult();
            o.detectorId = detectorId;
            o.findingIds = findingIds;
            o.hasFindings = hasFindings;
            o.id = id;
            return o;
        }
    }
}
