// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.aws.guardduty.inputs.MalwareProtectionPlanActionArgs;
import com.pulumi.aws.guardduty.inputs.MalwareProtectionPlanProtectedResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MalwareProtectionPlanState extends com.pulumi.resources.ResourceArgs {

    public static final MalwareProtectionPlanState Empty = new MalwareProtectionPlanState();

    /**
     * Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<MalwareProtectionPlanActionArgs>> actions;

    /**
     * @return Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     * 
     */
    public Optional<Output<List<MalwareProtectionPlanActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * The ARN of the GuardDuty malware protection plan
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the GuardDuty malware protection plan
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The timestamp when the Malware Protection plan resource was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The timestamp when the Malware Protection plan resource was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
     * 
     */
    @Import(name="protectedResource")
    private @Nullable Output<MalwareProtectionPlanProtectedResourceArgs> protectedResource;

    /**
     * @return Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
     * 
     */
    public Optional<Output<MalwareProtectionPlanProtectedResourceArgs>> protectedResource() {
        return Optional.ofNullable(this.protectedResource);
    }

    /**
     * The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private MalwareProtectionPlanState() {}

    private MalwareProtectionPlanState(MalwareProtectionPlanState $) {
        this.actions = $.actions;
        this.arn = $.arn;
        this.createdAt = $.createdAt;
        this.protectedResource = $.protectedResource;
        this.role = $.role;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MalwareProtectionPlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MalwareProtectionPlanState $;

        public Builder() {
            $ = new MalwareProtectionPlanState();
        }

        public Builder(MalwareProtectionPlanState defaults) {
            $ = new MalwareProtectionPlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<MalwareProtectionPlanActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<MalwareProtectionPlanActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
         * 
         * @return builder
         * 
         */
        public Builder actions(MalwareProtectionPlanActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param arn The ARN of the GuardDuty malware protection plan
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the GuardDuty malware protection plan
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdAt The timestamp when the Malware Protection plan resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The timestamp when the Malware Protection plan resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param protectedResource Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
         * 
         * @return builder
         * 
         */
        public Builder protectedResource(@Nullable Output<MalwareProtectionPlanProtectedResourceArgs> protectedResource) {
            $.protectedResource = protectedResource;
            return this;
        }

        /**
         * @param protectedResource Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
         * 
         * @return builder
         * 
         */
        public Builder protectedResource(MalwareProtectionPlanProtectedResourceArgs protectedResource) {
            return protectedResource(Output.of(protectedResource));
        }

        /**
         * @param role The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param status The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public MalwareProtectionPlanState build() {
            return $;
        }
    }

}
