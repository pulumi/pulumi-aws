// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs Empty = new ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs();

    /**
     * Controls whether provisioned throughput is enabled or not. Default value: `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Controls whether provisioned throughput is enabled or not. Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
     * 
     */
    @Import(name="volumeThroughput")
    private @Nullable Output<Integer> volumeThroughput;

    /**
     * @return Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
     * 
     */
    public Optional<Output<Integer>> volumeThroughput() {
        return Optional.ofNullable(this.volumeThroughput);
    }

    private ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs() {}

    private ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs $) {
        this.enabled = $.enabled;
        this.volumeThroughput = $.volumeThroughput;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs $;

        public Builder() {
            $ = new ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs();
        }

        public Builder(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs defaults) {
            $ = new ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Controls whether provisioned throughput is enabled or not. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Controls whether provisioned throughput is enabled or not. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param volumeThroughput Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
         * 
         * @return builder
         * 
         */
        public Builder volumeThroughput(@Nullable Output<Integer> volumeThroughput) {
            $.volumeThroughput = volumeThroughput;
            return this;
        }

        /**
         * @param volumeThroughput Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
         * 
         * @return builder
         * 
         */
        public Builder volumeThroughput(Integer volumeThroughput) {
            return volumeThroughput(Output.of(volumeThroughput));
        }

        public ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs build() {
            return $;
        }
    }

}
