// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualNodeSpecServiceDiscoveryDns {
    /**
     * @return DNS host name for your virtual node.
     * 
     */
    private String hostname;
    /**
     * @return The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
     * 
     */
    private @Nullable String ipPreference;
    /**
     * @return The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
     * 
     */
    private @Nullable String responseType;

    private VirtualNodeSpecServiceDiscoveryDns() {}
    /**
     * @return DNS host name for your virtual node.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
     * 
     */
    public Optional<String> ipPreference() {
        return Optional.ofNullable(this.ipPreference);
    }
    /**
     * @return The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
     * 
     */
    public Optional<String> responseType() {
        return Optional.ofNullable(this.responseType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNodeSpecServiceDiscoveryDns defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostname;
        private @Nullable String ipPreference;
        private @Nullable String responseType;
        public Builder() {}
        public Builder(VirtualNodeSpecServiceDiscoveryDns defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.ipPreference = defaults.ipPreference;
    	      this.responseType = defaults.responseType;
        }

        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("VirtualNodeSpecServiceDiscoveryDns", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder ipPreference(@Nullable String ipPreference) {

            this.ipPreference = ipPreference;
            return this;
        }
        @CustomType.Setter
        public Builder responseType(@Nullable String responseType) {

            this.responseType = responseType;
            return this;
        }
        public VirtualNodeSpecServiceDiscoveryDns build() {
            final var _resultValue = new VirtualNodeSpecServiceDiscoveryDns();
            _resultValue.hostname = hostname;
            _resultValue.ipPreference = ipPreference;
            _resultValue.responseType = responseType;
            return _resultValue;
        }
    }
}
