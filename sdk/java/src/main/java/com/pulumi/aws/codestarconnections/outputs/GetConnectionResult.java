// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codestarconnections.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConnectionResult {
    private String arn;
    /**
     * @return CodeStar Connection status. Possible values are `PENDING`, `AVAILABLE` and `ERROR`.
     * 
     */
    private String connectionStatus;
    /**
     * @return ARN of the host associated with the connection.
     * 
     */
    private String hostArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the CodeStar Connection. The name is unique in the calling AWS account.
     * 
     */
    private String name;
    /**
     * @return Name of the external provider where your third-party code repository is configured. Possible values are `Bitbucket` and `GitHub`. For connections to a GitHub Enterprise Server instance, you must create an aws.codestarconnections.Host resource and use `host_arn` instead.
     * 
     */
    private String providerType;
    /**
     * @return Map of key-value resource tags to associate with the resource.
     * 
     */
    private Map<String,String> tags;

    private GetConnectionResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return CodeStar Connection status. Possible values are `PENDING`, `AVAILABLE` and `ERROR`.
     * 
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * @return ARN of the host associated with the connection.
     * 
     */
    public String hostArn() {
        return this.hostArn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the CodeStar Connection. The name is unique in the calling AWS account.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of the external provider where your third-party code repository is configured. Possible values are `Bitbucket` and `GitHub`. For connections to a GitHub Enterprise Server instance, you must create an aws.codestarconnections.Host resource and use `host_arn` instead.
     * 
     */
    public String providerType() {
        return this.providerType;
    }
    /**
     * @return Map of key-value resource tags to associate with the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String connectionStatus;
        private String hostArn;
        private String id;
        private String name;
        private String providerType;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.hostArn = defaults.hostArn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.providerType = defaults.providerType;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder connectionStatus(String connectionStatus) {
            if (connectionStatus == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "connectionStatus");
            }
            this.connectionStatus = connectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder hostArn(String hostArn) {
            if (hostArn == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "hostArn");
            }
            this.hostArn = hostArn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder providerType(String providerType) {
            if (providerType == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "providerType");
            }
            this.providerType = providerType;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetConnectionResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetConnectionResult build() {
            final var _resultValue = new GetConnectionResult();
            _resultValue.arn = arn;
            _resultValue.connectionStatus = connectionStatus;
            _resultValue.hostArn = hostArn;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.providerType = providerType;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
