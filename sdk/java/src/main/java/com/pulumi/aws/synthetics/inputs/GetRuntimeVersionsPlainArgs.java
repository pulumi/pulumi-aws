// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.synthetics.inputs;

import com.pulumi.aws.synthetics.inputs.GetRuntimeVersionsRuntimeVersion;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuntimeVersionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRuntimeVersionsPlainArgs Empty = new GetRuntimeVersionsPlainArgs();

    /**
     * List of runtime versions. See `runtime_versions` attribute reference.
     * 
     */
    @Import(name="runtimeVersions")
    private @Nullable List<GetRuntimeVersionsRuntimeVersion> runtimeVersions;

    /**
     * @return List of runtime versions. See `runtime_versions` attribute reference.
     * 
     */
    public Optional<List<GetRuntimeVersionsRuntimeVersion>> runtimeVersions() {
        return Optional.ofNullable(this.runtimeVersions);
    }

    private GetRuntimeVersionsPlainArgs() {}

    private GetRuntimeVersionsPlainArgs(GetRuntimeVersionsPlainArgs $) {
        this.runtimeVersions = $.runtimeVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuntimeVersionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuntimeVersionsPlainArgs $;

        public Builder() {
            $ = new GetRuntimeVersionsPlainArgs();
        }

        public Builder(GetRuntimeVersionsPlainArgs defaults) {
            $ = new GetRuntimeVersionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param runtimeVersions List of runtime versions. See `runtime_versions` attribute reference.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersions(@Nullable List<GetRuntimeVersionsRuntimeVersion> runtimeVersions) {
            $.runtimeVersions = runtimeVersions;
            return this;
        }

        /**
         * @param runtimeVersions List of runtime versions. See `runtime_versions` attribute reference.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersions(GetRuntimeVersionsRuntimeVersion... runtimeVersions) {
            return runtimeVersions(List.of(runtimeVersions));
        }

        public GetRuntimeVersionsPlainArgs build() {
            return $;
        }
    }

}
