// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentState extends com.pulumi.resources.ResourceArgs {

    public static final AgentState Empty = new AgentState();

    @Import(name="activationKey")
    private @Nullable Output<String> activationKey;

    public Optional<Output<String>> activationKey() {
        return Optional.ofNullable(this.activationKey);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="privateLinkEndpoint")
    private @Nullable Output<String> privateLinkEndpoint;

    public Optional<Output<String>> privateLinkEndpoint() {
        return Optional.ofNullable(this.privateLinkEndpoint);
    }

    @Import(name="securityGroupArns")
    private @Nullable Output<List<String>> securityGroupArns;

    public Optional<Output<List<String>>> securityGroupArns() {
        return Optional.ofNullable(this.securityGroupArns);
    }

    @Import(name="subnetArns")
    private @Nullable Output<List<String>> subnetArns;

    public Optional<Output<List<String>>> subnetArns() {
        return Optional.ofNullable(this.subnetArns);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcEndpointId")
    private @Nullable Output<String> vpcEndpointId;

    public Optional<Output<String>> vpcEndpointId() {
        return Optional.ofNullable(this.vpcEndpointId);
    }

    private AgentState() {}

    private AgentState(AgentState $) {
        this.activationKey = $.activationKey;
        this.arn = $.arn;
        this.ipAddress = $.ipAddress;
        this.name = $.name;
        this.privateLinkEndpoint = $.privateLinkEndpoint;
        this.securityGroupArns = $.securityGroupArns;
        this.subnetArns = $.subnetArns;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcEndpointId = $.vpcEndpointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentState $;

        public Builder() {
            $ = new AgentState();
        }

        public Builder(AgentState defaults) {
            $ = new AgentState(Objects.requireNonNull(defaults));
        }

        public Builder activationKey(@Nullable Output<String> activationKey) {
            $.activationKey = activationKey;
            return this;
        }

        public Builder activationKey(String activationKey) {
            return activationKey(Output.of(activationKey));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder privateLinkEndpoint(@Nullable Output<String> privateLinkEndpoint) {
            $.privateLinkEndpoint = privateLinkEndpoint;
            return this;
        }

        public Builder privateLinkEndpoint(String privateLinkEndpoint) {
            return privateLinkEndpoint(Output.of(privateLinkEndpoint));
        }

        public Builder securityGroupArns(@Nullable Output<List<String>> securityGroupArns) {
            $.securityGroupArns = securityGroupArns;
            return this;
        }

        public Builder securityGroupArns(List<String> securityGroupArns) {
            return securityGroupArns(Output.of(securityGroupArns));
        }

        public Builder securityGroupArns(String... securityGroupArns) {
            return securityGroupArns(List.of(securityGroupArns));
        }

        public Builder subnetArns(@Nullable Output<List<String>> subnetArns) {
            $.subnetArns = subnetArns;
            return this;
        }

        public Builder subnetArns(List<String> subnetArns) {
            return subnetArns(Output.of(subnetArns));
        }

        public Builder subnetArns(String... subnetArns) {
            return subnetArns(List.of(subnetArns));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcEndpointId(@Nullable Output<String> vpcEndpointId) {
            $.vpcEndpointId = vpcEndpointId;
            return this;
        }

        public Builder vpcEndpointId(String vpcEndpointId) {
            return vpcEndpointId(Output.of(vpcEndpointId));
        }

        public AgentState build() {
            return $;
        }
    }

}
