// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetNetworkInsightsPathFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkInsightsPathArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkInsightsPathArgs Empty = new GetNetworkInsightsPathArgs();

    /**
     * Configuration block(s) for filtering. Detailed below.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetNetworkInsightsPathFilterArgs>> filters;

    /**
     * @return Configuration block(s) for filtering. Detailed below.
     * 
     */
    public Optional<Output<List<GetNetworkInsightsPathFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ID of the Network Insights Path to select.
     * 
     */
    @Import(name="networkInsightsPathId")
    private @Nullable Output<String> networkInsightsPathId;

    /**
     * @return ID of the Network Insights Path to select.
     * 
     */
    public Optional<Output<String>> networkInsightsPathId() {
        return Optional.ofNullable(this.networkInsightsPathId);
    }

    /**
     * Map of tags assigned to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetNetworkInsightsPathArgs() {}

    private GetNetworkInsightsPathArgs(GetNetworkInsightsPathArgs $) {
        this.filters = $.filters;
        this.networkInsightsPathId = $.networkInsightsPathId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkInsightsPathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkInsightsPathArgs $;

        public Builder() {
            $ = new GetNetworkInsightsPathArgs();
        }

        public Builder(GetNetworkInsightsPathArgs defaults) {
            $ = new GetNetworkInsightsPathArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetNetworkInsightsPathFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetNetworkInsightsPathFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetNetworkInsightsPathFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param networkInsightsPathId ID of the Network Insights Path to select.
         * 
         * @return builder
         * 
         */
        public Builder networkInsightsPathId(@Nullable Output<String> networkInsightsPathId) {
            $.networkInsightsPathId = networkInsightsPathId;
            return this;
        }

        /**
         * @param networkInsightsPathId ID of the Network Insights Path to select.
         * 
         * @return builder
         * 
         */
        public Builder networkInsightsPathId(String networkInsightsPathId) {
            return networkInsightsPathId(Output.of(networkInsightsPathId));
        }

        /**
         * @param tags Map of tags assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetNetworkInsightsPathArgs build() {
            return $;
        }
    }

}
