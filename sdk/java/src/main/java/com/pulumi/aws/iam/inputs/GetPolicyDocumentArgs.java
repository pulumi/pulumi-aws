// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.aws.iam.inputs.GetPolicyDocumentStatementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyDocumentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPolicyDocumentArgs Empty = new GetPolicyDocumentArgs();

    /**
     * List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `source_policy_documents`.  Non-overriding statements will be added to the exported document.
     * 
     */
    @Import(name="overridePolicyDocuments")
    private @Nullable Output<List<String>> overridePolicyDocuments;

    /**
     * @return List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `source_policy_documents`.  Non-overriding statements will be added to the exported document.
     * 
     */
    public Optional<Output<List<String>>> overridePolicyDocuments() {
        return Optional.ofNullable(this.overridePolicyDocuments);
    }

    /**
     * ID for the policy document.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return ID for the policy document.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` must have unique `sid`s. Statements with the same `sid` from `override_policy_documents` will override source statements.
     * 
     */
    @Import(name="sourcePolicyDocuments")
    private @Nullable Output<List<String>> sourcePolicyDocuments;

    /**
     * @return List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` must have unique `sid`s. Statements with the same `sid` from `override_policy_documents` will override source statements.
     * 
     */
    public Optional<Output<List<String>>> sourcePolicyDocuments() {
        return Optional.ofNullable(this.sourcePolicyDocuments);
    }

    /**
     * Configuration block for a policy statement. Detailed below.
     * 
     */
    @Import(name="statements")
    private @Nullable Output<List<GetPolicyDocumentStatementArgs>> statements;

    /**
     * @return Configuration block for a policy statement. Detailed below.
     * 
     */
    public Optional<Output<List<GetPolicyDocumentStatementArgs>>> statements() {
        return Optional.ofNullable(this.statements);
    }

    /**
     * IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetPolicyDocumentArgs() {}

    private GetPolicyDocumentArgs(GetPolicyDocumentArgs $) {
        this.overridePolicyDocuments = $.overridePolicyDocuments;
        this.policyId = $.policyId;
        this.sourcePolicyDocuments = $.sourcePolicyDocuments;
        this.statements = $.statements;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyDocumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyDocumentArgs $;

        public Builder() {
            $ = new GetPolicyDocumentArgs();
        }

        public Builder(GetPolicyDocumentArgs defaults) {
            $ = new GetPolicyDocumentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param overridePolicyDocuments List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `source_policy_documents`.  Non-overriding statements will be added to the exported document.
         * 
         * @return builder
         * 
         */
        public Builder overridePolicyDocuments(@Nullable Output<List<String>> overridePolicyDocuments) {
            $.overridePolicyDocuments = overridePolicyDocuments;
            return this;
        }

        /**
         * @param overridePolicyDocuments List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `source_policy_documents`.  Non-overriding statements will be added to the exported document.
         * 
         * @return builder
         * 
         */
        public Builder overridePolicyDocuments(List<String> overridePolicyDocuments) {
            return overridePolicyDocuments(Output.of(overridePolicyDocuments));
        }

        /**
         * @param overridePolicyDocuments List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `source_policy_documents`.  Non-overriding statements will be added to the exported document.
         * 
         * @return builder
         * 
         */
        public Builder overridePolicyDocuments(String... overridePolicyDocuments) {
            return overridePolicyDocuments(List.of(overridePolicyDocuments));
        }

        /**
         * @param policyId ID for the policy document.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId ID for the policy document.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param sourcePolicyDocuments List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` must have unique `sid`s. Statements with the same `sid` from `override_policy_documents` will override source statements.
         * 
         * @return builder
         * 
         */
        public Builder sourcePolicyDocuments(@Nullable Output<List<String>> sourcePolicyDocuments) {
            $.sourcePolicyDocuments = sourcePolicyDocuments;
            return this;
        }

        /**
         * @param sourcePolicyDocuments List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` must have unique `sid`s. Statements with the same `sid` from `override_policy_documents` will override source statements.
         * 
         * @return builder
         * 
         */
        public Builder sourcePolicyDocuments(List<String> sourcePolicyDocuments) {
            return sourcePolicyDocuments(Output.of(sourcePolicyDocuments));
        }

        /**
         * @param sourcePolicyDocuments List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` must have unique `sid`s. Statements with the same `sid` from `override_policy_documents` will override source statements.
         * 
         * @return builder
         * 
         */
        public Builder sourcePolicyDocuments(String... sourcePolicyDocuments) {
            return sourcePolicyDocuments(List.of(sourcePolicyDocuments));
        }

        /**
         * @param statements Configuration block for a policy statement. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder statements(@Nullable Output<List<GetPolicyDocumentStatementArgs>> statements) {
            $.statements = statements;
            return this;
        }

        /**
         * @param statements Configuration block for a policy statement. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder statements(List<GetPolicyDocumentStatementArgs> statements) {
            return statements(Output.of(statements));
        }

        /**
         * @param statements Configuration block for a policy statement. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder statements(GetPolicyDocumentStatementArgs... statements) {
            return statements(List.of(statements));
        }

        /**
         * @param version IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public GetPolicyDocumentArgs build() {
            return $;
        }
    }

}
