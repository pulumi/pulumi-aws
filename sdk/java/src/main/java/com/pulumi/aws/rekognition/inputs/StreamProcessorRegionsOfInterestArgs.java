// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rekognition.inputs;

import com.pulumi.aws.rekognition.inputs.StreamProcessorRegionsOfInterestBoundingBoxArgs;
import com.pulumi.aws.rekognition.inputs.StreamProcessorRegionsOfInterestPolygonArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamProcessorRegionsOfInterestArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamProcessorRegionsOfInterestArgs Empty = new StreamProcessorRegionsOfInterestArgs();

    /**
     * Box representing a region of interest on screen. Only 1 per region is allowed. See `bounding_box`.
     * 
     */
    @Import(name="boundingBox")
    private @Nullable Output<StreamProcessorRegionsOfInterestBoundingBoxArgs> boundingBox;

    /**
     * @return Box representing a region of interest on screen. Only 1 per region is allowed. See `bounding_box`.
     * 
     */
    public Optional<Output<StreamProcessorRegionsOfInterestBoundingBoxArgs>> boundingBox() {
        return Optional.ofNullable(this.boundingBox);
    }

    /**
     * Shape made up of up to 10 Point objects to define a region of interest. See `polygon`.
     * 
     */
    @Import(name="polygons", required=true)
    private Output<List<StreamProcessorRegionsOfInterestPolygonArgs>> polygons;

    /**
     * @return Shape made up of up to 10 Point objects to define a region of interest. See `polygon`.
     * 
     */
    public Output<List<StreamProcessorRegionsOfInterestPolygonArgs>> polygons() {
        return this.polygons;
    }

    private StreamProcessorRegionsOfInterestArgs() {}

    private StreamProcessorRegionsOfInterestArgs(StreamProcessorRegionsOfInterestArgs $) {
        this.boundingBox = $.boundingBox;
        this.polygons = $.polygons;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamProcessorRegionsOfInterestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamProcessorRegionsOfInterestArgs $;

        public Builder() {
            $ = new StreamProcessorRegionsOfInterestArgs();
        }

        public Builder(StreamProcessorRegionsOfInterestArgs defaults) {
            $ = new StreamProcessorRegionsOfInterestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param boundingBox Box representing a region of interest on screen. Only 1 per region is allowed. See `bounding_box`.
         * 
         * @return builder
         * 
         */
        public Builder boundingBox(@Nullable Output<StreamProcessorRegionsOfInterestBoundingBoxArgs> boundingBox) {
            $.boundingBox = boundingBox;
            return this;
        }

        /**
         * @param boundingBox Box representing a region of interest on screen. Only 1 per region is allowed. See `bounding_box`.
         * 
         * @return builder
         * 
         */
        public Builder boundingBox(StreamProcessorRegionsOfInterestBoundingBoxArgs boundingBox) {
            return boundingBox(Output.of(boundingBox));
        }

        /**
         * @param polygons Shape made up of up to 10 Point objects to define a region of interest. See `polygon`.
         * 
         * @return builder
         * 
         */
        public Builder polygons(Output<List<StreamProcessorRegionsOfInterestPolygonArgs>> polygons) {
            $.polygons = polygons;
            return this;
        }

        /**
         * @param polygons Shape made up of up to 10 Point objects to define a region of interest. See `polygon`.
         * 
         * @return builder
         * 
         */
        public Builder polygons(List<StreamProcessorRegionsOfInterestPolygonArgs> polygons) {
            return polygons(Output.of(polygons));
        }

        /**
         * @param polygons Shape made up of up to 10 Point objects to define a region of interest. See `polygon`.
         * 
         * @return builder
         * 
         */
        public Builder polygons(StreamProcessorRegionsOfInterestPolygonArgs... polygons) {
            return polygons(List.of(polygons));
        }

        public StreamProcessorRegionsOfInterestArgs build() {
            if ($.polygons == null) {
                throw new MissingRequiredPropertyException("StreamProcessorRegionsOfInterestArgs", "polygons");
            }
            return $;
        }
    }

}
