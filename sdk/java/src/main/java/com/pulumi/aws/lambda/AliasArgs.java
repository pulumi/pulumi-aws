// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.lambda.inputs.AliasRoutingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final AliasArgs Empty = new AliasArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="functionName", required=true)
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    @Import(name="functionVersion", required=true)
    private Output<String> functionVersion;

    public Output<String> functionVersion() {
        return this.functionVersion;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="routingConfig")
    private @Nullable Output<AliasRoutingConfigArgs> routingConfig;

    public Optional<Output<AliasRoutingConfigArgs>> routingConfig() {
        return Optional.ofNullable(this.routingConfig);
    }

    private AliasArgs() {}

    private AliasArgs(AliasArgs $) {
        this.description = $.description;
        this.functionName = $.functionName;
        this.functionVersion = $.functionVersion;
        this.name = $.name;
        this.routingConfig = $.routingConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasArgs $;

        public Builder() {
            $ = new AliasArgs();
        }

        public Builder(AliasArgs defaults) {
            $ = new AliasArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder functionVersion(Output<String> functionVersion) {
            $.functionVersion = functionVersion;
            return this;
        }

        public Builder functionVersion(String functionVersion) {
            return functionVersion(Output.of(functionVersion));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder routingConfig(@Nullable Output<AliasRoutingConfigArgs> routingConfig) {
            $.routingConfig = routingConfig;
            return this;
        }

        public Builder routingConfig(AliasRoutingConfigArgs routingConfig) {
            return routingConfig(Output.of(routingConfig));
        }

        public AliasArgs build() {
            $.functionName = Objects.requireNonNull($.functionName, "expected parameter 'functionName' to be non-null");
            $.functionVersion = Objects.requireNonNull($.functionVersion, "expected parameter 'functionVersion' to be non-null");
            return $;
        }
    }

}
