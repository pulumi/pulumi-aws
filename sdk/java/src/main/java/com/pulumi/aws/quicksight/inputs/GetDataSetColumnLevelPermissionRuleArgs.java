// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDataSetColumnLevelPermissionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDataSetColumnLevelPermissionRuleArgs Empty = new GetDataSetColumnLevelPermissionRuleArgs();

    @Import(name="columnNames", required=true)
    private Output<List<String>> columnNames;

    public Output<List<String>> columnNames() {
        return this.columnNames;
    }

    @Import(name="principals", required=true)
    private Output<List<String>> principals;

    public Output<List<String>> principals() {
        return this.principals;
    }

    private GetDataSetColumnLevelPermissionRuleArgs() {}

    private GetDataSetColumnLevelPermissionRuleArgs(GetDataSetColumnLevelPermissionRuleArgs $) {
        this.columnNames = $.columnNames;
        this.principals = $.principals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataSetColumnLevelPermissionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataSetColumnLevelPermissionRuleArgs $;

        public Builder() {
            $ = new GetDataSetColumnLevelPermissionRuleArgs();
        }

        public Builder(GetDataSetColumnLevelPermissionRuleArgs defaults) {
            $ = new GetDataSetColumnLevelPermissionRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder columnNames(Output<List<String>> columnNames) {
            $.columnNames = columnNames;
            return this;
        }

        public Builder columnNames(List<String> columnNames) {
            return columnNames(Output.of(columnNames));
        }

        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }

        public Builder principals(Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        public GetDataSetColumnLevelPermissionRuleArgs build() {
            $.columnNames = Objects.requireNonNull($.columnNames, "expected parameter 'columnNames' to be non-null");
            $.principals = Objects.requireNonNull($.principals, "expected parameter 'principals' to be non-null");
            return $;
        }
    }

}
