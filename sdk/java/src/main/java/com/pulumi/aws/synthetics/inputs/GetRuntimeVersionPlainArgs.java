// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.synthetics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuntimeVersionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRuntimeVersionPlainArgs Empty = new GetRuntimeVersionPlainArgs();

    /**
     * Whether the latest version of the runtime should be fetched. Conflicts with `version`. Valid values: `true`.
     * 
     */
    @Import(name="latest")
    private @Nullable Boolean latest;

    /**
     * @return Whether the latest version of the runtime should be fetched. Conflicts with `version`. Valid values: `true`.
     * 
     */
    public Optional<Boolean> latest() {
        return Optional.ofNullable(this.latest);
    }

    /**
     * Name prefix of the runtime version (for example, `syn-nodejs-puppeteer`).
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="prefix", required=true)
    private String prefix;

    /**
     * @return Name prefix of the runtime version (for example, `syn-nodejs-puppeteer`).
     * 
     * The following arguments are optional:
     * 
     */
    public String prefix() {
        return this.prefix;
    }

    /**
     * Version of the runtime to be fetched (for example, `9.0`). Conflicts with `latest`.
     * 
     */
    @Import(name="version")
    private @Nullable String version;

    /**
     * @return Version of the runtime to be fetched (for example, `9.0`). Conflicts with `latest`.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    private GetRuntimeVersionPlainArgs() {}

    private GetRuntimeVersionPlainArgs(GetRuntimeVersionPlainArgs $) {
        this.latest = $.latest;
        this.prefix = $.prefix;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuntimeVersionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuntimeVersionPlainArgs $;

        public Builder() {
            $ = new GetRuntimeVersionPlainArgs();
        }

        public Builder(GetRuntimeVersionPlainArgs defaults) {
            $ = new GetRuntimeVersionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param latest Whether the latest version of the runtime should be fetched. Conflicts with `version`. Valid values: `true`.
         * 
         * @return builder
         * 
         */
        public Builder latest(@Nullable Boolean latest) {
            $.latest = latest;
            return this;
        }

        /**
         * @param prefix Name prefix of the runtime version (for example, `syn-nodejs-puppeteer`).
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param version Version of the runtime to be fetched (for example, `9.0`). Conflicts with `latest`.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable String version) {
            $.version = version;
            return this;
        }

        public GetRuntimeVersionPlainArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("GetRuntimeVersionPlainArgs", "prefix");
            }
            return $;
        }
    }

}
