// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetReservedInstanceOfferingResult {
    /**
     * @return Currency code for the reserved DB instance.
     * 
     */
    private String currencyCode;
    private String dbInstanceClass;
    private Integer duration;
    /**
     * @return Fixed price charged for this reserved DB instance.
     * 
     */
    private Double fixedPrice;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean multiAz;
    /**
     * @return Unique identifier for the reservation.
     * 
     */
    private String offeringId;
    private String offeringType;
    private String productDescription;

    private GetReservedInstanceOfferingResult() {}
    /**
     * @return Currency code for the reserved DB instance.
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    public String dbInstanceClass() {
        return this.dbInstanceClass;
    }
    public Integer duration() {
        return this.duration;
    }
    /**
     * @return Fixed price charged for this reserved DB instance.
     * 
     */
    public Double fixedPrice() {
        return this.fixedPrice;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean multiAz() {
        return this.multiAz;
    }
    /**
     * @return Unique identifier for the reservation.
     * 
     */
    public String offeringId() {
        return this.offeringId;
    }
    public String offeringType() {
        return this.offeringType;
    }
    public String productDescription() {
        return this.productDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservedInstanceOfferingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currencyCode;
        private String dbInstanceClass;
        private Integer duration;
        private Double fixedPrice;
        private String id;
        private Boolean multiAz;
        private String offeringId;
        private String offeringType;
        private String productDescription;
        public Builder() {}
        public Builder(GetReservedInstanceOfferingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencyCode = defaults.currencyCode;
    	      this.dbInstanceClass = defaults.dbInstanceClass;
    	      this.duration = defaults.duration;
    	      this.fixedPrice = defaults.fixedPrice;
    	      this.id = defaults.id;
    	      this.multiAz = defaults.multiAz;
    	      this.offeringId = defaults.offeringId;
    	      this.offeringType = defaults.offeringType;
    	      this.productDescription = defaults.productDescription;
        }

        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = Objects.requireNonNull(currencyCode);
            return this;
        }
        @CustomType.Setter
        public Builder dbInstanceClass(String dbInstanceClass) {
            this.dbInstanceClass = Objects.requireNonNull(dbInstanceClass);
            return this;
        }
        @CustomType.Setter
        public Builder duration(Integer duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }
        @CustomType.Setter
        public Builder fixedPrice(Double fixedPrice) {
            this.fixedPrice = Objects.requireNonNull(fixedPrice);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder multiAz(Boolean multiAz) {
            this.multiAz = Objects.requireNonNull(multiAz);
            return this;
        }
        @CustomType.Setter
        public Builder offeringId(String offeringId) {
            this.offeringId = Objects.requireNonNull(offeringId);
            return this;
        }
        @CustomType.Setter
        public Builder offeringType(String offeringType) {
            this.offeringType = Objects.requireNonNull(offeringType);
            return this;
        }
        @CustomType.Setter
        public Builder productDescription(String productDescription) {
            this.productDescription = Objects.requireNonNull(productDescription);
            return this;
        }
        public GetReservedInstanceOfferingResult build() {
            final var o = new GetReservedInstanceOfferingResult();
            o.currencyCode = currencyCode;
            o.dbInstanceClass = dbInstanceClass;
            o.duration = duration;
            o.fixedPrice = fixedPrice;
            o.id = id;
            o.multiAz = multiAz;
            o.offeringId = offeringId;
            o.offeringType = offeringType;
            o.productDescription = productDescription;
            return o;
        }
    }
}
