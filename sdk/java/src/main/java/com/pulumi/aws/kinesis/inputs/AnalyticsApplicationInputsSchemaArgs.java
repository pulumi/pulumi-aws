// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.aws.kinesis.inputs.AnalyticsApplicationInputsSchemaRecordColumnArgs;
import com.pulumi.aws.kinesis.inputs.AnalyticsApplicationInputsSchemaRecordFormatArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsApplicationInputsSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsApplicationInputsSchemaArgs Empty = new AnalyticsApplicationInputsSchemaArgs();

    /**
     * The Record Column mapping for the streaming source data element.
     * See Record Columns below for more details.
     * 
     */
    @Import(name="recordColumns", required=true)
    private Output<List<AnalyticsApplicationInputsSchemaRecordColumnArgs>> recordColumns;

    /**
     * @return The Record Column mapping for the streaming source data element.
     * See Record Columns below for more details.
     * 
     */
    public Output<List<AnalyticsApplicationInputsSchemaRecordColumnArgs>> recordColumns() {
        return this.recordColumns;
    }

    /**
     * The Encoding of the record in the streaming source.
     * 
     */
    @Import(name="recordEncoding")
    private @Nullable Output<String> recordEncoding;

    /**
     * @return The Encoding of the record in the streaming source.
     * 
     */
    public Optional<Output<String>> recordEncoding() {
        return Optional.ofNullable(this.recordEncoding);
    }

    /**
     * The Record Format and mapping information to schematize a record.
     * See Record Format below for more details.
     * 
     */
    @Import(name="recordFormat", required=true)
    private Output<AnalyticsApplicationInputsSchemaRecordFormatArgs> recordFormat;

    /**
     * @return The Record Format and mapping information to schematize a record.
     * See Record Format below for more details.
     * 
     */
    public Output<AnalyticsApplicationInputsSchemaRecordFormatArgs> recordFormat() {
        return this.recordFormat;
    }

    private AnalyticsApplicationInputsSchemaArgs() {}

    private AnalyticsApplicationInputsSchemaArgs(AnalyticsApplicationInputsSchemaArgs $) {
        this.recordColumns = $.recordColumns;
        this.recordEncoding = $.recordEncoding;
        this.recordFormat = $.recordFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsApplicationInputsSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsApplicationInputsSchemaArgs $;

        public Builder() {
            $ = new AnalyticsApplicationInputsSchemaArgs();
        }

        public Builder(AnalyticsApplicationInputsSchemaArgs defaults) {
            $ = new AnalyticsApplicationInputsSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordColumns The Record Column mapping for the streaming source data element.
         * See Record Columns below for more details.
         * 
         * @return builder
         * 
         */
        public Builder recordColumns(Output<List<AnalyticsApplicationInputsSchemaRecordColumnArgs>> recordColumns) {
            $.recordColumns = recordColumns;
            return this;
        }

        /**
         * @param recordColumns The Record Column mapping for the streaming source data element.
         * See Record Columns below for more details.
         * 
         * @return builder
         * 
         */
        public Builder recordColumns(List<AnalyticsApplicationInputsSchemaRecordColumnArgs> recordColumns) {
            return recordColumns(Output.of(recordColumns));
        }

        /**
         * @param recordColumns The Record Column mapping for the streaming source data element.
         * See Record Columns below for more details.
         * 
         * @return builder
         * 
         */
        public Builder recordColumns(AnalyticsApplicationInputsSchemaRecordColumnArgs... recordColumns) {
            return recordColumns(List.of(recordColumns));
        }

        /**
         * @param recordEncoding The Encoding of the record in the streaming source.
         * 
         * @return builder
         * 
         */
        public Builder recordEncoding(@Nullable Output<String> recordEncoding) {
            $.recordEncoding = recordEncoding;
            return this;
        }

        /**
         * @param recordEncoding The Encoding of the record in the streaming source.
         * 
         * @return builder
         * 
         */
        public Builder recordEncoding(String recordEncoding) {
            return recordEncoding(Output.of(recordEncoding));
        }

        /**
         * @param recordFormat The Record Format and mapping information to schematize a record.
         * See Record Format below for more details.
         * 
         * @return builder
         * 
         */
        public Builder recordFormat(Output<AnalyticsApplicationInputsSchemaRecordFormatArgs> recordFormat) {
            $.recordFormat = recordFormat;
            return this;
        }

        /**
         * @param recordFormat The Record Format and mapping information to schematize a record.
         * See Record Format below for more details.
         * 
         * @return builder
         * 
         */
        public Builder recordFormat(AnalyticsApplicationInputsSchemaRecordFormatArgs recordFormat) {
            return recordFormat(Output.of(recordFormat));
        }

        public AnalyticsApplicationInputsSchemaArgs build() {
            if ($.recordColumns == null) {
                throw new MissingRequiredPropertyException("AnalyticsApplicationInputsSchemaArgs", "recordColumns");
            }
            if ($.recordFormat == null) {
                throw new MissingRequiredPropertyException("AnalyticsApplicationInputsSchemaArgs", "recordFormat");
            }
            return $;
        }
    }

}
