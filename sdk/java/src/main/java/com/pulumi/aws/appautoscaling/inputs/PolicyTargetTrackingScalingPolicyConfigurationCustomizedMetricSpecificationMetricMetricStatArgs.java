// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appautoscaling.inputs;

import com.pulumi.aws.appautoscaling.inputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs Empty = new PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs();

    /**
     * Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
     * 
     */
    @Import(name="metric", required=true)
    private Output<PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs> metric;

    /**
     * @return Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
     * 
     */
    public Output<PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs> metric() {
        return this.metric;
    }

    /**
     * Statistic of the metrics to return.
     * 
     */
    @Import(name="stat", required=true)
    private Output<String> stat;

    /**
     * @return Statistic of the metrics to return.
     * 
     */
    public Output<String> stat() {
        return this.stat;
    }

    /**
     * Unit of the metrics to return.
     * 
     */
    @Import(name="unit")
    private @Nullable Output<String> unit;

    /**
     * @return Unit of the metrics to return.
     * 
     */
    public Optional<Output<String>> unit() {
        return Optional.ofNullable(this.unit);
    }

    private PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs() {}

    private PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs $) {
        this.metric = $.metric;
        this.stat = $.stat;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs $;

        public Builder() {
            $ = new PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs();
        }

        public Builder(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs defaults) {
            $ = new PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metric Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
         * 
         * @return builder
         * 
         */
        public Builder metric(Output<PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
         * 
         * @return builder
         * 
         */
        public Builder metric(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs metric) {
            return metric(Output.of(metric));
        }

        /**
         * @param stat Statistic of the metrics to return.
         * 
         * @return builder
         * 
         */
        public Builder stat(Output<String> stat) {
            $.stat = stat;
            return this;
        }

        /**
         * @param stat Statistic of the metrics to return.
         * 
         * @return builder
         * 
         */
        public Builder stat(String stat) {
            return stat(Output.of(stat));
        }

        /**
         * @param unit Unit of the metrics to return.
         * 
         * @return builder
         * 
         */
        public Builder unit(@Nullable Output<String> unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param unit Unit of the metrics to return.
         * 
         * @return builder
         * 
         */
        public Builder unit(String unit) {
            return unit(Output.of(unit));
        }

        public PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs build() {
            if ($.metric == null) {
                throw new MissingRequiredPropertyException("PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs", "metric");
            }
            if ($.stat == null) {
                throw new MissingRequiredPropertyException("PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs", "stat");
            }
            return $;
        }
    }

}
