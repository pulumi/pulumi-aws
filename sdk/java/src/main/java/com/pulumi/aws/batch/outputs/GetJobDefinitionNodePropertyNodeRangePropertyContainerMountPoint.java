// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint {
    /**
     * @return The absolute file path in the container where the tmpfs volume is mounted.
     * 
     */
    private String containerPath;
    /**
     * @return If this value is true, the container has read-only access to the volume.
     * 
     */
    private Boolean readOnly;
    /**
     * @return The name of the volume to mount.
     * 
     */
    private String sourceVolume;

    private GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint() {}
    /**
     * @return The absolute file path in the container where the tmpfs volume is mounted.
     * 
     */
    public String containerPath() {
        return this.containerPath;
    }
    /**
     * @return If this value is true, the container has read-only access to the volume.
     * 
     */
    public Boolean readOnly() {
        return this.readOnly;
    }
    /**
     * @return The name of the volume to mount.
     * 
     */
    public String sourceVolume() {
        return this.sourceVolume;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String containerPath;
        private Boolean readOnly;
        private String sourceVolume;
        public Builder() {}
        public Builder(GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerPath = defaults.containerPath;
    	      this.readOnly = defaults.readOnly;
    	      this.sourceVolume = defaults.sourceVolume;
        }

        @CustomType.Setter
        public Builder containerPath(String containerPath) {
            if (containerPath == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint", "containerPath");
            }
            this.containerPath = containerPath;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            if (readOnly == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint", "readOnly");
            }
            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVolume(String sourceVolume) {
            if (sourceVolume == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint", "sourceVolume");
            }
            this.sourceVolume = sourceVolume;
            return this;
        }
        public GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint build() {
            final var _resultValue = new GetJobDefinitionNodePropertyNodeRangePropertyContainerMountPoint();
            _resultValue.containerPath = containerPath;
            _resultValue.readOnly = readOnly;
            _resultValue.sourceVolume = sourceVolume;
            return _resultValue;
        }
    }
}
