// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetVpcPeeringConnectionCidrBlockSet;
import com.pulumi.aws.ec2.outputs.GetVpcPeeringConnectionFilter;
import com.pulumi.aws.ec2.outputs.GetVpcPeeringConnectionPeerCidrBlockSet;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcPeeringConnectionResult {
    /**
     * @return Configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
     * 
     */
    private @Nullable Map<String,Boolean> accepter;
    /**
     * @return CIDR block associated to the VPC of the specific VPC Peering Connection.
     * 
     */
    private @Nullable String cidrBlock;
    /**
     * @return List of objects with CIDR blocks of the requester VPC.
     * 
     */
    private @Nullable List<GetVpcPeeringConnectionCidrBlockSet> cidrBlockSets;
    private @Nullable List<GetVpcPeeringConnectionFilter> filters;
    private @Nullable String id;
    private @Nullable String ownerId;
    private @Nullable String peerCidrBlock;
    /**
     * @return List of objects with CIDR blocks of the accepter VPC.
     * 
     */
    private @Nullable List<GetVpcPeeringConnectionPeerCidrBlockSet> peerCidrBlockSets;
    private @Nullable String peerOwnerId;
    private @Nullable String peerRegion;
    private @Nullable String peerVpcId;
    private @Nullable String region;
    /**
     * @return Configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
     * 
     */
    private @Nullable Map<String,Boolean> requester;
    private @Nullable String status;
    private @Nullable Map<String,String> tags;
    private @Nullable String vpcId;

    private GetVpcPeeringConnectionResult() {}
    /**
     * @return Configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
     * 
     */
    public Map<String,Boolean> accepter() {
        return this.accepter == null ? Map.of() : this.accepter;
    }
    /**
     * @return CIDR block associated to the VPC of the specific VPC Peering Connection.
     * 
     */
    public Optional<String> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }
    /**
     * @return List of objects with CIDR blocks of the requester VPC.
     * 
     */
    public List<GetVpcPeeringConnectionCidrBlockSet> cidrBlockSets() {
        return this.cidrBlockSets == null ? List.of() : this.cidrBlockSets;
    }
    public List<GetVpcPeeringConnectionFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    public Optional<String> peerCidrBlock() {
        return Optional.ofNullable(this.peerCidrBlock);
    }
    /**
     * @return List of objects with CIDR blocks of the accepter VPC.
     * 
     */
    public List<GetVpcPeeringConnectionPeerCidrBlockSet> peerCidrBlockSets() {
        return this.peerCidrBlockSets == null ? List.of() : this.peerCidrBlockSets;
    }
    public Optional<String> peerOwnerId() {
        return Optional.ofNullable(this.peerOwnerId);
    }
    public Optional<String> peerRegion() {
        return Optional.ofNullable(this.peerRegion);
    }
    public Optional<String> peerVpcId() {
        return Optional.ofNullable(this.peerVpcId);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
     * 
     */
    public Map<String,Boolean> requester() {
        return this.requester == null ? Map.of() : this.requester;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcPeeringConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Boolean> accepter;
        private @Nullable String cidrBlock;
        private @Nullable List<GetVpcPeeringConnectionCidrBlockSet> cidrBlockSets;
        private @Nullable List<GetVpcPeeringConnectionFilter> filters;
        private @Nullable String id;
        private @Nullable String ownerId;
        private @Nullable String peerCidrBlock;
        private @Nullable List<GetVpcPeeringConnectionPeerCidrBlockSet> peerCidrBlockSets;
        private @Nullable String peerOwnerId;
        private @Nullable String peerRegion;
        private @Nullable String peerVpcId;
        private @Nullable String region;
        private @Nullable Map<String,Boolean> requester;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(GetVpcPeeringConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accepter = defaults.accepter;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.cidrBlockSets = defaults.cidrBlockSets;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ownerId = defaults.ownerId;
    	      this.peerCidrBlock = defaults.peerCidrBlock;
    	      this.peerCidrBlockSets = defaults.peerCidrBlockSets;
    	      this.peerOwnerId = defaults.peerOwnerId;
    	      this.peerRegion = defaults.peerRegion;
    	      this.peerVpcId = defaults.peerVpcId;
    	      this.region = defaults.region;
    	      this.requester = defaults.requester;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder accepter(@Nullable Map<String,Boolean> accepter) {
            this.accepter = accepter;
            return this;
        }
        @CustomType.Setter
        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder cidrBlockSets(@Nullable List<GetVpcPeeringConnectionCidrBlockSet> cidrBlockSets) {
            this.cidrBlockSets = cidrBlockSets;
            return this;
        }
        public Builder cidrBlockSets(GetVpcPeeringConnectionCidrBlockSet... cidrBlockSets) {
            return cidrBlockSets(List.of(cidrBlockSets));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVpcPeeringConnectionFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVpcPeeringConnectionFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder peerCidrBlock(@Nullable String peerCidrBlock) {
            this.peerCidrBlock = peerCidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder peerCidrBlockSets(@Nullable List<GetVpcPeeringConnectionPeerCidrBlockSet> peerCidrBlockSets) {
            this.peerCidrBlockSets = peerCidrBlockSets;
            return this;
        }
        public Builder peerCidrBlockSets(GetVpcPeeringConnectionPeerCidrBlockSet... peerCidrBlockSets) {
            return peerCidrBlockSets(List.of(peerCidrBlockSets));
        }
        @CustomType.Setter
        public Builder peerOwnerId(@Nullable String peerOwnerId) {
            this.peerOwnerId = peerOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder peerRegion(@Nullable String peerRegion) {
            this.peerRegion = peerRegion;
            return this;
        }
        @CustomType.Setter
        public Builder peerVpcId(@Nullable String peerVpcId) {
            this.peerVpcId = peerVpcId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder requester(@Nullable Map<String,Boolean> requester) {
            this.requester = requester;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public GetVpcPeeringConnectionResult build() {
            final var o = new GetVpcPeeringConnectionResult();
            o.accepter = accepter;
            o.cidrBlock = cidrBlock;
            o.cidrBlockSets = cidrBlockSets;
            o.filters = filters;
            o.id = id;
            o.ownerId = ownerId;
            o.peerCidrBlock = peerCidrBlock;
            o.peerCidrBlockSets = peerCidrBlockSets;
            o.peerOwnerId = peerOwnerId;
            o.peerRegion = peerRegion;
            o.peerVpcId = peerVpcId;
            o.region = region;
            o.requester = requester;
            o.status = status;
            o.tags = tags;
            o.vpcId = vpcId;
            return o;
        }
    }
}
