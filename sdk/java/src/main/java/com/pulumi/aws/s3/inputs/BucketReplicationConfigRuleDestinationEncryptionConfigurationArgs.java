// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs Empty = new BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs();

    /**
     * ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
     * 
     */
    @Import(name="replicaKmsKeyId", required=true)
    private Output<String> replicaKmsKeyId;

    /**
     * @return ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
     * 
     */
    public Output<String> replicaKmsKeyId() {
        return this.replicaKmsKeyId;
    }

    private BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs() {}

    private BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs(BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs $) {
        this.replicaKmsKeyId = $.replicaKmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs $;

        public Builder() {
            $ = new BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs();
        }

        public Builder(BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs defaults) {
            $ = new BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param replicaKmsKeyId ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
         * 
         * @return builder
         * 
         */
        public Builder replicaKmsKeyId(Output<String> replicaKmsKeyId) {
            $.replicaKmsKeyId = replicaKmsKeyId;
            return this;
        }

        /**
         * @param replicaKmsKeyId ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
         * 
         * @return builder
         * 
         */
        public Builder replicaKmsKeyId(String replicaKmsKeyId) {
            return replicaKmsKeyId(Output.of(replicaKmsKeyId));
        }

        public BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs build() {
            if ($.replicaKmsKeyId == null) {
                throw new MissingRequiredPropertyException("BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs", "replicaKmsKeyId");
            }
            return $;
        }
    }

}
