// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.outputs;

import com.pulumi.aws.appsync.outputs.ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelNamespaceHandlerConfigsOnSubscribeIntegration {
    /**
     * @return Unique name of the data source that has been configured on the API.
     * 
     */
    private String dataSourceName;
    /**
     * @return Configuration for a Lambda data source. See Lambda Config below.
     * 
     */
    private @Nullable ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig lambdaConfig;

    private ChannelNamespaceHandlerConfigsOnSubscribeIntegration() {}
    /**
     * @return Unique name of the data source that has been configured on the API.
     * 
     */
    public String dataSourceName() {
        return this.dataSourceName;
    }
    /**
     * @return Configuration for a Lambda data source. See Lambda Config below.
     * 
     */
    public Optional<ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig> lambdaConfig() {
        return Optional.ofNullable(this.lambdaConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelNamespaceHandlerConfigsOnSubscribeIntegration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataSourceName;
        private @Nullable ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig lambdaConfig;
        public Builder() {}
        public Builder(ChannelNamespaceHandlerConfigsOnSubscribeIntegration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceName = defaults.dataSourceName;
    	      this.lambdaConfig = defaults.lambdaConfig;
        }

        @CustomType.Setter
        public Builder dataSourceName(String dataSourceName) {
            if (dataSourceName == null) {
              throw new MissingRequiredPropertyException("ChannelNamespaceHandlerConfigsOnSubscribeIntegration", "dataSourceName");
            }
            this.dataSourceName = dataSourceName;
            return this;
        }
        @CustomType.Setter
        public Builder lambdaConfig(@Nullable ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig lambdaConfig) {

            this.lambdaConfig = lambdaConfig;
            return this;
        }
        public ChannelNamespaceHandlerConfigsOnSubscribeIntegration build() {
            final var _resultValue = new ChannelNamespaceHandlerConfigsOnSubscribeIntegration();
            _resultValue.dataSourceName = dataSourceName;
            _resultValue.lambdaConfig = lambdaConfig;
            return _resultValue;
        }
    }
}
