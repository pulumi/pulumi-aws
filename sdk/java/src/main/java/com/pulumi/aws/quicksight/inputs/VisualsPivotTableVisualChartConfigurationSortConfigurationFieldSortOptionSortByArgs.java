// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnSortArgs;
import com.pulumi.aws.quicksight.inputs.FieldSortArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs Empty = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs();

    @Import(name="column")
    private @Nullable Output<ColumnSortArgs> column;

    public Optional<Output<ColumnSortArgs>> column() {
        return Optional.ofNullable(this.column);
    }

    @Import(name="dataPath")
    private @Nullable Output<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathArgs> dataPath;

    public Optional<Output<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathArgs>> dataPath() {
        return Optional.ofNullable(this.dataPath);
    }

    @Import(name="field")
    private @Nullable Output<FieldSortArgs> field;

    public Optional<Output<FieldSortArgs>> field() {
        return Optional.ofNullable(this.field);
    }

    private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs() {}

    private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs $) {
        this.column = $.column;
        this.dataPath = $.dataPath;
        this.field = $.field;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs(Objects.requireNonNull(defaults));
        }

        public Builder column(@Nullable Output<ColumnSortArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnSortArgs column) {
            return column(Output.of(column));
        }

        public Builder dataPath(@Nullable Output<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathArgs> dataPath) {
            $.dataPath = dataPath;
            return this;
        }

        public Builder dataPath(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathArgs dataPath) {
            return dataPath(Output.of(dataPath));
        }

        public Builder field(@Nullable Output<FieldSortArgs> field) {
            $.field = field;
            return this;
        }

        public Builder field(FieldSortArgs field) {
            return field(Output.of(field));
        }

        public VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByArgs build() {
            return $;
        }
    }

}
