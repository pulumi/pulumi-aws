// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourceConfigurationResourceConfigurationDefinitionDnsResource {
    /**
     * @return The hostname of the Resource for this configuration.
     * 
     */
    private String domainName;
    /**
     * @return The IP Address type either `IPV4` or `IPV6`
     * 
     */
    private String ipAddressType;

    private ResourceConfigurationResourceConfigurationDefinitionDnsResource() {}
    /**
     * @return The hostname of the Resource for this configuration.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The IP Address type either `IPV4` or `IPV6`
     * 
     */
    public String ipAddressType() {
        return this.ipAddressType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceConfigurationResourceConfigurationDefinitionDnsResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String ipAddressType;
        public Builder() {}
        public Builder(ResourceConfigurationResourceConfigurationDefinitionDnsResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.ipAddressType = defaults.ipAddressType;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("ResourceConfigurationResourceConfigurationDefinitionDnsResource", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressType(String ipAddressType) {
            if (ipAddressType == null) {
              throw new MissingRequiredPropertyException("ResourceConfigurationResourceConfigurationDefinitionDnsResource", "ipAddressType");
            }
            this.ipAddressType = ipAddressType;
            return this;
        }
        public ResourceConfigurationResourceConfigurationDefinitionDnsResource build() {
            final var _resultValue = new ResourceConfigurationResourceConfigurationDefinitionDnsResource();
            _resultValue.domainName = domainName;
            _resultValue.ipAddressType = ipAddressType;
            return _resultValue;
        }
    }
}
