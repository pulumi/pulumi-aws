// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsEventSourceParameters;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LifecyclePolicyPolicyDetailsEventSource {
    /**
     * @return Information about the event. See the `parameters` configuration block.
     * 
     */
    private LifecyclePolicyPolicyDetailsEventSourceParameters parameters;
    /**
     * @return The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are `MANAGED_CWE`.
     * 
     */
    private String type;

    private LifecyclePolicyPolicyDetailsEventSource() {}
    /**
     * @return Information about the event. See the `parameters` configuration block.
     * 
     */
    public LifecyclePolicyPolicyDetailsEventSourceParameters parameters() {
        return this.parameters;
    }
    /**
     * @return The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are `MANAGED_CWE`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsEventSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private LifecyclePolicyPolicyDetailsEventSourceParameters parameters;
        private String type;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsEventSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameters = defaults.parameters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder parameters(LifecyclePolicyPolicyDetailsEventSourceParameters parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsEventSource", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsEventSource", "type");
            }
            this.type = type;
            return this;
        }
        public LifecyclePolicyPolicyDetailsEventSource build() {
            final var _resultValue = new LifecyclePolicyPolicyDetailsEventSource();
            _resultValue.parameters = parameters;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
