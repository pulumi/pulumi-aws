// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.inputs;

import com.pulumi.aws.verifiedpermissions.inputs.PolicyDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyState Empty = new PolicyState();

    /**
     * The date the policy was created.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return The date the policy was created.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * The definition of the policy. See Definition below.
     * 
     */
    @Import(name="definition")
    private @Nullable Output<PolicyDefinitionArgs> definition;

    /**
     * @return The definition of the policy. See Definition below.
     * 
     */
    public Optional<Output<PolicyDefinitionArgs>> definition() {
        return Optional.ofNullable(this.definition);
    }

    /**
     * The Policy ID of the policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The Policy ID of the policy.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * The Policy Store ID of the policy store.
     * 
     */
    @Import(name="policyStoreId")
    private @Nullable Output<String> policyStoreId;

    /**
     * @return The Policy Store ID of the policy store.
     * 
     */
    public Optional<Output<String>> policyStoreId() {
        return Optional.ofNullable(this.policyStoreId);
    }

    private PolicyState() {}

    private PolicyState(PolicyState $) {
        this.createdDate = $.createdDate;
        this.definition = $.definition;
        this.policyId = $.policyId;
        this.policyStoreId = $.policyStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyState $;

        public Builder() {
            $ = new PolicyState();
        }

        public Builder(PolicyState defaults) {
            $ = new PolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdDate The date the policy was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate The date the policy was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param definition The definition of the policy. See Definition below.
         * 
         * @return builder
         * 
         */
        public Builder definition(@Nullable Output<PolicyDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition The definition of the policy. See Definition below.
         * 
         * @return builder
         * 
         */
        public Builder definition(PolicyDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param policyId The Policy ID of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The Policy ID of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param policyStoreId The Policy Store ID of the policy store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(@Nullable Output<String> policyStoreId) {
            $.policyStoreId = policyStoreId;
            return this;
        }

        /**
         * @param policyStoreId The Policy Store ID of the policy store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(String policyStoreId) {
            return policyStoreId(Output.of(policyStoreId));
        }

        public PolicyState build() {
            return $;
        }
    }

}
