// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentAgentPromptOverrideConfigurationPromptConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AgentAgentPromptOverrideConfiguration {
    /**
     * @return ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the `prompt_configurations` block must contain a `parser_mode` value that is set to `OVERRIDDEN`.
     * 
     */
    private String overrideLambda;
    /**
     * @return Configurations to override a prompt template in one part of an agent sequence. See `prompt_configurations` block for details.
     * 
     */
    private List<AgentAgentPromptOverrideConfigurationPromptConfiguration> promptConfigurations;

    private AgentAgentPromptOverrideConfiguration() {}
    /**
     * @return ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the `prompt_configurations` block must contain a `parser_mode` value that is set to `OVERRIDDEN`.
     * 
     */
    public String overrideLambda() {
        return this.overrideLambda;
    }
    /**
     * @return Configurations to override a prompt template in one part of an agent sequence. See `prompt_configurations` block for details.
     * 
     */
    public List<AgentAgentPromptOverrideConfigurationPromptConfiguration> promptConfigurations() {
        return this.promptConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentAgentPromptOverrideConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String overrideLambda;
        private List<AgentAgentPromptOverrideConfigurationPromptConfiguration> promptConfigurations;
        public Builder() {}
        public Builder(AgentAgentPromptOverrideConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.overrideLambda = defaults.overrideLambda;
    	      this.promptConfigurations = defaults.promptConfigurations;
        }

        @CustomType.Setter
        public Builder overrideLambda(String overrideLambda) {
            if (overrideLambda == null) {
              throw new MissingRequiredPropertyException("AgentAgentPromptOverrideConfiguration", "overrideLambda");
            }
            this.overrideLambda = overrideLambda;
            return this;
        }
        @CustomType.Setter
        public Builder promptConfigurations(List<AgentAgentPromptOverrideConfigurationPromptConfiguration> promptConfigurations) {
            if (promptConfigurations == null) {
              throw new MissingRequiredPropertyException("AgentAgentPromptOverrideConfiguration", "promptConfigurations");
            }
            this.promptConfigurations = promptConfigurations;
            return this;
        }
        public Builder promptConfigurations(AgentAgentPromptOverrideConfigurationPromptConfiguration... promptConfigurations) {
            return promptConfigurations(List.of(promptConfigurations));
        }
        public AgentAgentPromptOverrideConfiguration build() {
            final var _resultValue = new AgentAgentPromptOverrideConfiguration();
            _resultValue.overrideLambda = overrideLambda;
            _resultValue.promptConfigurations = promptConfigurations;
            return _resultValue;
        }
    }
}
