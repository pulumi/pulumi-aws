// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup;

import com.pulumi.aws.backup.inputs.ReportPlanReportDeliveryChannelArgs;
import com.pulumi.aws.backup.inputs.ReportPlanReportSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReportPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReportPlanArgs Empty = new ReportPlanArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="reportDeliveryChannel", required=true)
    private Output<ReportPlanReportDeliveryChannelArgs> reportDeliveryChannel;

    public Output<ReportPlanReportDeliveryChannelArgs> reportDeliveryChannel() {
        return this.reportDeliveryChannel;
    }

    @Import(name="reportSetting", required=true)
    private Output<ReportPlanReportSettingArgs> reportSetting;

    public Output<ReportPlanReportSettingArgs> reportSetting() {
        return this.reportSetting;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ReportPlanArgs() {}

    private ReportPlanArgs(ReportPlanArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.reportDeliveryChannel = $.reportDeliveryChannel;
        this.reportSetting = $.reportSetting;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportPlanArgs $;

        public Builder() {
            $ = new ReportPlanArgs();
        }

        public Builder(ReportPlanArgs defaults) {
            $ = new ReportPlanArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder reportDeliveryChannel(Output<ReportPlanReportDeliveryChannelArgs> reportDeliveryChannel) {
            $.reportDeliveryChannel = reportDeliveryChannel;
            return this;
        }

        public Builder reportDeliveryChannel(ReportPlanReportDeliveryChannelArgs reportDeliveryChannel) {
            return reportDeliveryChannel(Output.of(reportDeliveryChannel));
        }

        public Builder reportSetting(Output<ReportPlanReportSettingArgs> reportSetting) {
            $.reportSetting = reportSetting;
            return this;
        }

        public Builder reportSetting(ReportPlanReportSettingArgs reportSetting) {
            return reportSetting(Output.of(reportSetting));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ReportPlanArgs build() {
            $.reportDeliveryChannel = Objects.requireNonNull($.reportDeliveryChannel, "expected parameter 'reportDeliveryChannel' to be non-null");
            $.reportSetting = Objects.requireNonNull($.reportSetting, "expected parameter 'reportSetting' to be non-null");
            return $;
        }
    }

}
