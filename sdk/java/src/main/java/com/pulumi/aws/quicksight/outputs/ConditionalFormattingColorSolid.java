// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConditionalFormattingColorSolid {
    private @Nullable String color;
    private String expression;

    private ConditionalFormattingColorSolid() {}
    public Optional<String> color() {
        return Optional.ofNullable(this.color);
    }
    public String expression() {
        return this.expression;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalFormattingColorSolid defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String color;
        private String expression;
        public Builder() {}
        public Builder(ConditionalFormattingColorSolid defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.expression = defaults.expression;
        }

        @CustomType.Setter
        public Builder color(@Nullable String color) {

            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            if (expression == null) {
              throw new MissingRequiredPropertyException("ConditionalFormattingColorSolid", "expression");
            }
            this.expression = expression;
            return this;
        }
        public ConditionalFormattingColorSolid build() {
            final var _resultValue = new ConditionalFormattingColorSolid();
            _resultValue.color = color;
            _resultValue.expression = expression;
            return _resultValue;
        }
    }
}
