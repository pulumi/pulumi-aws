// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.DefaultNetworkAclEgressArgs;
import com.pulumi.aws.ec2.inputs.DefaultNetworkAclIngressArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultNetworkAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultNetworkAclArgs Empty = new DefaultNetworkAclArgs();

    @Import(name="defaultNetworkAclId", required=true)
    private Output<String> defaultNetworkAclId;

    public Output<String> defaultNetworkAclId() {
        return this.defaultNetworkAclId;
    }

    @Import(name="egress")
    private @Nullable Output<List<DefaultNetworkAclEgressArgs>> egress;

    public Optional<Output<List<DefaultNetworkAclEgressArgs>>> egress() {
        return Optional.ofNullable(this.egress);
    }

    @Import(name="ingress")
    private @Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress;

    public Optional<Output<List<DefaultNetworkAclIngressArgs>>> ingress() {
        return Optional.ofNullable(this.ingress);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DefaultNetworkAclArgs() {}

    private DefaultNetworkAclArgs(DefaultNetworkAclArgs $) {
        this.defaultNetworkAclId = $.defaultNetworkAclId;
        this.egress = $.egress;
        this.ingress = $.ingress;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultNetworkAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultNetworkAclArgs $;

        public Builder() {
            $ = new DefaultNetworkAclArgs();
        }

        public Builder(DefaultNetworkAclArgs defaults) {
            $ = new DefaultNetworkAclArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultNetworkAclId(Output<String> defaultNetworkAclId) {
            $.defaultNetworkAclId = defaultNetworkAclId;
            return this;
        }

        public Builder defaultNetworkAclId(String defaultNetworkAclId) {
            return defaultNetworkAclId(Output.of(defaultNetworkAclId));
        }

        public Builder egress(@Nullable Output<List<DefaultNetworkAclEgressArgs>> egress) {
            $.egress = egress;
            return this;
        }

        public Builder egress(List<DefaultNetworkAclEgressArgs> egress) {
            return egress(Output.of(egress));
        }

        public Builder egress(DefaultNetworkAclEgressArgs... egress) {
            return egress(List.of(egress));
        }

        public Builder ingress(@Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress) {
            $.ingress = ingress;
            return this;
        }

        public Builder ingress(List<DefaultNetworkAclIngressArgs> ingress) {
            return ingress(Output.of(ingress));
        }

        public Builder ingress(DefaultNetworkAclIngressArgs... ingress) {
            return ingress(List.of(ingress));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DefaultNetworkAclArgs build() {
            $.defaultNetworkAclId = Objects.requireNonNull($.defaultNetworkAclId, "expected parameter 'defaultNetworkAclId' to be non-null");
            return $;
        }
    }

}
