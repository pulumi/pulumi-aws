// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVpcConnectionResult {
    private String arn;
    /**
     * @return The authentication type for the client VPC Connection.
     * 
     */
    private String authentication;
    /**
     * @return The list of subnets in the client VPC.
     * 
     */
    private List<String> clientSubnets;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The security groups attached to the ENIs for the broker nodes.
     * 
     */
    private List<String> securityGroups;
    /**
     * @return Map of key-value pairs assigned to the VPC Connection.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    private String targetClusterArn;
    /**
     * @return The VPC ID of the remote client.
     * 
     */
    private String vpcId;

    private GetVpcConnectionResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return The authentication type for the client VPC Connection.
     * 
     */
    public String authentication() {
        return this.authentication;
    }
    /**
     * @return The list of subnets in the client VPC.
     * 
     */
    public List<String> clientSubnets() {
        return this.clientSubnets;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The security groups attached to the ENIs for the broker nodes.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups;
    }
    /**
     * @return Map of key-value pairs assigned to the VPC Connection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    public String targetClusterArn() {
        return this.targetClusterArn;
    }
    /**
     * @return The VPC ID of the remote client.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String authentication;
        private List<String> clientSubnets;
        private String id;
        private List<String> securityGroups;
        private Map<String,String> tags;
        private String targetClusterArn;
        private String vpcId;
        public Builder() {}
        public Builder(GetVpcConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.authentication = defaults.authentication;
    	      this.clientSubnets = defaults.clientSubnets;
    	      this.id = defaults.id;
    	      this.securityGroups = defaults.securityGroups;
    	      this.tags = defaults.tags;
    	      this.targetClusterArn = defaults.targetClusterArn;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder authentication(String authentication) {
            this.authentication = Objects.requireNonNull(authentication);
            return this;
        }
        @CustomType.Setter
        public Builder clientSubnets(List<String> clientSubnets) {
            this.clientSubnets = Objects.requireNonNull(clientSubnets);
            return this;
        }
        public Builder clientSubnets(String... clientSubnets) {
            return clientSubnets(List.of(clientSubnets));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder targetClusterArn(String targetClusterArn) {
            this.targetClusterArn = Objects.requireNonNull(targetClusterArn);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public GetVpcConnectionResult build() {
            final var o = new GetVpcConnectionResult();
            o.arn = arn;
            o.authentication = authentication;
            o.clientSubnets = clientSubnets;
            o.id = id;
            o.securityGroups = securityGroups;
            o.tags = tags;
            o.targetClusterArn = targetClusterArn;
            o.vpcId = vpcId;
            return o;
        }
    }
}
