// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutingProfileQueueConfigsAssociatedArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutingProfileQueueConfigsAssociatedArgs Empty = new RoutingProfileQueueConfigsAssociatedArgs();

    /**
     * Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
     * 
     */
    @Import(name="channel")
    private @Nullable Output<String> channel;

    /**
     * @return Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
     * 
     */
    public Optional<Output<String>> channel() {
        return Optional.ofNullable(this.channel);
    }

    /**
     * Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     * 
     */
    @Import(name="delay")
    private @Nullable Output<Integer> delay;

    /**
     * @return Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     * 
     */
    public Optional<Output<Integer>> delay() {
        return Optional.ofNullable(this.delay);
    }

    /**
     * Specifies the order in which contacts are to be handled for the queue.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Specifies the order in which contacts are to be handled for the queue.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * ARN for the queue.
     * 
     */
    @Import(name="queueArn")
    private @Nullable Output<String> queueArn;

    /**
     * @return ARN for the queue.
     * 
     */
    public Optional<Output<String>> queueArn() {
        return Optional.ofNullable(this.queueArn);
    }

    /**
     * Specifies the identifier for the queue.
     * 
     */
    @Import(name="queueId")
    private @Nullable Output<String> queueId;

    /**
     * @return Specifies the identifier for the queue.
     * 
     */
    public Optional<Output<String>> queueId() {
        return Optional.ofNullable(this.queueId);
    }

    /**
     * Name for the queue.
     * 
     */
    @Import(name="queueName")
    private @Nullable Output<String> queueName;

    /**
     * @return Name for the queue.
     * 
     */
    public Optional<Output<String>> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    private RoutingProfileQueueConfigsAssociatedArgs() {}

    private RoutingProfileQueueConfigsAssociatedArgs(RoutingProfileQueueConfigsAssociatedArgs $) {
        this.channel = $.channel;
        this.delay = $.delay;
        this.priority = $.priority;
        this.queueArn = $.queueArn;
        this.queueId = $.queueId;
        this.queueName = $.queueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingProfileQueueConfigsAssociatedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingProfileQueueConfigsAssociatedArgs $;

        public Builder() {
            $ = new RoutingProfileQueueConfigsAssociatedArgs();
        }

        public Builder(RoutingProfileQueueConfigsAssociatedArgs defaults) {
            $ = new RoutingProfileQueueConfigsAssociatedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channel Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
         * 
         * @return builder
         * 
         */
        public Builder channel(@Nullable Output<String> channel) {
            $.channel = channel;
            return this;
        }

        /**
         * @param channel Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
         * 
         * @return builder
         * 
         */
        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        /**
         * @param delay Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
         * 
         * @return builder
         * 
         */
        public Builder delay(@Nullable Output<Integer> delay) {
            $.delay = delay;
            return this;
        }

        /**
         * @param delay Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
         * 
         * @return builder
         * 
         */
        public Builder delay(Integer delay) {
            return delay(Output.of(delay));
        }

        /**
         * @param priority Specifies the order in which contacts are to be handled for the queue.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Specifies the order in which contacts are to be handled for the queue.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param queueArn ARN for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueArn(@Nullable Output<String> queueArn) {
            $.queueArn = queueArn;
            return this;
        }

        /**
         * @param queueArn ARN for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueArn(String queueArn) {
            return queueArn(Output.of(queueArn));
        }

        /**
         * @param queueId Specifies the identifier for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueId(@Nullable Output<String> queueId) {
            $.queueId = queueId;
            return this;
        }

        /**
         * @param queueId Specifies the identifier for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueId(String queueId) {
            return queueId(Output.of(queueId));
        }

        /**
         * @param queueName Name for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueName(@Nullable Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        /**
         * @param queueName Name for the queue.
         * 
         * @return builder
         * 
         */
        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        public RoutingProfileQueueConfigsAssociatedArgs build() {
            return $;
        }
    }

}
