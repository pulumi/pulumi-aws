// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone;

import com.pulumi.aws.datazone.inputs.AssetTypeFormsInputArgs;
import com.pulumi.aws.datazone.inputs.AssetTypeTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetTypeArgs Empty = new AssetTypeArgs();

    /**
     * The description of the custom asset type.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the custom asset type.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     * 
     */
    @Import(name="domainIdentifier", required=true)
    private Output<String> domainIdentifier;

    /**
     * @return The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     * 
     */
    public Output<String> domainIdentifier() {
        return this.domainIdentifier;
    }

    /**
     * The metadata forms that are to be attached to the custom asset type.
     * 
     */
    @Import(name="formsInputs")
    private @Nullable Output<List<AssetTypeFormsInputArgs>> formsInputs;

    /**
     * @return The metadata forms that are to be attached to the custom asset type.
     * 
     */
    public Optional<Output<List<AssetTypeFormsInputArgs>>> formsInputs() {
        return Optional.ofNullable(this.formsInputs);
    }

    /**
     * The name of the custom asset type.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the custom asset type.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique identifier of the Amazon DataZone project that owns the custom asset type.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="owningProjectIdentifier", required=true)
    private Output<String> owningProjectIdentifier;

    /**
     * @return The unique identifier of the Amazon DataZone project that owns the custom asset type.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> owningProjectIdentifier() {
        return this.owningProjectIdentifier;
    }

    @Import(name="timeouts")
    private @Nullable Output<AssetTypeTimeoutsArgs> timeouts;

    public Optional<Output<AssetTypeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AssetTypeArgs() {}

    private AssetTypeArgs(AssetTypeArgs $) {
        this.description = $.description;
        this.domainIdentifier = $.domainIdentifier;
        this.formsInputs = $.formsInputs;
        this.name = $.name;
        this.owningProjectIdentifier = $.owningProjectIdentifier;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetTypeArgs $;

        public Builder() {
            $ = new AssetTypeArgs();
        }

        public Builder(AssetTypeArgs defaults) {
            $ = new AssetTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domainIdentifier The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(Output<String> domainIdentifier) {
            $.domainIdentifier = domainIdentifier;
            return this;
        }

        /**
         * @param domainIdentifier The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(String domainIdentifier) {
            return domainIdentifier(Output.of(domainIdentifier));
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(@Nullable Output<List<AssetTypeFormsInputArgs>> formsInputs) {
            $.formsInputs = formsInputs;
            return this;
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(List<AssetTypeFormsInputArgs> formsInputs) {
            return formsInputs(Output.of(formsInputs));
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(AssetTypeFormsInputArgs... formsInputs) {
            return formsInputs(List.of(formsInputs));
        }

        /**
         * @param name The name of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param owningProjectIdentifier The unique identifier of the Amazon DataZone project that owns the custom asset type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder owningProjectIdentifier(Output<String> owningProjectIdentifier) {
            $.owningProjectIdentifier = owningProjectIdentifier;
            return this;
        }

        /**
         * @param owningProjectIdentifier The unique identifier of the Amazon DataZone project that owns the custom asset type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder owningProjectIdentifier(String owningProjectIdentifier) {
            return owningProjectIdentifier(Output.of(owningProjectIdentifier));
        }

        public Builder timeouts(@Nullable Output<AssetTypeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AssetTypeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AssetTypeArgs build() {
            if ($.domainIdentifier == null) {
                throw new MissingRequiredPropertyException("AssetTypeArgs", "domainIdentifier");
            }
            if ($.owningProjectIdentifier == null) {
                throw new MissingRequiredPropertyException("AssetTypeArgs", "owningProjectIdentifier");
            }
            return $;
        }
    }

}
