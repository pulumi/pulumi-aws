// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetScalingConfigurationTargetTrackingScalingConfig {
    /**
     * @return The metric type to determine auto-scaling.
     * 
     */
    private String metricType;
    /**
     * @return The value of metric_type when to start scaling.
     * 
     */
    private Double targetValue;

    private GetFleetScalingConfigurationTargetTrackingScalingConfig() {}
    /**
     * @return The metric type to determine auto-scaling.
     * 
     */
    public String metricType() {
        return this.metricType;
    }
    /**
     * @return The value of metric_type when to start scaling.
     * 
     */
    public Double targetValue() {
        return this.targetValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetScalingConfigurationTargetTrackingScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String metricType;
        private Double targetValue;
        public Builder() {}
        public Builder(GetFleetScalingConfigurationTargetTrackingScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricType = defaults.metricType;
    	      this.targetValue = defaults.targetValue;
        }

        @CustomType.Setter
        public Builder metricType(String metricType) {
            if (metricType == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfigurationTargetTrackingScalingConfig", "metricType");
            }
            this.metricType = metricType;
            return this;
        }
        @CustomType.Setter
        public Builder targetValue(Double targetValue) {
            if (targetValue == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfigurationTargetTrackingScalingConfig", "targetValue");
            }
            this.targetValue = targetValue;
            return this;
        }
        public GetFleetScalingConfigurationTargetTrackingScalingConfig build() {
            final var _resultValue = new GetFleetScalingConfigurationTargetTrackingScalingConfig();
            _resultValue.metricType = metricType;
            _resultValue.targetValue = targetValue;
            return _resultValue;
        }
    }
}
