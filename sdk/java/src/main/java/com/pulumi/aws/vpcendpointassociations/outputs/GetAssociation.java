// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpcendpointassociations.outputs;

import com.pulumi.aws.vpcendpointassociations.outputs.GetAssociationDnsEntry;
import com.pulumi.aws.vpcendpointassociations.outputs.GetAssociationPrivateDnsEntry;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAssociation {
    /**
     * @return Accessibility of the resource.
     * 
     */
    private String associatedResourceAccessibility;
    /**
     * @return ARN of the resource for this association.
     * 
     */
    private String associatedResourceArn;
    /**
     * @return DNS entries for the Association. DNS entry blocks are documented below.
     * 
     */
    private List<GetAssociationDnsEntry> dnsEntries;
    private String id;
    /**
     * @return DNS entries for the Association. Private DNS entry blocks are documented below.
     * 
     */
    private List<GetAssociationPrivateDnsEntry> privateDnsEntries;
    /**
     * @return ARN of the Resource Group if the Resource is a member of a group.
     * 
     */
    private String resourceConfigurationGroupArn;
    /**
     * @return Service Network ARN. Applicable for endpoints of type `ServiceNetwork`.
     * 
     */
    private String serviceNetworkArn;
    /**
     * @return Service Network Name. Applicable for endpoints of type `ServiceNetwork`.
     * 
     */
    private String serviceNetworkName;
    /**
     * @return Tags of the association.
     * 
     */
    private Map<String,String> tags;

    private GetAssociation() {}
    /**
     * @return Accessibility of the resource.
     * 
     */
    public String associatedResourceAccessibility() {
        return this.associatedResourceAccessibility;
    }
    /**
     * @return ARN of the resource for this association.
     * 
     */
    public String associatedResourceArn() {
        return this.associatedResourceArn;
    }
    /**
     * @return DNS entries for the Association. DNS entry blocks are documented below.
     * 
     */
    public List<GetAssociationDnsEntry> dnsEntries() {
        return this.dnsEntries;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return DNS entries for the Association. Private DNS entry blocks are documented below.
     * 
     */
    public List<GetAssociationPrivateDnsEntry> privateDnsEntries() {
        return this.privateDnsEntries;
    }
    /**
     * @return ARN of the Resource Group if the Resource is a member of a group.
     * 
     */
    public String resourceConfigurationGroupArn() {
        return this.resourceConfigurationGroupArn;
    }
    /**
     * @return Service Network ARN. Applicable for endpoints of type `ServiceNetwork`.
     * 
     */
    public String serviceNetworkArn() {
        return this.serviceNetworkArn;
    }
    /**
     * @return Service Network Name. Applicable for endpoints of type `ServiceNetwork`.
     * 
     */
    public String serviceNetworkName() {
        return this.serviceNetworkName;
    }
    /**
     * @return Tags of the association.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssociation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String associatedResourceAccessibility;
        private String associatedResourceArn;
        private List<GetAssociationDnsEntry> dnsEntries;
        private String id;
        private List<GetAssociationPrivateDnsEntry> privateDnsEntries;
        private String resourceConfigurationGroupArn;
        private String serviceNetworkArn;
        private String serviceNetworkName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedResourceAccessibility = defaults.associatedResourceAccessibility;
    	      this.associatedResourceArn = defaults.associatedResourceArn;
    	      this.dnsEntries = defaults.dnsEntries;
    	      this.id = defaults.id;
    	      this.privateDnsEntries = defaults.privateDnsEntries;
    	      this.resourceConfigurationGroupArn = defaults.resourceConfigurationGroupArn;
    	      this.serviceNetworkArn = defaults.serviceNetworkArn;
    	      this.serviceNetworkName = defaults.serviceNetworkName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder associatedResourceAccessibility(String associatedResourceAccessibility) {
            if (associatedResourceAccessibility == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "associatedResourceAccessibility");
            }
            this.associatedResourceAccessibility = associatedResourceAccessibility;
            return this;
        }
        @CustomType.Setter
        public Builder associatedResourceArn(String associatedResourceArn) {
            if (associatedResourceArn == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "associatedResourceArn");
            }
            this.associatedResourceArn = associatedResourceArn;
            return this;
        }
        @CustomType.Setter
        public Builder dnsEntries(List<GetAssociationDnsEntry> dnsEntries) {
            if (dnsEntries == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "dnsEntries");
            }
            this.dnsEntries = dnsEntries;
            return this;
        }
        public Builder dnsEntries(GetAssociationDnsEntry... dnsEntries) {
            return dnsEntries(List.of(dnsEntries));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder privateDnsEntries(List<GetAssociationPrivateDnsEntry> privateDnsEntries) {
            if (privateDnsEntries == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "privateDnsEntries");
            }
            this.privateDnsEntries = privateDnsEntries;
            return this;
        }
        public Builder privateDnsEntries(GetAssociationPrivateDnsEntry... privateDnsEntries) {
            return privateDnsEntries(List.of(privateDnsEntries));
        }
        @CustomType.Setter
        public Builder resourceConfigurationGroupArn(String resourceConfigurationGroupArn) {
            if (resourceConfigurationGroupArn == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "resourceConfigurationGroupArn");
            }
            this.resourceConfigurationGroupArn = resourceConfigurationGroupArn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNetworkArn(String serviceNetworkArn) {
            if (serviceNetworkArn == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "serviceNetworkArn");
            }
            this.serviceNetworkArn = serviceNetworkArn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNetworkName(String serviceNetworkName) {
            if (serviceNetworkName == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "serviceNetworkName");
            }
            this.serviceNetworkName = serviceNetworkName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAssociation", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetAssociation build() {
            final var _resultValue = new GetAssociation();
            _resultValue.associatedResourceAccessibility = associatedResourceAccessibility;
            _resultValue.associatedResourceArn = associatedResourceArn;
            _resultValue.dnsEntries = dnsEntries;
            _resultValue.id = id;
            _resultValue.privateDnsEntries = privateDnsEntries;
            _resultValue.resourceConfigurationGroupArn = resourceConfigurationGroupArn;
            _resultValue.serviceNetworkArn = serviceNetworkArn;
            _resultValue.serviceNetworkName = serviceNetworkName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
