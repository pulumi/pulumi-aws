// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProvisionedProductStackSetProvisioningPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProvisionedProductStackSetProvisioningPreferencesArgs Empty = new ProvisionedProductStackSetProvisioningPreferencesArgs();

    @Import(name="accounts")
    private @Nullable Output<List<String>> accounts;

    public Optional<Output<List<String>>> accounts() {
        return Optional.ofNullable(this.accounts);
    }

    @Import(name="failureToleranceCount")
    private @Nullable Output<Integer> failureToleranceCount;

    public Optional<Output<Integer>> failureToleranceCount() {
        return Optional.ofNullable(this.failureToleranceCount);
    }

    @Import(name="failureTolerancePercentage")
    private @Nullable Output<Integer> failureTolerancePercentage;

    public Optional<Output<Integer>> failureTolerancePercentage() {
        return Optional.ofNullable(this.failureTolerancePercentage);
    }

    @Import(name="maxConcurrencyCount")
    private @Nullable Output<Integer> maxConcurrencyCount;

    public Optional<Output<Integer>> maxConcurrencyCount() {
        return Optional.ofNullable(this.maxConcurrencyCount);
    }

    @Import(name="maxConcurrencyPercentage")
    private @Nullable Output<Integer> maxConcurrencyPercentage;

    public Optional<Output<Integer>> maxConcurrencyPercentage() {
        return Optional.ofNullable(this.maxConcurrencyPercentage);
    }

    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    private ProvisionedProductStackSetProvisioningPreferencesArgs() {}

    private ProvisionedProductStackSetProvisioningPreferencesArgs(ProvisionedProductStackSetProvisioningPreferencesArgs $) {
        this.accounts = $.accounts;
        this.failureToleranceCount = $.failureToleranceCount;
        this.failureTolerancePercentage = $.failureTolerancePercentage;
        this.maxConcurrencyCount = $.maxConcurrencyCount;
        this.maxConcurrencyPercentage = $.maxConcurrencyPercentage;
        this.regions = $.regions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisionedProductStackSetProvisioningPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisionedProductStackSetProvisioningPreferencesArgs $;

        public Builder() {
            $ = new ProvisionedProductStackSetProvisioningPreferencesArgs();
        }

        public Builder(ProvisionedProductStackSetProvisioningPreferencesArgs defaults) {
            $ = new ProvisionedProductStackSetProvisioningPreferencesArgs(Objects.requireNonNull(defaults));
        }

        public Builder accounts(@Nullable Output<List<String>> accounts) {
            $.accounts = accounts;
            return this;
        }

        public Builder accounts(List<String> accounts) {
            return accounts(Output.of(accounts));
        }

        public Builder accounts(String... accounts) {
            return accounts(List.of(accounts));
        }

        public Builder failureToleranceCount(@Nullable Output<Integer> failureToleranceCount) {
            $.failureToleranceCount = failureToleranceCount;
            return this;
        }

        public Builder failureToleranceCount(Integer failureToleranceCount) {
            return failureToleranceCount(Output.of(failureToleranceCount));
        }

        public Builder failureTolerancePercentage(@Nullable Output<Integer> failureTolerancePercentage) {
            $.failureTolerancePercentage = failureTolerancePercentage;
            return this;
        }

        public Builder failureTolerancePercentage(Integer failureTolerancePercentage) {
            return failureTolerancePercentage(Output.of(failureTolerancePercentage));
        }

        public Builder maxConcurrencyCount(@Nullable Output<Integer> maxConcurrencyCount) {
            $.maxConcurrencyCount = maxConcurrencyCount;
            return this;
        }

        public Builder maxConcurrencyCount(Integer maxConcurrencyCount) {
            return maxConcurrencyCount(Output.of(maxConcurrencyCount));
        }

        public Builder maxConcurrencyPercentage(@Nullable Output<Integer> maxConcurrencyPercentage) {
            $.maxConcurrencyPercentage = maxConcurrencyPercentage;
            return this;
        }

        public Builder maxConcurrencyPercentage(Integer maxConcurrencyPercentage) {
            return maxConcurrencyPercentage(Output.of(maxConcurrencyPercentage));
        }

        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        public ProvisionedProductStackSetProvisioningPreferencesArgs build() {
            return $;
        }
    }

}
