// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs;
import com.pulumi.aws.odb.inputs.CloudAutonomousVmClusterMaintenanceWindowMonthArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudAutonomousVmClusterMaintenanceWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudAutonomousVmClusterMaintenanceWindowArgs Empty = new CloudAutonomousVmClusterMaintenanceWindowArgs();

    /**
     * The days of the week when maintenance can be performed.
     * 
     */
    @Import(name="daysOfWeeks")
    private @Nullable Output<List<CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs>> daysOfWeeks;

    /**
     * @return The days of the week when maintenance can be performed.
     * 
     */
    public Optional<Output<List<CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs>>> daysOfWeeks() {
        return Optional.ofNullable(this.daysOfWeeks);
    }

    /**
     * The hours of the day when maintenance can be performed.
     * 
     */
    @Import(name="hoursOfDays")
    private @Nullable Output<List<Integer>> hoursOfDays;

    /**
     * @return The hours of the day when maintenance can be performed.
     * 
     */
    public Optional<Output<List<Integer>>> hoursOfDays() {
        return Optional.ofNullable(this.hoursOfDays);
    }

    /**
     * The lead time in weeks before the maintenance window.
     * 
     */
    @Import(name="leadTimeInWeeks")
    private @Nullable Output<Integer> leadTimeInWeeks;

    /**
     * @return The lead time in weeks before the maintenance window.
     * 
     */
    public Optional<Output<Integer>> leadTimeInWeeks() {
        return Optional.ofNullable(this.leadTimeInWeeks);
    }

    /**
     * The months when maintenance can be performed.
     * 
     */
    @Import(name="months")
    private @Nullable Output<List<CloudAutonomousVmClusterMaintenanceWindowMonthArgs>> months;

    /**
     * @return The months when maintenance can be performed.
     * 
     */
    public Optional<Output<List<CloudAutonomousVmClusterMaintenanceWindowMonthArgs>>> months() {
        return Optional.ofNullable(this.months);
    }

    /**
     * The preference for the maintenance window scheduling.
     * 
     */
    @Import(name="preference", required=true)
    private Output<String> preference;

    /**
     * @return The preference for the maintenance window scheduling.
     * 
     */
    public Output<String> preference() {
        return this.preference;
    }

    /**
     * Indicates whether to skip release updates during maintenance.
     * 
     */
    @Import(name="weeksOfMonths")
    private @Nullable Output<List<Integer>> weeksOfMonths;

    /**
     * @return Indicates whether to skip release updates during maintenance.
     * 
     */
    public Optional<Output<List<Integer>>> weeksOfMonths() {
        return Optional.ofNullable(this.weeksOfMonths);
    }

    private CloudAutonomousVmClusterMaintenanceWindowArgs() {}

    private CloudAutonomousVmClusterMaintenanceWindowArgs(CloudAutonomousVmClusterMaintenanceWindowArgs $) {
        this.daysOfWeeks = $.daysOfWeeks;
        this.hoursOfDays = $.hoursOfDays;
        this.leadTimeInWeeks = $.leadTimeInWeeks;
        this.months = $.months;
        this.preference = $.preference;
        this.weeksOfMonths = $.weeksOfMonths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAutonomousVmClusterMaintenanceWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAutonomousVmClusterMaintenanceWindowArgs $;

        public Builder() {
            $ = new CloudAutonomousVmClusterMaintenanceWindowArgs();
        }

        public Builder(CloudAutonomousVmClusterMaintenanceWindowArgs defaults) {
            $ = new CloudAutonomousVmClusterMaintenanceWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daysOfWeeks The days of the week when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder daysOfWeeks(@Nullable Output<List<CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs>> daysOfWeeks) {
            $.daysOfWeeks = daysOfWeeks;
            return this;
        }

        /**
         * @param daysOfWeeks The days of the week when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder daysOfWeeks(List<CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs> daysOfWeeks) {
            return daysOfWeeks(Output.of(daysOfWeeks));
        }

        /**
         * @param daysOfWeeks The days of the week when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder daysOfWeeks(CloudAutonomousVmClusterMaintenanceWindowDaysOfWeekArgs... daysOfWeeks) {
            return daysOfWeeks(List.of(daysOfWeeks));
        }

        /**
         * @param hoursOfDays The hours of the day when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder hoursOfDays(@Nullable Output<List<Integer>> hoursOfDays) {
            $.hoursOfDays = hoursOfDays;
            return this;
        }

        /**
         * @param hoursOfDays The hours of the day when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder hoursOfDays(List<Integer> hoursOfDays) {
            return hoursOfDays(Output.of(hoursOfDays));
        }

        /**
         * @param hoursOfDays The hours of the day when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder hoursOfDays(Integer... hoursOfDays) {
            return hoursOfDays(List.of(hoursOfDays));
        }

        /**
         * @param leadTimeInWeeks The lead time in weeks before the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder leadTimeInWeeks(@Nullable Output<Integer> leadTimeInWeeks) {
            $.leadTimeInWeeks = leadTimeInWeeks;
            return this;
        }

        /**
         * @param leadTimeInWeeks The lead time in weeks before the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder leadTimeInWeeks(Integer leadTimeInWeeks) {
            return leadTimeInWeeks(Output.of(leadTimeInWeeks));
        }

        /**
         * @param months The months when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder months(@Nullable Output<List<CloudAutonomousVmClusterMaintenanceWindowMonthArgs>> months) {
            $.months = months;
            return this;
        }

        /**
         * @param months The months when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder months(List<CloudAutonomousVmClusterMaintenanceWindowMonthArgs> months) {
            return months(Output.of(months));
        }

        /**
         * @param months The months when maintenance can be performed.
         * 
         * @return builder
         * 
         */
        public Builder months(CloudAutonomousVmClusterMaintenanceWindowMonthArgs... months) {
            return months(List.of(months));
        }

        /**
         * @param preference The preference for the maintenance window scheduling.
         * 
         * @return builder
         * 
         */
        public Builder preference(Output<String> preference) {
            $.preference = preference;
            return this;
        }

        /**
         * @param preference The preference for the maintenance window scheduling.
         * 
         * @return builder
         * 
         */
        public Builder preference(String preference) {
            return preference(Output.of(preference));
        }

        /**
         * @param weeksOfMonths Indicates whether to skip release updates during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder weeksOfMonths(@Nullable Output<List<Integer>> weeksOfMonths) {
            $.weeksOfMonths = weeksOfMonths;
            return this;
        }

        /**
         * @param weeksOfMonths Indicates whether to skip release updates during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder weeksOfMonths(List<Integer> weeksOfMonths) {
            return weeksOfMonths(Output.of(weeksOfMonths));
        }

        /**
         * @param weeksOfMonths Indicates whether to skip release updates during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder weeksOfMonths(Integer... weeksOfMonths) {
            return weeksOfMonths(List.of(weeksOfMonths));
        }

        public CloudAutonomousVmClusterMaintenanceWindowArgs build() {
            if ($.preference == null) {
                throw new MissingRequiredPropertyException("CloudAutonomousVmClusterMaintenanceWindowArgs", "preference");
            }
            return $;
        }
    }

}
