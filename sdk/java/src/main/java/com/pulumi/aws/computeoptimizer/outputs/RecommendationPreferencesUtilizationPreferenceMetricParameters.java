// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.computeoptimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RecommendationPreferencesUtilizationPreferenceMetricParameters {
    /**
     * @return The headroom value in percentage used for the specified metric parameter. Valid values: `PERCENT_30`, `PERCENT_20`, `PERCENT_10`, `PERCENT_0`.
     * 
     */
    private String headroom;
    /**
     * @return The threshold value used for the specified metric parameter. You can only specify the threshold value for CPU utilization. Valid values: `P90`, `P95`, `P99_5`.
     * 
     */
    private @Nullable String threshold;

    private RecommendationPreferencesUtilizationPreferenceMetricParameters() {}
    /**
     * @return The headroom value in percentage used for the specified metric parameter. Valid values: `PERCENT_30`, `PERCENT_20`, `PERCENT_10`, `PERCENT_0`.
     * 
     */
    public String headroom() {
        return this.headroom;
    }
    /**
     * @return The threshold value used for the specified metric parameter. You can only specify the threshold value for CPU utilization. Valid values: `P90`, `P95`, `P99_5`.
     * 
     */
    public Optional<String> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecommendationPreferencesUtilizationPreferenceMetricParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String headroom;
        private @Nullable String threshold;
        public Builder() {}
        public Builder(RecommendationPreferencesUtilizationPreferenceMetricParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headroom = defaults.headroom;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder headroom(String headroom) {
            if (headroom == null) {
              throw new MissingRequiredPropertyException("RecommendationPreferencesUtilizationPreferenceMetricParameters", "headroom");
            }
            this.headroom = headroom;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable String threshold) {

            this.threshold = threshold;
            return this;
        }
        public RecommendationPreferencesUtilizationPreferenceMetricParameters build() {
            final var _resultValue = new RecommendationPreferencesUtilizationPreferenceMetricParameters();
            _resultValue.headroom = headroom;
            _resultValue.threshold = threshold;
            return _resultValue;
        }
    }
}
