// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.inputs;

import com.pulumi.aws.verifiedpermissions.inputs.PolicyStoreValidationSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyStoreState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyStoreState Empty = new PolicyStoreState();

    /**
     * The ARN of the Policy Store.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the Policy Store.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * A description of the Policy Store.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the Policy Store.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ID of the Policy Store.
     * 
     */
    @Import(name="policyStoreId")
    private @Nullable Output<String> policyStoreId;

    /**
     * @return The ID of the Policy Store.
     * 
     */
    public Optional<Output<String>> policyStoreId() {
        return Optional.ofNullable(this.policyStoreId);
    }

    /**
     * Validation settings for the policy store.
     * 
     */
    @Import(name="validationSettings")
    private @Nullable Output<PolicyStoreValidationSettingsArgs> validationSettings;

    /**
     * @return Validation settings for the policy store.
     * 
     */
    public Optional<Output<PolicyStoreValidationSettingsArgs>> validationSettings() {
        return Optional.ofNullable(this.validationSettings);
    }

    private PolicyStoreState() {}

    private PolicyStoreState(PolicyStoreState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.policyStoreId = $.policyStoreId;
        this.validationSettings = $.validationSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyStoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyStoreState $;

        public Builder() {
            $ = new PolicyStoreState();
        }

        public Builder(PolicyStoreState defaults) {
            $ = new PolicyStoreState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param description A description of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param policyStoreId The ID of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(@Nullable Output<String> policyStoreId) {
            $.policyStoreId = policyStoreId;
            return this;
        }

        /**
         * @param policyStoreId The ID of the Policy Store.
         * 
         * @return builder
         * 
         */
        public Builder policyStoreId(String policyStoreId) {
            return policyStoreId(Output.of(policyStoreId));
        }

        /**
         * @param validationSettings Validation settings for the policy store.
         * 
         * @return builder
         * 
         */
        public Builder validationSettings(@Nullable Output<PolicyStoreValidationSettingsArgs> validationSettings) {
            $.validationSettings = validationSettings;
            return this;
        }

        /**
         * @param validationSettings Validation settings for the policy store.
         * 
         * @return builder
         * 
         */
        public Builder validationSettings(PolicyStoreValidationSettingsArgs validationSettings) {
            return validationSettings(Output.of(validationSettings));
        }

        public PolicyStoreState build() {
            return $;
        }
    }

}
