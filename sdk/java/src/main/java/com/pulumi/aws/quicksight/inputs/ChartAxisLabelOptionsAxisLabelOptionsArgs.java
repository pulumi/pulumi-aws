// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs;
import com.pulumi.aws.quicksight.inputs.FontConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChartAxisLabelOptionsAxisLabelOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChartAxisLabelOptionsAxisLabelOptionsArgs Empty = new ChartAxisLabelOptionsAxisLabelOptionsArgs();

    @Import(name="applyTo")
    private @Nullable Output<ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs> applyTo;

    public Optional<Output<ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs>> applyTo() {
        return Optional.ofNullable(this.applyTo);
    }

    @Import(name="customLabel")
    private @Nullable Output<String> customLabel;

    public Optional<Output<String>> customLabel() {
        return Optional.ofNullable(this.customLabel);
    }

    @Import(name="fontConfiguration")
    private @Nullable Output<FontConfigurationArgs> fontConfiguration;

    public Optional<Output<FontConfigurationArgs>> fontConfiguration() {
        return Optional.ofNullable(this.fontConfiguration);
    }

    private ChartAxisLabelOptionsAxisLabelOptionsArgs() {}

    private ChartAxisLabelOptionsAxisLabelOptionsArgs(ChartAxisLabelOptionsAxisLabelOptionsArgs $) {
        this.applyTo = $.applyTo;
        this.customLabel = $.customLabel;
        this.fontConfiguration = $.fontConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChartAxisLabelOptionsAxisLabelOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChartAxisLabelOptionsAxisLabelOptionsArgs $;

        public Builder() {
            $ = new ChartAxisLabelOptionsAxisLabelOptionsArgs();
        }

        public Builder(ChartAxisLabelOptionsAxisLabelOptionsArgs defaults) {
            $ = new ChartAxisLabelOptionsAxisLabelOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder applyTo(@Nullable Output<ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs> applyTo) {
            $.applyTo = applyTo;
            return this;
        }

        public Builder applyTo(ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs applyTo) {
            return applyTo(Output.of(applyTo));
        }

        public Builder customLabel(@Nullable Output<String> customLabel) {
            $.customLabel = customLabel;
            return this;
        }

        public Builder customLabel(String customLabel) {
            return customLabel(Output.of(customLabel));
        }

        public Builder fontConfiguration(@Nullable Output<FontConfigurationArgs> fontConfiguration) {
            $.fontConfiguration = fontConfiguration;
            return this;
        }

        public Builder fontConfiguration(FontConfigurationArgs fontConfiguration) {
            return fontConfiguration(Output.of(fontConfiguration));
        }

        public ChartAxisLabelOptionsAxisLabelOptionsArgs build() {
            return $;
        }
    }

}
