// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StudioState extends com.pulumi.resources.ResourceArgs {

    public static final StudioState Empty = new StudioState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="authMode")
    private @Nullable Output<String> authMode;

    public Optional<Output<String>> authMode() {
        return Optional.ofNullable(this.authMode);
    }

    @Import(name="defaultS3Location")
    private @Nullable Output<String> defaultS3Location;

    public Optional<Output<String>> defaultS3Location() {
        return Optional.ofNullable(this.defaultS3Location);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="engineSecurityGroupId")
    private @Nullable Output<String> engineSecurityGroupId;

    public Optional<Output<String>> engineSecurityGroupId() {
        return Optional.ofNullable(this.engineSecurityGroupId);
    }

    @Import(name="idpAuthUrl")
    private @Nullable Output<String> idpAuthUrl;

    public Optional<Output<String>> idpAuthUrl() {
        return Optional.ofNullable(this.idpAuthUrl);
    }

    @Import(name="idpRelayStateParameterName")
    private @Nullable Output<String> idpRelayStateParameterName;

    public Optional<Output<String>> idpRelayStateParameterName() {
        return Optional.ofNullable(this.idpRelayStateParameterName);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="serviceRole")
    private @Nullable Output<String> serviceRole;

    public Optional<Output<String>> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="userRole")
    private @Nullable Output<String> userRole;

    public Optional<Output<String>> userRole() {
        return Optional.ofNullable(this.userRole);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    @Import(name="workspaceSecurityGroupId")
    private @Nullable Output<String> workspaceSecurityGroupId;

    public Optional<Output<String>> workspaceSecurityGroupId() {
        return Optional.ofNullable(this.workspaceSecurityGroupId);
    }

    private StudioState() {}

    private StudioState(StudioState $) {
        this.arn = $.arn;
        this.authMode = $.authMode;
        this.defaultS3Location = $.defaultS3Location;
        this.description = $.description;
        this.engineSecurityGroupId = $.engineSecurityGroupId;
        this.idpAuthUrl = $.idpAuthUrl;
        this.idpRelayStateParameterName = $.idpRelayStateParameterName;
        this.name = $.name;
        this.serviceRole = $.serviceRole;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.url = $.url;
        this.userRole = $.userRole;
        this.vpcId = $.vpcId;
        this.workspaceSecurityGroupId = $.workspaceSecurityGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioState $;

        public Builder() {
            $ = new StudioState();
        }

        public Builder(StudioState defaults) {
            $ = new StudioState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder authMode(@Nullable Output<String> authMode) {
            $.authMode = authMode;
            return this;
        }

        public Builder authMode(String authMode) {
            return authMode(Output.of(authMode));
        }

        public Builder defaultS3Location(@Nullable Output<String> defaultS3Location) {
            $.defaultS3Location = defaultS3Location;
            return this;
        }

        public Builder defaultS3Location(String defaultS3Location) {
            return defaultS3Location(Output.of(defaultS3Location));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder engineSecurityGroupId(@Nullable Output<String> engineSecurityGroupId) {
            $.engineSecurityGroupId = engineSecurityGroupId;
            return this;
        }

        public Builder engineSecurityGroupId(String engineSecurityGroupId) {
            return engineSecurityGroupId(Output.of(engineSecurityGroupId));
        }

        public Builder idpAuthUrl(@Nullable Output<String> idpAuthUrl) {
            $.idpAuthUrl = idpAuthUrl;
            return this;
        }

        public Builder idpAuthUrl(String idpAuthUrl) {
            return idpAuthUrl(Output.of(idpAuthUrl));
        }

        public Builder idpRelayStateParameterName(@Nullable Output<String> idpRelayStateParameterName) {
            $.idpRelayStateParameterName = idpRelayStateParameterName;
            return this;
        }

        public Builder idpRelayStateParameterName(String idpRelayStateParameterName) {
            return idpRelayStateParameterName(Output.of(idpRelayStateParameterName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder serviceRole(@Nullable Output<String> serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        public Builder serviceRole(String serviceRole) {
            return serviceRole(Output.of(serviceRole));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder userRole(@Nullable Output<String> userRole) {
            $.userRole = userRole;
            return this;
        }

        public Builder userRole(String userRole) {
            return userRole(Output.of(userRole));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Builder workspaceSecurityGroupId(@Nullable Output<String> workspaceSecurityGroupId) {
            $.workspaceSecurityGroupId = workspaceSecurityGroupId;
            return this;
        }

        public Builder workspaceSecurityGroupId(String workspaceSecurityGroupId) {
            return workspaceSecurityGroupId(Output.of(workspaceSecurityGroupId));
        }

        public StudioState build() {
            return $;
        }
    }

}
