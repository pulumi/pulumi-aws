// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointConfigurationProductionVariantManagedInstanceScalingArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointConfigurationProductionVariantManagedInstanceScalingArgs Empty = new EndpointConfigurationProductionVariantManagedInstanceScalingArgs();

    /**
     * The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.
     * 
     */
    @Import(name="maxInstanceCount")
    private @Nullable Output<Integer> maxInstanceCount;

    /**
     * @return The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.
     * 
     */
    public Optional<Output<Integer>> maxInstanceCount() {
        return Optional.ofNullable(this.maxInstanceCount);
    }

    /**
     * The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.
     * 
     */
    @Import(name="minInstanceCount")
    private @Nullable Output<Integer> minInstanceCount;

    /**
     * @return The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.
     * 
     */
    public Optional<Output<Integer>> minInstanceCount() {
        return Optional.ofNullable(this.minInstanceCount);
    }

    /**
     * Indicates whether managed instance scaling is enabled. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Indicates whether managed instance scaling is enabled. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private EndpointConfigurationProductionVariantManagedInstanceScalingArgs() {}

    private EndpointConfigurationProductionVariantManagedInstanceScalingArgs(EndpointConfigurationProductionVariantManagedInstanceScalingArgs $) {
        this.maxInstanceCount = $.maxInstanceCount;
        this.minInstanceCount = $.minInstanceCount;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointConfigurationProductionVariantManagedInstanceScalingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointConfigurationProductionVariantManagedInstanceScalingArgs $;

        public Builder() {
            $ = new EndpointConfigurationProductionVariantManagedInstanceScalingArgs();
        }

        public Builder(EndpointConfigurationProductionVariantManagedInstanceScalingArgs defaults) {
            $ = new EndpointConfigurationProductionVariantManagedInstanceScalingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxInstanceCount The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.
         * 
         * @return builder
         * 
         */
        public Builder maxInstanceCount(@Nullable Output<Integer> maxInstanceCount) {
            $.maxInstanceCount = maxInstanceCount;
            return this;
        }

        /**
         * @param maxInstanceCount The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.
         * 
         * @return builder
         * 
         */
        public Builder maxInstanceCount(Integer maxInstanceCount) {
            return maxInstanceCount(Output.of(maxInstanceCount));
        }

        /**
         * @param minInstanceCount The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.
         * 
         * @return builder
         * 
         */
        public Builder minInstanceCount(@Nullable Output<Integer> minInstanceCount) {
            $.minInstanceCount = minInstanceCount;
            return this;
        }

        /**
         * @param minInstanceCount The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.
         * 
         * @return builder
         * 
         */
        public Builder minInstanceCount(Integer minInstanceCount) {
            return minInstanceCount(Output.of(minInstanceCount));
        }

        /**
         * @param status Indicates whether managed instance scaling is enabled. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Indicates whether managed instance scaling is enabled. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public EndpointConfigurationProductionVariantManagedInstanceScalingArgs build() {
            return $;
        }
    }

}
