// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RecordGeoproximityRoutingPolicyCoordinate {
    private String latitude;
    private String longitude;

    private RecordGeoproximityRoutingPolicyCoordinate() {}
    public String latitude() {
        return this.latitude;
    }
    public String longitude() {
        return this.longitude;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecordGeoproximityRoutingPolicyCoordinate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String latitude;
        private String longitude;
        public Builder() {}
        public Builder(RecordGeoproximityRoutingPolicyCoordinate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.latitude = defaults.latitude;
    	      this.longitude = defaults.longitude;
        }

        @CustomType.Setter
        public Builder latitude(String latitude) {
            if (latitude == null) {
              throw new MissingRequiredPropertyException("RecordGeoproximityRoutingPolicyCoordinate", "latitude");
            }
            this.latitude = latitude;
            return this;
        }
        @CustomType.Setter
        public Builder longitude(String longitude) {
            if (longitude == null) {
              throw new MissingRequiredPropertyException("RecordGeoproximityRoutingPolicyCoordinate", "longitude");
            }
            this.longitude = longitude;
            return this;
        }
        public RecordGeoproximityRoutingPolicyCoordinate build() {
            final var _resultValue = new RecordGeoproximityRoutingPolicyCoordinate();
            _resultValue.latitude = latitude;
            _resultValue.longitude = longitude;
            return _resultValue;
        }
    }
}
