// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DomainSamlOptionsSamlOptionsIdp {
    /**
     * @return Unique Entity ID of the application in SAML Identity Provider.
     * 
     */
    private String entityId;
    /**
     * @return Metadata of the SAML application in xml format.
     * 
     */
    private String metadataContent;

    private DomainSamlOptionsSamlOptionsIdp() {}
    /**
     * @return Unique Entity ID of the application in SAML Identity Provider.
     * 
     */
    public String entityId() {
        return this.entityId;
    }
    /**
     * @return Metadata of the SAML application in xml format.
     * 
     */
    public String metadataContent() {
        return this.metadataContent;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainSamlOptionsSamlOptionsIdp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String entityId;
        private String metadataContent;
        public Builder() {}
        public Builder(DomainSamlOptionsSamlOptionsIdp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityId = defaults.entityId;
    	      this.metadataContent = defaults.metadataContent;
        }

        @CustomType.Setter
        public Builder entityId(String entityId) {
            if (entityId == null) {
              throw new MissingRequiredPropertyException("DomainSamlOptionsSamlOptionsIdp", "entityId");
            }
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder metadataContent(String metadataContent) {
            if (metadataContent == null) {
              throw new MissingRequiredPropertyException("DomainSamlOptionsSamlOptionsIdp", "metadataContent");
            }
            this.metadataContent = metadataContent;
            return this;
        }
        public DomainSamlOptionsSamlOptionsIdp build() {
            final var _resultValue = new DomainSamlOptionsSamlOptionsIdp();
            _resultValue.entityId = entityId;
            _resultValue.metadataContent = metadataContent;
            return _resultValue;
        }
    }
}
