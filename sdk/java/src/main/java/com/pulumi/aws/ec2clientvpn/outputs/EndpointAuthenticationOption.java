// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2clientvpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointAuthenticationOption {
    /**
     * @return The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
     * 
     */
    private @Nullable String activeDirectoryId;
    /**
     * @return The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
     * 
     */
    private @Nullable String rootCertificateChainArn;
    /**
     * @return The ARN of the IAM SAML identity provider if type is `federated-authentication`.
     * 
     */
    private @Nullable String samlProviderArn;
    /**
     * @return The ARN of the IAM SAML identity provider for the self service portal if type is `federated-authentication`.
     * 
     */
    private @Nullable String selfServiceSamlProviderArn;
    /**
     * @return The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, `directory-service-authentication` to use Active Directory authentication, or `federated-authentication` to use Federated Authentication via SAML 2.0.
     * 
     */
    private String type;

    private EndpointAuthenticationOption() {}
    /**
     * @return The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
     * 
     */
    public Optional<String> activeDirectoryId() {
        return Optional.ofNullable(this.activeDirectoryId);
    }
    /**
     * @return The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
     * 
     */
    public Optional<String> rootCertificateChainArn() {
        return Optional.ofNullable(this.rootCertificateChainArn);
    }
    /**
     * @return The ARN of the IAM SAML identity provider if type is `federated-authentication`.
     * 
     */
    public Optional<String> samlProviderArn() {
        return Optional.ofNullable(this.samlProviderArn);
    }
    /**
     * @return The ARN of the IAM SAML identity provider for the self service portal if type is `federated-authentication`.
     * 
     */
    public Optional<String> selfServiceSamlProviderArn() {
        return Optional.ofNullable(this.selfServiceSamlProviderArn);
    }
    /**
     * @return The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, `directory-service-authentication` to use Active Directory authentication, or `federated-authentication` to use Federated Authentication via SAML 2.0.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointAuthenticationOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activeDirectoryId;
        private @Nullable String rootCertificateChainArn;
        private @Nullable String samlProviderArn;
        private @Nullable String selfServiceSamlProviderArn;
        private String type;
        public Builder() {}
        public Builder(EndpointAuthenticationOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryId = defaults.activeDirectoryId;
    	      this.rootCertificateChainArn = defaults.rootCertificateChainArn;
    	      this.samlProviderArn = defaults.samlProviderArn;
    	      this.selfServiceSamlProviderArn = defaults.selfServiceSamlProviderArn;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder activeDirectoryId(@Nullable String activeDirectoryId) {
            this.activeDirectoryId = activeDirectoryId;
            return this;
        }
        @CustomType.Setter
        public Builder rootCertificateChainArn(@Nullable String rootCertificateChainArn) {
            this.rootCertificateChainArn = rootCertificateChainArn;
            return this;
        }
        @CustomType.Setter
        public Builder samlProviderArn(@Nullable String samlProviderArn) {
            this.samlProviderArn = samlProviderArn;
            return this;
        }
        @CustomType.Setter
        public Builder selfServiceSamlProviderArn(@Nullable String selfServiceSamlProviderArn) {
            this.selfServiceSamlProviderArn = selfServiceSamlProviderArn;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public EndpointAuthenticationOption build() {
            final var _resultValue = new EndpointAuthenticationOption();
            _resultValue.activeDirectoryId = activeDirectoryId;
            _resultValue.rootCertificateChainArn = rootCertificateChainArn;
            _resultValue.samlProviderArn = samlProviderArn;
            _resultValue.selfServiceSamlProviderArn = selfServiceSamlProviderArn;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
