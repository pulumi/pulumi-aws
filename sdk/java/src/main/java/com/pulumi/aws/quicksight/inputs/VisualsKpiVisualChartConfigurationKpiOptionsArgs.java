// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.FontConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.SelectAllOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsKpiVisualChartConfigurationKpiOptionsComparisonArgs;
import com.pulumi.aws.quicksight.inputs.VisualsKpiVisualChartConfigurationKpiOptionsSparklineArgs;
import com.pulumi.aws.quicksight.inputs.VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsKpiVisualChartConfigurationKpiOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsKpiVisualChartConfigurationKpiOptionsArgs Empty = new VisualsKpiVisualChartConfigurationKpiOptionsArgs();

    @Import(name="comparison")
    private @Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsComparisonArgs> comparison;

    public Optional<Output<VisualsKpiVisualChartConfigurationKpiOptionsComparisonArgs>> comparison() {
        return Optional.ofNullable(this.comparison);
    }

    @Import(name="primaryValueDisplayType")
    private @Nullable Output<String> primaryValueDisplayType;

    public Optional<Output<String>> primaryValueDisplayType() {
        return Optional.ofNullable(this.primaryValueDisplayType);
    }

    @Import(name="primaryValueFontConfiguration")
    private @Nullable Output<FontConfigurationArgs> primaryValueFontConfiguration;

    public Optional<Output<FontConfigurationArgs>> primaryValueFontConfiguration() {
        return Optional.ofNullable(this.primaryValueFontConfiguration);
    }

    @Import(name="progressBar")
    private @Nullable Output<SelectAllOptionsArgs> progressBar;

    public Optional<Output<SelectAllOptionsArgs>> progressBar() {
        return Optional.ofNullable(this.progressBar);
    }

    @Import(name="secondaryValue")
    private @Nullable Output<SelectAllOptionsArgs> secondaryValue;

    public Optional<Output<SelectAllOptionsArgs>> secondaryValue() {
        return Optional.ofNullable(this.secondaryValue);
    }

    @Import(name="secondaryValueFontConfiguration")
    private @Nullable Output<FontConfigurationArgs> secondaryValueFontConfiguration;

    public Optional<Output<FontConfigurationArgs>> secondaryValueFontConfiguration() {
        return Optional.ofNullable(this.secondaryValueFontConfiguration);
    }

    @Import(name="sparkline")
    private @Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsSparklineArgs> sparkline;

    public Optional<Output<VisualsKpiVisualChartConfigurationKpiOptionsSparklineArgs>> sparkline() {
        return Optional.ofNullable(this.sparkline);
    }

    @Import(name="trendArrows")
    private @Nullable Output<SelectAllOptionsArgs> trendArrows;

    public Optional<Output<SelectAllOptionsArgs>> trendArrows() {
        return Optional.ofNullable(this.trendArrows);
    }

    @Import(name="visualLayoutOptions")
    private @Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptionsArgs> visualLayoutOptions;

    public Optional<Output<VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptionsArgs>> visualLayoutOptions() {
        return Optional.ofNullable(this.visualLayoutOptions);
    }

    private VisualsKpiVisualChartConfigurationKpiOptionsArgs() {}

    private VisualsKpiVisualChartConfigurationKpiOptionsArgs(VisualsKpiVisualChartConfigurationKpiOptionsArgs $) {
        this.comparison = $.comparison;
        this.primaryValueDisplayType = $.primaryValueDisplayType;
        this.primaryValueFontConfiguration = $.primaryValueFontConfiguration;
        this.progressBar = $.progressBar;
        this.secondaryValue = $.secondaryValue;
        this.secondaryValueFontConfiguration = $.secondaryValueFontConfiguration;
        this.sparkline = $.sparkline;
        this.trendArrows = $.trendArrows;
        this.visualLayoutOptions = $.visualLayoutOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsKpiVisualChartConfigurationKpiOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsKpiVisualChartConfigurationKpiOptionsArgs $;

        public Builder() {
            $ = new VisualsKpiVisualChartConfigurationKpiOptionsArgs();
        }

        public Builder(VisualsKpiVisualChartConfigurationKpiOptionsArgs defaults) {
            $ = new VisualsKpiVisualChartConfigurationKpiOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder comparison(@Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsComparisonArgs> comparison) {
            $.comparison = comparison;
            return this;
        }

        public Builder comparison(VisualsKpiVisualChartConfigurationKpiOptionsComparisonArgs comparison) {
            return comparison(Output.of(comparison));
        }

        public Builder primaryValueDisplayType(@Nullable Output<String> primaryValueDisplayType) {
            $.primaryValueDisplayType = primaryValueDisplayType;
            return this;
        }

        public Builder primaryValueDisplayType(String primaryValueDisplayType) {
            return primaryValueDisplayType(Output.of(primaryValueDisplayType));
        }

        public Builder primaryValueFontConfiguration(@Nullable Output<FontConfigurationArgs> primaryValueFontConfiguration) {
            $.primaryValueFontConfiguration = primaryValueFontConfiguration;
            return this;
        }

        public Builder primaryValueFontConfiguration(FontConfigurationArgs primaryValueFontConfiguration) {
            return primaryValueFontConfiguration(Output.of(primaryValueFontConfiguration));
        }

        public Builder progressBar(@Nullable Output<SelectAllOptionsArgs> progressBar) {
            $.progressBar = progressBar;
            return this;
        }

        public Builder progressBar(SelectAllOptionsArgs progressBar) {
            return progressBar(Output.of(progressBar));
        }

        public Builder secondaryValue(@Nullable Output<SelectAllOptionsArgs> secondaryValue) {
            $.secondaryValue = secondaryValue;
            return this;
        }

        public Builder secondaryValue(SelectAllOptionsArgs secondaryValue) {
            return secondaryValue(Output.of(secondaryValue));
        }

        public Builder secondaryValueFontConfiguration(@Nullable Output<FontConfigurationArgs> secondaryValueFontConfiguration) {
            $.secondaryValueFontConfiguration = secondaryValueFontConfiguration;
            return this;
        }

        public Builder secondaryValueFontConfiguration(FontConfigurationArgs secondaryValueFontConfiguration) {
            return secondaryValueFontConfiguration(Output.of(secondaryValueFontConfiguration));
        }

        public Builder sparkline(@Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsSparklineArgs> sparkline) {
            $.sparkline = sparkline;
            return this;
        }

        public Builder sparkline(VisualsKpiVisualChartConfigurationKpiOptionsSparklineArgs sparkline) {
            return sparkline(Output.of(sparkline));
        }

        public Builder trendArrows(@Nullable Output<SelectAllOptionsArgs> trendArrows) {
            $.trendArrows = trendArrows;
            return this;
        }

        public Builder trendArrows(SelectAllOptionsArgs trendArrows) {
            return trendArrows(Output.of(trendArrows));
        }

        public Builder visualLayoutOptions(@Nullable Output<VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptionsArgs> visualLayoutOptions) {
            $.visualLayoutOptions = visualLayoutOptions;
            return this;
        }

        public Builder visualLayoutOptions(VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptionsArgs visualLayoutOptions) {
            return visualLayoutOptions(Output.of(visualLayoutOptions));
        }

        public VisualsKpiVisualChartConfigurationKpiOptionsArgs build() {
            return $;
        }
    }

}
