// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk;

import com.pulumi.aws.msk.inputs.ClusterBrokerNodeGroupInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterClientAuthenticationArgs;
import com.pulumi.aws.msk.inputs.ClusterConfigurationInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterEncryptionInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterLoggingInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterOpenMonitoringArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @Import(name="brokerNodeGroupInfo", required=true)
    private Output<ClusterBrokerNodeGroupInfoArgs> brokerNodeGroupInfo;

    public Output<ClusterBrokerNodeGroupInfoArgs> brokerNodeGroupInfo() {
        return this.brokerNodeGroupInfo;
    }

    @Import(name="clientAuthentication")
    private @Nullable Output<ClusterClientAuthenticationArgs> clientAuthentication;

    public Optional<Output<ClusterClientAuthenticationArgs>> clientAuthentication() {
        return Optional.ofNullable(this.clientAuthentication);
    }

    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    @Import(name="configurationInfo")
    private @Nullable Output<ClusterConfigurationInfoArgs> configurationInfo;

    public Optional<Output<ClusterConfigurationInfoArgs>> configurationInfo() {
        return Optional.ofNullable(this.configurationInfo);
    }

    @Import(name="encryptionInfo")
    private @Nullable Output<ClusterEncryptionInfoArgs> encryptionInfo;

    public Optional<Output<ClusterEncryptionInfoArgs>> encryptionInfo() {
        return Optional.ofNullable(this.encryptionInfo);
    }

    @Import(name="enhancedMonitoring")
    private @Nullable Output<String> enhancedMonitoring;

    public Optional<Output<String>> enhancedMonitoring() {
        return Optional.ofNullable(this.enhancedMonitoring);
    }

    @Import(name="kafkaVersion", required=true)
    private Output<String> kafkaVersion;

    public Output<String> kafkaVersion() {
        return this.kafkaVersion;
    }

    @Import(name="loggingInfo")
    private @Nullable Output<ClusterLoggingInfoArgs> loggingInfo;

    public Optional<Output<ClusterLoggingInfoArgs>> loggingInfo() {
        return Optional.ofNullable(this.loggingInfo);
    }

    @Import(name="numberOfBrokerNodes", required=true)
    private Output<Integer> numberOfBrokerNodes;

    public Output<Integer> numberOfBrokerNodes() {
        return this.numberOfBrokerNodes;
    }

    @Import(name="openMonitoring")
    private @Nullable Output<ClusterOpenMonitoringArgs> openMonitoring;

    public Optional<Output<ClusterOpenMonitoringArgs>> openMonitoring() {
        return Optional.ofNullable(this.openMonitoring);
    }

    @Import(name="storageMode")
    private @Nullable Output<String> storageMode;

    public Optional<Output<String>> storageMode() {
        return Optional.ofNullable(this.storageMode);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.brokerNodeGroupInfo = $.brokerNodeGroupInfo;
        this.clientAuthentication = $.clientAuthentication;
        this.clusterName = $.clusterName;
        this.configurationInfo = $.configurationInfo;
        this.encryptionInfo = $.encryptionInfo;
        this.enhancedMonitoring = $.enhancedMonitoring;
        this.kafkaVersion = $.kafkaVersion;
        this.loggingInfo = $.loggingInfo;
        this.numberOfBrokerNodes = $.numberOfBrokerNodes;
        this.openMonitoring = $.openMonitoring;
        this.storageMode = $.storageMode;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder brokerNodeGroupInfo(Output<ClusterBrokerNodeGroupInfoArgs> brokerNodeGroupInfo) {
            $.brokerNodeGroupInfo = brokerNodeGroupInfo;
            return this;
        }

        public Builder brokerNodeGroupInfo(ClusterBrokerNodeGroupInfoArgs brokerNodeGroupInfo) {
            return brokerNodeGroupInfo(Output.of(brokerNodeGroupInfo));
        }

        public Builder clientAuthentication(@Nullable Output<ClusterClientAuthenticationArgs> clientAuthentication) {
            $.clientAuthentication = clientAuthentication;
            return this;
        }

        public Builder clientAuthentication(ClusterClientAuthenticationArgs clientAuthentication) {
            return clientAuthentication(Output.of(clientAuthentication));
        }

        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        public Builder configurationInfo(@Nullable Output<ClusterConfigurationInfoArgs> configurationInfo) {
            $.configurationInfo = configurationInfo;
            return this;
        }

        public Builder configurationInfo(ClusterConfigurationInfoArgs configurationInfo) {
            return configurationInfo(Output.of(configurationInfo));
        }

        public Builder encryptionInfo(@Nullable Output<ClusterEncryptionInfoArgs> encryptionInfo) {
            $.encryptionInfo = encryptionInfo;
            return this;
        }

        public Builder encryptionInfo(ClusterEncryptionInfoArgs encryptionInfo) {
            return encryptionInfo(Output.of(encryptionInfo));
        }

        public Builder enhancedMonitoring(@Nullable Output<String> enhancedMonitoring) {
            $.enhancedMonitoring = enhancedMonitoring;
            return this;
        }

        public Builder enhancedMonitoring(String enhancedMonitoring) {
            return enhancedMonitoring(Output.of(enhancedMonitoring));
        }

        public Builder kafkaVersion(Output<String> kafkaVersion) {
            $.kafkaVersion = kafkaVersion;
            return this;
        }

        public Builder kafkaVersion(String kafkaVersion) {
            return kafkaVersion(Output.of(kafkaVersion));
        }

        public Builder loggingInfo(@Nullable Output<ClusterLoggingInfoArgs> loggingInfo) {
            $.loggingInfo = loggingInfo;
            return this;
        }

        public Builder loggingInfo(ClusterLoggingInfoArgs loggingInfo) {
            return loggingInfo(Output.of(loggingInfo));
        }

        public Builder numberOfBrokerNodes(Output<Integer> numberOfBrokerNodes) {
            $.numberOfBrokerNodes = numberOfBrokerNodes;
            return this;
        }

        public Builder numberOfBrokerNodes(Integer numberOfBrokerNodes) {
            return numberOfBrokerNodes(Output.of(numberOfBrokerNodes));
        }

        public Builder openMonitoring(@Nullable Output<ClusterOpenMonitoringArgs> openMonitoring) {
            $.openMonitoring = openMonitoring;
            return this;
        }

        public Builder openMonitoring(ClusterOpenMonitoringArgs openMonitoring) {
            return openMonitoring(Output.of(openMonitoring));
        }

        public Builder storageMode(@Nullable Output<String> storageMode) {
            $.storageMode = storageMode;
            return this;
        }

        public Builder storageMode(String storageMode) {
            return storageMode(Output.of(storageMode));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ClusterArgs build() {
            $.brokerNodeGroupInfo = Objects.requireNonNull($.brokerNodeGroupInfo, "expected parameter 'brokerNodeGroupInfo' to be non-null");
            $.kafkaVersion = Objects.requireNonNull($.kafkaVersion, "expected parameter 'kafkaVersion' to be non-null");
            $.numberOfBrokerNodes = Objects.requireNonNull($.numberOfBrokerNodes, "expected parameter 'numberOfBrokerNodes' to be non-null");
            return $;
        }
    }

}
