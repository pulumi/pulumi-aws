// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.TooltipOptionsFieldBaseTooltipTooltipField;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TooltipOptionsFieldBaseTooltip {
    private @Nullable String aggregationVisibility;
    private @Nullable List<TooltipOptionsFieldBaseTooltipTooltipField> tooltipFields;
    private @Nullable String tooltipTitleType;

    private TooltipOptionsFieldBaseTooltip() {}
    public Optional<String> aggregationVisibility() {
        return Optional.ofNullable(this.aggregationVisibility);
    }
    public List<TooltipOptionsFieldBaseTooltipTooltipField> tooltipFields() {
        return this.tooltipFields == null ? List.of() : this.tooltipFields;
    }
    public Optional<String> tooltipTitleType() {
        return Optional.ofNullable(this.tooltipTitleType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TooltipOptionsFieldBaseTooltip defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregationVisibility;
        private @Nullable List<TooltipOptionsFieldBaseTooltipTooltipField> tooltipFields;
        private @Nullable String tooltipTitleType;
        public Builder() {}
        public Builder(TooltipOptionsFieldBaseTooltip defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationVisibility = defaults.aggregationVisibility;
    	      this.tooltipFields = defaults.tooltipFields;
    	      this.tooltipTitleType = defaults.tooltipTitleType;
        }

        @CustomType.Setter
        public Builder aggregationVisibility(@Nullable String aggregationVisibility) {

            this.aggregationVisibility = aggregationVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder tooltipFields(@Nullable List<TooltipOptionsFieldBaseTooltipTooltipField> tooltipFields) {

            this.tooltipFields = tooltipFields;
            return this;
        }
        public Builder tooltipFields(TooltipOptionsFieldBaseTooltipTooltipField... tooltipFields) {
            return tooltipFields(List.of(tooltipFields));
        }
        @CustomType.Setter
        public Builder tooltipTitleType(@Nullable String tooltipTitleType) {

            this.tooltipTitleType = tooltipTitleType;
            return this;
        }
        public TooltipOptionsFieldBaseTooltip build() {
            final var _resultValue = new TooltipOptionsFieldBaseTooltip();
            _resultValue.aggregationVisibility = aggregationVisibility;
            _resultValue.tooltipFields = tooltipFields;
            _resultValue.tooltipTitleType = tooltipTitleType;
            return _resultValue;
        }
    }
}
