// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.rds.ClusterSnapshotCopyArgs;
import com.pulumi.aws.rds.inputs.ClusterSnapshotCopyState;
import com.pulumi.aws.rds.outputs.ClusterSnapshotCopyTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an RDS database cluster snapshot copy. For managing RDS database instance snapshot copies, see the `aws.rds.SnapshotCopy` resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.rds.Cluster;
 * import com.pulumi.aws.rds.ClusterArgs;
 * import com.pulumi.aws.rds.ClusterSnapshot;
 * import com.pulumi.aws.rds.ClusterSnapshotArgs;
 * import com.pulumi.aws.rds.ClusterSnapshotCopy;
 * import com.pulumi.aws.rds.ClusterSnapshotCopyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Cluster("example", ClusterArgs.builder()
 *             .clusterIdentifier("aurora-cluster-demo")
 *             .databaseName("test")
 *             .engine("aurora-mysql")
 *             .masterUsername("tfacctest")
 *             .masterPassword("avoid-plaintext-passwords")
 *             .skipFinalSnapshot(true)
 *             .build());
 * 
 *         var exampleClusterSnapshot = new ClusterSnapshot("exampleClusterSnapshot", ClusterSnapshotArgs.builder()
 *             .dbClusterIdentifier(example.clusterIdentifier())
 *             .dbClusterSnapshotIdentifier("example")
 *             .build());
 * 
 *         var exampleClusterSnapshotCopy = new ClusterSnapshotCopy("exampleClusterSnapshotCopy", ClusterSnapshotCopyArgs.builder()
 *             .sourceDbClusterSnapshotIdentifier(exampleClusterSnapshot.dbClusterSnapshotArn())
 *             .targetDbClusterSnapshotIdentifier("example-copy")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import `aws_rds_cluster_snapshot_copy` using the `id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy example my-snapshot
 * ```
 * 
 */
@ResourceType(type="aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy")
public class ClusterSnapshotCopy extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the allocated storage size in gigabytes (GB).
     * 
     */
    @Export(name="allocatedStorage", refs={Integer.class}, tree="[0]")
    private Output<Integer> allocatedStorage;

    /**
     * @return Specifies the allocated storage size in gigabytes (GB).
     * 
     */
    public Output<Integer> allocatedStorage() {
        return this.allocatedStorage;
    }
    /**
     * Whether to copy existing tags. Defaults to `false`.
     * 
     */
    @Export(name="copyTags", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> copyTags;

    /**
     * @return Whether to copy existing tags. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> copyTags() {
        return Codegen.optional(this.copyTags);
    }
    /**
     * The Amazon Resource Name (ARN) for the DB cluster snapshot.
     * 
     */
    @Export(name="dbClusterSnapshotArn", refs={String.class}, tree="[0]")
    private Output<String> dbClusterSnapshotArn;

    /**
     * @return The Amazon Resource Name (ARN) for the DB cluster snapshot.
     * 
     */
    public Output<String> dbClusterSnapshotArn() {
        return this.dbClusterSnapshotArn;
    }
    /**
     * The Destination region to place snapshot copy.
     * 
     */
    @Export(name="destinationRegion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> destinationRegion;

    /**
     * @return The Destination region to place snapshot copy.
     * 
     */
    public Output<Optional<String>> destinationRegion() {
        return Codegen.optional(this.destinationRegion);
    }
    /**
     * Specifies the name of the database engine.
     * 
     */
    @Export(name="engine", refs={String.class}, tree="[0]")
    private Output<String> engine;

    /**
     * @return Specifies the name of the database engine.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * Specifies the version of the database engine.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return Specifies the version of the database engine.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * KMS key ID.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return KMS key ID.
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * License model information for the restored DB instance.
     * 
     */
    @Export(name="licenseModel", refs={String.class}, tree="[0]")
    private Output<String> licenseModel;

    /**
     * @return License model information for the restored DB instance.
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }
    /**
     * URL that contains a Signature Version 4 signed request.
     * 
     */
    @Export(name="presignedUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> presignedUrl;

    /**
     * @return URL that contains a Signature Version 4 signed request.
     * 
     */
    public Output<Optional<String>> presignedUrl() {
        return Codegen.optional(this.presignedUrl);
    }
    /**
     * List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
     * 
     */
    @Export(name="sharedAccounts", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> sharedAccounts;

    /**
     * @return List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
     * 
     */
    public Output<Optional<List<String>>> sharedAccounts() {
        return Codegen.optional(this.sharedAccounts);
    }
    @Export(name="snapshotType", refs={String.class}, tree="[0]")
    private Output<String> snapshotType;

    public Output<String> snapshotType() {
        return this.snapshotType;
    }
    /**
     * Identifier of the source snapshot.
     * 
     */
    @Export(name="sourceDbClusterSnapshotIdentifier", refs={String.class}, tree="[0]")
    private Output<String> sourceDbClusterSnapshotIdentifier;

    /**
     * @return Identifier of the source snapshot.
     * 
     */
    public Output<String> sourceDbClusterSnapshotIdentifier() {
        return this.sourceDbClusterSnapshotIdentifier;
    }
    /**
     * Specifies whether the DB cluster snapshot is encrypted.
     * 
     */
    @Export(name="storageEncrypted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> storageEncrypted;

    /**
     * @return Specifies whether the DB cluster snapshot is encrypted.
     * 
     */
    public Output<Boolean> storageEncrypted() {
        return this.storageEncrypted;
    }
    /**
     * Specifies the storage type associated with DB cluster snapshot.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return Specifies the storage type associated with DB cluster snapshot.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * Identifier for the snapshot.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="targetDbClusterSnapshotIdentifier", refs={String.class}, tree="[0]")
    private Output<String> targetDbClusterSnapshotIdentifier;

    /**
     * @return Identifier for the snapshot.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> targetDbClusterSnapshotIdentifier() {
        return this.targetDbClusterSnapshotIdentifier;
    }
    @Export(name="timeouts", refs={ClusterSnapshotCopyTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ ClusterSnapshotCopyTimeouts> timeouts;

    public Output<Optional<ClusterSnapshotCopyTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * Provides the VPC ID associated with the DB cluster snapshot.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return Provides the VPC ID associated with the DB cluster snapshot.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClusterSnapshotCopy(java.lang.String name) {
        this(name, ClusterSnapshotCopyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClusterSnapshotCopy(java.lang.String name, ClusterSnapshotCopyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClusterSnapshotCopy(java.lang.String name, ClusterSnapshotCopyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ClusterSnapshotCopy(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterSnapshotCopyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterSnapshotCopyArgs makeArgs(ClusterSnapshotCopyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterSnapshotCopyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClusterSnapshotCopy get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterSnapshotCopyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClusterSnapshotCopy(name, id, state, options);
    }
}
