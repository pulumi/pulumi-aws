// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.aws.lb.inputs.GetListenerRuleActionArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetListenerRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerRuleArgs Empty = new GetListenerRuleArgs();

    /**
     * List of actions associated with the rule, sorted by `order`.
     * Detailed below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<GetListenerRuleActionArgs>> actions;

    /**
     * @return List of actions associated with the rule, sorted by `order`.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * ARN of the Listener Rule.
     * Either `arn` or `listener_arn` must be set.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Listener Rule.
     * Either `arn` or `listener_arn` must be set.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Set of conditions associated with the rule.
     * Detailed below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<GetListenerRuleConditionArgs>> conditions;

    /**
     * @return Set of conditions associated with the rule.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * ARN of the associated Listener.
     * Either `arn` or `listener_arn` must be set.
     * 
     */
    @Import(name="listenerArn")
    private @Nullable Output<String> listenerArn;

    /**
     * @return ARN of the associated Listener.
     * Either `arn` or `listener_arn` must be set.
     * 
     */
    public Optional<Output<String>> listenerArn() {
        return Optional.ofNullable(this.listenerArn);
    }

    /**
     * Priority of the Listener Rule within the Listener.
     * Must be set if `listener_arn` is set, otherwise must not be set.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Double> priority;

    /**
     * @return Priority of the Listener Rule within the Listener.
     * Must be set if `listener_arn` is set, otherwise must not be set.
     * 
     */
    public Optional<Output<Double>> priority() {
        return Optional.ofNullable(this.priority);
    }

    private GetListenerRuleArgs() {}

    private GetListenerRuleArgs(GetListenerRuleArgs $) {
        this.actions = $.actions;
        this.arn = $.arn;
        this.conditions = $.conditions;
        this.listenerArn = $.listenerArn;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleArgs $;

        public Builder() {
            $ = new GetListenerRuleArgs();
        }

        public Builder(GetListenerRuleArgs defaults) {
            $ = new GetListenerRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions List of actions associated with the rule, sorted by `order`.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<GetListenerRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions List of actions associated with the rule, sorted by `order`.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<GetListenerRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions List of actions associated with the rule, sorted by `order`.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder actions(GetListenerRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param arn ARN of the Listener Rule.
         * Either `arn` or `listener_arn` must be set.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Listener Rule.
         * Either `arn` or `listener_arn` must be set.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param conditions Set of conditions associated with the rule.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<GetListenerRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Set of conditions associated with the rule.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<GetListenerRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions Set of conditions associated with the rule.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(GetListenerRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param listenerArn ARN of the associated Listener.
         * Either `arn` or `listener_arn` must be set.
         * 
         * @return builder
         * 
         */
        public Builder listenerArn(@Nullable Output<String> listenerArn) {
            $.listenerArn = listenerArn;
            return this;
        }

        /**
         * @param listenerArn ARN of the associated Listener.
         * Either `arn` or `listener_arn` must be set.
         * 
         * @return builder
         * 
         */
        public Builder listenerArn(String listenerArn) {
            return listenerArn(Output.of(listenerArn));
        }

        /**
         * @param priority Priority of the Listener Rule within the Listener.
         * Must be set if `listener_arn` is set, otherwise must not be set.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Double> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the Listener Rule within the Listener.
         * Must be set if `listener_arn` is set, otherwise must not be set.
         * 
         * @return builder
         * 
         */
        public Builder priority(Double priority) {
            return priority(Output.of(priority));
        }

        public GetListenerRuleArgs build() {
            return $;
        }
    }

}
