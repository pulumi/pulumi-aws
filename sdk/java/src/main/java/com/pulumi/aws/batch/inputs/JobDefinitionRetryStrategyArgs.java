// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.inputs;

import com.pulumi.aws.batch.inputs.JobDefinitionRetryStrategyEvaluateOnExitArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDefinitionRetryStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDefinitionRetryStrategyArgs Empty = new JobDefinitionRetryStrategyArgs();

    /**
     * The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
     * 
     */
    @Import(name="attempts")
    private @Nullable Output<Integer> attempts;

    /**
     * @return The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
     * 
     */
    public Optional<Output<Integer>> attempts() {
        return Optional.ofNullable(this.attempts);
    }

    /**
     * The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
     * 
     */
    @Import(name="evaluateOnExits")
    private @Nullable Output<List<JobDefinitionRetryStrategyEvaluateOnExitArgs>> evaluateOnExits;

    /**
     * @return The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
     * 
     */
    public Optional<Output<List<JobDefinitionRetryStrategyEvaluateOnExitArgs>>> evaluateOnExits() {
        return Optional.ofNullable(this.evaluateOnExits);
    }

    private JobDefinitionRetryStrategyArgs() {}

    private JobDefinitionRetryStrategyArgs(JobDefinitionRetryStrategyArgs $) {
        this.attempts = $.attempts;
        this.evaluateOnExits = $.evaluateOnExits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDefinitionRetryStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDefinitionRetryStrategyArgs $;

        public Builder() {
            $ = new JobDefinitionRetryStrategyArgs();
        }

        public Builder(JobDefinitionRetryStrategyArgs defaults) {
            $ = new JobDefinitionRetryStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attempts The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
         * 
         * @return builder
         * 
         */
        public Builder attempts(@Nullable Output<Integer> attempts) {
            $.attempts = attempts;
            return this;
        }

        /**
         * @param attempts The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
         * 
         * @return builder
         * 
         */
        public Builder attempts(Integer attempts) {
            return attempts(Output.of(attempts));
        }

        /**
         * @param evaluateOnExits The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
         * 
         * @return builder
         * 
         */
        public Builder evaluateOnExits(@Nullable Output<List<JobDefinitionRetryStrategyEvaluateOnExitArgs>> evaluateOnExits) {
            $.evaluateOnExits = evaluateOnExits;
            return this;
        }

        /**
         * @param evaluateOnExits The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
         * 
         * @return builder
         * 
         */
        public Builder evaluateOnExits(List<JobDefinitionRetryStrategyEvaluateOnExitArgs> evaluateOnExits) {
            return evaluateOnExits(Output.of(evaluateOnExits));
        }

        /**
         * @param evaluateOnExits The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
         * 
         * @return builder
         * 
         */
        public Builder evaluateOnExits(JobDefinitionRetryStrategyEvaluateOnExitArgs... evaluateOnExits) {
            return evaluateOnExits(List.of(evaluateOnExits));
        }

        public JobDefinitionRetryStrategyArgs build() {
            return $;
        }
    }

}
