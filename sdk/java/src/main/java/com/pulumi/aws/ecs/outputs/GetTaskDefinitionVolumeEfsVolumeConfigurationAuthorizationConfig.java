// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig {
    /**
     * @return Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.
     * 
     */
    private String accessPointId;
    /**
     * @return Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: `ENABLED`, `DISABLED`. If this parameter is omitted, the default value of `DISABLED` is used.
     * 
     */
    private String iam;

    private GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig() {}
    /**
     * @return Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.
     * 
     */
    public String accessPointId() {
        return this.accessPointId;
    }
    /**
     * @return Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: `ENABLED`, `DISABLED`. If this parameter is omitted, the default value of `DISABLED` is used.
     * 
     */
    public String iam() {
        return this.iam;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessPointId;
        private String iam;
        public Builder() {}
        public Builder(GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointId = defaults.accessPointId;
    	      this.iam = defaults.iam;
        }

        @CustomType.Setter
        public Builder accessPointId(String accessPointId) {
            if (accessPointId == null) {
              throw new MissingRequiredPropertyException("GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig", "accessPointId");
            }
            this.accessPointId = accessPointId;
            return this;
        }
        @CustomType.Setter
        public Builder iam(String iam) {
            if (iam == null) {
              throw new MissingRequiredPropertyException("GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig", "iam");
            }
            this.iam = iam;
            return this;
        }
        public GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig build() {
            final var _resultValue = new GetTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig();
            _resultValue.accessPointId = accessPointId;
            _resultValue.iam = iam;
            return _resultValue;
        }
    }
}
