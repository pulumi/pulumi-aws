// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice;

import com.pulumi.aws.vpclattice.inputs.ServiceNetworkResourceAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceNetworkResourceAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceNetworkResourceAssociationArgs Empty = new ServiceNetworkResourceAssociationArgs();

    /**
     * Identifier of Resource Configuration to associate to the Service Network.
     * 
     */
    @Import(name="resourceConfigurationIdentifier", required=true)
    private Output<String> resourceConfigurationIdentifier;

    /**
     * @return Identifier of Resource Configuration to associate to the Service Network.
     * 
     */
    public Output<String> resourceConfigurationIdentifier() {
        return this.resourceConfigurationIdentifier;
    }

    /**
     * Identifier of the Service Network to associate the Resource to.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="serviceNetworkIdentifier", required=true)
    private Output<String> serviceNetworkIdentifier;

    /**
     * @return Identifier of the Service Network to associate the Resource to.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> serviceNetworkIdentifier() {
        return this.serviceNetworkIdentifier;
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<ServiceNetworkResourceAssociationTimeoutsArgs> timeouts;

    public Optional<Output<ServiceNetworkResourceAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ServiceNetworkResourceAssociationArgs() {}

    private ServiceNetworkResourceAssociationArgs(ServiceNetworkResourceAssociationArgs $) {
        this.resourceConfigurationIdentifier = $.resourceConfigurationIdentifier;
        this.serviceNetworkIdentifier = $.serviceNetworkIdentifier;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceNetworkResourceAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceNetworkResourceAssociationArgs $;

        public Builder() {
            $ = new ServiceNetworkResourceAssociationArgs();
        }

        public Builder(ServiceNetworkResourceAssociationArgs defaults) {
            $ = new ServiceNetworkResourceAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceConfigurationIdentifier Identifier of Resource Configuration to associate to the Service Network.
         * 
         * @return builder
         * 
         */
        public Builder resourceConfigurationIdentifier(Output<String> resourceConfigurationIdentifier) {
            $.resourceConfigurationIdentifier = resourceConfigurationIdentifier;
            return this;
        }

        /**
         * @param resourceConfigurationIdentifier Identifier of Resource Configuration to associate to the Service Network.
         * 
         * @return builder
         * 
         */
        public Builder resourceConfigurationIdentifier(String resourceConfigurationIdentifier) {
            return resourceConfigurationIdentifier(Output.of(resourceConfigurationIdentifier));
        }

        /**
         * @param serviceNetworkIdentifier Identifier of the Service Network to associate the Resource to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceNetworkIdentifier(Output<String> serviceNetworkIdentifier) {
            $.serviceNetworkIdentifier = serviceNetworkIdentifier;
            return this;
        }

        /**
         * @param serviceNetworkIdentifier Identifier of the Service Network to associate the Resource to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceNetworkIdentifier(String serviceNetworkIdentifier) {
            return serviceNetworkIdentifier(Output.of(serviceNetworkIdentifier));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<ServiceNetworkResourceAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ServiceNetworkResourceAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ServiceNetworkResourceAssociationArgs build() {
            if ($.resourceConfigurationIdentifier == null) {
                throw new MissingRequiredPropertyException("ServiceNetworkResourceAssociationArgs", "resourceConfigurationIdentifier");
            }
            if ($.serviceNetworkIdentifier == null) {
                throw new MissingRequiredPropertyException("ServiceNetworkResourceAssociationArgs", "serviceNetworkIdentifier");
            }
            return $;
        }
    }

}
