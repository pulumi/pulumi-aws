// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AggregationFunction;
import com.pulumi.aws.quicksight.outputs.Column;
import com.pulumi.aws.quicksight.outputs.NumericalAggregation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class ReferenceLineDataConfigurationDynamicConfiguration {
    private NumericalAggregation calculation;
    private Column column;
    private AggregationFunction measureAggregationFunction;

    private ReferenceLineDataConfigurationDynamicConfiguration() {}
    public NumericalAggregation calculation() {
        return this.calculation;
    }
    public Column column() {
        return this.column;
    }
    public AggregationFunction measureAggregationFunction() {
        return this.measureAggregationFunction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReferenceLineDataConfigurationDynamicConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private NumericalAggregation calculation;
        private Column column;
        private AggregationFunction measureAggregationFunction;
        public Builder() {}
        public Builder(ReferenceLineDataConfigurationDynamicConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calculation = defaults.calculation;
    	      this.column = defaults.column;
    	      this.measureAggregationFunction = defaults.measureAggregationFunction;
        }

        @CustomType.Setter
        public Builder calculation(NumericalAggregation calculation) {
            if (calculation == null) {
              throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfiguration", "calculation");
            }
            this.calculation = calculation;
            return this;
        }
        @CustomType.Setter
        public Builder column(Column column) {
            if (column == null) {
              throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfiguration", "column");
            }
            this.column = column;
            return this;
        }
        @CustomType.Setter
        public Builder measureAggregationFunction(AggregationFunction measureAggregationFunction) {
            if (measureAggregationFunction == null) {
              throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfiguration", "measureAggregationFunction");
            }
            this.measureAggregationFunction = measureAggregationFunction;
            return this;
        }
        public ReferenceLineDataConfigurationDynamicConfiguration build() {
            final var _resultValue = new ReferenceLineDataConfigurationDynamicConfiguration();
            _resultValue.calculation = calculation;
            _resultValue.column = column;
            _resultValue.measureAggregationFunction = measureAggregationFunction;
            return _resultValue;
        }
    }
}
