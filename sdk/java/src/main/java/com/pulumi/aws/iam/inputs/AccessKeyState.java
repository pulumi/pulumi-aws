// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessKeyState extends com.pulumi.resources.ResourceArgs {

    public static final AccessKeyState Empty = new AccessKeyState();

    @Import(name="createDate")
    private @Nullable Output<String> createDate;

    public Optional<Output<String>> createDate() {
        return Optional.ofNullable(this.createDate);
    }

    @Import(name="encryptedSecret")
    private @Nullable Output<String> encryptedSecret;

    public Optional<Output<String>> encryptedSecret() {
        return Optional.ofNullable(this.encryptedSecret);
    }

    @Import(name="encryptedSesSmtpPasswordV4")
    private @Nullable Output<String> encryptedSesSmtpPasswordV4;

    public Optional<Output<String>> encryptedSesSmtpPasswordV4() {
        return Optional.ofNullable(this.encryptedSesSmtpPasswordV4);
    }

    @Import(name="keyFingerprint")
    private @Nullable Output<String> keyFingerprint;

    public Optional<Output<String>> keyFingerprint() {
        return Optional.ofNullable(this.keyFingerprint);
    }

    @Import(name="pgpKey")
    private @Nullable Output<String> pgpKey;

    public Optional<Output<String>> pgpKey() {
        return Optional.ofNullable(this.pgpKey);
    }

    @Import(name="secret")
    private @Nullable Output<String> secret;

    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    @Import(name="sesSmtpPasswordV4")
    private @Nullable Output<String> sesSmtpPasswordV4;

    public Optional<Output<String>> sesSmtpPasswordV4() {
        return Optional.ofNullable(this.sesSmtpPasswordV4);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="user")
    private @Nullable Output<String> user;

    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private AccessKeyState() {}

    private AccessKeyState(AccessKeyState $) {
        this.createDate = $.createDate;
        this.encryptedSecret = $.encryptedSecret;
        this.encryptedSesSmtpPasswordV4 = $.encryptedSesSmtpPasswordV4;
        this.keyFingerprint = $.keyFingerprint;
        this.pgpKey = $.pgpKey;
        this.secret = $.secret;
        this.sesSmtpPasswordV4 = $.sesSmtpPasswordV4;
        this.status = $.status;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessKeyState $;

        public Builder() {
            $ = new AccessKeyState();
        }

        public Builder(AccessKeyState defaults) {
            $ = new AccessKeyState(Objects.requireNonNull(defaults));
        }

        public Builder createDate(@Nullable Output<String> createDate) {
            $.createDate = createDate;
            return this;
        }

        public Builder createDate(String createDate) {
            return createDate(Output.of(createDate));
        }

        public Builder encryptedSecret(@Nullable Output<String> encryptedSecret) {
            $.encryptedSecret = encryptedSecret;
            return this;
        }

        public Builder encryptedSecret(String encryptedSecret) {
            return encryptedSecret(Output.of(encryptedSecret));
        }

        public Builder encryptedSesSmtpPasswordV4(@Nullable Output<String> encryptedSesSmtpPasswordV4) {
            $.encryptedSesSmtpPasswordV4 = encryptedSesSmtpPasswordV4;
            return this;
        }

        public Builder encryptedSesSmtpPasswordV4(String encryptedSesSmtpPasswordV4) {
            return encryptedSesSmtpPasswordV4(Output.of(encryptedSesSmtpPasswordV4));
        }

        public Builder keyFingerprint(@Nullable Output<String> keyFingerprint) {
            $.keyFingerprint = keyFingerprint;
            return this;
        }

        public Builder keyFingerprint(String keyFingerprint) {
            return keyFingerprint(Output.of(keyFingerprint));
        }

        public Builder pgpKey(@Nullable Output<String> pgpKey) {
            $.pgpKey = pgpKey;
            return this;
        }

        public Builder pgpKey(String pgpKey) {
            return pgpKey(Output.of(pgpKey));
        }

        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public Builder sesSmtpPasswordV4(@Nullable Output<String> sesSmtpPasswordV4) {
            $.sesSmtpPasswordV4 = sesSmtpPasswordV4;
            return this;
        }

        public Builder sesSmtpPasswordV4(String sesSmtpPasswordV4) {
            return sesSmtpPasswordV4(Output.of(sesSmtpPasswordV4));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        public Builder user(String user) {
            return user(Output.of(user));
        }

        public AccessKeyState build() {
            return $;
        }
    }

}
