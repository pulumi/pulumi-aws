// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class StreamStreamModeDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamStreamModeDetailsArgs Empty = new StreamStreamModeDetailsArgs();

    /**
     * Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
     * 
     */
    @Import(name="streamMode", required=true)
    private Output<String> streamMode;

    /**
     * @return Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
     * 
     */
    public Output<String> streamMode() {
        return this.streamMode;
    }

    private StreamStreamModeDetailsArgs() {}

    private StreamStreamModeDetailsArgs(StreamStreamModeDetailsArgs $) {
        this.streamMode = $.streamMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamStreamModeDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamStreamModeDetailsArgs $;

        public Builder() {
            $ = new StreamStreamModeDetailsArgs();
        }

        public Builder(StreamStreamModeDetailsArgs defaults) {
            $ = new StreamStreamModeDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param streamMode Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
         * 
         * @return builder
         * 
         */
        public Builder streamMode(Output<String> streamMode) {
            $.streamMode = streamMode;
            return this;
        }

        /**
         * @param streamMode Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
         * 
         * @return builder
         * 
         */
        public Builder streamMode(String streamMode) {
            return streamMode(Output.of(streamMode));
        }

        public StreamStreamModeDetailsArgs build() {
            if ($.streamMode == null) {
                throw new MissingRequiredPropertyException("StreamStreamModeDetailsArgs", "streamMode");
            }
            return $;
        }
    }

}
