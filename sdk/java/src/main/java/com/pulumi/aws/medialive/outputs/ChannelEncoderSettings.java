// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAudioDescription;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAvailBlanking;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsOutputGroup;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsTimecodeConfig;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsVideoDescription;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettings {
    /**
     * @return Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions;
    /**
     * @return Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsAvailBlanking availBlanking;
    /**
     * @return Output groups for the channel. See Output Groups for more details.
     * 
     */
    private List<ChannelEncoderSettingsOutputGroup> outputGroups;
    /**
     * @return Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    private ChannelEncoderSettingsTimecodeConfig timecodeConfig;
    /**
     * @return Video Descriptions. See Video Descriptions for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions;

    private ChannelEncoderSettings() {}
    /**
     * @return Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    public List<ChannelEncoderSettingsAudioDescription> audioDescriptions() {
        return this.audioDescriptions == null ? List.of() : this.audioDescriptions;
    }
    /**
     * @return Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsAvailBlanking> availBlanking() {
        return Optional.ofNullable(this.availBlanking);
    }
    /**
     * @return Output groups for the channel. See Output Groups for more details.
     * 
     */
    public List<ChannelEncoderSettingsOutputGroup> outputGroups() {
        return this.outputGroups;
    }
    /**
     * @return Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    public ChannelEncoderSettingsTimecodeConfig timecodeConfig() {
        return this.timecodeConfig;
    }
    /**
     * @return Video Descriptions. See Video Descriptions for more details.
     * 
     */
    public List<ChannelEncoderSettingsVideoDescription> videoDescriptions() {
        return this.videoDescriptions == null ? List.of() : this.videoDescriptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions;
        private @Nullable ChannelEncoderSettingsAvailBlanking availBlanking;
        private List<ChannelEncoderSettingsOutputGroup> outputGroups;
        private ChannelEncoderSettingsTimecodeConfig timecodeConfig;
        private @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions;
        public Builder() {}
        public Builder(ChannelEncoderSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audioDescriptions = defaults.audioDescriptions;
    	      this.availBlanking = defaults.availBlanking;
    	      this.outputGroups = defaults.outputGroups;
    	      this.timecodeConfig = defaults.timecodeConfig;
    	      this.videoDescriptions = defaults.videoDescriptions;
        }

        @CustomType.Setter
        public Builder audioDescriptions(@Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions) {
            this.audioDescriptions = audioDescriptions;
            return this;
        }
        public Builder audioDescriptions(ChannelEncoderSettingsAudioDescription... audioDescriptions) {
            return audioDescriptions(List.of(audioDescriptions));
        }
        @CustomType.Setter
        public Builder availBlanking(@Nullable ChannelEncoderSettingsAvailBlanking availBlanking) {
            this.availBlanking = availBlanking;
            return this;
        }
        @CustomType.Setter
        public Builder outputGroups(List<ChannelEncoderSettingsOutputGroup> outputGroups) {
            this.outputGroups = Objects.requireNonNull(outputGroups);
            return this;
        }
        public Builder outputGroups(ChannelEncoderSettingsOutputGroup... outputGroups) {
            return outputGroups(List.of(outputGroups));
        }
        @CustomType.Setter
        public Builder timecodeConfig(ChannelEncoderSettingsTimecodeConfig timecodeConfig) {
            this.timecodeConfig = Objects.requireNonNull(timecodeConfig);
            return this;
        }
        @CustomType.Setter
        public Builder videoDescriptions(@Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions) {
            this.videoDescriptions = videoDescriptions;
            return this;
        }
        public Builder videoDescriptions(ChannelEncoderSettingsVideoDescription... videoDescriptions) {
            return videoDescriptions(List.of(videoDescriptions));
        }
        public ChannelEncoderSettings build() {
            final var o = new ChannelEncoderSettings();
            o.audioDescriptions = audioDescriptions;
            o.availBlanking = availBlanking;
            o.outputGroups = outputGroups;
            o.timecodeConfig = timecodeConfig;
            o.videoDescriptions = videoDescriptions;
            return o;
        }
    }
}
