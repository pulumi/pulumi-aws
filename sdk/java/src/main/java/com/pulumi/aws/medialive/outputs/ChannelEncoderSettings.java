// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAudioDescription;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAvailBlanking;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsCaptionDescription;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsGlobalConfiguration;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsMotionGraphicsConfiguration;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsNielsenConfiguration;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsOutputGroup;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsTimecodeConfig;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsVideoDescription;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettings {
    /**
     * @return Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions;
    /**
     * @return Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsAvailBlanking availBlanking;
    /**
     * @return Caption Descriptions. See Caption Descriptions for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsCaptionDescription> captionDescriptions;
    /**
     * @return Configuration settings that apply to the event as a whole. See Global Configuration for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsGlobalConfiguration globalConfiguration;
    /**
     * @return Settings for motion graphics. See Motion Graphics Configuration for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration;
    /**
     * @return Nielsen configuration settings. See Nielsen Configuration for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsNielsenConfiguration nielsenConfiguration;
    /**
     * @return Output groups for the channel. See Output Groups for more details.
     * 
     */
    private List<ChannelEncoderSettingsOutputGroup> outputGroups;
    /**
     * @return Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    private ChannelEncoderSettingsTimecodeConfig timecodeConfig;
    /**
     * @return Video Descriptions. See Video Descriptions for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions;

    private ChannelEncoderSettings() {}
    /**
     * @return Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    public List<ChannelEncoderSettingsAudioDescription> audioDescriptions() {
        return this.audioDescriptions == null ? List.of() : this.audioDescriptions;
    }
    /**
     * @return Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsAvailBlanking> availBlanking() {
        return Optional.ofNullable(this.availBlanking);
    }
    /**
     * @return Caption Descriptions. See Caption Descriptions for more details.
     * 
     */
    public List<ChannelEncoderSettingsCaptionDescription> captionDescriptions() {
        return this.captionDescriptions == null ? List.of() : this.captionDescriptions;
    }
    /**
     * @return Configuration settings that apply to the event as a whole. See Global Configuration for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsGlobalConfiguration> globalConfiguration() {
        return Optional.ofNullable(this.globalConfiguration);
    }
    /**
     * @return Settings for motion graphics. See Motion Graphics Configuration for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsMotionGraphicsConfiguration> motionGraphicsConfiguration() {
        return Optional.ofNullable(this.motionGraphicsConfiguration);
    }
    /**
     * @return Nielsen configuration settings. See Nielsen Configuration for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsNielsenConfiguration> nielsenConfiguration() {
        return Optional.ofNullable(this.nielsenConfiguration);
    }
    /**
     * @return Output groups for the channel. See Output Groups for more details.
     * 
     */
    public List<ChannelEncoderSettingsOutputGroup> outputGroups() {
        return this.outputGroups;
    }
    /**
     * @return Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    public ChannelEncoderSettingsTimecodeConfig timecodeConfig() {
        return this.timecodeConfig;
    }
    /**
     * @return Video Descriptions. See Video Descriptions for more details.
     * 
     */
    public List<ChannelEncoderSettingsVideoDescription> videoDescriptions() {
        return this.videoDescriptions == null ? List.of() : this.videoDescriptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions;
        private @Nullable ChannelEncoderSettingsAvailBlanking availBlanking;
        private @Nullable List<ChannelEncoderSettingsCaptionDescription> captionDescriptions;
        private @Nullable ChannelEncoderSettingsGlobalConfiguration globalConfiguration;
        private @Nullable ChannelEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration;
        private @Nullable ChannelEncoderSettingsNielsenConfiguration nielsenConfiguration;
        private List<ChannelEncoderSettingsOutputGroup> outputGroups;
        private ChannelEncoderSettingsTimecodeConfig timecodeConfig;
        private @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions;
        public Builder() {}
        public Builder(ChannelEncoderSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audioDescriptions = defaults.audioDescriptions;
    	      this.availBlanking = defaults.availBlanking;
    	      this.captionDescriptions = defaults.captionDescriptions;
    	      this.globalConfiguration = defaults.globalConfiguration;
    	      this.motionGraphicsConfiguration = defaults.motionGraphicsConfiguration;
    	      this.nielsenConfiguration = defaults.nielsenConfiguration;
    	      this.outputGroups = defaults.outputGroups;
    	      this.timecodeConfig = defaults.timecodeConfig;
    	      this.videoDescriptions = defaults.videoDescriptions;
        }

        @CustomType.Setter
        public Builder audioDescriptions(@Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions) {

            this.audioDescriptions = audioDescriptions;
            return this;
        }
        public Builder audioDescriptions(ChannelEncoderSettingsAudioDescription... audioDescriptions) {
            return audioDescriptions(List.of(audioDescriptions));
        }
        @CustomType.Setter
        public Builder availBlanking(@Nullable ChannelEncoderSettingsAvailBlanking availBlanking) {

            this.availBlanking = availBlanking;
            return this;
        }
        @CustomType.Setter
        public Builder captionDescriptions(@Nullable List<ChannelEncoderSettingsCaptionDescription> captionDescriptions) {

            this.captionDescriptions = captionDescriptions;
            return this;
        }
        public Builder captionDescriptions(ChannelEncoderSettingsCaptionDescription... captionDescriptions) {
            return captionDescriptions(List.of(captionDescriptions));
        }
        @CustomType.Setter
        public Builder globalConfiguration(@Nullable ChannelEncoderSettingsGlobalConfiguration globalConfiguration) {

            this.globalConfiguration = globalConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder motionGraphicsConfiguration(@Nullable ChannelEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration) {

            this.motionGraphicsConfiguration = motionGraphicsConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder nielsenConfiguration(@Nullable ChannelEncoderSettingsNielsenConfiguration nielsenConfiguration) {

            this.nielsenConfiguration = nielsenConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder outputGroups(List<ChannelEncoderSettingsOutputGroup> outputGroups) {
            if (outputGroups == null) {
              throw new MissingRequiredPropertyException("ChannelEncoderSettings", "outputGroups");
            }
            this.outputGroups = outputGroups;
            return this;
        }
        public Builder outputGroups(ChannelEncoderSettingsOutputGroup... outputGroups) {
            return outputGroups(List.of(outputGroups));
        }
        @CustomType.Setter
        public Builder timecodeConfig(ChannelEncoderSettingsTimecodeConfig timecodeConfig) {
            if (timecodeConfig == null) {
              throw new MissingRequiredPropertyException("ChannelEncoderSettings", "timecodeConfig");
            }
            this.timecodeConfig = timecodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder videoDescriptions(@Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions) {

            this.videoDescriptions = videoDescriptions;
            return this;
        }
        public Builder videoDescriptions(ChannelEncoderSettingsVideoDescription... videoDescriptions) {
            return videoDescriptions(List.of(videoDescriptions));
        }
        public ChannelEncoderSettings build() {
            final var _resultValue = new ChannelEncoderSettings();
            _resultValue.audioDescriptions = audioDescriptions;
            _resultValue.availBlanking = availBlanking;
            _resultValue.captionDescriptions = captionDescriptions;
            _resultValue.globalConfiguration = globalConfiguration;
            _resultValue.motionGraphicsConfiguration = motionGraphicsConfiguration;
            _resultValue.nielsenConfiguration = nielsenConfiguration;
            _resultValue.outputGroups = outputGroups;
            _resultValue.timecodeConfig = timecodeConfig;
            _resultValue.videoDescriptions = videoDescriptions;
            return _resultValue;
        }
    }
}
