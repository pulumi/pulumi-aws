// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs Empty = new V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs();

    /**
     * Specifies whether the bot will wait for a user to respond.
     * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
     * If the active field isn&#39;t specified, the default is `true`.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Specifies whether the bot will wait for a user to respond.
     * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
     * If the active field isn&#39;t specified, the default is `true`.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
     * See the `continue_response` argument reference below.
     * 
     */
    @Import(name="continueResponses")
    private @Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs>> continueResponses;

    /**
     * @return Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
     * See the `continue_response` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs>>> continueResponses() {
        return Optional.ofNullable(this.continueResponses);
    }

    /**
     * Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
     * See the `still_waiting_response` argument reference below.
     * 
     */
    @Import(name="stillWaitingResponses")
    private @Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs>> stillWaitingResponses;

    /**
     * @return Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
     * See the `still_waiting_response` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs>>> stillWaitingResponses() {
        return Optional.ofNullable(this.stillWaitingResponses);
    }

    /**
     * Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
     * See the `waiting_response` argument reference below.
     * 
     */
    @Import(name="waitingResponses")
    private @Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs>> waitingResponses;

    /**
     * @return Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
     * See the `waiting_response` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs>>> waitingResponses() {
        return Optional.ofNullable(this.waitingResponses);
    }

    private V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs() {}

    private V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs $) {
        this.active = $.active;
        this.continueResponses = $.continueResponses;
        this.stillWaitingResponses = $.stillWaitingResponses;
        this.waitingResponses = $.waitingResponses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs $;

        public Builder() {
            $ = new V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs();
        }

        public Builder(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs defaults) {
            $ = new V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Specifies whether the bot will wait for a user to respond.
         * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
         * If the active field isn&#39;t specified, the default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Specifies whether the bot will wait for a user to respond.
         * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
         * If the active field isn&#39;t specified, the default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param continueResponses Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
         * See the `continue_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder continueResponses(@Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs>> continueResponses) {
            $.continueResponses = continueResponses;
            return this;
        }

        /**
         * @param continueResponses Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
         * See the `continue_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder continueResponses(List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs> continueResponses) {
            return continueResponses(Output.of(continueResponses));
        }

        /**
         * @param continueResponses Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
         * See the `continue_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder continueResponses(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs... continueResponses) {
            return continueResponses(List.of(continueResponses));
        }

        /**
         * @param stillWaitingResponses Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
         * See the `still_waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder stillWaitingResponses(@Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs>> stillWaitingResponses) {
            $.stillWaitingResponses = stillWaitingResponses;
            return this;
        }

        /**
         * @param stillWaitingResponses Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
         * See the `still_waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder stillWaitingResponses(List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs> stillWaitingResponses) {
            return stillWaitingResponses(Output.of(stillWaitingResponses));
        }

        /**
         * @param stillWaitingResponses Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
         * See the `still_waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder stillWaitingResponses(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs... stillWaitingResponses) {
            return stillWaitingResponses(List.of(stillWaitingResponses));
        }

        /**
         * @param waitingResponses Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
         * See the `waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder waitingResponses(@Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs>> waitingResponses) {
            $.waitingResponses = waitingResponses;
            return this;
        }

        /**
         * @param waitingResponses Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
         * See the `waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder waitingResponses(List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs> waitingResponses) {
            return waitingResponses(Output.of(waitingResponses));
        }

        /**
         * @param waitingResponses Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
         * See the `waiting_response` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder waitingResponses(V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs... waitingResponses) {
            return waitingResponses(List.of(waitingResponses));
        }

        public V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs build() {
            return $;
        }
    }

}
