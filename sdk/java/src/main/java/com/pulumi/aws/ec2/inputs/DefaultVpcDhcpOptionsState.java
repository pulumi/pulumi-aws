// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultVpcDhcpOptionsState extends com.pulumi.resources.ResourceArgs {

    public static final DefaultVpcDhcpOptionsState Empty = new DefaultVpcDhcpOptionsState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    @Import(name="domainNameServers")
    private @Nullable Output<String> domainNameServers;

    public Optional<Output<String>> domainNameServers() {
        return Optional.ofNullable(this.domainNameServers);
    }

    @Import(name="netbiosNameServers")
    private @Nullable Output<String> netbiosNameServers;

    public Optional<Output<String>> netbiosNameServers() {
        return Optional.ofNullable(this.netbiosNameServers);
    }

    @Import(name="netbiosNodeType")
    private @Nullable Output<String> netbiosNodeType;

    public Optional<Output<String>> netbiosNodeType() {
        return Optional.ofNullable(this.netbiosNodeType);
    }

    @Import(name="ntpServers")
    private @Nullable Output<String> ntpServers;

    public Optional<Output<String>> ntpServers() {
        return Optional.ofNullable(this.ntpServers);
    }

    @Import(name="ownerId")
    private @Nullable Output<String> ownerId;

    public Optional<Output<String>> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DefaultVpcDhcpOptionsState() {}

    private DefaultVpcDhcpOptionsState(DefaultVpcDhcpOptionsState $) {
        this.arn = $.arn;
        this.domainName = $.domainName;
        this.domainNameServers = $.domainNameServers;
        this.netbiosNameServers = $.netbiosNameServers;
        this.netbiosNodeType = $.netbiosNodeType;
        this.ntpServers = $.ntpServers;
        this.ownerId = $.ownerId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultVpcDhcpOptionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultVpcDhcpOptionsState $;

        public Builder() {
            $ = new DefaultVpcDhcpOptionsState();
        }

        public Builder(DefaultVpcDhcpOptionsState defaults) {
            $ = new DefaultVpcDhcpOptionsState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder domainNameServers(@Nullable Output<String> domainNameServers) {
            $.domainNameServers = domainNameServers;
            return this;
        }

        public Builder domainNameServers(String domainNameServers) {
            return domainNameServers(Output.of(domainNameServers));
        }

        public Builder netbiosNameServers(@Nullable Output<String> netbiosNameServers) {
            $.netbiosNameServers = netbiosNameServers;
            return this;
        }

        public Builder netbiosNameServers(String netbiosNameServers) {
            return netbiosNameServers(Output.of(netbiosNameServers));
        }

        public Builder netbiosNodeType(@Nullable Output<String> netbiosNodeType) {
            $.netbiosNodeType = netbiosNodeType;
            return this;
        }

        public Builder netbiosNodeType(String netbiosNodeType) {
            return netbiosNodeType(Output.of(netbiosNodeType));
        }

        public Builder ntpServers(@Nullable Output<String> ntpServers) {
            $.ntpServers = ntpServers;
            return this;
        }

        public Builder ntpServers(String ntpServers) {
            return ntpServers(Output.of(ntpServers));
        }

        public Builder ownerId(@Nullable Output<String> ownerId) {
            $.ownerId = ownerId;
            return this;
        }

        public Builder ownerId(String ownerId) {
            return ownerId(Output.of(ownerId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DefaultVpcDhcpOptionsState build() {
            return $;
        }
    }

}
