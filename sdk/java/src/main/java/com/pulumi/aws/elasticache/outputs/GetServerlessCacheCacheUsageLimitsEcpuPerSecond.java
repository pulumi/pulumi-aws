// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetServerlessCacheCacheUsageLimitsEcpuPerSecond {
    /**
     * @return The maximum number of ECPUs the cache can consume per second.
     * 
     */
    private Integer maximum;
    /**
     * @return The minimum number of ECPUs the cache can consume per second.
     * 
     */
    private Integer minimum;

    private GetServerlessCacheCacheUsageLimitsEcpuPerSecond() {}
    /**
     * @return The maximum number of ECPUs the cache can consume per second.
     * 
     */
    public Integer maximum() {
        return this.maximum;
    }
    /**
     * @return The minimum number of ECPUs the cache can consume per second.
     * 
     */
    public Integer minimum() {
        return this.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerlessCacheCacheUsageLimitsEcpuPerSecond defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maximum;
        private Integer minimum;
        public Builder() {}
        public Builder(GetServerlessCacheCacheUsageLimitsEcpuPerSecond defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximum = defaults.maximum;
    	      this.minimum = defaults.minimum;
        }

        @CustomType.Setter
        public Builder maximum(Integer maximum) {
            if (maximum == null) {
              throw new MissingRequiredPropertyException("GetServerlessCacheCacheUsageLimitsEcpuPerSecond", "maximum");
            }
            this.maximum = maximum;
            return this;
        }
        @CustomType.Setter
        public Builder minimum(Integer minimum) {
            if (minimum == null) {
              throw new MissingRequiredPropertyException("GetServerlessCacheCacheUsageLimitsEcpuPerSecond", "minimum");
            }
            this.minimum = minimum;
            return this;
        }
        public GetServerlessCacheCacheUsageLimitsEcpuPerSecond build() {
            final var _resultValue = new GetServerlessCacheCacheUsageLimitsEcpuPerSecond();
            _resultValue.maximum = maximum;
            _resultValue.minimum = minimum;
            return _resultValue;
        }
    }
}
