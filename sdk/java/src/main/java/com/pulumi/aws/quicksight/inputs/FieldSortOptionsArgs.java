// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnSortArgs;
import com.pulumi.aws.quicksight.inputs.FieldSortArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FieldSortOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FieldSortOptionsArgs Empty = new FieldSortOptionsArgs();

    @Import(name="columnSort")
    private @Nullable Output<ColumnSortArgs> columnSort;

    public Optional<Output<ColumnSortArgs>> columnSort() {
        return Optional.ofNullable(this.columnSort);
    }

    @Import(name="fieldSort")
    private @Nullable Output<FieldSortArgs> fieldSort;

    public Optional<Output<FieldSortArgs>> fieldSort() {
        return Optional.ofNullable(this.fieldSort);
    }

    private FieldSortOptionsArgs() {}

    private FieldSortOptionsArgs(FieldSortOptionsArgs $) {
        this.columnSort = $.columnSort;
        this.fieldSort = $.fieldSort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FieldSortOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FieldSortOptionsArgs $;

        public Builder() {
            $ = new FieldSortOptionsArgs();
        }

        public Builder(FieldSortOptionsArgs defaults) {
            $ = new FieldSortOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder columnSort(@Nullable Output<ColumnSortArgs> columnSort) {
            $.columnSort = columnSort;
            return this;
        }

        public Builder columnSort(ColumnSortArgs columnSort) {
            return columnSort(Output.of(columnSort));
        }

        public Builder fieldSort(@Nullable Output<FieldSortArgs> fieldSort) {
            $.fieldSort = fieldSort;
            return this;
        }

        public Builder fieldSort(FieldSortArgs fieldSort) {
            return fieldSort(Output.of(fieldSort));
        }

        public FieldSortOptionsArgs build() {
            return $;
        }
    }

}
