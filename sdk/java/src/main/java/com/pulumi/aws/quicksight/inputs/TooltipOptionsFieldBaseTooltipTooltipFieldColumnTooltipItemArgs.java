// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AggregationFunctionArgs;
import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs Empty = new TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs();

    @Import(name="aggregation")
    private @Nullable Output<AggregationFunctionArgs> aggregation;

    public Optional<Output<AggregationFunctionArgs>> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="label")
    private @Nullable Output<String> label;

    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs() {}

    private TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs(TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs $) {
        this.aggregation = $.aggregation;
        this.column = $.column;
        this.label = $.label;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs $;

        public Builder() {
            $ = new TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs();
        }

        public Builder(TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs defaults) {
            $ = new TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(@Nullable Output<AggregationFunctionArgs> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder aggregation(AggregationFunctionArgs aggregation) {
            return aggregation(Output.of(aggregation));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        public Builder label(String label) {
            return label(Output.of(label));
        }

        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("TooltipOptionsFieldBaseTooltipTooltipFieldColumnTooltipItemArgs", "column");
            }
            return $;
        }
    }

}
