// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.CloudVmClusterDataCollectionOptionsArgs;
import com.pulumi.aws.odb.inputs.CloudVmClusterIormConfigCachArgs;
import com.pulumi.aws.odb.inputs.CloudVmClusterTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudVmClusterState extends com.pulumi.resources.ResourceArgs {

    public static final CloudVmClusterState Empty = new CloudVmClusterState();

    /**
     * The Amazon Resource Name (ARN) for the cloud vm cluster.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) for the cloud vm cluster.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="cloudExadataInfrastructureId")
    private @Nullable Output<String> cloudExadataInfrastructureId;

    /**
     * @return The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> cloudExadataInfrastructureId() {
        return Optional.ofNullable(this.cloudExadataInfrastructureId);
    }

    /**
     * The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
     * 
     */
    @Import(name="computeModel")
    private @Nullable Output<String> computeModel;

    /**
     * @return The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
     * 
     */
    public Optional<Output<String>> computeModel() {
        return Optional.ofNullable(this.computeModel);
    }

    /**
     * The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * The timestamp when the VM cluster was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The timestamp when the VM cluster was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The set of preferences for the various diagnostic collection options for the VM cluster.
     * 
     */
    @Import(name="dataCollectionOptions")
    private @Nullable Output<CloudVmClusterDataCollectionOptionsArgs> dataCollectionOptions;

    /**
     * @return The set of preferences for the various diagnostic collection options for the VM cluster.
     * 
     */
    public Optional<Output<CloudVmClusterDataCollectionOptionsArgs>> dataCollectionOptions() {
        return Optional.ofNullable(this.dataCollectionOptions);
    }

    /**
     * The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The list of database servers for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="dbServers")
    private @Nullable Output<List<String>> dbServers;

    /**
     * @return The list of database servers for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<List<String>>> dbServers() {
        return Optional.ofNullable(this.dbServers);
    }

    /**
     * The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
     * * `AttrDomain` - The domain name associated with the VM cluster.
     * 
     */
    @Import(name="diskRedundancy")
    private @Nullable Output<String> diskRedundancy;

    /**
     * @return The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
     * * `AttrDomain` - The domain name associated with the VM cluster.
     * 
     */
    public Optional<Output<String>> diskRedundancy() {
        return Optional.ofNullable(this.diskRedundancy);
    }

    /**
     * A user-friendly name for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The domain name associated with the VM cluster.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain name associated with the VM cluster.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
     * 
     */
    @Import(name="giVersion")
    private @Nullable Output<String> giVersion;

    /**
     * @return A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> giVersion() {
        return Optional.ofNullable(this.giVersion);
    }

    /**
     * A complete software version of Oracle Grid Infrastructure (GI).
     * 
     */
    @Import(name="giVersionComputed")
    private @Nullable Output<String> giVersionComputed;

    /**
     * @return A complete software version of Oracle Grid Infrastructure (GI).
     * 
     */
    public Optional<Output<String>> giVersionComputed() {
        return Optional.ofNullable(this.giVersionComputed);
    }

    /**
     * The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
     * 
     */
    @Import(name="hostnamePrefix")
    private @Nullable Output<String> hostnamePrefix;

    /**
     * @return The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> hostnamePrefix() {
        return Optional.ofNullable(this.hostnamePrefix);
    }

    /**
     * The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
     * 
     */
    @Import(name="hostnamePrefixComputed")
    private @Nullable Output<String> hostnamePrefixComputed;

    /**
     * @return The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> hostnamePrefixComputed() {
        return Optional.ofNullable(this.hostnamePrefixComputed);
    }

    /**
     * The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
     * 
     */
    @Import(name="iormConfigCaches")
    private @Nullable Output<List<CloudVmClusterIormConfigCachArgs>> iormConfigCaches;

    /**
     * @return The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
     * 
     */
    public Optional<Output<List<CloudVmClusterIormConfigCachArgs>>> iormConfigCaches() {
        return Optional.ofNullable(this.iormConfigCaches);
    }

    /**
     * Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="isLocalBackupEnabled")
    private @Nullable Output<Boolean> isLocalBackupEnabled;

    /**
     * @return Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Boolean>> isLocalBackupEnabled() {
        return Optional.ofNullable(this.isLocalBackupEnabled);
    }

    /**
     * Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="isSparseDiskgroupEnabled")
    private @Nullable Output<Boolean> isSparseDiskgroupEnabled;

    /**
     * @return Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Boolean>> isSparseDiskgroupEnabled() {
        return Optional.ofNullable(this.isSparseDiskgroupEnabled);
    }

    /**
     * The OCID of the most recent maintenance update history entry.
     * 
     */
    @Import(name="lastUpdateHistoryEntryId")
    private @Nullable Output<String> lastUpdateHistoryEntryId;

    /**
     * @return The OCID of the most recent maintenance update history entry.
     * 
     */
    public Optional<Output<String>> lastUpdateHistoryEntryId() {
        return Optional.ofNullable(this.lastUpdateHistoryEntryId);
    }

    /**
     * The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
     * 
     */
    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    /**
     * @return The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * The listener port number configured on the VM cluster.
     * 
     */
    @Import(name="listenerPort")
    private @Nullable Output<Integer> listenerPort;

    /**
     * @return The listener port number configured on the VM cluster.
     * 
     */
    public Optional<Output<Integer>> listenerPort() {
        return Optional.ofNullable(this.listenerPort);
    }

    /**
     * The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The total number of nodes in the VM cluster.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return The total number of nodes in the VM cluster.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * The name of the OCI resource anchor associated with the VM cluster.
     * 
     */
    @Import(name="ociResourceAnchorName")
    private @Nullable Output<String> ociResourceAnchorName;

    /**
     * @return The name of the OCI resource anchor associated with the VM cluster.
     * 
     */
    public Optional<Output<String>> ociResourceAnchorName() {
        return Optional.ofNullable(this.ociResourceAnchorName);
    }

    /**
     * The HTTPS link to the VM cluster resource in OCI.
     * 
     */
    @Import(name="ociUrl")
    private @Nullable Output<String> ociUrl;

    /**
     * @return The HTTPS link to the VM cluster resource in OCI.
     * 
     */
    public Optional<Output<String>> ociUrl() {
        return Optional.ofNullable(this.ociUrl);
    }

    /**
     * The OCID (Oracle Cloud Identifier) of the VM cluster.
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return The OCID (Oracle Cloud Identifier) of the VM cluster.
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="odbNetworkId")
    private @Nullable Output<String> odbNetworkId;

    /**
     * @return The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> odbNetworkId() {
        return Optional.ofNullable(this.odbNetworkId);
    }

    /**
     * The percentage of progress made on the current operation for the VM cluster.
     * 
     */
    @Import(name="percentProgress")
    private @Nullable Output<Double> percentProgress;

    /**
     * @return The percentage of progress made on the current operation for the VM cluster.
     * 
     */
    public Optional<Output<Double>> percentProgress() {
        return Optional.ofNullable(this.percentProgress);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
     * 
     */
    @Import(name="scanDnsName")
    private @Nullable Output<String> scanDnsName;

    /**
     * @return The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
     * 
     */
    public Optional<Output<String>> scanDnsName() {
        return Optional.ofNullable(this.scanDnsName);
    }

    /**
     * The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
     * 
     */
    @Import(name="scanDnsRecordId")
    private @Nullable Output<String> scanDnsRecordId;

    /**
     * @return The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
     * 
     */
    public Optional<Output<String>> scanDnsRecordId() {
        return Optional.ofNullable(this.scanDnsRecordId);
    }

    /**
     * The list of OCIDs for SCAN IP addresses associated with the VM cluster.
     * 
     */
    @Import(name="scanIpIds")
    private @Nullable Output<List<String>> scanIpIds;

    /**
     * @return The list of OCIDs for SCAN IP addresses associated with the VM cluster.
     * 
     */
    public Optional<Output<List<String>>> scanIpIds() {
        return Optional.ofNullable(this.scanIpIds);
    }

    /**
     * The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
     * 
     */
    @Import(name="scanListenerPortTcp")
    private @Nullable Output<Integer> scanListenerPortTcp;

    /**
     * @return The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
     * 
     */
    public Optional<Output<Integer>> scanListenerPortTcp() {
        return Optional.ofNullable(this.scanListenerPortTcp);
    }

    /**
     * The hardware model name of the Exadata infrastructure running the VM cluster.
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return The hardware model name of the Exadata infrastructure running the VM cluster.
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="sshPublicKeys")
    private @Nullable Output<List<String>> sshPublicKeys;

    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<List<String>>> sshPublicKeys() {
        return Optional.ofNullable(this.sshPublicKeys);
    }

    /**
     * The current lifecycle status of the VM cluster.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current lifecycle status of the VM cluster.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Additional information regarding the current status of the VM cluster.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return Additional information regarding the current status of the VM cluster.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * The local node storage allocated to the VM cluster, in gigabytes (GB).
     * 
     */
    @Import(name="storageSizeInGbs")
    private @Nullable Output<Integer> storageSizeInGbs;

    /**
     * @return The local node storage allocated to the VM cluster, in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> storageSizeInGbs() {
        return Optional.ofNullable(this.storageSizeInGbs);
    }

    /**
     * The operating system version of the image chosen for the VM cluster.
     * 
     */
    @Import(name="systemVersion")
    private @Nullable Output<String> systemVersion;

    /**
     * @return The operating system version of the image chosen for the VM cluster.
     * 
     */
    public Optional<Output<String>> systemVersion() {
        return Optional.ofNullable(this.systemVersion);
    }

    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The combined set of user-defined and provider-defined tags.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return The combined set of user-defined and provider-defined tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudVmClusterTimeoutsArgs> timeouts;

    public Optional<Output<CloudVmClusterTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The configured time zone of the VM cluster. Changing this will create a new resource.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return The configured time zone of the VM cluster. Changing this will create a new resource.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
     * 
     */
    @Import(name="vipIds")
    private @Nullable Output<List<String>> vipIds;

    /**
     * @return The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
     * 
     */
    public Optional<Output<List<String>>> vipIds() {
        return Optional.ofNullable(this.vipIds);
    }

    private CloudVmClusterState() {}

    private CloudVmClusterState(CloudVmClusterState $) {
        this.arn = $.arn;
        this.cloudExadataInfrastructureId = $.cloudExadataInfrastructureId;
        this.clusterName = $.clusterName;
        this.computeModel = $.computeModel;
        this.cpuCoreCount = $.cpuCoreCount;
        this.createdAt = $.createdAt;
        this.dataCollectionOptions = $.dataCollectionOptions;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServers = $.dbServers;
        this.diskRedundancy = $.diskRedundancy;
        this.displayName = $.displayName;
        this.domain = $.domain;
        this.giVersion = $.giVersion;
        this.giVersionComputed = $.giVersionComputed;
        this.hostnamePrefix = $.hostnamePrefix;
        this.hostnamePrefixComputed = $.hostnamePrefixComputed;
        this.iormConfigCaches = $.iormConfigCaches;
        this.isLocalBackupEnabled = $.isLocalBackupEnabled;
        this.isSparseDiskgroupEnabled = $.isSparseDiskgroupEnabled;
        this.lastUpdateHistoryEntryId = $.lastUpdateHistoryEntryId;
        this.licenseModel = $.licenseModel;
        this.listenerPort = $.listenerPort;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.nodeCount = $.nodeCount;
        this.ociResourceAnchorName = $.ociResourceAnchorName;
        this.ociUrl = $.ociUrl;
        this.ocid = $.ocid;
        this.odbNetworkId = $.odbNetworkId;
        this.percentProgress = $.percentProgress;
        this.region = $.region;
        this.scanDnsName = $.scanDnsName;
        this.scanDnsRecordId = $.scanDnsRecordId;
        this.scanIpIds = $.scanIpIds;
        this.scanListenerPortTcp = $.scanListenerPortTcp;
        this.shape = $.shape;
        this.sshPublicKeys = $.sshPublicKeys;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.storageSizeInGbs = $.storageSizeInGbs;
        this.systemVersion = $.systemVersion;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.timezone = $.timezone;
        this.vipIds = $.vipIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudVmClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudVmClusterState $;

        public Builder() {
            $ = new CloudVmClusterState();
        }

        public Builder(CloudVmClusterState defaults) {
            $ = new CloudVmClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) for the cloud vm cluster.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) for the cloud vm cluster.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param cloudExadataInfrastructureId The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureId(@Nullable Output<String> cloudExadataInfrastructureId) {
            $.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }

        /**
         * @param cloudExadataInfrastructureId The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            return cloudExadataInfrastructureId(Output.of(cloudExadataInfrastructureId));
        }

        /**
         * @param clusterName The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param computeModel The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(@Nullable Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        /**
         * @param cpuCoreCount The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param createdAt The timestamp when the VM cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The timestamp when the VM cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param dataCollectionOptions The set of preferences for the various diagnostic collection options for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionOptions(@Nullable Output<CloudVmClusterDataCollectionOptionsArgs> dataCollectionOptions) {
            $.dataCollectionOptions = dataCollectionOptions;
            return this;
        }

        /**
         * @param dataCollectionOptions The set of preferences for the various diagnostic collection options for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionOptions(CloudVmClusterDataCollectionOptionsArgs dataCollectionOptions) {
            return dataCollectionOptions(Output.of(dataCollectionOptions));
        }

        /**
         * @param dataStorageSizeInTbs The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param dbNodeStorageSizeInGbs The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServers The list of database servers for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(@Nullable Output<List<String>> dbServers) {
            $.dbServers = dbServers;
            return this;
        }

        /**
         * @param dbServers The list of database servers for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(List<String> dbServers) {
            return dbServers(Output.of(dbServers));
        }

        /**
         * @param dbServers The list of database servers for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }

        /**
         * @param diskRedundancy The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
         * * `AttrDomain` - The domain name associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder diskRedundancy(@Nullable Output<String> diskRedundancy) {
            $.diskRedundancy = diskRedundancy;
            return this;
        }

        /**
         * @param diskRedundancy The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
         * * `AttrDomain` - The domain name associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder diskRedundancy(String diskRedundancy) {
            return diskRedundancy(Output.of(diskRedundancy));
        }

        /**
         * @param displayName A user-friendly name for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param domain The domain name associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain name associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param giVersion A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder giVersion(@Nullable Output<String> giVersion) {
            $.giVersion = giVersion;
            return this;
        }

        /**
         * @param giVersion A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder giVersion(String giVersion) {
            return giVersion(Output.of(giVersion));
        }

        /**
         * @param giVersionComputed A complete software version of Oracle Grid Infrastructure (GI).
         * 
         * @return builder
         * 
         */
        public Builder giVersionComputed(@Nullable Output<String> giVersionComputed) {
            $.giVersionComputed = giVersionComputed;
            return this;
        }

        /**
         * @param giVersionComputed A complete software version of Oracle Grid Infrastructure (GI).
         * 
         * @return builder
         * 
         */
        public Builder giVersionComputed(String giVersionComputed) {
            return giVersionComputed(Output.of(giVersionComputed));
        }

        /**
         * @param hostnamePrefix The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder hostnamePrefix(@Nullable Output<String> hostnamePrefix) {
            $.hostnamePrefix = hostnamePrefix;
            return this;
        }

        /**
         * @param hostnamePrefix The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder hostnamePrefix(String hostnamePrefix) {
            return hostnamePrefix(Output.of(hostnamePrefix));
        }

        /**
         * @param hostnamePrefixComputed The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder hostnamePrefixComputed(@Nullable Output<String> hostnamePrefixComputed) {
            $.hostnamePrefixComputed = hostnamePrefixComputed;
            return this;
        }

        /**
         * @param hostnamePrefixComputed The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder hostnamePrefixComputed(String hostnamePrefixComputed) {
            return hostnamePrefixComputed(Output.of(hostnamePrefixComputed));
        }

        /**
         * @param iormConfigCaches The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder iormConfigCaches(@Nullable Output<List<CloudVmClusterIormConfigCachArgs>> iormConfigCaches) {
            $.iormConfigCaches = iormConfigCaches;
            return this;
        }

        /**
         * @param iormConfigCaches The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder iormConfigCaches(List<CloudVmClusterIormConfigCachArgs> iormConfigCaches) {
            return iormConfigCaches(Output.of(iormConfigCaches));
        }

        /**
         * @param iormConfigCaches The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder iormConfigCaches(CloudVmClusterIormConfigCachArgs... iormConfigCaches) {
            return iormConfigCaches(List.of(iormConfigCaches));
        }

        /**
         * @param isLocalBackupEnabled Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder isLocalBackupEnabled(@Nullable Output<Boolean> isLocalBackupEnabled) {
            $.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }

        /**
         * @param isLocalBackupEnabled Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder isLocalBackupEnabled(Boolean isLocalBackupEnabled) {
            return isLocalBackupEnabled(Output.of(isLocalBackupEnabled));
        }

        /**
         * @param isSparseDiskgroupEnabled Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder isSparseDiskgroupEnabled(@Nullable Output<Boolean> isSparseDiskgroupEnabled) {
            $.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            return this;
        }

        /**
         * @param isSparseDiskgroupEnabled Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder isSparseDiskgroupEnabled(Boolean isSparseDiskgroupEnabled) {
            return isSparseDiskgroupEnabled(Output.of(isSparseDiskgroupEnabled));
        }

        /**
         * @param lastUpdateHistoryEntryId The OCID of the most recent maintenance update history entry.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdateHistoryEntryId(@Nullable Output<String> lastUpdateHistoryEntryId) {
            $.lastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            return this;
        }

        /**
         * @param lastUpdateHistoryEntryId The OCID of the most recent maintenance update history entry.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdateHistoryEntryId(String lastUpdateHistoryEntryId) {
            return lastUpdateHistoryEntryId(Output.of(lastUpdateHistoryEntryId));
        }

        /**
         * @param licenseModel The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param listenerPort The listener port number configured on the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(@Nullable Output<Integer> listenerPort) {
            $.listenerPort = listenerPort;
            return this;
        }

        /**
         * @param listenerPort The listener port number configured on the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(Integer listenerPort) {
            return listenerPort(Output.of(listenerPort));
        }

        /**
         * @param memorySizeInGbs The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param nodeCount The total number of nodes in the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount The total number of nodes in the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(@Nullable Output<String> ociResourceAnchorName) {
            $.ociResourceAnchorName = ociResourceAnchorName;
            return this;
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(String ociResourceAnchorName) {
            return ociResourceAnchorName(Output.of(ociResourceAnchorName));
        }

        /**
         * @param ociUrl The HTTPS link to the VM cluster resource in OCI.
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(@Nullable Output<String> ociUrl) {
            $.ociUrl = ociUrl;
            return this;
        }

        /**
         * @param ociUrl The HTTPS link to the VM cluster resource in OCI.
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(String ociUrl) {
            return ociUrl(Output.of(ociUrl));
        }

        /**
         * @param ocid The OCID (Oracle Cloud Identifier) of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid The OCID (Oracle Cloud Identifier) of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param odbNetworkId The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder odbNetworkId(@Nullable Output<String> odbNetworkId) {
            $.odbNetworkId = odbNetworkId;
            return this;
        }

        /**
         * @param odbNetworkId The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder odbNetworkId(String odbNetworkId) {
            return odbNetworkId(Output.of(odbNetworkId));
        }

        /**
         * @param percentProgress The percentage of progress made on the current operation for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(@Nullable Output<Double> percentProgress) {
            $.percentProgress = percentProgress;
            return this;
        }

        /**
         * @param percentProgress The percentage of progress made on the current operation for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(Double percentProgress) {
            return percentProgress(Output.of(percentProgress));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param scanDnsName The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanDnsName(@Nullable Output<String> scanDnsName) {
            $.scanDnsName = scanDnsName;
            return this;
        }

        /**
         * @param scanDnsName The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanDnsName(String scanDnsName) {
            return scanDnsName(Output.of(scanDnsName));
        }

        /**
         * @param scanDnsRecordId The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanDnsRecordId(@Nullable Output<String> scanDnsRecordId) {
            $.scanDnsRecordId = scanDnsRecordId;
            return this;
        }

        /**
         * @param scanDnsRecordId The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanDnsRecordId(String scanDnsRecordId) {
            return scanDnsRecordId(Output.of(scanDnsRecordId));
        }

        /**
         * @param scanIpIds The list of OCIDs for SCAN IP addresses associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanIpIds(@Nullable Output<List<String>> scanIpIds) {
            $.scanIpIds = scanIpIds;
            return this;
        }

        /**
         * @param scanIpIds The list of OCIDs for SCAN IP addresses associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanIpIds(List<String> scanIpIds) {
            return scanIpIds(Output.of(scanIpIds));
        }

        /**
         * @param scanIpIds The list of OCIDs for SCAN IP addresses associated with the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder scanIpIds(String... scanIpIds) {
            return scanIpIds(List.of(scanIpIds));
        }

        /**
         * @param scanListenerPortTcp The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder scanListenerPortTcp(@Nullable Output<Integer> scanListenerPortTcp) {
            $.scanListenerPortTcp = scanListenerPortTcp;
            return this;
        }

        /**
         * @param scanListenerPortTcp The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder scanListenerPortTcp(Integer scanListenerPortTcp) {
            return scanListenerPortTcp(Output.of(scanListenerPortTcp));
        }

        /**
         * @param shape The hardware model name of the Exadata infrastructure running the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The hardware model name of the Exadata infrastructure running the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(@Nullable Output<List<String>> sshPublicKeys) {
            $.sshPublicKeys = sshPublicKeys;
            return this;
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            return sshPublicKeys(Output.of(sshPublicKeys));
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }

        /**
         * @param status The current lifecycle status of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current lifecycle status of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason Additional information regarding the current status of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason Additional information regarding the current status of the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param storageSizeInGbs The local node storage allocated to the VM cluster, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInGbs(@Nullable Output<Integer> storageSizeInGbs) {
            $.storageSizeInGbs = storageSizeInGbs;
            return this;
        }

        /**
         * @param storageSizeInGbs The local node storage allocated to the VM cluster, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInGbs(Integer storageSizeInGbs) {
            return storageSizeInGbs(Output.of(storageSizeInGbs));
        }

        /**
         * @param systemVersion The operating system version of the image chosen for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder systemVersion(@Nullable Output<String> systemVersion) {
            $.systemVersion = systemVersion;
            return this;
        }

        /**
         * @param systemVersion The operating system version of the image chosen for the VM cluster.
         * 
         * @return builder
         * 
         */
        public Builder systemVersion(String systemVersion) {
            return systemVersion(Output.of(systemVersion));
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll The combined set of user-defined and provider-defined tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll The combined set of user-defined and provider-defined tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<CloudVmClusterTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudVmClusterTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param timezone The configured time zone of the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone The configured time zone of the VM cluster. Changing this will create a new resource.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param vipIds The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
         * 
         * @return builder
         * 
         */
        public Builder vipIds(@Nullable Output<List<String>> vipIds) {
            $.vipIds = vipIds;
            return this;
        }

        /**
         * @param vipIds The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
         * 
         * @return builder
         * 
         */
        public Builder vipIds(List<String> vipIds) {
            return vipIds(Output.of(vipIds));
        }

        /**
         * @param vipIds The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
         * 
         * @return builder
         * 
         */
        public Builder vipIds(String... vipIds) {
            return vipIds(List.of(vipIds));
        }

        public CloudVmClusterState build() {
            return $;
        }
    }

}
