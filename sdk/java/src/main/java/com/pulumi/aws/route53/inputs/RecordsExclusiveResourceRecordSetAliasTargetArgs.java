// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class RecordsExclusiveResourceRecordSetAliasTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordsExclusiveResourceRecordSetAliasTargetArgs Empty = new RecordsExclusiveResourceRecordSetAliasTargetArgs();

    /**
     * DNS domain name for another resource record set in this hosted zone.
     * 
     */
    @Import(name="dnsName", required=true)
    private Output<String> dnsName;

    /**
     * @return DNS domain name for another resource record set in this hosted zone.
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }

    /**
     * Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [the AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health) for additional details.
     * 
     */
    @Import(name="evaluateTargetHealth", required=true)
    private Output<Boolean> evaluateTargetHealth;

    /**
     * @return Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [the AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health) for additional details.
     * 
     */
    public Output<Boolean> evaluateTargetHealth() {
        return this.evaluateTargetHealth;
    }

    /**
     * Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, AWS Global Accelerator, or Route 53 hosted zone. See `resource_elb.zone_id` for an example.
     * 
     */
    @Import(name="hostedZoneId", required=true)
    private Output<String> hostedZoneId;

    /**
     * @return Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, AWS Global Accelerator, or Route 53 hosted zone. See `resource_elb.zone_id` for an example.
     * 
     */
    public Output<String> hostedZoneId() {
        return this.hostedZoneId;
    }

    private RecordsExclusiveResourceRecordSetAliasTargetArgs() {}

    private RecordsExclusiveResourceRecordSetAliasTargetArgs(RecordsExclusiveResourceRecordSetAliasTargetArgs $) {
        this.dnsName = $.dnsName;
        this.evaluateTargetHealth = $.evaluateTargetHealth;
        this.hostedZoneId = $.hostedZoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordsExclusiveResourceRecordSetAliasTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordsExclusiveResourceRecordSetAliasTargetArgs $;

        public Builder() {
            $ = new RecordsExclusiveResourceRecordSetAliasTargetArgs();
        }

        public Builder(RecordsExclusiveResourceRecordSetAliasTargetArgs defaults) {
            $ = new RecordsExclusiveResourceRecordSetAliasTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsName DNS domain name for another resource record set in this hosted zone.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName DNS domain name for another resource record set in this hosted zone.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param evaluateTargetHealth Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [the AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder evaluateTargetHealth(Output<Boolean> evaluateTargetHealth) {
            $.evaluateTargetHealth = evaluateTargetHealth;
            return this;
        }

        /**
         * @param evaluateTargetHealth Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [the AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder evaluateTargetHealth(Boolean evaluateTargetHealth) {
            return evaluateTargetHealth(Output.of(evaluateTargetHealth));
        }

        /**
         * @param hostedZoneId Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, AWS Global Accelerator, or Route 53 hosted zone. See `resource_elb.zone_id` for an example.
         * 
         * @return builder
         * 
         */
        public Builder hostedZoneId(Output<String> hostedZoneId) {
            $.hostedZoneId = hostedZoneId;
            return this;
        }

        /**
         * @param hostedZoneId Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, AWS Global Accelerator, or Route 53 hosted zone. See `resource_elb.zone_id` for an example.
         * 
         * @return builder
         * 
         */
        public Builder hostedZoneId(String hostedZoneId) {
            return hostedZoneId(Output.of(hostedZoneId));
        }

        public RecordsExclusiveResourceRecordSetAliasTargetArgs build() {
            if ($.dnsName == null) {
                throw new MissingRequiredPropertyException("RecordsExclusiveResourceRecordSetAliasTargetArgs", "dnsName");
            }
            if ($.evaluateTargetHealth == null) {
                throw new MissingRequiredPropertyException("RecordsExclusiveResourceRecordSetAliasTargetArgs", "evaluateTargetHealth");
            }
            if ($.hostedZoneId == null) {
                throw new MissingRequiredPropertyException("RecordsExclusiveResourceRecordSetAliasTargetArgs", "hostedZoneId");
            }
            return $;
        }
    }

}
