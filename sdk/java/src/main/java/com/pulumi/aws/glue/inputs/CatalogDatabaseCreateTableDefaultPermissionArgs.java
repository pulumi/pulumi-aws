// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.aws.glue.inputs.CatalogDatabaseCreateTableDefaultPermissionPrincipalArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CatalogDatabaseCreateTableDefaultPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CatalogDatabaseCreateTableDefaultPermissionArgs Empty = new CatalogDatabaseCreateTableDefaultPermissionArgs();

    /**
     * The permissions that are granted to the principal.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<String>> permissions;

    /**
     * @return The permissions that are granted to the principal.
     * 
     */
    public Optional<Output<List<String>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The principal who is granted permissions.. See `principal` below.
     * 
     */
    @Import(name="principal")
    private @Nullable Output<CatalogDatabaseCreateTableDefaultPermissionPrincipalArgs> principal;

    /**
     * @return The principal who is granted permissions.. See `principal` below.
     * 
     */
    public Optional<Output<CatalogDatabaseCreateTableDefaultPermissionPrincipalArgs>> principal() {
        return Optional.ofNullable(this.principal);
    }

    private CatalogDatabaseCreateTableDefaultPermissionArgs() {}

    private CatalogDatabaseCreateTableDefaultPermissionArgs(CatalogDatabaseCreateTableDefaultPermissionArgs $) {
        this.permissions = $.permissions;
        this.principal = $.principal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogDatabaseCreateTableDefaultPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogDatabaseCreateTableDefaultPermissionArgs $;

        public Builder() {
            $ = new CatalogDatabaseCreateTableDefaultPermissionArgs();
        }

        public Builder(CatalogDatabaseCreateTableDefaultPermissionArgs defaults) {
            $ = new CatalogDatabaseCreateTableDefaultPermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions The permissions that are granted to the principal.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<String>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The permissions that are granted to the principal.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<String> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The permissions that are granted to the principal.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param principal The principal who is granted permissions.. See `principal` below.
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<CatalogDatabaseCreateTableDefaultPermissionPrincipalArgs> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal The principal who is granted permissions.. See `principal` below.
         * 
         * @return builder
         * 
         */
        public Builder principal(CatalogDatabaseCreateTableDefaultPermissionPrincipalArgs principal) {
            return principal(Output.of(principal));
        }

        public CatalogDatabaseCreateTableDefaultPermissionArgs build() {
            return $;
        }
    }

}
