// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FiltersTimeRangeFilterExcludePeriodConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FiltersTimeRangeFilterExcludePeriodConfigurationArgs Empty = new FiltersTimeRangeFilterExcludePeriodConfigurationArgs();

    @Import(name="amount", required=true)
    private Output<Integer> amount;

    public Output<Integer> amount() {
        return this.amount;
    }

    @Import(name="granularity", required=true)
    private Output<String> granularity;

    public Output<String> granularity() {
        return this.granularity;
    }

    /**
     * The dashboard creation status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The dashboard creation status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private FiltersTimeRangeFilterExcludePeriodConfigurationArgs() {}

    private FiltersTimeRangeFilterExcludePeriodConfigurationArgs(FiltersTimeRangeFilterExcludePeriodConfigurationArgs $) {
        this.amount = $.amount;
        this.granularity = $.granularity;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FiltersTimeRangeFilterExcludePeriodConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FiltersTimeRangeFilterExcludePeriodConfigurationArgs $;

        public Builder() {
            $ = new FiltersTimeRangeFilterExcludePeriodConfigurationArgs();
        }

        public Builder(FiltersTimeRangeFilterExcludePeriodConfigurationArgs defaults) {
            $ = new FiltersTimeRangeFilterExcludePeriodConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder amount(Output<Integer> amount) {
            $.amount = amount;
            return this;
        }

        public Builder amount(Integer amount) {
            return amount(Output.of(amount));
        }

        public Builder granularity(Output<String> granularity) {
            $.granularity = granularity;
            return this;
        }

        public Builder granularity(String granularity) {
            return granularity(Output.of(granularity));
        }

        /**
         * @param status The dashboard creation status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The dashboard creation status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public FiltersTimeRangeFilterExcludePeriodConfigurationArgs build() {
            if ($.amount == null) {
                throw new MissingRequiredPropertyException("FiltersTimeRangeFilterExcludePeriodConfigurationArgs", "amount");
            }
            if ($.granularity == null) {
                throw new MissingRequiredPropertyException("FiltersTimeRangeFilterExcludePeriodConfigurationArgs", "granularity");
            }
            return $;
        }
    }

}
