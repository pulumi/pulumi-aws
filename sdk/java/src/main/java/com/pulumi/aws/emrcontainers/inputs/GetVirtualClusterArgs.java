// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrcontainers.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVirtualClusterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualClusterArgs Empty = new GetVirtualClusterArgs();

    /**
     * Key-value mapping of resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * ID of the cluster.
     * 
     */
    @Import(name="virtualClusterId", required=true)
    private Output<String> virtualClusterId;

    /**
     * @return ID of the cluster.
     * 
     */
    public Output<String> virtualClusterId() {
        return this.virtualClusterId;
    }

    private GetVirtualClusterArgs() {}

    private GetVirtualClusterArgs(GetVirtualClusterArgs $) {
        this.tags = $.tags;
        this.virtualClusterId = $.virtualClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualClusterArgs $;

        public Builder() {
            $ = new GetVirtualClusterArgs();
        }

        public Builder(GetVirtualClusterArgs defaults) {
            $ = new GetVirtualClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tags Key-value mapping of resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualClusterId ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder virtualClusterId(Output<String> virtualClusterId) {
            $.virtualClusterId = virtualClusterId;
            return this;
        }

        /**
         * @param virtualClusterId ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder virtualClusterId(String virtualClusterId) {
            return virtualClusterId(Output.of(virtualClusterId));
        }

        public GetVirtualClusterArgs build() {
            $.virtualClusterId = Objects.requireNonNull($.virtualClusterId, "expected parameter 'virtualClusterId' to be non-null");
            return $;
        }
    }

}
