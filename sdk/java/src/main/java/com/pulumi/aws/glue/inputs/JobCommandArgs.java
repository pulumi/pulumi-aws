// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobCommandArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobCommandArgs Empty = new JobCommandArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="pythonVersion")
    private @Nullable Output<String> pythonVersion;

    public Optional<Output<String>> pythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }

    @Import(name="scriptLocation", required=true)
    private Output<String> scriptLocation;

    public Output<String> scriptLocation() {
        return this.scriptLocation;
    }

    private JobCommandArgs() {}

    private JobCommandArgs(JobCommandArgs $) {
        this.name = $.name;
        this.pythonVersion = $.pythonVersion;
        this.scriptLocation = $.scriptLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobCommandArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobCommandArgs $;

        public Builder() {
            $ = new JobCommandArgs();
        }

        public Builder(JobCommandArgs defaults) {
            $ = new JobCommandArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pythonVersion(@Nullable Output<String> pythonVersion) {
            $.pythonVersion = pythonVersion;
            return this;
        }

        public Builder pythonVersion(String pythonVersion) {
            return pythonVersion(Output.of(pythonVersion));
        }

        public Builder scriptLocation(Output<String> scriptLocation) {
            $.scriptLocation = scriptLocation;
            return this;
        }

        public Builder scriptLocation(String scriptLocation) {
            return scriptLocation(Output.of(scriptLocation));
        }

        public JobCommandArgs build() {
            $.scriptLocation = Objects.requireNonNull($.scriptLocation, "expected parameter 'scriptLocation' to be non-null");
            return $;
        }
    }

}
