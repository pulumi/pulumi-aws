// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetInferenceProfileArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInferenceProfileArgs Empty = new GetInferenceProfileArgs();

    /**
     * Inference Profile identifier.
     * 
     */
    @Import(name="inferenceProfileId", required=true)
    private Output<String> inferenceProfileId;

    /**
     * @return Inference Profile identifier.
     * 
     */
    public Output<String> inferenceProfileId() {
        return this.inferenceProfileId;
    }

    private GetInferenceProfileArgs() {}

    private GetInferenceProfileArgs(GetInferenceProfileArgs $) {
        this.inferenceProfileId = $.inferenceProfileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInferenceProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInferenceProfileArgs $;

        public Builder() {
            $ = new GetInferenceProfileArgs();
        }

        public Builder(GetInferenceProfileArgs defaults) {
            $ = new GetInferenceProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inferenceProfileId Inference Profile identifier.
         * 
         * @return builder
         * 
         */
        public Builder inferenceProfileId(Output<String> inferenceProfileId) {
            $.inferenceProfileId = inferenceProfileId;
            return this;
        }

        /**
         * @param inferenceProfileId Inference Profile identifier.
         * 
         * @return builder
         * 
         */
        public Builder inferenceProfileId(String inferenceProfileId) {
            return inferenceProfileId(Output.of(inferenceProfileId));
        }

        public GetInferenceProfileArgs build() {
            if ($.inferenceProfileId == null) {
                throw new MissingRequiredPropertyException("GetInferenceProfileArgs", "inferenceProfileId");
            }
            return $;
        }
    }

}
