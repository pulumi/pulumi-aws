// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentFlowDefinitionNodeInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentFlowDefinitionNodeInputArgs Empty = new AgentFlowDefinitionNodeInputArgs();

    /**
     * How input data flows between iterations in a DoWhile loop.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return How input data flows between iterations in a DoWhile loop.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    @Import(name="expression", required=true)
    private Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }

    /**
     * A name for the flow.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A name for the flow.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private AgentFlowDefinitionNodeInputArgs() {}

    private AgentFlowDefinitionNodeInputArgs(AgentFlowDefinitionNodeInputArgs $) {
        this.category = $.category;
        this.expression = $.expression;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentFlowDefinitionNodeInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentFlowDefinitionNodeInputArgs $;

        public Builder() {
            $ = new AgentFlowDefinitionNodeInputArgs();
        }

        public Builder(AgentFlowDefinitionNodeInputArgs defaults) {
            $ = new AgentFlowDefinitionNodeInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category How input data flows between iterations in a DoWhile loop.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category How input data flows between iterations in a DoWhile loop.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param name A name for the flow.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name for the flow.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AgentFlowDefinitionNodeInputArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("AgentFlowDefinitionNodeInputArgs", "expression");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AgentFlowDefinitionNodeInputArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AgentFlowDefinitionNodeInputArgs", "type");
            }
            return $;
        }
    }

}
