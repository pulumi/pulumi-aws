// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.applicationloadbalancing.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListenerDefaultActionAuthenticateCognito {
    /**
     * @return Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
     * 
     */
    private @Nullable Map<String,String> authenticationRequestExtraParams;
    /**
     * @return Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
     * 
     */
    private @Nullable String onUnauthenticatedRequest;
    /**
     * @return Set of user claims to be requested from the IdP.
     * 
     */
    private @Nullable String scope;
    /**
     * @return Name of the cookie used to maintain session information.
     * 
     */
    private @Nullable String sessionCookieName;
    /**
     * @return Maximum duration of the authentication session, in seconds.
     * 
     */
    private @Nullable Integer sessionTimeout;
    /**
     * @return ARN of the Cognito user pool.
     * 
     */
    private String userPoolArn;
    /**
     * @return ID of the Cognito user pool client.
     * 
     */
    private String userPoolClientId;
    /**
     * @return Domain prefix or fully-qualified domain name of the Cognito user pool.
     * 
     * The following arguments are optional:
     * 
     */
    private String userPoolDomain;

    private ListenerDefaultActionAuthenticateCognito() {}
    /**
     * @return Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
     * 
     */
    public Map<String,String> authenticationRequestExtraParams() {
        return this.authenticationRequestExtraParams == null ? Map.of() : this.authenticationRequestExtraParams;
    }
    /**
     * @return Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
     * 
     */
    public Optional<String> onUnauthenticatedRequest() {
        return Optional.ofNullable(this.onUnauthenticatedRequest);
    }
    /**
     * @return Set of user claims to be requested from the IdP.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Name of the cookie used to maintain session information.
     * 
     */
    public Optional<String> sessionCookieName() {
        return Optional.ofNullable(this.sessionCookieName);
    }
    /**
     * @return Maximum duration of the authentication session, in seconds.
     * 
     */
    public Optional<Integer> sessionTimeout() {
        return Optional.ofNullable(this.sessionTimeout);
    }
    /**
     * @return ARN of the Cognito user pool.
     * 
     */
    public String userPoolArn() {
        return this.userPoolArn;
    }
    /**
     * @return ID of the Cognito user pool client.
     * 
     */
    public String userPoolClientId() {
        return this.userPoolClientId;
    }
    /**
     * @return Domain prefix or fully-qualified domain name of the Cognito user pool.
     * 
     * The following arguments are optional:
     * 
     */
    public String userPoolDomain() {
        return this.userPoolDomain;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerDefaultActionAuthenticateCognito defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> authenticationRequestExtraParams;
        private @Nullable String onUnauthenticatedRequest;
        private @Nullable String scope;
        private @Nullable String sessionCookieName;
        private @Nullable Integer sessionTimeout;
        private String userPoolArn;
        private String userPoolClientId;
        private String userPoolDomain;
        public Builder() {}
        public Builder(ListenerDefaultActionAuthenticateCognito defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationRequestExtraParams = defaults.authenticationRequestExtraParams;
    	      this.onUnauthenticatedRequest = defaults.onUnauthenticatedRequest;
    	      this.scope = defaults.scope;
    	      this.sessionCookieName = defaults.sessionCookieName;
    	      this.sessionTimeout = defaults.sessionTimeout;
    	      this.userPoolArn = defaults.userPoolArn;
    	      this.userPoolClientId = defaults.userPoolClientId;
    	      this.userPoolDomain = defaults.userPoolDomain;
        }

        @CustomType.Setter
        public Builder authenticationRequestExtraParams(@Nullable Map<String,String> authenticationRequestExtraParams) {
            this.authenticationRequestExtraParams = authenticationRequestExtraParams;
            return this;
        }
        @CustomType.Setter
        public Builder onUnauthenticatedRequest(@Nullable String onUnauthenticatedRequest) {
            this.onUnauthenticatedRequest = onUnauthenticatedRequest;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder sessionCookieName(@Nullable String sessionCookieName) {
            this.sessionCookieName = sessionCookieName;
            return this;
        }
        @CustomType.Setter
        public Builder sessionTimeout(@Nullable Integer sessionTimeout) {
            this.sessionTimeout = sessionTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder userPoolArn(String userPoolArn) {
            this.userPoolArn = Objects.requireNonNull(userPoolArn);
            return this;
        }
        @CustomType.Setter
        public Builder userPoolClientId(String userPoolClientId) {
            this.userPoolClientId = Objects.requireNonNull(userPoolClientId);
            return this;
        }
        @CustomType.Setter
        public Builder userPoolDomain(String userPoolDomain) {
            this.userPoolDomain = Objects.requireNonNull(userPoolDomain);
            return this;
        }
        public ListenerDefaultActionAuthenticateCognito build() {
            final var o = new ListenerDefaultActionAuthenticateCognito();
            o.authenticationRequestExtraParams = authenticationRequestExtraParams;
            o.onUnauthenticatedRequest = onUnauthenticatedRequest;
            o.scope = scope;
            o.sessionCookieName = sessionCookieName;
            o.sessionTimeout = sessionTimeout;
            o.userPoolArn = userPoolArn;
            o.userPoolClientId = userPoolClientId;
            o.userPoolDomain = userPoolDomain;
            return o;
        }
    }
}
