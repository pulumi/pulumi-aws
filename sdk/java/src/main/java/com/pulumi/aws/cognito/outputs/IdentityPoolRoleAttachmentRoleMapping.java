// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.aws.cognito.outputs.IdentityPoolRoleAttachmentRoleMappingMappingRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IdentityPoolRoleAttachmentRoleMapping {
    private @Nullable String ambiguousRoleResolution;
    private String identityProvider;
    private @Nullable List<IdentityPoolRoleAttachmentRoleMappingMappingRule> mappingRules;
    private String type;

    private IdentityPoolRoleAttachmentRoleMapping() {}
    public Optional<String> ambiguousRoleResolution() {
        return Optional.ofNullable(this.ambiguousRoleResolution);
    }
    public String identityProvider() {
        return this.identityProvider;
    }
    public List<IdentityPoolRoleAttachmentRoleMappingMappingRule> mappingRules() {
        return this.mappingRules == null ? List.of() : this.mappingRules;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentityPoolRoleAttachmentRoleMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ambiguousRoleResolution;
        private String identityProvider;
        private @Nullable List<IdentityPoolRoleAttachmentRoleMappingMappingRule> mappingRules;
        private String type;
        public Builder() {}
        public Builder(IdentityPoolRoleAttachmentRoleMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ambiguousRoleResolution = defaults.ambiguousRoleResolution;
    	      this.identityProvider = defaults.identityProvider;
    	      this.mappingRules = defaults.mappingRules;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder ambiguousRoleResolution(@Nullable String ambiguousRoleResolution) {
            this.ambiguousRoleResolution = ambiguousRoleResolution;
            return this;
        }
        @CustomType.Setter
        public Builder identityProvider(String identityProvider) {
            this.identityProvider = Objects.requireNonNull(identityProvider);
            return this;
        }
        @CustomType.Setter
        public Builder mappingRules(@Nullable List<IdentityPoolRoleAttachmentRoleMappingMappingRule> mappingRules) {
            this.mappingRules = mappingRules;
            return this;
        }
        public Builder mappingRules(IdentityPoolRoleAttachmentRoleMappingMappingRule... mappingRules) {
            return mappingRules(List.of(mappingRules));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public IdentityPoolRoleAttachmentRoleMapping build() {
            final var o = new IdentityPoolRoleAttachmentRoleMapping();
            o.ambiguousRoleResolution = ambiguousRoleResolution;
            o.identityProvider = identityProvider;
            o.mappingRules = mappingRules;
            o.type = type;
            return o;
        }
    }
}
