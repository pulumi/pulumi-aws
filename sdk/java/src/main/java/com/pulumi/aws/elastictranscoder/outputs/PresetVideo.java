// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PresetVideo {
    private @Nullable String aspectRatio;
    private @Nullable String bitRate;
    private @Nullable String codec;
    private @Nullable String displayAspectRatio;
    private @Nullable String fixedGop;
    private @Nullable String frameRate;
    private @Nullable String keyframesMaxDist;
    private @Nullable String maxFrameRate;
    private @Nullable String maxHeight;
    private @Nullable String maxWidth;
    private @Nullable String paddingPolicy;
    private @Nullable String resolution;
    private @Nullable String sizingPolicy;

    private PresetVideo() {}
    public Optional<String> aspectRatio() {
        return Optional.ofNullable(this.aspectRatio);
    }
    public Optional<String> bitRate() {
        return Optional.ofNullable(this.bitRate);
    }
    public Optional<String> codec() {
        return Optional.ofNullable(this.codec);
    }
    public Optional<String> displayAspectRatio() {
        return Optional.ofNullable(this.displayAspectRatio);
    }
    public Optional<String> fixedGop() {
        return Optional.ofNullable(this.fixedGop);
    }
    public Optional<String> frameRate() {
        return Optional.ofNullable(this.frameRate);
    }
    public Optional<String> keyframesMaxDist() {
        return Optional.ofNullable(this.keyframesMaxDist);
    }
    public Optional<String> maxFrameRate() {
        return Optional.ofNullable(this.maxFrameRate);
    }
    public Optional<String> maxHeight() {
        return Optional.ofNullable(this.maxHeight);
    }
    public Optional<String> maxWidth() {
        return Optional.ofNullable(this.maxWidth);
    }
    public Optional<String> paddingPolicy() {
        return Optional.ofNullable(this.paddingPolicy);
    }
    public Optional<String> resolution() {
        return Optional.ofNullable(this.resolution);
    }
    public Optional<String> sizingPolicy() {
        return Optional.ofNullable(this.sizingPolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PresetVideo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aspectRatio;
        private @Nullable String bitRate;
        private @Nullable String codec;
        private @Nullable String displayAspectRatio;
        private @Nullable String fixedGop;
        private @Nullable String frameRate;
        private @Nullable String keyframesMaxDist;
        private @Nullable String maxFrameRate;
        private @Nullable String maxHeight;
        private @Nullable String maxWidth;
        private @Nullable String paddingPolicy;
        private @Nullable String resolution;
        private @Nullable String sizingPolicy;
        public Builder() {}
        public Builder(PresetVideo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aspectRatio = defaults.aspectRatio;
    	      this.bitRate = defaults.bitRate;
    	      this.codec = defaults.codec;
    	      this.displayAspectRatio = defaults.displayAspectRatio;
    	      this.fixedGop = defaults.fixedGop;
    	      this.frameRate = defaults.frameRate;
    	      this.keyframesMaxDist = defaults.keyframesMaxDist;
    	      this.maxFrameRate = defaults.maxFrameRate;
    	      this.maxHeight = defaults.maxHeight;
    	      this.maxWidth = defaults.maxWidth;
    	      this.paddingPolicy = defaults.paddingPolicy;
    	      this.resolution = defaults.resolution;
    	      this.sizingPolicy = defaults.sizingPolicy;
        }

        @CustomType.Setter
        public Builder aspectRatio(@Nullable String aspectRatio) {
            this.aspectRatio = aspectRatio;
            return this;
        }
        @CustomType.Setter
        public Builder bitRate(@Nullable String bitRate) {
            this.bitRate = bitRate;
            return this;
        }
        @CustomType.Setter
        public Builder codec(@Nullable String codec) {
            this.codec = codec;
            return this;
        }
        @CustomType.Setter
        public Builder displayAspectRatio(@Nullable String displayAspectRatio) {
            this.displayAspectRatio = displayAspectRatio;
            return this;
        }
        @CustomType.Setter
        public Builder fixedGop(@Nullable String fixedGop) {
            this.fixedGop = fixedGop;
            return this;
        }
        @CustomType.Setter
        public Builder frameRate(@Nullable String frameRate) {
            this.frameRate = frameRate;
            return this;
        }
        @CustomType.Setter
        public Builder keyframesMaxDist(@Nullable String keyframesMaxDist) {
            this.keyframesMaxDist = keyframesMaxDist;
            return this;
        }
        @CustomType.Setter
        public Builder maxFrameRate(@Nullable String maxFrameRate) {
            this.maxFrameRate = maxFrameRate;
            return this;
        }
        @CustomType.Setter
        public Builder maxHeight(@Nullable String maxHeight) {
            this.maxHeight = maxHeight;
            return this;
        }
        @CustomType.Setter
        public Builder maxWidth(@Nullable String maxWidth) {
            this.maxWidth = maxWidth;
            return this;
        }
        @CustomType.Setter
        public Builder paddingPolicy(@Nullable String paddingPolicy) {
            this.paddingPolicy = paddingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(@Nullable String resolution) {
            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder sizingPolicy(@Nullable String sizingPolicy) {
            this.sizingPolicy = sizingPolicy;
            return this;
        }
        public PresetVideo build() {
            final var o = new PresetVideo();
            o.aspectRatio = aspectRatio;
            o.bitRate = bitRate;
            o.codec = codec;
            o.displayAspectRatio = displayAspectRatio;
            o.fixedGop = fixedGop;
            o.frameRate = frameRate;
            o.keyframesMaxDist = keyframesMaxDist;
            o.maxFrameRate = maxFrameRate;
            o.maxHeight = maxHeight;
            o.maxWidth = maxWidth;
            o.paddingPolicy = paddingPolicy;
            o.resolution = resolution;
            o.sizingPolicy = sizingPolicy;
            return o;
        }
    }
}
