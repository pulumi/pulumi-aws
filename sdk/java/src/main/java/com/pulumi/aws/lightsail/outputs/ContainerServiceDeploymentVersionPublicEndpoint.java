// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.outputs;

import com.pulumi.aws.lightsail.outputs.ContainerServiceDeploymentVersionPublicEndpointHealthCheck;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ContainerServiceDeploymentVersionPublicEndpoint {
    private String containerName;
    private Integer containerPort;
    private ContainerServiceDeploymentVersionPublicEndpointHealthCheck healthCheck;

    private ContainerServiceDeploymentVersionPublicEndpoint() {}
    public String containerName() {
        return this.containerName;
    }
    public Integer containerPort() {
        return this.containerPort;
    }
    public ContainerServiceDeploymentVersionPublicEndpointHealthCheck healthCheck() {
        return this.healthCheck;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerServiceDeploymentVersionPublicEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String containerName;
        private Integer containerPort;
        private ContainerServiceDeploymentVersionPublicEndpointHealthCheck healthCheck;
        public Builder() {}
        public Builder(ContainerServiceDeploymentVersionPublicEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerName = defaults.containerName;
    	      this.containerPort = defaults.containerPort;
    	      this.healthCheck = defaults.healthCheck;
        }

        @CustomType.Setter
        public Builder containerName(String containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }
        @CustomType.Setter
        public Builder containerPort(Integer containerPort) {
            this.containerPort = Objects.requireNonNull(containerPort);
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(ContainerServiceDeploymentVersionPublicEndpointHealthCheck healthCheck) {
            this.healthCheck = Objects.requireNonNull(healthCheck);
            return this;
        }
        public ContainerServiceDeploymentVersionPublicEndpoint build() {
            final var o = new ContainerServiceDeploymentVersionPublicEndpoint();
            o.containerName = containerName;
            o.containerPort = containerPort;
            o.healthCheck = healthCheck;
            return o;
        }
    }
}
