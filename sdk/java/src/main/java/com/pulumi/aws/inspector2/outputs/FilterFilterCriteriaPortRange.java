// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class FilterFilterCriteriaPortRange {
    /**
     * @return (Required) The beginning of the port range, inclusive.
     * 
     */
    private Integer beginInclusive;
    /**
     * @return (Required) The end of the port range, inclusive.
     * 
     */
    private Integer endInclusive;

    private FilterFilterCriteriaPortRange() {}
    /**
     * @return (Required) The beginning of the port range, inclusive.
     * 
     */
    public Integer beginInclusive() {
        return this.beginInclusive;
    }
    /**
     * @return (Required) The end of the port range, inclusive.
     * 
     */
    public Integer endInclusive() {
        return this.endInclusive;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilterFilterCriteriaPortRange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer beginInclusive;
        private Integer endInclusive;
        public Builder() {}
        public Builder(FilterFilterCriteriaPortRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beginInclusive = defaults.beginInclusive;
    	      this.endInclusive = defaults.endInclusive;
        }

        @CustomType.Setter
        public Builder beginInclusive(Integer beginInclusive) {
            if (beginInclusive == null) {
              throw new MissingRequiredPropertyException("FilterFilterCriteriaPortRange", "beginInclusive");
            }
            this.beginInclusive = beginInclusive;
            return this;
        }
        @CustomType.Setter
        public Builder endInclusive(Integer endInclusive) {
            if (endInclusive == null) {
              throw new MissingRequiredPropertyException("FilterFilterCriteriaPortRange", "endInclusive");
            }
            this.endInclusive = endInclusive;
            return this;
        }
        public FilterFilterCriteriaPortRange build() {
            final var _resultValue = new FilterFilterCriteriaPortRange();
            _resultValue.beginInclusive = beginInclusive;
            _resultValue.endInclusive = endInclusive;
            return _resultValue;
        }
    }
}
