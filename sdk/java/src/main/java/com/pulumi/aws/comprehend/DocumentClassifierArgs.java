// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.comprehend;

import com.pulumi.aws.comprehend.inputs.DocumentClassifierInputDataConfigArgs;
import com.pulumi.aws.comprehend.inputs.DocumentClassifierOutputDataConfigArgs;
import com.pulumi.aws.comprehend.inputs.DocumentClassifierVpcConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DocumentClassifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final DocumentClassifierArgs Empty = new DocumentClassifierArgs();

    @Import(name="dataAccessRoleArn", required=true)
    private Output<String> dataAccessRoleArn;

    public Output<String> dataAccessRoleArn() {
        return this.dataAccessRoleArn;
    }

    @Import(name="inputDataConfig", required=true)
    private Output<DocumentClassifierInputDataConfigArgs> inputDataConfig;

    public Output<DocumentClassifierInputDataConfigArgs> inputDataConfig() {
        return this.inputDataConfig;
    }

    @Import(name="languageCode", required=true)
    private Output<String> languageCode;

    public Output<String> languageCode() {
        return this.languageCode;
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="modelKmsKeyId")
    private @Nullable Output<String> modelKmsKeyId;

    public Optional<Output<String>> modelKmsKeyId() {
        return Optional.ofNullable(this.modelKmsKeyId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="outputDataConfig")
    private @Nullable Output<DocumentClassifierOutputDataConfigArgs> outputDataConfig;

    public Optional<Output<DocumentClassifierOutputDataConfigArgs>> outputDataConfig() {
        return Optional.ofNullable(this.outputDataConfig);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="versionName")
    private @Nullable Output<String> versionName;

    public Optional<Output<String>> versionName() {
        return Optional.ofNullable(this.versionName);
    }

    @Import(name="versionNamePrefix")
    private @Nullable Output<String> versionNamePrefix;

    public Optional<Output<String>> versionNamePrefix() {
        return Optional.ofNullable(this.versionNamePrefix);
    }

    @Import(name="volumeKmsKeyId")
    private @Nullable Output<String> volumeKmsKeyId;

    public Optional<Output<String>> volumeKmsKeyId() {
        return Optional.ofNullable(this.volumeKmsKeyId);
    }

    @Import(name="vpcConfig")
    private @Nullable Output<DocumentClassifierVpcConfigArgs> vpcConfig;

    public Optional<Output<DocumentClassifierVpcConfigArgs>> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private DocumentClassifierArgs() {}

    private DocumentClassifierArgs(DocumentClassifierArgs $) {
        this.dataAccessRoleArn = $.dataAccessRoleArn;
        this.inputDataConfig = $.inputDataConfig;
        this.languageCode = $.languageCode;
        this.mode = $.mode;
        this.modelKmsKeyId = $.modelKmsKeyId;
        this.name = $.name;
        this.outputDataConfig = $.outputDataConfig;
        this.tags = $.tags;
        this.versionName = $.versionName;
        this.versionNamePrefix = $.versionNamePrefix;
        this.volumeKmsKeyId = $.volumeKmsKeyId;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DocumentClassifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DocumentClassifierArgs $;

        public Builder() {
            $ = new DocumentClassifierArgs();
        }

        public Builder(DocumentClassifierArgs defaults) {
            $ = new DocumentClassifierArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataAccessRoleArn(Output<String> dataAccessRoleArn) {
            $.dataAccessRoleArn = dataAccessRoleArn;
            return this;
        }

        public Builder dataAccessRoleArn(String dataAccessRoleArn) {
            return dataAccessRoleArn(Output.of(dataAccessRoleArn));
        }

        public Builder inputDataConfig(Output<DocumentClassifierInputDataConfigArgs> inputDataConfig) {
            $.inputDataConfig = inputDataConfig;
            return this;
        }

        public Builder inputDataConfig(DocumentClassifierInputDataConfigArgs inputDataConfig) {
            return inputDataConfig(Output.of(inputDataConfig));
        }

        public Builder languageCode(Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder modelKmsKeyId(@Nullable Output<String> modelKmsKeyId) {
            $.modelKmsKeyId = modelKmsKeyId;
            return this;
        }

        public Builder modelKmsKeyId(String modelKmsKeyId) {
            return modelKmsKeyId(Output.of(modelKmsKeyId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder outputDataConfig(@Nullable Output<DocumentClassifierOutputDataConfigArgs> outputDataConfig) {
            $.outputDataConfig = outputDataConfig;
            return this;
        }

        public Builder outputDataConfig(DocumentClassifierOutputDataConfigArgs outputDataConfig) {
            return outputDataConfig(Output.of(outputDataConfig));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder versionName(@Nullable Output<String> versionName) {
            $.versionName = versionName;
            return this;
        }

        public Builder versionName(String versionName) {
            return versionName(Output.of(versionName));
        }

        public Builder versionNamePrefix(@Nullable Output<String> versionNamePrefix) {
            $.versionNamePrefix = versionNamePrefix;
            return this;
        }

        public Builder versionNamePrefix(String versionNamePrefix) {
            return versionNamePrefix(Output.of(versionNamePrefix));
        }

        public Builder volumeKmsKeyId(@Nullable Output<String> volumeKmsKeyId) {
            $.volumeKmsKeyId = volumeKmsKeyId;
            return this;
        }

        public Builder volumeKmsKeyId(String volumeKmsKeyId) {
            return volumeKmsKeyId(Output.of(volumeKmsKeyId));
        }

        public Builder vpcConfig(@Nullable Output<DocumentClassifierVpcConfigArgs> vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        public Builder vpcConfig(DocumentClassifierVpcConfigArgs vpcConfig) {
            return vpcConfig(Output.of(vpcConfig));
        }

        public DocumentClassifierArgs build() {
            $.dataAccessRoleArn = Objects.requireNonNull($.dataAccessRoleArn, "expected parameter 'dataAccessRoleArn' to be non-null");
            $.inputDataConfig = Objects.requireNonNull($.inputDataConfig, "expected parameter 'inputDataConfig' to be non-null");
            $.languageCode = Objects.requireNonNull($.languageCode, "expected parameter 'languageCode' to be non-null");
            return $;
        }
    }

}
