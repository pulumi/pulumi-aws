// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ThemeConfigurationSheetTileLayoutGutterArgs;
import com.pulumi.aws.quicksight.inputs.ThemeConfigurationSheetTileLayoutMarginArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThemeConfigurationSheetTileLayoutArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThemeConfigurationSheetTileLayoutArgs Empty = new ThemeConfigurationSheetTileLayoutArgs();

    /**
     * The gutter settings that apply between tiles. See gutter.
     * 
     */
    @Import(name="gutter")
    private @Nullable Output<ThemeConfigurationSheetTileLayoutGutterArgs> gutter;

    /**
     * @return The gutter settings that apply between tiles. See gutter.
     * 
     */
    public Optional<Output<ThemeConfigurationSheetTileLayoutGutterArgs>> gutter() {
        return Optional.ofNullable(this.gutter);
    }

    /**
     * The margin settings that apply around the outside edge of sheets. See margin.
     * 
     */
    @Import(name="margin")
    private @Nullable Output<ThemeConfigurationSheetTileLayoutMarginArgs> margin;

    /**
     * @return The margin settings that apply around the outside edge of sheets. See margin.
     * 
     */
    public Optional<Output<ThemeConfigurationSheetTileLayoutMarginArgs>> margin() {
        return Optional.ofNullable(this.margin);
    }

    private ThemeConfigurationSheetTileLayoutArgs() {}

    private ThemeConfigurationSheetTileLayoutArgs(ThemeConfigurationSheetTileLayoutArgs $) {
        this.gutter = $.gutter;
        this.margin = $.margin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThemeConfigurationSheetTileLayoutArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThemeConfigurationSheetTileLayoutArgs $;

        public Builder() {
            $ = new ThemeConfigurationSheetTileLayoutArgs();
        }

        public Builder(ThemeConfigurationSheetTileLayoutArgs defaults) {
            $ = new ThemeConfigurationSheetTileLayoutArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gutter The gutter settings that apply between tiles. See gutter.
         * 
         * @return builder
         * 
         */
        public Builder gutter(@Nullable Output<ThemeConfigurationSheetTileLayoutGutterArgs> gutter) {
            $.gutter = gutter;
            return this;
        }

        /**
         * @param gutter The gutter settings that apply between tiles. See gutter.
         * 
         * @return builder
         * 
         */
        public Builder gutter(ThemeConfigurationSheetTileLayoutGutterArgs gutter) {
            return gutter(Output.of(gutter));
        }

        /**
         * @param margin The margin settings that apply around the outside edge of sheets. See margin.
         * 
         * @return builder
         * 
         */
        public Builder margin(@Nullable Output<ThemeConfigurationSheetTileLayoutMarginArgs> margin) {
            $.margin = margin;
            return this;
        }

        /**
         * @param margin The margin settings that apply around the outside edge of sheets. See margin.
         * 
         * @return builder
         * 
         */
        public Builder margin(ThemeConfigurationSheetTileLayoutMarginArgs margin) {
            return margin(Output.of(margin));
        }

        public ThemeConfigurationSheetTileLayoutArgs build() {
            return $;
        }
    }

}
