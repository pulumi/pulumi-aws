// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ram.inputs;

import com.pulumi.aws.ram.inputs.GetResourceShareFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResourceShareArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourceShareArgs Empty = new GetResourceShareArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetResourceShareFilterArgs>> filters;

    public Optional<Output<List<GetResourceShareFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="resourceOwner", required=true)
    private Output<String> resourceOwner;

    public Output<String> resourceOwner() {
        return this.resourceOwner;
    }

    @Import(name="resourceShareStatus")
    private @Nullable Output<String> resourceShareStatus;

    public Optional<Output<String>> resourceShareStatus() {
        return Optional.ofNullable(this.resourceShareStatus);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetResourceShareArgs() {}

    private GetResourceShareArgs(GetResourceShareArgs $) {
        this.filters = $.filters;
        this.name = $.name;
        this.resourceOwner = $.resourceOwner;
        this.resourceShareStatus = $.resourceShareStatus;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourceShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourceShareArgs $;

        public Builder() {
            $ = new GetResourceShareArgs();
        }

        public Builder(GetResourceShareArgs defaults) {
            $ = new GetResourceShareArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetResourceShareFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetResourceShareFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetResourceShareFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceOwner(Output<String> resourceOwner) {
            $.resourceOwner = resourceOwner;
            return this;
        }

        public Builder resourceOwner(String resourceOwner) {
            return resourceOwner(Output.of(resourceOwner));
        }

        public Builder resourceShareStatus(@Nullable Output<String> resourceShareStatus) {
            $.resourceShareStatus = resourceShareStatus;
            return this;
        }

        public Builder resourceShareStatus(String resourceShareStatus) {
            return resourceShareStatus(Output.of(resourceShareStatus));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetResourceShareArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceOwner = Objects.requireNonNull($.resourceOwner, "expected parameter 'resourceOwner' to be non-null");
            return $;
        }
    }

}
