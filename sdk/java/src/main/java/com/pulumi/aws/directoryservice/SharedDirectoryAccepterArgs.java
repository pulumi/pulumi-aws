// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SharedDirectoryAccepterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SharedDirectoryAccepterArgs Empty = new SharedDirectoryAccepterArgs();

    /**
     * Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
     * 
     */
    @Import(name="sharedDirectoryId", required=true)
    private Output<String> sharedDirectoryId;

    /**
     * @return Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
     * 
     */
    public Output<String> sharedDirectoryId() {
        return this.sharedDirectoryId;
    }

    private SharedDirectoryAccepterArgs() {}

    private SharedDirectoryAccepterArgs(SharedDirectoryAccepterArgs $) {
        this.sharedDirectoryId = $.sharedDirectoryId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedDirectoryAccepterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedDirectoryAccepterArgs $;

        public Builder() {
            $ = new SharedDirectoryAccepterArgs();
        }

        public Builder(SharedDirectoryAccepterArgs defaults) {
            $ = new SharedDirectoryAccepterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sharedDirectoryId Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
         * 
         * @return builder
         * 
         */
        public Builder sharedDirectoryId(Output<String> sharedDirectoryId) {
            $.sharedDirectoryId = sharedDirectoryId;
            return this;
        }

        /**
         * @param sharedDirectoryId Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
         * 
         * @return builder
         * 
         */
        public Builder sharedDirectoryId(String sharedDirectoryId) {
            return sharedDirectoryId(Output.of(sharedDirectoryId));
        }

        public SharedDirectoryAccepterArgs build() {
            if ($.sharedDirectoryId == null) {
                throw new MissingRequiredPropertyException("SharedDirectoryAccepterArgs", "sharedDirectoryId");
            }
            return $;
        }
    }

}
