// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder;

import com.pulumi.aws.elastictranscoder.inputs.PipelineContentConfigArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineContentConfigPermissionArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineNotificationsArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineThumbnailConfigArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineThumbnailConfigPermissionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineArgs Empty = new PipelineArgs();

    @Import(name="awsKmsKeyArn")
    private @Nullable Output<String> awsKmsKeyArn;

    public Optional<Output<String>> awsKmsKeyArn() {
        return Optional.ofNullable(this.awsKmsKeyArn);
    }

    @Import(name="contentConfig")
    private @Nullable Output<PipelineContentConfigArgs> contentConfig;

    public Optional<Output<PipelineContentConfigArgs>> contentConfig() {
        return Optional.ofNullable(this.contentConfig);
    }

    @Import(name="contentConfigPermissions")
    private @Nullable Output<List<PipelineContentConfigPermissionArgs>> contentConfigPermissions;

    public Optional<Output<List<PipelineContentConfigPermissionArgs>>> contentConfigPermissions() {
        return Optional.ofNullable(this.contentConfigPermissions);
    }

    @Import(name="inputBucket", required=true)
    private Output<String> inputBucket;

    public Output<String> inputBucket() {
        return this.inputBucket;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notifications")
    private @Nullable Output<PipelineNotificationsArgs> notifications;

    public Optional<Output<PipelineNotificationsArgs>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    @Import(name="outputBucket")
    private @Nullable Output<String> outputBucket;

    public Optional<Output<String>> outputBucket() {
        return Optional.ofNullable(this.outputBucket);
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    @Import(name="thumbnailConfig")
    private @Nullable Output<PipelineThumbnailConfigArgs> thumbnailConfig;

    public Optional<Output<PipelineThumbnailConfigArgs>> thumbnailConfig() {
        return Optional.ofNullable(this.thumbnailConfig);
    }

    @Import(name="thumbnailConfigPermissions")
    private @Nullable Output<List<PipelineThumbnailConfigPermissionArgs>> thumbnailConfigPermissions;

    public Optional<Output<List<PipelineThumbnailConfigPermissionArgs>>> thumbnailConfigPermissions() {
        return Optional.ofNullable(this.thumbnailConfigPermissions);
    }

    private PipelineArgs() {}

    private PipelineArgs(PipelineArgs $) {
        this.awsKmsKeyArn = $.awsKmsKeyArn;
        this.contentConfig = $.contentConfig;
        this.contentConfigPermissions = $.contentConfigPermissions;
        this.inputBucket = $.inputBucket;
        this.name = $.name;
        this.notifications = $.notifications;
        this.outputBucket = $.outputBucket;
        this.role = $.role;
        this.thumbnailConfig = $.thumbnailConfig;
        this.thumbnailConfigPermissions = $.thumbnailConfigPermissions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineArgs $;

        public Builder() {
            $ = new PipelineArgs();
        }

        public Builder(PipelineArgs defaults) {
            $ = new PipelineArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsKmsKeyArn(@Nullable Output<String> awsKmsKeyArn) {
            $.awsKmsKeyArn = awsKmsKeyArn;
            return this;
        }

        public Builder awsKmsKeyArn(String awsKmsKeyArn) {
            return awsKmsKeyArn(Output.of(awsKmsKeyArn));
        }

        public Builder contentConfig(@Nullable Output<PipelineContentConfigArgs> contentConfig) {
            $.contentConfig = contentConfig;
            return this;
        }

        public Builder contentConfig(PipelineContentConfigArgs contentConfig) {
            return contentConfig(Output.of(contentConfig));
        }

        public Builder contentConfigPermissions(@Nullable Output<List<PipelineContentConfigPermissionArgs>> contentConfigPermissions) {
            $.contentConfigPermissions = contentConfigPermissions;
            return this;
        }

        public Builder contentConfigPermissions(List<PipelineContentConfigPermissionArgs> contentConfigPermissions) {
            return contentConfigPermissions(Output.of(contentConfigPermissions));
        }

        public Builder contentConfigPermissions(PipelineContentConfigPermissionArgs... contentConfigPermissions) {
            return contentConfigPermissions(List.of(contentConfigPermissions));
        }

        public Builder inputBucket(Output<String> inputBucket) {
            $.inputBucket = inputBucket;
            return this;
        }

        public Builder inputBucket(String inputBucket) {
            return inputBucket(Output.of(inputBucket));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notifications(@Nullable Output<PipelineNotificationsArgs> notifications) {
            $.notifications = notifications;
            return this;
        }

        public Builder notifications(PipelineNotificationsArgs notifications) {
            return notifications(Output.of(notifications));
        }

        public Builder outputBucket(@Nullable Output<String> outputBucket) {
            $.outputBucket = outputBucket;
            return this;
        }

        public Builder outputBucket(String outputBucket) {
            return outputBucket(Output.of(outputBucket));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder thumbnailConfig(@Nullable Output<PipelineThumbnailConfigArgs> thumbnailConfig) {
            $.thumbnailConfig = thumbnailConfig;
            return this;
        }

        public Builder thumbnailConfig(PipelineThumbnailConfigArgs thumbnailConfig) {
            return thumbnailConfig(Output.of(thumbnailConfig));
        }

        public Builder thumbnailConfigPermissions(@Nullable Output<List<PipelineThumbnailConfigPermissionArgs>> thumbnailConfigPermissions) {
            $.thumbnailConfigPermissions = thumbnailConfigPermissions;
            return this;
        }

        public Builder thumbnailConfigPermissions(List<PipelineThumbnailConfigPermissionArgs> thumbnailConfigPermissions) {
            return thumbnailConfigPermissions(Output.of(thumbnailConfigPermissions));
        }

        public Builder thumbnailConfigPermissions(PipelineThumbnailConfigPermissionArgs... thumbnailConfigPermissions) {
            return thumbnailConfigPermissions(List.of(thumbnailConfigPermissions));
        }

        public PipelineArgs build() {
            $.inputBucket = Objects.requireNonNull($.inputBucket, "expected parameter 'inputBucket' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            return $;
        }
    }

}
