// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsBarChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsBoxPlotVisual;
import com.pulumi.aws.quicksight.outputs.VisualsComboChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsCustomContentVisual;
import com.pulumi.aws.quicksight.outputs.VisualsEmptyVisual;
import com.pulumi.aws.quicksight.outputs.VisualsFilledMapVisual;
import com.pulumi.aws.quicksight.outputs.VisualsFunnelChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsGaugeChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisual;
import com.pulumi.aws.quicksight.outputs.VisualsHeatMapVisual;
import com.pulumi.aws.quicksight.outputs.VisualsHistogramVisual;
import com.pulumi.aws.quicksight.outputs.VisualsInsightVisual;
import com.pulumi.aws.quicksight.outputs.VisualsKpiVisual;
import com.pulumi.aws.quicksight.outputs.VisualsLineChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsPieChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisual;
import com.pulumi.aws.quicksight.outputs.VisualsRadarChartVisual;
import com.pulumi.aws.quicksight.outputs.VisualsSankeyDiagramVisual;
import com.pulumi.aws.quicksight.outputs.VisualsScatterPlotVisual;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisual;
import com.pulumi.aws.quicksight.outputs.VisualsTreeMapVisual;
import com.pulumi.aws.quicksight.outputs.VisualsWaterfallVisual;
import com.pulumi.aws.quicksight.outputs.VisualsWordCloudVisual;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Visuals {
    private @Nullable VisualsBarChartVisual barChartVisual;
    private @Nullable VisualsBoxPlotVisual boxPlotVisual;
    private @Nullable VisualsComboChartVisual comboChartVisual;
    private @Nullable VisualsCustomContentVisual customContentVisual;
    private @Nullable VisualsEmptyVisual emptyVisual;
    private @Nullable VisualsFilledMapVisual filledMapVisual;
    private @Nullable VisualsFunnelChartVisual funnelChartVisual;
    private @Nullable VisualsGaugeChartVisual gaugeChartVisual;
    private @Nullable VisualsGeospatialMapVisual geospatialMapVisual;
    private @Nullable VisualsHeatMapVisual heatMapVisual;
    private @Nullable VisualsHistogramVisual histogramVisual;
    private @Nullable VisualsInsightVisual insightVisual;
    private @Nullable VisualsKpiVisual kpiVisual;
    private @Nullable VisualsLineChartVisual lineChartVisual;
    private @Nullable VisualsPieChartVisual pieChartVisual;
    private @Nullable VisualsPivotTableVisual pivotTableVisual;
    private @Nullable VisualsRadarChartVisual radarChartVisual;
    private @Nullable VisualsSankeyDiagramVisual sankeyDiagramVisual;
    private @Nullable VisualsScatterPlotVisual scatterPlotVisual;
    private @Nullable VisualsTableVisual tableVisual;
    private @Nullable VisualsTreeMapVisual treeMapVisual;
    private @Nullable VisualsWaterfallVisual waterfallVisual;
    private @Nullable VisualsWordCloudVisual wordCloudVisual;

    private Visuals() {}
    public Optional<VisualsBarChartVisual> barChartVisual() {
        return Optional.ofNullable(this.barChartVisual);
    }
    public Optional<VisualsBoxPlotVisual> boxPlotVisual() {
        return Optional.ofNullable(this.boxPlotVisual);
    }
    public Optional<VisualsComboChartVisual> comboChartVisual() {
        return Optional.ofNullable(this.comboChartVisual);
    }
    public Optional<VisualsCustomContentVisual> customContentVisual() {
        return Optional.ofNullable(this.customContentVisual);
    }
    public Optional<VisualsEmptyVisual> emptyVisual() {
        return Optional.ofNullable(this.emptyVisual);
    }
    public Optional<VisualsFilledMapVisual> filledMapVisual() {
        return Optional.ofNullable(this.filledMapVisual);
    }
    public Optional<VisualsFunnelChartVisual> funnelChartVisual() {
        return Optional.ofNullable(this.funnelChartVisual);
    }
    public Optional<VisualsGaugeChartVisual> gaugeChartVisual() {
        return Optional.ofNullable(this.gaugeChartVisual);
    }
    public Optional<VisualsGeospatialMapVisual> geospatialMapVisual() {
        return Optional.ofNullable(this.geospatialMapVisual);
    }
    public Optional<VisualsHeatMapVisual> heatMapVisual() {
        return Optional.ofNullable(this.heatMapVisual);
    }
    public Optional<VisualsHistogramVisual> histogramVisual() {
        return Optional.ofNullable(this.histogramVisual);
    }
    public Optional<VisualsInsightVisual> insightVisual() {
        return Optional.ofNullable(this.insightVisual);
    }
    public Optional<VisualsKpiVisual> kpiVisual() {
        return Optional.ofNullable(this.kpiVisual);
    }
    public Optional<VisualsLineChartVisual> lineChartVisual() {
        return Optional.ofNullable(this.lineChartVisual);
    }
    public Optional<VisualsPieChartVisual> pieChartVisual() {
        return Optional.ofNullable(this.pieChartVisual);
    }
    public Optional<VisualsPivotTableVisual> pivotTableVisual() {
        return Optional.ofNullable(this.pivotTableVisual);
    }
    public Optional<VisualsRadarChartVisual> radarChartVisual() {
        return Optional.ofNullable(this.radarChartVisual);
    }
    public Optional<VisualsSankeyDiagramVisual> sankeyDiagramVisual() {
        return Optional.ofNullable(this.sankeyDiagramVisual);
    }
    public Optional<VisualsScatterPlotVisual> scatterPlotVisual() {
        return Optional.ofNullable(this.scatterPlotVisual);
    }
    public Optional<VisualsTableVisual> tableVisual() {
        return Optional.ofNullable(this.tableVisual);
    }
    public Optional<VisualsTreeMapVisual> treeMapVisual() {
        return Optional.ofNullable(this.treeMapVisual);
    }
    public Optional<VisualsWaterfallVisual> waterfallVisual() {
        return Optional.ofNullable(this.waterfallVisual);
    }
    public Optional<VisualsWordCloudVisual> wordCloudVisual() {
        return Optional.ofNullable(this.wordCloudVisual);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Visuals defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsBarChartVisual barChartVisual;
        private @Nullable VisualsBoxPlotVisual boxPlotVisual;
        private @Nullable VisualsComboChartVisual comboChartVisual;
        private @Nullable VisualsCustomContentVisual customContentVisual;
        private @Nullable VisualsEmptyVisual emptyVisual;
        private @Nullable VisualsFilledMapVisual filledMapVisual;
        private @Nullable VisualsFunnelChartVisual funnelChartVisual;
        private @Nullable VisualsGaugeChartVisual gaugeChartVisual;
        private @Nullable VisualsGeospatialMapVisual geospatialMapVisual;
        private @Nullable VisualsHeatMapVisual heatMapVisual;
        private @Nullable VisualsHistogramVisual histogramVisual;
        private @Nullable VisualsInsightVisual insightVisual;
        private @Nullable VisualsKpiVisual kpiVisual;
        private @Nullable VisualsLineChartVisual lineChartVisual;
        private @Nullable VisualsPieChartVisual pieChartVisual;
        private @Nullable VisualsPivotTableVisual pivotTableVisual;
        private @Nullable VisualsRadarChartVisual radarChartVisual;
        private @Nullable VisualsSankeyDiagramVisual sankeyDiagramVisual;
        private @Nullable VisualsScatterPlotVisual scatterPlotVisual;
        private @Nullable VisualsTableVisual tableVisual;
        private @Nullable VisualsTreeMapVisual treeMapVisual;
        private @Nullable VisualsWaterfallVisual waterfallVisual;
        private @Nullable VisualsWordCloudVisual wordCloudVisual;
        public Builder() {}
        public Builder(Visuals defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.barChartVisual = defaults.barChartVisual;
    	      this.boxPlotVisual = defaults.boxPlotVisual;
    	      this.comboChartVisual = defaults.comboChartVisual;
    	      this.customContentVisual = defaults.customContentVisual;
    	      this.emptyVisual = defaults.emptyVisual;
    	      this.filledMapVisual = defaults.filledMapVisual;
    	      this.funnelChartVisual = defaults.funnelChartVisual;
    	      this.gaugeChartVisual = defaults.gaugeChartVisual;
    	      this.geospatialMapVisual = defaults.geospatialMapVisual;
    	      this.heatMapVisual = defaults.heatMapVisual;
    	      this.histogramVisual = defaults.histogramVisual;
    	      this.insightVisual = defaults.insightVisual;
    	      this.kpiVisual = defaults.kpiVisual;
    	      this.lineChartVisual = defaults.lineChartVisual;
    	      this.pieChartVisual = defaults.pieChartVisual;
    	      this.pivotTableVisual = defaults.pivotTableVisual;
    	      this.radarChartVisual = defaults.radarChartVisual;
    	      this.sankeyDiagramVisual = defaults.sankeyDiagramVisual;
    	      this.scatterPlotVisual = defaults.scatterPlotVisual;
    	      this.tableVisual = defaults.tableVisual;
    	      this.treeMapVisual = defaults.treeMapVisual;
    	      this.waterfallVisual = defaults.waterfallVisual;
    	      this.wordCloudVisual = defaults.wordCloudVisual;
        }

        @CustomType.Setter
        public Builder barChartVisual(@Nullable VisualsBarChartVisual barChartVisual) {

            this.barChartVisual = barChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder boxPlotVisual(@Nullable VisualsBoxPlotVisual boxPlotVisual) {

            this.boxPlotVisual = boxPlotVisual;
            return this;
        }
        @CustomType.Setter
        public Builder comboChartVisual(@Nullable VisualsComboChartVisual comboChartVisual) {

            this.comboChartVisual = comboChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder customContentVisual(@Nullable VisualsCustomContentVisual customContentVisual) {

            this.customContentVisual = customContentVisual;
            return this;
        }
        @CustomType.Setter
        public Builder emptyVisual(@Nullable VisualsEmptyVisual emptyVisual) {

            this.emptyVisual = emptyVisual;
            return this;
        }
        @CustomType.Setter
        public Builder filledMapVisual(@Nullable VisualsFilledMapVisual filledMapVisual) {

            this.filledMapVisual = filledMapVisual;
            return this;
        }
        @CustomType.Setter
        public Builder funnelChartVisual(@Nullable VisualsFunnelChartVisual funnelChartVisual) {

            this.funnelChartVisual = funnelChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder gaugeChartVisual(@Nullable VisualsGaugeChartVisual gaugeChartVisual) {

            this.gaugeChartVisual = gaugeChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder geospatialMapVisual(@Nullable VisualsGeospatialMapVisual geospatialMapVisual) {

            this.geospatialMapVisual = geospatialMapVisual;
            return this;
        }
        @CustomType.Setter
        public Builder heatMapVisual(@Nullable VisualsHeatMapVisual heatMapVisual) {

            this.heatMapVisual = heatMapVisual;
            return this;
        }
        @CustomType.Setter
        public Builder histogramVisual(@Nullable VisualsHistogramVisual histogramVisual) {

            this.histogramVisual = histogramVisual;
            return this;
        }
        @CustomType.Setter
        public Builder insightVisual(@Nullable VisualsInsightVisual insightVisual) {

            this.insightVisual = insightVisual;
            return this;
        }
        @CustomType.Setter
        public Builder kpiVisual(@Nullable VisualsKpiVisual kpiVisual) {

            this.kpiVisual = kpiVisual;
            return this;
        }
        @CustomType.Setter
        public Builder lineChartVisual(@Nullable VisualsLineChartVisual lineChartVisual) {

            this.lineChartVisual = lineChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder pieChartVisual(@Nullable VisualsPieChartVisual pieChartVisual) {

            this.pieChartVisual = pieChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder pivotTableVisual(@Nullable VisualsPivotTableVisual pivotTableVisual) {

            this.pivotTableVisual = pivotTableVisual;
            return this;
        }
        @CustomType.Setter
        public Builder radarChartVisual(@Nullable VisualsRadarChartVisual radarChartVisual) {

            this.radarChartVisual = radarChartVisual;
            return this;
        }
        @CustomType.Setter
        public Builder sankeyDiagramVisual(@Nullable VisualsSankeyDiagramVisual sankeyDiagramVisual) {

            this.sankeyDiagramVisual = sankeyDiagramVisual;
            return this;
        }
        @CustomType.Setter
        public Builder scatterPlotVisual(@Nullable VisualsScatterPlotVisual scatterPlotVisual) {

            this.scatterPlotVisual = scatterPlotVisual;
            return this;
        }
        @CustomType.Setter
        public Builder tableVisual(@Nullable VisualsTableVisual tableVisual) {

            this.tableVisual = tableVisual;
            return this;
        }
        @CustomType.Setter
        public Builder treeMapVisual(@Nullable VisualsTreeMapVisual treeMapVisual) {

            this.treeMapVisual = treeMapVisual;
            return this;
        }
        @CustomType.Setter
        public Builder waterfallVisual(@Nullable VisualsWaterfallVisual waterfallVisual) {

            this.waterfallVisual = waterfallVisual;
            return this;
        }
        @CustomType.Setter
        public Builder wordCloudVisual(@Nullable VisualsWordCloudVisual wordCloudVisual) {

            this.wordCloudVisual = wordCloudVisual;
            return this;
        }
        public Visuals build() {
            final var _resultValue = new Visuals();
            _resultValue.barChartVisual = barChartVisual;
            _resultValue.boxPlotVisual = boxPlotVisual;
            _resultValue.comboChartVisual = comboChartVisual;
            _resultValue.customContentVisual = customContentVisual;
            _resultValue.emptyVisual = emptyVisual;
            _resultValue.filledMapVisual = filledMapVisual;
            _resultValue.funnelChartVisual = funnelChartVisual;
            _resultValue.gaugeChartVisual = gaugeChartVisual;
            _resultValue.geospatialMapVisual = geospatialMapVisual;
            _resultValue.heatMapVisual = heatMapVisual;
            _resultValue.histogramVisual = histogramVisual;
            _resultValue.insightVisual = insightVisual;
            _resultValue.kpiVisual = kpiVisual;
            _resultValue.lineChartVisual = lineChartVisual;
            _resultValue.pieChartVisual = pieChartVisual;
            _resultValue.pivotTableVisual = pivotTableVisual;
            _resultValue.radarChartVisual = radarChartVisual;
            _resultValue.sankeyDiagramVisual = sankeyDiagramVisual;
            _resultValue.scatterPlotVisual = scatterPlotVisual;
            _resultValue.tableVisual = tableVisual;
            _resultValue.treeMapVisual = treeMapVisual;
            _resultValue.waterfallVisual = waterfallVisual;
            _resultValue.wordCloudVisual = wordCloudVisual;
            return _resultValue;
        }
    }
}
