// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.FleetLaunchTemplateConfigOverrideInstanceRequirements;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FleetLaunchTemplateConfigOverride {
    /**
     * @return Availability Zone in which to launch the instances.
     * 
     */
    private @Nullable String availabilityZone;
    /**
     * @return Override the instance type in the Launch Template with instance types that satisfy the requirements.
     * 
     */
    private @Nullable FleetLaunchTemplateConfigOverrideInstanceRequirements instanceRequirements;
    /**
     * @return Instance type.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return Maximum price per unit hour that you are willing to pay for a Spot Instance.
     * 
     */
    private @Nullable String maxPrice;
    /**
     * @return Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     * 
     */
    private @Nullable Double priority;
    /**
     * @return ID of the subnet in which to launch the instances.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return Number of units provided by the specified instance type.
     * 
     */
    private @Nullable Double weightedCapacity;

    private FleetLaunchTemplateConfigOverride() {}
    /**
     * @return Availability Zone in which to launch the instances.
     * 
     */
    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * @return Override the instance type in the Launch Template with instance types that satisfy the requirements.
     * 
     */
    public Optional<FleetLaunchTemplateConfigOverrideInstanceRequirements> instanceRequirements() {
        return Optional.ofNullable(this.instanceRequirements);
    }
    /**
     * @return Instance type.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return Maximum price per unit hour that you are willing to pay for a Spot Instance.
     * 
     */
    public Optional<String> maxPrice() {
        return Optional.ofNullable(this.maxPrice);
    }
    /**
     * @return Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     * 
     */
    public Optional<Double> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return ID of the subnet in which to launch the instances.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return Number of units provided by the specified instance type.
     * 
     */
    public Optional<Double> weightedCapacity() {
        return Optional.ofNullable(this.weightedCapacity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetLaunchTemplateConfigOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityZone;
        private @Nullable FleetLaunchTemplateConfigOverrideInstanceRequirements instanceRequirements;
        private @Nullable String instanceType;
        private @Nullable String maxPrice;
        private @Nullable Double priority;
        private @Nullable String subnetId;
        private @Nullable Double weightedCapacity;
        public Builder() {}
        public Builder(FleetLaunchTemplateConfigOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.instanceRequirements = defaults.instanceRequirements;
    	      this.instanceType = defaults.instanceType;
    	      this.maxPrice = defaults.maxPrice;
    	      this.priority = defaults.priority;
    	      this.subnetId = defaults.subnetId;
    	      this.weightedCapacity = defaults.weightedCapacity;
        }

        @CustomType.Setter
        public Builder availabilityZone(@Nullable String availabilityZone) {

            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder instanceRequirements(@Nullable FleetLaunchTemplateConfigOverrideInstanceRequirements instanceRequirements) {

            this.instanceRequirements = instanceRequirements;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {

            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder maxPrice(@Nullable String maxPrice) {

            this.maxPrice = maxPrice;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Double priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {

            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder weightedCapacity(@Nullable Double weightedCapacity) {

            this.weightedCapacity = weightedCapacity;
            return this;
        }
        public FleetLaunchTemplateConfigOverride build() {
            final var _resultValue = new FleetLaunchTemplateConfigOverride();
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.instanceRequirements = instanceRequirements;
            _resultValue.instanceType = instanceType;
            _resultValue.maxPrice = maxPrice;
            _resultValue.priority = priority;
            _resultValue.subnetId = subnetId;
            _resultValue.weightedCapacity = weightedCapacity;
            return _resultValue;
        }
    }
}
