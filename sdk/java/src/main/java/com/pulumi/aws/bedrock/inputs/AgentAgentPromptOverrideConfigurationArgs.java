// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AgentAgentPromptOverrideConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentAgentPromptOverrideConfigurationArgs Empty = new AgentAgentPromptOverrideConfigurationArgs();

    /**
     * ARN of Lambda to use when parsing the raw foundation model output.
     * 
     */
    @Import(name="overrideLambda", required=true)
    private Output<String> overrideLambda;

    /**
     * @return ARN of Lambda to use when parsing the raw foundation model output.
     * 
     */
    public Output<String> overrideLambda() {
        return this.overrideLambda;
    }

    /**
     * List of prompt configurations.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="promptConfigurations", required=true)
    private Output<List<Object>> promptConfigurations;

    /**
     * @return List of prompt configurations.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<List<Object>> promptConfigurations() {
        return this.promptConfigurations;
    }

    private AgentAgentPromptOverrideConfigurationArgs() {}

    private AgentAgentPromptOverrideConfigurationArgs(AgentAgentPromptOverrideConfigurationArgs $) {
        this.overrideLambda = $.overrideLambda;
        this.promptConfigurations = $.promptConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentAgentPromptOverrideConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentAgentPromptOverrideConfigurationArgs $;

        public Builder() {
            $ = new AgentAgentPromptOverrideConfigurationArgs();
        }

        public Builder(AgentAgentPromptOverrideConfigurationArgs defaults) {
            $ = new AgentAgentPromptOverrideConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param overrideLambda ARN of Lambda to use when parsing the raw foundation model output.
         * 
         * @return builder
         * 
         */
        public Builder overrideLambda(Output<String> overrideLambda) {
            $.overrideLambda = overrideLambda;
            return this;
        }

        /**
         * @param overrideLambda ARN of Lambda to use when parsing the raw foundation model output.
         * 
         * @return builder
         * 
         */
        public Builder overrideLambda(String overrideLambda) {
            return overrideLambda(Output.of(overrideLambda));
        }

        /**
         * @param promptConfigurations List of prompt configurations.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder promptConfigurations(Output<List<Object>> promptConfigurations) {
            $.promptConfigurations = promptConfigurations;
            return this;
        }

        /**
         * @param promptConfigurations List of prompt configurations.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder promptConfigurations(List<Object> promptConfigurations) {
            return promptConfigurations(Output.of(promptConfigurations));
        }

        /**
         * @param promptConfigurations List of prompt configurations.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder promptConfigurations(Object... promptConfigurations) {
            return promptConfigurations(List.of(promptConfigurations));
        }

        public AgentAgentPromptOverrideConfigurationArgs build() {
            if ($.overrideLambda == null) {
                throw new MissingRequiredPropertyException("AgentAgentPromptOverrideConfigurationArgs", "overrideLambda");
            }
            if ($.promptConfigurations == null) {
                throw new MissingRequiredPropertyException("AgentAgentPromptOverrideConfigurationArgs", "promptConfigurations");
            }
            return $;
        }
    }

}
