// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LustreFileSystemDataReadCacheConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LustreFileSystemDataReadCacheConfigurationArgs Empty = new LustreFileSystemDataReadCacheConfigurationArgs();

    /**
     * Size of the file system&#39;s SSD read cache, in gibibytes (GiB). Required when the `sizing_mode` is `USER_PROVISIONED`.
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return Size of the file system&#39;s SSD read cache, in gibibytes (GiB). Required when the `sizing_mode` is `USER_PROVISIONED`.
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * Sizing mode for the cache. Valud values are `NO_CACHE`, `USER_PROVISIONED`, and `PROPORTIONAL_TO_THROUGHPUT_CAPACITY`.
     * 
     */
    @Import(name="sizingMode", required=true)
    private Output<String> sizingMode;

    /**
     * @return Sizing mode for the cache. Valud values are `NO_CACHE`, `USER_PROVISIONED`, and `PROPORTIONAL_TO_THROUGHPUT_CAPACITY`.
     * 
     */
    public Output<String> sizingMode() {
        return this.sizingMode;
    }

    private LustreFileSystemDataReadCacheConfigurationArgs() {}

    private LustreFileSystemDataReadCacheConfigurationArgs(LustreFileSystemDataReadCacheConfigurationArgs $) {
        this.size = $.size;
        this.sizingMode = $.sizingMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LustreFileSystemDataReadCacheConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LustreFileSystemDataReadCacheConfigurationArgs $;

        public Builder() {
            $ = new LustreFileSystemDataReadCacheConfigurationArgs();
        }

        public Builder(LustreFileSystemDataReadCacheConfigurationArgs defaults) {
            $ = new LustreFileSystemDataReadCacheConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param size Size of the file system&#39;s SSD read cache, in gibibytes (GiB). Required when the `sizing_mode` is `USER_PROVISIONED`.
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Size of the file system&#39;s SSD read cache, in gibibytes (GiB). Required when the `sizing_mode` is `USER_PROVISIONED`.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        /**
         * @param sizingMode Sizing mode for the cache. Valud values are `NO_CACHE`, `USER_PROVISIONED`, and `PROPORTIONAL_TO_THROUGHPUT_CAPACITY`.
         * 
         * @return builder
         * 
         */
        public Builder sizingMode(Output<String> sizingMode) {
            $.sizingMode = sizingMode;
            return this;
        }

        /**
         * @param sizingMode Sizing mode for the cache. Valud values are `NO_CACHE`, `USER_PROVISIONED`, and `PROPORTIONAL_TO_THROUGHPUT_CAPACITY`.
         * 
         * @return builder
         * 
         */
        public Builder sizingMode(String sizingMode) {
            return sizingMode(Output.of(sizingMode));
        }

        public LustreFileSystemDataReadCacheConfigurationArgs build() {
            if ($.sizingMode == null) {
                throw new MissingRequiredPropertyException("LustreFileSystemDataReadCacheConfigurationArgs", "sizingMode");
            }
            return $;
        }
    }

}
