// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicationTaskResult {
    /**
     * @return (Conflicts with `cdc_start_time`) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
     * 
     */
    private @Nullable String cdcStartPosition;
    /**
     * @return (Conflicts with `cdc_start_position`) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
     * 
     */
    private @Nullable String cdcStartTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
     * 
     */
    private @Nullable String migrationType;
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    private @Nullable String replicationInstanceArn;
    /**
     * @return The Amazon Resource Name (ARN) for the replication task.
     * 
     */
    private @Nullable String replicationTaskArn;
    private String replicationTaskId;
    /**
     * @return An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
     * 
     */
    private @Nullable String replicationTaskSettings;
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
     * 
     */
    private @Nullable String sourceEndpointArn;
    /**
     * @return Whether to run or stop the replication task.
     * 
     */
    private @Nullable Boolean startReplicationTask;
    /**
     * @return Replication Task status.
     * 
     */
    private @Nullable String status;
    /**
     * @return An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
     * 
     */
    private @Nullable String tableMappings;
    private @Nullable Map<String,String> tags;
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
     * 
     */
    private @Nullable String targetEndpointArn;

    private GetReplicationTaskResult() {}
    /**
     * @return (Conflicts with `cdc_start_time`) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
     * 
     */
    public Optional<String> cdcStartPosition() {
        return Optional.ofNullable(this.cdcStartPosition);
    }
    /**
     * @return (Conflicts with `cdc_start_position`) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
     * 
     */
    public Optional<String> cdcStartTime() {
        return Optional.ofNullable(this.cdcStartTime);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
     * 
     */
    public Optional<String> migrationType() {
        return Optional.ofNullable(this.migrationType);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    public Optional<String> replicationInstanceArn() {
        return Optional.ofNullable(this.replicationInstanceArn);
    }
    /**
     * @return The Amazon Resource Name (ARN) for the replication task.
     * 
     */
    public Optional<String> replicationTaskArn() {
        return Optional.ofNullable(this.replicationTaskArn);
    }
    public String replicationTaskId() {
        return this.replicationTaskId;
    }
    /**
     * @return An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
     * 
     */
    public Optional<String> replicationTaskSettings() {
        return Optional.ofNullable(this.replicationTaskSettings);
    }
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
     * 
     */
    public Optional<String> sourceEndpointArn() {
        return Optional.ofNullable(this.sourceEndpointArn);
    }
    /**
     * @return Whether to run or stop the replication task.
     * 
     */
    public Optional<Boolean> startReplicationTask() {
        return Optional.ofNullable(this.startReplicationTask);
    }
    /**
     * @return Replication Task status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
     * 
     */
    public Optional<String> tableMappings() {
        return Optional.ofNullable(this.tableMappings);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
     * 
     */
    public Optional<String> targetEndpointArn() {
        return Optional.ofNullable(this.targetEndpointArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cdcStartPosition;
        private @Nullable String cdcStartTime;
        private @Nullable String id;
        private @Nullable String migrationType;
        private @Nullable String replicationInstanceArn;
        private @Nullable String replicationTaskArn;
        private String replicationTaskId;
        private @Nullable String replicationTaskSettings;
        private @Nullable String sourceEndpointArn;
        private @Nullable Boolean startReplicationTask;
        private @Nullable String status;
        private @Nullable String tableMappings;
        private @Nullable Map<String,String> tags;
        private @Nullable String targetEndpointArn;
        public Builder() {}
        public Builder(GetReplicationTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdcStartPosition = defaults.cdcStartPosition;
    	      this.cdcStartTime = defaults.cdcStartTime;
    	      this.id = defaults.id;
    	      this.migrationType = defaults.migrationType;
    	      this.replicationInstanceArn = defaults.replicationInstanceArn;
    	      this.replicationTaskArn = defaults.replicationTaskArn;
    	      this.replicationTaskId = defaults.replicationTaskId;
    	      this.replicationTaskSettings = defaults.replicationTaskSettings;
    	      this.sourceEndpointArn = defaults.sourceEndpointArn;
    	      this.startReplicationTask = defaults.startReplicationTask;
    	      this.status = defaults.status;
    	      this.tableMappings = defaults.tableMappings;
    	      this.tags = defaults.tags;
    	      this.targetEndpointArn = defaults.targetEndpointArn;
        }

        @CustomType.Setter
        public Builder cdcStartPosition(@Nullable String cdcStartPosition) {
            this.cdcStartPosition = cdcStartPosition;
            return this;
        }
        @CustomType.Setter
        public Builder cdcStartTime(@Nullable String cdcStartTime) {
            this.cdcStartTime = cdcStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder migrationType(@Nullable String migrationType) {
            this.migrationType = migrationType;
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceArn(@Nullable String replicationInstanceArn) {
            this.replicationInstanceArn = replicationInstanceArn;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskArn(@Nullable String replicationTaskArn) {
            this.replicationTaskArn = replicationTaskArn;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskId(String replicationTaskId) {
            this.replicationTaskId = Objects.requireNonNull(replicationTaskId);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskSettings(@Nullable String replicationTaskSettings) {
            this.replicationTaskSettings = replicationTaskSettings;
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointArn(@Nullable String sourceEndpointArn) {
            this.sourceEndpointArn = sourceEndpointArn;
            return this;
        }
        @CustomType.Setter
        public Builder startReplicationTask(@Nullable Boolean startReplicationTask) {
            this.startReplicationTask = startReplicationTask;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tableMappings(@Nullable String tableMappings) {
            this.tableMappings = tableMappings;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetEndpointArn(@Nullable String targetEndpointArn) {
            this.targetEndpointArn = targetEndpointArn;
            return this;
        }
        public GetReplicationTaskResult build() {
            final var o = new GetReplicationTaskResult();
            o.cdcStartPosition = cdcStartPosition;
            o.cdcStartTime = cdcStartTime;
            o.id = id;
            o.migrationType = migrationType;
            o.replicationInstanceArn = replicationInstanceArn;
            o.replicationTaskArn = replicationTaskArn;
            o.replicationTaskId = replicationTaskId;
            o.replicationTaskSettings = replicationTaskSettings;
            o.sourceEndpointArn = sourceEndpointArn;
            o.startReplicationTask = startReplicationTask;
            o.status = status;
            o.tableMappings = tableMappings;
            o.tags = tags;
            o.targetEndpointArn = targetEndpointArn;
            return o;
        }
    }
}
