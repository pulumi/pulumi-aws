// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReplicationTaskResult {
    /**
     * @return (Conflicts with `cdc_start_time`) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
     * 
     */
    private String cdcStartPosition;
    /**
     * @return (Conflicts with `cdc_start_position`) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
     * 
     */
    private String cdcStartTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
     * 
     */
    private String migrationType;
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    private String replicationInstanceArn;
    /**
     * @return The Amazon Resource Name (ARN) for the replication task.
     * 
     */
    private String replicationTaskArn;
    private String replicationTaskId;
    /**
     * @return An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
     * 
     */
    private String replicationTaskSettings;
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
     * 
     */
    private String sourceEndpointArn;
    /**
     * @return Whether to run or stop the replication task.
     * 
     */
    private Boolean startReplicationTask;
    /**
     * @return Replication Task status.
     * 
     */
    private String status;
    /**
     * @return An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
     * 
     */
    private String tableMappings;
    private Map<String,String> tags;
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
     * 
     */
    private String targetEndpointArn;

    private GetReplicationTaskResult() {}
    /**
     * @return (Conflicts with `cdc_start_time`) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
     * 
     */
    public String cdcStartPosition() {
        return this.cdcStartPosition;
    }
    /**
     * @return (Conflicts with `cdc_start_position`) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
     * 
     */
    public String cdcStartTime() {
        return this.cdcStartTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
     * 
     */
    public String migrationType() {
        return this.migrationType;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    public String replicationInstanceArn() {
        return this.replicationInstanceArn;
    }
    /**
     * @return The Amazon Resource Name (ARN) for the replication task.
     * 
     */
    public String replicationTaskArn() {
        return this.replicationTaskArn;
    }
    public String replicationTaskId() {
        return this.replicationTaskId;
    }
    /**
     * @return An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
     * 
     */
    public String replicationTaskSettings() {
        return this.replicationTaskSettings;
    }
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
     * 
     */
    public String sourceEndpointArn() {
        return this.sourceEndpointArn;
    }
    /**
     * @return Whether to run or stop the replication task.
     * 
     */
    public Boolean startReplicationTask() {
        return this.startReplicationTask;
    }
    /**
     * @return Replication Task status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
     * 
     */
    public String tableMappings() {
        return this.tableMappings;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
     * 
     */
    public String targetEndpointArn() {
        return this.targetEndpointArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cdcStartPosition;
        private String cdcStartTime;
        private String id;
        private String migrationType;
        private String replicationInstanceArn;
        private String replicationTaskArn;
        private String replicationTaskId;
        private String replicationTaskSettings;
        private String sourceEndpointArn;
        private Boolean startReplicationTask;
        private String status;
        private String tableMappings;
        private Map<String,String> tags;
        private String targetEndpointArn;
        public Builder() {}
        public Builder(GetReplicationTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdcStartPosition = defaults.cdcStartPosition;
    	      this.cdcStartTime = defaults.cdcStartTime;
    	      this.id = defaults.id;
    	      this.migrationType = defaults.migrationType;
    	      this.replicationInstanceArn = defaults.replicationInstanceArn;
    	      this.replicationTaskArn = defaults.replicationTaskArn;
    	      this.replicationTaskId = defaults.replicationTaskId;
    	      this.replicationTaskSettings = defaults.replicationTaskSettings;
    	      this.sourceEndpointArn = defaults.sourceEndpointArn;
    	      this.startReplicationTask = defaults.startReplicationTask;
    	      this.status = defaults.status;
    	      this.tableMappings = defaults.tableMappings;
    	      this.tags = defaults.tags;
    	      this.targetEndpointArn = defaults.targetEndpointArn;
        }

        @CustomType.Setter
        public Builder cdcStartPosition(String cdcStartPosition) {
            this.cdcStartPosition = Objects.requireNonNull(cdcStartPosition);
            return this;
        }
        @CustomType.Setter
        public Builder cdcStartTime(String cdcStartTime) {
            this.cdcStartTime = Objects.requireNonNull(cdcStartTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder migrationType(String migrationType) {
            this.migrationType = Objects.requireNonNull(migrationType);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceArn(String replicationInstanceArn) {
            this.replicationInstanceArn = Objects.requireNonNull(replicationInstanceArn);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskArn(String replicationTaskArn) {
            this.replicationTaskArn = Objects.requireNonNull(replicationTaskArn);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskId(String replicationTaskId) {
            this.replicationTaskId = Objects.requireNonNull(replicationTaskId);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTaskSettings(String replicationTaskSettings) {
            this.replicationTaskSettings = Objects.requireNonNull(replicationTaskSettings);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointArn(String sourceEndpointArn) {
            this.sourceEndpointArn = Objects.requireNonNull(sourceEndpointArn);
            return this;
        }
        @CustomType.Setter
        public Builder startReplicationTask(Boolean startReplicationTask) {
            this.startReplicationTask = Objects.requireNonNull(startReplicationTask);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tableMappings(String tableMappings) {
            this.tableMappings = Objects.requireNonNull(tableMappings);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder targetEndpointArn(String targetEndpointArn) {
            this.targetEndpointArn = Objects.requireNonNull(targetEndpointArn);
            return this;
        }
        public GetReplicationTaskResult build() {
            final var _resultValue = new GetReplicationTaskResult();
            _resultValue.cdcStartPosition = cdcStartPosition;
            _resultValue.cdcStartTime = cdcStartTime;
            _resultValue.id = id;
            _resultValue.migrationType = migrationType;
            _resultValue.replicationInstanceArn = replicationInstanceArn;
            _resultValue.replicationTaskArn = replicationTaskArn;
            _resultValue.replicationTaskId = replicationTaskId;
            _resultValue.replicationTaskSettings = replicationTaskSettings;
            _resultValue.sourceEndpointArn = sourceEndpointArn;
            _resultValue.startReplicationTask = startReplicationTask;
            _resultValue.status = status;
            _resultValue.tableMappings = tableMappings;
            _resultValue.tags = tags;
            _resultValue.targetEndpointArn = targetEndpointArn;
            return _resultValue;
        }
    }
}
