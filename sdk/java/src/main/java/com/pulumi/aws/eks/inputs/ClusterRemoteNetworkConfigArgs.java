// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.aws.eks.inputs.ClusterRemoteNetworkConfigRemoteNodeNetworksArgs;
import com.pulumi.aws.eks.inputs.ClusterRemoteNetworkConfigRemotePodNetworksArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRemoteNetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRemoteNetworkConfigArgs Empty = new ClusterRemoteNetworkConfigArgs();

    /**
     * Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
     * 
     */
    @Import(name="remoteNodeNetworks", required=true)
    private Output<ClusterRemoteNetworkConfigRemoteNodeNetworksArgs> remoteNodeNetworks;

    /**
     * @return Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
     * 
     */
    public Output<ClusterRemoteNetworkConfigRemoteNodeNetworksArgs> remoteNodeNetworks() {
        return this.remoteNodeNetworks;
    }

    /**
     * Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
     * 
     */
    @Import(name="remotePodNetworks")
    private @Nullable Output<ClusterRemoteNetworkConfigRemotePodNetworksArgs> remotePodNetworks;

    /**
     * @return Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
     * 
     */
    public Optional<Output<ClusterRemoteNetworkConfigRemotePodNetworksArgs>> remotePodNetworks() {
        return Optional.ofNullable(this.remotePodNetworks);
    }

    private ClusterRemoteNetworkConfigArgs() {}

    private ClusterRemoteNetworkConfigArgs(ClusterRemoteNetworkConfigArgs $) {
        this.remoteNodeNetworks = $.remoteNodeNetworks;
        this.remotePodNetworks = $.remotePodNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRemoteNetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRemoteNetworkConfigArgs $;

        public Builder() {
            $ = new ClusterRemoteNetworkConfigArgs();
        }

        public Builder(ClusterRemoteNetworkConfigArgs defaults) {
            $ = new ClusterRemoteNetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param remoteNodeNetworks Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder remoteNodeNetworks(Output<ClusterRemoteNetworkConfigRemoteNodeNetworksArgs> remoteNodeNetworks) {
            $.remoteNodeNetworks = remoteNodeNetworks;
            return this;
        }

        /**
         * @param remoteNodeNetworks Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder remoteNodeNetworks(ClusterRemoteNetworkConfigRemoteNodeNetworksArgs remoteNodeNetworks) {
            return remoteNodeNetworks(Output.of(remoteNodeNetworks));
        }

        /**
         * @param remotePodNetworks Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder remotePodNetworks(@Nullable Output<ClusterRemoteNetworkConfigRemotePodNetworksArgs> remotePodNetworks) {
            $.remotePodNetworks = remotePodNetworks;
            return this;
        }

        /**
         * @param remotePodNetworks Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder remotePodNetworks(ClusterRemoteNetworkConfigRemotePodNetworksArgs remotePodNetworks) {
            return remotePodNetworks(Output.of(remotePodNetworks));
        }

        public ClusterRemoteNetworkConfigArgs build() {
            if ($.remoteNodeNetworks == null) {
                throw new MissingRequiredPropertyException("ClusterRemoteNetworkConfigArgs", "remoteNodeNetworks");
            }
            return $;
        }
    }

}
