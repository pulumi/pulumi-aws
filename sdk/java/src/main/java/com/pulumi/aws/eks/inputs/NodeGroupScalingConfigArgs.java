// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class NodeGroupScalingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeGroupScalingConfigArgs Empty = new NodeGroupScalingConfigArgs();

    @Import(name="desiredSize", required=true)
    private Output<Integer> desiredSize;

    public Output<Integer> desiredSize() {
        return this.desiredSize;
    }

    @Import(name="maxSize", required=true)
    private Output<Integer> maxSize;

    public Output<Integer> maxSize() {
        return this.maxSize;
    }

    @Import(name="minSize", required=true)
    private Output<Integer> minSize;

    public Output<Integer> minSize() {
        return this.minSize;
    }

    private NodeGroupScalingConfigArgs() {}

    private NodeGroupScalingConfigArgs(NodeGroupScalingConfigArgs $) {
        this.desiredSize = $.desiredSize;
        this.maxSize = $.maxSize;
        this.minSize = $.minSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeGroupScalingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeGroupScalingConfigArgs $;

        public Builder() {
            $ = new NodeGroupScalingConfigArgs();
        }

        public Builder(NodeGroupScalingConfigArgs defaults) {
            $ = new NodeGroupScalingConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder desiredSize(Output<Integer> desiredSize) {
            $.desiredSize = desiredSize;
            return this;
        }

        public Builder desiredSize(Integer desiredSize) {
            return desiredSize(Output.of(desiredSize));
        }

        public Builder maxSize(Output<Integer> maxSize) {
            $.maxSize = maxSize;
            return this;
        }

        public Builder maxSize(Integer maxSize) {
            return maxSize(Output.of(maxSize));
        }

        public Builder minSize(Output<Integer> minSize) {
            $.minSize = minSize;
            return this;
        }

        public Builder minSize(Integer minSize) {
            return minSize(Output.of(minSize));
        }

        public NodeGroupScalingConfigArgs build() {
            $.desiredSize = Objects.requireNonNull($.desiredSize, "expected parameter 'desiredSize' to be non-null");
            $.maxSize = Objects.requireNonNull($.maxSize, "expected parameter 'maxSize' to be non-null");
            $.minSize = Objects.requireNonNull($.minSize, "expected parameter 'minSize' to be non-null");
            return $;
        }
    }

}
