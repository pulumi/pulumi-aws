// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleRuleTransition {
    /**
     * @return Specifies the date after which you want the corresponding action to take effect.
     * 
     */
    private @Nullable String date;
    /**
     * @return Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     */
    private @Nullable Integer days;
    /**
     * @return Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.
     * 
     */
    private String storageClass;

    private BucketLifecycleRuleTransition() {}
    /**
     * @return Specifies the date after which you want the corresponding action to take effect.
     * 
     */
    public Optional<String> date() {
        return Optional.ofNullable(this.date);
    }
    /**
     * @return Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     */
    public Optional<Integer> days() {
        return Optional.ofNullable(this.days);
    }
    /**
     * @return Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleTransition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String date;
        private @Nullable Integer days;
        private String storageClass;
        public Builder() {}
        public Builder(BucketLifecycleRuleTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.days = defaults.days;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder date(@Nullable String date) {
            this.date = date;
            return this;
        }
        @CustomType.Setter
        public Builder days(@Nullable Integer days) {
            this.days = days;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }
        public BucketLifecycleRuleTransition build() {
            final var o = new BucketLifecycleRuleTransition();
            o.date = date;
            o.days = days;
            o.storageClass = storageClass;
            return o;
        }
    }
}
