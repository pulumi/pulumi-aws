// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs Empty = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs();

    @Import(name="blockSizeBytes")
    private @Nullable Output<Integer> blockSizeBytes;

    public Optional<Output<Integer>> blockSizeBytes() {
        return Optional.ofNullable(this.blockSizeBytes);
    }

    @Import(name="bloomFilterColumns")
    private @Nullable Output<List<String>> bloomFilterColumns;

    public Optional<Output<List<String>>> bloomFilterColumns() {
        return Optional.ofNullable(this.bloomFilterColumns);
    }

    @Import(name="bloomFilterFalsePositiveProbability")
    private @Nullable Output<Double> bloomFilterFalsePositiveProbability;

    public Optional<Output<Double>> bloomFilterFalsePositiveProbability() {
        return Optional.ofNullable(this.bloomFilterFalsePositiveProbability);
    }

    @Import(name="compression")
    private @Nullable Output<String> compression;

    public Optional<Output<String>> compression() {
        return Optional.ofNullable(this.compression);
    }

    @Import(name="dictionaryKeyThreshold")
    private @Nullable Output<Double> dictionaryKeyThreshold;

    public Optional<Output<Double>> dictionaryKeyThreshold() {
        return Optional.ofNullable(this.dictionaryKeyThreshold);
    }

    @Import(name="enablePadding")
    private @Nullable Output<Boolean> enablePadding;

    public Optional<Output<Boolean>> enablePadding() {
        return Optional.ofNullable(this.enablePadding);
    }

    @Import(name="formatVersion")
    private @Nullable Output<String> formatVersion;

    public Optional<Output<String>> formatVersion() {
        return Optional.ofNullable(this.formatVersion);
    }

    @Import(name="paddingTolerance")
    private @Nullable Output<Double> paddingTolerance;

    public Optional<Output<Double>> paddingTolerance() {
        return Optional.ofNullable(this.paddingTolerance);
    }

    @Import(name="rowIndexStride")
    private @Nullable Output<Integer> rowIndexStride;

    public Optional<Output<Integer>> rowIndexStride() {
        return Optional.ofNullable(this.rowIndexStride);
    }

    @Import(name="stripeSizeBytes")
    private @Nullable Output<Integer> stripeSizeBytes;

    public Optional<Output<Integer>> stripeSizeBytes() {
        return Optional.ofNullable(this.stripeSizeBytes);
    }

    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs() {}

    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs $) {
        this.blockSizeBytes = $.blockSizeBytes;
        this.bloomFilterColumns = $.bloomFilterColumns;
        this.bloomFilterFalsePositiveProbability = $.bloomFilterFalsePositiveProbability;
        this.compression = $.compression;
        this.dictionaryKeyThreshold = $.dictionaryKeyThreshold;
        this.enablePadding = $.enablePadding;
        this.formatVersion = $.formatVersion;
        this.paddingTolerance = $.paddingTolerance;
        this.rowIndexStride = $.rowIndexStride;
        this.stripeSizeBytes = $.stripeSizeBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs $;

        public Builder() {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs();
        }

        public Builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs defaults) {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs(Objects.requireNonNull(defaults));
        }

        public Builder blockSizeBytes(@Nullable Output<Integer> blockSizeBytes) {
            $.blockSizeBytes = blockSizeBytes;
            return this;
        }

        public Builder blockSizeBytes(Integer blockSizeBytes) {
            return blockSizeBytes(Output.of(blockSizeBytes));
        }

        public Builder bloomFilterColumns(@Nullable Output<List<String>> bloomFilterColumns) {
            $.bloomFilterColumns = bloomFilterColumns;
            return this;
        }

        public Builder bloomFilterColumns(List<String> bloomFilterColumns) {
            return bloomFilterColumns(Output.of(bloomFilterColumns));
        }

        public Builder bloomFilterColumns(String... bloomFilterColumns) {
            return bloomFilterColumns(List.of(bloomFilterColumns));
        }

        public Builder bloomFilterFalsePositiveProbability(@Nullable Output<Double> bloomFilterFalsePositiveProbability) {
            $.bloomFilterFalsePositiveProbability = bloomFilterFalsePositiveProbability;
            return this;
        }

        public Builder bloomFilterFalsePositiveProbability(Double bloomFilterFalsePositiveProbability) {
            return bloomFilterFalsePositiveProbability(Output.of(bloomFilterFalsePositiveProbability));
        }

        public Builder compression(@Nullable Output<String> compression) {
            $.compression = compression;
            return this;
        }

        public Builder compression(String compression) {
            return compression(Output.of(compression));
        }

        public Builder dictionaryKeyThreshold(@Nullable Output<Double> dictionaryKeyThreshold) {
            $.dictionaryKeyThreshold = dictionaryKeyThreshold;
            return this;
        }

        public Builder dictionaryKeyThreshold(Double dictionaryKeyThreshold) {
            return dictionaryKeyThreshold(Output.of(dictionaryKeyThreshold));
        }

        public Builder enablePadding(@Nullable Output<Boolean> enablePadding) {
            $.enablePadding = enablePadding;
            return this;
        }

        public Builder enablePadding(Boolean enablePadding) {
            return enablePadding(Output.of(enablePadding));
        }

        public Builder formatVersion(@Nullable Output<String> formatVersion) {
            $.formatVersion = formatVersion;
            return this;
        }

        public Builder formatVersion(String formatVersion) {
            return formatVersion(Output.of(formatVersion));
        }

        public Builder paddingTolerance(@Nullable Output<Double> paddingTolerance) {
            $.paddingTolerance = paddingTolerance;
            return this;
        }

        public Builder paddingTolerance(Double paddingTolerance) {
            return paddingTolerance(Output.of(paddingTolerance));
        }

        public Builder rowIndexStride(@Nullable Output<Integer> rowIndexStride) {
            $.rowIndexStride = rowIndexStride;
            return this;
        }

        public Builder rowIndexStride(Integer rowIndexStride) {
            return rowIndexStride(Output.of(rowIndexStride));
        }

        public Builder stripeSizeBytes(@Nullable Output<Integer> stripeSizeBytes) {
            $.stripeSizeBytes = stripeSizeBytes;
            return this;
        }

        public Builder stripeSizeBytes(Integer stripeSizeBytes) {
            return stripeSizeBytes(Output.of(stripeSizeBytes));
        }

        public FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs build() {
            return $;
        }
    }

}
