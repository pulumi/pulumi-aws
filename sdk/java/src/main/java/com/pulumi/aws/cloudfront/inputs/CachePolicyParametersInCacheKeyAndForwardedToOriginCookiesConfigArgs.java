// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs Empty = new CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs();

    /**
     * Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookie_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
     * 
     */
    @Import(name="cookieBehavior", required=true)
    private Output<String> cookieBehavior;

    /**
     * @return Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookie_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
     * 
     */
    public Output<String> cookieBehavior() {
        return this.cookieBehavior;
    }

    /**
     * Object that contains a list of cookie names. See Items for more information.
     * 
     */
    @Import(name="cookies")
    private @Nullable Output<CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs> cookies;

    /**
     * @return Object that contains a list of cookie names. See Items for more information.
     * 
     */
    public Optional<Output<CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs>> cookies() {
        return Optional.ofNullable(this.cookies);
    }

    private CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs() {}

    private CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs $) {
        this.cookieBehavior = $.cookieBehavior;
        this.cookies = $.cookies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs $;

        public Builder() {
            $ = new CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs();
        }

        public Builder(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs defaults) {
            $ = new CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookieBehavior Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookie_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder cookieBehavior(Output<String> cookieBehavior) {
            $.cookieBehavior = cookieBehavior;
            return this;
        }

        /**
         * @param cookieBehavior Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookie_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder cookieBehavior(String cookieBehavior) {
            return cookieBehavior(Output.of(cookieBehavior));
        }

        /**
         * @param cookies Object that contains a list of cookie names. See Items for more information.
         * 
         * @return builder
         * 
         */
        public Builder cookies(@Nullable Output<CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs> cookies) {
            $.cookies = cookies;
            return this;
        }

        /**
         * @param cookies Object that contains a list of cookie names. See Items for more information.
         * 
         * @return builder
         * 
         */
        public Builder cookies(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs cookies) {
            return cookies(Output.of(cookies));
        }

        public CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs build() {
            if ($.cookieBehavior == null) {
                throw new MissingRequiredPropertyException("CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs", "cookieBehavior");
            }
            return $;
        }
    }

}
