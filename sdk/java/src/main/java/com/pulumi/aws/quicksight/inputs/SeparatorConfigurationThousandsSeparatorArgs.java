// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SeparatorConfigurationThousandsSeparatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final SeparatorConfigurationThousandsSeparatorArgs Empty = new SeparatorConfigurationThousandsSeparatorArgs();

    @Import(name="symbol")
    private @Nullable Output<String> symbol;

    public Optional<Output<String>> symbol() {
        return Optional.ofNullable(this.symbol);
    }

    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private SeparatorConfigurationThousandsSeparatorArgs() {}

    private SeparatorConfigurationThousandsSeparatorArgs(SeparatorConfigurationThousandsSeparatorArgs $) {
        this.symbol = $.symbol;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SeparatorConfigurationThousandsSeparatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SeparatorConfigurationThousandsSeparatorArgs $;

        public Builder() {
            $ = new SeparatorConfigurationThousandsSeparatorArgs();
        }

        public Builder(SeparatorConfigurationThousandsSeparatorArgs defaults) {
            $ = new SeparatorConfigurationThousandsSeparatorArgs(Objects.requireNonNull(defaults));
        }

        public Builder symbol(@Nullable Output<String> symbol) {
            $.symbol = symbol;
            return this;
        }

        public Builder symbol(String symbol) {
            return symbol(Output.of(symbol));
        }

        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public SeparatorConfigurationThousandsSeparatorArgs build() {
            return $;
        }
    }

}
