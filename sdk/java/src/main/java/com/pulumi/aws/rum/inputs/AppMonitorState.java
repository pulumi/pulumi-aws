// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rum.inputs;

import com.pulumi.aws.rum.inputs.AppMonitorAppMonitorConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppMonitorState extends com.pulumi.resources.ResourceArgs {

    public static final AppMonitorState Empty = new AppMonitorState();

    @Import(name="appMonitorConfiguration")
    private @Nullable Output<AppMonitorAppMonitorConfigurationArgs> appMonitorConfiguration;

    public Optional<Output<AppMonitorAppMonitorConfigurationArgs>> appMonitorConfiguration() {
        return Optional.ofNullable(this.appMonitorConfiguration);
    }

    @Import(name="appMonitorId")
    private @Nullable Output<String> appMonitorId;

    public Optional<Output<String>> appMonitorId() {
        return Optional.ofNullable(this.appMonitorId);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="cwLogEnabled")
    private @Nullable Output<Boolean> cwLogEnabled;

    public Optional<Output<Boolean>> cwLogEnabled() {
        return Optional.ofNullable(this.cwLogEnabled);
    }

    @Import(name="cwLogGroup")
    private @Nullable Output<String> cwLogGroup;

    public Optional<Output<String>> cwLogGroup() {
        return Optional.ofNullable(this.cwLogGroup);
    }

    @Import(name="domain")
    private @Nullable Output<String> domain;

    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private AppMonitorState() {}

    private AppMonitorState(AppMonitorState $) {
        this.appMonitorConfiguration = $.appMonitorConfiguration;
        this.appMonitorId = $.appMonitorId;
        this.arn = $.arn;
        this.cwLogEnabled = $.cwLogEnabled;
        this.cwLogGroup = $.cwLogGroup;
        this.domain = $.domain;
        this.name = $.name;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppMonitorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppMonitorState $;

        public Builder() {
            $ = new AppMonitorState();
        }

        public Builder(AppMonitorState defaults) {
            $ = new AppMonitorState(Objects.requireNonNull(defaults));
        }

        public Builder appMonitorConfiguration(@Nullable Output<AppMonitorAppMonitorConfigurationArgs> appMonitorConfiguration) {
            $.appMonitorConfiguration = appMonitorConfiguration;
            return this;
        }

        public Builder appMonitorConfiguration(AppMonitorAppMonitorConfigurationArgs appMonitorConfiguration) {
            return appMonitorConfiguration(Output.of(appMonitorConfiguration));
        }

        public Builder appMonitorId(@Nullable Output<String> appMonitorId) {
            $.appMonitorId = appMonitorId;
            return this;
        }

        public Builder appMonitorId(String appMonitorId) {
            return appMonitorId(Output.of(appMonitorId));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder cwLogEnabled(@Nullable Output<Boolean> cwLogEnabled) {
            $.cwLogEnabled = cwLogEnabled;
            return this;
        }

        public Builder cwLogEnabled(Boolean cwLogEnabled) {
            return cwLogEnabled(Output.of(cwLogEnabled));
        }

        public Builder cwLogGroup(@Nullable Output<String> cwLogGroup) {
            $.cwLogGroup = cwLogGroup;
            return this;
        }

        public Builder cwLogGroup(String cwLogGroup) {
            return cwLogGroup(Output.of(cwLogGroup));
        }

        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public AppMonitorState build() {
            return $;
        }
    }

}
