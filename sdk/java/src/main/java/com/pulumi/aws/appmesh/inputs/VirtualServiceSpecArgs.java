// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualServiceSpecProviderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualServiceSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualServiceSpecArgs Empty = new VirtualServiceSpecArgs();

    /**
     * App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
     * 
     */
    @Import(name="provider")
    private @Nullable Output<VirtualServiceSpecProviderArgs> provider;

    /**
     * @return App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
     * 
     */
    public Optional<Output<VirtualServiceSpecProviderArgs>> provider() {
        return Optional.ofNullable(this.provider);
    }

    private VirtualServiceSpecArgs() {}

    private VirtualServiceSpecArgs(VirtualServiceSpecArgs $) {
        this.provider = $.provider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualServiceSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualServiceSpecArgs $;

        public Builder() {
            $ = new VirtualServiceSpecArgs();
        }

        public Builder(VirtualServiceSpecArgs defaults) {
            $ = new VirtualServiceSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param provider App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
         * 
         * @return builder
         * 
         */
        public Builder provider(@Nullable Output<VirtualServiceSpecProviderArgs> provider) {
            $.provider = provider;
            return this;
        }

        /**
         * @param provider App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
         * 
         * @return builder
         * 
         */
        public Builder provider(VirtualServiceSpecProviderArgs provider) {
            return provider(Output.of(provider));
        }

        public VirtualServiceSpecArgs build() {
            return $;
        }
    }

}
