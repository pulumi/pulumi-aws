// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DateTimeParameterDeclarationArgs;
import com.pulumi.aws.quicksight.inputs.DecimalParameterDeclarationArgs;
import com.pulumi.aws.quicksight.inputs.IntegerParameterDeclarationArgs;
import com.pulumi.aws.quicksight.inputs.StringParameterDeclarationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateDefinitionParametersDeclarationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateDefinitionParametersDeclarationArgs Empty = new TemplateDefinitionParametersDeclarationArgs();

    @Import(name="dateTimeParameterDeclaration")
    private @Nullable Output<DateTimeParameterDeclarationArgs> dateTimeParameterDeclaration;

    public Optional<Output<DateTimeParameterDeclarationArgs>> dateTimeParameterDeclaration() {
        return Optional.ofNullable(this.dateTimeParameterDeclaration);
    }

    @Import(name="decimalParameterDeclaration")
    private @Nullable Output<DecimalParameterDeclarationArgs> decimalParameterDeclaration;

    public Optional<Output<DecimalParameterDeclarationArgs>> decimalParameterDeclaration() {
        return Optional.ofNullable(this.decimalParameterDeclaration);
    }

    @Import(name="integerParameterDeclaration")
    private @Nullable Output<IntegerParameterDeclarationArgs> integerParameterDeclaration;

    public Optional<Output<IntegerParameterDeclarationArgs>> integerParameterDeclaration() {
        return Optional.ofNullable(this.integerParameterDeclaration);
    }

    @Import(name="stringParameterDeclaration")
    private @Nullable Output<StringParameterDeclarationArgs> stringParameterDeclaration;

    public Optional<Output<StringParameterDeclarationArgs>> stringParameterDeclaration() {
        return Optional.ofNullable(this.stringParameterDeclaration);
    }

    private TemplateDefinitionParametersDeclarationArgs() {}

    private TemplateDefinitionParametersDeclarationArgs(TemplateDefinitionParametersDeclarationArgs $) {
        this.dateTimeParameterDeclaration = $.dateTimeParameterDeclaration;
        this.decimalParameterDeclaration = $.decimalParameterDeclaration;
        this.integerParameterDeclaration = $.integerParameterDeclaration;
        this.stringParameterDeclaration = $.stringParameterDeclaration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateDefinitionParametersDeclarationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateDefinitionParametersDeclarationArgs $;

        public Builder() {
            $ = new TemplateDefinitionParametersDeclarationArgs();
        }

        public Builder(TemplateDefinitionParametersDeclarationArgs defaults) {
            $ = new TemplateDefinitionParametersDeclarationArgs(Objects.requireNonNull(defaults));
        }

        public Builder dateTimeParameterDeclaration(@Nullable Output<DateTimeParameterDeclarationArgs> dateTimeParameterDeclaration) {
            $.dateTimeParameterDeclaration = dateTimeParameterDeclaration;
            return this;
        }

        public Builder dateTimeParameterDeclaration(DateTimeParameterDeclarationArgs dateTimeParameterDeclaration) {
            return dateTimeParameterDeclaration(Output.of(dateTimeParameterDeclaration));
        }

        public Builder decimalParameterDeclaration(@Nullable Output<DecimalParameterDeclarationArgs> decimalParameterDeclaration) {
            $.decimalParameterDeclaration = decimalParameterDeclaration;
            return this;
        }

        public Builder decimalParameterDeclaration(DecimalParameterDeclarationArgs decimalParameterDeclaration) {
            return decimalParameterDeclaration(Output.of(decimalParameterDeclaration));
        }

        public Builder integerParameterDeclaration(@Nullable Output<IntegerParameterDeclarationArgs> integerParameterDeclaration) {
            $.integerParameterDeclaration = integerParameterDeclaration;
            return this;
        }

        public Builder integerParameterDeclaration(IntegerParameterDeclarationArgs integerParameterDeclaration) {
            return integerParameterDeclaration(Output.of(integerParameterDeclaration));
        }

        public Builder stringParameterDeclaration(@Nullable Output<StringParameterDeclarationArgs> stringParameterDeclaration) {
            $.stringParameterDeclaration = stringParameterDeclaration;
            return this;
        }

        public Builder stringParameterDeclaration(StringParameterDeclarationArgs stringParameterDeclaration) {
            return stringParameterDeclaration(Output.of(stringParameterDeclaration));
        }

        public TemplateDefinitionParametersDeclarationArgs build() {
            return $;
        }
    }

}
