// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie.inputs;

import com.pulumi.aws.macie.inputs.FindingsFilterFindingCriteriaCriterionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FindingsFilterFindingCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final FindingsFilterFindingCriteriaArgs Empty = new FindingsFilterFindingCriteriaArgs();

    /**
     * A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
     * 
     */
    @Import(name="criterions")
    private @Nullable Output<List<FindingsFilterFindingCriteriaCriterionArgs>> criterions;

    /**
     * @return A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
     * 
     */
    public Optional<Output<List<FindingsFilterFindingCriteriaCriterionArgs>>> criterions() {
        return Optional.ofNullable(this.criterions);
    }

    private FindingsFilterFindingCriteriaArgs() {}

    private FindingsFilterFindingCriteriaArgs(FindingsFilterFindingCriteriaArgs $) {
        this.criterions = $.criterions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FindingsFilterFindingCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FindingsFilterFindingCriteriaArgs $;

        public Builder() {
            $ = new FindingsFilterFindingCriteriaArgs();
        }

        public Builder(FindingsFilterFindingCriteriaArgs defaults) {
            $ = new FindingsFilterFindingCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criterions A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
         * 
         * @return builder
         * 
         */
        public Builder criterions(@Nullable Output<List<FindingsFilterFindingCriteriaCriterionArgs>> criterions) {
            $.criterions = criterions;
            return this;
        }

        /**
         * @param criterions A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
         * 
         * @return builder
         * 
         */
        public Builder criterions(List<FindingsFilterFindingCriteriaCriterionArgs> criterions) {
            return criterions(Output.of(criterions));
        }

        /**
         * @param criterions A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
         * 
         * @return builder
         * 
         */
        public Builder criterions(FindingsFilterFindingCriteriaCriterionArgs... criterions) {
            return criterions(List.of(criterions));
        }

        public FindingsFilterFindingCriteriaArgs build() {
            return $;
        }
    }

}
