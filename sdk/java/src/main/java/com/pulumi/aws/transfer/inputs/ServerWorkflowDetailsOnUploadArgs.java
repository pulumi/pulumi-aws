// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ServerWorkflowDetailsOnUploadArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerWorkflowDetailsOnUploadArgs Empty = new ServerWorkflowDetailsOnUploadArgs();

    @Import(name="executionRole", required=true)
    private Output<String> executionRole;

    public Output<String> executionRole() {
        return this.executionRole;
    }

    @Import(name="workflowId", required=true)
    private Output<String> workflowId;

    public Output<String> workflowId() {
        return this.workflowId;
    }

    private ServerWorkflowDetailsOnUploadArgs() {}

    private ServerWorkflowDetailsOnUploadArgs(ServerWorkflowDetailsOnUploadArgs $) {
        this.executionRole = $.executionRole;
        this.workflowId = $.workflowId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerWorkflowDetailsOnUploadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerWorkflowDetailsOnUploadArgs $;

        public Builder() {
            $ = new ServerWorkflowDetailsOnUploadArgs();
        }

        public Builder(ServerWorkflowDetailsOnUploadArgs defaults) {
            $ = new ServerWorkflowDetailsOnUploadArgs(Objects.requireNonNull(defaults));
        }

        public Builder executionRole(Output<String> executionRole) {
            $.executionRole = executionRole;
            return this;
        }

        public Builder executionRole(String executionRole) {
            return executionRole(Output.of(executionRole));
        }

        public Builder workflowId(Output<String> workflowId) {
            $.workflowId = workflowId;
            return this;
        }

        public Builder workflowId(String workflowId) {
            return workflowId(Output.of(workflowId));
        }

        public ServerWorkflowDetailsOnUploadArgs build() {
            $.executionRole = Objects.requireNonNull($.executionRole, "expected parameter 'executionRole' to be non-null");
            $.workflowId = Objects.requireNonNull($.workflowId, "expected parameter 'workflowId' to be non-null");
            return $;
        }
    }

}
