// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ecs.TaskDefinitionArgs;
import com.pulumi.aws.ecs.inputs.TaskDefinitionState;
import com.pulumi.aws.ecs.outputs.TaskDefinitionEphemeralStorage;
import com.pulumi.aws.ecs.outputs.TaskDefinitionInferenceAccelerator;
import com.pulumi.aws.ecs.outputs.TaskDefinitionPlacementConstraint;
import com.pulumi.aws.ecs.outputs.TaskDefinitionProxyConfiguration;
import com.pulumi.aws.ecs.outputs.TaskDefinitionRuntimePlatform;
import com.pulumi.aws.ecs.outputs.TaskDefinitionVolume;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:ecs/taskDefinition:TaskDefinition")
public class TaskDefinition extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="containerDefinitions", refs={String.class}, tree="[0]")
    private Output<String> containerDefinitions;

    public Output<String> containerDefinitions() {
        return this.containerDefinitions;
    }
    @Export(name="cpu", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cpu;

    public Output<Optional<String>> cpu() {
        return Codegen.optional(this.cpu);
    }
    @Export(name="ephemeralStorage", refs={TaskDefinitionEphemeralStorage.class}, tree="[0]")
    private Output</* @Nullable */ TaskDefinitionEphemeralStorage> ephemeralStorage;

    public Output<Optional<TaskDefinitionEphemeralStorage>> ephemeralStorage() {
        return Codegen.optional(this.ephemeralStorage);
    }
    @Export(name="executionRoleArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> executionRoleArn;

    public Output<Optional<String>> executionRoleArn() {
        return Codegen.optional(this.executionRoleArn);
    }
    @Export(name="family", refs={String.class}, tree="[0]")
    private Output<String> family;

    public Output<String> family() {
        return this.family;
    }
    @Export(name="inferenceAccelerators", refs={List.class,TaskDefinitionInferenceAccelerator.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TaskDefinitionInferenceAccelerator>> inferenceAccelerators;

    public Output<Optional<List<TaskDefinitionInferenceAccelerator>>> inferenceAccelerators() {
        return Codegen.optional(this.inferenceAccelerators);
    }
    @Export(name="ipcMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipcMode;

    public Output<Optional<String>> ipcMode() {
        return Codegen.optional(this.ipcMode);
    }
    @Export(name="memory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> memory;

    public Output<Optional<String>> memory() {
        return Codegen.optional(this.memory);
    }
    @Export(name="networkMode", refs={String.class}, tree="[0]")
    private Output<String> networkMode;

    public Output<String> networkMode() {
        return this.networkMode;
    }
    @Export(name="pidMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pidMode;

    public Output<Optional<String>> pidMode() {
        return Codegen.optional(this.pidMode);
    }
    @Export(name="placementConstraints", refs={List.class,TaskDefinitionPlacementConstraint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TaskDefinitionPlacementConstraint>> placementConstraints;

    public Output<Optional<List<TaskDefinitionPlacementConstraint>>> placementConstraints() {
        return Codegen.optional(this.placementConstraints);
    }
    @Export(name="proxyConfiguration", refs={TaskDefinitionProxyConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TaskDefinitionProxyConfiguration> proxyConfiguration;

    public Output<Optional<TaskDefinitionProxyConfiguration>> proxyConfiguration() {
        return Codegen.optional(this.proxyConfiguration);
    }
    @Export(name="requiresCompatibilities", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> requiresCompatibilities;

    public Output<Optional<List<String>>> requiresCompatibilities() {
        return Codegen.optional(this.requiresCompatibilities);
    }
    @Export(name="revision", refs={Integer.class}, tree="[0]")
    private Output<Integer> revision;

    public Output<Integer> revision() {
        return this.revision;
    }
    @Export(name="runtimePlatform", refs={TaskDefinitionRuntimePlatform.class}, tree="[0]")
    private Output</* @Nullable */ TaskDefinitionRuntimePlatform> runtimePlatform;

    public Output<Optional<TaskDefinitionRuntimePlatform>> runtimePlatform() {
        return Codegen.optional(this.runtimePlatform);
    }
    @Export(name="skipDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> skipDestroy;

    public Output<Optional<Boolean>> skipDestroy() {
        return Codegen.optional(this.skipDestroy);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="taskRoleArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> taskRoleArn;

    public Output<Optional<String>> taskRoleArn() {
        return Codegen.optional(this.taskRoleArn);
    }
    @Export(name="volumes", refs={List.class,TaskDefinitionVolume.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TaskDefinitionVolume>> volumes;

    public Output<Optional<List<TaskDefinitionVolume>>> volumes() {
        return Codegen.optional(this.volumes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TaskDefinition(String name) {
        this(name, TaskDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TaskDefinition(String name, TaskDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TaskDefinition(String name, TaskDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecs/taskDefinition:TaskDefinition", name, args == null ? TaskDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TaskDefinition(String name, Output<String> id, @Nullable TaskDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecs/taskDefinition:TaskDefinition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TaskDefinition get(String name, Output<String> id, @Nullable TaskDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TaskDefinition(name, id, state, options);
    }
}
