// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.waf.inputs;

import com.pulumi.aws.waf.inputs.SizeConstraintSetSizeConstraintArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SizeConstraintSetState extends com.pulumi.resources.ResourceArgs {

    public static final SizeConstraintSetState Empty = new SizeConstraintSetState();

    /**
     * Amazon Resource Name (ARN).
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN).
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Name or description of the Size Constraint Set.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name or description of the Size Constraint Set.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Parts of web requests that you want to inspect the size of.
     * 
     */
    @Import(name="sizeConstraints")
    private @Nullable Output<List<SizeConstraintSetSizeConstraintArgs>> sizeConstraints;

    /**
     * @return Parts of web requests that you want to inspect the size of.
     * 
     */
    public Optional<Output<List<SizeConstraintSetSizeConstraintArgs>>> sizeConstraints() {
        return Optional.ofNullable(this.sizeConstraints);
    }

    private SizeConstraintSetState() {}

    private SizeConstraintSetState(SizeConstraintSetState $) {
        this.arn = $.arn;
        this.name = $.name;
        this.sizeConstraints = $.sizeConstraints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SizeConstraintSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SizeConstraintSetState $;

        public Builder() {
            $ = new SizeConstraintSetState();
        }

        public Builder(SizeConstraintSetState defaults) {
            $ = new SizeConstraintSetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Amazon Resource Name (ARN).
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN).
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param name Name or description of the Size Constraint Set.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name or description of the Size Constraint Set.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sizeConstraints Parts of web requests that you want to inspect the size of.
         * 
         * @return builder
         * 
         */
        public Builder sizeConstraints(@Nullable Output<List<SizeConstraintSetSizeConstraintArgs>> sizeConstraints) {
            $.sizeConstraints = sizeConstraints;
            return this;
        }

        /**
         * @param sizeConstraints Parts of web requests that you want to inspect the size of.
         * 
         * @return builder
         * 
         */
        public Builder sizeConstraints(List<SizeConstraintSetSizeConstraintArgs> sizeConstraints) {
            return sizeConstraints(Output.of(sizeConstraints));
        }

        /**
         * @param sizeConstraints Parts of web requests that you want to inspect the size of.
         * 
         * @return builder
         * 
         */
        public Builder sizeConstraints(SizeConstraintSetSizeConstraintArgs... sizeConstraints) {
            return sizeConstraints(List.of(sizeConstraints));
        }

        public SizeConstraintSetState build() {
            return $;
        }
    }

}
