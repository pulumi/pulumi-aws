// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codecommit.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRepositoryPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryPlainArgs Empty = new GetRepositoryPlainArgs();

    /**
     * Name for the repository. This needs to be less than 100 characters.
     * 
     */
    @Import(name="repositoryName", required=true)
    private String repositoryName;

    /**
     * @return Name for the repository. This needs to be less than 100 characters.
     * 
     */
    public String repositoryName() {
        return this.repositoryName;
    }

    private GetRepositoryPlainArgs() {}

    private GetRepositoryPlainArgs(GetRepositoryPlainArgs $) {
        this.repositoryName = $.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryPlainArgs $;

        public Builder() {
            $ = new GetRepositoryPlainArgs();
        }

        public Builder(GetRepositoryPlainArgs defaults) {
            $ = new GetRepositoryPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryName Name for the repository. This needs to be less than 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(String repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        public GetRepositoryPlainArgs build() {
            if ($.repositoryName == null) {
                throw new MissingRequiredPropertyException("GetRepositoryPlainArgs", "repositoryName");
            }
            return $;
        }
    }

}
