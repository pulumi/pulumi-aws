// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventBusPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventBusPolicyArgs Empty = new EventBusPolicyArgs();

    /**
     * The name of the event bus to set the permissions on.
     * If you omit this, the permissions are set on the `default` event bus.
     * 
     */
    @Import(name="eventBusName")
    private @Nullable Output<String> eventBusName;

    /**
     * @return The name of the event bus to set the permissions on.
     * If you omit this, the permissions are set on the `default` event bus.
     * 
     */
    public Optional<Output<String>> eventBusName() {
        return Optional.ofNullable(this.eventBusName);
    }

    /**
     * The text of the policy.
     * 
     */
    @Import(name="policy", required=true)
    private Output<String> policy;

    /**
     * @return The text of the policy.
     * 
     */
    public Output<String> policy() {
        return this.policy;
    }

    private EventBusPolicyArgs() {}

    private EventBusPolicyArgs(EventBusPolicyArgs $) {
        this.eventBusName = $.eventBusName;
        this.policy = $.policy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventBusPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventBusPolicyArgs $;

        public Builder() {
            $ = new EventBusPolicyArgs();
        }

        public Builder(EventBusPolicyArgs defaults) {
            $ = new EventBusPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventBusName The name of the event bus to set the permissions on.
         * If you omit this, the permissions are set on the `default` event bus.
         * 
         * @return builder
         * 
         */
        public Builder eventBusName(@Nullable Output<String> eventBusName) {
            $.eventBusName = eventBusName;
            return this;
        }

        /**
         * @param eventBusName The name of the event bus to set the permissions on.
         * If you omit this, the permissions are set on the `default` event bus.
         * 
         * @return builder
         * 
         */
        public Builder eventBusName(String eventBusName) {
            return eventBusName(Output.of(eventBusName));
        }

        /**
         * @param policy The text of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The text of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public EventBusPolicyArgs build() {
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            return $;
        }
    }

}
