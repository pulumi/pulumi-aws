// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrserverless;

import com.pulumi.aws.emrserverless.inputs.ApplicationAutoStartConfigurationArgs;
import com.pulumi.aws.emrserverless.inputs.ApplicationAutoStopConfigurationArgs;
import com.pulumi.aws.emrserverless.inputs.ApplicationInitialCapacityArgs;
import com.pulumi.aws.emrserverless.inputs.ApplicationMaximumCapacityArgs;
import com.pulumi.aws.emrserverless.inputs.ApplicationNetworkConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    @Import(name="autoStartConfiguration")
    private @Nullable Output<ApplicationAutoStartConfigurationArgs> autoStartConfiguration;

    public Optional<Output<ApplicationAutoStartConfigurationArgs>> autoStartConfiguration() {
        return Optional.ofNullable(this.autoStartConfiguration);
    }

    @Import(name="autoStopConfiguration")
    private @Nullable Output<ApplicationAutoStopConfigurationArgs> autoStopConfiguration;

    public Optional<Output<ApplicationAutoStopConfigurationArgs>> autoStopConfiguration() {
        return Optional.ofNullable(this.autoStopConfiguration);
    }

    @Import(name="initialCapacities")
    private @Nullable Output<List<ApplicationInitialCapacityArgs>> initialCapacities;

    public Optional<Output<List<ApplicationInitialCapacityArgs>>> initialCapacities() {
        return Optional.ofNullable(this.initialCapacities);
    }

    @Import(name="maximumCapacity")
    private @Nullable Output<ApplicationMaximumCapacityArgs> maximumCapacity;

    public Optional<Output<ApplicationMaximumCapacityArgs>> maximumCapacity() {
        return Optional.ofNullable(this.maximumCapacity);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="networkConfiguration")
    private @Nullable Output<ApplicationNetworkConfigurationArgs> networkConfiguration;

    public Optional<Output<ApplicationNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    @Import(name="releaseLabel", required=true)
    private Output<String> releaseLabel;

    public Output<String> releaseLabel() {
        return this.releaseLabel;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ApplicationArgs() {}

    private ApplicationArgs(ApplicationArgs $) {
        this.architecture = $.architecture;
        this.autoStartConfiguration = $.autoStartConfiguration;
        this.autoStopConfiguration = $.autoStopConfiguration;
        this.initialCapacities = $.initialCapacities;
        this.maximumCapacity = $.maximumCapacity;
        this.name = $.name;
        this.networkConfiguration = $.networkConfiguration;
        this.releaseLabel = $.releaseLabel;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationArgs $;

        public Builder() {
            $ = new ApplicationArgs();
        }

        public Builder(ApplicationArgs defaults) {
            $ = new ApplicationArgs(Objects.requireNonNull(defaults));
        }

        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        public Builder autoStartConfiguration(@Nullable Output<ApplicationAutoStartConfigurationArgs> autoStartConfiguration) {
            $.autoStartConfiguration = autoStartConfiguration;
            return this;
        }

        public Builder autoStartConfiguration(ApplicationAutoStartConfigurationArgs autoStartConfiguration) {
            return autoStartConfiguration(Output.of(autoStartConfiguration));
        }

        public Builder autoStopConfiguration(@Nullable Output<ApplicationAutoStopConfigurationArgs> autoStopConfiguration) {
            $.autoStopConfiguration = autoStopConfiguration;
            return this;
        }

        public Builder autoStopConfiguration(ApplicationAutoStopConfigurationArgs autoStopConfiguration) {
            return autoStopConfiguration(Output.of(autoStopConfiguration));
        }

        public Builder initialCapacities(@Nullable Output<List<ApplicationInitialCapacityArgs>> initialCapacities) {
            $.initialCapacities = initialCapacities;
            return this;
        }

        public Builder initialCapacities(List<ApplicationInitialCapacityArgs> initialCapacities) {
            return initialCapacities(Output.of(initialCapacities));
        }

        public Builder initialCapacities(ApplicationInitialCapacityArgs... initialCapacities) {
            return initialCapacities(List.of(initialCapacities));
        }

        public Builder maximumCapacity(@Nullable Output<ApplicationMaximumCapacityArgs> maximumCapacity) {
            $.maximumCapacity = maximumCapacity;
            return this;
        }

        public Builder maximumCapacity(ApplicationMaximumCapacityArgs maximumCapacity) {
            return maximumCapacity(Output.of(maximumCapacity));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networkConfiguration(@Nullable Output<ApplicationNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder networkConfiguration(ApplicationNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        public Builder releaseLabel(Output<String> releaseLabel) {
            $.releaseLabel = releaseLabel;
            return this;
        }

        public Builder releaseLabel(String releaseLabel) {
            return releaseLabel(Output.of(releaseLabel));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ApplicationArgs build() {
            $.releaseLabel = Objects.requireNonNull($.releaseLabel, "expected parameter 'releaseLabel' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
