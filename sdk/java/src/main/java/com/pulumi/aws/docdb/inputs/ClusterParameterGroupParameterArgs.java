// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.docdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterParameterGroupParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterParameterGroupParameterArgs Empty = new ClusterParameterGroupParameterArgs();

    /**
     * Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
     * 
     */
    @Import(name="applyMethod")
    private @Nullable Output<String> applyMethod;

    /**
     * @return Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
     * 
     */
    public Optional<Output<String>> applyMethod() {
        return Optional.ofNullable(this.applyMethod);
    }

    /**
     * The name of the DocumentDB parameter.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the DocumentDB parameter.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The value of the DocumentDB parameter.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of the DocumentDB parameter.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private ClusterParameterGroupParameterArgs() {}

    private ClusterParameterGroupParameterArgs(ClusterParameterGroupParameterArgs $) {
        this.applyMethod = $.applyMethod;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterParameterGroupParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterParameterGroupParameterArgs $;

        public Builder() {
            $ = new ClusterParameterGroupParameterArgs();
        }

        public Builder(ClusterParameterGroupParameterArgs defaults) {
            $ = new ClusterParameterGroupParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applyMethod Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
         * 
         * @return builder
         * 
         */
        public Builder applyMethod(@Nullable Output<String> applyMethod) {
            $.applyMethod = applyMethod;
            return this;
        }

        /**
         * @param applyMethod Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
         * 
         * @return builder
         * 
         */
        public Builder applyMethod(String applyMethod) {
            return applyMethod(Output.of(applyMethod));
        }

        /**
         * @param name The name of the DocumentDB parameter.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the DocumentDB parameter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value The value of the DocumentDB parameter.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the DocumentDB parameter.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ClusterParameterGroupParameterArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ClusterParameterGroupParameterArgs", "name");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("ClusterParameterGroupParameterArgs", "value");
            }
            return $;
        }
    }

}
