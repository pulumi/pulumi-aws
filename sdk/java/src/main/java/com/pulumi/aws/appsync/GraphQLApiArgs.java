// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.aws.appsync.inputs.GraphQLApiAdditionalAuthenticationProviderArgs;
import com.pulumi.aws.appsync.inputs.GraphQLApiLambdaAuthorizerConfigArgs;
import com.pulumi.aws.appsync.inputs.GraphQLApiLogConfigArgs;
import com.pulumi.aws.appsync.inputs.GraphQLApiOpenidConnectConfigArgs;
import com.pulumi.aws.appsync.inputs.GraphQLApiUserPoolConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GraphQLApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final GraphQLApiArgs Empty = new GraphQLApiArgs();

    @Import(name="additionalAuthenticationProviders")
    private @Nullable Output<List<GraphQLApiAdditionalAuthenticationProviderArgs>> additionalAuthenticationProviders;

    public Optional<Output<List<GraphQLApiAdditionalAuthenticationProviderArgs>>> additionalAuthenticationProviders() {
        return Optional.ofNullable(this.additionalAuthenticationProviders);
    }

    @Import(name="authenticationType", required=true)
    private Output<String> authenticationType;

    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    @Import(name="lambdaAuthorizerConfig")
    private @Nullable Output<GraphQLApiLambdaAuthorizerConfigArgs> lambdaAuthorizerConfig;

    public Optional<Output<GraphQLApiLambdaAuthorizerConfigArgs>> lambdaAuthorizerConfig() {
        return Optional.ofNullable(this.lambdaAuthorizerConfig);
    }

    @Import(name="logConfig")
    private @Nullable Output<GraphQLApiLogConfigArgs> logConfig;

    public Optional<Output<GraphQLApiLogConfigArgs>> logConfig() {
        return Optional.ofNullable(this.logConfig);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="openidConnectConfig")
    private @Nullable Output<GraphQLApiOpenidConnectConfigArgs> openidConnectConfig;

    public Optional<Output<GraphQLApiOpenidConnectConfigArgs>> openidConnectConfig() {
        return Optional.ofNullable(this.openidConnectConfig);
    }

    @Import(name="schema")
    private @Nullable Output<String> schema;

    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userPoolConfig")
    private @Nullable Output<GraphQLApiUserPoolConfigArgs> userPoolConfig;

    public Optional<Output<GraphQLApiUserPoolConfigArgs>> userPoolConfig() {
        return Optional.ofNullable(this.userPoolConfig);
    }

    @Import(name="xrayEnabled")
    private @Nullable Output<Boolean> xrayEnabled;

    public Optional<Output<Boolean>> xrayEnabled() {
        return Optional.ofNullable(this.xrayEnabled);
    }

    private GraphQLApiArgs() {}

    private GraphQLApiArgs(GraphQLApiArgs $) {
        this.additionalAuthenticationProviders = $.additionalAuthenticationProviders;
        this.authenticationType = $.authenticationType;
        this.lambdaAuthorizerConfig = $.lambdaAuthorizerConfig;
        this.logConfig = $.logConfig;
        this.name = $.name;
        this.openidConnectConfig = $.openidConnectConfig;
        this.schema = $.schema;
        this.tags = $.tags;
        this.userPoolConfig = $.userPoolConfig;
        this.xrayEnabled = $.xrayEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GraphQLApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GraphQLApiArgs $;

        public Builder() {
            $ = new GraphQLApiArgs();
        }

        public Builder(GraphQLApiArgs defaults) {
            $ = new GraphQLApiArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalAuthenticationProviders(@Nullable Output<List<GraphQLApiAdditionalAuthenticationProviderArgs>> additionalAuthenticationProviders) {
            $.additionalAuthenticationProviders = additionalAuthenticationProviders;
            return this;
        }

        public Builder additionalAuthenticationProviders(List<GraphQLApiAdditionalAuthenticationProviderArgs> additionalAuthenticationProviders) {
            return additionalAuthenticationProviders(Output.of(additionalAuthenticationProviders));
        }

        public Builder additionalAuthenticationProviders(GraphQLApiAdditionalAuthenticationProviderArgs... additionalAuthenticationProviders) {
            return additionalAuthenticationProviders(List.of(additionalAuthenticationProviders));
        }

        public Builder authenticationType(Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        public Builder lambdaAuthorizerConfig(@Nullable Output<GraphQLApiLambdaAuthorizerConfigArgs> lambdaAuthorizerConfig) {
            $.lambdaAuthorizerConfig = lambdaAuthorizerConfig;
            return this;
        }

        public Builder lambdaAuthorizerConfig(GraphQLApiLambdaAuthorizerConfigArgs lambdaAuthorizerConfig) {
            return lambdaAuthorizerConfig(Output.of(lambdaAuthorizerConfig));
        }

        public Builder logConfig(@Nullable Output<GraphQLApiLogConfigArgs> logConfig) {
            $.logConfig = logConfig;
            return this;
        }

        public Builder logConfig(GraphQLApiLogConfigArgs logConfig) {
            return logConfig(Output.of(logConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder openidConnectConfig(@Nullable Output<GraphQLApiOpenidConnectConfigArgs> openidConnectConfig) {
            $.openidConnectConfig = openidConnectConfig;
            return this;
        }

        public Builder openidConnectConfig(GraphQLApiOpenidConnectConfigArgs openidConnectConfig) {
            return openidConnectConfig(Output.of(openidConnectConfig));
        }

        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userPoolConfig(@Nullable Output<GraphQLApiUserPoolConfigArgs> userPoolConfig) {
            $.userPoolConfig = userPoolConfig;
            return this;
        }

        public Builder userPoolConfig(GraphQLApiUserPoolConfigArgs userPoolConfig) {
            return userPoolConfig(Output.of(userPoolConfig));
        }

        public Builder xrayEnabled(@Nullable Output<Boolean> xrayEnabled) {
            $.xrayEnabled = xrayEnabled;
            return this;
        }

        public Builder xrayEnabled(Boolean xrayEnabled) {
            return xrayEnabled(Output.of(xrayEnabled));
        }

        public GraphQLApiArgs build() {
            $.authenticationType = Objects.requireNonNull($.authenticationType, "expected parameter 'authenticationType' to be non-null");
            return $;
        }
    }

}
