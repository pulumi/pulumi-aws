// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.Column;
import com.pulumi.aws.quicksight.outputs.FiltersCategoryFilterConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FiltersCategoryFilter {
    private Column column;
    private FiltersCategoryFilterConfiguration configuration;
    private String filterId;

    private FiltersCategoryFilter() {}
    public Column column() {
        return this.column;
    }
    public FiltersCategoryFilterConfiguration configuration() {
        return this.configuration;
    }
    public String filterId() {
        return this.filterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FiltersCategoryFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Column column;
        private FiltersCategoryFilterConfiguration configuration;
        private String filterId;
        public Builder() {}
        public Builder(FiltersCategoryFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.configuration = defaults.configuration;
    	      this.filterId = defaults.filterId;
        }

        @CustomType.Setter
        public Builder column(Column column) {
            if (column == null) {
              throw new MissingRequiredPropertyException("FiltersCategoryFilter", "column");
            }
            this.column = column;
            return this;
        }
        @CustomType.Setter
        public Builder configuration(FiltersCategoryFilterConfiguration configuration) {
            if (configuration == null) {
              throw new MissingRequiredPropertyException("FiltersCategoryFilter", "configuration");
            }
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder filterId(String filterId) {
            if (filterId == null) {
              throw new MissingRequiredPropertyException("FiltersCategoryFilter", "filterId");
            }
            this.filterId = filterId;
            return this;
        }
        public FiltersCategoryFilter build() {
            final var _resultValue = new FiltersCategoryFilter();
            _resultValue.column = column;
            _resultValue.configuration = configuration;
            _resultValue.filterId = filterId;
            return _resultValue;
        }
    }
}
