// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.CellStyleArgs;
import com.pulumi.aws.quicksight.inputs.VisualsTableVisualChartConfigurationTableOptionsRowAlternateColorOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsTableVisualChartConfigurationTableOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsTableVisualChartConfigurationTableOptionsArgs Empty = new VisualsTableVisualChartConfigurationTableOptionsArgs();

    @Import(name="cellStyle")
    private @Nullable Output<CellStyleArgs> cellStyle;

    public Optional<Output<CellStyleArgs>> cellStyle() {
        return Optional.ofNullable(this.cellStyle);
    }

    @Import(name="headerStyle")
    private @Nullable Output<CellStyleArgs> headerStyle;

    public Optional<Output<CellStyleArgs>> headerStyle() {
        return Optional.ofNullable(this.headerStyle);
    }

    @Import(name="orientation")
    private @Nullable Output<String> orientation;

    public Optional<Output<String>> orientation() {
        return Optional.ofNullable(this.orientation);
    }

    @Import(name="rowAlternateColorOptions")
    private @Nullable Output<VisualsTableVisualChartConfigurationTableOptionsRowAlternateColorOptionsArgs> rowAlternateColorOptions;

    public Optional<Output<VisualsTableVisualChartConfigurationTableOptionsRowAlternateColorOptionsArgs>> rowAlternateColorOptions() {
        return Optional.ofNullable(this.rowAlternateColorOptions);
    }

    private VisualsTableVisualChartConfigurationTableOptionsArgs() {}

    private VisualsTableVisualChartConfigurationTableOptionsArgs(VisualsTableVisualChartConfigurationTableOptionsArgs $) {
        this.cellStyle = $.cellStyle;
        this.headerStyle = $.headerStyle;
        this.orientation = $.orientation;
        this.rowAlternateColorOptions = $.rowAlternateColorOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsTableVisualChartConfigurationTableOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsTableVisualChartConfigurationTableOptionsArgs $;

        public Builder() {
            $ = new VisualsTableVisualChartConfigurationTableOptionsArgs();
        }

        public Builder(VisualsTableVisualChartConfigurationTableOptionsArgs defaults) {
            $ = new VisualsTableVisualChartConfigurationTableOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder cellStyle(@Nullable Output<CellStyleArgs> cellStyle) {
            $.cellStyle = cellStyle;
            return this;
        }

        public Builder cellStyle(CellStyleArgs cellStyle) {
            return cellStyle(Output.of(cellStyle));
        }

        public Builder headerStyle(@Nullable Output<CellStyleArgs> headerStyle) {
            $.headerStyle = headerStyle;
            return this;
        }

        public Builder headerStyle(CellStyleArgs headerStyle) {
            return headerStyle(Output.of(headerStyle));
        }

        public Builder orientation(@Nullable Output<String> orientation) {
            $.orientation = orientation;
            return this;
        }

        public Builder orientation(String orientation) {
            return orientation(Output.of(orientation));
        }

        public Builder rowAlternateColorOptions(@Nullable Output<VisualsTableVisualChartConfigurationTableOptionsRowAlternateColorOptionsArgs> rowAlternateColorOptions) {
            $.rowAlternateColorOptions = rowAlternateColorOptions;
            return this;
        }

        public Builder rowAlternateColorOptions(VisualsTableVisualChartConfigurationTableOptionsRowAlternateColorOptionsArgs rowAlternateColorOptions) {
            return rowAlternateColorOptions(Output.of(rowAlternateColorOptions));
        }

        public VisualsTableVisualChartConfigurationTableOptionsArgs build() {
            return $;
        }
    }

}
