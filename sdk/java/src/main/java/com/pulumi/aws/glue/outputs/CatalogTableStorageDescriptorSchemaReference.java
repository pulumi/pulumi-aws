// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.aws.glue.outputs.CatalogTableStorageDescriptorSchemaReferenceSchemaId;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CatalogTableStorageDescriptorSchemaReference {
    /**
     * @return Configuration block that contains schema identity fields. Either this or the `schema_version_id` has to be provided. See `schema_id` below.
     * 
     */
    private @Nullable CatalogTableStorageDescriptorSchemaReferenceSchemaId schemaId;
    /**
     * @return Unique ID assigned to a version of the schema. Either this or the `schema_id` has to be provided.
     * 
     */
    private @Nullable String schemaVersionId;
    /**
     * @return Version number of the schema.
     * 
     */
    private Integer schemaVersionNumber;

    private CatalogTableStorageDescriptorSchemaReference() {}
    /**
     * @return Configuration block that contains schema identity fields. Either this or the `schema_version_id` has to be provided. See `schema_id` below.
     * 
     */
    public Optional<CatalogTableStorageDescriptorSchemaReferenceSchemaId> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }
    /**
     * @return Unique ID assigned to a version of the schema. Either this or the `schema_id` has to be provided.
     * 
     */
    public Optional<String> schemaVersionId() {
        return Optional.ofNullable(this.schemaVersionId);
    }
    /**
     * @return Version number of the schema.
     * 
     */
    public Integer schemaVersionNumber() {
        return this.schemaVersionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogTableStorageDescriptorSchemaReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CatalogTableStorageDescriptorSchemaReferenceSchemaId schemaId;
        private @Nullable String schemaVersionId;
        private Integer schemaVersionNumber;
        public Builder() {}
        public Builder(CatalogTableStorageDescriptorSchemaReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schemaId = defaults.schemaId;
    	      this.schemaVersionId = defaults.schemaVersionId;
    	      this.schemaVersionNumber = defaults.schemaVersionNumber;
        }

        @CustomType.Setter
        public Builder schemaId(@Nullable CatalogTableStorageDescriptorSchemaReferenceSchemaId schemaId) {
            this.schemaId = schemaId;
            return this;
        }
        @CustomType.Setter
        public Builder schemaVersionId(@Nullable String schemaVersionId) {
            this.schemaVersionId = schemaVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder schemaVersionNumber(Integer schemaVersionNumber) {
            this.schemaVersionNumber = Objects.requireNonNull(schemaVersionNumber);
            return this;
        }
        public CatalogTableStorageDescriptorSchemaReference build() {
            final var o = new CatalogTableStorageDescriptorSchemaReference();
            o.schemaId = schemaId;
            o.schemaVersionId = schemaVersionId;
            o.schemaVersionNumber = schemaVersionNumber;
            return o;
        }
    }
}
