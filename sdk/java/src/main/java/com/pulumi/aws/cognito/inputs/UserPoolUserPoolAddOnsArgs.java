// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.aws.cognito.inputs.UserPoolUserPoolAddOnsAdvancedSecurityAdditionalFlowsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPoolUserPoolAddOnsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPoolUserPoolAddOnsArgs Empty = new UserPoolUserPoolAddOnsArgs();

    /**
     * A block to specify the threat protection configuration options for additional authentication types in your user pool, including custom authentication. Detailed below.
     * 
     */
    @Import(name="advancedSecurityAdditionalFlows")
    private @Nullable Output<UserPoolUserPoolAddOnsAdvancedSecurityAdditionalFlowsArgs> advancedSecurityAdditionalFlows;

    /**
     * @return A block to specify the threat protection configuration options for additional authentication types in your user pool, including custom authentication. Detailed below.
     * 
     */
    public Optional<Output<UserPoolUserPoolAddOnsAdvancedSecurityAdditionalFlowsArgs>> advancedSecurityAdditionalFlows() {
        return Optional.ofNullable(this.advancedSecurityAdditionalFlows);
    }

    /**
     * Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
     * 
     */
    @Import(name="advancedSecurityMode", required=true)
    private Output<String> advancedSecurityMode;

    /**
     * @return Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
     * 
     */
    public Output<String> advancedSecurityMode() {
        return this.advancedSecurityMode;
    }

    private UserPoolUserPoolAddOnsArgs() {}

    private UserPoolUserPoolAddOnsArgs(UserPoolUserPoolAddOnsArgs $) {
        this.advancedSecurityAdditionalFlows = $.advancedSecurityAdditionalFlows;
        this.advancedSecurityMode = $.advancedSecurityMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPoolUserPoolAddOnsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPoolUserPoolAddOnsArgs $;

        public Builder() {
            $ = new UserPoolUserPoolAddOnsArgs();
        }

        public Builder(UserPoolUserPoolAddOnsArgs defaults) {
            $ = new UserPoolUserPoolAddOnsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advancedSecurityAdditionalFlows A block to specify the threat protection configuration options for additional authentication types in your user pool, including custom authentication. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder advancedSecurityAdditionalFlows(@Nullable Output<UserPoolUserPoolAddOnsAdvancedSecurityAdditionalFlowsArgs> advancedSecurityAdditionalFlows) {
            $.advancedSecurityAdditionalFlows = advancedSecurityAdditionalFlows;
            return this;
        }

        /**
         * @param advancedSecurityAdditionalFlows A block to specify the threat protection configuration options for additional authentication types in your user pool, including custom authentication. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder advancedSecurityAdditionalFlows(UserPoolUserPoolAddOnsAdvancedSecurityAdditionalFlowsArgs advancedSecurityAdditionalFlows) {
            return advancedSecurityAdditionalFlows(Output.of(advancedSecurityAdditionalFlows));
        }

        /**
         * @param advancedSecurityMode Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
         * 
         * @return builder
         * 
         */
        public Builder advancedSecurityMode(Output<String> advancedSecurityMode) {
            $.advancedSecurityMode = advancedSecurityMode;
            return this;
        }

        /**
         * @param advancedSecurityMode Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
         * 
         * @return builder
         * 
         */
        public Builder advancedSecurityMode(String advancedSecurityMode) {
            return advancedSecurityMode(Output.of(advancedSecurityMode));
        }

        public UserPoolUserPoolAddOnsArgs build() {
            if ($.advancedSecurityMode == null) {
                throw new MissingRequiredPropertyException("UserPoolUserPoolAddOnsArgs", "advancedSecurityMode");
            }
            return $;
        }
    }

}
