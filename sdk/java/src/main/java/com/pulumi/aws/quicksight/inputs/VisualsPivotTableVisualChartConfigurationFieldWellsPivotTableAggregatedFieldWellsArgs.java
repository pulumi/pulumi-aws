// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs Empty = new VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs();

    @Import(name="columns")
    private @Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs>> columns;

    public Optional<Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs>>> columns() {
        return Optional.ofNullable(this.columns);
    }

    @Import(name="rows")
    private @Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs>> rows;

    public Optional<Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs>>> rows() {
        return Optional.ofNullable(this.rows);
    }

    @Import(name="values")
    private @Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs>> values;

    public Optional<Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    private VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs() {}

    private VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs $) {
        this.columns = $.columns;
        this.rows = $.rows;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs(Objects.requireNonNull(defaults));
        }

        public Builder columns(@Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        public Builder columns(List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        public Builder columns(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder rows(@Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs>> rows) {
            $.rows = rows;
            return this;
        }

        public Builder rows(List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs> rows) {
            return rows(Output.of(rows));
        }

        public Builder rows(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsRowArgs... rows) {
            return rows(List.of(rows));
        }

        public Builder values(@Nullable Output<List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs> values) {
            return values(Output.of(values));
        }

        public Builder values(VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsValueArgs... values) {
            return values(List.of(values));
        }

        public VisualsPivotTableVisualChartConfigurationFieldWellsPivotTableAggregatedFieldWellsArgs build() {
            return $;
        }
    }

}
