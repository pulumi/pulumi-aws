// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RecorderRecordingModeRecordingModeOverride {
    /**
     * @return A description you provide of the override.
     * 
     */
    private @Nullable String description;
    /**
     * @return The recording frequency for the resources in the override block. `CONTINUOUS` or `DAILY`.
     * 
     */
    private String recordingFrequency;
    /**
     * @return A list that specifies the types of AWS resources for which the override applies to.  See [restrictions in the AWS Docs](https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingModeOverride.html)
     * 
     */
    private List<String> resourceTypes;

    private RecorderRecordingModeRecordingModeOverride() {}
    /**
     * @return A description you provide of the override.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The recording frequency for the resources in the override block. `CONTINUOUS` or `DAILY`.
     * 
     */
    public String recordingFrequency() {
        return this.recordingFrequency;
    }
    /**
     * @return A list that specifies the types of AWS resources for which the override applies to.  See [restrictions in the AWS Docs](https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingModeOverride.html)
     * 
     */
    public List<String> resourceTypes() {
        return this.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecorderRecordingModeRecordingModeOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private String recordingFrequency;
        private List<String> resourceTypes;
        public Builder() {}
        public Builder(RecorderRecordingModeRecordingModeOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.recordingFrequency = defaults.recordingFrequency;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder recordingFrequency(String recordingFrequency) {
            if (recordingFrequency == null) {
              throw new MissingRequiredPropertyException("RecorderRecordingModeRecordingModeOverride", "recordingFrequency");
            }
            this.recordingFrequency = recordingFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(List<String> resourceTypes) {
            if (resourceTypes == null) {
              throw new MissingRequiredPropertyException("RecorderRecordingModeRecordingModeOverride", "resourceTypes");
            }
            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        public RecorderRecordingModeRecordingModeOverride build() {
            final var _resultValue = new RecorderRecordingModeRecordingModeOverride();
            _resultValue.description = description;
            _resultValue.recordingFrequency = recordingFrequency;
            _resultValue.resourceTypes = resourceTypes;
            return _resultValue;
        }
    }
}
