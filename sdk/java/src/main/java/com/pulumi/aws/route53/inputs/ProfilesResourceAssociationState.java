// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.inputs.ProfilesResourceAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfilesResourceAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final ProfilesResourceAssociationState Empty = new ProfilesResourceAssociationState();

    /**
     * Name of the Profile Resource Association.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Profile Resource Association.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerId")
    private @Nullable Output<String> ownerId;

    public Optional<Output<String>> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }

    /**
     * ID of the profile associated with the VPC.
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return ID of the profile associated with the VPC.
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * Resource ID of the resource to be associated with the profile.
     * 
     */
    @Import(name="resourceArn")
    private @Nullable Output<String> resourceArn;

    /**
     * @return Resource ID of the resource to be associated with the profile.
     * 
     */
    public Optional<Output<String>> resourceArn() {
        return Optional.ofNullable(this.resourceArn);
    }

    /**
     * Resource properties for the resource to be associated with the profile.
     * 
     */
    @Import(name="resourceProperties")
    private @Nullable Output<String> resourceProperties;

    /**
     * @return Resource properties for the resource to be associated with the profile.
     * 
     */
    public Optional<Output<String>> resourceProperties() {
        return Optional.ofNullable(this.resourceProperties);
    }

    /**
     * Type of resource associated with the profile.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Type of resource associated with the profile.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Status message of the Profile Resource Association.
     * 
     */
    @Import(name="statusMessage")
    private @Nullable Output<String> statusMessage;

    /**
     * @return Status message of the Profile Resource Association.
     * 
     */
    public Optional<Output<String>> statusMessage() {
        return Optional.ofNullable(this.statusMessage);
    }

    @Import(name="timeouts")
    private @Nullable Output<ProfilesResourceAssociationTimeoutsArgs> timeouts;

    public Optional<Output<ProfilesResourceAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ProfilesResourceAssociationState() {}

    private ProfilesResourceAssociationState(ProfilesResourceAssociationState $) {
        this.name = $.name;
        this.ownerId = $.ownerId;
        this.profileId = $.profileId;
        this.resourceArn = $.resourceArn;
        this.resourceProperties = $.resourceProperties;
        this.resourceType = $.resourceType;
        this.status = $.status;
        this.statusMessage = $.statusMessage;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfilesResourceAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfilesResourceAssociationState $;

        public Builder() {
            $ = new ProfilesResourceAssociationState();
        }

        public Builder(ProfilesResourceAssociationState defaults) {
            $ = new ProfilesResourceAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerId(@Nullable Output<String> ownerId) {
            $.ownerId = ownerId;
            return this;
        }

        public Builder ownerId(String ownerId) {
            return ownerId(Output.of(ownerId));
        }

        /**
         * @param profileId ID of the profile associated with the VPC.
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId ID of the profile associated with the VPC.
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param resourceArn Resource ID of the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(@Nullable Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn Resource ID of the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        /**
         * @param resourceProperties Resource properties for the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceProperties(@Nullable Output<String> resourceProperties) {
            $.resourceProperties = resourceProperties;
            return this;
        }

        /**
         * @param resourceProperties Resource properties for the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceProperties(String resourceProperties) {
            return resourceProperties(Output.of(resourceProperties));
        }

        /**
         * @param resourceType Type of resource associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Type of resource associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param status Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusMessage Status message of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder statusMessage(@Nullable Output<String> statusMessage) {
            $.statusMessage = statusMessage;
            return this;
        }

        /**
         * @param statusMessage Status message of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder statusMessage(String statusMessage) {
            return statusMessage(Output.of(statusMessage));
        }

        public Builder timeouts(@Nullable Output<ProfilesResourceAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ProfilesResourceAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ProfilesResourceAssociationState build() {
            return $;
        }
    }

}
