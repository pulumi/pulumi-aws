// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLinksPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLinksPlainArgs Empty = new GetLinksPlainArgs();

    /**
     * ID of the Global Network of the links to retrieve.
     * 
     */
    @Import(name="globalNetworkId", required=true)
    private String globalNetworkId;

    /**
     * @return ID of the Global Network of the links to retrieve.
     * 
     */
    public String globalNetworkId() {
        return this.globalNetworkId;
    }

    /**
     * Link provider to retrieve.
     * 
     */
    @Import(name="providerName")
    private @Nullable String providerName;

    /**
     * @return Link provider to retrieve.
     * 
     */
    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * ID of the site of the links to retrieve.
     * 
     */
    @Import(name="siteId")
    private @Nullable String siteId;

    /**
     * @return ID of the site of the links to retrieve.
     * 
     */
    public Optional<String> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * Restricts the list to the links with these tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Restricts the list to the links with these tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Link type to retrieve.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Link type to retrieve.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetLinksPlainArgs() {}

    private GetLinksPlainArgs(GetLinksPlainArgs $) {
        this.globalNetworkId = $.globalNetworkId;
        this.providerName = $.providerName;
        this.siteId = $.siteId;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLinksPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLinksPlainArgs $;

        public Builder() {
            $ = new GetLinksPlainArgs();
        }

        public Builder(GetLinksPlainArgs defaults) {
            $ = new GetLinksPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param globalNetworkId ID of the Global Network of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkId(String globalNetworkId) {
            $.globalNetworkId = globalNetworkId;
            return this;
        }

        /**
         * @param providerName Link provider to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable String providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param siteId ID of the site of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable String siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param tags Restricts the list to the links with these tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param type Link type to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetLinksPlainArgs build() {
            $.globalNetworkId = Objects.requireNonNull($.globalNetworkId, "expected parameter 'globalNetworkId' to be non-null");
            return $;
        }
    }

}
