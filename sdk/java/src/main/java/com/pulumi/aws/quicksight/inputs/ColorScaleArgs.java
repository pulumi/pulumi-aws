// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColorScaleColorArgs;
import com.pulumi.aws.quicksight.inputs.ColorScaleNullValueColorArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ColorScaleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ColorScaleArgs Empty = new ColorScaleArgs();

    @Import(name="colorFillType", required=true)
    private Output<String> colorFillType;

    public Output<String> colorFillType() {
        return this.colorFillType;
    }

    @Import(name="colors", required=true)
    private Output<List<ColorScaleColorArgs>> colors;

    public Output<List<ColorScaleColorArgs>> colors() {
        return this.colors;
    }

    @Import(name="nullValueColor")
    private @Nullable Output<ColorScaleNullValueColorArgs> nullValueColor;

    public Optional<Output<ColorScaleNullValueColorArgs>> nullValueColor() {
        return Optional.ofNullable(this.nullValueColor);
    }

    private ColorScaleArgs() {}

    private ColorScaleArgs(ColorScaleArgs $) {
        this.colorFillType = $.colorFillType;
        this.colors = $.colors;
        this.nullValueColor = $.nullValueColor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColorScaleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColorScaleArgs $;

        public Builder() {
            $ = new ColorScaleArgs();
        }

        public Builder(ColorScaleArgs defaults) {
            $ = new ColorScaleArgs(Objects.requireNonNull(defaults));
        }

        public Builder colorFillType(Output<String> colorFillType) {
            $.colorFillType = colorFillType;
            return this;
        }

        public Builder colorFillType(String colorFillType) {
            return colorFillType(Output.of(colorFillType));
        }

        public Builder colors(Output<List<ColorScaleColorArgs>> colors) {
            $.colors = colors;
            return this;
        }

        public Builder colors(List<ColorScaleColorArgs> colors) {
            return colors(Output.of(colors));
        }

        public Builder colors(ColorScaleColorArgs... colors) {
            return colors(List.of(colors));
        }

        public Builder nullValueColor(@Nullable Output<ColorScaleNullValueColorArgs> nullValueColor) {
            $.nullValueColor = nullValueColor;
            return this;
        }

        public Builder nullValueColor(ColorScaleNullValueColorArgs nullValueColor) {
            return nullValueColor(Output.of(nullValueColor));
        }

        public ColorScaleArgs build() {
            if ($.colorFillType == null) {
                throw new MissingRequiredPropertyException("ColorScaleArgs", "colorFillType");
            }
            if ($.colors == null) {
                throw new MissingRequiredPropertyException("ColorScaleArgs", "colors");
            }
            return $;
        }
    }

}
