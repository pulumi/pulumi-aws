// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceActionDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceActionDefinitionArgs Empty = new ServiceActionDefinitionArgs();

    @Import(name="assumeRole")
    private @Nullable Output<String> assumeRole;

    public Optional<Output<String>> assumeRole() {
        return Optional.ofNullable(this.assumeRole);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="version", required=true)
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    private ServiceActionDefinitionArgs() {}

    private ServiceActionDefinitionArgs(ServiceActionDefinitionArgs $) {
        this.assumeRole = $.assumeRole;
        this.name = $.name;
        this.parameters = $.parameters;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceActionDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceActionDefinitionArgs $;

        public Builder() {
            $ = new ServiceActionDefinitionArgs();
        }

        public Builder(ServiceActionDefinitionArgs defaults) {
            $ = new ServiceActionDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder assumeRole(@Nullable Output<String> assumeRole) {
            $.assumeRole = assumeRole;
            return this;
        }

        public Builder assumeRole(String assumeRole) {
            return assumeRole(Output.of(assumeRole));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ServiceActionDefinitionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
