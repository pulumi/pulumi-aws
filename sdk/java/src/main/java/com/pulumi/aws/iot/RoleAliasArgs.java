// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleAliasArgs Empty = new RoleAliasArgs();

    /**
     * The name of the role alias.
     * 
     */
    @Import(name="alias", required=true)
    private Output<String> alias;

    /**
     * @return The name of the role alias.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }

    /**
     * The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
     * 
     */
    @Import(name="credentialDuration")
    private @Nullable Output<Integer> credentialDuration;

    /**
     * @return The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
     * 
     */
    public Optional<Output<Integer>> credentialDuration() {
        return Optional.ofNullable(this.credentialDuration);
    }

    /**
     * The identity of the role to which the alias refers.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The identity of the role to which the alias refers.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private RoleAliasArgs() {}

    private RoleAliasArgs(RoleAliasArgs $) {
        this.alias = $.alias;
        this.credentialDuration = $.credentialDuration;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleAliasArgs $;

        public Builder() {
            $ = new RoleAliasArgs();
        }

        public Builder(RoleAliasArgs defaults) {
            $ = new RoleAliasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias The name of the role alias.
         * 
         * @return builder
         * 
         */
        public Builder alias(Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias The name of the role alias.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param credentialDuration The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
         * 
         * @return builder
         * 
         */
        public Builder credentialDuration(@Nullable Output<Integer> credentialDuration) {
            $.credentialDuration = credentialDuration;
            return this;
        }

        /**
         * @param credentialDuration The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
         * 
         * @return builder
         * 
         */
        public Builder credentialDuration(Integer credentialDuration) {
            return credentialDuration(Output.of(credentialDuration));
        }

        /**
         * @param roleArn The identity of the role to which the alias refers.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The identity of the role to which the alias refers.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public RoleAliasArgs build() {
            $.alias = Objects.requireNonNull($.alias, "expected parameter 'alias' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
