// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opsworks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RdsDbInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RdsDbInstanceArgs Empty = new RdsDbInstanceArgs();

    @Import(name="dbPassword", required=true)
    private Output<String> dbPassword;

    public Output<String> dbPassword() {
        return this.dbPassword;
    }

    @Import(name="dbUser", required=true)
    private Output<String> dbUser;

    public Output<String> dbUser() {
        return this.dbUser;
    }

    @Import(name="rdsDbInstanceArn", required=true)
    private Output<String> rdsDbInstanceArn;

    public Output<String> rdsDbInstanceArn() {
        return this.rdsDbInstanceArn;
    }

    @Import(name="stackId", required=true)
    private Output<String> stackId;

    public Output<String> stackId() {
        return this.stackId;
    }

    private RdsDbInstanceArgs() {}

    private RdsDbInstanceArgs(RdsDbInstanceArgs $) {
        this.dbPassword = $.dbPassword;
        this.dbUser = $.dbUser;
        this.rdsDbInstanceArn = $.rdsDbInstanceArn;
        this.stackId = $.stackId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RdsDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RdsDbInstanceArgs $;

        public Builder() {
            $ = new RdsDbInstanceArgs();
        }

        public Builder(RdsDbInstanceArgs defaults) {
            $ = new RdsDbInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder dbPassword(Output<String> dbPassword) {
            $.dbPassword = dbPassword;
            return this;
        }

        public Builder dbPassword(String dbPassword) {
            return dbPassword(Output.of(dbPassword));
        }

        public Builder dbUser(Output<String> dbUser) {
            $.dbUser = dbUser;
            return this;
        }

        public Builder dbUser(String dbUser) {
            return dbUser(Output.of(dbUser));
        }

        public Builder rdsDbInstanceArn(Output<String> rdsDbInstanceArn) {
            $.rdsDbInstanceArn = rdsDbInstanceArn;
            return this;
        }

        public Builder rdsDbInstanceArn(String rdsDbInstanceArn) {
            return rdsDbInstanceArn(Output.of(rdsDbInstanceArn));
        }

        public Builder stackId(Output<String> stackId) {
            $.stackId = stackId;
            return this;
        }

        public Builder stackId(String stackId) {
            return stackId(Output.of(stackId));
        }

        public RdsDbInstanceArgs build() {
            $.dbPassword = Objects.requireNonNull($.dbPassword, "expected parameter 'dbPassword' to be non-null");
            $.dbUser = Objects.requireNonNull($.dbUser, "expected parameter 'dbUser' to be non-null");
            $.rdsDbInstanceArn = Objects.requireNonNull($.rdsDbInstanceArn, "expected parameter 'rdsDbInstanceArn' to be non-null");
            $.stackId = Objects.requireNonNull($.stackId, "expected parameter 'stackId' to be non-null");
            return $;
        }
    }

}
