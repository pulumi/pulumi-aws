// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opsworks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RdsDbInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RdsDbInstanceArgs Empty = new RdsDbInstanceArgs();

    /**
     * A db password
     * 
     */
    @Import(name="dbPassword", required=true)
    private Output<String> dbPassword;

    /**
     * @return A db password
     * 
     */
    public Output<String> dbPassword() {
        return this.dbPassword;
    }

    /**
     * A db username
     * 
     */
    @Import(name="dbUser", required=true)
    private Output<String> dbUser;

    /**
     * @return A db username
     * 
     */
    public Output<String> dbUser() {
        return this.dbUser;
    }

    /**
     * The db instance to register for this stack. Changing this will force a new resource.
     * 
     */
    @Import(name="rdsDbInstanceArn", required=true)
    private Output<String> rdsDbInstanceArn;

    /**
     * @return The db instance to register for this stack. Changing this will force a new resource.
     * 
     */
    public Output<String> rdsDbInstanceArn() {
        return this.rdsDbInstanceArn;
    }

    /**
     * The stack to register a db instance for. Changing this will force a new resource.
     * 
     */
    @Import(name="stackId", required=true)
    private Output<String> stackId;

    /**
     * @return The stack to register a db instance for. Changing this will force a new resource.
     * 
     */
    public Output<String> stackId() {
        return this.stackId;
    }

    private RdsDbInstanceArgs() {}

    private RdsDbInstanceArgs(RdsDbInstanceArgs $) {
        this.dbPassword = $.dbPassword;
        this.dbUser = $.dbUser;
        this.rdsDbInstanceArn = $.rdsDbInstanceArn;
        this.stackId = $.stackId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RdsDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RdsDbInstanceArgs $;

        public Builder() {
            $ = new RdsDbInstanceArgs();
        }

        public Builder(RdsDbInstanceArgs defaults) {
            $ = new RdsDbInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbPassword A db password
         * 
         * @return builder
         * 
         */
        public Builder dbPassword(Output<String> dbPassword) {
            $.dbPassword = dbPassword;
            return this;
        }

        /**
         * @param dbPassword A db password
         * 
         * @return builder
         * 
         */
        public Builder dbPassword(String dbPassword) {
            return dbPassword(Output.of(dbPassword));
        }

        /**
         * @param dbUser A db username
         * 
         * @return builder
         * 
         */
        public Builder dbUser(Output<String> dbUser) {
            $.dbUser = dbUser;
            return this;
        }

        /**
         * @param dbUser A db username
         * 
         * @return builder
         * 
         */
        public Builder dbUser(String dbUser) {
            return dbUser(Output.of(dbUser));
        }

        /**
         * @param rdsDbInstanceArn The db instance to register for this stack. Changing this will force a new resource.
         * 
         * @return builder
         * 
         */
        public Builder rdsDbInstanceArn(Output<String> rdsDbInstanceArn) {
            $.rdsDbInstanceArn = rdsDbInstanceArn;
            return this;
        }

        /**
         * @param rdsDbInstanceArn The db instance to register for this stack. Changing this will force a new resource.
         * 
         * @return builder
         * 
         */
        public Builder rdsDbInstanceArn(String rdsDbInstanceArn) {
            return rdsDbInstanceArn(Output.of(rdsDbInstanceArn));
        }

        /**
         * @param stackId The stack to register a db instance for. Changing this will force a new resource.
         * 
         * @return builder
         * 
         */
        public Builder stackId(Output<String> stackId) {
            $.stackId = stackId;
            return this;
        }

        /**
         * @param stackId The stack to register a db instance for. Changing this will force a new resource.
         * 
         * @return builder
         * 
         */
        public Builder stackId(String stackId) {
            return stackId(Output.of(stackId));
        }

        public RdsDbInstanceArgs build() {
            if ($.dbPassword == null) {
                throw new MissingRequiredPropertyException("RdsDbInstanceArgs", "dbPassword");
            }
            if ($.dbUser == null) {
                throw new MissingRequiredPropertyException("RdsDbInstanceArgs", "dbUser");
            }
            if ($.rdsDbInstanceArn == null) {
                throw new MissingRequiredPropertyException("RdsDbInstanceArgs", "rdsDbInstanceArn");
            }
            if ($.stackId == null) {
                throw new MissingRequiredPropertyException("RdsDbInstanceArgs", "stackId");
            }
            return $;
        }
    }

}
