// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.aws.lakeformation.inputs.PermissionsLfTagPolicyExpressionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PermissionsLfTagPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PermissionsLfTagPolicyArgs Empty = new PermissionsLfTagPolicyArgs();

    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="expressions", required=true)
    private Output<List<PermissionsLfTagPolicyExpressionArgs>> expressions;

    public Output<List<PermissionsLfTagPolicyExpressionArgs>> expressions() {
        return this.expressions;
    }

    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    private PermissionsLfTagPolicyArgs() {}

    private PermissionsLfTagPolicyArgs(PermissionsLfTagPolicyArgs $) {
        this.catalogId = $.catalogId;
        this.expressions = $.expressions;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PermissionsLfTagPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PermissionsLfTagPolicyArgs $;

        public Builder() {
            $ = new PermissionsLfTagPolicyArgs();
        }

        public Builder(PermissionsLfTagPolicyArgs defaults) {
            $ = new PermissionsLfTagPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public Builder expressions(Output<List<PermissionsLfTagPolicyExpressionArgs>> expressions) {
            $.expressions = expressions;
            return this;
        }

        public Builder expressions(List<PermissionsLfTagPolicyExpressionArgs> expressions) {
            return expressions(Output.of(expressions));
        }

        public Builder expressions(PermissionsLfTagPolicyExpressionArgs... expressions) {
            return expressions(List.of(expressions));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public PermissionsLfTagPolicyArgs build() {
            $.expressions = Objects.requireNonNull($.expressions, "expected parameter 'expressions' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
