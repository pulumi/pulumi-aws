// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.aws.iot.inputs.TopicRuleErrorActionHttpHttpHeaderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionHttpArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleErrorActionHttpArgs Empty = new TopicRuleErrorActionHttpArgs();

    @Import(name="confirmationUrl")
    private @Nullable Output<String> confirmationUrl;

    public Optional<Output<String>> confirmationUrl() {
        return Optional.ofNullable(this.confirmationUrl);
    }

    @Import(name="httpHeaders")
    private @Nullable Output<List<TopicRuleErrorActionHttpHttpHeaderArgs>> httpHeaders;

    public Optional<Output<List<TopicRuleErrorActionHttpHttpHeaderArgs>>> httpHeaders() {
        return Optional.ofNullable(this.httpHeaders);
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    private TopicRuleErrorActionHttpArgs() {}

    private TopicRuleErrorActionHttpArgs(TopicRuleErrorActionHttpArgs $) {
        this.confirmationUrl = $.confirmationUrl;
        this.httpHeaders = $.httpHeaders;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleErrorActionHttpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleErrorActionHttpArgs $;

        public Builder() {
            $ = new TopicRuleErrorActionHttpArgs();
        }

        public Builder(TopicRuleErrorActionHttpArgs defaults) {
            $ = new TopicRuleErrorActionHttpArgs(Objects.requireNonNull(defaults));
        }

        public Builder confirmationUrl(@Nullable Output<String> confirmationUrl) {
            $.confirmationUrl = confirmationUrl;
            return this;
        }

        public Builder confirmationUrl(String confirmationUrl) {
            return confirmationUrl(Output.of(confirmationUrl));
        }

        public Builder httpHeaders(@Nullable Output<List<TopicRuleErrorActionHttpHttpHeaderArgs>> httpHeaders) {
            $.httpHeaders = httpHeaders;
            return this;
        }

        public Builder httpHeaders(List<TopicRuleErrorActionHttpHttpHeaderArgs> httpHeaders) {
            return httpHeaders(Output.of(httpHeaders));
        }

        public Builder httpHeaders(TopicRuleErrorActionHttpHttpHeaderArgs... httpHeaders) {
            return httpHeaders(List.of(httpHeaders));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public TopicRuleErrorActionHttpArgs build() {
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
