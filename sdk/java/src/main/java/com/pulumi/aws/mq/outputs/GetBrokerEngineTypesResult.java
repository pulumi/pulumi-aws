// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.outputs;

import com.pulumi.aws.mq.outputs.GetBrokerEngineTypesBrokerEngineType;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBrokerEngineTypesResult {
    /**
     * @return A list of available engine types and versions. See Engine Types.
     * 
     */
    private List<GetBrokerEngineTypesBrokerEngineType> brokerEngineTypes;
    /**
     * @return The broker&#39;s engine type.
     * 
     */
    private @Nullable String engineType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetBrokerEngineTypesResult() {}
    /**
     * @return A list of available engine types and versions. See Engine Types.
     * 
     */
    public List<GetBrokerEngineTypesBrokerEngineType> brokerEngineTypes() {
        return this.brokerEngineTypes;
    }
    /**
     * @return The broker&#39;s engine type.
     * 
     */
    public Optional<String> engineType() {
        return Optional.ofNullable(this.engineType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerEngineTypesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBrokerEngineTypesBrokerEngineType> brokerEngineTypes;
        private @Nullable String engineType;
        private String id;
        public Builder() {}
        public Builder(GetBrokerEngineTypesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brokerEngineTypes = defaults.brokerEngineTypes;
    	      this.engineType = defaults.engineType;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder brokerEngineTypes(List<GetBrokerEngineTypesBrokerEngineType> brokerEngineTypes) {
            if (brokerEngineTypes == null) {
              throw new MissingRequiredPropertyException("GetBrokerEngineTypesResult", "brokerEngineTypes");
            }
            this.brokerEngineTypes = brokerEngineTypes;
            return this;
        }
        public Builder brokerEngineTypes(GetBrokerEngineTypesBrokerEngineType... brokerEngineTypes) {
            return brokerEngineTypes(List.of(brokerEngineTypes));
        }
        @CustomType.Setter
        public Builder engineType(@Nullable String engineType) {

            this.engineType = engineType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBrokerEngineTypesResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetBrokerEngineTypesResult build() {
            final var _resultValue = new GetBrokerEngineTypesResult();
            _resultValue.brokerEngineTypes = brokerEngineTypes;
            _resultValue.engineType = engineType;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
