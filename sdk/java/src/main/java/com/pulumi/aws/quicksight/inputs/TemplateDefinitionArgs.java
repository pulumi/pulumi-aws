// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.TemplateDefinitionAnalysisDefaultsArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionCalculatedFieldArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionColumnConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionDataSetConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionFilterGroupArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionParametersDeclarationArgs;
import com.pulumi.aws.quicksight.inputs.TemplateDefinitionSheetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateDefinitionArgs Empty = new TemplateDefinitionArgs();

    /**
     * The configuration for default analysis settings. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_AnalysisDefaults.html).
     * 
     */
    @Import(name="analysisDefaults")
    private @Nullable Output<TemplateDefinitionAnalysisDefaultsArgs> analysisDefaults;

    /**
     * @return The configuration for default analysis settings. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_AnalysisDefaults.html).
     * 
     */
    public Optional<Output<TemplateDefinitionAnalysisDefaultsArgs>> analysisDefaults() {
        return Optional.ofNullable(this.analysisDefaults);
    }

    /**
     * A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
     * 
     */
    @Import(name="calculatedFields")
    private @Nullable Output<List<TemplateDefinitionCalculatedFieldArgs>> calculatedFields;

    /**
     * @return A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
     * 
     */
    public Optional<Output<List<TemplateDefinitionCalculatedFieldArgs>>> calculatedFields() {
        return Optional.ofNullable(this.calculatedFields);
    }

    /**
     * A list of template-level column configurations. Column configurations are used to set default formatting for a column that&#39;s used throughout a template. See AWS API Documentation for complete description.
     * 
     */
    @Import(name="columnConfigurations")
    private @Nullable Output<List<TemplateDefinitionColumnConfigurationArgs>> columnConfigurations;

    /**
     * @return A list of template-level column configurations. Column configurations are used to set default formatting for a column that&#39;s used throughout a template. See AWS API Documentation for complete description.
     * 
     */
    public Optional<Output<List<TemplateDefinitionColumnConfigurationArgs>>> columnConfigurations() {
        return Optional.ofNullable(this.columnConfigurations);
    }

    /**
     * A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
     * 
     */
    @Import(name="dataSetConfigurations", required=true)
    private Output<List<TemplateDefinitionDataSetConfigurationArgs>> dataSetConfigurations;

    /**
     * @return A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
     * 
     */
    public Output<List<TemplateDefinitionDataSetConfigurationArgs>> dataSetConfigurations() {
        return this.dataSetConfigurations;
    }

    /**
     * A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
     * 
     */
    @Import(name="filterGroups")
    private @Nullable Output<List<TemplateDefinitionFilterGroupArgs>> filterGroups;

    /**
     * @return A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
     * 
     */
    public Optional<Output<List<TemplateDefinitionFilterGroupArgs>>> filterGroups() {
        return Optional.ofNullable(this.filterGroups);
    }

    /**
     * A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
     * 
     */
    @Import(name="parametersDeclarations")
    private @Nullable Output<List<TemplateDefinitionParametersDeclarationArgs>> parametersDeclarations;

    /**
     * @return A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
     * 
     */
    public Optional<Output<List<TemplateDefinitionParametersDeclarationArgs>>> parametersDeclarations() {
        return Optional.ofNullable(this.parametersDeclarations);
    }

    /**
     * A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).
     * 
     */
    @Import(name="sheets")
    private @Nullable Output<List<TemplateDefinitionSheetArgs>> sheets;

    /**
     * @return A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).
     * 
     */
    public Optional<Output<List<TemplateDefinitionSheetArgs>>> sheets() {
        return Optional.ofNullable(this.sheets);
    }

    private TemplateDefinitionArgs() {}

    private TemplateDefinitionArgs(TemplateDefinitionArgs $) {
        this.analysisDefaults = $.analysisDefaults;
        this.calculatedFields = $.calculatedFields;
        this.columnConfigurations = $.columnConfigurations;
        this.dataSetConfigurations = $.dataSetConfigurations;
        this.filterGroups = $.filterGroups;
        this.parametersDeclarations = $.parametersDeclarations;
        this.sheets = $.sheets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateDefinitionArgs $;

        public Builder() {
            $ = new TemplateDefinitionArgs();
        }

        public Builder(TemplateDefinitionArgs defaults) {
            $ = new TemplateDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analysisDefaults The configuration for default analysis settings. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_AnalysisDefaults.html).
         * 
         * @return builder
         * 
         */
        public Builder analysisDefaults(@Nullable Output<TemplateDefinitionAnalysisDefaultsArgs> analysisDefaults) {
            $.analysisDefaults = analysisDefaults;
            return this;
        }

        /**
         * @param analysisDefaults The configuration for default analysis settings. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_AnalysisDefaults.html).
         * 
         * @return builder
         * 
         */
        public Builder analysisDefaults(TemplateDefinitionAnalysisDefaultsArgs analysisDefaults) {
            return analysisDefaults(Output.of(analysisDefaults));
        }

        /**
         * @param calculatedFields A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
         * 
         * @return builder
         * 
         */
        public Builder calculatedFields(@Nullable Output<List<TemplateDefinitionCalculatedFieldArgs>> calculatedFields) {
            $.calculatedFields = calculatedFields;
            return this;
        }

        /**
         * @param calculatedFields A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
         * 
         * @return builder
         * 
         */
        public Builder calculatedFields(List<TemplateDefinitionCalculatedFieldArgs> calculatedFields) {
            return calculatedFields(Output.of(calculatedFields));
        }

        /**
         * @param calculatedFields A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
         * 
         * @return builder
         * 
         */
        public Builder calculatedFields(TemplateDefinitionCalculatedFieldArgs... calculatedFields) {
            return calculatedFields(List.of(calculatedFields));
        }

        /**
         * @param columnConfigurations A list of template-level column configurations. Column configurations are used to set default formatting for a column that&#39;s used throughout a template. See AWS API Documentation for complete description.
         * 
         * @return builder
         * 
         */
        public Builder columnConfigurations(@Nullable Output<List<TemplateDefinitionColumnConfigurationArgs>> columnConfigurations) {
            $.columnConfigurations = columnConfigurations;
            return this;
        }

        /**
         * @param columnConfigurations A list of template-level column configurations. Column configurations are used to set default formatting for a column that&#39;s used throughout a template. See AWS API Documentation for complete description.
         * 
         * @return builder
         * 
         */
        public Builder columnConfigurations(List<TemplateDefinitionColumnConfigurationArgs> columnConfigurations) {
            return columnConfigurations(Output.of(columnConfigurations));
        }

        /**
         * @param columnConfigurations A list of template-level column configurations. Column configurations are used to set default formatting for a column that&#39;s used throughout a template. See AWS API Documentation for complete description.
         * 
         * @return builder
         * 
         */
        public Builder columnConfigurations(TemplateDefinitionColumnConfigurationArgs... columnConfigurations) {
            return columnConfigurations(List.of(columnConfigurations));
        }

        /**
         * @param dataSetConfigurations A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder dataSetConfigurations(Output<List<TemplateDefinitionDataSetConfigurationArgs>> dataSetConfigurations) {
            $.dataSetConfigurations = dataSetConfigurations;
            return this;
        }

        /**
         * @param dataSetConfigurations A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder dataSetConfigurations(List<TemplateDefinitionDataSetConfigurationArgs> dataSetConfigurations) {
            return dataSetConfigurations(Output.of(dataSetConfigurations));
        }

        /**
         * @param dataSetConfigurations A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder dataSetConfigurations(TemplateDefinitionDataSetConfigurationArgs... dataSetConfigurations) {
            return dataSetConfigurations(List.of(dataSetConfigurations));
        }

        /**
         * @param filterGroups A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder filterGroups(@Nullable Output<List<TemplateDefinitionFilterGroupArgs>> filterGroups) {
            $.filterGroups = filterGroups;
            return this;
        }

        /**
         * @param filterGroups A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder filterGroups(List<TemplateDefinitionFilterGroupArgs> filterGroups) {
            return filterGroups(Output.of(filterGroups));
        }

        /**
         * @param filterGroups A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder filterGroups(TemplateDefinitionFilterGroupArgs... filterGroups) {
            return filterGroups(List.of(filterGroups));
        }

        /**
         * @param parametersDeclarations A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder parametersDeclarations(@Nullable Output<List<TemplateDefinitionParametersDeclarationArgs>> parametersDeclarations) {
            $.parametersDeclarations = parametersDeclarations;
            return this;
        }

        /**
         * @param parametersDeclarations A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder parametersDeclarations(List<TemplateDefinitionParametersDeclarationArgs> parametersDeclarations) {
            return parametersDeclarations(Output.of(parametersDeclarations));
        }

        /**
         * @param parametersDeclarations A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
         * 
         * @return builder
         * 
         */
        public Builder parametersDeclarations(TemplateDefinitionParametersDeclarationArgs... parametersDeclarations) {
            return parametersDeclarations(List.of(parametersDeclarations));
        }

        /**
         * @param sheets A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).
         * 
         * @return builder
         * 
         */
        public Builder sheets(@Nullable Output<List<TemplateDefinitionSheetArgs>> sheets) {
            $.sheets = sheets;
            return this;
        }

        /**
         * @param sheets A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).
         * 
         * @return builder
         * 
         */
        public Builder sheets(List<TemplateDefinitionSheetArgs> sheets) {
            return sheets(Output.of(sheets));
        }

        /**
         * @param sheets A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).
         * 
         * @return builder
         * 
         */
        public Builder sheets(TemplateDefinitionSheetArgs... sheets) {
            return sheets(List.of(sheets));
        }

        public TemplateDefinitionArgs build() {
            if ($.dataSetConfigurations == null) {
                throw new MissingRequiredPropertyException("TemplateDefinitionArgs", "dataSetConfigurations");
            }
            return $;
        }
    }

}
