// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyvaluestoreKeyState extends com.pulumi.resources.ResourceArgs {

    public static final KeyvaluestoreKeyState Empty = new KeyvaluestoreKeyState();

    /**
     * Key to put.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Key to put.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Amazon Resource Name (ARN) of the Key Value Store.
     * 
     */
    @Import(name="keyValueStoreArn")
    private @Nullable Output<String> keyValueStoreArn;

    /**
     * @return Amazon Resource Name (ARN) of the Key Value Store.
     * 
     */
    public Optional<Output<String>> keyValueStoreArn() {
        return Optional.ofNullable(this.keyValueStoreArn);
    }

    /**
     * Total size of the Key Value Store in bytes.
     * 
     */
    @Import(name="totalSizeInBytes")
    private @Nullable Output<Integer> totalSizeInBytes;

    /**
     * @return Total size of the Key Value Store in bytes.
     * 
     */
    public Optional<Output<Integer>> totalSizeInBytes() {
        return Optional.ofNullable(this.totalSizeInBytes);
    }

    /**
     * Value to put.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value to put.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private KeyvaluestoreKeyState() {}

    private KeyvaluestoreKeyState(KeyvaluestoreKeyState $) {
        this.key = $.key;
        this.keyValueStoreArn = $.keyValueStoreArn;
        this.totalSizeInBytes = $.totalSizeInBytes;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyvaluestoreKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyvaluestoreKeyState $;

        public Builder() {
            $ = new KeyvaluestoreKeyState();
        }

        public Builder(KeyvaluestoreKeyState defaults) {
            $ = new KeyvaluestoreKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Key to put.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key to put.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param keyValueStoreArn Amazon Resource Name (ARN) of the Key Value Store.
         * 
         * @return builder
         * 
         */
        public Builder keyValueStoreArn(@Nullable Output<String> keyValueStoreArn) {
            $.keyValueStoreArn = keyValueStoreArn;
            return this;
        }

        /**
         * @param keyValueStoreArn Amazon Resource Name (ARN) of the Key Value Store.
         * 
         * @return builder
         * 
         */
        public Builder keyValueStoreArn(String keyValueStoreArn) {
            return keyValueStoreArn(Output.of(keyValueStoreArn));
        }

        /**
         * @param totalSizeInBytes Total size of the Key Value Store in bytes.
         * 
         * @return builder
         * 
         */
        public Builder totalSizeInBytes(@Nullable Output<Integer> totalSizeInBytes) {
            $.totalSizeInBytes = totalSizeInBytes;
            return this;
        }

        /**
         * @param totalSizeInBytes Total size of the Key Value Store in bytes.
         * 
         * @return builder
         * 
         */
        public Builder totalSizeInBytes(Integer totalSizeInBytes) {
            return totalSizeInBytes(Output.of(totalSizeInBytes));
        }

        /**
         * @param value Value to put.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value to put.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public KeyvaluestoreKeyState build() {
            return $;
        }
    }

}
