// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs Empty = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs();

    @Import(name="fieldId", required=true)
    private Output<String> fieldId;

    public Output<String> fieldId() {
        return this.fieldId;
    }

    @Import(name="fieldValue", required=true)
    private Output<String> fieldValue;

    public Output<String> fieldValue() {
        return this.fieldValue;
    }

    private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs() {}

    private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs $) {
        this.fieldId = $.fieldId;
        this.fieldValue = $.fieldValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs(Objects.requireNonNull(defaults));
        }

        public Builder fieldId(Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public Builder fieldValue(Output<String> fieldValue) {
            $.fieldValue = fieldValue;
            return this;
        }

        public Builder fieldValue(String fieldValue) {
            return fieldValue(Output.of(fieldValue));
        }

        public VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs build() {
            if ($.fieldId == null) {
                throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs", "fieldId");
            }
            if ($.fieldValue == null) {
                throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPathArgs", "fieldValue");
            }
            return $;
        }
    }

}
