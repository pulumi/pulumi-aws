// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs Empty = new CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs();

    /**
     * Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
     * 
     */
    @Import(name="queryStringBehavior", required=true)
    private Output<String> queryStringBehavior;

    /**
     * @return Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
     * 
     */
    public Output<String> queryStringBehavior() {
        return this.queryStringBehavior;
    }

    /**
     * Configuration parameter that contains a list of query string names. See Items for more information.
     * 
     */
    @Import(name="queryStrings")
    private @Nullable Output<CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs> queryStrings;

    /**
     * @return Configuration parameter that contains a list of query string names. See Items for more information.
     * 
     */
    public Optional<Output<CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs>> queryStrings() {
        return Optional.ofNullable(this.queryStrings);
    }

    private CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs() {}

    private CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs $) {
        this.queryStringBehavior = $.queryStringBehavior;
        this.queryStrings = $.queryStrings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs $;

        public Builder() {
            $ = new CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs();
        }

        public Builder(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs defaults) {
            $ = new CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param queryStringBehavior Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder queryStringBehavior(Output<String> queryStringBehavior) {
            $.queryStringBehavior = queryStringBehavior;
            return this;
        }

        /**
         * @param queryStringBehavior Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder queryStringBehavior(String queryStringBehavior) {
            return queryStringBehavior(Output.of(queryStringBehavior));
        }

        /**
         * @param queryStrings Configuration parameter that contains a list of query string names. See Items for more information.
         * 
         * @return builder
         * 
         */
        public Builder queryStrings(@Nullable Output<CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs> queryStrings) {
            $.queryStrings = queryStrings;
            return this;
        }

        /**
         * @param queryStrings Configuration parameter that contains a list of query string names. See Items for more information.
         * 
         * @return builder
         * 
         */
        public Builder queryStrings(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs queryStrings) {
            return queryStrings(Output.of(queryStrings));
        }

        public CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs build() {
            $.queryStringBehavior = Objects.requireNonNull($.queryStringBehavior, "expected parameter 'queryStringBehavior' to be non-null");
            return $;
        }
    }

}
