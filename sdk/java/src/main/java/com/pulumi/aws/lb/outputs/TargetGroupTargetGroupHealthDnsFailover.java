// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetGroupTargetGroupHealthDnsFailover {
    /**
     * @return The minimum number of targets that must be healthy. If the number of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from `1` to the maximum number of targets. The default is `off`.
     * 
     */
    private @Nullable String minimumHealthyTargetsCount;
    /**
     * @return The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from `1` to `100`. The default is `off`.
     * 
     */
    private @Nullable String minimumHealthyTargetsPercentage;

    private TargetGroupTargetGroupHealthDnsFailover() {}
    /**
     * @return The minimum number of targets that must be healthy. If the number of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from `1` to the maximum number of targets. The default is `off`.
     * 
     */
    public Optional<String> minimumHealthyTargetsCount() {
        return Optional.ofNullable(this.minimumHealthyTargetsCount);
    }
    /**
     * @return The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from `1` to `100`. The default is `off`.
     * 
     */
    public Optional<String> minimumHealthyTargetsPercentage() {
        return Optional.ofNullable(this.minimumHealthyTargetsPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetGroupTargetGroupHealthDnsFailover defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String minimumHealthyTargetsCount;
        private @Nullable String minimumHealthyTargetsPercentage;
        public Builder() {}
        public Builder(TargetGroupTargetGroupHealthDnsFailover defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minimumHealthyTargetsCount = defaults.minimumHealthyTargetsCount;
    	      this.minimumHealthyTargetsPercentage = defaults.minimumHealthyTargetsPercentage;
        }

        @CustomType.Setter
        public Builder minimumHealthyTargetsCount(@Nullable String minimumHealthyTargetsCount) {

            this.minimumHealthyTargetsCount = minimumHealthyTargetsCount;
            return this;
        }
        @CustomType.Setter
        public Builder minimumHealthyTargetsPercentage(@Nullable String minimumHealthyTargetsPercentage) {

            this.minimumHealthyTargetsPercentage = minimumHealthyTargetsPercentage;
            return this;
        }
        public TargetGroupTargetGroupHealthDnsFailover build() {
            final var _resultValue = new TargetGroupTargetGroupHealthDnsFailover();
            _resultValue.minimumHealthyTargetsCount = minimumHealthyTargetsCount;
            _resultValue.minimumHealthyTargetsPercentage = minimumHealthyTargetsPercentage;
            return _resultValue;
        }
    }
}
