// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHostHeader;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHttpHeader;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHttpRequestMethod;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionPathPattern;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionQueryString;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionSourceIp;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerRuleCondition {
    /**
     * @return Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    private @Nullable List<GetListenerRuleConditionHostHeader> hostHeaders;
    /**
     * @return HTTP header and values to match.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleConditionHttpHeader> httpHeaders;
    /**
     * @return Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    private @Nullable List<GetListenerRuleConditionHttpRequestMethod> httpRequestMethods;
    /**
     * @return Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    private @Nullable List<GetListenerRuleConditionPathPattern> pathPatterns;
    /**
     * @return Query string parameters to match.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleConditionQueryString> queryStrings;
    /**
     * @return Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    private @Nullable List<GetListenerRuleConditionSourceIp> sourceIps;

    private GetListenerRuleCondition() {}
    /**
     * @return Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    public List<GetListenerRuleConditionHostHeader> hostHeaders() {
        return this.hostHeaders == null ? List.of() : this.hostHeaders;
    }
    /**
     * @return HTTP header and values to match.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleConditionHttpHeader> httpHeaders() {
        return this.httpHeaders == null ? List.of() : this.httpHeaders;
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    public List<GetListenerRuleConditionHttpRequestMethod> httpRequestMethods() {
        return this.httpRequestMethods == null ? List.of() : this.httpRequestMethods;
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    public List<GetListenerRuleConditionPathPattern> pathPatterns() {
        return this.pathPatterns == null ? List.of() : this.pathPatterns;
    }
    /**
     * @return Query string parameters to match.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleConditionQueryString> queryStrings() {
        return this.queryStrings == null ? List.of() : this.queryStrings;
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    public List<GetListenerRuleConditionSourceIp> sourceIps() {
        return this.sourceIps == null ? List.of() : this.sourceIps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetListenerRuleConditionHostHeader> hostHeaders;
        private @Nullable List<GetListenerRuleConditionHttpHeader> httpHeaders;
        private @Nullable List<GetListenerRuleConditionHttpRequestMethod> httpRequestMethods;
        private @Nullable List<GetListenerRuleConditionPathPattern> pathPatterns;
        private @Nullable List<GetListenerRuleConditionQueryString> queryStrings;
        private @Nullable List<GetListenerRuleConditionSourceIp> sourceIps;
        public Builder() {}
        public Builder(GetListenerRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostHeaders = defaults.hostHeaders;
    	      this.httpHeaders = defaults.httpHeaders;
    	      this.httpRequestMethods = defaults.httpRequestMethods;
    	      this.pathPatterns = defaults.pathPatterns;
    	      this.queryStrings = defaults.queryStrings;
    	      this.sourceIps = defaults.sourceIps;
        }

        @CustomType.Setter
        public Builder hostHeaders(@Nullable List<GetListenerRuleConditionHostHeader> hostHeaders) {

            this.hostHeaders = hostHeaders;
            return this;
        }
        public Builder hostHeaders(GetListenerRuleConditionHostHeader... hostHeaders) {
            return hostHeaders(List.of(hostHeaders));
        }
        @CustomType.Setter
        public Builder httpHeaders(@Nullable List<GetListenerRuleConditionHttpHeader> httpHeaders) {

            this.httpHeaders = httpHeaders;
            return this;
        }
        public Builder httpHeaders(GetListenerRuleConditionHttpHeader... httpHeaders) {
            return httpHeaders(List.of(httpHeaders));
        }
        @CustomType.Setter
        public Builder httpRequestMethods(@Nullable List<GetListenerRuleConditionHttpRequestMethod> httpRequestMethods) {

            this.httpRequestMethods = httpRequestMethods;
            return this;
        }
        public Builder httpRequestMethods(GetListenerRuleConditionHttpRequestMethod... httpRequestMethods) {
            return httpRequestMethods(List.of(httpRequestMethods));
        }
        @CustomType.Setter
        public Builder pathPatterns(@Nullable List<GetListenerRuleConditionPathPattern> pathPatterns) {

            this.pathPatterns = pathPatterns;
            return this;
        }
        public Builder pathPatterns(GetListenerRuleConditionPathPattern... pathPatterns) {
            return pathPatterns(List.of(pathPatterns));
        }
        @CustomType.Setter
        public Builder queryStrings(@Nullable List<GetListenerRuleConditionQueryString> queryStrings) {

            this.queryStrings = queryStrings;
            return this;
        }
        public Builder queryStrings(GetListenerRuleConditionQueryString... queryStrings) {
            return queryStrings(List.of(queryStrings));
        }
        @CustomType.Setter
        public Builder sourceIps(@Nullable List<GetListenerRuleConditionSourceIp> sourceIps) {

            this.sourceIps = sourceIps;
            return this;
        }
        public Builder sourceIps(GetListenerRuleConditionSourceIp... sourceIps) {
            return sourceIps(List.of(sourceIps));
        }
        public GetListenerRuleCondition build() {
            final var _resultValue = new GetListenerRuleCondition();
            _resultValue.hostHeaders = hostHeaders;
            _resultValue.httpHeaders = httpHeaders;
            _resultValue.httpRequestMethods = httpRequestMethods;
            _resultValue.pathPatterns = pathPatterns;
            _resultValue.queryStrings = queryStrings;
            _resultValue.sourceIps = sourceIps;
            return _resultValue;
        }
    }
}
