// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHostHeader;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHttpHeader;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionHttpRequestMethod;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionPathPattern;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionQueryString;
import com.pulumi.aws.lb.outputs.GetListenerRuleConditionSourceIp;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerRuleCondition {
    /**
     * @return Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    private @Nullable GetListenerRuleConditionHostHeader hostHeader;
    /**
     * @return HTTP header and values to match.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleConditionHttpHeader httpHeader;
    /**
     * @return Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    private @Nullable GetListenerRuleConditionHttpRequestMethod httpRequestMethod;
    /**
     * @return Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    private @Nullable GetListenerRuleConditionPathPattern pathPattern;
    /**
     * @return Query string parameters to match.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleConditionQueryString queryString;
    /**
     * @return Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    private @Nullable GetListenerRuleConditionSourceIp sourceIp;

    private GetListenerRuleCondition() {}
    /**
     * @return Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    public Optional<GetListenerRuleConditionHostHeader> hostHeader() {
        return Optional.ofNullable(this.hostHeader);
    }
    /**
     * @return HTTP header and values to match.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleConditionHttpHeader> httpHeader() {
        return Optional.ofNullable(this.httpHeader);
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    public Optional<GetListenerRuleConditionHttpRequestMethod> httpRequestMethod() {
        return Optional.ofNullable(this.httpRequestMethod);
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    public Optional<GetListenerRuleConditionPathPattern> pathPattern() {
        return Optional.ofNullable(this.pathPattern);
    }
    /**
     * @return Query string parameters to match.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleConditionQueryString> queryString() {
        return Optional.ofNullable(this.queryString);
    }
    /**
     * @return Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    public Optional<GetListenerRuleConditionSourceIp> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetListenerRuleConditionHostHeader hostHeader;
        private @Nullable GetListenerRuleConditionHttpHeader httpHeader;
        private @Nullable GetListenerRuleConditionHttpRequestMethod httpRequestMethod;
        private @Nullable GetListenerRuleConditionPathPattern pathPattern;
        private @Nullable GetListenerRuleConditionQueryString queryString;
        private @Nullable GetListenerRuleConditionSourceIp sourceIp;
        public Builder() {}
        public Builder(GetListenerRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostHeader = defaults.hostHeader;
    	      this.httpHeader = defaults.httpHeader;
    	      this.httpRequestMethod = defaults.httpRequestMethod;
    	      this.pathPattern = defaults.pathPattern;
    	      this.queryString = defaults.queryString;
    	      this.sourceIp = defaults.sourceIp;
        }

        @CustomType.Setter
        public Builder hostHeader(@Nullable GetListenerRuleConditionHostHeader hostHeader) {

            this.hostHeader = hostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder httpHeader(@Nullable GetListenerRuleConditionHttpHeader httpHeader) {

            this.httpHeader = httpHeader;
            return this;
        }
        @CustomType.Setter
        public Builder httpRequestMethod(@Nullable GetListenerRuleConditionHttpRequestMethod httpRequestMethod) {

            this.httpRequestMethod = httpRequestMethod;
            return this;
        }
        @CustomType.Setter
        public Builder pathPattern(@Nullable GetListenerRuleConditionPathPattern pathPattern) {

            this.pathPattern = pathPattern;
            return this;
        }
        @CustomType.Setter
        public Builder queryString(@Nullable GetListenerRuleConditionQueryString queryString) {

            this.queryString = queryString;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable GetListenerRuleConditionSourceIp sourceIp) {

            this.sourceIp = sourceIp;
            return this;
        }
        public GetListenerRuleCondition build() {
            final var _resultValue = new GetListenerRuleCondition();
            _resultValue.hostHeader = hostHeader;
            _resultValue.httpHeader = httpHeader;
            _resultValue.httpRequestMethod = httpRequestMethod;
            _resultValue.pathPattern = pathPattern;
            _resultValue.queryString = queryString;
            _resultValue.sourceIp = sourceIp;
            return _resultValue;
        }
    }
}
