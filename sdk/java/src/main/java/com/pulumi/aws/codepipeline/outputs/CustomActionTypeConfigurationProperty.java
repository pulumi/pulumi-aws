// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomActionTypeConfigurationProperty {
    /**
     * @return The description of the action configuration property.
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether the configuration property is a key.
     * 
     */
    private Boolean key;
    /**
     * @return The name of the action configuration property.
     * 
     */
    private String name;
    /**
     * @return Indicates that the property will be used in conjunction with PollForJobs.
     * 
     */
    private @Nullable Boolean queryable;
    /**
     * @return Whether the configuration property is a required value.
     * 
     */
    private Boolean required;
    /**
     * @return Whether the configuration property is secret.
     * 
     */
    private Boolean secret;
    /**
     * @return The type of the configuration property. Valid values: `String`, `Number`, `Boolean`
     * 
     */
    private @Nullable String type;

    private CustomActionTypeConfigurationProperty() {}
    /**
     * @return The description of the action configuration property.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether the configuration property is a key.
     * 
     */
    public Boolean key() {
        return this.key;
    }
    /**
     * @return The name of the action configuration property.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Indicates that the property will be used in conjunction with PollForJobs.
     * 
     */
    public Optional<Boolean> queryable() {
        return Optional.ofNullable(this.queryable);
    }
    /**
     * @return Whether the configuration property is a required value.
     * 
     */
    public Boolean required() {
        return this.required;
    }
    /**
     * @return Whether the configuration property is secret.
     * 
     */
    public Boolean secret() {
        return this.secret;
    }
    /**
     * @return The type of the configuration property. Valid values: `String`, `Number`, `Boolean`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomActionTypeConfigurationProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private Boolean key;
        private String name;
        private @Nullable Boolean queryable;
        private Boolean required;
        private Boolean secret;
        private @Nullable String type;
        public Builder() {}
        public Builder(CustomActionTypeConfigurationProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
    	      this.queryable = defaults.queryable;
    	      this.required = defaults.required;
    	      this.secret = defaults.secret;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder key(Boolean key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("CustomActionTypeConfigurationProperty", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("CustomActionTypeConfigurationProperty", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder queryable(@Nullable Boolean queryable) {

            this.queryable = queryable;
            return this;
        }
        @CustomType.Setter
        public Builder required(Boolean required) {
            if (required == null) {
              throw new MissingRequiredPropertyException("CustomActionTypeConfigurationProperty", "required");
            }
            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder secret(Boolean secret) {
            if (secret == null) {
              throw new MissingRequiredPropertyException("CustomActionTypeConfigurationProperty", "secret");
            }
            this.secret = secret;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public CustomActionTypeConfigurationProperty build() {
            final var _resultValue = new CustomActionTypeConfigurationProperty();
            _resultValue.description = description;
            _resultValue.key = key;
            _resultValue.name = name;
            _resultValue.queryable = queryable;
            _resultValue.required = required;
            _resultValue.secret = secret;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
