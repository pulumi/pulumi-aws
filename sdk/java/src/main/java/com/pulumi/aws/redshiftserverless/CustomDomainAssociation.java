// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.redshiftserverless.CustomDomainAssociationArgs;
import com.pulumi.aws.redshiftserverless.inputs.CustomDomainAssociationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Redshift Serverless Custom Domain Association.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.acm.Certificate;
 * import com.pulumi.aws.acm.CertificateArgs;
 * import com.pulumi.aws.redshiftserverless.Namespace;
 * import com.pulumi.aws.redshiftserverless.NamespaceArgs;
 * import com.pulumi.aws.redshiftserverless.Workgroup;
 * import com.pulumi.aws.redshiftserverless.WorkgroupArgs;
 * import com.pulumi.aws.redshiftserverless.CustomDomainAssociation;
 * import com.pulumi.aws.redshiftserverless.CustomDomainAssociationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Certificate("example", CertificateArgs.builder()        
 *             .domainName("example.com")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()        
 *             .namespaceName("example-namespace")
 *             .build());
 * 
 *         var exampleWorkgroup = new Workgroup("exampleWorkgroup", WorkgroupArgs.builder()        
 *             .workgroupName("example-workgroup")
 *             .namespaceName(exampleNamespace.namespaceName())
 *             .build());
 * 
 *         var exampleCustomDomainAssociation = new CustomDomainAssociation("exampleCustomDomainAssociation", CustomDomainAssociationArgs.builder()        
 *             .workgroupName(exampleWorkgroup.workgroupName())
 *             .customDomainName("example.com")
 *             .customDomainCertificateArn(example.arn())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Redshift Serverless Custom Domain Association using the `workgroup_name` and `custom_domain_name`, separated by the coma. For example:
 * 
 * ```sh
 * $ pulumi import aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation example example-workgroup,example.com
 * ```
 * 
 */
@ResourceType(type="aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation")
public class CustomDomainAssociation extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the certificate for the custom domain association.
     * 
     */
    @Export(name="customDomainCertificateArn", refs={String.class}, tree="[0]")
    private Output<String> customDomainCertificateArn;

    /**
     * @return ARN of the certificate for the custom domain association.
     * 
     */
    public Output<String> customDomainCertificateArn() {
        return this.customDomainCertificateArn;
    }
    /**
     * Expiration time for the certificate.
     * 
     */
    @Export(name="customDomainCertificateExpiryTime", refs={String.class}, tree="[0]")
    private Output<String> customDomainCertificateExpiryTime;

    /**
     * @return Expiration time for the certificate.
     * 
     */
    public Output<String> customDomainCertificateExpiryTime() {
        return this.customDomainCertificateExpiryTime;
    }
    /**
     * Custom domain to associate with the workgroup.
     * 
     */
    @Export(name="customDomainName", refs={String.class}, tree="[0]")
    private Output<String> customDomainName;

    /**
     * @return Custom domain to associate with the workgroup.
     * 
     */
    public Output<String> customDomainName() {
        return this.customDomainName;
    }
    /**
     * Name of the workgroup.
     * 
     */
    @Export(name="workgroupName", refs={String.class}, tree="[0]")
    private Output<String> workgroupName;

    /**
     * @return Name of the workgroup.
     * 
     */
    public Output<String> workgroupName() {
        return this.workgroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CustomDomainAssociation(String name) {
        this(name, CustomDomainAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CustomDomainAssociation(String name, CustomDomainAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CustomDomainAssociation(String name, CustomDomainAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation", name, args == null ? CustomDomainAssociationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CustomDomainAssociation(String name, Output<String> id, @Nullable CustomDomainAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CustomDomainAssociation get(String name, Output<String> id, @Nullable CustomDomainAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CustomDomainAssociation(name, id, state, options);
    }
}
