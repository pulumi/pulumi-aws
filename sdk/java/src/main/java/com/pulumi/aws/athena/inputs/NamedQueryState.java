// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamedQueryState extends com.pulumi.resources.ResourceArgs {

    public static final NamedQueryState Empty = new NamedQueryState();

    @Import(name="database")
    private @Nullable Output<String> database;

    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="query")
    private @Nullable Output<String> query;

    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    @Import(name="workgroup")
    private @Nullable Output<String> workgroup;

    public Optional<Output<String>> workgroup() {
        return Optional.ofNullable(this.workgroup);
    }

    private NamedQueryState() {}

    private NamedQueryState(NamedQueryState $) {
        this.database = $.database;
        this.description = $.description;
        this.name = $.name;
        this.query = $.query;
        this.workgroup = $.workgroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamedQueryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamedQueryState $;

        public Builder() {
            $ = new NamedQueryState();
        }

        public Builder(NamedQueryState defaults) {
            $ = new NamedQueryState(Objects.requireNonNull(defaults));
        }

        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        public Builder database(String database) {
            return database(Output.of(database));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public Builder workgroup(@Nullable Output<String> workgroup) {
            $.workgroup = workgroup;
            return this;
        }

        public Builder workgroup(String workgroup) {
            return workgroup(Output.of(workgroup));
        }

        public NamedQueryState build() {
            return $;
        }
    }

}
