// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentPromptVariantTemplateConfigurationTextCachePointArgs;
import com.pulumi.aws.bedrock.inputs.AgentPromptVariantTemplateConfigurationTextInputVariableArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentPromptVariantTemplateConfigurationTextArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentPromptVariantTemplateConfigurationTextArgs Empty = new AgentPromptVariantTemplateConfigurationTextArgs();

    @Import(name="cachePoint")
    private @Nullable Output<AgentPromptVariantTemplateConfigurationTextCachePointArgs> cachePoint;

    public Optional<Output<AgentPromptVariantTemplateConfigurationTextCachePointArgs>> cachePoint() {
        return Optional.ofNullable(this.cachePoint);
    }

    @Import(name="inputVariables")
    private @Nullable Output<List<AgentPromptVariantTemplateConfigurationTextInputVariableArgs>> inputVariables;

    public Optional<Output<List<AgentPromptVariantTemplateConfigurationTextInputVariableArgs>>> inputVariables() {
        return Optional.ofNullable(this.inputVariables);
    }

    @Import(name="text", required=true)
    private Output<String> text;

    public Output<String> text() {
        return this.text;
    }

    private AgentPromptVariantTemplateConfigurationTextArgs() {}

    private AgentPromptVariantTemplateConfigurationTextArgs(AgentPromptVariantTemplateConfigurationTextArgs $) {
        this.cachePoint = $.cachePoint;
        this.inputVariables = $.inputVariables;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentPromptVariantTemplateConfigurationTextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentPromptVariantTemplateConfigurationTextArgs $;

        public Builder() {
            $ = new AgentPromptVariantTemplateConfigurationTextArgs();
        }

        public Builder(AgentPromptVariantTemplateConfigurationTextArgs defaults) {
            $ = new AgentPromptVariantTemplateConfigurationTextArgs(Objects.requireNonNull(defaults));
        }

        public Builder cachePoint(@Nullable Output<AgentPromptVariantTemplateConfigurationTextCachePointArgs> cachePoint) {
            $.cachePoint = cachePoint;
            return this;
        }

        public Builder cachePoint(AgentPromptVariantTemplateConfigurationTextCachePointArgs cachePoint) {
            return cachePoint(Output.of(cachePoint));
        }

        public Builder inputVariables(@Nullable Output<List<AgentPromptVariantTemplateConfigurationTextInputVariableArgs>> inputVariables) {
            $.inputVariables = inputVariables;
            return this;
        }

        public Builder inputVariables(List<AgentPromptVariantTemplateConfigurationTextInputVariableArgs> inputVariables) {
            return inputVariables(Output.of(inputVariables));
        }

        public Builder inputVariables(AgentPromptVariantTemplateConfigurationTextInputVariableArgs... inputVariables) {
            return inputVariables(List.of(inputVariables));
        }

        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public AgentPromptVariantTemplateConfigurationTextArgs build() {
            if ($.text == null) {
                throw new MissingRequiredPropertyException("AgentPromptVariantTemplateConfigurationTextArgs", "text");
            }
            return $;
        }
    }

}
