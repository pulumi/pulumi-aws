// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountRegistrationState extends com.pulumi.resources.ResourceArgs {

    public static final AccountRegistrationState Empty = new AccountRegistrationState();

    /**
     * Identifier for the delegated administrator account.
     * 
     */
    @Import(name="delegatedAdminAccount")
    private @Nullable Output<String> delegatedAdminAccount;

    /**
     * @return Identifier for the delegated administrator account.
     * 
     */
    public Optional<Output<String>> delegatedAdminAccount() {
        return Optional.ofNullable(this.delegatedAdminAccount);
    }

    /**
     * Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
     * 
     */
    @Import(name="deregisterOnDestroy")
    private @Nullable Output<Boolean> deregisterOnDestroy;

    /**
     * @return Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
     * 
     */
    public Optional<Output<Boolean>> deregisterOnDestroy() {
        return Optional.ofNullable(this.deregisterOnDestroy);
    }

    /**
     * KMS key identifier.
     * 
     */
    @Import(name="kmsKey")
    private @Nullable Output<String> kmsKey;

    /**
     * @return KMS key identifier.
     * 
     */
    public Optional<Output<String>> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Status of the account registration request.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the account registration request.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private AccountRegistrationState() {}

    private AccountRegistrationState(AccountRegistrationState $) {
        this.delegatedAdminAccount = $.delegatedAdminAccount;
        this.deregisterOnDestroy = $.deregisterOnDestroy;
        this.kmsKey = $.kmsKey;
        this.region = $.region;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountRegistrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountRegistrationState $;

        public Builder() {
            $ = new AccountRegistrationState();
        }

        public Builder(AccountRegistrationState defaults) {
            $ = new AccountRegistrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegatedAdminAccount Identifier for the delegated administrator account.
         * 
         * @return builder
         * 
         */
        public Builder delegatedAdminAccount(@Nullable Output<String> delegatedAdminAccount) {
            $.delegatedAdminAccount = delegatedAdminAccount;
            return this;
        }

        /**
         * @param delegatedAdminAccount Identifier for the delegated administrator account.
         * 
         * @return builder
         * 
         */
        public Builder delegatedAdminAccount(String delegatedAdminAccount) {
            return delegatedAdminAccount(Output.of(delegatedAdminAccount));
        }

        /**
         * @param deregisterOnDestroy Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
         * 
         * @return builder
         * 
         */
        public Builder deregisterOnDestroy(@Nullable Output<Boolean> deregisterOnDestroy) {
            $.deregisterOnDestroy = deregisterOnDestroy;
            return this;
        }

        /**
         * @param deregisterOnDestroy Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
         * 
         * @return builder
         * 
         */
        public Builder deregisterOnDestroy(Boolean deregisterOnDestroy) {
            return deregisterOnDestroy(Output.of(deregisterOnDestroy));
        }

        /**
         * @param kmsKey KMS key identifier.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(@Nullable Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey KMS key identifier.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param status Status of the account registration request.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the account registration request.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public AccountRegistrationState build() {
            return $;
        }
    }

}
