// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.GetAnalysisPermission;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAnalysisResult {
    private String analysisId;
    private String arn;
    private String awsAccountId;
    private String createdTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String lastPublishedTime;
    private String lastUpdatedTime;
    private String name;
    private List<GetAnalysisPermission> permissions;
    private String status;
    private Map<String,String> tags;
    private String themeArn;

    private GetAnalysisResult() {}
    public String analysisId() {
        return this.analysisId;
    }
    public String arn() {
        return this.arn;
    }
    public String awsAccountId() {
        return this.awsAccountId;
    }
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastPublishedTime() {
        return this.lastPublishedTime;
    }
    public String lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    public String name() {
        return this.name;
    }
    public List<GetAnalysisPermission> permissions() {
        return this.permissions;
    }
    public String status() {
        return this.status;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String themeArn() {
        return this.themeArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalysisResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String analysisId;
        private String arn;
        private String awsAccountId;
        private String createdTime;
        private String id;
        private String lastPublishedTime;
        private String lastUpdatedTime;
        private String name;
        private List<GetAnalysisPermission> permissions;
        private String status;
        private Map<String,String> tags;
        private String themeArn;
        public Builder() {}
        public Builder(GetAnalysisResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analysisId = defaults.analysisId;
    	      this.arn = defaults.arn;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.lastPublishedTime = defaults.lastPublishedTime;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.themeArn = defaults.themeArn;
        }

        @CustomType.Setter
        public Builder analysisId(String analysisId) {
            if (analysisId == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "analysisId");
            }
            this.analysisId = analysisId;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder awsAccountId(String awsAccountId) {
            if (awsAccountId == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "awsAccountId");
            }
            this.awsAccountId = awsAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastPublishedTime(String lastPublishedTime) {
            if (lastPublishedTime == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "lastPublishedTime");
            }
            this.lastPublishedTime = lastPublishedTime;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(String lastUpdatedTime) {
            if (lastUpdatedTime == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "lastUpdatedTime");
            }
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(List<GetAnalysisPermission> permissions) {
            if (permissions == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "permissions");
            }
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(GetAnalysisPermission... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder themeArn(String themeArn) {
            if (themeArn == null) {
              throw new MissingRequiredPropertyException("GetAnalysisResult", "themeArn");
            }
            this.themeArn = themeArn;
            return this;
        }
        public GetAnalysisResult build() {
            final var _resultValue = new GetAnalysisResult();
            _resultValue.analysisId = analysisId;
            _resultValue.arn = arn;
            _resultValue.awsAccountId = awsAccountId;
            _resultValue.createdTime = createdTime;
            _resultValue.id = id;
            _resultValue.lastPublishedTime = lastPublishedTime;
            _resultValue.lastUpdatedTime = lastUpdatedTime;
            _resultValue.name = name;
            _resultValue.permissions = permissions;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.themeArn = themeArn;
            return _resultValue;
        }
    }
}
