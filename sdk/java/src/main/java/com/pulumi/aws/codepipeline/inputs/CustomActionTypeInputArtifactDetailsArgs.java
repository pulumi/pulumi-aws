// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class CustomActionTypeInputArtifactDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomActionTypeInputArtifactDetailsArgs Empty = new CustomActionTypeInputArtifactDetailsArgs();

    /**
     * The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
     * 
     */
    @Import(name="maximumCount", required=true)
    private Output<Integer> maximumCount;

    /**
     * @return The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
     * 
     */
    public Output<Integer> maximumCount() {
        return this.maximumCount;
    }

    /**
     * The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
     * 
     */
    @Import(name="minimumCount", required=true)
    private Output<Integer> minimumCount;

    /**
     * @return The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
     * 
     */
    public Output<Integer> minimumCount() {
        return this.minimumCount;
    }

    private CustomActionTypeInputArtifactDetailsArgs() {}

    private CustomActionTypeInputArtifactDetailsArgs(CustomActionTypeInputArtifactDetailsArgs $) {
        this.maximumCount = $.maximumCount;
        this.minimumCount = $.minimumCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomActionTypeInputArtifactDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomActionTypeInputArtifactDetailsArgs $;

        public Builder() {
            $ = new CustomActionTypeInputArtifactDetailsArgs();
        }

        public Builder(CustomActionTypeInputArtifactDetailsArgs defaults) {
            $ = new CustomActionTypeInputArtifactDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maximumCount The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
         * 
         * @return builder
         * 
         */
        public Builder maximumCount(Output<Integer> maximumCount) {
            $.maximumCount = maximumCount;
            return this;
        }

        /**
         * @param maximumCount The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
         * 
         * @return builder
         * 
         */
        public Builder maximumCount(Integer maximumCount) {
            return maximumCount(Output.of(maximumCount));
        }

        /**
         * @param minimumCount The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
         * 
         * @return builder
         * 
         */
        public Builder minimumCount(Output<Integer> minimumCount) {
            $.minimumCount = minimumCount;
            return this;
        }

        /**
         * @param minimumCount The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
         * 
         * @return builder
         * 
         */
        public Builder minimumCount(Integer minimumCount) {
            return minimumCount(Output.of(minimumCount));
        }

        public CustomActionTypeInputArtifactDetailsArgs build() {
            if ($.maximumCount == null) {
                throw new MissingRequiredPropertyException("CustomActionTypeInputArtifactDetailsArgs", "maximumCount");
            }
            if ($.minimumCount == null) {
                throw new MissingRequiredPropertyException("CustomActionTypeInputArtifactDetailsArgs", "minimumCount");
            }
            return $;
        }
    }

}
