// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace;

import com.pulumi.aws.finspace.inputs.KxEnvironmentCustomDnsConfigurationArgs;
import com.pulumi.aws.finspace.inputs.KxEnvironmentTransitGatewayConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KxEnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final KxEnvironmentArgs Empty = new KxEnvironmentArgs();

    /**
     * List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
     * 
     */
    @Import(name="customDnsConfigurations")
    private @Nullable Output<List<KxEnvironmentCustomDnsConfigurationArgs>> customDnsConfigurations;

    /**
     * @return List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
     * 
     */
    public Optional<Output<List<KxEnvironmentCustomDnsConfigurationArgs>>> customDnsConfigurations() {
        return Optional.ofNullable(this.customDnsConfigurations);
    }

    /**
     * Description for the KX environment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the KX environment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * KMS key ID to encrypt your data in the FinSpace environment.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="kmsKeyId", required=true)
    private Output<String> kmsKeyId;

    /**
     * @return KMS key ID to encrypt your data in the FinSpace environment.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Name of the KX environment that you want to create.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the KX environment that you want to create.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
     * 
     */
    @Import(name="transitGatewayConfiguration")
    private @Nullable Output<KxEnvironmentTransitGatewayConfigurationArgs> transitGatewayConfiguration;

    /**
     * @return Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
     * 
     */
    public Optional<Output<KxEnvironmentTransitGatewayConfigurationArgs>> transitGatewayConfiguration() {
        return Optional.ofNullable(this.transitGatewayConfiguration);
    }

    private KxEnvironmentArgs() {}

    private KxEnvironmentArgs(KxEnvironmentArgs $) {
        this.customDnsConfigurations = $.customDnsConfigurations;
        this.description = $.description;
        this.kmsKeyId = $.kmsKeyId;
        this.name = $.name;
        this.tags = $.tags;
        this.transitGatewayConfiguration = $.transitGatewayConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxEnvironmentArgs $;

        public Builder() {
            $ = new KxEnvironmentArgs();
        }

        public Builder(KxEnvironmentArgs defaults) {
            $ = new KxEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDnsConfigurations List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
         * 
         * @return builder
         * 
         */
        public Builder customDnsConfigurations(@Nullable Output<List<KxEnvironmentCustomDnsConfigurationArgs>> customDnsConfigurations) {
            $.customDnsConfigurations = customDnsConfigurations;
            return this;
        }

        /**
         * @param customDnsConfigurations List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
         * 
         * @return builder
         * 
         */
        public Builder customDnsConfigurations(List<KxEnvironmentCustomDnsConfigurationArgs> customDnsConfigurations) {
            return customDnsConfigurations(Output.of(customDnsConfigurations));
        }

        /**
         * @param customDnsConfigurations List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
         * 
         * @return builder
         * 
         */
        public Builder customDnsConfigurations(KxEnvironmentCustomDnsConfigurationArgs... customDnsConfigurations) {
            return customDnsConfigurations(List.of(customDnsConfigurations));
        }

        /**
         * @param description Description for the KX environment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the KX environment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kmsKeyId KMS key ID to encrypt your data in the FinSpace environment.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId KMS key ID to encrypt your data in the FinSpace environment.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param name Name of the KX environment that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the KX environment that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param transitGatewayConfiguration Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayConfiguration(@Nullable Output<KxEnvironmentTransitGatewayConfigurationArgs> transitGatewayConfiguration) {
            $.transitGatewayConfiguration = transitGatewayConfiguration;
            return this;
        }

        /**
         * @param transitGatewayConfiguration Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayConfiguration(KxEnvironmentTransitGatewayConfigurationArgs transitGatewayConfiguration) {
            return transitGatewayConfiguration(Output.of(transitGatewayConfiguration));
        }

        public KxEnvironmentArgs build() {
            if ($.kmsKeyId == null) {
                throw new MissingRequiredPropertyException("KxEnvironmentArgs", "kmsKeyId");
            }
            return $;
        }
    }

}
