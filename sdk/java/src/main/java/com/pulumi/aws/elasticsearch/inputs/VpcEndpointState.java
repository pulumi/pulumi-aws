// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.inputs;

import com.pulumi.aws.elasticsearch.inputs.VpcEndpointVpcOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointState Empty = new VpcEndpointState();

    /**
     * Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
     * 
     */
    @Import(name="domainArn")
    private @Nullable Output<String> domainArn;

    /**
     * @return Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
     * 
     */
    public Optional<Output<String>> domainArn() {
        return Optional.ofNullable(this.domainArn);
    }

    /**
     * The connection endpoint ID for connecting to the domain.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The connection endpoint ID for connecting to the domain.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * Options to specify the subnets and security groups for the endpoint.
     * 
     */
    @Import(name="vpcOptions")
    private @Nullable Output<VpcEndpointVpcOptionsArgs> vpcOptions;

    /**
     * @return Options to specify the subnets and security groups for the endpoint.
     * 
     */
    public Optional<Output<VpcEndpointVpcOptionsArgs>> vpcOptions() {
        return Optional.ofNullable(this.vpcOptions);
    }

    private VpcEndpointState() {}

    private VpcEndpointState(VpcEndpointState $) {
        this.domainArn = $.domainArn;
        this.endpoint = $.endpoint;
        this.vpcOptions = $.vpcOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointState $;

        public Builder() {
            $ = new VpcEndpointState();
        }

        public Builder(VpcEndpointState defaults) {
            $ = new VpcEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainArn Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
         * 
         * @return builder
         * 
         */
        public Builder domainArn(@Nullable Output<String> domainArn) {
            $.domainArn = domainArn;
            return this;
        }

        /**
         * @param domainArn Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
         * 
         * @return builder
         * 
         */
        public Builder domainArn(String domainArn) {
            return domainArn(Output.of(domainArn));
        }

        /**
         * @param endpoint The connection endpoint ID for connecting to the domain.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The connection endpoint ID for connecting to the domain.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param vpcOptions Options to specify the subnets and security groups for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vpcOptions(@Nullable Output<VpcEndpointVpcOptionsArgs> vpcOptions) {
            $.vpcOptions = vpcOptions;
            return this;
        }

        /**
         * @param vpcOptions Options to specify the subnets and security groups for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vpcOptions(VpcEndpointVpcOptionsArgs vpcOptions) {
            return vpcOptions(Output.of(vpcOptions));
        }

        public VpcEndpointState build() {
            return $;
        }
    }

}
