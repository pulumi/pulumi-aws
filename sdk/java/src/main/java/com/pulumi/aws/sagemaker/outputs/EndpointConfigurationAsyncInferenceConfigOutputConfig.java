// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.aws.sagemaker.outputs.EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointConfigurationAsyncInferenceConfigOutputConfig {
    /**
     * @return The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return Specifies the configuration for notifications of inference results for asynchronous inference.
     * 
     */
    private @Nullable EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig notificationConfig;
    /**
     * @return The Amazon S3 location to upload failure inference responses to.
     * 
     */
    private @Nullable String s3FailurePath;
    /**
     * @return The Amazon S3 location to upload inference responses to.
     * 
     */
    private String s3OutputPath;

    private EndpointConfigurationAsyncInferenceConfigOutputConfig() {}
    /**
     * @return The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return Specifies the configuration for notifications of inference results for asynchronous inference.
     * 
     */
    public Optional<EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig> notificationConfig() {
        return Optional.ofNullable(this.notificationConfig);
    }
    /**
     * @return The Amazon S3 location to upload failure inference responses to.
     * 
     */
    public Optional<String> s3FailurePath() {
        return Optional.ofNullable(this.s3FailurePath);
    }
    /**
     * @return The Amazon S3 location to upload inference responses to.
     * 
     */
    public String s3OutputPath() {
        return this.s3OutputPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointConfigurationAsyncInferenceConfigOutputConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String kmsKeyId;
        private @Nullable EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig notificationConfig;
        private @Nullable String s3FailurePath;
        private String s3OutputPath;
        public Builder() {}
        public Builder(EndpointConfigurationAsyncInferenceConfigOutputConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.s3FailurePath = defaults.s3FailurePath;
    	      this.s3OutputPath = defaults.s3OutputPath;
        }

        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder notificationConfig(@Nullable EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }
        @CustomType.Setter
        public Builder s3FailurePath(@Nullable String s3FailurePath) {
            this.s3FailurePath = s3FailurePath;
            return this;
        }
        @CustomType.Setter
        public Builder s3OutputPath(String s3OutputPath) {
            this.s3OutputPath = Objects.requireNonNull(s3OutputPath);
            return this;
        }
        public EndpointConfigurationAsyncInferenceConfigOutputConfig build() {
            final var _resultValue = new EndpointConfigurationAsyncInferenceConfigOutputConfig();
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.notificationConfig = notificationConfig;
            _resultValue.s3FailurePath = s3FailurePath;
            _resultValue.s3OutputPath = s3OutputPath;
            return _resultValue;
        }
    }
}
