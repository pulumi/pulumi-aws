// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.aws.appconfig.inputs.ExtensionActionPointArgs;
import com.pulumi.aws.appconfig.inputs.ExtensionParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionArgs Empty = new ExtensionArgs();

    @Import(name="actionPoints", required=true)
    private Output<List<ExtensionActionPointArgs>> actionPoints;

    public Output<List<ExtensionActionPointArgs>> actionPoints() {
        return this.actionPoints;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parameters")
    private @Nullable Output<List<ExtensionParameterArgs>> parameters;

    public Optional<Output<List<ExtensionParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ExtensionArgs() {}

    private ExtensionArgs(ExtensionArgs $) {
        this.actionPoints = $.actionPoints;
        this.description = $.description;
        this.name = $.name;
        this.parameters = $.parameters;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionArgs $;

        public Builder() {
            $ = new ExtensionArgs();
        }

        public Builder(ExtensionArgs defaults) {
            $ = new ExtensionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionPoints(Output<List<ExtensionActionPointArgs>> actionPoints) {
            $.actionPoints = actionPoints;
            return this;
        }

        public Builder actionPoints(List<ExtensionActionPointArgs> actionPoints) {
            return actionPoints(Output.of(actionPoints));
        }

        public Builder actionPoints(ExtensionActionPointArgs... actionPoints) {
            return actionPoints(List.of(actionPoints));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<List<ExtensionParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<ExtensionParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(ExtensionParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ExtensionArgs build() {
            $.actionPoints = Objects.requireNonNull($.actionPoints, "expected parameter 'actionPoints' to be non-null");
            return $;
        }
    }

}
