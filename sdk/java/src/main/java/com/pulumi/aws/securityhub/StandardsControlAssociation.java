// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.securityhub.StandardsControlAssociationArgs;
import com.pulumi.aws.securityhub.inputs.StandardsControlAssociationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Basic usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.securityhub.Account;
 * import com.pulumi.aws.securityhub.StandardsSubscription;
 * import com.pulumi.aws.securityhub.StandardsSubscriptionArgs;
 * import com.pulumi.aws.standardsControlAssociation;
 * import com.pulumi.aws.StandardsControlAssociationArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Account("example");
 * 
 *         var cisAwsFoundationsBenchmark = new StandardsSubscription("cisAwsFoundationsBenchmark", StandardsSubscriptionArgs.builder()
 *             .standardsArn("arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(example)
 *                 .build());
 * 
 *         var cisAwsFoundationsBenchmarkDisableIam1 = new StandardsControlAssociation("cisAwsFoundationsBenchmarkDisableIam1", StandardsControlAssociationArgs.builder()
 *             .standardsArn(cisAwsFoundationsBenchmark.standardsArn())
 *             .securityControlId("IAM.1")
 *             .associationStatus("DISABLED")
 *             .updatedReason("Not needed")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="aws:securityhub/standardsControlAssociation:StandardsControlAssociation")
public class StandardsControlAssociation extends com.pulumi.resources.CustomResource {
    /**
     * The desired enablement status of the control in the standard. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @Export(name="associationStatus", refs={String.class}, tree="[0]")
    private Output<String> associationStatus;

    /**
     * @return The desired enablement status of the control in the standard. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> associationStatus() {
        return this.associationStatus;
    }
    /**
     * The unique identifier for the security control whose enablement status you want to update.
     * 
     */
    @Export(name="securityControlId", refs={String.class}, tree="[0]")
    private Output<String> securityControlId;

    /**
     * @return The unique identifier for the security control whose enablement status you want to update.
     * 
     */
    public Output<String> securityControlId() {
        return this.securityControlId;
    }
    /**
     * The Amazon Resource Name (ARN) of the standard in which you want to update the control&#39;s enablement status.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="standardsArn", refs={String.class}, tree="[0]")
    private Output<String> standardsArn;

    /**
     * @return The Amazon Resource Name (ARN) of the standard in which you want to update the control&#39;s enablement status.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> standardsArn() {
        return this.standardsArn;
    }
    /**
     * The reason for updating the control&#39;s enablement status in the standard. Required when `association_status` is `DISABLED`.
     * 
     */
    @Export(name="updatedReason", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> updatedReason;

    /**
     * @return The reason for updating the control&#39;s enablement status in the standard. Required when `association_status` is `DISABLED`.
     * 
     */
    public Output<Optional<String>> updatedReason() {
        return Codegen.optional(this.updatedReason);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StandardsControlAssociation(java.lang.String name) {
        this(name, StandardsControlAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StandardsControlAssociation(java.lang.String name, StandardsControlAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StandardsControlAssociation(java.lang.String name, StandardsControlAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:securityhub/standardsControlAssociation:StandardsControlAssociation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StandardsControlAssociation(java.lang.String name, Output<java.lang.String> id, @Nullable StandardsControlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:securityhub/standardsControlAssociation:StandardsControlAssociation", name, state, makeResourceOptions(options, id), false);
    }

    private static StandardsControlAssociationArgs makeArgs(StandardsControlAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StandardsControlAssociationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StandardsControlAssociation get(java.lang.String name, Output<java.lang.String> id, @Nullable StandardsControlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StandardsControlAssociation(name, id, state, options);
    }
}
