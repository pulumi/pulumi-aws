// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetConnectPeerFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectPeerResult {
    /**
     * @return EC2 Transit Gateway Connect Peer ARN
     * 
     */
    private @Nullable String arn;
    /**
     * @return BGP ASN number assigned customer device
     * 
     */
    private @Nullable String bgpAsn;
    /**
     * @return The IP address assigned to customer device, which is used as BGP IP address.
     * 
     */
    private @Nullable String bgpPeerAddress;
    /**
     * @return The IP addresses assigned to Transit Gateway, which are used as BGP IP addresses.
     * 
     */
    private @Nullable List<String> bgpTransitGatewayAddresses;
    private @Nullable List<GetConnectPeerFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return CIDR blocks that will be used for addressing within the tunnel.
     * 
     */
    private @Nullable List<String> insideCidrBlocks;
    /**
     * @return IP addressed assigned to customer device, which is used as tunnel endpoint
     * 
     */
    private @Nullable String peerAddress;
    /**
     * @return Key-value tags for the EC2 Transit Gateway Connect Peer
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The IP address assigned to Transit Gateway, which is used as tunnel endpoint.
     * 
     */
    private @Nullable String transitGatewayAddress;
    /**
     * @return The Transit Gateway Connect
     * 
     */
    private @Nullable String transitGatewayAttachmentId;
    private @Nullable String transitGatewayConnectPeerId;

    private GetConnectPeerResult() {}
    /**
     * @return EC2 Transit Gateway Connect Peer ARN
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return BGP ASN number assigned customer device
     * 
     */
    public Optional<String> bgpAsn() {
        return Optional.ofNullable(this.bgpAsn);
    }
    /**
     * @return The IP address assigned to customer device, which is used as BGP IP address.
     * 
     */
    public Optional<String> bgpPeerAddress() {
        return Optional.ofNullable(this.bgpPeerAddress);
    }
    /**
     * @return The IP addresses assigned to Transit Gateway, which are used as BGP IP addresses.
     * 
     */
    public List<String> bgpTransitGatewayAddresses() {
        return this.bgpTransitGatewayAddresses == null ? List.of() : this.bgpTransitGatewayAddresses;
    }
    public List<GetConnectPeerFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return CIDR blocks that will be used for addressing within the tunnel.
     * 
     */
    public List<String> insideCidrBlocks() {
        return this.insideCidrBlocks == null ? List.of() : this.insideCidrBlocks;
    }
    /**
     * @return IP addressed assigned to customer device, which is used as tunnel endpoint
     * 
     */
    public Optional<String> peerAddress() {
        return Optional.ofNullable(this.peerAddress);
    }
    /**
     * @return Key-value tags for the EC2 Transit Gateway Connect Peer
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The IP address assigned to Transit Gateway, which is used as tunnel endpoint.
     * 
     */
    public Optional<String> transitGatewayAddress() {
        return Optional.ofNullable(this.transitGatewayAddress);
    }
    /**
     * @return The Transit Gateway Connect
     * 
     */
    public Optional<String> transitGatewayAttachmentId() {
        return Optional.ofNullable(this.transitGatewayAttachmentId);
    }
    public Optional<String> transitGatewayConnectPeerId() {
        return Optional.ofNullable(this.transitGatewayConnectPeerId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectPeerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String bgpAsn;
        private @Nullable String bgpPeerAddress;
        private @Nullable List<String> bgpTransitGatewayAddresses;
        private @Nullable List<GetConnectPeerFilter> filters;
        private @Nullable String id;
        private @Nullable List<String> insideCidrBlocks;
        private @Nullable String peerAddress;
        private @Nullable Map<String,String> tags;
        private @Nullable String transitGatewayAddress;
        private @Nullable String transitGatewayAttachmentId;
        private @Nullable String transitGatewayConnectPeerId;
        public Builder() {}
        public Builder(GetConnectPeerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.bgpAsn = defaults.bgpAsn;
    	      this.bgpPeerAddress = defaults.bgpPeerAddress;
    	      this.bgpTransitGatewayAddresses = defaults.bgpTransitGatewayAddresses;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.insideCidrBlocks = defaults.insideCidrBlocks;
    	      this.peerAddress = defaults.peerAddress;
    	      this.tags = defaults.tags;
    	      this.transitGatewayAddress = defaults.transitGatewayAddress;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayConnectPeerId = defaults.transitGatewayConnectPeerId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder bgpAsn(@Nullable String bgpAsn) {
            this.bgpAsn = bgpAsn;
            return this;
        }
        @CustomType.Setter
        public Builder bgpPeerAddress(@Nullable String bgpPeerAddress) {
            this.bgpPeerAddress = bgpPeerAddress;
            return this;
        }
        @CustomType.Setter
        public Builder bgpTransitGatewayAddresses(@Nullable List<String> bgpTransitGatewayAddresses) {
            this.bgpTransitGatewayAddresses = bgpTransitGatewayAddresses;
            return this;
        }
        public Builder bgpTransitGatewayAddresses(String... bgpTransitGatewayAddresses) {
            return bgpTransitGatewayAddresses(List.of(bgpTransitGatewayAddresses));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetConnectPeerFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConnectPeerFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder insideCidrBlocks(@Nullable List<String> insideCidrBlocks) {
            this.insideCidrBlocks = insideCidrBlocks;
            return this;
        }
        public Builder insideCidrBlocks(String... insideCidrBlocks) {
            return insideCidrBlocks(List.of(insideCidrBlocks));
        }
        @CustomType.Setter
        public Builder peerAddress(@Nullable String peerAddress) {
            this.peerAddress = peerAddress;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAddress(@Nullable String transitGatewayAddress) {
            this.transitGatewayAddress = transitGatewayAddress;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAttachmentId(@Nullable String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayConnectPeerId(@Nullable String transitGatewayConnectPeerId) {
            this.transitGatewayConnectPeerId = transitGatewayConnectPeerId;
            return this;
        }
        public GetConnectPeerResult build() {
            final var o = new GetConnectPeerResult();
            o.arn = arn;
            o.bgpAsn = bgpAsn;
            o.bgpPeerAddress = bgpPeerAddress;
            o.bgpTransitGatewayAddresses = bgpTransitGatewayAddresses;
            o.filters = filters;
            o.id = id;
            o.insideCidrBlocks = insideCidrBlocks;
            o.peerAddress = peerAddress;
            o.tags = tags;
            o.transitGatewayAddress = transitGatewayAddress;
            o.transitGatewayAttachmentId = transitGatewayAttachmentId;
            o.transitGatewayConnectPeerId = transitGatewayConnectPeerId;
            return o;
        }
    }
}
