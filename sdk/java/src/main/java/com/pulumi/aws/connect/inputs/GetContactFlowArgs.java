// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetContactFlowArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContactFlowArgs Empty = new GetContactFlowArgs();

    @Import(name="contactFlowId")
    private @Nullable Output<String> contactFlowId;

    public Optional<Output<String>> contactFlowId() {
        return Optional.ofNullable(this.contactFlowId);
    }

    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetContactFlowArgs() {}

    private GetContactFlowArgs(GetContactFlowArgs $) {
        this.contactFlowId = $.contactFlowId;
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContactFlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContactFlowArgs $;

        public Builder() {
            $ = new GetContactFlowArgs();
        }

        public Builder(GetContactFlowArgs defaults) {
            $ = new GetContactFlowArgs(Objects.requireNonNull(defaults));
        }

        public Builder contactFlowId(@Nullable Output<String> contactFlowId) {
            $.contactFlowId = contactFlowId;
            return this;
        }

        public Builder contactFlowId(String contactFlowId) {
            return contactFlowId(Output.of(contactFlowId));
        }

        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetContactFlowArgs build() {
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            return $;
        }
    }

}
