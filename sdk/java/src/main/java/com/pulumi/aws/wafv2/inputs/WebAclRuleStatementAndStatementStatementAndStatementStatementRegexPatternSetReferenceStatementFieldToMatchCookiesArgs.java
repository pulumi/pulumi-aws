// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs Empty = new WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs();

    @Import(name="matchPatterns", required=true)
    private Output<List<WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns;

    public Output<List<WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns() {
        return this.matchPatterns;
    }

    @Import(name="matchScope", required=true)
    private Output<String> matchScope;

    public Output<String> matchScope() {
        return this.matchScope;
    }

    @Import(name="oversizeHandling", required=true)
    private Output<String> oversizeHandling;

    public Output<String> oversizeHandling() {
        return this.oversizeHandling;
    }

    private WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs() {}

    private WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs(WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs $) {
        this.matchPatterns = $.matchPatterns;
        this.matchScope = $.matchScope;
        this.oversizeHandling = $.oversizeHandling;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs $;

        public Builder() {
            $ = new WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs();
        }

        public Builder(WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs defaults) {
            $ = new WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder matchPatterns(Output<List<WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns) {
            $.matchPatterns = matchPatterns;
            return this;
        }

        public Builder matchPatterns(List<WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs> matchPatterns) {
            return matchPatterns(Output.of(matchPatterns));
        }

        public Builder matchPatterns(WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs... matchPatterns) {
            return matchPatterns(List.of(matchPatterns));
        }

        public Builder matchScope(Output<String> matchScope) {
            $.matchScope = matchScope;
            return this;
        }

        public Builder matchScope(String matchScope) {
            return matchScope(Output.of(matchScope));
        }

        public Builder oversizeHandling(Output<String> oversizeHandling) {
            $.oversizeHandling = oversizeHandling;
            return this;
        }

        public Builder oversizeHandling(String oversizeHandling) {
            return oversizeHandling(Output.of(oversizeHandling));
        }

        public WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs build() {
            $.matchPatterns = Objects.requireNonNull($.matchPatterns, "expected parameter 'matchPatterns' to be non-null");
            $.matchScope = Objects.requireNonNull($.matchScope, "expected parameter 'matchScope' to be non-null");
            $.oversizeHandling = Objects.requireNonNull($.oversizeHandling, "expected parameter 'oversizeHandling' to be non-null");
            return $;
        }
    }

}
