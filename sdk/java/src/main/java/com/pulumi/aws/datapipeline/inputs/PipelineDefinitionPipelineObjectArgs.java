// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datapipeline.inputs;

import com.pulumi.aws.datapipeline.inputs.PipelineDefinitionPipelineObjectFieldArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDefinitionPipelineObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDefinitionPipelineObjectArgs Empty = new PipelineDefinitionPipelineObjectArgs();

    @Import(name="fields")
    private @Nullable Output<List<PipelineDefinitionPipelineObjectFieldArgs>> fields;

    public Optional<Output<List<PipelineDefinitionPipelineObjectFieldArgs>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private PipelineDefinitionPipelineObjectArgs() {}

    private PipelineDefinitionPipelineObjectArgs(PipelineDefinitionPipelineObjectArgs $) {
        this.fields = $.fields;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDefinitionPipelineObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDefinitionPipelineObjectArgs $;

        public Builder() {
            $ = new PipelineDefinitionPipelineObjectArgs();
        }

        public Builder(PipelineDefinitionPipelineObjectArgs defaults) {
            $ = new PipelineDefinitionPipelineObjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder fields(@Nullable Output<List<PipelineDefinitionPipelineObjectFieldArgs>> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(List<PipelineDefinitionPipelineObjectFieldArgs> fields) {
            return fields(Output.of(fields));
        }

        public Builder fields(PipelineDefinitionPipelineObjectFieldArgs... fields) {
            return fields(List.of(fields));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PipelineDefinitionPipelineObjectArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
