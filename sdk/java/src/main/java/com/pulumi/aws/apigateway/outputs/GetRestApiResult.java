// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.aws.apigateway.outputs.GetRestApiEndpointConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRestApiResult {
    /**
     * @return Source of the API key for requests.
     * 
     */
    private @Nullable String apiKeySource;
    /**
     * @return ARN of the REST API.
     * 
     */
    private @Nullable String arn;
    /**
     * @return List of binary media types supported by the REST API.
     * 
     */
    private @Nullable List<String> binaryMediaTypes;
    /**
     * @return Description of the REST API.
     * 
     */
    private @Nullable String description;
    /**
     * @return The endpoint configuration of this RestApi showing the endpoint types of the API.
     * 
     */
    private @Nullable List<GetRestApiEndpointConfiguration> endpointConfigurations;
    /**
     * @return Execution ARN part to be used in `lambda_permission`&#39;s `source_arn` when allowing API Gateway to invoke a Lambda function, e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.
     * 
     */
    private @Nullable String executionArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Minimum response size to compress for the REST API.
     * 
     */
    private @Nullable String minimumCompressionSize;
    private String name;
    /**
     * @return JSON formatted policy document that controls access to the API Gateway.
     * 
     */
    private @Nullable String policy;
    /**
     * @return Set to the ID of the API Gateway Resource on the found REST API where the route matches &#39;/&#39;.
     * 
     */
    private @Nullable String rootResourceId;
    /**
     * @return Key-value map of resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetRestApiResult() {}
    /**
     * @return Source of the API key for requests.
     * 
     */
    public Optional<String> apiKeySource() {
        return Optional.ofNullable(this.apiKeySource);
    }
    /**
     * @return ARN of the REST API.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return List of binary media types supported by the REST API.
     * 
     */
    public List<String> binaryMediaTypes() {
        return this.binaryMediaTypes == null ? List.of() : this.binaryMediaTypes;
    }
    /**
     * @return Description of the REST API.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The endpoint configuration of this RestApi showing the endpoint types of the API.
     * 
     */
    public List<GetRestApiEndpointConfiguration> endpointConfigurations() {
        return this.endpointConfigurations == null ? List.of() : this.endpointConfigurations;
    }
    /**
     * @return Execution ARN part to be used in `lambda_permission`&#39;s `source_arn` when allowing API Gateway to invoke a Lambda function, e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.
     * 
     */
    public Optional<String> executionArn() {
        return Optional.ofNullable(this.executionArn);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Minimum response size to compress for the REST API.
     * 
     */
    public Optional<String> minimumCompressionSize() {
        return Optional.ofNullable(this.minimumCompressionSize);
    }
    public String name() {
        return this.name;
    }
    /**
     * @return JSON formatted policy document that controls access to the API Gateway.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return Set to the ID of the API Gateway Resource on the found REST API where the route matches &#39;/&#39;.
     * 
     */
    public Optional<String> rootResourceId() {
        return Optional.ofNullable(this.rootResourceId);
    }
    /**
     * @return Key-value map of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestApiResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiKeySource;
        private @Nullable String arn;
        private @Nullable List<String> binaryMediaTypes;
        private @Nullable String description;
        private @Nullable List<GetRestApiEndpointConfiguration> endpointConfigurations;
        private @Nullable String executionArn;
        private @Nullable String id;
        private @Nullable String minimumCompressionSize;
        private String name;
        private @Nullable String policy;
        private @Nullable String rootResourceId;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetRestApiResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeySource = defaults.apiKeySource;
    	      this.arn = defaults.arn;
    	      this.binaryMediaTypes = defaults.binaryMediaTypes;
    	      this.description = defaults.description;
    	      this.endpointConfigurations = defaults.endpointConfigurations;
    	      this.executionArn = defaults.executionArn;
    	      this.id = defaults.id;
    	      this.minimumCompressionSize = defaults.minimumCompressionSize;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.rootResourceId = defaults.rootResourceId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder apiKeySource(@Nullable String apiKeySource) {
            this.apiKeySource = apiKeySource;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder binaryMediaTypes(@Nullable List<String> binaryMediaTypes) {
            this.binaryMediaTypes = binaryMediaTypes;
            return this;
        }
        public Builder binaryMediaTypes(String... binaryMediaTypes) {
            return binaryMediaTypes(List.of(binaryMediaTypes));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfigurations(@Nullable List<GetRestApiEndpointConfiguration> endpointConfigurations) {
            this.endpointConfigurations = endpointConfigurations;
            return this;
        }
        public Builder endpointConfigurations(GetRestApiEndpointConfiguration... endpointConfigurations) {
            return endpointConfigurations(List.of(endpointConfigurations));
        }
        @CustomType.Setter
        public Builder executionArn(@Nullable String executionArn) {
            this.executionArn = executionArn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder minimumCompressionSize(@Nullable String minimumCompressionSize) {
            this.minimumCompressionSize = minimumCompressionSize;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder rootResourceId(@Nullable String rootResourceId) {
            this.rootResourceId = rootResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetRestApiResult build() {
            final var o = new GetRestApiResult();
            o.apiKeySource = apiKeySource;
            o.arn = arn;
            o.binaryMediaTypes = binaryMediaTypes;
            o.description = description;
            o.endpointConfigurations = endpointConfigurations;
            o.executionArn = executionArn;
            o.id = id;
            o.minimumCompressionSize = minimumCompressionSize;
            o.name = name;
            o.policy = policy;
            o.rootResourceId = rootResourceId;
            o.tags = tags;
            return o;
        }
    }
}
