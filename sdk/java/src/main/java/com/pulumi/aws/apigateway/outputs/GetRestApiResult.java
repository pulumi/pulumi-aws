// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.aws.apigateway.outputs.GetRestApiEndpointConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRestApiResult {
    private String apiKeySource;
    private String arn;
    private List<String> binaryMediaTypes;
    private String description;
    private List<GetRestApiEndpointConfiguration> endpointConfigurations;
    private String executionArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Integer minimumCompressionSize;
    private String name;
    private String policy;
    private String rootResourceId;
    private Map<String,String> tags;

    private GetRestApiResult() {}
    public String apiKeySource() {
        return this.apiKeySource;
    }
    public String arn() {
        return this.arn;
    }
    public List<String> binaryMediaTypes() {
        return this.binaryMediaTypes;
    }
    public String description() {
        return this.description;
    }
    public List<GetRestApiEndpointConfiguration> endpointConfigurations() {
        return this.endpointConfigurations;
    }
    public String executionArn() {
        return this.executionArn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer minimumCompressionSize() {
        return this.minimumCompressionSize;
    }
    public String name() {
        return this.name;
    }
    public String policy() {
        return this.policy;
    }
    public String rootResourceId() {
        return this.rootResourceId;
    }
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestApiResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKeySource;
        private String arn;
        private List<String> binaryMediaTypes;
        private String description;
        private List<GetRestApiEndpointConfiguration> endpointConfigurations;
        private String executionArn;
        private String id;
        private Integer minimumCompressionSize;
        private String name;
        private String policy;
        private String rootResourceId;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetRestApiResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeySource = defaults.apiKeySource;
    	      this.arn = defaults.arn;
    	      this.binaryMediaTypes = defaults.binaryMediaTypes;
    	      this.description = defaults.description;
    	      this.endpointConfigurations = defaults.endpointConfigurations;
    	      this.executionArn = defaults.executionArn;
    	      this.id = defaults.id;
    	      this.minimumCompressionSize = defaults.minimumCompressionSize;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.rootResourceId = defaults.rootResourceId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder apiKeySource(String apiKeySource) {
            this.apiKeySource = Objects.requireNonNull(apiKeySource);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder binaryMediaTypes(List<String> binaryMediaTypes) {
            this.binaryMediaTypes = Objects.requireNonNull(binaryMediaTypes);
            return this;
        }
        public Builder binaryMediaTypes(String... binaryMediaTypes) {
            return binaryMediaTypes(List.of(binaryMediaTypes));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfigurations(List<GetRestApiEndpointConfiguration> endpointConfigurations) {
            this.endpointConfigurations = Objects.requireNonNull(endpointConfigurations);
            return this;
        }
        public Builder endpointConfigurations(GetRestApiEndpointConfiguration... endpointConfigurations) {
            return endpointConfigurations(List.of(endpointConfigurations));
        }
        @CustomType.Setter
        public Builder executionArn(String executionArn) {
            this.executionArn = Objects.requireNonNull(executionArn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder minimumCompressionSize(Integer minimumCompressionSize) {
            this.minimumCompressionSize = Objects.requireNonNull(minimumCompressionSize);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }
        @CustomType.Setter
        public Builder rootResourceId(String rootResourceId) {
            this.rootResourceId = Objects.requireNonNull(rootResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetRestApiResult build() {
            final var o = new GetRestApiResult();
            o.apiKeySource = apiKeySource;
            o.arn = arn;
            o.binaryMediaTypes = binaryMediaTypes;
            o.description = description;
            o.endpointConfigurations = endpointConfigurations;
            o.executionArn = executionArn;
            o.id = id;
            o.minimumCompressionSize = minimumCompressionSize;
            o.name = name;
            o.policy = policy;
            o.rootResourceId = rootResourceId;
            o.tags = tags;
            return o;
        }
    }
}
