// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr;

import com.pulumi.aws.emr.inputs.ClusterAutoTerminationPolicyArgs;
import com.pulumi.aws.emr.inputs.ClusterBootstrapActionArgs;
import com.pulumi.aws.emr.inputs.ClusterCoreInstanceFleetArgs;
import com.pulumi.aws.emr.inputs.ClusterCoreInstanceGroupArgs;
import com.pulumi.aws.emr.inputs.ClusterEc2AttributesArgs;
import com.pulumi.aws.emr.inputs.ClusterKerberosAttributesArgs;
import com.pulumi.aws.emr.inputs.ClusterMasterInstanceFleetArgs;
import com.pulumi.aws.emr.inputs.ClusterMasterInstanceGroupArgs;
import com.pulumi.aws.emr.inputs.ClusterStepArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @Import(name="additionalInfo")
    private @Nullable Output<String> additionalInfo;

    public Optional<Output<String>> additionalInfo() {
        return Optional.ofNullable(this.additionalInfo);
    }

    @Import(name="applications")
    private @Nullable Output<List<String>> applications;

    public Optional<Output<List<String>>> applications() {
        return Optional.ofNullable(this.applications);
    }

    @Import(name="autoTerminationPolicy")
    private @Nullable Output<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy;

    public Optional<Output<ClusterAutoTerminationPolicyArgs>> autoTerminationPolicy() {
        return Optional.ofNullable(this.autoTerminationPolicy);
    }

    @Import(name="autoscalingRole")
    private @Nullable Output<String> autoscalingRole;

    public Optional<Output<String>> autoscalingRole() {
        return Optional.ofNullable(this.autoscalingRole);
    }

    @Import(name="bootstrapActions")
    private @Nullable Output<List<ClusterBootstrapActionArgs>> bootstrapActions;

    public Optional<Output<List<ClusterBootstrapActionArgs>>> bootstrapActions() {
        return Optional.ofNullable(this.bootstrapActions);
    }

    @Import(name="configurations")
    private @Nullable Output<String> configurations;

    public Optional<Output<String>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    @Import(name="configurationsJson")
    private @Nullable Output<String> configurationsJson;

    public Optional<Output<String>> configurationsJson() {
        return Optional.ofNullable(this.configurationsJson);
    }

    @Import(name="coreInstanceFleet")
    private @Nullable Output<ClusterCoreInstanceFleetArgs> coreInstanceFleet;

    public Optional<Output<ClusterCoreInstanceFleetArgs>> coreInstanceFleet() {
        return Optional.ofNullable(this.coreInstanceFleet);
    }

    @Import(name="coreInstanceGroup")
    private @Nullable Output<ClusterCoreInstanceGroupArgs> coreInstanceGroup;

    public Optional<Output<ClusterCoreInstanceGroupArgs>> coreInstanceGroup() {
        return Optional.ofNullable(this.coreInstanceGroup);
    }

    @Import(name="customAmiId")
    private @Nullable Output<String> customAmiId;

    public Optional<Output<String>> customAmiId() {
        return Optional.ofNullable(this.customAmiId);
    }

    @Import(name="ebsRootVolumeSize")
    private @Nullable Output<Integer> ebsRootVolumeSize;

    public Optional<Output<Integer>> ebsRootVolumeSize() {
        return Optional.ofNullable(this.ebsRootVolumeSize);
    }

    @Import(name="ec2Attributes")
    private @Nullable Output<ClusterEc2AttributesArgs> ec2Attributes;

    public Optional<Output<ClusterEc2AttributesArgs>> ec2Attributes() {
        return Optional.ofNullable(this.ec2Attributes);
    }

    @Import(name="keepJobFlowAliveWhenNoSteps")
    private @Nullable Output<Boolean> keepJobFlowAliveWhenNoSteps;

    public Optional<Output<Boolean>> keepJobFlowAliveWhenNoSteps() {
        return Optional.ofNullable(this.keepJobFlowAliveWhenNoSteps);
    }

    @Import(name="kerberosAttributes")
    private @Nullable Output<ClusterKerberosAttributesArgs> kerberosAttributes;

    public Optional<Output<ClusterKerberosAttributesArgs>> kerberosAttributes() {
        return Optional.ofNullable(this.kerberosAttributes);
    }

    @Import(name="listStepsStates")
    private @Nullable Output<List<String>> listStepsStates;

    public Optional<Output<List<String>>> listStepsStates() {
        return Optional.ofNullable(this.listStepsStates);
    }

    @Import(name="logEncryptionKmsKeyId")
    private @Nullable Output<String> logEncryptionKmsKeyId;

    public Optional<Output<String>> logEncryptionKmsKeyId() {
        return Optional.ofNullable(this.logEncryptionKmsKeyId);
    }

    @Import(name="logUri")
    private @Nullable Output<String> logUri;

    public Optional<Output<String>> logUri() {
        return Optional.ofNullable(this.logUri);
    }

    @Import(name="masterInstanceFleet")
    private @Nullable Output<ClusterMasterInstanceFleetArgs> masterInstanceFleet;

    public Optional<Output<ClusterMasterInstanceFleetArgs>> masterInstanceFleet() {
        return Optional.ofNullable(this.masterInstanceFleet);
    }

    @Import(name="masterInstanceGroup")
    private @Nullable Output<ClusterMasterInstanceGroupArgs> masterInstanceGroup;

    public Optional<Output<ClusterMasterInstanceGroupArgs>> masterInstanceGroup() {
        return Optional.ofNullable(this.masterInstanceGroup);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="releaseLabel", required=true)
    private Output<String> releaseLabel;

    public Output<String> releaseLabel() {
        return this.releaseLabel;
    }

    @Import(name="scaleDownBehavior")
    private @Nullable Output<String> scaleDownBehavior;

    public Optional<Output<String>> scaleDownBehavior() {
        return Optional.ofNullable(this.scaleDownBehavior);
    }

    @Import(name="securityConfiguration")
    private @Nullable Output<String> securityConfiguration;

    public Optional<Output<String>> securityConfiguration() {
        return Optional.ofNullable(this.securityConfiguration);
    }

    @Import(name="serviceRole", required=true)
    private Output<String> serviceRole;

    public Output<String> serviceRole() {
        return this.serviceRole;
    }

    @Import(name="stepConcurrencyLevel")
    private @Nullable Output<Integer> stepConcurrencyLevel;

    public Optional<Output<Integer>> stepConcurrencyLevel() {
        return Optional.ofNullable(this.stepConcurrencyLevel);
    }

    @Import(name="steps")
    private @Nullable Output<List<ClusterStepArgs>> steps;

    public Optional<Output<List<ClusterStepArgs>>> steps() {
        return Optional.ofNullable(this.steps);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    @Import(name="visibleToAllUsers")
    private @Nullable Output<Boolean> visibleToAllUsers;

    public Optional<Output<Boolean>> visibleToAllUsers() {
        return Optional.ofNullable(this.visibleToAllUsers);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.additionalInfo = $.additionalInfo;
        this.applications = $.applications;
        this.autoTerminationPolicy = $.autoTerminationPolicy;
        this.autoscalingRole = $.autoscalingRole;
        this.bootstrapActions = $.bootstrapActions;
        this.configurations = $.configurations;
        this.configurationsJson = $.configurationsJson;
        this.coreInstanceFleet = $.coreInstanceFleet;
        this.coreInstanceGroup = $.coreInstanceGroup;
        this.customAmiId = $.customAmiId;
        this.ebsRootVolumeSize = $.ebsRootVolumeSize;
        this.ec2Attributes = $.ec2Attributes;
        this.keepJobFlowAliveWhenNoSteps = $.keepJobFlowAliveWhenNoSteps;
        this.kerberosAttributes = $.kerberosAttributes;
        this.listStepsStates = $.listStepsStates;
        this.logEncryptionKmsKeyId = $.logEncryptionKmsKeyId;
        this.logUri = $.logUri;
        this.masterInstanceFleet = $.masterInstanceFleet;
        this.masterInstanceGroup = $.masterInstanceGroup;
        this.name = $.name;
        this.releaseLabel = $.releaseLabel;
        this.scaleDownBehavior = $.scaleDownBehavior;
        this.securityConfiguration = $.securityConfiguration;
        this.serviceRole = $.serviceRole;
        this.stepConcurrencyLevel = $.stepConcurrencyLevel;
        this.steps = $.steps;
        this.tags = $.tags;
        this.terminationProtection = $.terminationProtection;
        this.visibleToAllUsers = $.visibleToAllUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalInfo(@Nullable Output<String> additionalInfo) {
            $.additionalInfo = additionalInfo;
            return this;
        }

        public Builder additionalInfo(String additionalInfo) {
            return additionalInfo(Output.of(additionalInfo));
        }

        public Builder applications(@Nullable Output<List<String>> applications) {
            $.applications = applications;
            return this;
        }

        public Builder applications(List<String> applications) {
            return applications(Output.of(applications));
        }

        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }

        public Builder autoTerminationPolicy(@Nullable Output<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy) {
            $.autoTerminationPolicy = autoTerminationPolicy;
            return this;
        }

        public Builder autoTerminationPolicy(ClusterAutoTerminationPolicyArgs autoTerminationPolicy) {
            return autoTerminationPolicy(Output.of(autoTerminationPolicy));
        }

        public Builder autoscalingRole(@Nullable Output<String> autoscalingRole) {
            $.autoscalingRole = autoscalingRole;
            return this;
        }

        public Builder autoscalingRole(String autoscalingRole) {
            return autoscalingRole(Output.of(autoscalingRole));
        }

        public Builder bootstrapActions(@Nullable Output<List<ClusterBootstrapActionArgs>> bootstrapActions) {
            $.bootstrapActions = bootstrapActions;
            return this;
        }

        public Builder bootstrapActions(List<ClusterBootstrapActionArgs> bootstrapActions) {
            return bootstrapActions(Output.of(bootstrapActions));
        }

        public Builder bootstrapActions(ClusterBootstrapActionArgs... bootstrapActions) {
            return bootstrapActions(List.of(bootstrapActions));
        }

        public Builder configurations(@Nullable Output<String> configurations) {
            $.configurations = configurations;
            return this;
        }

        public Builder configurations(String configurations) {
            return configurations(Output.of(configurations));
        }

        public Builder configurationsJson(@Nullable Output<String> configurationsJson) {
            $.configurationsJson = configurationsJson;
            return this;
        }

        public Builder configurationsJson(String configurationsJson) {
            return configurationsJson(Output.of(configurationsJson));
        }

        public Builder coreInstanceFleet(@Nullable Output<ClusterCoreInstanceFleetArgs> coreInstanceFleet) {
            $.coreInstanceFleet = coreInstanceFleet;
            return this;
        }

        public Builder coreInstanceFleet(ClusterCoreInstanceFleetArgs coreInstanceFleet) {
            return coreInstanceFleet(Output.of(coreInstanceFleet));
        }

        public Builder coreInstanceGroup(@Nullable Output<ClusterCoreInstanceGroupArgs> coreInstanceGroup) {
            $.coreInstanceGroup = coreInstanceGroup;
            return this;
        }

        public Builder coreInstanceGroup(ClusterCoreInstanceGroupArgs coreInstanceGroup) {
            return coreInstanceGroup(Output.of(coreInstanceGroup));
        }

        public Builder customAmiId(@Nullable Output<String> customAmiId) {
            $.customAmiId = customAmiId;
            return this;
        }

        public Builder customAmiId(String customAmiId) {
            return customAmiId(Output.of(customAmiId));
        }

        public Builder ebsRootVolumeSize(@Nullable Output<Integer> ebsRootVolumeSize) {
            $.ebsRootVolumeSize = ebsRootVolumeSize;
            return this;
        }

        public Builder ebsRootVolumeSize(Integer ebsRootVolumeSize) {
            return ebsRootVolumeSize(Output.of(ebsRootVolumeSize));
        }

        public Builder ec2Attributes(@Nullable Output<ClusterEc2AttributesArgs> ec2Attributes) {
            $.ec2Attributes = ec2Attributes;
            return this;
        }

        public Builder ec2Attributes(ClusterEc2AttributesArgs ec2Attributes) {
            return ec2Attributes(Output.of(ec2Attributes));
        }

        public Builder keepJobFlowAliveWhenNoSteps(@Nullable Output<Boolean> keepJobFlowAliveWhenNoSteps) {
            $.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps;
            return this;
        }

        public Builder keepJobFlowAliveWhenNoSteps(Boolean keepJobFlowAliveWhenNoSteps) {
            return keepJobFlowAliveWhenNoSteps(Output.of(keepJobFlowAliveWhenNoSteps));
        }

        public Builder kerberosAttributes(@Nullable Output<ClusterKerberosAttributesArgs> kerberosAttributes) {
            $.kerberosAttributes = kerberosAttributes;
            return this;
        }

        public Builder kerberosAttributes(ClusterKerberosAttributesArgs kerberosAttributes) {
            return kerberosAttributes(Output.of(kerberosAttributes));
        }

        public Builder listStepsStates(@Nullable Output<List<String>> listStepsStates) {
            $.listStepsStates = listStepsStates;
            return this;
        }

        public Builder listStepsStates(List<String> listStepsStates) {
            return listStepsStates(Output.of(listStepsStates));
        }

        public Builder listStepsStates(String... listStepsStates) {
            return listStepsStates(List.of(listStepsStates));
        }

        public Builder logEncryptionKmsKeyId(@Nullable Output<String> logEncryptionKmsKeyId) {
            $.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
            return this;
        }

        public Builder logEncryptionKmsKeyId(String logEncryptionKmsKeyId) {
            return logEncryptionKmsKeyId(Output.of(logEncryptionKmsKeyId));
        }

        public Builder logUri(@Nullable Output<String> logUri) {
            $.logUri = logUri;
            return this;
        }

        public Builder logUri(String logUri) {
            return logUri(Output.of(logUri));
        }

        public Builder masterInstanceFleet(@Nullable Output<ClusterMasterInstanceFleetArgs> masterInstanceFleet) {
            $.masterInstanceFleet = masterInstanceFleet;
            return this;
        }

        public Builder masterInstanceFleet(ClusterMasterInstanceFleetArgs masterInstanceFleet) {
            return masterInstanceFleet(Output.of(masterInstanceFleet));
        }

        public Builder masterInstanceGroup(@Nullable Output<ClusterMasterInstanceGroupArgs> masterInstanceGroup) {
            $.masterInstanceGroup = masterInstanceGroup;
            return this;
        }

        public Builder masterInstanceGroup(ClusterMasterInstanceGroupArgs masterInstanceGroup) {
            return masterInstanceGroup(Output.of(masterInstanceGroup));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder releaseLabel(Output<String> releaseLabel) {
            $.releaseLabel = releaseLabel;
            return this;
        }

        public Builder releaseLabel(String releaseLabel) {
            return releaseLabel(Output.of(releaseLabel));
        }

        public Builder scaleDownBehavior(@Nullable Output<String> scaleDownBehavior) {
            $.scaleDownBehavior = scaleDownBehavior;
            return this;
        }

        public Builder scaleDownBehavior(String scaleDownBehavior) {
            return scaleDownBehavior(Output.of(scaleDownBehavior));
        }

        public Builder securityConfiguration(@Nullable Output<String> securityConfiguration) {
            $.securityConfiguration = securityConfiguration;
            return this;
        }

        public Builder securityConfiguration(String securityConfiguration) {
            return securityConfiguration(Output.of(securityConfiguration));
        }

        public Builder serviceRole(Output<String> serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        public Builder serviceRole(String serviceRole) {
            return serviceRole(Output.of(serviceRole));
        }

        public Builder stepConcurrencyLevel(@Nullable Output<Integer> stepConcurrencyLevel) {
            $.stepConcurrencyLevel = stepConcurrencyLevel;
            return this;
        }

        public Builder stepConcurrencyLevel(Integer stepConcurrencyLevel) {
            return stepConcurrencyLevel(Output.of(stepConcurrencyLevel));
        }

        public Builder steps(@Nullable Output<List<ClusterStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(List<ClusterStepArgs> steps) {
            return steps(Output.of(steps));
        }

        public Builder steps(ClusterStepArgs... steps) {
            return steps(List.of(steps));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        public Builder visibleToAllUsers(@Nullable Output<Boolean> visibleToAllUsers) {
            $.visibleToAllUsers = visibleToAllUsers;
            return this;
        }

        public Builder visibleToAllUsers(Boolean visibleToAllUsers) {
            return visibleToAllUsers(Output.of(visibleToAllUsers));
        }

        public ClusterArgs build() {
            $.releaseLabel = Objects.requireNonNull($.releaseLabel, "expected parameter 'releaseLabel' to be non-null");
            $.serviceRole = Objects.requireNonNull($.serviceRole, "expected parameter 'serviceRole' to be non-null");
            return $;
        }
    }

}
