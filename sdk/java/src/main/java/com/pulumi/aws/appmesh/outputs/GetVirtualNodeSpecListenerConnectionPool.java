// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerConnectionPoolGrpc;
import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerConnectionPoolHttp2;
import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerConnectionPoolHttp;
import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerConnectionPoolTcp;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualNodeSpecListenerConnectionPool {
    private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolGrpc> grpcs;
    private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp2> http2s;
    private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp> https;
    private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolTcp> tcps;

    private GetVirtualNodeSpecListenerConnectionPool() {}
    public List<GetVirtualNodeSpecListenerConnectionPoolGrpc> grpcs() {
        return this.grpcs == null ? List.of() : this.grpcs;
    }
    public List<GetVirtualNodeSpecListenerConnectionPoolHttp2> http2s() {
        return this.http2s == null ? List.of() : this.http2s;
    }
    public List<GetVirtualNodeSpecListenerConnectionPoolHttp> https() {
        return this.https == null ? List.of() : this.https;
    }
    public List<GetVirtualNodeSpecListenerConnectionPoolTcp> tcps() {
        return this.tcps == null ? List.of() : this.tcps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNodeSpecListenerConnectionPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolGrpc> grpcs;
        private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp2> http2s;
        private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp> https;
        private @Nullable List<GetVirtualNodeSpecListenerConnectionPoolTcp> tcps;
        public Builder() {}
        public Builder(GetVirtualNodeSpecListenerConnectionPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grpcs = defaults.grpcs;
    	      this.http2s = defaults.http2s;
    	      this.https = defaults.https;
    	      this.tcps = defaults.tcps;
        }

        @CustomType.Setter
        public Builder grpcs(@Nullable List<GetVirtualNodeSpecListenerConnectionPoolGrpc> grpcs) {
            this.grpcs = grpcs;
            return this;
        }
        public Builder grpcs(GetVirtualNodeSpecListenerConnectionPoolGrpc... grpcs) {
            return grpcs(List.of(grpcs));
        }
        @CustomType.Setter
        public Builder http2s(@Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp2> http2s) {
            this.http2s = http2s;
            return this;
        }
        public Builder http2s(GetVirtualNodeSpecListenerConnectionPoolHttp2... http2s) {
            return http2s(List.of(http2s));
        }
        @CustomType.Setter
        public Builder https(@Nullable List<GetVirtualNodeSpecListenerConnectionPoolHttp> https) {
            this.https = https;
            return this;
        }
        public Builder https(GetVirtualNodeSpecListenerConnectionPoolHttp... https) {
            return https(List.of(https));
        }
        @CustomType.Setter
        public Builder tcps(@Nullable List<GetVirtualNodeSpecListenerConnectionPoolTcp> tcps) {
            this.tcps = tcps;
            return this;
        }
        public Builder tcps(GetVirtualNodeSpecListenerConnectionPoolTcp... tcps) {
            return tcps(List.of(tcps));
        }
        public GetVirtualNodeSpecListenerConnectionPool build() {
            final var o = new GetVirtualNodeSpecListenerConnectionPool();
            o.grpcs = grpcs;
            o.http2s = http2s;
            o.https = https;
            o.tcps = tcps;
            return o;
        }
    }
}
