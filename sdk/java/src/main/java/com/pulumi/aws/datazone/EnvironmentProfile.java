// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.datazone.EnvironmentProfileArgs;
import com.pulumi.aws.datazone.inputs.EnvironmentProfileState;
import com.pulumi.aws.datazone.outputs.EnvironmentProfileUserParameter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS DataZone Environment Profile.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.iam.Role;
 * import com.pulumi.aws.iam.RoleArgs;
 * import com.pulumi.aws.iam.inputs.RoleInlinePolicyArgs;
 * import com.pulumi.aws.datazone.Domain;
 * import com.pulumi.aws.datazone.DomainArgs;
 * import com.pulumi.aws.ec2.SecurityGroup;
 * import com.pulumi.aws.ec2.SecurityGroupArgs;
 * import com.pulumi.aws.datazone.Project;
 * import com.pulumi.aws.datazone.ProjectArgs;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
 * import com.pulumi.aws.inputs.GetRegionArgs;
 * import com.pulumi.aws.datazone.DatazoneFunctions;
 * import com.pulumi.aws.datazone.inputs.GetEnvironmentBlueprintArgs;
 * import com.pulumi.aws.datazone.EnvironmentBlueprintConfiguration;
 * import com.pulumi.aws.datazone.EnvironmentBlueprintConfigurationArgs;
 * import com.pulumi.aws.datazone.EnvironmentProfile;
 * import com.pulumi.aws.datazone.EnvironmentProfileArgs;
 * import com.pulumi.aws.datazone.inputs.EnvironmentProfileUserParameterArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var domainExecutionRole = new Role("domainExecutionRole", RoleArgs.builder()
 *             .name("example-name")
 *             .assumeRolePolicy(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("Version", "2012-10-17"),
 *                     jsonProperty("Statement", jsonArray(
 *                         jsonObject(
 *                             jsonProperty("Action", jsonArray(
 *                                 "sts:AssumeRole", 
 *                                 "sts:TagSession"
 *                             )),
 *                             jsonProperty("Effect", "Allow"),
 *                             jsonProperty("Principal", jsonObject(
 *                                 jsonProperty("Service", "datazone.amazonaws.com")
 *                             ))
 *                         ), 
 *                         jsonObject(
 *                             jsonProperty("Action", jsonArray(
 *                                 "sts:AssumeRole", 
 *                                 "sts:TagSession"
 *                             )),
 *                             jsonProperty("Effect", "Allow"),
 *                             jsonProperty("Principal", jsonObject(
 *                                 jsonProperty("Service", "cloudformation.amazonaws.com")
 *                             ))
 *                         )
 *                     ))
 *                 )))
 *             .inlinePolicies(RoleInlinePolicyArgs.builder()
 *                 .name("example-name")
 *                 .policy(serializeJson(
 *                     jsonObject(
 *                         jsonProperty("Version", "2012-10-17"),
 *                         jsonProperty("Statement", jsonArray(jsonObject(
 *                             jsonProperty("Action", jsonArray(
 *                                 "datazone:*", 
 *                                 "ram:*", 
 *                                 "sso:*", 
 *                                 "kms:*"
 *                             )),
 *                             jsonProperty("Effect", "Allow"),
 *                             jsonProperty("Resource", "*")
 *                         )))
 *                     )))
 *                 .build())
 *             .build());
 * 
 *         var testDomain = new Domain("testDomain", DomainArgs.builder()
 *             .name("example-name")
 *             .domainExecutionRole(domainExecutionRole.arn())
 *             .build());
 * 
 *         var testSecurityGroup = new SecurityGroup("testSecurityGroup", SecurityGroupArgs.builder()
 *             .name("example-name")
 *             .build());
 * 
 *         var testProject = new Project("testProject", ProjectArgs.builder()
 *             .domainIdentifier(testDomain.id())
 *             .glossaryTerms("2N8w6XJCwZf")
 *             .name("example-name")
 *             .description("desc")
 *             .skipDeletionCheck(true)
 *             .build());
 * 
 *         final var test = AwsFunctions.getCallerIdentity(GetCallerIdentityArgs.builder()
 *             .build());
 * 
 *         final var testGetRegion = AwsFunctions.getRegion(GetRegionArgs.builder()
 *             .build());
 * 
 *         final var testGetEnvironmentBlueprint = DatazoneFunctions.getEnvironmentBlueprint(GetEnvironmentBlueprintArgs.builder()
 *             .domainId(testDomain.id())
 *             .name("DefaultDataLake")
 *             .managed(true)
 *             .build());
 * 
 *         var testEnvironmentBlueprintConfiguration = new EnvironmentBlueprintConfiguration("testEnvironmentBlueprintConfiguration", EnvironmentBlueprintConfigurationArgs.builder()
 *             .domainId(testDomain.id())
 *             .environmentBlueprintId(testGetEnvironmentBlueprint.applyValue(_testGetEnvironmentBlueprint -> _testGetEnvironmentBlueprint.id()))
 *             .provisioningRoleArn(domainExecutionRole.arn())
 *             .enabledRegions(testGetRegion.name())
 *             .build());
 * 
 *         var testEnvironmentProfile = new EnvironmentProfile("testEnvironmentProfile", EnvironmentProfileArgs.builder()
 *             .awsAccountId(test.accountId())
 *             .awsAccountRegion(testGetRegion.name())
 *             .description("description")
 *             .environmentBlueprintIdentifier(testGetEnvironmentBlueprint.applyValue(_testGetEnvironmentBlueprint -> _testGetEnvironmentBlueprint.id()))
 *             .name("example-name")
 *             .projectIdentifier(testProject.id())
 *             .domainIdentifier(testDomain.id())
 *             .userParameters(EnvironmentProfileUserParameterArgs.builder()
 *                 .name("consumerGlueDbName")
 *                 .value("value")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import DataZone Environment Profile using a comma-delimited string combining `id` and `domain_identifier`. For example:
 * 
 * ```sh
 * $ pulumi import aws:datazone/environmentProfile:EnvironmentProfile example environment_profile-id-12345678,domain-id-12345678
 * ```
 * 
 */
@ResourceType(type="aws:datazone/environmentProfile:EnvironmentProfile")
public class EnvironmentProfile extends com.pulumi.resources.CustomResource {
    /**
     * Id of the AWS account being used.
     * 
     */
    @Export(name="awsAccountId", refs={String.class}, tree="[0]")
    private Output<String> awsAccountId;

    /**
     * @return Id of the AWS account being used.
     * 
     */
    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }
    /**
     * Desired region for environment profile.
     * 
     */
    @Export(name="awsAccountRegion", refs={String.class}, tree="[0]")
    private Output<String> awsAccountRegion;

    /**
     * @return Desired region for environment profile.
     * 
     */
    public Output<String> awsAccountRegion() {
        return this.awsAccountRegion;
    }
    /**
     * Creation time of environment profile.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Creation time of environment profile.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Creator of environment profile.
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return Creator of environment profile.
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * Description of environment profile.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description of environment profile.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Domain Identifier for environment profile.
     * 
     */
    @Export(name="domainIdentifier", refs={String.class}, tree="[0]")
    private Output<String> domainIdentifier;

    /**
     * @return Domain Identifier for environment profile.
     * 
     */
    public Output<String> domainIdentifier() {
        return this.domainIdentifier;
    }
    /**
     * ID of the blueprint which the environment will be created with.
     * 
     */
    @Export(name="environmentBlueprintIdentifier", refs={String.class}, tree="[0]")
    private Output<String> environmentBlueprintIdentifier;

    /**
     * @return ID of the blueprint which the environment will be created with.
     * 
     */
    public Output<String> environmentBlueprintIdentifier() {
        return this.environmentBlueprintIdentifier;
    }
    /**
     * Name of the environment profile.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the environment profile.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Project identifier for environment profile.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="projectIdentifier", refs={String.class}, tree="[0]")
    private Output<String> projectIdentifier;

    /**
     * @return Project identifier for environment profile.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> projectIdentifier() {
        return this.projectIdentifier;
    }
    /**
     * Time of last update to environment profile.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return Time of last update to environment profile.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * Array of user parameters of the environment profile with the following attributes:
     * 
     */
    @Export(name="userParameters", refs={List.class,EnvironmentProfileUserParameter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EnvironmentProfileUserParameter>> userParameters;

    /**
     * @return Array of user parameters of the environment profile with the following attributes:
     * 
     */
    public Output<Optional<List<EnvironmentProfileUserParameter>>> userParameters() {
        return Codegen.optional(this.userParameters);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EnvironmentProfile(java.lang.String name) {
        this(name, EnvironmentProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EnvironmentProfile(java.lang.String name, EnvironmentProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EnvironmentProfile(java.lang.String name, EnvironmentProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:datazone/environmentProfile:EnvironmentProfile", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EnvironmentProfile(java.lang.String name, Output<java.lang.String> id, @Nullable EnvironmentProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:datazone/environmentProfile:EnvironmentProfile", name, state, makeResourceOptions(options, id), false);
    }

    private static EnvironmentProfileArgs makeArgs(EnvironmentProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EnvironmentProfileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EnvironmentProfile get(java.lang.String name, Output<java.lang.String> id, @Nullable EnvironmentProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EnvironmentProfile(name, id, state, options);
    }
}
