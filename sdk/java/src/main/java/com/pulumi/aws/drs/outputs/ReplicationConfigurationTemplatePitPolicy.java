// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.drs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReplicationConfigurationTemplatePitPolicy {
    /**
     * @return Whether this rule is enabled or not.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return How often, in the chosen units, a snapshot should be taken.
     * 
     */
    private Integer interval;
    /**
     * @return Duration to retain a snapshot for, in the chosen `units`.
     * 
     */
    private Integer retentionDuration;
    /**
     * @return ID of the rule. Valid values are integers.
     * 
     */
    private @Nullable Integer ruleId;
    /**
     * @return Units used to measure the `interval` and `retention_duration`. Valid values are `MINUTE`, `HOUR`, and `DAY`.
     * 
     */
    private String units;

    private ReplicationConfigurationTemplatePitPolicy() {}
    /**
     * @return Whether this rule is enabled or not.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return How often, in the chosen units, a snapshot should be taken.
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return Duration to retain a snapshot for, in the chosen `units`.
     * 
     */
    public Integer retentionDuration() {
        return this.retentionDuration;
    }
    /**
     * @return ID of the rule. Valid values are integers.
     * 
     */
    public Optional<Integer> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }
    /**
     * @return Units used to measure the `interval` and `retention_duration`. Valid values are `MINUTE`, `HOUR`, and `DAY`.
     * 
     */
    public String units() {
        return this.units;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationConfigurationTemplatePitPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private Integer interval;
        private Integer retentionDuration;
        private @Nullable Integer ruleId;
        private String units;
        public Builder() {}
        public Builder(ReplicationConfigurationTemplatePitPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.interval = defaults.interval;
    	      this.retentionDuration = defaults.retentionDuration;
    	      this.ruleId = defaults.ruleId;
    	      this.units = defaults.units;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("ReplicationConfigurationTemplatePitPolicy", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder retentionDuration(Integer retentionDuration) {
            if (retentionDuration == null) {
              throw new MissingRequiredPropertyException("ReplicationConfigurationTemplatePitPolicy", "retentionDuration");
            }
            this.retentionDuration = retentionDuration;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(@Nullable Integer ruleId) {

            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder units(String units) {
            if (units == null) {
              throw new MissingRequiredPropertyException("ReplicationConfigurationTemplatePitPolicy", "units");
            }
            this.units = units;
            return this;
        }
        public ReplicationConfigurationTemplatePitPolicy build() {
            final var _resultValue = new ReplicationConfigurationTemplatePitPolicy();
            _resultValue.enabled = enabled;
            _resultValue.interval = interval;
            _resultValue.retentionDuration = retentionDuration;
            _resultValue.ruleId = ruleId;
            _resultValue.units = units;
            return _resultValue;
        }
    }
}
