// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs Empty = new VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs();

    @Import(name="binCountLimit")
    private @Nullable Output<Integer> binCountLimit;

    public Optional<Output<Integer>> binCountLimit() {
        return Optional.ofNullable(this.binCountLimit);
    }

    @Import(name="value")
    private @Nullable Output<Double> value;

    public Optional<Output<Double>> value() {
        return Optional.ofNullable(this.value);
    }

    private VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs() {}

    private VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs(VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs $) {
        this.binCountLimit = $.binCountLimit;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs $;

        public Builder() {
            $ = new VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs();
        }

        public Builder(VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs defaults) {
            $ = new VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs(Objects.requireNonNull(defaults));
        }

        public Builder binCountLimit(@Nullable Output<Integer> binCountLimit) {
            $.binCountLimit = binCountLimit;
            return this;
        }

        public Builder binCountLimit(Integer binCountLimit) {
            return binCountLimit(Output.of(binCountLimit));
        }

        public Builder value(@Nullable Output<Double> value) {
            $.value = value;
            return this;
        }

        public Builder value(Double value) {
            return value(Output.of(value));
        }

        public VisualsHistogramVisualChartConfigurationBinOptionsBinWidthArgs build() {
            return $;
        }
    }

}
