// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs Empty = new VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs();

    /**
     * The identifier of the VPC endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
     * 
     */
    @Import(name="endpointId", required=true)
    private Output<String> endpointId;

    /**
     * @return The identifier of the VPC endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
     * 
     */
    public Output<String> endpointId() {
        return this.endpointId;
    }

    @Import(name="status", required=true)
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }

    @Import(name="statusMessage", required=true)
    private Output<String> statusMessage;

    public Output<String> statusMessage() {
        return this.statusMessage;
    }

    /**
     * The unique identifier of the subnet that you&#39;ve specified to be used for a VPC Endpoint Association endpoint.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The unique identifier of the subnet that you&#39;ve specified to be used for a VPC Endpoint Association endpoint.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs() {}

    private VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs(VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs $) {
        this.endpointId = $.endpointId;
        this.status = $.status;
        this.statusMessage = $.statusMessage;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs $;

        public Builder() {
            $ = new VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs();
        }

        public Builder(VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs defaults) {
            $ = new VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointId The identifier of the VPC endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointId(Output<String> endpointId) {
            $.endpointId = endpointId;
            return this;
        }

        /**
         * @param endpointId The identifier of the VPC endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointId(String endpointId) {
            return endpointId(Output.of(endpointId));
        }

        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder statusMessage(Output<String> statusMessage) {
            $.statusMessage = statusMessage;
            return this;
        }

        public Builder statusMessage(String statusMessage) {
            return statusMessage(Output.of(statusMessage));
        }

        /**
         * @param subnetId The unique identifier of the subnet that you&#39;ve specified to be used for a VPC Endpoint Association endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The unique identifier of the subnet that you&#39;ve specified to be used for a VPC Endpoint Association endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs build() {
            if ($.endpointId == null) {
                throw new MissingRequiredPropertyException("VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs", "endpointId");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs", "status");
            }
            if ($.statusMessage == null) {
                throw new MissingRequiredPropertyException("VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs", "statusMessage");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("VpcEndpointAssociationVpcEndpointAssociationStatusAssociationSyncStateAttachmentArgs", "subnetId");
            }
            return $;
        }
    }

}
