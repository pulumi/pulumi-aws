// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteMatchHeaderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteSpecHttpRouteMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteSpecHttpRouteMatchArgs Empty = new RouteSpecHttpRouteMatchArgs();

    @Import(name="headers")
    private @Nullable Output<List<RouteSpecHttpRouteMatchHeaderArgs>> headers;

    public Optional<Output<List<RouteSpecHttpRouteMatchHeaderArgs>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    @Import(name="method")
    private @Nullable Output<String> method;

    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    @Import(name="prefix", required=true)
    private Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix;
    }

    @Import(name="scheme")
    private @Nullable Output<String> scheme;

    public Optional<Output<String>> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    private RouteSpecHttpRouteMatchArgs() {}

    private RouteSpecHttpRouteMatchArgs(RouteSpecHttpRouteMatchArgs $) {
        this.headers = $.headers;
        this.method = $.method;
        this.prefix = $.prefix;
        this.scheme = $.scheme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteSpecHttpRouteMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecHttpRouteMatchArgs $;

        public Builder() {
            $ = new RouteSpecHttpRouteMatchArgs();
        }

        public Builder(RouteSpecHttpRouteMatchArgs defaults) {
            $ = new RouteSpecHttpRouteMatchArgs(Objects.requireNonNull(defaults));
        }

        public Builder headers(@Nullable Output<List<RouteSpecHttpRouteMatchHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(List<RouteSpecHttpRouteMatchHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        public Builder headers(RouteSpecHttpRouteMatchHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        public Builder method(String method) {
            return method(Output.of(method));
        }

        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder scheme(@Nullable Output<String> scheme) {
            $.scheme = scheme;
            return this;
        }

        public Builder scheme(String scheme) {
            return scheme(Output.of(scheme));
        }

        public RouteSpecHttpRouteMatchArgs build() {
            $.prefix = Objects.requireNonNull($.prefix, "expected parameter 'prefix' to be non-null");
            return $;
        }
    }

}
