// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ChartAxisLabelOptions;
import com.pulumi.aws.quicksight.outputs.TooltipOptions;
import com.pulumi.aws.quicksight.outputs.VisualPalette;
import com.pulumi.aws.quicksight.outputs.VisualsFunnelChartVisualChartConfigurationDataLabelOptions;
import com.pulumi.aws.quicksight.outputs.VisualsFunnelChartVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsFunnelChartVisualChartConfigurationSortConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsFunnelChartVisualChartConfiguration {
    private @Nullable ChartAxisLabelOptions categoryLabelOptions;
    private @Nullable VisualsFunnelChartVisualChartConfigurationDataLabelOptions dataLabelOptions;
    private @Nullable VisualsFunnelChartVisualChartConfigurationFieldWells fieldWells;
    private @Nullable VisualsFunnelChartVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable TooltipOptions tooltip;
    private @Nullable ChartAxisLabelOptions valueLabelOptions;
    private @Nullable VisualPalette visualPalette;

    private VisualsFunnelChartVisualChartConfiguration() {}
    public Optional<ChartAxisLabelOptions> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }
    public Optional<VisualsFunnelChartVisualChartConfigurationDataLabelOptions> dataLabelOptions() {
        return Optional.ofNullable(this.dataLabelOptions);
    }
    public Optional<VisualsFunnelChartVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<VisualsFunnelChartVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<TooltipOptions> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }
    public Optional<ChartAxisLabelOptions> valueLabelOptions() {
        return Optional.ofNullable(this.valueLabelOptions);
    }
    public Optional<VisualPalette> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsFunnelChartVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ChartAxisLabelOptions categoryLabelOptions;
        private @Nullable VisualsFunnelChartVisualChartConfigurationDataLabelOptions dataLabelOptions;
        private @Nullable VisualsFunnelChartVisualChartConfigurationFieldWells fieldWells;
        private @Nullable VisualsFunnelChartVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable TooltipOptions tooltip;
        private @Nullable ChartAxisLabelOptions valueLabelOptions;
        private @Nullable VisualPalette visualPalette;
        public Builder() {}
        public Builder(VisualsFunnelChartVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryLabelOptions = defaults.categoryLabelOptions;
    	      this.dataLabelOptions = defaults.dataLabelOptions;
    	      this.fieldWells = defaults.fieldWells;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.tooltip = defaults.tooltip;
    	      this.valueLabelOptions = defaults.valueLabelOptions;
    	      this.visualPalette = defaults.visualPalette;
        }

        @CustomType.Setter
        public Builder categoryLabelOptions(@Nullable ChartAxisLabelOptions categoryLabelOptions) {

            this.categoryLabelOptions = categoryLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder dataLabelOptions(@Nullable VisualsFunnelChartVisualChartConfigurationDataLabelOptions dataLabelOptions) {

            this.dataLabelOptions = dataLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsFunnelChartVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsFunnelChartVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tooltip(@Nullable TooltipOptions tooltip) {

            this.tooltip = tooltip;
            return this;
        }
        @CustomType.Setter
        public Builder valueLabelOptions(@Nullable ChartAxisLabelOptions valueLabelOptions) {

            this.valueLabelOptions = valueLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder visualPalette(@Nullable VisualPalette visualPalette) {

            this.visualPalette = visualPalette;
            return this;
        }
        public VisualsFunnelChartVisualChartConfiguration build() {
            final var _resultValue = new VisualsFunnelChartVisualChartConfiguration();
            _resultValue.categoryLabelOptions = categoryLabelOptions;
            _resultValue.dataLabelOptions = dataLabelOptions;
            _resultValue.fieldWells = fieldWells;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.tooltip = tooltip;
            _resultValue.valueLabelOptions = valueLabelOptions;
            _resultValue.visualPalette = visualPalette;
            return _resultValue;
        }
    }
}
