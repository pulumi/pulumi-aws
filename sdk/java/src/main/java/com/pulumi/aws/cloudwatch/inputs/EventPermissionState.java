// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventPermissionConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventPermissionState extends com.pulumi.resources.ResourceArgs {

    public static final EventPermissionState Empty = new EventPermissionState();

    @Import(name="action")
    private @Nullable Output<String> action;

    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="condition")
    private @Nullable Output<EventPermissionConditionArgs> condition;

    public Optional<Output<EventPermissionConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="eventBusName")
    private @Nullable Output<String> eventBusName;

    public Optional<Output<String>> eventBusName() {
        return Optional.ofNullable(this.eventBusName);
    }

    @Import(name="principal")
    private @Nullable Output<String> principal;

    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    @Import(name="statementId")
    private @Nullable Output<String> statementId;

    public Optional<Output<String>> statementId() {
        return Optional.ofNullable(this.statementId);
    }

    private EventPermissionState() {}

    private EventPermissionState(EventPermissionState $) {
        this.action = $.action;
        this.condition = $.condition;
        this.eventBusName = $.eventBusName;
        this.principal = $.principal;
        this.statementId = $.statementId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventPermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventPermissionState $;

        public Builder() {
            $ = new EventPermissionState();
        }

        public Builder(EventPermissionState defaults) {
            $ = new EventPermissionState(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder condition(@Nullable Output<EventPermissionConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(EventPermissionConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder eventBusName(@Nullable Output<String> eventBusName) {
            $.eventBusName = eventBusName;
            return this;
        }

        public Builder eventBusName(String eventBusName) {
            return eventBusName(Output.of(eventBusName));
        }

        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        public Builder statementId(@Nullable Output<String> statementId) {
            $.statementId = statementId;
            return this;
        }

        public Builder statementId(String statementId) {
            return statementId(Output.of(statementId));
        }

        public EventPermissionState build() {
            return $;
        }
    }

}
