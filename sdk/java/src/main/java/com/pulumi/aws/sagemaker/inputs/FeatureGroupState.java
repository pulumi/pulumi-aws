// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.FeatureGroupFeatureDefinitionArgs;
import com.pulumi.aws.sagemaker.inputs.FeatureGroupOfflineStoreConfigArgs;
import com.pulumi.aws.sagemaker.inputs.FeatureGroupOnlineStoreConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureGroupState extends com.pulumi.resources.ResourceArgs {

    public static final FeatureGroupState Empty = new FeatureGroupState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * A free-form description of a Feature Group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form description of a Feature Group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    @Import(name="eventTimeFeatureName")
    private @Nullable Output<String> eventTimeFeatureName;

    /**
     * @return The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    public Optional<Output<String>> eventTimeFeatureName() {
        return Optional.ofNullable(this.eventTimeFeatureName);
    }

    /**
     * A list of Feature names and types. See Feature Definition Below.
     * 
     */
    @Import(name="featureDefinitions")
    private @Nullable Output<List<FeatureGroupFeatureDefinitionArgs>> featureDefinitions;

    /**
     * @return A list of Feature names and types. See Feature Definition Below.
     * 
     */
    public Optional<Output<List<FeatureGroupFeatureDefinitionArgs>>> featureDefinitions() {
        return Optional.ofNullable(this.featureDefinitions);
    }

    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    @Import(name="featureGroupName")
    private @Nullable Output<String> featureGroupName;

    /**
     * @return The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    public Optional<Output<String>> featureGroupName() {
        return Optional.ofNullable(this.featureGroupName);
    }

    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    @Import(name="offlineStoreConfig")
    private @Nullable Output<FeatureGroupOfflineStoreConfigArgs> offlineStoreConfig;

    /**
     * @return The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    public Optional<Output<FeatureGroupOfflineStoreConfigArgs>> offlineStoreConfig() {
        return Optional.ofNullable(this.offlineStoreConfig);
    }

    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    @Import(name="onlineStoreConfig")
    private @Nullable Output<FeatureGroupOnlineStoreConfigArgs> onlineStoreConfig;

    /**
     * @return The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    public Optional<Output<FeatureGroupOnlineStoreConfigArgs>> onlineStoreConfig() {
        return Optional.ofNullable(this.onlineStoreConfig);
    }

    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    @Import(name="recordIdentifierFeatureName")
    private @Nullable Output<String> recordIdentifierFeatureName;

    /**
     * @return The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    public Optional<Output<String>> recordIdentifierFeatureName() {
        return Optional.ofNullable(this.recordIdentifierFeatureName);
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private FeatureGroupState() {}

    private FeatureGroupState(FeatureGroupState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.eventTimeFeatureName = $.eventTimeFeatureName;
        this.featureDefinitions = $.featureDefinitions;
        this.featureGroupName = $.featureGroupName;
        this.offlineStoreConfig = $.offlineStoreConfig;
        this.onlineStoreConfig = $.onlineStoreConfig;
        this.recordIdentifierFeatureName = $.recordIdentifierFeatureName;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureGroupState $;

        public Builder() {
            $ = new FeatureGroupState();
        }

        public Builder(FeatureGroupState defaults) {
            $ = new FeatureGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param description A free-form description of a Feature Group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form description of a Feature Group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eventTimeFeatureName The name of the feature that stores the EventTime of a Record in a Feature Group.
         * 
         * @return builder
         * 
         */
        public Builder eventTimeFeatureName(@Nullable Output<String> eventTimeFeatureName) {
            $.eventTimeFeatureName = eventTimeFeatureName;
            return this;
        }

        /**
         * @param eventTimeFeatureName The name of the feature that stores the EventTime of a Record in a Feature Group.
         * 
         * @return builder
         * 
         */
        public Builder eventTimeFeatureName(String eventTimeFeatureName) {
            return eventTimeFeatureName(Output.of(eventTimeFeatureName));
        }

        /**
         * @param featureDefinitions A list of Feature names and types. See Feature Definition Below.
         * 
         * @return builder
         * 
         */
        public Builder featureDefinitions(@Nullable Output<List<FeatureGroupFeatureDefinitionArgs>> featureDefinitions) {
            $.featureDefinitions = featureDefinitions;
            return this;
        }

        /**
         * @param featureDefinitions A list of Feature names and types. See Feature Definition Below.
         * 
         * @return builder
         * 
         */
        public Builder featureDefinitions(List<FeatureGroupFeatureDefinitionArgs> featureDefinitions) {
            return featureDefinitions(Output.of(featureDefinitions));
        }

        /**
         * @param featureDefinitions A list of Feature names and types. See Feature Definition Below.
         * 
         * @return builder
         * 
         */
        public Builder featureDefinitions(FeatureGroupFeatureDefinitionArgs... featureDefinitions) {
            return featureDefinitions(List.of(featureDefinitions));
        }

        /**
         * @param featureGroupName The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
         * 
         * @return builder
         * 
         */
        public Builder featureGroupName(@Nullable Output<String> featureGroupName) {
            $.featureGroupName = featureGroupName;
            return this;
        }

        /**
         * @param featureGroupName The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
         * 
         * @return builder
         * 
         */
        public Builder featureGroupName(String featureGroupName) {
            return featureGroupName(Output.of(featureGroupName));
        }

        /**
         * @param offlineStoreConfig The Offline Feature Store Configuration. See Offline Store Config Below.
         * 
         * @return builder
         * 
         */
        public Builder offlineStoreConfig(@Nullable Output<FeatureGroupOfflineStoreConfigArgs> offlineStoreConfig) {
            $.offlineStoreConfig = offlineStoreConfig;
            return this;
        }

        /**
         * @param offlineStoreConfig The Offline Feature Store Configuration. See Offline Store Config Below.
         * 
         * @return builder
         * 
         */
        public Builder offlineStoreConfig(FeatureGroupOfflineStoreConfigArgs offlineStoreConfig) {
            return offlineStoreConfig(Output.of(offlineStoreConfig));
        }

        /**
         * @param onlineStoreConfig The Online Feature Store Configuration. See Online Store Config Below.
         * 
         * @return builder
         * 
         */
        public Builder onlineStoreConfig(@Nullable Output<FeatureGroupOnlineStoreConfigArgs> onlineStoreConfig) {
            $.onlineStoreConfig = onlineStoreConfig;
            return this;
        }

        /**
         * @param onlineStoreConfig The Online Feature Store Configuration. See Online Store Config Below.
         * 
         * @return builder
         * 
         */
        public Builder onlineStoreConfig(FeatureGroupOnlineStoreConfigArgs onlineStoreConfig) {
            return onlineStoreConfig(Output.of(onlineStoreConfig));
        }

        /**
         * @param recordIdentifierFeatureName The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
         * 
         * @return builder
         * 
         */
        public Builder recordIdentifierFeatureName(@Nullable Output<String> recordIdentifierFeatureName) {
            $.recordIdentifierFeatureName = recordIdentifierFeatureName;
            return this;
        }

        /**
         * @param recordIdentifierFeatureName The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
         * 
         * @return builder
         * 
         */
        public Builder recordIdentifierFeatureName(String recordIdentifierFeatureName) {
            return recordIdentifierFeatureName(Output.of(recordIdentifierFeatureName));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public FeatureGroupState build() {
            return $;
        }
    }

}
