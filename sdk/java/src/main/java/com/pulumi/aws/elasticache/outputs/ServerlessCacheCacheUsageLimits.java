// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.outputs;

import com.pulumi.aws.elasticache.outputs.ServerlessCacheCacheUsageLimitsDataStorage;
import com.pulumi.aws.elasticache.outputs.ServerlessCacheCacheUsageLimitsEcpuPerSecond;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerlessCacheCacheUsageLimits {
    /**
     * @return The maximum data storage limit in the cache, expressed in Gigabytes. See Data Storage config for more details.
     * 
     */
    private @Nullable ServerlessCacheCacheUsageLimitsDataStorage dataStorage;
    /**
     * @return The configuration for the number of ElastiCache Processing Units (ECPU) the cache can consume per second.See config block for more details.
     * 
     */
    private @Nullable List<ServerlessCacheCacheUsageLimitsEcpuPerSecond> ecpuPerSeconds;

    private ServerlessCacheCacheUsageLimits() {}
    /**
     * @return The maximum data storage limit in the cache, expressed in Gigabytes. See Data Storage config for more details.
     * 
     */
    public Optional<ServerlessCacheCacheUsageLimitsDataStorage> dataStorage() {
        return Optional.ofNullable(this.dataStorage);
    }
    /**
     * @return The configuration for the number of ElastiCache Processing Units (ECPU) the cache can consume per second.See config block for more details.
     * 
     */
    public List<ServerlessCacheCacheUsageLimitsEcpuPerSecond> ecpuPerSeconds() {
        return this.ecpuPerSeconds == null ? List.of() : this.ecpuPerSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerlessCacheCacheUsageLimits defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ServerlessCacheCacheUsageLimitsDataStorage dataStorage;
        private @Nullable List<ServerlessCacheCacheUsageLimitsEcpuPerSecond> ecpuPerSeconds;
        public Builder() {}
        public Builder(ServerlessCacheCacheUsageLimits defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataStorage = defaults.dataStorage;
    	      this.ecpuPerSeconds = defaults.ecpuPerSeconds;
        }

        @CustomType.Setter
        public Builder dataStorage(@Nullable ServerlessCacheCacheUsageLimitsDataStorage dataStorage) {

            this.dataStorage = dataStorage;
            return this;
        }
        @CustomType.Setter
        public Builder ecpuPerSeconds(@Nullable List<ServerlessCacheCacheUsageLimitsEcpuPerSecond> ecpuPerSeconds) {

            this.ecpuPerSeconds = ecpuPerSeconds;
            return this;
        }
        public Builder ecpuPerSeconds(ServerlessCacheCacheUsageLimitsEcpuPerSecond... ecpuPerSeconds) {
            return ecpuPerSeconds(List.of(ecpuPerSeconds));
        }
        public ServerlessCacheCacheUsageLimits build() {
            final var _resultValue = new ServerlessCacheCacheUsageLimits();
            _resultValue.dataStorage = dataStorage;
            _resultValue.ecpuPerSeconds = ecpuPerSeconds;
            return _resultValue;
        }
    }
}
