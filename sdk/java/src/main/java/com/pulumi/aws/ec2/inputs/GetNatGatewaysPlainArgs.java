// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetNatGatewaysFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNatGatewaysPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNatGatewaysPlainArgs Empty = new GetNatGatewaysPlainArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetNatGatewaysFilter> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Optional<List<GetNatGatewaysFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired NAT Gateways.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of tags, each pair of which must exactly match
     * a pair on the desired NAT Gateways.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * VPC ID that you want to filter from.
     * 
     */
    @Import(name="vpcId")
    private @Nullable String vpcId;

    /**
     * @return VPC ID that you want to filter from.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetNatGatewaysPlainArgs() {}

    private GetNatGatewaysPlainArgs(GetNatGatewaysPlainArgs $) {
        this.filters = $.filters;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNatGatewaysPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNatGatewaysPlainArgs $;

        public Builder() {
            $ = new GetNatGatewaysPlainArgs();
        }

        public Builder(GetNatGatewaysPlainArgs defaults) {
            $ = new GetNatGatewaysPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetNatGatewaysFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetNatGatewaysFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param tags Map of tags, each pair of which must exactly match
         * a pair on the desired NAT Gateways.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param vpcId VPC ID that you want to filter from.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetNatGatewaysPlainArgs build() {
            return $;
        }
    }

}
