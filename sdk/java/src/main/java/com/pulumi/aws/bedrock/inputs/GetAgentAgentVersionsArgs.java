// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.GetAgentAgentVersionsAgentVersionSummaryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAgentAgentVersionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAgentAgentVersionsArgs Empty = new GetAgentAgentVersionsArgs();

    /**
     * Unique identifier of the agent.
     * 
     */
    @Import(name="agentId", required=true)
    private Output<String> agentId;

    /**
     * @return Unique identifier of the agent.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }

    /**
     * List of objects, each of which contains information about a version of the agent. See Agent Version Summaries
     * 
     */
    @Import(name="agentVersionSummaries")
    private @Nullable Output<List<GetAgentAgentVersionsAgentVersionSummaryArgs>> agentVersionSummaries;

    /**
     * @return List of objects, each of which contains information about a version of the agent. See Agent Version Summaries
     * 
     */
    public Optional<Output<List<GetAgentAgentVersionsAgentVersionSummaryArgs>>> agentVersionSummaries() {
        return Optional.ofNullable(this.agentVersionSummaries);
    }

    private GetAgentAgentVersionsArgs() {}

    private GetAgentAgentVersionsArgs(GetAgentAgentVersionsArgs $) {
        this.agentId = $.agentId;
        this.agentVersionSummaries = $.agentVersionSummaries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAgentAgentVersionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAgentAgentVersionsArgs $;

        public Builder() {
            $ = new GetAgentAgentVersionsArgs();
        }

        public Builder(GetAgentAgentVersionsArgs defaults) {
            $ = new GetAgentAgentVersionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId Unique identifier of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId Unique identifier of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param agentVersionSummaries List of objects, each of which contains information about a version of the agent. See Agent Version Summaries
         * 
         * @return builder
         * 
         */
        public Builder agentVersionSummaries(@Nullable Output<List<GetAgentAgentVersionsAgentVersionSummaryArgs>> agentVersionSummaries) {
            $.agentVersionSummaries = agentVersionSummaries;
            return this;
        }

        /**
         * @param agentVersionSummaries List of objects, each of which contains information about a version of the agent. See Agent Version Summaries
         * 
         * @return builder
         * 
         */
        public Builder agentVersionSummaries(List<GetAgentAgentVersionsAgentVersionSummaryArgs> agentVersionSummaries) {
            return agentVersionSummaries(Output.of(agentVersionSummaries));
        }

        /**
         * @param agentVersionSummaries List of objects, each of which contains information about a version of the agent. See Agent Version Summaries
         * 
         * @return builder
         * 
         */
        public Builder agentVersionSummaries(GetAgentAgentVersionsAgentVersionSummaryArgs... agentVersionSummaries) {
            return agentVersionSummaries(List.of(agentVersionSummaries));
        }

        public GetAgentAgentVersionsArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("GetAgentAgentVersionsArgs", "agentId");
            }
            return $;
        }
    }

}
