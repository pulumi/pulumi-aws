// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetResourceResult {
    private String arn;
    /**
     * @return Flag to enable AWS LakeFormation hybrid access permission mode.
     * 
     */
    private Boolean hybridAccessEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    private String lastModified;
    private String region;
    /**
     * @return Role that the resource was registered with.
     * 
     */
    private String roleArn;
    /**
     * @return Whether the resource is a federated resource.
     * 
     */
    private Boolean withFederation;
    /**
     * @return Boolean to grant the calling principal the permissions to perform all supported Lake Formation operations on the registered data location.
     * 
     */
    private Boolean withPrivilegedAccess;

    private GetResourceResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return Flag to enable AWS LakeFormation hybrid access permission mode.
     * 
     */
    public Boolean hybridAccessEnabled() {
        return this.hybridAccessEnabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return Role that the resource was registered with.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return Whether the resource is a federated resource.
     * 
     */
    public Boolean withFederation() {
        return this.withFederation;
    }
    /**
     * @return Boolean to grant the calling principal the permissions to perform all supported Lake Formation operations on the registered data location.
     * 
     */
    public Boolean withPrivilegedAccess() {
        return this.withPrivilegedAccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private Boolean hybridAccessEnabled;
        private String id;
        private String lastModified;
        private String region;
        private String roleArn;
        private Boolean withFederation;
        private Boolean withPrivilegedAccess;
        public Builder() {}
        public Builder(GetResourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.hybridAccessEnabled = defaults.hybridAccessEnabled;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.withFederation = defaults.withFederation;
    	      this.withPrivilegedAccess = defaults.withPrivilegedAccess;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder hybridAccessEnabled(Boolean hybridAccessEnabled) {
            if (hybridAccessEnabled == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "hybridAccessEnabled");
            }
            this.hybridAccessEnabled = hybridAccessEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder withFederation(Boolean withFederation) {
            if (withFederation == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "withFederation");
            }
            this.withFederation = withFederation;
            return this;
        }
        @CustomType.Setter
        public Builder withPrivilegedAccess(Boolean withPrivilegedAccess) {
            if (withPrivilegedAccess == null) {
              throw new MissingRequiredPropertyException("GetResourceResult", "withPrivilegedAccess");
            }
            this.withPrivilegedAccess = withPrivilegedAccess;
            return this;
        }
        public GetResourceResult build() {
            final var _resultValue = new GetResourceResult();
            _resultValue.arn = arn;
            _resultValue.hybridAccessEnabled = hybridAccessEnabled;
            _resultValue.id = id;
            _resultValue.lastModified = lastModified;
            _resultValue.region = region;
            _resultValue.roleArn = roleArn;
            _resultValue.withFederation = withFederation;
            _resultValue.withPrivilegedAccess = withPrivilegedAccess;
            return _resultValue;
        }
    }
}
