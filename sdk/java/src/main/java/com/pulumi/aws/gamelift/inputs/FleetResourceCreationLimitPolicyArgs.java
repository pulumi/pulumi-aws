// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetResourceCreationLimitPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetResourceCreationLimitPolicyArgs Empty = new FleetResourceCreationLimitPolicyArgs();

    /**
     * Maximum number of game sessions that an individual can create during the policy period.
     * 
     */
    @Import(name="newGameSessionsPerCreator")
    private @Nullable Output<Integer> newGameSessionsPerCreator;

    /**
     * @return Maximum number of game sessions that an individual can create during the policy period.
     * 
     */
    public Optional<Output<Integer>> newGameSessionsPerCreator() {
        return Optional.ofNullable(this.newGameSessionsPerCreator);
    }

    /**
     * Time span used in evaluating the resource creation limit policy.
     * 
     */
    @Import(name="policyPeriodInMinutes")
    private @Nullable Output<Integer> policyPeriodInMinutes;

    /**
     * @return Time span used in evaluating the resource creation limit policy.
     * 
     */
    public Optional<Output<Integer>> policyPeriodInMinutes() {
        return Optional.ofNullable(this.policyPeriodInMinutes);
    }

    private FleetResourceCreationLimitPolicyArgs() {}

    private FleetResourceCreationLimitPolicyArgs(FleetResourceCreationLimitPolicyArgs $) {
        this.newGameSessionsPerCreator = $.newGameSessionsPerCreator;
        this.policyPeriodInMinutes = $.policyPeriodInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetResourceCreationLimitPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetResourceCreationLimitPolicyArgs $;

        public Builder() {
            $ = new FleetResourceCreationLimitPolicyArgs();
        }

        public Builder(FleetResourceCreationLimitPolicyArgs defaults) {
            $ = new FleetResourceCreationLimitPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param newGameSessionsPerCreator Maximum number of game sessions that an individual can create during the policy period.
         * 
         * @return builder
         * 
         */
        public Builder newGameSessionsPerCreator(@Nullable Output<Integer> newGameSessionsPerCreator) {
            $.newGameSessionsPerCreator = newGameSessionsPerCreator;
            return this;
        }

        /**
         * @param newGameSessionsPerCreator Maximum number of game sessions that an individual can create during the policy period.
         * 
         * @return builder
         * 
         */
        public Builder newGameSessionsPerCreator(Integer newGameSessionsPerCreator) {
            return newGameSessionsPerCreator(Output.of(newGameSessionsPerCreator));
        }

        /**
         * @param policyPeriodInMinutes Time span used in evaluating the resource creation limit policy.
         * 
         * @return builder
         * 
         */
        public Builder policyPeriodInMinutes(@Nullable Output<Integer> policyPeriodInMinutes) {
            $.policyPeriodInMinutes = policyPeriodInMinutes;
            return this;
        }

        /**
         * @param policyPeriodInMinutes Time span used in evaluating the resource creation limit policy.
         * 
         * @return builder
         * 
         */
        public Builder policyPeriodInMinutes(Integer policyPeriodInMinutes) {
            return policyPeriodInMinutes(Output.of(policyPeriodInMinutes));
        }

        public FleetResourceCreationLimitPolicyArgs build() {
            return $;
        }
    }

}
