// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.aws.connect.outputs.GetUserIdentityInfo;
import com.pulumi.aws.connect.outputs.GetUserPhoneConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserResult {
    /**
     * @return The Amazon Resource Name (ARN) of the User.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The identifier of the user account in the directory used for identity management.
     * 
     */
    private @Nullable String directoryUserId;
    /**
     * @return The identifier of the hierarchy group for the user.
     * 
     */
    private @Nullable String hierarchyGroupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return A block that contains information about the identity of the user. Documented below.
     * 
     */
    private @Nullable List<GetUserIdentityInfo> identityInfos;
    /**
     * @return Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private String instanceId;
    private @Nullable String name;
    /**
     * @return A block that contains information about the phone settings for the user. Documented below.
     * 
     */
    private @Nullable List<GetUserPhoneConfig> phoneConfigs;
    /**
     * @return The identifier of the routing profile for the user.
     * 
     */
    private @Nullable String routingProfileId;
    /**
     * @return A list of identifiers for the security profiles for the user.
     * 
     */
    private @Nullable List<String> securityProfileIds;
    /**
     * @return A map of tags to assign to the User.
     * 
     */
    private @Nullable Map<String,String> tags;
    private @Nullable String userId;

    private GetUserResult() {}
    /**
     * @return The Amazon Resource Name (ARN) of the User.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The identifier of the user account in the directory used for identity management.
     * 
     */
    public Optional<String> directoryUserId() {
        return Optional.ofNullable(this.directoryUserId);
    }
    /**
     * @return The identifier of the hierarchy group for the user.
     * 
     */
    public Optional<String> hierarchyGroupId() {
        return Optional.ofNullable(this.hierarchyGroupId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A block that contains information about the identity of the user. Documented below.
     * 
     */
    public List<GetUserIdentityInfo> identityInfos() {
        return this.identityInfos == null ? List.of() : this.identityInfos;
    }
    /**
     * @return Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return A block that contains information about the phone settings for the user. Documented below.
     * 
     */
    public List<GetUserPhoneConfig> phoneConfigs() {
        return this.phoneConfigs == null ? List.of() : this.phoneConfigs;
    }
    /**
     * @return The identifier of the routing profile for the user.
     * 
     */
    public Optional<String> routingProfileId() {
        return Optional.ofNullable(this.routingProfileId);
    }
    /**
     * @return A list of identifiers for the security profiles for the user.
     * 
     */
    public List<String> securityProfileIds() {
        return this.securityProfileIds == null ? List.of() : this.securityProfileIds;
    }
    /**
     * @return A map of tags to assign to the User.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String directoryUserId;
        private @Nullable String hierarchyGroupId;
        private @Nullable String id;
        private @Nullable List<GetUserIdentityInfo> identityInfos;
        private String instanceId;
        private @Nullable String name;
        private @Nullable List<GetUserPhoneConfig> phoneConfigs;
        private @Nullable String routingProfileId;
        private @Nullable List<String> securityProfileIds;
        private @Nullable Map<String,String> tags;
        private @Nullable String userId;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.directoryUserId = defaults.directoryUserId;
    	      this.hierarchyGroupId = defaults.hierarchyGroupId;
    	      this.id = defaults.id;
    	      this.identityInfos = defaults.identityInfos;
    	      this.instanceId = defaults.instanceId;
    	      this.name = defaults.name;
    	      this.phoneConfigs = defaults.phoneConfigs;
    	      this.routingProfileId = defaults.routingProfileId;
    	      this.securityProfileIds = defaults.securityProfileIds;
    	      this.tags = defaults.tags;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder directoryUserId(@Nullable String directoryUserId) {
            this.directoryUserId = directoryUserId;
            return this;
        }
        @CustomType.Setter
        public Builder hierarchyGroupId(@Nullable String hierarchyGroupId) {
            this.hierarchyGroupId = hierarchyGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityInfos(@Nullable List<GetUserIdentityInfo> identityInfos) {
            this.identityInfos = identityInfos;
            return this;
        }
        public Builder identityInfos(GetUserIdentityInfo... identityInfos) {
            return identityInfos(List.of(identityInfos));
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder phoneConfigs(@Nullable List<GetUserPhoneConfig> phoneConfigs) {
            this.phoneConfigs = phoneConfigs;
            return this;
        }
        public Builder phoneConfigs(GetUserPhoneConfig... phoneConfigs) {
            return phoneConfigs(List.of(phoneConfigs));
        }
        @CustomType.Setter
        public Builder routingProfileId(@Nullable String routingProfileId) {
            this.routingProfileId = routingProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder securityProfileIds(@Nullable List<String> securityProfileIds) {
            this.securityProfileIds = securityProfileIds;
            return this;
        }
        public Builder securityProfileIds(String... securityProfileIds) {
            return securityProfileIds(List.of(securityProfileIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {
            this.userId = userId;
            return this;
        }
        public GetUserResult build() {
            final var o = new GetUserResult();
            o.arn = arn;
            o.directoryUserId = directoryUserId;
            o.hierarchyGroupId = hierarchyGroupId;
            o.id = id;
            o.identityInfos = identityInfos;
            o.instanceId = instanceId;
            o.name = name;
            o.phoneConfigs = phoneConfigs;
            o.routingProfileId = routingProfileId;
            o.securityProfileIds = securityProfileIds;
            o.tags = tags;
            o.userId = userId;
            return o;
        }
    }
}
