// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs Empty = new BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs();

    /**
     * The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
     * 
     */
    @Import(name="kmsMasterKeyId")
    private @Nullable Output<String> kmsMasterKeyId;

    /**
     * @return The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
     * 
     */
    public Optional<Output<String>> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }

    /**
     * The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
     * 
     */
    @Import(name="sseAlgorithm", required=true)
    private Output<String> sseAlgorithm;

    /**
     * @return The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
     * 
     */
    public Output<String> sseAlgorithm() {
        return this.sseAlgorithm;
    }

    private BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs() {}

    private BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs $) {
        this.kmsMasterKeyId = $.kmsMasterKeyId;
        this.sseAlgorithm = $.sseAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs $;

        public Builder() {
            $ = new BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs();
        }

        public Builder(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs defaults) {
            $ = new BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsMasterKeyId The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
         * 
         * @return builder
         * 
         */
        public Builder kmsMasterKeyId(@Nullable Output<String> kmsMasterKeyId) {
            $.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }

        /**
         * @param kmsMasterKeyId The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
         * 
         * @return builder
         * 
         */
        public Builder kmsMasterKeyId(String kmsMasterKeyId) {
            return kmsMasterKeyId(Output.of(kmsMasterKeyId));
        }

        /**
         * @param sseAlgorithm The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(Output<String> sseAlgorithm) {
            $.sseAlgorithm = sseAlgorithm;
            return this;
        }

        /**
         * @param sseAlgorithm The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(String sseAlgorithm) {
            return sseAlgorithm(Output.of(sseAlgorithm));
        }

        public BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs build() {
            if ($.sseAlgorithm == null) {
                throw new MissingRequiredPropertyException("BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs", "sseAlgorithm");
            }
            return $;
        }
    }

}
