// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentcoreCodeInterpreterNetworkConfigurationVpcConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreCodeInterpreterNetworkConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreCodeInterpreterNetworkConfigurationArgs Empty = new AgentcoreCodeInterpreterNetworkConfigurationArgs();

    /**
     * Network mode for the code interpreter. Valid values: `PUBLIC`, `SANDBOX`, `VPC`.
     * 
     */
    @Import(name="networkMode", required=true)
    private Output<String> networkMode;

    /**
     * @return Network mode for the code interpreter. Valid values: `PUBLIC`, `SANDBOX`, `VPC`.
     * 
     */
    public Output<String> networkMode() {
        return this.networkMode;
    }

    /**
     * VPC configuration. See `vpcConfig` below.
     * 
     */
    @Import(name="vpcConfig")
    private @Nullable Output<AgentcoreCodeInterpreterNetworkConfigurationVpcConfigArgs> vpcConfig;

    /**
     * @return VPC configuration. See `vpcConfig` below.
     * 
     */
    public Optional<Output<AgentcoreCodeInterpreterNetworkConfigurationVpcConfigArgs>> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private AgentcoreCodeInterpreterNetworkConfigurationArgs() {}

    private AgentcoreCodeInterpreterNetworkConfigurationArgs(AgentcoreCodeInterpreterNetworkConfigurationArgs $) {
        this.networkMode = $.networkMode;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreCodeInterpreterNetworkConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreCodeInterpreterNetworkConfigurationArgs $;

        public Builder() {
            $ = new AgentcoreCodeInterpreterNetworkConfigurationArgs();
        }

        public Builder(AgentcoreCodeInterpreterNetworkConfigurationArgs defaults) {
            $ = new AgentcoreCodeInterpreterNetworkConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkMode Network mode for the code interpreter. Valid values: `PUBLIC`, `SANDBOX`, `VPC`.
         * 
         * @return builder
         * 
         */
        public Builder networkMode(Output<String> networkMode) {
            $.networkMode = networkMode;
            return this;
        }

        /**
         * @param networkMode Network mode for the code interpreter. Valid values: `PUBLIC`, `SANDBOX`, `VPC`.
         * 
         * @return builder
         * 
         */
        public Builder networkMode(String networkMode) {
            return networkMode(Output.of(networkMode));
        }

        /**
         * @param vpcConfig VPC configuration. See `vpcConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder vpcConfig(@Nullable Output<AgentcoreCodeInterpreterNetworkConfigurationVpcConfigArgs> vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        /**
         * @param vpcConfig VPC configuration. See `vpcConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder vpcConfig(AgentcoreCodeInterpreterNetworkConfigurationVpcConfigArgs vpcConfig) {
            return vpcConfig(Output.of(vpcConfig));
        }

        public AgentcoreCodeInterpreterNetworkConfigurationArgs build() {
            if ($.networkMode == null) {
                throw new MissingRequiredPropertyException("AgentcoreCodeInterpreterNetworkConfigurationArgs", "networkMode");
            }
            return $;
        }
    }

}
