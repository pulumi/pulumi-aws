// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleRetainRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs Empty = new LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs();

    @Import(name="cmkArn")
    private @Nullable Output<String> cmkArn;

    public Optional<Output<String>> cmkArn() {
        return Optional.ofNullable(this.cmkArn);
    }

    @Import(name="copyTags")
    private @Nullable Output<Boolean> copyTags;

    public Optional<Output<Boolean>> copyTags() {
        return Optional.ofNullable(this.copyTags);
    }

    @Import(name="deprecateRule")
    private @Nullable Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRuleArgs> deprecateRule;

    public Optional<Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRuleArgs>> deprecateRule() {
        return Optional.ofNullable(this.deprecateRule);
    }

    @Import(name="encrypted", required=true)
    private Output<Boolean> encrypted;

    public Output<Boolean> encrypted() {
        return this.encrypted;
    }

    @Import(name="retainRule")
    private @Nullable Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleRetainRuleArgs> retainRule;

    public Optional<Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleRetainRuleArgs>> retainRule() {
        return Optional.ofNullable(this.retainRule);
    }

    @Import(name="target", required=true)
    private Output<String> target;

    public Output<String> target() {
        return this.target;
    }

    private LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs() {}

    private LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs $) {
        this.cmkArn = $.cmkArn;
        this.copyTags = $.copyTags;
        this.deprecateRule = $.deprecateRule;
        this.encrypted = $.encrypted;
        this.retainRule = $.retainRule;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder cmkArn(@Nullable Output<String> cmkArn) {
            $.cmkArn = cmkArn;
            return this;
        }

        public Builder cmkArn(String cmkArn) {
            return cmkArn(Output.of(cmkArn));
        }

        public Builder copyTags(@Nullable Output<Boolean> copyTags) {
            $.copyTags = copyTags;
            return this;
        }

        public Builder copyTags(Boolean copyTags) {
            return copyTags(Output.of(copyTags));
        }

        public Builder deprecateRule(@Nullable Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRuleArgs> deprecateRule) {
            $.deprecateRule = deprecateRule;
            return this;
        }

        public Builder deprecateRule(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleDeprecateRuleArgs deprecateRule) {
            return deprecateRule(Output.of(deprecateRule));
        }

        public Builder encrypted(Output<Boolean> encrypted) {
            $.encrypted = encrypted;
            return this;
        }

        public Builder encrypted(Boolean encrypted) {
            return encrypted(Output.of(encrypted));
        }

        public Builder retainRule(@Nullable Output<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleRetainRuleArgs> retainRule) {
            $.retainRule = retainRule;
            return this;
        }

        public Builder retainRule(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleRetainRuleArgs retainRule) {
            return retainRule(Output.of(retainRule));
        }

        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs build() {
            if ($.encrypted == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs", "encrypted");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs", "target");
            }
            return $;
        }
    }

}
