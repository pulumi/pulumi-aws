// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class FolderPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FolderPermissionArgs Empty = new FolderPermissionArgs();

    /**
     * List of IAM actions to grant or revoke permissions on.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return List of IAM actions to grant or revoke permissions on.
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     * 
     */
    @Import(name="principal", required=true)
    private Output<String> principal;

    /**
     * @return ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     * 
     */
    public Output<String> principal() {
        return this.principal;
    }

    private FolderPermissionArgs() {}

    private FolderPermissionArgs(FolderPermissionArgs $) {
        this.actions = $.actions;
        this.principal = $.principal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FolderPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FolderPermissionArgs $;

        public Builder() {
            $ = new FolderPermissionArgs();
        }

        public Builder(FolderPermissionArgs defaults) {
            $ = new FolderPermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions List of IAM actions to grant or revoke permissions on.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions List of IAM actions to grant or revoke permissions on.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions List of IAM actions to grant or revoke permissions on.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param principal ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
         * 
         * @return builder
         * 
         */
        public Builder principal(Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        public FolderPermissionArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("FolderPermissionArgs", "actions");
            }
            if ($.principal == null) {
                throw new MissingRequiredPropertyException("FolderPermissionArgs", "principal");
            }
            return $;
        }
    }

}
