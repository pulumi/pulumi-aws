// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs Empty = new AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs();

    /**
     * ARN of the OpenSearch Service vector store.
     * 
     */
    @Import(name="collectionArn", required=true)
    private Output<String> collectionArn;

    /**
     * @return ARN of the OpenSearch Service vector store.
     * 
     */
    public Output<String> collectionArn() {
        return this.collectionArn;
    }

    /**
     * The names of the fields to which to map information about the vector store. This block supports the following arguments:
     * 
     */
    @Import(name="fieldMapping")
    private @Nullable Output<AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs> fieldMapping;

    /**
     * @return The names of the fields to which to map information about the vector store. This block supports the following arguments:
     * 
     */
    public Optional<Output<AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs>> fieldMapping() {
        return Optional.ofNullable(this.fieldMapping);
    }

    /**
     * Name of the vector store.
     * 
     */
    @Import(name="vectorIndexName", required=true)
    private Output<String> vectorIndexName;

    /**
     * @return Name of the vector store.
     * 
     */
    public Output<String> vectorIndexName() {
        return this.vectorIndexName;
    }

    private AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs() {}

    private AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs(AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs $) {
        this.collectionArn = $.collectionArn;
        this.fieldMapping = $.fieldMapping;
        this.vectorIndexName = $.vectorIndexName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs $;

        public Builder() {
            $ = new AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs();
        }

        public Builder(AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs defaults) {
            $ = new AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionArn ARN of the OpenSearch Service vector store.
         * 
         * @return builder
         * 
         */
        public Builder collectionArn(Output<String> collectionArn) {
            $.collectionArn = collectionArn;
            return this;
        }

        /**
         * @param collectionArn ARN of the OpenSearch Service vector store.
         * 
         * @return builder
         * 
         */
        public Builder collectionArn(String collectionArn) {
            return collectionArn(Output.of(collectionArn));
        }

        /**
         * @param fieldMapping The names of the fields to which to map information about the vector store. This block supports the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(@Nullable Output<AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs> fieldMapping) {
            $.fieldMapping = fieldMapping;
            return this;
        }

        /**
         * @param fieldMapping The names of the fields to which to map information about the vector store. This block supports the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder fieldMapping(AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs fieldMapping) {
            return fieldMapping(Output.of(fieldMapping));
        }

        /**
         * @param vectorIndexName Name of the vector store.
         * 
         * @return builder
         * 
         */
        public Builder vectorIndexName(Output<String> vectorIndexName) {
            $.vectorIndexName = vectorIndexName;
            return this;
        }

        /**
         * @param vectorIndexName Name of the vector store.
         * 
         * @return builder
         * 
         */
        public Builder vectorIndexName(String vectorIndexName) {
            return vectorIndexName(Output.of(vectorIndexName));
        }

        public AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs build() {
            if ($.collectionArn == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs", "collectionArn");
            }
            if ($.vectorIndexName == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs", "vectorIndexName");
            }
            return $;
        }
    }

}
