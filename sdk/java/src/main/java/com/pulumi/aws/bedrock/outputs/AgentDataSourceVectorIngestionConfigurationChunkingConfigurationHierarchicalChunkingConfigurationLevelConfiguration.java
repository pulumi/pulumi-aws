// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration {
    /**
     * @return The maximum number of tokens that a chunk can contain in this layer.
     * 
     */
    private Integer maxTokens;

    private AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration() {}
    /**
     * @return The maximum number of tokens that a chunk can contain in this layer.
     * 
     */
    public Integer maxTokens() {
        return this.maxTokens;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxTokens;
        public Builder() {}
        public Builder(AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxTokens = defaults.maxTokens;
        }

        @CustomType.Setter
        public Builder maxTokens(Integer maxTokens) {
            if (maxTokens == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration", "maxTokens");
            }
            this.maxTokens = maxTokens;
            return this;
        }
        public AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration build() {
            final var _resultValue = new AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfigurationLevelConfiguration();
            _resultValue.maxTokens = maxTokens;
            return _resultValue;
        }
    }
}
