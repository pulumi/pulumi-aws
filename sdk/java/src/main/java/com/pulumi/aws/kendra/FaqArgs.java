// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra;

import com.pulumi.aws.kendra.inputs.FaqS3PathArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FaqArgs extends com.pulumi.resources.ResourceArgs {

    public static final FaqArgs Empty = new FaqArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="fileFormat")
    private @Nullable Output<String> fileFormat;

    public Optional<Output<String>> fileFormat() {
        return Optional.ofNullable(this.fileFormat);
    }

    @Import(name="indexId", required=true)
    private Output<String> indexId;

    public Output<String> indexId() {
        return this.indexId;
    }

    @Import(name="languageCode")
    private @Nullable Output<String> languageCode;

    public Optional<Output<String>> languageCode() {
        return Optional.ofNullable(this.languageCode);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="s3Path", required=true)
    private Output<FaqS3PathArgs> s3Path;

    public Output<FaqS3PathArgs> s3Path() {
        return this.s3Path;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FaqArgs() {}

    private FaqArgs(FaqArgs $) {
        this.description = $.description;
        this.fileFormat = $.fileFormat;
        this.indexId = $.indexId;
        this.languageCode = $.languageCode;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.s3Path = $.s3Path;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FaqArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FaqArgs $;

        public Builder() {
            $ = new FaqArgs();
        }

        public Builder(FaqArgs defaults) {
            $ = new FaqArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder fileFormat(@Nullable Output<String> fileFormat) {
            $.fileFormat = fileFormat;
            return this;
        }

        public Builder fileFormat(String fileFormat) {
            return fileFormat(Output.of(fileFormat));
        }

        public Builder indexId(Output<String> indexId) {
            $.indexId = indexId;
            return this;
        }

        public Builder indexId(String indexId) {
            return indexId(Output.of(indexId));
        }

        public Builder languageCode(@Nullable Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder s3Path(Output<FaqS3PathArgs> s3Path) {
            $.s3Path = s3Path;
            return this;
        }

        public Builder s3Path(FaqS3PathArgs s3Path) {
            return s3Path(Output.of(s3Path));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public FaqArgs build() {
            $.indexId = Objects.requireNonNull($.indexId, "expected parameter 'indexId' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.s3Path = Objects.requireNonNull($.s3Path, "expected parameter 's3Path' to be non-null");
            return $;
        }
    }

}
