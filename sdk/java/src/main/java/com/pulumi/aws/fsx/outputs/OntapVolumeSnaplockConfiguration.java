// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.OntapVolumeSnaplockConfigurationAutocommitPeriod;
import com.pulumi.aws.fsx.outputs.OntapVolumeSnaplockConfigurationRetentionPeriod;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OntapVolumeSnaplockConfiguration {
    /**
     * @return Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    private @Nullable Boolean auditLogVolume;
    /**
     * @return The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
     * 
     */
    private @Nullable OntapVolumeSnaplockConfigurationAutocommitPeriod autocommitPeriod;
    /**
     * @return Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
     * 
     */
    private @Nullable String privilegedDelete;
    /**
     * @return The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
     * 
     */
    private @Nullable OntapVolumeSnaplockConfigurationRetentionPeriod retentionPeriod;
    /**
     * @return Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
     * 
     */
    private String snaplockType;
    /**
     * @return Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    private @Nullable Boolean volumeAppendModeEnabled;

    private OntapVolumeSnaplockConfiguration() {}
    /**
     * @return Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    public Optional<Boolean> auditLogVolume() {
        return Optional.ofNullable(this.auditLogVolume);
    }
    /**
     * @return The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
     * 
     */
    public Optional<OntapVolumeSnaplockConfigurationAutocommitPeriod> autocommitPeriod() {
        return Optional.ofNullable(this.autocommitPeriod);
    }
    /**
     * @return Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
     * 
     */
    public Optional<String> privilegedDelete() {
        return Optional.ofNullable(this.privilegedDelete);
    }
    /**
     * @return The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
     * 
     */
    public Optional<OntapVolumeSnaplockConfigurationRetentionPeriod> retentionPeriod() {
        return Optional.ofNullable(this.retentionPeriod);
    }
    /**
     * @return Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
     * 
     */
    public String snaplockType() {
        return this.snaplockType;
    }
    /**
     * @return Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    public Optional<Boolean> volumeAppendModeEnabled() {
        return Optional.ofNullable(this.volumeAppendModeEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OntapVolumeSnaplockConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean auditLogVolume;
        private @Nullable OntapVolumeSnaplockConfigurationAutocommitPeriod autocommitPeriod;
        private @Nullable String privilegedDelete;
        private @Nullable OntapVolumeSnaplockConfigurationRetentionPeriod retentionPeriod;
        private String snaplockType;
        private @Nullable Boolean volumeAppendModeEnabled;
        public Builder() {}
        public Builder(OntapVolumeSnaplockConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditLogVolume = defaults.auditLogVolume;
    	      this.autocommitPeriod = defaults.autocommitPeriod;
    	      this.privilegedDelete = defaults.privilegedDelete;
    	      this.retentionPeriod = defaults.retentionPeriod;
    	      this.snaplockType = defaults.snaplockType;
    	      this.volumeAppendModeEnabled = defaults.volumeAppendModeEnabled;
        }

        @CustomType.Setter
        public Builder auditLogVolume(@Nullable Boolean auditLogVolume) {
            this.auditLogVolume = auditLogVolume;
            return this;
        }
        @CustomType.Setter
        public Builder autocommitPeriod(@Nullable OntapVolumeSnaplockConfigurationAutocommitPeriod autocommitPeriod) {
            this.autocommitPeriod = autocommitPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedDelete(@Nullable String privilegedDelete) {
            this.privilegedDelete = privilegedDelete;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriod(@Nullable OntapVolumeSnaplockConfigurationRetentionPeriod retentionPeriod) {
            this.retentionPeriod = retentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder snaplockType(String snaplockType) {
            this.snaplockType = Objects.requireNonNull(snaplockType);
            return this;
        }
        @CustomType.Setter
        public Builder volumeAppendModeEnabled(@Nullable Boolean volumeAppendModeEnabled) {
            this.volumeAppendModeEnabled = volumeAppendModeEnabled;
            return this;
        }
        public OntapVolumeSnaplockConfiguration build() {
            final var o = new OntapVolumeSnaplockConfiguration();
            o.auditLogVolume = auditLogVolume;
            o.autocommitPeriod = autocommitPeriod;
            o.privilegedDelete = privilegedDelete;
            o.retentionPeriod = retentionPeriod;
            o.snaplockType = snaplockType;
            o.volumeAppendModeEnabled = volumeAppendModeEnabled;
            return o;
        }
    }
}
