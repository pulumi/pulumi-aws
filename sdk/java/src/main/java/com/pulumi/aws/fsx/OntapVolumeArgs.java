// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx;

import com.pulumi.aws.fsx.inputs.OntapVolumeTieringPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OntapVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final OntapVolumeArgs Empty = new OntapVolumeArgs();

    @Import(name="junctionPath", required=true)
    private Output<String> junctionPath;

    public Output<String> junctionPath() {
        return this.junctionPath;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="securityStyle")
    private @Nullable Output<String> securityStyle;

    public Optional<Output<String>> securityStyle() {
        return Optional.ofNullable(this.securityStyle);
    }

    @Import(name="sizeInMegabytes", required=true)
    private Output<Integer> sizeInMegabytes;

    public Output<Integer> sizeInMegabytes() {
        return this.sizeInMegabytes;
    }

    @Import(name="storageEfficiencyEnabled", required=true)
    private Output<Boolean> storageEfficiencyEnabled;

    public Output<Boolean> storageEfficiencyEnabled() {
        return this.storageEfficiencyEnabled;
    }

    @Import(name="storageVirtualMachineId", required=true)
    private Output<String> storageVirtualMachineId;

    public Output<String> storageVirtualMachineId() {
        return this.storageVirtualMachineId;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tieringPolicy")
    private @Nullable Output<OntapVolumeTieringPolicyArgs> tieringPolicy;

    public Optional<Output<OntapVolumeTieringPolicyArgs>> tieringPolicy() {
        return Optional.ofNullable(this.tieringPolicy);
    }

    @Import(name="volumeType")
    private @Nullable Output<String> volumeType;

    public Optional<Output<String>> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    private OntapVolumeArgs() {}

    private OntapVolumeArgs(OntapVolumeArgs $) {
        this.junctionPath = $.junctionPath;
        this.name = $.name;
        this.securityStyle = $.securityStyle;
        this.sizeInMegabytes = $.sizeInMegabytes;
        this.storageEfficiencyEnabled = $.storageEfficiencyEnabled;
        this.storageVirtualMachineId = $.storageVirtualMachineId;
        this.tags = $.tags;
        this.tieringPolicy = $.tieringPolicy;
        this.volumeType = $.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OntapVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OntapVolumeArgs $;

        public Builder() {
            $ = new OntapVolumeArgs();
        }

        public Builder(OntapVolumeArgs defaults) {
            $ = new OntapVolumeArgs(Objects.requireNonNull(defaults));
        }

        public Builder junctionPath(Output<String> junctionPath) {
            $.junctionPath = junctionPath;
            return this;
        }

        public Builder junctionPath(String junctionPath) {
            return junctionPath(Output.of(junctionPath));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder securityStyle(@Nullable Output<String> securityStyle) {
            $.securityStyle = securityStyle;
            return this;
        }

        public Builder securityStyle(String securityStyle) {
            return securityStyle(Output.of(securityStyle));
        }

        public Builder sizeInMegabytes(Output<Integer> sizeInMegabytes) {
            $.sizeInMegabytes = sizeInMegabytes;
            return this;
        }

        public Builder sizeInMegabytes(Integer sizeInMegabytes) {
            return sizeInMegabytes(Output.of(sizeInMegabytes));
        }

        public Builder storageEfficiencyEnabled(Output<Boolean> storageEfficiencyEnabled) {
            $.storageEfficiencyEnabled = storageEfficiencyEnabled;
            return this;
        }

        public Builder storageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
            return storageEfficiencyEnabled(Output.of(storageEfficiencyEnabled));
        }

        public Builder storageVirtualMachineId(Output<String> storageVirtualMachineId) {
            $.storageVirtualMachineId = storageVirtualMachineId;
            return this;
        }

        public Builder storageVirtualMachineId(String storageVirtualMachineId) {
            return storageVirtualMachineId(Output.of(storageVirtualMachineId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tieringPolicy(@Nullable Output<OntapVolumeTieringPolicyArgs> tieringPolicy) {
            $.tieringPolicy = tieringPolicy;
            return this;
        }

        public Builder tieringPolicy(OntapVolumeTieringPolicyArgs tieringPolicy) {
            return tieringPolicy(Output.of(tieringPolicy));
        }

        public Builder volumeType(@Nullable Output<String> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        public Builder volumeType(String volumeType) {
            return volumeType(Output.of(volumeType));
        }

        public OntapVolumeArgs build() {
            $.junctionPath = Objects.requireNonNull($.junctionPath, "expected parameter 'junctionPath' to be non-null");
            $.sizeInMegabytes = Objects.requireNonNull($.sizeInMegabytes, "expected parameter 'sizeInMegabytes' to be non-null");
            $.storageEfficiencyEnabled = Objects.requireNonNull($.storageEfficiencyEnabled, "expected parameter 'storageEfficiencyEnabled' to be non-null");
            $.storageVirtualMachineId = Objects.requireNonNull($.storageVirtualMachineId, "expected parameter 'storageVirtualMachineId' to be non-null");
            return $;
        }
    }

}
