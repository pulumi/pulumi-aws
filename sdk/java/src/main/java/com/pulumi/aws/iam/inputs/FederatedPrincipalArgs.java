// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Federated principal for identity providers.
 * 
 */
public final class FederatedPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final FederatedPrincipalArgs Empty = new FederatedPrincipalArgs();

    /**
     * The federated principal identifier.
     * 
     */
    @Import(name="Federated", required=true)
    private Output<Either<String,List<String>>> Federated;

    /**
     * @return The federated principal identifier.
     * 
     */
    public Output<Either<String,List<String>>> Federated() {
        return this.Federated;
    }

    private FederatedPrincipalArgs() {}

    private FederatedPrincipalArgs(FederatedPrincipalArgs $) {
        this.Federated = $.Federated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FederatedPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FederatedPrincipalArgs $;

        public Builder() {
            $ = new FederatedPrincipalArgs();
        }

        public Builder(FederatedPrincipalArgs defaults) {
            $ = new FederatedPrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param Federated The federated principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Federated(Output<Either<String,List<String>>> Federated) {
            $.Federated = Federated;
            return this;
        }

        /**
         * @param Federated The federated principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Federated(Either<String,List<String>> Federated) {
            return Federated(Output.of(Federated));
        }

        /**
         * @param Federated The federated principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Federated(String Federated) {
            return Federated(Either.ofLeft(Federated));
        }

        /**
         * @param Federated The federated principal identifier.
         * 
         * @return builder
         * 
         */
        public Builder Federated(List<String> Federated) {
            return Federated(Either.ofRight(Federated));
        }

        public FederatedPrincipalArgs build() {
            if ($.Federated == null) {
                throw new MissingRequiredPropertyException("FederatedPrincipalArgs", "Federated");
            }
            return $;
        }
    }

}
