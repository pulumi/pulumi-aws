// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogTableArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogTableArgs Empty = new GetCatalogTableArgs();

    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="queryAsOfTime")
    private @Nullable Output<String> queryAsOfTime;

    public Optional<Output<String>> queryAsOfTime() {
        return Optional.ofNullable(this.queryAsOfTime);
    }

    @Import(name="transactionId")
    private @Nullable Output<Integer> transactionId;

    public Optional<Output<Integer>> transactionId() {
        return Optional.ofNullable(this.transactionId);
    }

    private GetCatalogTableArgs() {}

    private GetCatalogTableArgs(GetCatalogTableArgs $) {
        this.catalogId = $.catalogId;
        this.databaseName = $.databaseName;
        this.name = $.name;
        this.queryAsOfTime = $.queryAsOfTime;
        this.transactionId = $.transactionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogTableArgs $;

        public Builder() {
            $ = new GetCatalogTableArgs();
        }

        public Builder(GetCatalogTableArgs defaults) {
            $ = new GetCatalogTableArgs(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder queryAsOfTime(@Nullable Output<String> queryAsOfTime) {
            $.queryAsOfTime = queryAsOfTime;
            return this;
        }

        public Builder queryAsOfTime(String queryAsOfTime) {
            return queryAsOfTime(Output.of(queryAsOfTime));
        }

        public Builder transactionId(@Nullable Output<Integer> transactionId) {
            $.transactionId = transactionId;
            return this;
        }

        public Builder transactionId(Integer transactionId) {
            return transactionId(Output.of(transactionId));
        }

        public GetCatalogTableArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
