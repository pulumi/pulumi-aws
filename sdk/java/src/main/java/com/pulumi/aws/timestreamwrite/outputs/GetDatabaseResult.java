// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamwrite.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseResult {
    /**
     * @return The ARN that uniquely identifies this database.
     * 
     */
    private String arn;
    /**
     * @return Creation time of database.
     * 
     */
    private String createdTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ARN of the KMS key used to encrypt the data stored in the database.
     * 
     */
    private String kmsKeyId;
    /**
     * @return Last time database was updated.
     * 
     */
    private String lastUpdatedTime;
    private String name;
    /**
     * @return Total number of tables in the Timestream database.
     * 
     */
    private Integer tableCount;

    private GetDatabaseResult() {}
    /**
     * @return The ARN that uniquely identifies this database.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Creation time of database.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ARN of the KMS key used to encrypt the data stored in the database.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return Last time database was updated.
     * 
     */
    public String lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Total number of tables in the Timestream database.
     * 
     */
    public Integer tableCount() {
        return this.tableCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String createdTime;
        private String id;
        private String kmsKeyId;
        private String lastUpdatedTime;
        private String name;
        private Integer tableCount;
        public Builder() {}
        public Builder(GetDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.name = defaults.name;
    	      this.tableCount = defaults.tableCount;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(String lastUpdatedTime) {
            if (lastUpdatedTime == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "lastUpdatedTime");
            }
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tableCount(Integer tableCount) {
            if (tableCount == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "tableCount");
            }
            this.tableCount = tableCount;
            return this;
        }
        public GetDatabaseResult build() {
            final var _resultValue = new GetDatabaseResult();
            _resultValue.arn = arn;
            _resultValue.createdTime = createdTime;
            _resultValue.id = id;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.lastUpdatedTime = lastUpdatedTime;
            _resultValue.name = name;
            _resultValue.tableCount = tableCount;
            return _resultValue;
        }
    }
}
