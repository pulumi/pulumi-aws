// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3tables.TableBucketPolicyArgs;
import com.pulumi.aws.s3tables.inputs.TableBucketPolicyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Resource for managing an Amazon S3 Tables Table Bucket Policy.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.s3tables.TableBucketPolicy;
 * import com.pulumi.aws.s3tables.TableBucketPolicyArgs;
 * import com.pulumi.aws.s3tables.TableBucket;
 * import com.pulumi.aws.s3tables.TableBucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements()
 *             .build());
 * 
 *         var exampleTableBucketPolicy = new TableBucketPolicy("exampleTableBucketPolicy", TableBucketPolicyArgs.builder()
 *             .resourcePolicy(example.applyValue(getPolicyDocumentResult -> getPolicyDocumentResult.json()))
 *             .tableBucketArn(exampleAwsS3tablesTableBucket.arn())
 *             .build());
 * 
 *         var test = new TableBucket("test", TableBucketArgs.builder()
 *             .name("example-bucket")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import S3 Tables Table Bucket Policy using the `table_bucket_arn`. For example:
 * 
 * ```sh
 * $ pulumi import aws:s3tables/tableBucketPolicy:TableBucketPolicy example &#39;arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace&#39;
 * ```
 * 
 */
@ResourceType(type="aws:s3tables/tableBucketPolicy:TableBucketPolicy")
public class TableBucketPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Amazon Web Services resource-based policy document in JSON format.
     * 
     */
    @Export(name="resourcePolicy", refs={String.class}, tree="[0]")
    private Output<String> resourcePolicy;

    /**
     * @return Amazon Web Services resource-based policy document in JSON format.
     * 
     */
    public Output<String> resourcePolicy() {
        return this.resourcePolicy;
    }
    /**
     * ARN referencing the Table Bucket that owns this policy.
     * 
     */
    @Export(name="tableBucketArn", refs={String.class}, tree="[0]")
    private Output<String> tableBucketArn;

    /**
     * @return ARN referencing the Table Bucket that owns this policy.
     * 
     */
    public Output<String> tableBucketArn() {
        return this.tableBucketArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TableBucketPolicy(java.lang.String name) {
        this(name, TableBucketPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TableBucketPolicy(java.lang.String name, TableBucketPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TableBucketPolicy(java.lang.String name, TableBucketPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3tables/tableBucketPolicy:TableBucketPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TableBucketPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable TableBucketPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3tables/tableBucketPolicy:TableBucketPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static TableBucketPolicyArgs makeArgs(TableBucketPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TableBucketPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TableBucketPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable TableBucketPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TableBucketPolicy(name, id, state, options);
    }
}
