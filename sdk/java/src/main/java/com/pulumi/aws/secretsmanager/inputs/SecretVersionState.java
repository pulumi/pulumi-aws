// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretVersionState extends com.pulumi.resources.ResourceArgs {

    public static final SecretVersionState Empty = new SecretVersionState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="secretBinary")
    private @Nullable Output<String> secretBinary;

    public Optional<Output<String>> secretBinary() {
        return Optional.ofNullable(this.secretBinary);
    }

    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    @Import(name="secretString")
    private @Nullable Output<String> secretString;

    public Optional<Output<String>> secretString() {
        return Optional.ofNullable(this.secretString);
    }

    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    @Import(name="versionStages")
    private @Nullable Output<List<String>> versionStages;

    public Optional<Output<List<String>>> versionStages() {
        return Optional.ofNullable(this.versionStages);
    }

    private SecretVersionState() {}

    private SecretVersionState(SecretVersionState $) {
        this.arn = $.arn;
        this.secretBinary = $.secretBinary;
        this.secretId = $.secretId;
        this.secretString = $.secretString;
        this.versionId = $.versionId;
        this.versionStages = $.versionStages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretVersionState $;

        public Builder() {
            $ = new SecretVersionState();
        }

        public Builder(SecretVersionState defaults) {
            $ = new SecretVersionState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder secretBinary(@Nullable Output<String> secretBinary) {
            $.secretBinary = secretBinary;
            return this;
        }

        public Builder secretBinary(String secretBinary) {
            return secretBinary(Output.of(secretBinary));
        }

        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        public Builder secretString(@Nullable Output<String> secretString) {
            $.secretString = secretString;
            return this;
        }

        public Builder secretString(String secretString) {
            return secretString(Output.of(secretString));
        }

        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public Builder versionStages(@Nullable Output<List<String>> versionStages) {
            $.versionStages = versionStages;
            return this;
        }

        public Builder versionStages(List<String> versionStages) {
            return versionStages(Output.of(versionStages));
        }

        public Builder versionStages(String... versionStages) {
            return versionStages(List.of(versionStages));
        }

        public SecretVersionState build() {
            return $;
        }
    }

}
