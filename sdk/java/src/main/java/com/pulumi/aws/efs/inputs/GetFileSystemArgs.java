// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFileSystemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFileSystemArgs Empty = new GetFileSystemArgs();

    /**
     * Restricts the list to the file system with this creation token.
     * 
     */
    @Import(name="creationToken")
    private @Nullable Output<String> creationToken;

    /**
     * @return Restricts the list to the file system with this creation token.
     * 
     */
    public Optional<Output<String>> creationToken() {
        return Optional.ofNullable(this.creationToken);
    }

    /**
     * ID that identifies the file system (e.g., fs-ccfc0d65).
     * 
     */
    @Import(name="fileSystemId")
    private @Nullable Output<String> fileSystemId;

    /**
     * @return ID that identifies the file system (e.g., fs-ccfc0d65).
     * 
     */
    public Optional<Output<String>> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }

    /**
     * Restricts the list to the file system with these tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Restricts the list to the file system with these tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetFileSystemArgs() {}

    private GetFileSystemArgs(GetFileSystemArgs $) {
        this.creationToken = $.creationToken;
        this.fileSystemId = $.fileSystemId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFileSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFileSystemArgs $;

        public Builder() {
            $ = new GetFileSystemArgs();
        }

        public Builder(GetFileSystemArgs defaults) {
            $ = new GetFileSystemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationToken Restricts the list to the file system with this creation token.
         * 
         * @return builder
         * 
         */
        public Builder creationToken(@Nullable Output<String> creationToken) {
            $.creationToken = creationToken;
            return this;
        }

        /**
         * @param creationToken Restricts the list to the file system with this creation token.
         * 
         * @return builder
         * 
         */
        public Builder creationToken(String creationToken) {
            return creationToken(Output.of(creationToken));
        }

        /**
         * @param fileSystemId ID that identifies the file system (e.g., fs-ccfc0d65).
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(@Nullable Output<String> fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        /**
         * @param fileSystemId ID that identifies the file system (e.g., fs-ccfc0d65).
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(String fileSystemId) {
            return fileSystemId(Output.of(fileSystemId));
        }

        /**
         * @param tags Restricts the list to the file system with these tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Restricts the list to the file system with these tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetFileSystemArgs build() {
            return $;
        }
    }

}
