// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetListenerRuleConditionHttpHeader extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerRuleConditionHttpHeader Empty = new GetListenerRuleConditionHttpHeader();

    /**
     * Name of the HTTP header to match.
     * 
     */
    @Import(name="httpHeaderName", required=true)
    private String httpHeaderName;

    /**
     * @return Name of the HTTP header to match.
     * 
     */
    public String httpHeaderName() {
        return this.httpHeaderName;
    }

    /**
     * Set of `key`-`value` pairs indicating the query string parameters to match.
     * 
     */
    @Import(name="values", required=true)
    private List<String> values;

    /**
     * @return Set of `key`-`value` pairs indicating the query string parameters to match.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    private GetListenerRuleConditionHttpHeader() {}

    private GetListenerRuleConditionHttpHeader(GetListenerRuleConditionHttpHeader $) {
        this.httpHeaderName = $.httpHeaderName;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleConditionHttpHeader defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleConditionHttpHeader $;

        public Builder() {
            $ = new GetListenerRuleConditionHttpHeader();
        }

        public Builder(GetListenerRuleConditionHttpHeader defaults) {
            $ = new GetListenerRuleConditionHttpHeader(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpHeaderName Name of the HTTP header to match.
         * 
         * @return builder
         * 
         */
        public Builder httpHeaderName(String httpHeaderName) {
            $.httpHeaderName = httpHeaderName;
            return this;
        }

        /**
         * @param values Set of `key`-`value` pairs indicating the query string parameters to match.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Set of `key`-`value` pairs indicating the query string parameters to match.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetListenerRuleConditionHttpHeader build() {
            if ($.httpHeaderName == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleConditionHttpHeader", "httpHeaderName");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleConditionHttpHeader", "values");
            }
            return $;
        }
    }

}
