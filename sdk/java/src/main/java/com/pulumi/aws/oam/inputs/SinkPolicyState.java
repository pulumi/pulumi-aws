// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.oam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SinkPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SinkPolicyState Empty = new SinkPolicyState();

    /**
     * ARN of the Sink.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Sink.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * ID string that AWS generated as part of the sink ARN.
     * 
     */
    @Import(name="sinkId")
    private @Nullable Output<String> sinkId;

    /**
     * @return ID string that AWS generated as part of the sink ARN.
     * 
     */
    public Optional<Output<String>> sinkId() {
        return Optional.ofNullable(this.sinkId);
    }

    /**
     * ARN of the sink to attach this policy to.
     * 
     */
    @Import(name="sinkIdentifier")
    private @Nullable Output<String> sinkIdentifier;

    /**
     * @return ARN of the sink to attach this policy to.
     * 
     */
    public Optional<Output<String>> sinkIdentifier() {
        return Optional.ofNullable(this.sinkIdentifier);
    }

    private SinkPolicyState() {}

    private SinkPolicyState(SinkPolicyState $) {
        this.arn = $.arn;
        this.policy = $.policy;
        this.sinkId = $.sinkId;
        this.sinkIdentifier = $.sinkIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SinkPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SinkPolicyState $;

        public Builder() {
            $ = new SinkPolicyState();
        }

        public Builder(SinkPolicyState defaults) {
            $ = new SinkPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Sink.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Sink.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param policy JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param sinkId ID string that AWS generated as part of the sink ARN.
         * 
         * @return builder
         * 
         */
        public Builder sinkId(@Nullable Output<String> sinkId) {
            $.sinkId = sinkId;
            return this;
        }

        /**
         * @param sinkId ID string that AWS generated as part of the sink ARN.
         * 
         * @return builder
         * 
         */
        public Builder sinkId(String sinkId) {
            return sinkId(Output.of(sinkId));
        }

        /**
         * @param sinkIdentifier ARN of the sink to attach this policy to.
         * 
         * @return builder
         * 
         */
        public Builder sinkIdentifier(@Nullable Output<String> sinkIdentifier) {
            $.sinkIdentifier = sinkIdentifier;
            return this;
        }

        /**
         * @param sinkIdentifier ARN of the sink to attach this policy to.
         * 
         * @return builder
         * 
         */
        public Builder sinkIdentifier(String sinkIdentifier) {
            return sinkIdentifier(Output.of(sinkIdentifier));
        }

        public SinkPolicyState build() {
            return $;
        }
    }

}
