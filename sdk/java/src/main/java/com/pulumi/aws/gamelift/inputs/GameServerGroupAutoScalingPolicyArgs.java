// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.inputs;

import com.pulumi.aws.gamelift.inputs.GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GameServerGroupAutoScalingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerGroupAutoScalingPolicyArgs Empty = new GameServerGroupAutoScalingPolicyArgs();

    @Import(name="estimatedInstanceWarmup")
    private @Nullable Output<Integer> estimatedInstanceWarmup;

    public Optional<Output<Integer>> estimatedInstanceWarmup() {
        return Optional.ofNullable(this.estimatedInstanceWarmup);
    }

    @Import(name="targetTrackingConfiguration", required=true)
    private Output<GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs> targetTrackingConfiguration;

    public Output<GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs> targetTrackingConfiguration() {
        return this.targetTrackingConfiguration;
    }

    private GameServerGroupAutoScalingPolicyArgs() {}

    private GameServerGroupAutoScalingPolicyArgs(GameServerGroupAutoScalingPolicyArgs $) {
        this.estimatedInstanceWarmup = $.estimatedInstanceWarmup;
        this.targetTrackingConfiguration = $.targetTrackingConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerGroupAutoScalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerGroupAutoScalingPolicyArgs $;

        public Builder() {
            $ = new GameServerGroupAutoScalingPolicyArgs();
        }

        public Builder(GameServerGroupAutoScalingPolicyArgs defaults) {
            $ = new GameServerGroupAutoScalingPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder estimatedInstanceWarmup(@Nullable Output<Integer> estimatedInstanceWarmup) {
            $.estimatedInstanceWarmup = estimatedInstanceWarmup;
            return this;
        }

        public Builder estimatedInstanceWarmup(Integer estimatedInstanceWarmup) {
            return estimatedInstanceWarmup(Output.of(estimatedInstanceWarmup));
        }

        public Builder targetTrackingConfiguration(Output<GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs> targetTrackingConfiguration) {
            $.targetTrackingConfiguration = targetTrackingConfiguration;
            return this;
        }

        public Builder targetTrackingConfiguration(GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs targetTrackingConfiguration) {
            return targetTrackingConfiguration(Output.of(targetTrackingConfiguration));
        }

        public GameServerGroupAutoScalingPolicyArgs build() {
            $.targetTrackingConfiguration = Objects.requireNonNull($.targetTrackingConfiguration, "expected parameter 'targetTrackingConfiguration' to be non-null");
            return $;
        }
    }

}
