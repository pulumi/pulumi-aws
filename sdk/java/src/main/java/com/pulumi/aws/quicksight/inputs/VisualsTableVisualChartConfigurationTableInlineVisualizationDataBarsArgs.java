// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs Empty = new VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs();

    @Import(name="fieldId", required=true)
    private Output<String> fieldId;

    public Output<String> fieldId() {
        return this.fieldId;
    }

    @Import(name="negativeColor")
    private @Nullable Output<String> negativeColor;

    public Optional<Output<String>> negativeColor() {
        return Optional.ofNullable(this.negativeColor);
    }

    @Import(name="positiveColor")
    private @Nullable Output<String> positiveColor;

    public Optional<Output<String>> positiveColor() {
        return Optional.ofNullable(this.positiveColor);
    }

    private VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs() {}

    private VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs(VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs $) {
        this.fieldId = $.fieldId;
        this.negativeColor = $.negativeColor;
        this.positiveColor = $.positiveColor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs $;

        public Builder() {
            $ = new VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs();
        }

        public Builder(VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs defaults) {
            $ = new VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs(Objects.requireNonNull(defaults));
        }

        public Builder fieldId(Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public Builder negativeColor(@Nullable Output<String> negativeColor) {
            $.negativeColor = negativeColor;
            return this;
        }

        public Builder negativeColor(String negativeColor) {
            return negativeColor(Output.of(negativeColor));
        }

        public Builder positiveColor(@Nullable Output<String> positiveColor) {
            $.positiveColor = positiveColor;
            return this;
        }

        public Builder positiveColor(String positiveColor) {
            return positiveColor(Output.of(positiveColor));
        }

        public VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs build() {
            if ($.fieldId == null) {
                throw new MissingRequiredPropertyException("VisualsTableVisualChartConfigurationTableInlineVisualizationDataBarsArgs", "fieldId");
            }
            return $;
        }
    }

}
