// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DevEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final DevEndpointArgs Empty = new DevEndpointArgs();

    @Import(name="arguments")
    private @Nullable Output<Map<String,Object>> arguments;

    public Optional<Output<Map<String,Object>>> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    @Import(name="extraJarsS3Path")
    private @Nullable Output<String> extraJarsS3Path;

    public Optional<Output<String>> extraJarsS3Path() {
        return Optional.ofNullable(this.extraJarsS3Path);
    }

    @Import(name="extraPythonLibsS3Path")
    private @Nullable Output<String> extraPythonLibsS3Path;

    public Optional<Output<String>> extraPythonLibsS3Path() {
        return Optional.ofNullable(this.extraPythonLibsS3Path);
    }

    @Import(name="glueVersion")
    private @Nullable Output<String> glueVersion;

    public Optional<Output<String>> glueVersion() {
        return Optional.ofNullable(this.glueVersion);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="numberOfNodes")
    private @Nullable Output<Integer> numberOfNodes;

    public Optional<Output<Integer>> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }

    @Import(name="numberOfWorkers")
    private @Nullable Output<Integer> numberOfWorkers;

    public Optional<Output<Integer>> numberOfWorkers() {
        return Optional.ofNullable(this.numberOfWorkers);
    }

    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    @Import(name="publicKeys")
    private @Nullable Output<List<String>> publicKeys;

    public Optional<Output<List<String>>> publicKeys() {
        return Optional.ofNullable(this.publicKeys);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="securityConfiguration")
    private @Nullable Output<String> securityConfiguration;

    public Optional<Output<String>> securityConfiguration() {
        return Optional.ofNullable(this.securityConfiguration);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="workerType")
    private @Nullable Output<String> workerType;

    public Optional<Output<String>> workerType() {
        return Optional.ofNullable(this.workerType);
    }

    private DevEndpointArgs() {}

    private DevEndpointArgs(DevEndpointArgs $) {
        this.arguments = $.arguments;
        this.extraJarsS3Path = $.extraJarsS3Path;
        this.extraPythonLibsS3Path = $.extraPythonLibsS3Path;
        this.glueVersion = $.glueVersion;
        this.name = $.name;
        this.numberOfNodes = $.numberOfNodes;
        this.numberOfWorkers = $.numberOfWorkers;
        this.publicKey = $.publicKey;
        this.publicKeys = $.publicKeys;
        this.roleArn = $.roleArn;
        this.securityConfiguration = $.securityConfiguration;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.workerType = $.workerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DevEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DevEndpointArgs $;

        public Builder() {
            $ = new DevEndpointArgs();
        }

        public Builder(DevEndpointArgs defaults) {
            $ = new DevEndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder arguments(@Nullable Output<Map<String,Object>> arguments) {
            $.arguments = arguments;
            return this;
        }

        public Builder arguments(Map<String,Object> arguments) {
            return arguments(Output.of(arguments));
        }

        public Builder extraJarsS3Path(@Nullable Output<String> extraJarsS3Path) {
            $.extraJarsS3Path = extraJarsS3Path;
            return this;
        }

        public Builder extraJarsS3Path(String extraJarsS3Path) {
            return extraJarsS3Path(Output.of(extraJarsS3Path));
        }

        public Builder extraPythonLibsS3Path(@Nullable Output<String> extraPythonLibsS3Path) {
            $.extraPythonLibsS3Path = extraPythonLibsS3Path;
            return this;
        }

        public Builder extraPythonLibsS3Path(String extraPythonLibsS3Path) {
            return extraPythonLibsS3Path(Output.of(extraPythonLibsS3Path));
        }

        public Builder glueVersion(@Nullable Output<String> glueVersion) {
            $.glueVersion = glueVersion;
            return this;
        }

        public Builder glueVersion(String glueVersion) {
            return glueVersion(Output.of(glueVersion));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder numberOfNodes(@Nullable Output<Integer> numberOfNodes) {
            $.numberOfNodes = numberOfNodes;
            return this;
        }

        public Builder numberOfNodes(Integer numberOfNodes) {
            return numberOfNodes(Output.of(numberOfNodes));
        }

        public Builder numberOfWorkers(@Nullable Output<Integer> numberOfWorkers) {
            $.numberOfWorkers = numberOfWorkers;
            return this;
        }

        public Builder numberOfWorkers(Integer numberOfWorkers) {
            return numberOfWorkers(Output.of(numberOfWorkers));
        }

        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        public Builder publicKeys(@Nullable Output<List<String>> publicKeys) {
            $.publicKeys = publicKeys;
            return this;
        }

        public Builder publicKeys(List<String> publicKeys) {
            return publicKeys(Output.of(publicKeys));
        }

        public Builder publicKeys(String... publicKeys) {
            return publicKeys(List.of(publicKeys));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder securityConfiguration(@Nullable Output<String> securityConfiguration) {
            $.securityConfiguration = securityConfiguration;
            return this;
        }

        public Builder securityConfiguration(String securityConfiguration) {
            return securityConfiguration(Output.of(securityConfiguration));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder workerType(@Nullable Output<String> workerType) {
            $.workerType = workerType;
            return this;
        }

        public Builder workerType(String workerType) {
            return workerType(Output.of(workerType));
        }

        public DevEndpointArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
