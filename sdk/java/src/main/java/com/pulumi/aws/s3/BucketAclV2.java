// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3.BucketAclV2Args;
import com.pulumi.aws.s3.inputs.BucketAclV2State;
import com.pulumi.aws.s3.outputs.BucketAclV2AccessControlPolicy;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an S3 bucket ACL resource.
 * 
 * &gt; **Note:** destroy does not delete the S3 Bucket ACL but does remove the resource from state.
 * 
 * &gt; This resource cannot be used with S3 directory buckets.
 * 
 * ## Example Usage
 * 
 * ### With `private` ACL
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketOwnershipControls;
 * import com.pulumi.aws.s3.BucketOwnershipControlsArgs;
 * import com.pulumi.aws.s3.inputs.BucketOwnershipControlsRuleArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("my-tf-example-bucket")
 *             .build());
 * 
 *         var exampleBucketOwnershipControls = new BucketOwnershipControls("exampleBucketOwnershipControls", BucketOwnershipControlsArgs.builder()
 *             .bucket(example.id())
 *             .rule(BucketOwnershipControlsRuleArgs.builder()
 *                 .objectOwnership("BucketOwnerPreferred")
 *                 .build())
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .acl("private")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleBucketOwnershipControls)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### With `public-read` ACL
 * 
 * &gt; This example explicitly disables the default S3 bucket security settings. This
 * should be done with caution, as all bucket objects become publicly exposed.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketOwnershipControls;
 * import com.pulumi.aws.s3.BucketOwnershipControlsArgs;
 * import com.pulumi.aws.s3.inputs.BucketOwnershipControlsRuleArgs;
 * import com.pulumi.aws.s3.BucketPublicAccessBlock;
 * import com.pulumi.aws.s3.BucketPublicAccessBlockArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("my-tf-example-bucket")
 *             .build());
 * 
 *         var exampleBucketOwnershipControls = new BucketOwnershipControls("exampleBucketOwnershipControls", BucketOwnershipControlsArgs.builder()
 *             .bucket(example.id())
 *             .rule(BucketOwnershipControlsRuleArgs.builder()
 *                 .objectOwnership("BucketOwnerPreferred")
 *                 .build())
 *             .build());
 * 
 *         var exampleBucketPublicAccessBlock = new BucketPublicAccessBlock("exampleBucketPublicAccessBlock", BucketPublicAccessBlockArgs.builder()
 *             .bucket(example.id())
 *             .blockPublicAcls(false)
 *             .blockPublicPolicy(false)
 *             .ignorePublicAcls(false)
 *             .restrictPublicBuckets(false)
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .acl("public-read")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     exampleBucketOwnershipControls,
 *                     exampleBucketPublicAccessBlock)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### With Grants
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.S3Functions;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketOwnershipControls;
 * import com.pulumi.aws.s3.BucketOwnershipControlsArgs;
 * import com.pulumi.aws.s3.inputs.BucketOwnershipControlsRuleArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.aws.s3.inputs.BucketAclAccessControlPolicyArgs;
 * import com.pulumi.aws.s3.inputs.BucketAclAccessControlPolicyOwnerArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = S3Functions.getCanonicalUserId(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("my-tf-example-bucket")
 *             .build());
 * 
 *         var exampleBucketOwnershipControls = new BucketOwnershipControls("exampleBucketOwnershipControls", BucketOwnershipControlsArgs.builder()
 *             .bucket(example.id())
 *             .rule(BucketOwnershipControlsRuleArgs.builder()
 *                 .objectOwnership("BucketOwnerPreferred")
 *                 .build())
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .accessControlPolicy(BucketAclAccessControlPolicyArgs.builder()
 *                 .grants(                
 *                     BucketAclAccessControlPolicyGrantArgs.builder()
 *                         .grantee(BucketAclAccessControlPolicyGrantGranteeArgs.builder()
 *                             .id(current.id())
 *                             .type("CanonicalUser")
 *                             .build())
 *                         .permission("READ")
 *                         .build(),
 *                     BucketAclAccessControlPolicyGrantArgs.builder()
 *                         .grantee(BucketAclAccessControlPolicyGrantGranteeArgs.builder()
 *                             .type("Group")
 *                             .uri("http://acs.amazonaws.com/groups/s3/LogDelivery")
 *                             .build())
 *                         .permission("READ_ACP")
 *                         .build())
 *                 .owner(BucketAclAccessControlPolicyOwnerArgs.builder()
 *                     .id(current.id())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleBucketOwnershipControls)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ### Identity Schema
 * 
 * #### Required
 * 
 * * `bucket` (String) S3 bucket name.
 * 
 * #### Optional
 * 
 * * `account_id` (String) AWS Account where this resource is managed.
 * 
 * * `acl` (String) Canned ACL to apply to the bucket.
 * 
 * * `expected_bucket_owner` (String) Account ID of the expected bucket owner.
 * 
 * * `region` (String) Region where this resource is managed.
 * 
 * If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is **configured** with a
 * 
 * [canned ACL][1] (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):
 * 
 * terraform
 * 
 * import {
 * 
 *   to = aws_s3_bucket_acl.example
 * 
 *   id = &#34;bucket-name,private&#34;
 * 
 * }
 * 
 * If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is **not configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * terraform
 * 
 * import {
 * 
 *   to = aws_s3_bucket_acl.example
 * 
 *   id = &#34;bucket-name,123456789012&#34;
 * 
 * }
 * 
 * If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is **configured** with a
 * 
 * [canned ACL][1] (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):
 * 
 * terraform
 * 
 * import {
 * 
 *   to = aws_s3_bucket_acl.example
 * 
 *   id = &#34;bucket-name,123456789012,private&#34;
 * 
 * }
 * 
 * **Using `pulumi import` to import** using `bucket`, `expected_bucket_owner`, and/or `acl`, depending on your situation. For example:
 * 
 * If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is **not configured** with a
 * 
 * [canned ACL][1] (i.e. predefined grant), import using the `bucket`:
 * 
 * console
 * 
 * % pulumi import aws_s3_bucket_acl.example bucket-name
 * 
 * If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is **configured** with a [canned ACL][1] (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):
 * 
 * console
 * 
 * % pulumi import aws_s3_bucket_acl.example bucket-name,private
 * 
 * If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is **not configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * console
 * 
 * % pulumi import aws_s3_bucket_acl.example bucket-name,123456789012
 * 
 * If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is **configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):
 * 
 * console
 * 
 * % pulumi import aws_s3_bucket_acl.example bucket-name,123456789012,private
 * 
 * [1]: https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl
 * 
 * @deprecated
 * aws.s3/bucketaclv2.BucketAclV2 has been deprecated in favor of aws.s3/bucketacl.BucketAcl
 * 
 */
@Deprecated /* aws.s3/bucketaclv2.BucketAclV2 has been deprecated in favor of aws.s3/bucketacl.BucketAcl */
@ResourceType(type="aws:s3/bucketAclV2:BucketAclV2")
public class BucketAclV2 extends com.pulumi.resources.CustomResource {
    /**
     * Configuration block that sets the ACL permissions for an object per grantee. See below.
     * 
     */
    @Export(name="accessControlPolicy", refs={BucketAclV2AccessControlPolicy.class}, tree="[0]")
    private Output<BucketAclV2AccessControlPolicy> accessControlPolicy;

    /**
     * @return Configuration block that sets the ACL permissions for an object per grantee. See below.
     * 
     */
    public Output<BucketAclV2AccessControlPolicy> accessControlPolicy() {
        return this.accessControlPolicy;
    }
    /**
     * Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
     * 
     */
    @Export(name="acl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> acl;

    /**
     * @return Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
     * 
     */
    public Output<Optional<String>> acl() {
        return Codegen.optional(this.acl);
    }
    /**
     * Bucket to which to apply the ACL.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return Bucket to which to apply the ACL.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @Export(name="expectedBucketOwner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expectedBucketOwner;

    /**
     * @return Account ID of the expected bucket owner.
     * 
     */
    public Output<Optional<String>> expectedBucketOwner() {
        return Codegen.optional(this.expectedBucketOwner);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketAclV2(java.lang.String name) {
        this(name, BucketAclV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketAclV2(java.lang.String name, BucketAclV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketAclV2(java.lang.String name, BucketAclV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketAclV2:BucketAclV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BucketAclV2(java.lang.String name, Output<java.lang.String> id, @Nullable BucketAclV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketAclV2:BucketAclV2", name, state, makeResourceOptions(options, id), false);
    }

    private static BucketAclV2Args makeArgs(BucketAclV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BucketAclV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("aws:s3/bucketAclV2:BucketAclV2").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketAclV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable BucketAclV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketAclV2(name, id, state, options);
    }
}
