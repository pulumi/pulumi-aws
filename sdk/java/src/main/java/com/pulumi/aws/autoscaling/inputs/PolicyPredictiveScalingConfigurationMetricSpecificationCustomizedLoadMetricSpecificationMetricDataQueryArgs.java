// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.aws.autoscaling.inputs.PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryMetricStatArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs Empty = new PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs();

    /**
     * Math expression used on the returned metric. You must specify either `expression` or `metric_stat`, but not both.
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return Math expression used on the returned metric. You must specify either `expression` or `metric_stat`, but not both.
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * Short name for the metric used in predictive scaling policy.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Short name for the metric used in predictive scaling policy.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Human-readable label for this metric or expression.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return Human-readable label for this metric or expression.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either `expression` or `metric_stat`, but not both.
     * 
     */
    @Import(name="metricStat")
    private @Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryMetricStatArgs> metricStat;

    /**
     * @return Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either `expression` or `metric_stat`, but not both.
     * 
     */
    public Optional<Output<PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryMetricStatArgs>> metricStat() {
        return Optional.ofNullable(this.metricStat);
    }

    /**
     * Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
     * 
     */
    @Import(name="returnData")
    private @Nullable Output<Boolean> returnData;

    /**
     * @return Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
     * 
     */
    public Optional<Output<Boolean>> returnData() {
        return Optional.ofNullable(this.returnData);
    }

    private PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs() {}

    private PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs(PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs $) {
        this.expression = $.expression;
        this.id = $.id;
        this.label = $.label;
        this.metricStat = $.metricStat;
        this.returnData = $.returnData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs $;

        public Builder() {
            $ = new PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs();
        }

        public Builder(PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs defaults) {
            $ = new PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression Math expression used on the returned metric. You must specify either `expression` or `metric_stat`, but not both.
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Math expression used on the returned metric. You must specify either `expression` or `metric_stat`, but not both.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param id Short name for the metric used in predictive scaling policy.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Short name for the metric used in predictive scaling policy.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param label Human-readable label for this metric or expression.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Human-readable label for this metric or expression.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param metricStat Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either `expression` or `metric_stat`, but not both.
         * 
         * @return builder
         * 
         */
        public Builder metricStat(@Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryMetricStatArgs> metricStat) {
            $.metricStat = metricStat;
            return this;
        }

        /**
         * @param metricStat Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either `expression` or `metric_stat`, but not both.
         * 
         * @return builder
         * 
         */
        public Builder metricStat(PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryMetricStatArgs metricStat) {
            return metricStat(Output.of(metricStat));
        }

        /**
         * @param returnData Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
         * 
         * @return builder
         * 
         */
        public Builder returnData(@Nullable Output<Boolean> returnData) {
            $.returnData = returnData;
            return this;
        }

        /**
         * @param returnData Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
         * 
         * @return builder
         * 
         */
        public Builder returnData(Boolean returnData) {
            return returnData(Output.of(returnData));
        }

        public PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("PolicyPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueryArgs", "id");
            }
            return $;
        }
    }

}
