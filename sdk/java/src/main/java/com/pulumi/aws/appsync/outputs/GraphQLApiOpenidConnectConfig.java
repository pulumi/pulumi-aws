// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GraphQLApiOpenidConnectConfig {
    /**
     * @return Number of milliseconds a token is valid after being authenticated.
     * 
     */
    private @Nullable Integer authTtl;
    /**
     * @return Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return Number of milliseconds a token is valid after being issued to a user.
     * 
     */
    private @Nullable Integer iatTtl;
    /**
     * @return Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
     */
    private String issuer;

    private GraphQLApiOpenidConnectConfig() {}
    /**
     * @return Number of milliseconds a token is valid after being authenticated.
     * 
     */
    public Optional<Integer> authTtl() {
        return Optional.ofNullable(this.authTtl);
    }
    /**
     * @return Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return Number of milliseconds a token is valid after being issued to a user.
     * 
     */
    public Optional<Integer> iatTtl() {
        return Optional.ofNullable(this.iatTtl);
    }
    /**
     * @return Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
     */
    public String issuer() {
        return this.issuer;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphQLApiOpenidConnectConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer authTtl;
        private @Nullable String clientId;
        private @Nullable Integer iatTtl;
        private String issuer;
        public Builder() {}
        public Builder(GraphQLApiOpenidConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authTtl = defaults.authTtl;
    	      this.clientId = defaults.clientId;
    	      this.iatTtl = defaults.iatTtl;
    	      this.issuer = defaults.issuer;
        }

        @CustomType.Setter
        public Builder authTtl(@Nullable Integer authTtl) {
            this.authTtl = authTtl;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder iatTtl(@Nullable Integer iatTtl) {
            this.iatTtl = iatTtl;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public GraphQLApiOpenidConnectConfig build() {
            final var _resultValue = new GraphQLApiOpenidConnectConfig();
            _resultValue.authTtl = authTtl;
            _resultValue.clientId = clientId;
            _resultValue.iatTtl = iatTtl;
            _resultValue.issuer = issuer;
            return _resultValue;
        }
    }
}
