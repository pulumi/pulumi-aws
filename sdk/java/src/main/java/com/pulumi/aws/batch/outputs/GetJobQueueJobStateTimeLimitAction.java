// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetJobQueueJobStateTimeLimitAction {
    private String action;
    private Integer maxTimeSeconds;
    private String reason;
    /**
     * @return Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
     * 
     */
    private String state;

    private GetJobQueueJobStateTimeLimitAction() {}
    public String action() {
        return this.action;
    }
    public Integer maxTimeSeconds() {
        return this.maxTimeSeconds;
    }
    public String reason() {
        return this.reason;
    }
    /**
     * @return Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobQueueJobStateTimeLimitAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private Integer maxTimeSeconds;
        private String reason;
        private String state;
        public Builder() {}
        public Builder(GetJobQueueJobStateTimeLimitAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.maxTimeSeconds = defaults.maxTimeSeconds;
    	      this.reason = defaults.reason;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetJobQueueJobStateTimeLimitAction", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder maxTimeSeconds(Integer maxTimeSeconds) {
            if (maxTimeSeconds == null) {
              throw new MissingRequiredPropertyException("GetJobQueueJobStateTimeLimitAction", "maxTimeSeconds");
            }
            this.maxTimeSeconds = maxTimeSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetJobQueueJobStateTimeLimitAction", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetJobQueueJobStateTimeLimitAction", "state");
            }
            this.state = state;
            return this;
        }
        public GetJobQueueJobStateTimeLimitAction build() {
            final var _resultValue = new GetJobQueueJobStateTimeLimitAction();
            _resultValue.action = action;
            _resultValue.maxTimeSeconds = maxTimeSeconds;
            _resultValue.reason = reason;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
