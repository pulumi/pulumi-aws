// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.aws.kendra.inputs.DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs Empty = new DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs();

    /**
     * The identifier of the target document attribute or metadata field. For example, &#39;Department&#39; could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
     * 
     */
    @Import(name="targetDocumentAttributeKey")
    private @Nullable Output<String> targetDocumentAttributeKey;

    /**
     * @return The identifier of the target document attribute or metadata field. For example, &#39;Department&#39; could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
     * 
     */
    public Optional<Output<String>> targetDocumentAttributeKey() {
        return Optional.ofNullable(this.targetDocumentAttributeKey);
    }

    /**
     * The target value you want to create for the target attribute. For example, &#39;Finance&#39; could be the target value for the target attribute key &#39;Department&#39;. See target_document_attribute_value.
     * 
     */
    @Import(name="targetDocumentAttributeValue")
    private @Nullable Output<DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs> targetDocumentAttributeValue;

    /**
     * @return The target value you want to create for the target attribute. For example, &#39;Finance&#39; could be the target value for the target attribute key &#39;Department&#39;. See target_document_attribute_value.
     * 
     */
    public Optional<Output<DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs>> targetDocumentAttributeValue() {
        return Optional.ofNullable(this.targetDocumentAttributeValue);
    }

    /**
     * `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
     * 
     */
    @Import(name="targetDocumentAttributeValueDeletion")
    private @Nullable Output<Boolean> targetDocumentAttributeValueDeletion;

    /**
     * @return `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
     * 
     */
    public Optional<Output<Boolean>> targetDocumentAttributeValueDeletion() {
        return Optional.ofNullable(this.targetDocumentAttributeValueDeletion);
    }

    private DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs() {}

    private DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs $) {
        this.targetDocumentAttributeKey = $.targetDocumentAttributeKey;
        this.targetDocumentAttributeValue = $.targetDocumentAttributeValue;
        this.targetDocumentAttributeValueDeletion = $.targetDocumentAttributeValueDeletion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs $;

        public Builder() {
            $ = new DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs();
        }

        public Builder(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs defaults) {
            $ = new DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetDocumentAttributeKey The identifier of the target document attribute or metadata field. For example, &#39;Department&#39; could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeKey(@Nullable Output<String> targetDocumentAttributeKey) {
            $.targetDocumentAttributeKey = targetDocumentAttributeKey;
            return this;
        }

        /**
         * @param targetDocumentAttributeKey The identifier of the target document attribute or metadata field. For example, &#39;Department&#39; could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeKey(String targetDocumentAttributeKey) {
            return targetDocumentAttributeKey(Output.of(targetDocumentAttributeKey));
        }

        /**
         * @param targetDocumentAttributeValue The target value you want to create for the target attribute. For example, &#39;Finance&#39; could be the target value for the target attribute key &#39;Department&#39;. See target_document_attribute_value.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeValue(@Nullable Output<DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs> targetDocumentAttributeValue) {
            $.targetDocumentAttributeValue = targetDocumentAttributeValue;
            return this;
        }

        /**
         * @param targetDocumentAttributeValue The target value you want to create for the target attribute. For example, &#39;Finance&#39; could be the target value for the target attribute key &#39;Department&#39;. See target_document_attribute_value.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeValue(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs targetDocumentAttributeValue) {
            return targetDocumentAttributeValue(Output.of(targetDocumentAttributeValue));
        }

        /**
         * @param targetDocumentAttributeValueDeletion `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeValueDeletion(@Nullable Output<Boolean> targetDocumentAttributeValueDeletion) {
            $.targetDocumentAttributeValueDeletion = targetDocumentAttributeValueDeletion;
            return this;
        }

        /**
         * @param targetDocumentAttributeValueDeletion `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder targetDocumentAttributeValueDeletion(Boolean targetDocumentAttributeValueDeletion) {
            return targetDocumentAttributeValueDeletion(Output.of(targetDocumentAttributeValueDeletion));
        }

        public DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs build() {
            return $;
        }
    }

}
