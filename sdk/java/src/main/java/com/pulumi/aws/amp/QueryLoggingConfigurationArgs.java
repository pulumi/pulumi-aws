// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amp;

import com.pulumi.aws.amp.inputs.QueryLoggingConfigurationDestinationArgs;
import com.pulumi.aws.amp.inputs.QueryLoggingConfigurationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueryLoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueryLoggingConfigurationArgs Empty = new QueryLoggingConfigurationArgs();

    /**
     * Configuration block for the logging destinations. See `destinations`.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<QueryLoggingConfigurationDestinationArgs>> destinations;

    /**
     * @return Configuration block for the logging destinations. See `destinations`.
     * 
     */
    public Optional<Output<List<QueryLoggingConfigurationDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="timeouts")
    private @Nullable Output<QueryLoggingConfigurationTimeoutsArgs> timeouts;

    public Optional<Output<QueryLoggingConfigurationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The ID of the AMP workspace for which to configure query logging.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The ID of the AMP workspace for which to configure query logging.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private QueryLoggingConfigurationArgs() {}

    private QueryLoggingConfigurationArgs(QueryLoggingConfigurationArgs $) {
        this.destinations = $.destinations;
        this.region = $.region;
        this.timeouts = $.timeouts;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryLoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryLoggingConfigurationArgs $;

        public Builder() {
            $ = new QueryLoggingConfigurationArgs();
        }

        public Builder(QueryLoggingConfigurationArgs defaults) {
            $ = new QueryLoggingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations Configuration block for the logging destinations. See `destinations`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<QueryLoggingConfigurationDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations Configuration block for the logging destinations. See `destinations`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<QueryLoggingConfigurationDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations Configuration block for the logging destinations. See `destinations`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(QueryLoggingConfigurationDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder timeouts(@Nullable Output<QueryLoggingConfigurationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(QueryLoggingConfigurationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param workspaceId The ID of the AMP workspace for which to configure query logging.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the AMP workspace for which to configure query logging.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public QueryLoggingConfigurationArgs build() {
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("QueryLoggingConfigurationArgs", "workspaceId");
            }
            return $;
        }
    }

}
