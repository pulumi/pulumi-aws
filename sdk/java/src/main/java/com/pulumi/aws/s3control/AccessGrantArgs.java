// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control;

import com.pulumi.aws.s3control.inputs.AccessGrantAccessGrantsLocationConfigurationArgs;
import com.pulumi.aws.s3control.inputs.AccessGrantGranteeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessGrantArgs Empty = new AccessGrantArgs();

    /**
     * See Location Configuration below for more details.
     * 
     */
    @Import(name="accessGrantsLocationConfiguration")
    private @Nullable Output<AccessGrantAccessGrantsLocationConfigurationArgs> accessGrantsLocationConfiguration;

    /**
     * @return See Location Configuration below for more details.
     * 
     */
    public Optional<Output<AccessGrantAccessGrantsLocationConfigurationArgs>> accessGrantsLocationConfiguration() {
        return Optional.ofNullable(this.accessGrantsLocationConfiguration);
    }

    /**
     * The ID of the S3 Access Grants location to with the access grant is giving access.
     * 
     */
    @Import(name="accessGrantsLocationId", required=true)
    private Output<String> accessGrantsLocationId;

    /**
     * @return The ID of the S3 Access Grants location to with the access grant is giving access.
     * 
     */
    public Output<String> accessGrantsLocationId() {
        return this.accessGrantsLocationId;
    }

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * See Grantee below for more details.
     * 
     */
    @Import(name="grantee")
    private @Nullable Output<AccessGrantGranteeArgs> grantee;

    /**
     * @return See Grantee below for more details.
     * 
     */
    public Optional<Output<AccessGrantGranteeArgs>> grantee() {
        return Optional.ofNullable(this.grantee);
    }

    /**
     * The access grant&#39;s level of access. Valid values: `READ`, `WRITE`, `READWRITE`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return The access grant&#39;s level of access. Valid values: `READ`, `WRITE`, `READWRITE`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    /**
     * If you are creating an access grant that grants access to only one object, set this to `Object`. Valid values: `Object`.
     * 
     */
    @Import(name="s3PrefixType")
    private @Nullable Output<String> s3PrefixType;

    /**
     * @return If you are creating an access grant that grants access to only one object, set this to `Object`. Valid values: `Object`.
     * 
     */
    public Optional<Output<String>> s3PrefixType() {
        return Optional.ofNullable(this.s3PrefixType);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AccessGrantArgs() {}

    private AccessGrantArgs(AccessGrantArgs $) {
        this.accessGrantsLocationConfiguration = $.accessGrantsLocationConfiguration;
        this.accessGrantsLocationId = $.accessGrantsLocationId;
        this.accountId = $.accountId;
        this.grantee = $.grantee;
        this.permission = $.permission;
        this.s3PrefixType = $.s3PrefixType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessGrantArgs $;

        public Builder() {
            $ = new AccessGrantArgs();
        }

        public Builder(AccessGrantArgs defaults) {
            $ = new AccessGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessGrantsLocationConfiguration See Location Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsLocationConfiguration(@Nullable Output<AccessGrantAccessGrantsLocationConfigurationArgs> accessGrantsLocationConfiguration) {
            $.accessGrantsLocationConfiguration = accessGrantsLocationConfiguration;
            return this;
        }

        /**
         * @param accessGrantsLocationConfiguration See Location Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsLocationConfiguration(AccessGrantAccessGrantsLocationConfigurationArgs accessGrantsLocationConfiguration) {
            return accessGrantsLocationConfiguration(Output.of(accessGrantsLocationConfiguration));
        }

        /**
         * @param accessGrantsLocationId The ID of the S3 Access Grants location to with the access grant is giving access.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsLocationId(Output<String> accessGrantsLocationId) {
            $.accessGrantsLocationId = accessGrantsLocationId;
            return this;
        }

        /**
         * @param accessGrantsLocationId The ID of the S3 Access Grants location to with the access grant is giving access.
         * 
         * @return builder
         * 
         */
        public Builder accessGrantsLocationId(String accessGrantsLocationId) {
            return accessGrantsLocationId(Output.of(accessGrantsLocationId));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param grantee See Grantee below for more details.
         * 
         * @return builder
         * 
         */
        public Builder grantee(@Nullable Output<AccessGrantGranteeArgs> grantee) {
            $.grantee = grantee;
            return this;
        }

        /**
         * @param grantee See Grantee below for more details.
         * 
         * @return builder
         * 
         */
        public Builder grantee(AccessGrantGranteeArgs grantee) {
            return grantee(Output.of(grantee));
        }

        /**
         * @param permission The access grant&#39;s level of access. Valid values: `READ`, `WRITE`, `READWRITE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The access grant&#39;s level of access. Valid values: `READ`, `WRITE`, `READWRITE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param s3PrefixType If you are creating an access grant that grants access to only one object, set this to `Object`. Valid values: `Object`.
         * 
         * @return builder
         * 
         */
        public Builder s3PrefixType(@Nullable Output<String> s3PrefixType) {
            $.s3PrefixType = s3PrefixType;
            return this;
        }

        /**
         * @param s3PrefixType If you are creating an access grant that grants access to only one object, set this to `Object`. Valid values: `Object`.
         * 
         * @return builder
         * 
         */
        public Builder s3PrefixType(String s3PrefixType) {
            return s3PrefixType(Output.of(s3PrefixType));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AccessGrantArgs build() {
            if ($.accessGrantsLocationId == null) {
                throw new MissingRequiredPropertyException("AccessGrantArgs", "accessGrantsLocationId");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("AccessGrantArgs", "permission");
            }
            return $;
        }
    }

}
