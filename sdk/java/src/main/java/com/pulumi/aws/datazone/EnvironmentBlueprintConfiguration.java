// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.datazone.EnvironmentBlueprintConfigurationArgs;
import com.pulumi.aws.datazone.inputs.EnvironmentBlueprintConfigurationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS DataZone Environment Blueprint Configuration.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.datazone.Domain;
 * import com.pulumi.aws.datazone.DomainArgs;
 * import com.pulumi.aws.datazone.DatazoneFunctions;
 * import com.pulumi.aws.datazone.inputs.GetEnvironmentBlueprintArgs;
 * import com.pulumi.aws.datazone.EnvironmentBlueprintConfiguration;
 * import com.pulumi.aws.datazone.EnvironmentBlueprintConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Domain("example", DomainArgs.builder()        
 *             .name("example_domain")
 *             .domainExecutionRole(domainExecutionRole.arn())
 *             .build());
 * 
 *         final var defaultDataLake = DatazoneFunctions.getEnvironmentBlueprint(GetEnvironmentBlueprintArgs.builder()
 *             .domainId(example.id())
 *             .name("DefaultDataLake")
 *             .managed(true)
 *             .build());
 * 
 *         var exampleEnvironmentBlueprintConfiguration = new EnvironmentBlueprintConfiguration("exampleEnvironmentBlueprintConfiguration", EnvironmentBlueprintConfigurationArgs.builder()        
 *             .domainId(example.id())
 *             .environmentBlueprintId(defaultDataLake.applyValue(getEnvironmentBlueprintResult -> getEnvironmentBlueprintResult).applyValue(defaultDataLake -> defaultDataLake.applyValue(getEnvironmentBlueprintResult -> getEnvironmentBlueprintResult.id())))
 *             .enabledRegions("us-east-1")
 *             .regionalParameters(Map.of("us-east-1", Map.of("s3Location", "s3://my-amazon-datazone-bucket")))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import DataZone Environment Blueprint Configuration using the `domain_id` and `environment_blueprint_id`, separated by a `/`. For example:
 * 
 * ```sh
 * $ pulumi import aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration example domain-id-12345/environment-blueprint-id-54321
 * ```
 * 
 */
@ResourceType(type="aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration")
public class EnvironmentBlueprintConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * ID of the Domain.
     * 
     */
    @Export(name="domainId", refs={String.class}, tree="[0]")
    private Output<String> domainId;

    /**
     * @return ID of the Domain.
     * 
     */
    public Output<String> domainId() {
        return this.domainId;
    }
    /**
     * Regions in which the blueprint is enabled
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="enabledRegions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> enabledRegions;

    /**
     * @return Regions in which the blueprint is enabled
     * 
     * The following arguments are optional:
     * 
     */
    public Output<List<String>> enabledRegions() {
        return this.enabledRegions;
    }
    /**
     * ID of the Environment Blueprint
     * 
     */
    @Export(name="environmentBlueprintId", refs={String.class}, tree="[0]")
    private Output<String> environmentBlueprintId;

    /**
     * @return ID of the Environment Blueprint
     * 
     */
    public Output<String> environmentBlueprintId() {
        return this.environmentBlueprintId;
    }
    /**
     * ARN of the manage access role with which this blueprint is created.
     * 
     */
    @Export(name="manageAccessRoleArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> manageAccessRoleArn;

    /**
     * @return ARN of the manage access role with which this blueprint is created.
     * 
     */
    public Output<Optional<String>> manageAccessRoleArn() {
        return Codegen.optional(this.manageAccessRoleArn);
    }
    /**
     * ARN of the provisioning role with which this blueprint is created.
     * 
     */
    @Export(name="provisioningRoleArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> provisioningRoleArn;

    /**
     * @return ARN of the provisioning role with which this blueprint is created.
     * 
     */
    public Output<Optional<String>> provisioningRoleArn() {
        return Codegen.optional(this.provisioningRoleArn);
    }
    /**
     * Parameters for each region in which the blueprint is enabled
     * 
     */
    @Export(name="regionalParameters", refs={Map.class,String.class}, tree="[0,1,[0,1,1]]")
    private Output</* @Nullable */ Map<String,Map<String,String>>> regionalParameters;

    /**
     * @return Parameters for each region in which the blueprint is enabled
     * 
     */
    public Output<Optional<Map<String,Map<String,String>>>> regionalParameters() {
        return Codegen.optional(this.regionalParameters);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EnvironmentBlueprintConfiguration(String name) {
        this(name, EnvironmentBlueprintConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EnvironmentBlueprintConfiguration(String name, EnvironmentBlueprintConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EnvironmentBlueprintConfiguration(String name, EnvironmentBlueprintConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, args == null ? EnvironmentBlueprintConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EnvironmentBlueprintConfiguration(String name, Output<String> id, @Nullable EnvironmentBlueprintConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EnvironmentBlueprintConfiguration get(String name, Output<String> id, @Nullable EnvironmentBlueprintConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EnvironmentBlueprintConfiguration(name, id, state, options);
    }
}
