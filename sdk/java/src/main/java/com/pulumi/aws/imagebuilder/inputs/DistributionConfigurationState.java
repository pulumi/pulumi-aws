// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.DistributionConfigurationDistributionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final DistributionConfigurationState Empty = new DistributionConfigurationState();

    /**
     * (Required) Amazon Resource Name (ARN) of the distribution configuration.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return (Required) Amazon Resource Name (ARN) of the distribution configuration.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Date the distribution configuration was created.
     * 
     */
    @Import(name="dateCreated")
    private @Nullable Output<String> dateCreated;

    /**
     * @return Date the distribution configuration was created.
     * 
     */
    public Optional<Output<String>> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }

    /**
     * Date the distribution configuration was updated.
     * 
     */
    @Import(name="dateUpdated")
    private @Nullable Output<String> dateUpdated;

    /**
     * @return Date the distribution configuration was updated.
     * 
     */
    public Optional<Output<String>> dateUpdated() {
        return Optional.ofNullable(this.dateUpdated);
    }

    /**
     * Description of the distribution configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the distribution configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * One or more configuration blocks with distribution settings. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="distributions")
    private @Nullable Output<List<DistributionConfigurationDistributionArgs>> distributions;

    /**
     * @return One or more configuration blocks with distribution settings. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<List<DistributionConfigurationDistributionArgs>>> distributions() {
        return Optional.ofNullable(this.distributions);
    }

    /**
     * Name of the distribution configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the distribution configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value map of resource tags for the distribution configuration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags for the distribution configuration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DistributionConfigurationState() {}

    private DistributionConfigurationState(DistributionConfigurationState $) {
        this.arn = $.arn;
        this.dateCreated = $.dateCreated;
        this.dateUpdated = $.dateUpdated;
        this.description = $.description;
        this.distributions = $.distributions;
        this.name = $.name;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionConfigurationState $;

        public Builder() {
            $ = new DistributionConfigurationState();
        }

        public Builder(DistributionConfigurationState defaults) {
            $ = new DistributionConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn (Required) Amazon Resource Name (ARN) of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn (Required) Amazon Resource Name (ARN) of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param dateCreated Date the distribution configuration was created.
         * 
         * @return builder
         * 
         */
        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            $.dateCreated = dateCreated;
            return this;
        }

        /**
         * @param dateCreated Date the distribution configuration was created.
         * 
         * @return builder
         * 
         */
        public Builder dateCreated(String dateCreated) {
            return dateCreated(Output.of(dateCreated));
        }

        /**
         * @param dateUpdated Date the distribution configuration was updated.
         * 
         * @return builder
         * 
         */
        public Builder dateUpdated(@Nullable Output<String> dateUpdated) {
            $.dateUpdated = dateUpdated;
            return this;
        }

        /**
         * @param dateUpdated Date the distribution configuration was updated.
         * 
         * @return builder
         * 
         */
        public Builder dateUpdated(String dateUpdated) {
            return dateUpdated(Output.of(dateUpdated));
        }

        /**
         * @param description Description of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param distributions One or more configuration blocks with distribution settings. Detailed below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder distributions(@Nullable Output<List<DistributionConfigurationDistributionArgs>> distributions) {
            $.distributions = distributions;
            return this;
        }

        /**
         * @param distributions One or more configuration blocks with distribution settings. Detailed below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder distributions(List<DistributionConfigurationDistributionArgs> distributions) {
            return distributions(Output.of(distributions));
        }

        /**
         * @param distributions One or more configuration blocks with distribution settings. Detailed below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder distributions(DistributionConfigurationDistributionArgs... distributions) {
            return distributions(List.of(distributions));
        }

        /**
         * @param name Name of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Key-value map of resource tags for the distribution configuration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags for the distribution configuration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DistributionConfigurationState build() {
            return $;
        }
    }

}
