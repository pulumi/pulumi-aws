// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketOwnershipControlsRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketOwnershipControlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketOwnershipControlsArgs Empty = new BucketOwnershipControlsArgs();

    /**
     * Name of the bucket that you want to associate this access point with.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Name of the bucket that you want to associate this access point with.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Configuration block(s) with Ownership Controls rules. Detailed below.
     * 
     */
    @Import(name="rule", required=true)
    private Output<BucketOwnershipControlsRuleArgs> rule;

    /**
     * @return Configuration block(s) with Ownership Controls rules. Detailed below.
     * 
     */
    public Output<BucketOwnershipControlsRuleArgs> rule() {
        return this.rule;
    }

    private BucketOwnershipControlsArgs() {}

    private BucketOwnershipControlsArgs(BucketOwnershipControlsArgs $) {
        this.bucket = $.bucket;
        this.region = $.region;
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketOwnershipControlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketOwnershipControlsArgs $;

        public Builder() {
            $ = new BucketOwnershipControlsArgs();
        }

        public Builder(BucketOwnershipControlsArgs defaults) {
            $ = new BucketOwnershipControlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket that you want to associate this access point with.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket that you want to associate this access point with.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param rule Configuration block(s) with Ownership Controls rules. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rule(Output<BucketOwnershipControlsRuleArgs> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule Configuration block(s) with Ownership Controls rules. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rule(BucketOwnershipControlsRuleArgs rule) {
            return rule(Output.of(rule));
        }

        public BucketOwnershipControlsArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketOwnershipControlsArgs", "bucket");
            }
            if ($.rule == null) {
                throw new MissingRequiredPropertyException("BucketOwnershipControlsArgs", "rule");
            }
            return $;
        }
    }

}
