// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ThemeConfigurationSheetTileArgs;
import com.pulumi.aws.quicksight.inputs.ThemeConfigurationSheetTileLayoutArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThemeConfigurationSheetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThemeConfigurationSheetArgs Empty = new ThemeConfigurationSheetArgs();

    /**
     * The display options for tiles. See tile.
     * 
     */
    @Import(name="tile")
    private @Nullable Output<ThemeConfigurationSheetTileArgs> tile;

    /**
     * @return The display options for tiles. See tile.
     * 
     */
    public Optional<Output<ThemeConfigurationSheetTileArgs>> tile() {
        return Optional.ofNullable(this.tile);
    }

    /**
     * The layout options for tiles. See tile_layout.
     * 
     */
    @Import(name="tileLayout")
    private @Nullable Output<ThemeConfigurationSheetTileLayoutArgs> tileLayout;

    /**
     * @return The layout options for tiles. See tile_layout.
     * 
     */
    public Optional<Output<ThemeConfigurationSheetTileLayoutArgs>> tileLayout() {
        return Optional.ofNullable(this.tileLayout);
    }

    private ThemeConfigurationSheetArgs() {}

    private ThemeConfigurationSheetArgs(ThemeConfigurationSheetArgs $) {
        this.tile = $.tile;
        this.tileLayout = $.tileLayout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThemeConfigurationSheetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThemeConfigurationSheetArgs $;

        public Builder() {
            $ = new ThemeConfigurationSheetArgs();
        }

        public Builder(ThemeConfigurationSheetArgs defaults) {
            $ = new ThemeConfigurationSheetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tile The display options for tiles. See tile.
         * 
         * @return builder
         * 
         */
        public Builder tile(@Nullable Output<ThemeConfigurationSheetTileArgs> tile) {
            $.tile = tile;
            return this;
        }

        /**
         * @param tile The display options for tiles. See tile.
         * 
         * @return builder
         * 
         */
        public Builder tile(ThemeConfigurationSheetTileArgs tile) {
            return tile(Output.of(tile));
        }

        /**
         * @param tileLayout The layout options for tiles. See tile_layout.
         * 
         * @return builder
         * 
         */
        public Builder tileLayout(@Nullable Output<ThemeConfigurationSheetTileLayoutArgs> tileLayout) {
            $.tileLayout = tileLayout;
            return this;
        }

        /**
         * @param tileLayout The layout options for tiles. See tile_layout.
         * 
         * @return builder
         * 
         */
        public Builder tileLayout(ThemeConfigurationSheetTileLayoutArgs tileLayout) {
            return tileLayout(Output.of(tileLayout));
        }

        public ThemeConfigurationSheetArgs build() {
            return $;
        }
    }

}
