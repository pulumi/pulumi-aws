// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc.inputs;

import com.pulumi.aws.vpc.inputs.RouteServerTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteServerState extends com.pulumi.resources.ResourceArgs {

    public static final RouteServerState Empty = new RouteServerState();

    /**
     * The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="amazonSideAsn")
    private @Nullable Output<Integer> amazonSideAsn;

    /**
     * @return The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<Integer>> amazonSideAsn() {
        return Optional.ofNullable(this.amazonSideAsn);
    }

    /**
     * The ARN of the route server.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the route server.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
     * 
     */
    @Import(name="persistRoutes")
    private @Nullable Output<String> persistRoutes;

    /**
     * @return Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
     * 
     */
    public Optional<Output<String>> persistRoutes() {
        return Optional.ofNullable(this.persistRoutes);
    }

    /**
     * The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persist_routes` is enabled.
     * 
     */
    @Import(name="persistRoutesDuration")
    private @Nullable Output<Integer> persistRoutesDuration;

    /**
     * @return The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persist_routes` is enabled.
     * 
     */
    public Optional<Output<Integer>> persistRoutesDuration() {
        return Optional.ofNullable(this.persistRoutesDuration);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The unique identifier of the route server.
     * 
     */
    @Import(name="routeServerId")
    private @Nullable Output<String> routeServerId;

    /**
     * @return The unique identifier of the route server.
     * 
     */
    public Optional<Output<String>> routeServerId() {
        return Optional.ofNullable(this.routeServerId);
    }

    /**
     * Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
     * 
     */
    @Import(name="snsNotificationsEnabled")
    private @Nullable Output<Boolean> snsNotificationsEnabled;

    /**
     * @return Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
     * 
     */
    public Optional<Output<Boolean>> snsNotificationsEnabled() {
        return Optional.ofNullable(this.snsNotificationsEnabled);
    }

    /**
     * The ARN of the SNS topic where notifications are published.
     * 
     */
    @Import(name="snsTopicArn")
    private @Nullable Output<String> snsTopicArn;

    /**
     * @return The ARN of the SNS topic where notifications are published.
     * 
     */
    public Optional<Output<String>> snsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<RouteServerTimeoutsArgs> timeouts;

    public Optional<Output<RouteServerTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private RouteServerState() {}

    private RouteServerState(RouteServerState $) {
        this.amazonSideAsn = $.amazonSideAsn;
        this.arn = $.arn;
        this.persistRoutes = $.persistRoutes;
        this.persistRoutesDuration = $.persistRoutesDuration;
        this.region = $.region;
        this.routeServerId = $.routeServerId;
        this.snsNotificationsEnabled = $.snsNotificationsEnabled;
        this.snsTopicArn = $.snsTopicArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteServerState $;

        public Builder() {
            $ = new RouteServerState();
        }

        public Builder(RouteServerState defaults) {
            $ = new RouteServerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazonSideAsn The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder amazonSideAsn(@Nullable Output<Integer> amazonSideAsn) {
            $.amazonSideAsn = amazonSideAsn;
            return this;
        }

        /**
         * @param amazonSideAsn The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder amazonSideAsn(Integer amazonSideAsn) {
            return amazonSideAsn(Output.of(amazonSideAsn));
        }

        /**
         * @param arn The ARN of the route server.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the route server.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param persistRoutes Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
         * 
         * @return builder
         * 
         */
        public Builder persistRoutes(@Nullable Output<String> persistRoutes) {
            $.persistRoutes = persistRoutes;
            return this;
        }

        /**
         * @param persistRoutes Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
         * 
         * @return builder
         * 
         */
        public Builder persistRoutes(String persistRoutes) {
            return persistRoutes(Output.of(persistRoutes));
        }

        /**
         * @param persistRoutesDuration The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persist_routes` is enabled.
         * 
         * @return builder
         * 
         */
        public Builder persistRoutesDuration(@Nullable Output<Integer> persistRoutesDuration) {
            $.persistRoutesDuration = persistRoutesDuration;
            return this;
        }

        /**
         * @param persistRoutesDuration The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persist_routes` is enabled.
         * 
         * @return builder
         * 
         */
        public Builder persistRoutesDuration(Integer persistRoutesDuration) {
            return persistRoutesDuration(Output.of(persistRoutesDuration));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param routeServerId The unique identifier of the route server.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(@Nullable Output<String> routeServerId) {
            $.routeServerId = routeServerId;
            return this;
        }

        /**
         * @param routeServerId The unique identifier of the route server.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(String routeServerId) {
            return routeServerId(Output.of(routeServerId));
        }

        /**
         * @param snsNotificationsEnabled Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
         * 
         * @return builder
         * 
         */
        public Builder snsNotificationsEnabled(@Nullable Output<Boolean> snsNotificationsEnabled) {
            $.snsNotificationsEnabled = snsNotificationsEnabled;
            return this;
        }

        /**
         * @param snsNotificationsEnabled Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
         * 
         * @return builder
         * 
         */
        public Builder snsNotificationsEnabled(Boolean snsNotificationsEnabled) {
            return snsNotificationsEnabled(Output.of(snsNotificationsEnabled));
        }

        /**
         * @param snsTopicArn The ARN of the SNS topic where notifications are published.
         * 
         * @return builder
         * 
         */
        public Builder snsTopicArn(@Nullable Output<String> snsTopicArn) {
            $.snsTopicArn = snsTopicArn;
            return this;
        }

        /**
         * @param snsTopicArn The ARN of the SNS topic where notifications are published.
         * 
         * @return builder
         * 
         */
        public Builder snsTopicArn(String snsTopicArn) {
            return snsTopicArn(Output.of(snsTopicArn));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<RouteServerTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(RouteServerTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public RouteServerState build() {
            return $;
        }
    }

}
