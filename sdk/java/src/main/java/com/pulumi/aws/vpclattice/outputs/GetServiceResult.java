// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.outputs;

import com.pulumi.aws.vpclattice.outputs.GetServiceDnsEntry;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceResult {
    /**
     * @return ARN of the service.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Type of IAM policy. Either `NONE` or `AWS_IAM`.
     * 
     */
    private @Nullable String authType;
    /**
     * @return Amazon Resource Name (ARN) of the certificate.
     * 
     */
    private @Nullable String certificateArn;
    /**
     * @return Custom domain name of the service.
     * 
     */
    private @Nullable String customDomainName;
    /**
     * @return DNS name of the service.
     * 
     */
    private @Nullable List<GetServiceDnsEntry> dnsEntries;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String name;
    private @Nullable String serviceIdentifier;
    /**
     * @return Status of the service.
     * 
     */
    private @Nullable String status;
    /**
     * @return List of tags associated with the service.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetServiceResult() {}
    /**
     * @return ARN of the service.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Type of IAM policy. Either `NONE` or `AWS_IAM`.
     * 
     */
    public Optional<String> authType() {
        return Optional.ofNullable(this.authType);
    }
    /**
     * @return Amazon Resource Name (ARN) of the certificate.
     * 
     */
    public Optional<String> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }
    /**
     * @return Custom domain name of the service.
     * 
     */
    public Optional<String> customDomainName() {
        return Optional.ofNullable(this.customDomainName);
    }
    /**
     * @return DNS name of the service.
     * 
     */
    public List<GetServiceDnsEntry> dnsEntries() {
        return this.dnsEntries == null ? List.of() : this.dnsEntries;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> serviceIdentifier() {
        return Optional.ofNullable(this.serviceIdentifier);
    }
    /**
     * @return Status of the service.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return List of tags associated with the service.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String authType;
        private @Nullable String certificateArn;
        private @Nullable String customDomainName;
        private @Nullable List<GetServiceDnsEntry> dnsEntries;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String serviceIdentifier;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.authType = defaults.authType;
    	      this.certificateArn = defaults.certificateArn;
    	      this.customDomainName = defaults.customDomainName;
    	      this.dnsEntries = defaults.dnsEntries;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.serviceIdentifier = defaults.serviceIdentifier;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder authType(@Nullable String authType) {
            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder certificateArn(@Nullable String certificateArn) {
            this.certificateArn = certificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder customDomainName(@Nullable String customDomainName) {
            this.customDomainName = customDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsEntries(@Nullable List<GetServiceDnsEntry> dnsEntries) {
            this.dnsEntries = dnsEntries;
            return this;
        }
        public Builder dnsEntries(GetServiceDnsEntry... dnsEntries) {
            return dnsEntries(List.of(dnsEntries));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceIdentifier(@Nullable String serviceIdentifier) {
            this.serviceIdentifier = serviceIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetServiceResult build() {
            final var o = new GetServiceResult();
            o.arn = arn;
            o.authType = authType;
            o.certificateArn = certificateArn;
            o.customDomainName = customDomainName;
            o.dnsEntries = dnsEntries;
            o.id = id;
            o.name = name;
            o.serviceIdentifier = serviceIdentifier;
            o.status = status;
            o.tags = tags;
            return o;
        }
    }
}
