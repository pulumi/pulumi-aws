// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs Empty = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs();

    /**
     * Command App Runner runs to build your application.
     * 
     */
    @Import(name="buildCommand")
    private @Nullable Output<String> buildCommand;

    /**
     * @return Command App Runner runs to build your application.
     * 
     */
    public Optional<Output<String>> buildCommand() {
        return Optional.ofNullable(this.buildCommand);
    }

    /**
     * Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
     * 
     */
    @Import(name="runtime", required=true)
    private Output<String> runtime;

    /**
     * @return Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
     * 
     */
    public Output<String> runtime() {
        return this.runtime;
    }

    /**
     * Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
     * 
     */
    @Import(name="runtimeEnvironmentSecrets")
    private @Nullable Output<Map<String,String>> runtimeEnvironmentSecrets;

    /**
     * @return Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
     * 
     */
    public Optional<Output<Map<String,String>>> runtimeEnvironmentSecrets() {
        return Optional.ofNullable(this.runtimeEnvironmentSecrets);
    }

    /**
     * Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
     * 
     */
    @Import(name="runtimeEnvironmentVariables")
    private @Nullable Output<Map<String,String>> runtimeEnvironmentVariables;

    /**
     * @return Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
     * 
     */
    public Optional<Output<Map<String,String>>> runtimeEnvironmentVariables() {
        return Optional.ofNullable(this.runtimeEnvironmentVariables);
    }

    /**
     * Command App Runner runs to start your application.
     * 
     */
    @Import(name="startCommand")
    private @Nullable Output<String> startCommand;

    /**
     * @return Command App Runner runs to start your application.
     * 
     */
    public Optional<Output<String>> startCommand() {
        return Optional.ofNullable(this.startCommand);
    }

    private ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs() {}

    private ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs $) {
        this.buildCommand = $.buildCommand;
        this.port = $.port;
        this.runtime = $.runtime;
        this.runtimeEnvironmentSecrets = $.runtimeEnvironmentSecrets;
        this.runtimeEnvironmentVariables = $.runtimeEnvironmentVariables;
        this.startCommand = $.startCommand;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs $;

        public Builder() {
            $ = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs();
        }

        public Builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs defaults) {
            $ = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildCommand Command App Runner runs to build your application.
         * 
         * @return builder
         * 
         */
        public Builder buildCommand(@Nullable Output<String> buildCommand) {
            $.buildCommand = buildCommand;
            return this;
        }

        /**
         * @param buildCommand Command App Runner runs to build your application.
         * 
         * @return builder
         * 
         */
        public Builder buildCommand(String buildCommand) {
            return buildCommand(Output.of(buildCommand));
        }

        /**
         * @param port Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param runtime Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
         * 
         * @return builder
         * 
         */
        public Builder runtime(Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        /**
         * @param runtime Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
         * 
         * @return builder
         * 
         */
        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        /**
         * @param runtimeEnvironmentSecrets Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
         * 
         * @return builder
         * 
         */
        public Builder runtimeEnvironmentSecrets(@Nullable Output<Map<String,String>> runtimeEnvironmentSecrets) {
            $.runtimeEnvironmentSecrets = runtimeEnvironmentSecrets;
            return this;
        }

        /**
         * @param runtimeEnvironmentSecrets Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
         * 
         * @return builder
         * 
         */
        public Builder runtimeEnvironmentSecrets(Map<String,String> runtimeEnvironmentSecrets) {
            return runtimeEnvironmentSecrets(Output.of(runtimeEnvironmentSecrets));
        }

        /**
         * @param runtimeEnvironmentVariables Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
         * 
         * @return builder
         * 
         */
        public Builder runtimeEnvironmentVariables(@Nullable Output<Map<String,String>> runtimeEnvironmentVariables) {
            $.runtimeEnvironmentVariables = runtimeEnvironmentVariables;
            return this;
        }

        /**
         * @param runtimeEnvironmentVariables Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
         * 
         * @return builder
         * 
         */
        public Builder runtimeEnvironmentVariables(Map<String,String> runtimeEnvironmentVariables) {
            return runtimeEnvironmentVariables(Output.of(runtimeEnvironmentVariables));
        }

        /**
         * @param startCommand Command App Runner runs to start your application.
         * 
         * @return builder
         * 
         */
        public Builder startCommand(@Nullable Output<String> startCommand) {
            $.startCommand = startCommand;
            return this;
        }

        /**
         * @param startCommand Command App Runner runs to start your application.
         * 
         * @return builder
         * 
         */
        public Builder startCommand(String startCommand) {
            return startCommand(Output.of(startCommand));
        }

        public ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs build() {
            $.runtime = Objects.requireNonNull($.runtime, "expected parameter 'runtime' to be non-null");
            return $;
        }
    }

}
