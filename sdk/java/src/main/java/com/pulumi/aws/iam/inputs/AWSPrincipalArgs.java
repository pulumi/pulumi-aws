// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * When you use an AWS account identifier as the principal in a policy, the permissions in the policy statement can be granted to all identities contained in that account. This includes IAM users and roles in that account.
 * 
 */
public final class AWSPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final AWSPrincipalArgs Empty = new AWSPrincipalArgs();

    /**
     * AWS account identifier or ARN.
     * 
     */
    @Import(name="AWS", required=true)
    private Output<Either<String,List<String>>> AWS;

    /**
     * @return AWS account identifier or ARN.
     * 
     */
    public Output<Either<String,List<String>>> AWS() {
        return this.AWS;
    }

    private AWSPrincipalArgs() {}

    private AWSPrincipalArgs(AWSPrincipalArgs $) {
        this.AWS = $.AWS;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AWSPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AWSPrincipalArgs $;

        public Builder() {
            $ = new AWSPrincipalArgs();
        }

        public Builder(AWSPrincipalArgs defaults) {
            $ = new AWSPrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param AWS AWS account identifier or ARN.
         * 
         * @return builder
         * 
         */
        public Builder AWS(Output<Either<String,List<String>>> AWS) {
            $.AWS = AWS;
            return this;
        }

        /**
         * @param AWS AWS account identifier or ARN.
         * 
         * @return builder
         * 
         */
        public Builder AWS(Either<String,List<String>> AWS) {
            return AWS(Output.of(AWS));
        }

        /**
         * @param AWS AWS account identifier or ARN.
         * 
         * @return builder
         * 
         */
        public Builder AWS(String AWS) {
            return AWS(Either.ofLeft(AWS));
        }

        /**
         * @param AWS AWS account identifier or ARN.
         * 
         * @return builder
         * 
         */
        public Builder AWS(List<String> AWS) {
            return AWS(Either.ofRight(AWS));
        }

        public AWSPrincipalArgs build() {
            if ($.AWS == null) {
                throw new MissingRequiredPropertyException("AWSPrincipalArgs", "AWS");
            }
            return $;
        }
    }

}
