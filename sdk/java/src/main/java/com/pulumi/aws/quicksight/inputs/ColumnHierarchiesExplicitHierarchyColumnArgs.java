// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ColumnHierarchiesExplicitHierarchyColumnArgs extends com.pulumi.resources.ResourceArgs {

    public static final ColumnHierarchiesExplicitHierarchyColumnArgs Empty = new ColumnHierarchiesExplicitHierarchyColumnArgs();

    @Import(name="columnName", required=true)
    private Output<String> columnName;

    public Output<String> columnName() {
        return this.columnName;
    }

    @Import(name="dataSetIdentifier", required=true)
    private Output<String> dataSetIdentifier;

    public Output<String> dataSetIdentifier() {
        return this.dataSetIdentifier;
    }

    private ColumnHierarchiesExplicitHierarchyColumnArgs() {}

    private ColumnHierarchiesExplicitHierarchyColumnArgs(ColumnHierarchiesExplicitHierarchyColumnArgs $) {
        this.columnName = $.columnName;
        this.dataSetIdentifier = $.dataSetIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColumnHierarchiesExplicitHierarchyColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColumnHierarchiesExplicitHierarchyColumnArgs $;

        public Builder() {
            $ = new ColumnHierarchiesExplicitHierarchyColumnArgs();
        }

        public Builder(ColumnHierarchiesExplicitHierarchyColumnArgs defaults) {
            $ = new ColumnHierarchiesExplicitHierarchyColumnArgs(Objects.requireNonNull(defaults));
        }

        public Builder columnName(Output<String> columnName) {
            $.columnName = columnName;
            return this;
        }

        public Builder columnName(String columnName) {
            return columnName(Output.of(columnName));
        }

        public Builder dataSetIdentifier(Output<String> dataSetIdentifier) {
            $.dataSetIdentifier = dataSetIdentifier;
            return this;
        }

        public Builder dataSetIdentifier(String dataSetIdentifier) {
            return dataSetIdentifier(Output.of(dataSetIdentifier));
        }

        public ColumnHierarchiesExplicitHierarchyColumnArgs build() {
            if ($.columnName == null) {
                throw new MissingRequiredPropertyException("ColumnHierarchiesExplicitHierarchyColumnArgs", "columnName");
            }
            if ($.dataSetIdentifier == null) {
                throw new MissingRequiredPropertyException("ColumnHierarchiesExplicitHierarchyColumnArgs", "dataSetIdentifier");
            }
            return $;
        }
    }

}
