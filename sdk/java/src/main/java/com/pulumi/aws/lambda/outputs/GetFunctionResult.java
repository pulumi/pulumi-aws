// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.aws.lambda.outputs.GetFunctionDeadLetterConfig;
import com.pulumi.aws.lambda.outputs.GetFunctionEnvironment;
import com.pulumi.aws.lambda.outputs.GetFunctionEphemeralStorage;
import com.pulumi.aws.lambda.outputs.GetFunctionFileSystemConfig;
import com.pulumi.aws.lambda.outputs.GetFunctionTracingConfig;
import com.pulumi.aws.lambda.outputs.GetFunctionVpcConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFunctionResult {
    /**
     * @return Instruction set architecture for the Lambda function.
     * 
     */
    private @Nullable List<String> architectures;
    /**
     * @return Unqualified (no `:QUALIFIER` or `:VERSION` suffix) ARN identifying your Lambda Function. See also `qualified_arn`.
     * 
     */
    private @Nullable String arn;
    /**
     * @return ARN for a Code Signing Configuration.
     * 
     */
    private @Nullable String codeSigningConfigArn;
    /**
     * @return Configure the function&#39;s *dead letter queue*.
     * 
     */
    private @Nullable GetFunctionDeadLetterConfig deadLetterConfig;
    /**
     * @return Description of what your Lambda Function does.
     * 
     */
    private @Nullable String description;
    /**
     * @return Lambda environment&#39;s configuration settings.
     * 
     */
    private @Nullable GetFunctionEnvironment environment;
    /**
     * @return Amount of Ephemeral storage(`/tmp`) allocated for the Lambda Function.
     * 
     */
    private @Nullable List<GetFunctionEphemeralStorage> ephemeralStorages;
    /**
     * @return Connection settings for an Amazon EFS file system.
     * 
     */
    private @Nullable List<GetFunctionFileSystemConfig> fileSystemConfigs;
    private String functionName;
    /**
     * @return Function entrypoint in your code.
     * 
     */
    private @Nullable String handler;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return URI of the container image.
     * 
     */
    private @Nullable String imageUri;
    /**
     * @return ARN to be used for invoking Lambda Function from API Gateway. **NOTE:** Starting with `v4.51.0` of the provider, this will *not* include the qualifier.
     * 
     */
    private @Nullable String invokeArn;
    /**
     * @return ARN for the KMS encryption key.
     * 
     */
    private @Nullable String kmsKeyArn;
    /**
     * @return Date this resource was last modified.
     * 
     */
    private @Nullable String lastModified;
    /**
     * @return List of Lambda Layer ARNs attached to your Lambda Function.
     * 
     */
    private @Nullable List<String> layers;
    /**
     * @return Amount of memory in MB your Lambda Function can use at runtime.
     * 
     */
    private @Nullable Integer memorySize;
    /**
     * @return Qualified (`:QUALIFIER` or `:VERSION` suffix) ARN identifying your Lambda Function. See also `arn`.
     * 
     */
    private @Nullable String qualifiedArn;
    /**
     * @return Qualified (`:QUALIFIER` or `:VERSION` suffix) ARN to be used for invoking Lambda Function from API Gateway. See also `invoke_arn`.
     * 
     */
    private @Nullable String qualifiedInvokeArn;
    private @Nullable String qualifier;
    /**
     * @return The amount of reserved concurrent executions for this lambda function or `-1` if unreserved.
     * 
     */
    private @Nullable Integer reservedConcurrentExecutions;
    /**
     * @return IAM role attached to the Lambda Function.
     * 
     */
    private @Nullable String role;
    /**
     * @return Runtime environment for the Lambda function.
     * 
     */
    private @Nullable String runtime;
    /**
     * @return ARN of a signing job.
     * 
     */
    private @Nullable String signingJobArn;
    /**
     * @return The ARN for a signing profile version.
     * 
     */
    private @Nullable String signingProfileVersionArn;
    /**
     * @return Base64-encoded representation of raw SHA-256 sum of the zip file.
     * 
     */
    private @Nullable String sourceCodeHash;
    /**
     * @return Size in bytes of the function .zip file.
     * 
     */
    private @Nullable Integer sourceCodeSize;
    private @Nullable Map<String,String> tags;
    /**
     * @return Function execution time at which Lambda should terminate the function.
     * 
     */
    private @Nullable Integer timeout;
    /**
     * @return Tracing settings of the function.
     * 
     */
    private @Nullable GetFunctionTracingConfig tracingConfig;
    /**
     * @return The version of the Lambda function returned. If `qualifier` is not set, this will resolve to the most recent published version. If no published version of the function exists, `version` will resolve to `$LATEST`.
     * 
     */
    private @Nullable String version;
    /**
     * @return VPC configuration associated with your Lambda function.
     * 
     */
    private @Nullable GetFunctionVpcConfig vpcConfig;

    private GetFunctionResult() {}
    /**
     * @return Instruction set architecture for the Lambda function.
     * 
     */
    public List<String> architectures() {
        return this.architectures == null ? List.of() : this.architectures;
    }
    /**
     * @return Unqualified (no `:QUALIFIER` or `:VERSION` suffix) ARN identifying your Lambda Function. See also `qualified_arn`.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return ARN for a Code Signing Configuration.
     * 
     */
    public Optional<String> codeSigningConfigArn() {
        return Optional.ofNullable(this.codeSigningConfigArn);
    }
    /**
     * @return Configure the function&#39;s *dead letter queue*.
     * 
     */
    public Optional<GetFunctionDeadLetterConfig> deadLetterConfig() {
        return Optional.ofNullable(this.deadLetterConfig);
    }
    /**
     * @return Description of what your Lambda Function does.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Lambda environment&#39;s configuration settings.
     * 
     */
    public Optional<GetFunctionEnvironment> environment() {
        return Optional.ofNullable(this.environment);
    }
    /**
     * @return Amount of Ephemeral storage(`/tmp`) allocated for the Lambda Function.
     * 
     */
    public List<GetFunctionEphemeralStorage> ephemeralStorages() {
        return this.ephemeralStorages == null ? List.of() : this.ephemeralStorages;
    }
    /**
     * @return Connection settings for an Amazon EFS file system.
     * 
     */
    public List<GetFunctionFileSystemConfig> fileSystemConfigs() {
        return this.fileSystemConfigs == null ? List.of() : this.fileSystemConfigs;
    }
    public String functionName() {
        return this.functionName;
    }
    /**
     * @return Function entrypoint in your code.
     * 
     */
    public Optional<String> handler() {
        return Optional.ofNullable(this.handler);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return URI of the container image.
     * 
     */
    public Optional<String> imageUri() {
        return Optional.ofNullable(this.imageUri);
    }
    /**
     * @return ARN to be used for invoking Lambda Function from API Gateway. **NOTE:** Starting with `v4.51.0` of the provider, this will *not* include the qualifier.
     * 
     */
    public Optional<String> invokeArn() {
        return Optional.ofNullable(this.invokeArn);
    }
    /**
     * @return ARN for the KMS encryption key.
     * 
     */
    public Optional<String> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }
    /**
     * @return Date this resource was last modified.
     * 
     */
    public Optional<String> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }
    /**
     * @return List of Lambda Layer ARNs attached to your Lambda Function.
     * 
     */
    public List<String> layers() {
        return this.layers == null ? List.of() : this.layers;
    }
    /**
     * @return Amount of memory in MB your Lambda Function can use at runtime.
     * 
     */
    public Optional<Integer> memorySize() {
        return Optional.ofNullable(this.memorySize);
    }
    /**
     * @return Qualified (`:QUALIFIER` or `:VERSION` suffix) ARN identifying your Lambda Function. See also `arn`.
     * 
     */
    public Optional<String> qualifiedArn() {
        return Optional.ofNullable(this.qualifiedArn);
    }
    /**
     * @return Qualified (`:QUALIFIER` or `:VERSION` suffix) ARN to be used for invoking Lambda Function from API Gateway. See also `invoke_arn`.
     * 
     */
    public Optional<String> qualifiedInvokeArn() {
        return Optional.ofNullable(this.qualifiedInvokeArn);
    }
    public Optional<String> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }
    /**
     * @return The amount of reserved concurrent executions for this lambda function or `-1` if unreserved.
     * 
     */
    public Optional<Integer> reservedConcurrentExecutions() {
        return Optional.ofNullable(this.reservedConcurrentExecutions);
    }
    /**
     * @return IAM role attached to the Lambda Function.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    /**
     * @return Runtime environment for the Lambda function.
     * 
     */
    public Optional<String> runtime() {
        return Optional.ofNullable(this.runtime);
    }
    /**
     * @return ARN of a signing job.
     * 
     */
    public Optional<String> signingJobArn() {
        return Optional.ofNullable(this.signingJobArn);
    }
    /**
     * @return The ARN for a signing profile version.
     * 
     */
    public Optional<String> signingProfileVersionArn() {
        return Optional.ofNullable(this.signingProfileVersionArn);
    }
    /**
     * @return Base64-encoded representation of raw SHA-256 sum of the zip file.
     * 
     */
    public Optional<String> sourceCodeHash() {
        return Optional.ofNullable(this.sourceCodeHash);
    }
    /**
     * @return Size in bytes of the function .zip file.
     * 
     */
    public Optional<Integer> sourceCodeSize() {
        return Optional.ofNullable(this.sourceCodeSize);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Function execution time at which Lambda should terminate the function.
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return Tracing settings of the function.
     * 
     */
    public Optional<GetFunctionTracingConfig> tracingConfig() {
        return Optional.ofNullable(this.tracingConfig);
    }
    /**
     * @return The version of the Lambda function returned. If `qualifier` is not set, this will resolve to the most recent published version. If no published version of the function exists, `version` will resolve to `$LATEST`.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return VPC configuration associated with your Lambda function.
     * 
     */
    public Optional<GetFunctionVpcConfig> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> architectures;
        private @Nullable String arn;
        private @Nullable String codeSigningConfigArn;
        private @Nullable GetFunctionDeadLetterConfig deadLetterConfig;
        private @Nullable String description;
        private @Nullable GetFunctionEnvironment environment;
        private @Nullable List<GetFunctionEphemeralStorage> ephemeralStorages;
        private @Nullable List<GetFunctionFileSystemConfig> fileSystemConfigs;
        private String functionName;
        private @Nullable String handler;
        private @Nullable String id;
        private @Nullable String imageUri;
        private @Nullable String invokeArn;
        private @Nullable String kmsKeyArn;
        private @Nullable String lastModified;
        private @Nullable List<String> layers;
        private @Nullable Integer memorySize;
        private @Nullable String qualifiedArn;
        private @Nullable String qualifiedInvokeArn;
        private @Nullable String qualifier;
        private @Nullable Integer reservedConcurrentExecutions;
        private @Nullable String role;
        private @Nullable String runtime;
        private @Nullable String signingJobArn;
        private @Nullable String signingProfileVersionArn;
        private @Nullable String sourceCodeHash;
        private @Nullable Integer sourceCodeSize;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer timeout;
        private @Nullable GetFunctionTracingConfig tracingConfig;
        private @Nullable String version;
        private @Nullable GetFunctionVpcConfig vpcConfig;
        public Builder() {}
        public Builder(GetFunctionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architectures = defaults.architectures;
    	      this.arn = defaults.arn;
    	      this.codeSigningConfigArn = defaults.codeSigningConfigArn;
    	      this.deadLetterConfig = defaults.deadLetterConfig;
    	      this.description = defaults.description;
    	      this.environment = defaults.environment;
    	      this.ephemeralStorages = defaults.ephemeralStorages;
    	      this.fileSystemConfigs = defaults.fileSystemConfigs;
    	      this.functionName = defaults.functionName;
    	      this.handler = defaults.handler;
    	      this.id = defaults.id;
    	      this.imageUri = defaults.imageUri;
    	      this.invokeArn = defaults.invokeArn;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.lastModified = defaults.lastModified;
    	      this.layers = defaults.layers;
    	      this.memorySize = defaults.memorySize;
    	      this.qualifiedArn = defaults.qualifiedArn;
    	      this.qualifiedInvokeArn = defaults.qualifiedInvokeArn;
    	      this.qualifier = defaults.qualifier;
    	      this.reservedConcurrentExecutions = defaults.reservedConcurrentExecutions;
    	      this.role = defaults.role;
    	      this.runtime = defaults.runtime;
    	      this.signingJobArn = defaults.signingJobArn;
    	      this.signingProfileVersionArn = defaults.signingProfileVersionArn;
    	      this.sourceCodeHash = defaults.sourceCodeHash;
    	      this.sourceCodeSize = defaults.sourceCodeSize;
    	      this.tags = defaults.tags;
    	      this.timeout = defaults.timeout;
    	      this.tracingConfig = defaults.tracingConfig;
    	      this.version = defaults.version;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        @CustomType.Setter
        public Builder architectures(@Nullable List<String> architectures) {
            this.architectures = architectures;
            return this;
        }
        public Builder architectures(String... architectures) {
            return architectures(List.of(architectures));
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder codeSigningConfigArn(@Nullable String codeSigningConfigArn) {
            this.codeSigningConfigArn = codeSigningConfigArn;
            return this;
        }
        @CustomType.Setter
        public Builder deadLetterConfig(@Nullable GetFunctionDeadLetterConfig deadLetterConfig) {
            this.deadLetterConfig = deadLetterConfig;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder environment(@Nullable GetFunctionEnvironment environment) {
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder ephemeralStorages(@Nullable List<GetFunctionEphemeralStorage> ephemeralStorages) {
            this.ephemeralStorages = ephemeralStorages;
            return this;
        }
        public Builder ephemeralStorages(GetFunctionEphemeralStorage... ephemeralStorages) {
            return ephemeralStorages(List.of(ephemeralStorages));
        }
        @CustomType.Setter
        public Builder fileSystemConfigs(@Nullable List<GetFunctionFileSystemConfig> fileSystemConfigs) {
            this.fileSystemConfigs = fileSystemConfigs;
            return this;
        }
        public Builder fileSystemConfigs(GetFunctionFileSystemConfig... fileSystemConfigs) {
            return fileSystemConfigs(List.of(fileSystemConfigs));
        }
        @CustomType.Setter
        public Builder functionName(String functionName) {
            this.functionName = Objects.requireNonNull(functionName);
            return this;
        }
        @CustomType.Setter
        public Builder handler(@Nullable String handler) {
            this.handler = handler;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageUri(@Nullable String imageUri) {
            this.imageUri = imageUri;
            return this;
        }
        @CustomType.Setter
        public Builder invokeArn(@Nullable String invokeArn) {
            this.invokeArn = invokeArn;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(@Nullable String lastModified) {
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder layers(@Nullable List<String> layers) {
            this.layers = layers;
            return this;
        }
        public Builder layers(String... layers) {
            return layers(List.of(layers));
        }
        @CustomType.Setter
        public Builder memorySize(@Nullable Integer memorySize) {
            this.memorySize = memorySize;
            return this;
        }
        @CustomType.Setter
        public Builder qualifiedArn(@Nullable String qualifiedArn) {
            this.qualifiedArn = qualifiedArn;
            return this;
        }
        @CustomType.Setter
        public Builder qualifiedInvokeArn(@Nullable String qualifiedInvokeArn) {
            this.qualifiedInvokeArn = qualifiedInvokeArn;
            return this;
        }
        @CustomType.Setter
        public Builder qualifier(@Nullable String qualifier) {
            this.qualifier = qualifier;
            return this;
        }
        @CustomType.Setter
        public Builder reservedConcurrentExecutions(@Nullable Integer reservedConcurrentExecutions) {
            this.reservedConcurrentExecutions = reservedConcurrentExecutions;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder runtime(@Nullable String runtime) {
            this.runtime = runtime;
            return this;
        }
        @CustomType.Setter
        public Builder signingJobArn(@Nullable String signingJobArn) {
            this.signingJobArn = signingJobArn;
            return this;
        }
        @CustomType.Setter
        public Builder signingProfileVersionArn(@Nullable String signingProfileVersionArn) {
            this.signingProfileVersionArn = signingProfileVersionArn;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCodeHash(@Nullable String sourceCodeHash) {
            this.sourceCodeHash = sourceCodeHash;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCodeSize(@Nullable Integer sourceCodeSize) {
            this.sourceCodeSize = sourceCodeSize;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder tracingConfig(@Nullable GetFunctionTracingConfig tracingConfig) {
            this.tracingConfig = tracingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfig(@Nullable GetFunctionVpcConfig vpcConfig) {
            this.vpcConfig = vpcConfig;
            return this;
        }
        public GetFunctionResult build() {
            final var o = new GetFunctionResult();
            o.architectures = architectures;
            o.arn = arn;
            o.codeSigningConfigArn = codeSigningConfigArn;
            o.deadLetterConfig = deadLetterConfig;
            o.description = description;
            o.environment = environment;
            o.ephemeralStorages = ephemeralStorages;
            o.fileSystemConfigs = fileSystemConfigs;
            o.functionName = functionName;
            o.handler = handler;
            o.id = id;
            o.imageUri = imageUri;
            o.invokeArn = invokeArn;
            o.kmsKeyArn = kmsKeyArn;
            o.lastModified = lastModified;
            o.layers = layers;
            o.memorySize = memorySize;
            o.qualifiedArn = qualifiedArn;
            o.qualifiedInvokeArn = qualifiedInvokeArn;
            o.qualifier = qualifier;
            o.reservedConcurrentExecutions = reservedConcurrentExecutions;
            o.role = role;
            o.runtime = runtime;
            o.signingJobArn = signingJobArn;
            o.signingProfileVersionArn = signingProfileVersionArn;
            o.sourceCodeHash = sourceCodeHash;
            o.sourceCodeSize = sourceCodeSize;
            o.tags = tags;
            o.timeout = timeout;
            o.tracingConfig = tracingConfig;
            o.version = version;
            o.vpcConfig = vpcConfig;
            return o;
        }
    }
}
