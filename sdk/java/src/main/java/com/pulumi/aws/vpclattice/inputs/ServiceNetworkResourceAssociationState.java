// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.inputs;

import com.pulumi.aws.vpclattice.inputs.ServiceNetworkResourceAssociationDnsEntryArgs;
import com.pulumi.aws.vpclattice.inputs.ServiceNetworkResourceAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceNetworkResourceAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceNetworkResourceAssociationState Empty = new ServiceNetworkResourceAssociationState();

    /**
     * ARN of the Service Network Resource Association.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Service Network Resource Association.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * DNS entry of the association in the service network.
     * 
     */
    @Import(name="dnsEntries")
    private @Nullable Output<List<ServiceNetworkResourceAssociationDnsEntryArgs>> dnsEntries;

    /**
     * @return DNS entry of the association in the service network.
     * 
     */
    public Optional<Output<List<ServiceNetworkResourceAssociationDnsEntryArgs>>> dnsEntries() {
        return Optional.ofNullable(this.dnsEntries);
    }

    /**
     * Identifier of Resource Configuration to associate to the Service Network.
     * 
     */
    @Import(name="resourceConfigurationIdentifier")
    private @Nullable Output<String> resourceConfigurationIdentifier;

    /**
     * @return Identifier of Resource Configuration to associate to the Service Network.
     * 
     */
    public Optional<Output<String>> resourceConfigurationIdentifier() {
        return Optional.ofNullable(this.resourceConfigurationIdentifier);
    }

    /**
     * Identifier of the Service Network to associate the Resource to.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="serviceNetworkIdentifier")
    private @Nullable Output<String> serviceNetworkIdentifier;

    /**
     * @return Identifier of the Service Network to associate the Resource to.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> serviceNetworkIdentifier() {
        return Optional.ofNullable(this.serviceNetworkIdentifier);
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<ServiceNetworkResourceAssociationTimeoutsArgs> timeouts;

    public Optional<Output<ServiceNetworkResourceAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ServiceNetworkResourceAssociationState() {}

    private ServiceNetworkResourceAssociationState(ServiceNetworkResourceAssociationState $) {
        this.arn = $.arn;
        this.dnsEntries = $.dnsEntries;
        this.resourceConfigurationIdentifier = $.resourceConfigurationIdentifier;
        this.serviceNetworkIdentifier = $.serviceNetworkIdentifier;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceNetworkResourceAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceNetworkResourceAssociationState $;

        public Builder() {
            $ = new ServiceNetworkResourceAssociationState();
        }

        public Builder(ServiceNetworkResourceAssociationState defaults) {
            $ = new ServiceNetworkResourceAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Service Network Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Service Network Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param dnsEntries DNS entry of the association in the service network.
         * 
         * @return builder
         * 
         */
        public Builder dnsEntries(@Nullable Output<List<ServiceNetworkResourceAssociationDnsEntryArgs>> dnsEntries) {
            $.dnsEntries = dnsEntries;
            return this;
        }

        /**
         * @param dnsEntries DNS entry of the association in the service network.
         * 
         * @return builder
         * 
         */
        public Builder dnsEntries(List<ServiceNetworkResourceAssociationDnsEntryArgs> dnsEntries) {
            return dnsEntries(Output.of(dnsEntries));
        }

        /**
         * @param dnsEntries DNS entry of the association in the service network.
         * 
         * @return builder
         * 
         */
        public Builder dnsEntries(ServiceNetworkResourceAssociationDnsEntryArgs... dnsEntries) {
            return dnsEntries(List.of(dnsEntries));
        }

        /**
         * @param resourceConfigurationIdentifier Identifier of Resource Configuration to associate to the Service Network.
         * 
         * @return builder
         * 
         */
        public Builder resourceConfigurationIdentifier(@Nullable Output<String> resourceConfigurationIdentifier) {
            $.resourceConfigurationIdentifier = resourceConfigurationIdentifier;
            return this;
        }

        /**
         * @param resourceConfigurationIdentifier Identifier of Resource Configuration to associate to the Service Network.
         * 
         * @return builder
         * 
         */
        public Builder resourceConfigurationIdentifier(String resourceConfigurationIdentifier) {
            return resourceConfigurationIdentifier(Output.of(resourceConfigurationIdentifier));
        }

        /**
         * @param serviceNetworkIdentifier Identifier of the Service Network to associate the Resource to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceNetworkIdentifier(@Nullable Output<String> serviceNetworkIdentifier) {
            $.serviceNetworkIdentifier = serviceNetworkIdentifier;
            return this;
        }

        /**
         * @param serviceNetworkIdentifier Identifier of the Service Network to associate the Resource to.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceNetworkIdentifier(String serviceNetworkIdentifier) {
            return serviceNetworkIdentifier(Output.of(serviceNetworkIdentifier));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<ServiceNetworkResourceAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ServiceNetworkResourceAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ServiceNetworkResourceAssociationState build() {
            return $;
        }
    }

}
