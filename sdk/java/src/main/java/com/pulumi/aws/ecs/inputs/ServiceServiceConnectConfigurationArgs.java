// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationLogConfigurationArgs;
import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationServiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceServiceConnectConfigurationArgs Empty = new ServiceServiceConnectConfigurationArgs();

    /**
     * Specifies whether to use Service Connect with this service.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Specifies whether to use Service Connect with this service.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The log configuration for the container. See below.
     * 
     */
    @Import(name="logConfiguration")
    private @Nullable Output<ServiceServiceConnectConfigurationLogConfigurationArgs> logConfiguration;

    /**
     * @return The log configuration for the container. See below.
     * 
     */
    public Optional<Output<ServiceServiceConnectConfigurationLogConfigurationArgs>> logConfiguration() {
        return Optional.ofNullable(this.logConfiguration);
    }

    /**
     * The namespace name or ARN of the `aws.servicediscovery.HttpNamespace` for use with Service Connect.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace name or ARN of the `aws.servicediscovery.HttpNamespace` for use with Service Connect.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The list of Service Connect service objects. See below.
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<ServiceServiceConnectConfigurationServiceArgs>> services;

    /**
     * @return The list of Service Connect service objects. See below.
     * 
     */
    public Optional<Output<List<ServiceServiceConnectConfigurationServiceArgs>>> services() {
        return Optional.ofNullable(this.services);
    }

    private ServiceServiceConnectConfigurationArgs() {}

    private ServiceServiceConnectConfigurationArgs(ServiceServiceConnectConfigurationArgs $) {
        this.enabled = $.enabled;
        this.logConfiguration = $.logConfiguration;
        this.namespace = $.namespace;
        this.services = $.services;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceServiceConnectConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceServiceConnectConfigurationArgs $;

        public Builder() {
            $ = new ServiceServiceConnectConfigurationArgs();
        }

        public Builder(ServiceServiceConnectConfigurationArgs defaults) {
            $ = new ServiceServiceConnectConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Specifies whether to use Service Connect with this service.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies whether to use Service Connect with this service.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param logConfiguration The log configuration for the container. See below.
         * 
         * @return builder
         * 
         */
        public Builder logConfiguration(@Nullable Output<ServiceServiceConnectConfigurationLogConfigurationArgs> logConfiguration) {
            $.logConfiguration = logConfiguration;
            return this;
        }

        /**
         * @param logConfiguration The log configuration for the container. See below.
         * 
         * @return builder
         * 
         */
        public Builder logConfiguration(ServiceServiceConnectConfigurationLogConfigurationArgs logConfiguration) {
            return logConfiguration(Output.of(logConfiguration));
        }

        /**
         * @param namespace The namespace name or ARN of the `aws.servicediscovery.HttpNamespace` for use with Service Connect.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace name or ARN of the `aws.servicediscovery.HttpNamespace` for use with Service Connect.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param services The list of Service Connect service objects. See below.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<ServiceServiceConnectConfigurationServiceArgs>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services The list of Service Connect service objects. See below.
         * 
         * @return builder
         * 
         */
        public Builder services(List<ServiceServiceConnectConfigurationServiceArgs> services) {
            return services(Output.of(services));
        }

        /**
         * @param services The list of Service Connect service objects. See below.
         * 
         * @return builder
         * 
         */
        public Builder services(ServiceServiceConnectConfigurationServiceArgs... services) {
            return services(List.of(services));
        }

        public ServiceServiceConnectConfigurationArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ServiceServiceConnectConfigurationArgs", "enabled");
            }
            return $;
        }
    }

}
