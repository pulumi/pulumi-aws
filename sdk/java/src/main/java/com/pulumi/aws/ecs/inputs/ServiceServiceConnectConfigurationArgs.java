// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationLogConfigurationArgs;
import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationServiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceServiceConnectConfigurationArgs Empty = new ServiceServiceConnectConfigurationArgs();

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="logConfiguration")
    private @Nullable Output<ServiceServiceConnectConfigurationLogConfigurationArgs> logConfiguration;

    public Optional<Output<ServiceServiceConnectConfigurationLogConfigurationArgs>> logConfiguration() {
        return Optional.ofNullable(this.logConfiguration);
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="service")
    private @Nullable Output<ServiceServiceConnectConfigurationServiceArgs> service;

    public Optional<Output<ServiceServiceConnectConfigurationServiceArgs>> service() {
        return Optional.ofNullable(this.service);
    }

    private ServiceServiceConnectConfigurationArgs() {}

    private ServiceServiceConnectConfigurationArgs(ServiceServiceConnectConfigurationArgs $) {
        this.enabled = $.enabled;
        this.logConfiguration = $.logConfiguration;
        this.namespace = $.namespace;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceServiceConnectConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceServiceConnectConfigurationArgs $;

        public Builder() {
            $ = new ServiceServiceConnectConfigurationArgs();
        }

        public Builder(ServiceServiceConnectConfigurationArgs defaults) {
            $ = new ServiceServiceConnectConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder logConfiguration(@Nullable Output<ServiceServiceConnectConfigurationLogConfigurationArgs> logConfiguration) {
            $.logConfiguration = logConfiguration;
            return this;
        }

        public Builder logConfiguration(ServiceServiceConnectConfigurationLogConfigurationArgs logConfiguration) {
            return logConfiguration(Output.of(logConfiguration));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder service(@Nullable Output<ServiceServiceConnectConfigurationServiceArgs> service) {
            $.service = service;
            return this;
        }

        public Builder service(ServiceServiceConnectConfigurationServiceArgs service) {
            return service(Output.of(service));
        }

        public ServiceServiceConnectConfigurationArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
