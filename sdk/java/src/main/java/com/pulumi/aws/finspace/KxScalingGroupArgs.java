// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KxScalingGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final KxScalingGroupArgs Empty = new KxScalingGroupArgs();

    /**
     * The availability zone identifiers for the requested regions.
     * 
     */
    @Import(name="availabilityZoneId", required=true)
    private Output<String> availabilityZoneId;

    /**
     * @return The availability zone identifiers for the requested regions.
     * 
     */
    public Output<String> availabilityZoneId() {
        return this.availabilityZoneId;
    }

    /**
     * A unique identifier for the kdb environment, where you want to create the scaling group.
     * 
     */
    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    /**
     * @return A unique identifier for the kdb environment, where you want to create the scaling group.
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }

    /**
     * The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="hostType", required=true)
    private Output<String> hostType;

    /**
     * @return The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> hostType() {
        return this.hostType;
    }

    /**
     * Unique name for the scaling group that you want to create.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for the scaling group that you want to create.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private KxScalingGroupArgs() {}

    private KxScalingGroupArgs(KxScalingGroupArgs $) {
        this.availabilityZoneId = $.availabilityZoneId;
        this.environmentId = $.environmentId;
        this.hostType = $.hostType;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxScalingGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxScalingGroupArgs $;

        public Builder() {
            $ = new KxScalingGroupArgs();
        }

        public Builder(KxScalingGroupArgs defaults) {
            $ = new KxScalingGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityZoneId The availability zone identifiers for the requested regions.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZoneId(Output<String> availabilityZoneId) {
            $.availabilityZoneId = availabilityZoneId;
            return this;
        }

        /**
         * @param availabilityZoneId The availability zone identifiers for the requested regions.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZoneId(String availabilityZoneId) {
            return availabilityZoneId(Output.of(availabilityZoneId));
        }

        /**
         * @param environmentId A unique identifier for the kdb environment, where you want to create the scaling group.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId A unique identifier for the kdb environment, where you want to create the scaling group.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param hostType The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder hostType(Output<String> hostType) {
            $.hostType = hostType;
            return this;
        }

        /**
         * @param hostType The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder hostType(String hostType) {
            return hostType(Output.of(hostType));
        }

        /**
         * @param name Unique name for the scaling group that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for the scaling group that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public KxScalingGroupArgs build() {
            if ($.availabilityZoneId == null) {
                throw new MissingRequiredPropertyException("KxScalingGroupArgs", "availabilityZoneId");
            }
            if ($.environmentId == null) {
                throw new MissingRequiredPropertyException("KxScalingGroupArgs", "environmentId");
            }
            if ($.hostType == null) {
                throw new MissingRequiredPropertyException("KxScalingGroupArgs", "hostType");
            }
            return $;
        }
    }

}
