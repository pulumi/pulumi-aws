// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerTimeoutGrpcIdleArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerTimeoutGrpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerTimeoutGrpcArgs Empty = new VirtualNodeSpecListenerTimeoutGrpcArgs();

    /**
     * Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
     * 
     */
    @Import(name="idle")
    private @Nullable Output<VirtualNodeSpecListenerTimeoutGrpcIdleArgs> idle;

    /**
     * @return Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerTimeoutGrpcIdleArgs>> idle() {
        return Optional.ofNullable(this.idle);
    }

    /**
     * Per request timeout.
     * 
     */
    @Import(name="perRequest")
    private @Nullable Output<VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs> perRequest;

    /**
     * @return Per request timeout.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs>> perRequest() {
        return Optional.ofNullable(this.perRequest);
    }

    private VirtualNodeSpecListenerTimeoutGrpcArgs() {}

    private VirtualNodeSpecListenerTimeoutGrpcArgs(VirtualNodeSpecListenerTimeoutGrpcArgs $) {
        this.idle = $.idle;
        this.perRequest = $.perRequest;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerTimeoutGrpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerTimeoutGrpcArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerTimeoutGrpcArgs();
        }

        public Builder(VirtualNodeSpecListenerTimeoutGrpcArgs defaults) {
            $ = new VirtualNodeSpecListenerTimeoutGrpcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param idle Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
         * 
         * @return builder
         * 
         */
        public Builder idle(@Nullable Output<VirtualNodeSpecListenerTimeoutGrpcIdleArgs> idle) {
            $.idle = idle;
            return this;
        }

        /**
         * @param idle Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
         * 
         * @return builder
         * 
         */
        public Builder idle(VirtualNodeSpecListenerTimeoutGrpcIdleArgs idle) {
            return idle(Output.of(idle));
        }

        /**
         * @param perRequest Per request timeout.
         * 
         * @return builder
         * 
         */
        public Builder perRequest(@Nullable Output<VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs> perRequest) {
            $.perRequest = perRequest;
            return this;
        }

        /**
         * @param perRequest Per request timeout.
         * 
         * @return builder
         * 
         */
        public Builder perRequest(VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs perRequest) {
            return perRequest(Output.of(perRequest));
        }

        public VirtualNodeSpecListenerTimeoutGrpcArgs build() {
            return $;
        }
    }

}
