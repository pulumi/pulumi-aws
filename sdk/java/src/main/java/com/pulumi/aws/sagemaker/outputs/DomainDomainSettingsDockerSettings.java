// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainDomainSettingsDockerSettings {
    /**
     * @return Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    private @Nullable String enableDockerAccess;
    /**
     * @return The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
     * 
     */
    private @Nullable List<String> vpcOnlyTrustedAccounts;

    private DomainDomainSettingsDockerSettings() {}
    /**
     * @return Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<String> enableDockerAccess() {
        return Optional.ofNullable(this.enableDockerAccess);
    }
    /**
     * @return The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
     * 
     */
    public List<String> vpcOnlyTrustedAccounts() {
        return this.vpcOnlyTrustedAccounts == null ? List.of() : this.vpcOnlyTrustedAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainDomainSettingsDockerSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String enableDockerAccess;
        private @Nullable List<String> vpcOnlyTrustedAccounts;
        public Builder() {}
        public Builder(DomainDomainSettingsDockerSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDockerAccess = defaults.enableDockerAccess;
    	      this.vpcOnlyTrustedAccounts = defaults.vpcOnlyTrustedAccounts;
        }

        @CustomType.Setter
        public Builder enableDockerAccess(@Nullable String enableDockerAccess) {

            this.enableDockerAccess = enableDockerAccess;
            return this;
        }
        @CustomType.Setter
        public Builder vpcOnlyTrustedAccounts(@Nullable List<String> vpcOnlyTrustedAccounts) {

            this.vpcOnlyTrustedAccounts = vpcOnlyTrustedAccounts;
            return this;
        }
        public Builder vpcOnlyTrustedAccounts(String... vpcOnlyTrustedAccounts) {
            return vpcOnlyTrustedAccounts(List.of(vpcOnlyTrustedAccounts));
        }
        public DomainDomainSettingsDockerSettings build() {
            final var _resultValue = new DomainDomainSettingsDockerSettings();
            _resultValue.enableDockerAccess = enableDockerAccess;
            _resultValue.vpcOnlyTrustedAccounts = vpcOnlyTrustedAccounts;
            return _resultValue;
        }
    }
}
