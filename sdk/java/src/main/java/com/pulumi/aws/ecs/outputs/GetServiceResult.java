// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceResult {
    /**
     * @return ARN of the ECS Service
     * 
     */
    private String arn;
    private String clusterArn;
    /**
     * @return Number of tasks for the ECS Service
     * 
     */
    private Integer desiredCount;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Launch type for the ECS Service
     * 
     */
    private String launchType;
    /**
     * @return Scheduling strategy for the ECS Service
     * 
     */
    private String schedulingStrategy;
    private String serviceName;
    /**
     * @return Resource tags.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Family for the latest ACTIVE revision
     * 
     */
    private String taskDefinition;

    private GetServiceResult() {}
    /**
     * @return ARN of the ECS Service
     * 
     */
    public String arn() {
        return this.arn;
    }
    public String clusterArn() {
        return this.clusterArn;
    }
    /**
     * @return Number of tasks for the ECS Service
     * 
     */
    public Integer desiredCount() {
        return this.desiredCount;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Launch type for the ECS Service
     * 
     */
    public String launchType() {
        return this.launchType;
    }
    /**
     * @return Scheduling strategy for the ECS Service
     * 
     */
    public String schedulingStrategy() {
        return this.schedulingStrategy;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Family for the latest ACTIVE revision
     * 
     */
    public String taskDefinition() {
        return this.taskDefinition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String clusterArn;
        private Integer desiredCount;
        private String id;
        private String launchType;
        private String schedulingStrategy;
        private String serviceName;
        private Map<String,String> tags;
        private String taskDefinition;
        public Builder() {}
        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.clusterArn = defaults.clusterArn;
    	      this.desiredCount = defaults.desiredCount;
    	      this.id = defaults.id;
    	      this.launchType = defaults.launchType;
    	      this.schedulingStrategy = defaults.schedulingStrategy;
    	      this.serviceName = defaults.serviceName;
    	      this.tags = defaults.tags;
    	      this.taskDefinition = defaults.taskDefinition;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder clusterArn(String clusterArn) {
            this.clusterArn = Objects.requireNonNull(clusterArn);
            return this;
        }
        @CustomType.Setter
        public Builder desiredCount(Integer desiredCount) {
            this.desiredCount = Objects.requireNonNull(desiredCount);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder launchType(String launchType) {
            this.launchType = Objects.requireNonNull(launchType);
            return this;
        }
        @CustomType.Setter
        public Builder schedulingStrategy(String schedulingStrategy) {
            this.schedulingStrategy = Objects.requireNonNull(schedulingStrategy);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder taskDefinition(String taskDefinition) {
            this.taskDefinition = Objects.requireNonNull(taskDefinition);
            return this;
        }
        public GetServiceResult build() {
            final var o = new GetServiceResult();
            o.arn = arn;
            o.clusterArn = clusterArn;
            o.desiredCount = desiredCount;
            o.id = id;
            o.launchType = launchType;
            o.schedulingStrategy = schedulingStrategy;
            o.serviceName = serviceName;
            o.tags = tags;
            o.taskDefinition = taskDefinition;
            return o;
        }
    }
}
