// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecretVersionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecretVersionsPlainArgs Empty = new GetSecretVersionsPlainArgs();

    /**
     * If true, all deprecated secret versions are included in the response.
     * If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.
     * 
     */
    @Import(name="includeDeprecated")
    private @Nullable Boolean includeDeprecated;

    /**
     * @return If true, all deprecated secret versions are included in the response.
     * If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.
     * 
     */
    public Optional<Boolean> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }

    /**
     * Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
     * 
     */
    @Import(name="secretId", required=true)
    private String secretId;

    /**
     * @return Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
     * 
     */
    public String secretId() {
        return this.secretId;
    }

    private GetSecretVersionsPlainArgs() {}

    private GetSecretVersionsPlainArgs(GetSecretVersionsPlainArgs $) {
        this.includeDeprecated = $.includeDeprecated;
        this.secretId = $.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecretVersionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecretVersionsPlainArgs $;

        public Builder() {
            $ = new GetSecretVersionsPlainArgs();
        }

        public Builder(GetSecretVersionsPlainArgs defaults) {
            $ = new GetSecretVersionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeDeprecated If true, all deprecated secret versions are included in the response.
         * If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder includeDeprecated(@Nullable Boolean includeDeprecated) {
            $.includeDeprecated = includeDeprecated;
            return this;
        }

        /**
         * @param secretId Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            $.secretId = secretId;
            return this;
        }

        public GetSecretVersionsPlainArgs build() {
            if ($.secretId == null) {
                throw new MissingRequiredPropertyException("GetSecretVersionsPlainArgs", "secretId");
            }
            return $;
        }
    }

}
