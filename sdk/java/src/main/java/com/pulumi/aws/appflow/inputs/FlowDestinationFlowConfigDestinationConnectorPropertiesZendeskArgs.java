// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs Empty = new FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs();

    @Import(name="errorHandlingConfig")
    private @Nullable Output<FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs> errorHandlingConfig;

    public Optional<Output<FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs>> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }

    @Import(name="idFieldNames")
    private @Nullable Output<List<String>> idFieldNames;

    public Optional<Output<List<String>>> idFieldNames() {
        return Optional.ofNullable(this.idFieldNames);
    }

    @Import(name="object", required=true)
    private Output<String> object;

    public Output<String> object() {
        return this.object;
    }

    @Import(name="writeOperationType")
    private @Nullable Output<String> writeOperationType;

    public Optional<Output<String>> writeOperationType() {
        return Optional.ofNullable(this.writeOperationType);
    }

    private FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs() {}

    private FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs $) {
        this.errorHandlingConfig = $.errorHandlingConfig;
        this.idFieldNames = $.idFieldNames;
        this.object = $.object;
        this.writeOperationType = $.writeOperationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs $;

        public Builder() {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs();
        }

        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs defaults) {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs(Objects.requireNonNull(defaults));
        }

        public Builder errorHandlingConfig(@Nullable Output<FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs> errorHandlingConfig) {
            $.errorHandlingConfig = errorHandlingConfig;
            return this;
        }

        public Builder errorHandlingConfig(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs errorHandlingConfig) {
            return errorHandlingConfig(Output.of(errorHandlingConfig));
        }

        public Builder idFieldNames(@Nullable Output<List<String>> idFieldNames) {
            $.idFieldNames = idFieldNames;
            return this;
        }

        public Builder idFieldNames(List<String> idFieldNames) {
            return idFieldNames(Output.of(idFieldNames));
        }

        public Builder idFieldNames(String... idFieldNames) {
            return idFieldNames(List.of(idFieldNames));
        }

        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        public Builder object(String object) {
            return object(Output.of(object));
        }

        public Builder writeOperationType(@Nullable Output<String> writeOperationType) {
            $.writeOperationType = writeOperationType;
            return this;
        }

        public Builder writeOperationType(String writeOperationType) {
            return writeOperationType(Output.of(writeOperationType));
        }

        public FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs build() {
            if ($.object == null) {
                throw new MissingRequiredPropertyException("FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs", "object");
            }
            return $;
        }
    }

}
