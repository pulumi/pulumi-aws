// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleShareRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LifecyclePolicyPolicyDetailsSchedule {
    private @Nullable Boolean copyTags;
    private LifecyclePolicyPolicyDetailsScheduleCreateRule createRule;
    private @Nullable List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules;
    private @Nullable LifecyclePolicyPolicyDetailsScheduleDeprecateRule deprecateRule;
    private @Nullable LifecyclePolicyPolicyDetailsScheduleFastRestoreRule fastRestoreRule;
    private String name;
    private LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule;
    private @Nullable LifecyclePolicyPolicyDetailsScheduleShareRule shareRule;
    private @Nullable Map<String,String> tagsToAdd;
    private @Nullable Map<String,String> variableTags;

    private LifecyclePolicyPolicyDetailsSchedule() {}
    public Optional<Boolean> copyTags() {
        return Optional.ofNullable(this.copyTags);
    }
    public LifecyclePolicyPolicyDetailsScheduleCreateRule createRule() {
        return this.createRule;
    }
    public List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules() {
        return this.crossRegionCopyRules == null ? List.of() : this.crossRegionCopyRules;
    }
    public Optional<LifecyclePolicyPolicyDetailsScheduleDeprecateRule> deprecateRule() {
        return Optional.ofNullable(this.deprecateRule);
    }
    public Optional<LifecyclePolicyPolicyDetailsScheduleFastRestoreRule> fastRestoreRule() {
        return Optional.ofNullable(this.fastRestoreRule);
    }
    public String name() {
        return this.name;
    }
    public LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule() {
        return this.retainRule;
    }
    public Optional<LifecyclePolicyPolicyDetailsScheduleShareRule> shareRule() {
        return Optional.ofNullable(this.shareRule);
    }
    public Map<String,String> tagsToAdd() {
        return this.tagsToAdd == null ? Map.of() : this.tagsToAdd;
    }
    public Map<String,String> variableTags() {
        return this.variableTags == null ? Map.of() : this.variableTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean copyTags;
        private LifecyclePolicyPolicyDetailsScheduleCreateRule createRule;
        private @Nullable List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules;
        private @Nullable LifecyclePolicyPolicyDetailsScheduleDeprecateRule deprecateRule;
        private @Nullable LifecyclePolicyPolicyDetailsScheduleFastRestoreRule fastRestoreRule;
        private String name;
        private LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule;
        private @Nullable LifecyclePolicyPolicyDetailsScheduleShareRule shareRule;
        private @Nullable Map<String,String> tagsToAdd;
        private @Nullable Map<String,String> variableTags;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.copyTags = defaults.copyTags;
    	      this.createRule = defaults.createRule;
    	      this.crossRegionCopyRules = defaults.crossRegionCopyRules;
    	      this.deprecateRule = defaults.deprecateRule;
    	      this.fastRestoreRule = defaults.fastRestoreRule;
    	      this.name = defaults.name;
    	      this.retainRule = defaults.retainRule;
    	      this.shareRule = defaults.shareRule;
    	      this.tagsToAdd = defaults.tagsToAdd;
    	      this.variableTags = defaults.variableTags;
        }

        @CustomType.Setter
        public Builder copyTags(@Nullable Boolean copyTags) {

            this.copyTags = copyTags;
            return this;
        }
        @CustomType.Setter
        public Builder createRule(LifecyclePolicyPolicyDetailsScheduleCreateRule createRule) {
            if (createRule == null) {
              throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsSchedule", "createRule");
            }
            this.createRule = createRule;
            return this;
        }
        @CustomType.Setter
        public Builder crossRegionCopyRules(@Nullable List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules) {

            this.crossRegionCopyRules = crossRegionCopyRules;
            return this;
        }
        public Builder crossRegionCopyRules(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule... crossRegionCopyRules) {
            return crossRegionCopyRules(List.of(crossRegionCopyRules));
        }
        @CustomType.Setter
        public Builder deprecateRule(@Nullable LifecyclePolicyPolicyDetailsScheduleDeprecateRule deprecateRule) {

            this.deprecateRule = deprecateRule;
            return this;
        }
        @CustomType.Setter
        public Builder fastRestoreRule(@Nullable LifecyclePolicyPolicyDetailsScheduleFastRestoreRule fastRestoreRule) {

            this.fastRestoreRule = fastRestoreRule;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsSchedule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder retainRule(LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule) {
            if (retainRule == null) {
              throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsSchedule", "retainRule");
            }
            this.retainRule = retainRule;
            return this;
        }
        @CustomType.Setter
        public Builder shareRule(@Nullable LifecyclePolicyPolicyDetailsScheduleShareRule shareRule) {

            this.shareRule = shareRule;
            return this;
        }
        @CustomType.Setter
        public Builder tagsToAdd(@Nullable Map<String,String> tagsToAdd) {

            this.tagsToAdd = tagsToAdd;
            return this;
        }
        @CustomType.Setter
        public Builder variableTags(@Nullable Map<String,String> variableTags) {

            this.variableTags = variableTags;
            return this;
        }
        public LifecyclePolicyPolicyDetailsSchedule build() {
            final var _resultValue = new LifecyclePolicyPolicyDetailsSchedule();
            _resultValue.copyTags = copyTags;
            _resultValue.createRule = createRule;
            _resultValue.crossRegionCopyRules = crossRegionCopyRules;
            _resultValue.deprecateRule = deprecateRule;
            _resultValue.fastRestoreRule = fastRestoreRule;
            _resultValue.name = name;
            _resultValue.retainRule = retainRule;
            _resultValue.shareRule = shareRule;
            _resultValue.tagsToAdd = tagsToAdd;
            _resultValue.variableTags = variableTags;
            return _resultValue;
        }
    }
}
