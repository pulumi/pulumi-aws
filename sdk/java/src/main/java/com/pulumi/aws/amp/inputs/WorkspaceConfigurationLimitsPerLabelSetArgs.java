// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amp.inputs;

import com.pulumi.aws.amp.inputs.WorkspaceConfigurationLimitsPerLabelSetLimitsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceConfigurationLimitsPerLabelSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceConfigurationLimitsPerLabelSetArgs Empty = new WorkspaceConfigurationLimitsPerLabelSetArgs();

    /**
     * Map of label key-value pairs that identify the metrics to which the limits apply. An empty map represents the default bucket for metrics that don&#39;t match any other label set.
     * 
     */
    @Import(name="labelSet", required=true)
    private Output<Map<String,String>> labelSet;

    /**
     * @return Map of label key-value pairs that identify the metrics to which the limits apply. An empty map represents the default bucket for metrics that don&#39;t match any other label set.
     * 
     */
    public Output<Map<String,String>> labelSet() {
        return this.labelSet;
    }

    /**
     * Configuration block for the limits to apply to the specified label set. Detailed below.
     * 
     */
    @Import(name="limits")
    private @Nullable Output<WorkspaceConfigurationLimitsPerLabelSetLimitsArgs> limits;

    /**
     * @return Configuration block for the limits to apply to the specified label set. Detailed below.
     * 
     */
    public Optional<Output<WorkspaceConfigurationLimitsPerLabelSetLimitsArgs>> limits() {
        return Optional.ofNullable(this.limits);
    }

    private WorkspaceConfigurationLimitsPerLabelSetArgs() {}

    private WorkspaceConfigurationLimitsPerLabelSetArgs(WorkspaceConfigurationLimitsPerLabelSetArgs $) {
        this.labelSet = $.labelSet;
        this.limits = $.limits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceConfigurationLimitsPerLabelSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceConfigurationLimitsPerLabelSetArgs $;

        public Builder() {
            $ = new WorkspaceConfigurationLimitsPerLabelSetArgs();
        }

        public Builder(WorkspaceConfigurationLimitsPerLabelSetArgs defaults) {
            $ = new WorkspaceConfigurationLimitsPerLabelSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labelSet Map of label key-value pairs that identify the metrics to which the limits apply. An empty map represents the default bucket for metrics that don&#39;t match any other label set.
         * 
         * @return builder
         * 
         */
        public Builder labelSet(Output<Map<String,String>> labelSet) {
            $.labelSet = labelSet;
            return this;
        }

        /**
         * @param labelSet Map of label key-value pairs that identify the metrics to which the limits apply. An empty map represents the default bucket for metrics that don&#39;t match any other label set.
         * 
         * @return builder
         * 
         */
        public Builder labelSet(Map<String,String> labelSet) {
            return labelSet(Output.of(labelSet));
        }

        /**
         * @param limits Configuration block for the limits to apply to the specified label set. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder limits(@Nullable Output<WorkspaceConfigurationLimitsPerLabelSetLimitsArgs> limits) {
            $.limits = limits;
            return this;
        }

        /**
         * @param limits Configuration block for the limits to apply to the specified label set. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder limits(WorkspaceConfigurationLimitsPerLabelSetLimitsArgs limits) {
            return limits(Output.of(limits));
        }

        public WorkspaceConfigurationLimitsPerLabelSetArgs build() {
            if ($.labelSet == null) {
                throw new MissingRequiredPropertyException("WorkspaceConfigurationLimitsPerLabelSetArgs", "labelSet");
            }
            return $;
        }
    }

}
