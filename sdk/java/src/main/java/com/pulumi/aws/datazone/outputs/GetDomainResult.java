// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainResult {
    /**
     * @return ARN of the Domain.
     * 
     */
    private String arn;
    /**
     * @return The date and time the Domain was created.
     * 
     */
    private String createdAt;
    /**
     * @return Description of the Domain.
     * 
     */
    private String description;
    /**
     * @return Version of the Domain.
     * 
     */
    private String domainVersion;
    private String id;
    /**
     * @return The date and time the Domain was last updated.
     * 
     */
    private String lastUpdatedAt;
    /**
     * @return The AWS account ID that owns the Domain.
     * 
     */
    private String managedAccountId;
    private String name;
    /**
     * @return URL of the Domain.
     * 
     */
    private String portalUrl;
    /**
     * @return Status of the Domain.
     * 
     */
    private String status;

    private GetDomainResult() {}
    /**
     * @return ARN of the Domain.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The date and time the Domain was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Description of the Domain.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Version of the Domain.
     * 
     */
    public String domainVersion() {
        return this.domainVersion;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time the Domain was last updated.
     * 
     */
    public String lastUpdatedAt() {
        return this.lastUpdatedAt;
    }
    /**
     * @return The AWS account ID that owns the Domain.
     * 
     */
    public String managedAccountId() {
        return this.managedAccountId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return URL of the Domain.
     * 
     */
    public String portalUrl() {
        return this.portalUrl;
    }
    /**
     * @return Status of the Domain.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String createdAt;
        private String description;
        private String domainVersion;
        private String id;
        private String lastUpdatedAt;
        private String managedAccountId;
        private String name;
        private String portalUrl;
        private String status;
        public Builder() {}
        public Builder(GetDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.domainVersion = defaults.domainVersion;
    	      this.id = defaults.id;
    	      this.lastUpdatedAt = defaults.lastUpdatedAt;
    	      this.managedAccountId = defaults.managedAccountId;
    	      this.name = defaults.name;
    	      this.portalUrl = defaults.portalUrl;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder domainVersion(String domainVersion) {
            if (domainVersion == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "domainVersion");
            }
            this.domainVersion = domainVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedAt(String lastUpdatedAt) {
            if (lastUpdatedAt == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "lastUpdatedAt");
            }
            this.lastUpdatedAt = lastUpdatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder managedAccountId(String managedAccountId) {
            if (managedAccountId == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "managedAccountId");
            }
            this.managedAccountId = managedAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder portalUrl(String portalUrl) {
            if (portalUrl == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "portalUrl");
            }
            this.portalUrl = portalUrl;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDomainResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetDomainResult build() {
            final var _resultValue = new GetDomainResult();
            _resultValue.arn = arn;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.domainVersion = domainVersion;
            _resultValue.id = id;
            _resultValue.lastUpdatedAt = lastUpdatedAt;
            _resultValue.managedAccountId = managedAccountId;
            _resultValue.name = name;
            _resultValue.portalUrl = portalUrl;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
