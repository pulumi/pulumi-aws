// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rolesanywhere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileState extends com.pulumi.resources.ResourceArgs {

    public static final ProfileState Empty = new ProfileState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="durationSeconds")
    private @Nullable Output<Integer> durationSeconds;

    public Optional<Output<Integer>> durationSeconds() {
        return Optional.ofNullable(this.durationSeconds);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="managedPolicyArns")
    private @Nullable Output<List<String>> managedPolicyArns;

    public Optional<Output<List<String>>> managedPolicyArns() {
        return Optional.ofNullable(this.managedPolicyArns);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="requireInstanceProperties")
    private @Nullable Output<Boolean> requireInstanceProperties;

    public Optional<Output<Boolean>> requireInstanceProperties() {
        return Optional.ofNullable(this.requireInstanceProperties);
    }

    @Import(name="roleArns")
    private @Nullable Output<List<String>> roleArns;

    public Optional<Output<List<String>>> roleArns() {
        return Optional.ofNullable(this.roleArns);
    }

    @Import(name="sessionPolicy")
    private @Nullable Output<String> sessionPolicy;

    public Optional<Output<String>> sessionPolicy() {
        return Optional.ofNullable(this.sessionPolicy);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ProfileState() {}

    private ProfileState(ProfileState $) {
        this.arn = $.arn;
        this.durationSeconds = $.durationSeconds;
        this.enabled = $.enabled;
        this.managedPolicyArns = $.managedPolicyArns;
        this.name = $.name;
        this.requireInstanceProperties = $.requireInstanceProperties;
        this.roleArns = $.roleArns;
        this.sessionPolicy = $.sessionPolicy;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileState $;

        public Builder() {
            $ = new ProfileState();
        }

        public Builder(ProfileState defaults) {
            $ = new ProfileState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder durationSeconds(@Nullable Output<Integer> durationSeconds) {
            $.durationSeconds = durationSeconds;
            return this;
        }

        public Builder durationSeconds(Integer durationSeconds) {
            return durationSeconds(Output.of(durationSeconds));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder managedPolicyArns(@Nullable Output<List<String>> managedPolicyArns) {
            $.managedPolicyArns = managedPolicyArns;
            return this;
        }

        public Builder managedPolicyArns(List<String> managedPolicyArns) {
            return managedPolicyArns(Output.of(managedPolicyArns));
        }

        public Builder managedPolicyArns(String... managedPolicyArns) {
            return managedPolicyArns(List.of(managedPolicyArns));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder requireInstanceProperties(@Nullable Output<Boolean> requireInstanceProperties) {
            $.requireInstanceProperties = requireInstanceProperties;
            return this;
        }

        public Builder requireInstanceProperties(Boolean requireInstanceProperties) {
            return requireInstanceProperties(Output.of(requireInstanceProperties));
        }

        public Builder roleArns(@Nullable Output<List<String>> roleArns) {
            $.roleArns = roleArns;
            return this;
        }

        public Builder roleArns(List<String> roleArns) {
            return roleArns(Output.of(roleArns));
        }

        public Builder roleArns(String... roleArns) {
            return roleArns(List.of(roleArns));
        }

        public Builder sessionPolicy(@Nullable Output<String> sessionPolicy) {
            $.sessionPolicy = sessionPolicy;
            return this;
        }

        public Builder sessionPolicy(String sessionPolicy) {
            return sessionPolicy(Output.of(sessionPolicy));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ProfileState build() {
            return $;
        }
    }

}
