// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CodeSigningConfigPoliciesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CodeSigningConfigPoliciesArgs Empty = new CodeSigningConfigPoliciesArgs();

    /**
     * Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
     * 
     */
    @Import(name="untrustedArtifactOnDeployment", required=true)
    private Output<String> untrustedArtifactOnDeployment;

    /**
     * @return Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
     * 
     */
    public Output<String> untrustedArtifactOnDeployment() {
        return this.untrustedArtifactOnDeployment;
    }

    private CodeSigningConfigPoliciesArgs() {}

    private CodeSigningConfigPoliciesArgs(CodeSigningConfigPoliciesArgs $) {
        this.untrustedArtifactOnDeployment = $.untrustedArtifactOnDeployment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeSigningConfigPoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeSigningConfigPoliciesArgs $;

        public Builder() {
            $ = new CodeSigningConfigPoliciesArgs();
        }

        public Builder(CodeSigningConfigPoliciesArgs defaults) {
            $ = new CodeSigningConfigPoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param untrustedArtifactOnDeployment Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
         * 
         * @return builder
         * 
         */
        public Builder untrustedArtifactOnDeployment(Output<String> untrustedArtifactOnDeployment) {
            $.untrustedArtifactOnDeployment = untrustedArtifactOnDeployment;
            return this;
        }

        /**
         * @param untrustedArtifactOnDeployment Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
         * 
         * @return builder
         * 
         */
        public Builder untrustedArtifactOnDeployment(String untrustedArtifactOnDeployment) {
            return untrustedArtifactOnDeployment(Output.of(untrustedArtifactOnDeployment));
        }

        public CodeSigningConfigPoliciesArgs build() {
            if ($.untrustedArtifactOnDeployment == null) {
                throw new MissingRequiredPropertyException("CodeSigningConfigPoliciesArgs", "untrustedArtifactOnDeployment");
            }
            return $;
        }
    }

}
