// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.WorkteamMemberDefinitionArgs;
import com.pulumi.aws.sagemaker.inputs.WorkteamNotificationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkteamState extends com.pulumi.resources.ResourceArgs {

    public static final WorkteamState Empty = new WorkteamState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="memberDefinitions")
    private @Nullable Output<List<WorkteamMemberDefinitionArgs>> memberDefinitions;

    public Optional<Output<List<WorkteamMemberDefinitionArgs>>> memberDefinitions() {
        return Optional.ofNullable(this.memberDefinitions);
    }

    @Import(name="notificationConfiguration")
    private @Nullable Output<WorkteamNotificationConfigurationArgs> notificationConfiguration;

    public Optional<Output<WorkteamNotificationConfigurationArgs>> notificationConfiguration() {
        return Optional.ofNullable(this.notificationConfiguration);
    }

    @Import(name="subdomain")
    private @Nullable Output<String> subdomain;

    public Optional<Output<String>> subdomain() {
        return Optional.ofNullable(this.subdomain);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="workforceName")
    private @Nullable Output<String> workforceName;

    public Optional<Output<String>> workforceName() {
        return Optional.ofNullable(this.workforceName);
    }

    @Import(name="workteamName")
    private @Nullable Output<String> workteamName;

    public Optional<Output<String>> workteamName() {
        return Optional.ofNullable(this.workteamName);
    }

    private WorkteamState() {}

    private WorkteamState(WorkteamState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.memberDefinitions = $.memberDefinitions;
        this.notificationConfiguration = $.notificationConfiguration;
        this.subdomain = $.subdomain;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.workforceName = $.workforceName;
        this.workteamName = $.workteamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkteamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkteamState $;

        public Builder() {
            $ = new WorkteamState();
        }

        public Builder(WorkteamState defaults) {
            $ = new WorkteamState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder memberDefinitions(@Nullable Output<List<WorkteamMemberDefinitionArgs>> memberDefinitions) {
            $.memberDefinitions = memberDefinitions;
            return this;
        }

        public Builder memberDefinitions(List<WorkteamMemberDefinitionArgs> memberDefinitions) {
            return memberDefinitions(Output.of(memberDefinitions));
        }

        public Builder memberDefinitions(WorkteamMemberDefinitionArgs... memberDefinitions) {
            return memberDefinitions(List.of(memberDefinitions));
        }

        public Builder notificationConfiguration(@Nullable Output<WorkteamNotificationConfigurationArgs> notificationConfiguration) {
            $.notificationConfiguration = notificationConfiguration;
            return this;
        }

        public Builder notificationConfiguration(WorkteamNotificationConfigurationArgs notificationConfiguration) {
            return notificationConfiguration(Output.of(notificationConfiguration));
        }

        public Builder subdomain(@Nullable Output<String> subdomain) {
            $.subdomain = subdomain;
            return this;
        }

        public Builder subdomain(String subdomain) {
            return subdomain(Output.of(subdomain));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder workforceName(@Nullable Output<String> workforceName) {
            $.workforceName = workforceName;
            return this;
        }

        public Builder workforceName(String workforceName) {
            return workforceName(Output.of(workforceName));
        }

        public Builder workteamName(@Nullable Output<String> workteamName) {
            $.workteamName = workteamName;
            return this;
        }

        public Builder workteamName(String workteamName) {
            return workteamName(Output.of(workteamName));
        }

        public WorkteamState build() {
            return $;
        }
    }

}
