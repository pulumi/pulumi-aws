// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="autoResolveBestVoicesEnabled")
    private @Nullable Output<Boolean> autoResolveBestVoicesEnabled;

    public Optional<Output<Boolean>> autoResolveBestVoicesEnabled() {
        return Optional.ofNullable(this.autoResolveBestVoicesEnabled);
    }

    @Import(name="contactFlowLogsEnabled")
    private @Nullable Output<Boolean> contactFlowLogsEnabled;

    public Optional<Output<Boolean>> contactFlowLogsEnabled() {
        return Optional.ofNullable(this.contactFlowLogsEnabled);
    }

    @Import(name="contactLensEnabled")
    private @Nullable Output<Boolean> contactLensEnabled;

    public Optional<Output<Boolean>> contactLensEnabled() {
        return Optional.ofNullable(this.contactLensEnabled);
    }

    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    @Import(name="earlyMediaEnabled")
    private @Nullable Output<Boolean> earlyMediaEnabled;

    public Optional<Output<Boolean>> earlyMediaEnabled() {
        return Optional.ofNullable(this.earlyMediaEnabled);
    }

    @Import(name="identityManagementType")
    private @Nullable Output<String> identityManagementType;

    public Optional<Output<String>> identityManagementType() {
        return Optional.ofNullable(this.identityManagementType);
    }

    @Import(name="inboundCallsEnabled")
    private @Nullable Output<Boolean> inboundCallsEnabled;

    public Optional<Output<Boolean>> inboundCallsEnabled() {
        return Optional.ofNullable(this.inboundCallsEnabled);
    }

    @Import(name="instanceAlias")
    private @Nullable Output<String> instanceAlias;

    public Optional<Output<String>> instanceAlias() {
        return Optional.ofNullable(this.instanceAlias);
    }

    @Import(name="multiPartyConferenceEnabled")
    private @Nullable Output<Boolean> multiPartyConferenceEnabled;

    public Optional<Output<Boolean>> multiPartyConferenceEnabled() {
        return Optional.ofNullable(this.multiPartyConferenceEnabled);
    }

    @Import(name="outboundCallsEnabled")
    private @Nullable Output<Boolean> outboundCallsEnabled;

    public Optional<Output<Boolean>> outboundCallsEnabled() {
        return Optional.ofNullable(this.outboundCallsEnabled);
    }

    @Import(name="serviceRole")
    private @Nullable Output<String> serviceRole;

    public Optional<Output<String>> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.arn = $.arn;
        this.autoResolveBestVoicesEnabled = $.autoResolveBestVoicesEnabled;
        this.contactFlowLogsEnabled = $.contactFlowLogsEnabled;
        this.contactLensEnabled = $.contactLensEnabled;
        this.createdTime = $.createdTime;
        this.directoryId = $.directoryId;
        this.earlyMediaEnabled = $.earlyMediaEnabled;
        this.identityManagementType = $.identityManagementType;
        this.inboundCallsEnabled = $.inboundCallsEnabled;
        this.instanceAlias = $.instanceAlias;
        this.multiPartyConferenceEnabled = $.multiPartyConferenceEnabled;
        this.outboundCallsEnabled = $.outboundCallsEnabled;
        this.serviceRole = $.serviceRole;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoResolveBestVoicesEnabled(@Nullable Output<Boolean> autoResolveBestVoicesEnabled) {
            $.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            return this;
        }

        public Builder autoResolveBestVoicesEnabled(Boolean autoResolveBestVoicesEnabled) {
            return autoResolveBestVoicesEnabled(Output.of(autoResolveBestVoicesEnabled));
        }

        public Builder contactFlowLogsEnabled(@Nullable Output<Boolean> contactFlowLogsEnabled) {
            $.contactFlowLogsEnabled = contactFlowLogsEnabled;
            return this;
        }

        public Builder contactFlowLogsEnabled(Boolean contactFlowLogsEnabled) {
            return contactFlowLogsEnabled(Output.of(contactFlowLogsEnabled));
        }

        public Builder contactLensEnabled(@Nullable Output<Boolean> contactLensEnabled) {
            $.contactLensEnabled = contactLensEnabled;
            return this;
        }

        public Builder contactLensEnabled(Boolean contactLensEnabled) {
            return contactLensEnabled(Output.of(contactLensEnabled));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder earlyMediaEnabled(@Nullable Output<Boolean> earlyMediaEnabled) {
            $.earlyMediaEnabled = earlyMediaEnabled;
            return this;
        }

        public Builder earlyMediaEnabled(Boolean earlyMediaEnabled) {
            return earlyMediaEnabled(Output.of(earlyMediaEnabled));
        }

        public Builder identityManagementType(@Nullable Output<String> identityManagementType) {
            $.identityManagementType = identityManagementType;
            return this;
        }

        public Builder identityManagementType(String identityManagementType) {
            return identityManagementType(Output.of(identityManagementType));
        }

        public Builder inboundCallsEnabled(@Nullable Output<Boolean> inboundCallsEnabled) {
            $.inboundCallsEnabled = inboundCallsEnabled;
            return this;
        }

        public Builder inboundCallsEnabled(Boolean inboundCallsEnabled) {
            return inboundCallsEnabled(Output.of(inboundCallsEnabled));
        }

        public Builder instanceAlias(@Nullable Output<String> instanceAlias) {
            $.instanceAlias = instanceAlias;
            return this;
        }

        public Builder instanceAlias(String instanceAlias) {
            return instanceAlias(Output.of(instanceAlias));
        }

        public Builder multiPartyConferenceEnabled(@Nullable Output<Boolean> multiPartyConferenceEnabled) {
            $.multiPartyConferenceEnabled = multiPartyConferenceEnabled;
            return this;
        }

        public Builder multiPartyConferenceEnabled(Boolean multiPartyConferenceEnabled) {
            return multiPartyConferenceEnabled(Output.of(multiPartyConferenceEnabled));
        }

        public Builder outboundCallsEnabled(@Nullable Output<Boolean> outboundCallsEnabled) {
            $.outboundCallsEnabled = outboundCallsEnabled;
            return this;
        }

        public Builder outboundCallsEnabled(Boolean outboundCallsEnabled) {
            return outboundCallsEnabled(Output.of(outboundCallsEnabled));
        }

        public Builder serviceRole(@Nullable Output<String> serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        public Builder serviceRole(String serviceRole) {
            return serviceRole(Output.of(serviceRole));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public InstanceState build() {
            return $;
        }
    }

}
