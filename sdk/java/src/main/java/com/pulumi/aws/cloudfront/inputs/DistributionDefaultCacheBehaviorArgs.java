// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.DistributionDefaultCacheBehaviorForwardedValuesArgs;
import com.pulumi.aws.cloudfront.inputs.DistributionDefaultCacheBehaviorFunctionAssociationArgs;
import com.pulumi.aws.cloudfront.inputs.DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionDefaultCacheBehaviorArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionDefaultCacheBehaviorArgs Empty = new DistributionDefaultCacheBehaviorArgs();

    @Import(name="allowedMethods", required=true)
    private Output<List<String>> allowedMethods;

    public Output<List<String>> allowedMethods() {
        return this.allowedMethods;
    }

    @Import(name="cachePolicyId")
    private @Nullable Output<String> cachePolicyId;

    public Optional<Output<String>> cachePolicyId() {
        return Optional.ofNullable(this.cachePolicyId);
    }

    @Import(name="cachedMethods", required=true)
    private Output<List<String>> cachedMethods;

    public Output<List<String>> cachedMethods() {
        return this.cachedMethods;
    }

    @Import(name="compress")
    private @Nullable Output<Boolean> compress;

    public Optional<Output<Boolean>> compress() {
        return Optional.ofNullable(this.compress);
    }

    @Import(name="defaultTtl")
    private @Nullable Output<Integer> defaultTtl;

    public Optional<Output<Integer>> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }

    @Import(name="fieldLevelEncryptionId")
    private @Nullable Output<String> fieldLevelEncryptionId;

    public Optional<Output<String>> fieldLevelEncryptionId() {
        return Optional.ofNullable(this.fieldLevelEncryptionId);
    }

    @Import(name="forwardedValues")
    private @Nullable Output<DistributionDefaultCacheBehaviorForwardedValuesArgs> forwardedValues;

    public Optional<Output<DistributionDefaultCacheBehaviorForwardedValuesArgs>> forwardedValues() {
        return Optional.ofNullable(this.forwardedValues);
    }

    @Import(name="functionAssociations")
    private @Nullable Output<List<DistributionDefaultCacheBehaviorFunctionAssociationArgs>> functionAssociations;

    public Optional<Output<List<DistributionDefaultCacheBehaviorFunctionAssociationArgs>>> functionAssociations() {
        return Optional.ofNullable(this.functionAssociations);
    }

    @Import(name="lambdaFunctionAssociations")
    private @Nullable Output<List<DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs>> lambdaFunctionAssociations;

    public Optional<Output<List<DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs>>> lambdaFunctionAssociations() {
        return Optional.ofNullable(this.lambdaFunctionAssociations);
    }

    @Import(name="maxTtl")
    private @Nullable Output<Integer> maxTtl;

    public Optional<Output<Integer>> maxTtl() {
        return Optional.ofNullable(this.maxTtl);
    }

    @Import(name="minTtl")
    private @Nullable Output<Integer> minTtl;

    public Optional<Output<Integer>> minTtl() {
        return Optional.ofNullable(this.minTtl);
    }

    @Import(name="originRequestPolicyId")
    private @Nullable Output<String> originRequestPolicyId;

    public Optional<Output<String>> originRequestPolicyId() {
        return Optional.ofNullable(this.originRequestPolicyId);
    }

    @Import(name="realtimeLogConfigArn")
    private @Nullable Output<String> realtimeLogConfigArn;

    public Optional<Output<String>> realtimeLogConfigArn() {
        return Optional.ofNullable(this.realtimeLogConfigArn);
    }

    @Import(name="responseHeadersPolicyId")
    private @Nullable Output<String> responseHeadersPolicyId;

    public Optional<Output<String>> responseHeadersPolicyId() {
        return Optional.ofNullable(this.responseHeadersPolicyId);
    }

    @Import(name="smoothStreaming")
    private @Nullable Output<Boolean> smoothStreaming;

    public Optional<Output<Boolean>> smoothStreaming() {
        return Optional.ofNullable(this.smoothStreaming);
    }

    @Import(name="targetOriginId", required=true)
    private Output<String> targetOriginId;

    public Output<String> targetOriginId() {
        return this.targetOriginId;
    }

    /**
     * List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    @Import(name="trustedKeyGroups")
    private @Nullable Output<List<String>> trustedKeyGroups;

    /**
     * @return List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    public Optional<Output<List<String>>> trustedKeyGroups() {
        return Optional.ofNullable(this.trustedKeyGroups);
    }

    /**
     * List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    @Import(name="trustedSigners")
    private @Nullable Output<List<String>> trustedSigners;

    /**
     * @return List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    public Optional<Output<List<String>>> trustedSigners() {
        return Optional.ofNullable(this.trustedSigners);
    }

    @Import(name="viewerProtocolPolicy", required=true)
    private Output<String> viewerProtocolPolicy;

    public Output<String> viewerProtocolPolicy() {
        return this.viewerProtocolPolicy;
    }

    private DistributionDefaultCacheBehaviorArgs() {}

    private DistributionDefaultCacheBehaviorArgs(DistributionDefaultCacheBehaviorArgs $) {
        this.allowedMethods = $.allowedMethods;
        this.cachePolicyId = $.cachePolicyId;
        this.cachedMethods = $.cachedMethods;
        this.compress = $.compress;
        this.defaultTtl = $.defaultTtl;
        this.fieldLevelEncryptionId = $.fieldLevelEncryptionId;
        this.forwardedValues = $.forwardedValues;
        this.functionAssociations = $.functionAssociations;
        this.lambdaFunctionAssociations = $.lambdaFunctionAssociations;
        this.maxTtl = $.maxTtl;
        this.minTtl = $.minTtl;
        this.originRequestPolicyId = $.originRequestPolicyId;
        this.realtimeLogConfigArn = $.realtimeLogConfigArn;
        this.responseHeadersPolicyId = $.responseHeadersPolicyId;
        this.smoothStreaming = $.smoothStreaming;
        this.targetOriginId = $.targetOriginId;
        this.trustedKeyGroups = $.trustedKeyGroups;
        this.trustedSigners = $.trustedSigners;
        this.viewerProtocolPolicy = $.viewerProtocolPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionDefaultCacheBehaviorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionDefaultCacheBehaviorArgs $;

        public Builder() {
            $ = new DistributionDefaultCacheBehaviorArgs();
        }

        public Builder(DistributionDefaultCacheBehaviorArgs defaults) {
            $ = new DistributionDefaultCacheBehaviorArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedMethods(Output<List<String>> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        public Builder allowedMethods(List<String> allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        public Builder cachePolicyId(@Nullable Output<String> cachePolicyId) {
            $.cachePolicyId = cachePolicyId;
            return this;
        }

        public Builder cachePolicyId(String cachePolicyId) {
            return cachePolicyId(Output.of(cachePolicyId));
        }

        public Builder cachedMethods(Output<List<String>> cachedMethods) {
            $.cachedMethods = cachedMethods;
            return this;
        }

        public Builder cachedMethods(List<String> cachedMethods) {
            return cachedMethods(Output.of(cachedMethods));
        }

        public Builder cachedMethods(String... cachedMethods) {
            return cachedMethods(List.of(cachedMethods));
        }

        public Builder compress(@Nullable Output<Boolean> compress) {
            $.compress = compress;
            return this;
        }

        public Builder compress(Boolean compress) {
            return compress(Output.of(compress));
        }

        public Builder defaultTtl(@Nullable Output<Integer> defaultTtl) {
            $.defaultTtl = defaultTtl;
            return this;
        }

        public Builder defaultTtl(Integer defaultTtl) {
            return defaultTtl(Output.of(defaultTtl));
        }

        public Builder fieldLevelEncryptionId(@Nullable Output<String> fieldLevelEncryptionId) {
            $.fieldLevelEncryptionId = fieldLevelEncryptionId;
            return this;
        }

        public Builder fieldLevelEncryptionId(String fieldLevelEncryptionId) {
            return fieldLevelEncryptionId(Output.of(fieldLevelEncryptionId));
        }

        public Builder forwardedValues(@Nullable Output<DistributionDefaultCacheBehaviorForwardedValuesArgs> forwardedValues) {
            $.forwardedValues = forwardedValues;
            return this;
        }

        public Builder forwardedValues(DistributionDefaultCacheBehaviorForwardedValuesArgs forwardedValues) {
            return forwardedValues(Output.of(forwardedValues));
        }

        public Builder functionAssociations(@Nullable Output<List<DistributionDefaultCacheBehaviorFunctionAssociationArgs>> functionAssociations) {
            $.functionAssociations = functionAssociations;
            return this;
        }

        public Builder functionAssociations(List<DistributionDefaultCacheBehaviorFunctionAssociationArgs> functionAssociations) {
            return functionAssociations(Output.of(functionAssociations));
        }

        public Builder functionAssociations(DistributionDefaultCacheBehaviorFunctionAssociationArgs... functionAssociations) {
            return functionAssociations(List.of(functionAssociations));
        }

        public Builder lambdaFunctionAssociations(@Nullable Output<List<DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs>> lambdaFunctionAssociations) {
            $.lambdaFunctionAssociations = lambdaFunctionAssociations;
            return this;
        }

        public Builder lambdaFunctionAssociations(List<DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs> lambdaFunctionAssociations) {
            return lambdaFunctionAssociations(Output.of(lambdaFunctionAssociations));
        }

        public Builder lambdaFunctionAssociations(DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs... lambdaFunctionAssociations) {
            return lambdaFunctionAssociations(List.of(lambdaFunctionAssociations));
        }

        public Builder maxTtl(@Nullable Output<Integer> maxTtl) {
            $.maxTtl = maxTtl;
            return this;
        }

        public Builder maxTtl(Integer maxTtl) {
            return maxTtl(Output.of(maxTtl));
        }

        public Builder minTtl(@Nullable Output<Integer> minTtl) {
            $.minTtl = minTtl;
            return this;
        }

        public Builder minTtl(Integer minTtl) {
            return minTtl(Output.of(minTtl));
        }

        public Builder originRequestPolicyId(@Nullable Output<String> originRequestPolicyId) {
            $.originRequestPolicyId = originRequestPolicyId;
            return this;
        }

        public Builder originRequestPolicyId(String originRequestPolicyId) {
            return originRequestPolicyId(Output.of(originRequestPolicyId));
        }

        public Builder realtimeLogConfigArn(@Nullable Output<String> realtimeLogConfigArn) {
            $.realtimeLogConfigArn = realtimeLogConfigArn;
            return this;
        }

        public Builder realtimeLogConfigArn(String realtimeLogConfigArn) {
            return realtimeLogConfigArn(Output.of(realtimeLogConfigArn));
        }

        public Builder responseHeadersPolicyId(@Nullable Output<String> responseHeadersPolicyId) {
            $.responseHeadersPolicyId = responseHeadersPolicyId;
            return this;
        }

        public Builder responseHeadersPolicyId(String responseHeadersPolicyId) {
            return responseHeadersPolicyId(Output.of(responseHeadersPolicyId));
        }

        public Builder smoothStreaming(@Nullable Output<Boolean> smoothStreaming) {
            $.smoothStreaming = smoothStreaming;
            return this;
        }

        public Builder smoothStreaming(Boolean smoothStreaming) {
            return smoothStreaming(Output.of(smoothStreaming));
        }

        public Builder targetOriginId(Output<String> targetOriginId) {
            $.targetOriginId = targetOriginId;
            return this;
        }

        public Builder targetOriginId(String targetOriginId) {
            return targetOriginId(Output.of(targetOriginId));
        }

        /**
         * @param trustedKeyGroups List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedKeyGroups(@Nullable Output<List<String>> trustedKeyGroups) {
            $.trustedKeyGroups = trustedKeyGroups;
            return this;
        }

        /**
         * @param trustedKeyGroups List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedKeyGroups(List<String> trustedKeyGroups) {
            return trustedKeyGroups(Output.of(trustedKeyGroups));
        }

        /**
         * @param trustedKeyGroups List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedKeyGroups(String... trustedKeyGroups) {
            return trustedKeyGroups(List.of(trustedKeyGroups));
        }

        /**
         * @param trustedSigners List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedSigners(@Nullable Output<List<String>> trustedSigners) {
            $.trustedSigners = trustedSigners;
            return this;
        }

        /**
         * @param trustedSigners List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedSigners(List<String> trustedSigners) {
            return trustedSigners(Output.of(trustedSigners));
        }

        /**
         * @param trustedSigners List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
         * 
         * @return builder
         * 
         */
        public Builder trustedSigners(String... trustedSigners) {
            return trustedSigners(List.of(trustedSigners));
        }

        public Builder viewerProtocolPolicy(Output<String> viewerProtocolPolicy) {
            $.viewerProtocolPolicy = viewerProtocolPolicy;
            return this;
        }

        public Builder viewerProtocolPolicy(String viewerProtocolPolicy) {
            return viewerProtocolPolicy(Output.of(viewerProtocolPolicy));
        }

        public DistributionDefaultCacheBehaviorArgs build() {
            if ($.allowedMethods == null) {
                throw new MissingRequiredPropertyException("DistributionDefaultCacheBehaviorArgs", "allowedMethods");
            }
            if ($.cachedMethods == null) {
                throw new MissingRequiredPropertyException("DistributionDefaultCacheBehaviorArgs", "cachedMethods");
            }
            if ($.targetOriginId == null) {
                throw new MissingRequiredPropertyException("DistributionDefaultCacheBehaviorArgs", "targetOriginId");
            }
            if ($.viewerProtocolPolicy == null) {
                throw new MissingRequiredPropertyException("DistributionDefaultCacheBehaviorArgs", "viewerProtocolPolicy");
            }
            return $;
        }
    }

}
