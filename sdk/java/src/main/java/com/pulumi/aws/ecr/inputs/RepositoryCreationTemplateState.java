// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.aws.ecr.inputs.RepositoryCreationTemplateEncryptionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryCreationTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryCreationTemplateState Empty = new RepositoryCreationTemplateState();

    /**
     * Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
     * 
     */
    @Import(name="appliedFors")
    private @Nullable Output<List<String>> appliedFors;

    /**
     * @return Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
     * 
     */
    public Optional<Output<List<String>>> appliedFors() {
        return Optional.ofNullable(this.appliedFors);
    }

    /**
     * A custom IAM role to use for repository creation. Required if using repository tags or KMS encryption.
     * 
     */
    @Import(name="customRoleArn")
    private @Nullable Output<String> customRoleArn;

    /**
     * @return A custom IAM role to use for repository creation. Required if using repository tags or KMS encryption.
     * 
     */
    public Optional<Output<String>> customRoleArn() {
        return Optional.ofNullable(this.customRoleArn);
    }

    /**
     * The description for this template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for this template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Encryption configuration for any created repositories. See below for schema.
     * 
     */
    @Import(name="encryptionConfigurations")
    private @Nullable Output<List<RepositoryCreationTemplateEncryptionConfigurationArgs>> encryptionConfigurations;

    /**
     * @return Encryption configuration for any created repositories. See below for schema.
     * 
     */
    public Optional<Output<List<RepositoryCreationTemplateEncryptionConfigurationArgs>>> encryptionConfigurations() {
        return Optional.ofNullable(this.encryptionConfigurations);
    }

    /**
     * The tag mutability setting for any created repositories. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
     * 
     */
    @Import(name="imageTagMutability")
    private @Nullable Output<String> imageTagMutability;

    /**
     * @return The tag mutability setting for any created repositories. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
     * 
     */
    public Optional<Output<String>> imageTagMutability() {
        return Optional.ofNullable(this.imageTagMutability);
    }

    /**
     * The lifecycle policy document to apply to any created repositories. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs. Consider using the `aws.ecr.getLifecyclePolicyDocument` data_source to generate/manage the JSON document used for the `lifecycle_policy` argument.
     * 
     */
    @Import(name="lifecyclePolicy")
    private @Nullable Output<String> lifecyclePolicy;

    /**
     * @return The lifecycle policy document to apply to any created repositories. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs. Consider using the `aws.ecr.getLifecyclePolicyDocument` data_source to generate/manage the JSON document used for the `lifecycle_policy` argument.
     * 
     */
    public Optional<Output<String>> lifecyclePolicy() {
        return Optional.ofNullable(this.lifecyclePolicy);
    }

    /**
     * The repository name prefix to match against. Use `ROOT` to match any prefix that doesn&#39;t explicitly match another template.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return The repository name prefix to match against. Use `ROOT` to match any prefix that doesn&#39;t explicitly match another template.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The registry ID the repository creation template applies to.
     * 
     */
    @Import(name="registryId")
    private @Nullable Output<String> registryId;

    /**
     * @return The registry ID the repository creation template applies to.
     * 
     */
    public Optional<Output<String>> registryId() {
        return Optional.ofNullable(this.registryId);
    }

    @Import(name="repositoryPolicy")
    private @Nullable Output<String> repositoryPolicy;

    public Optional<Output<String>> repositoryPolicy() {
        return Optional.ofNullable(this.repositoryPolicy);
    }

    /**
     * A map of tags to assign to any created repositories.
     * 
     */
    @Import(name="resourceTags")
    private @Nullable Output<Map<String,String>> resourceTags;

    /**
     * @return A map of tags to assign to any created repositories.
     * 
     */
    public Optional<Output<Map<String,String>>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    private RepositoryCreationTemplateState() {}

    private RepositoryCreationTemplateState(RepositoryCreationTemplateState $) {
        this.appliedFors = $.appliedFors;
        this.customRoleArn = $.customRoleArn;
        this.description = $.description;
        this.encryptionConfigurations = $.encryptionConfigurations;
        this.imageTagMutability = $.imageTagMutability;
        this.lifecyclePolicy = $.lifecyclePolicy;
        this.prefix = $.prefix;
        this.registryId = $.registryId;
        this.repositoryPolicy = $.repositoryPolicy;
        this.resourceTags = $.resourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryCreationTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryCreationTemplateState $;

        public Builder() {
            $ = new RepositoryCreationTemplateState();
        }

        public Builder(RepositoryCreationTemplateState defaults) {
            $ = new RepositoryCreationTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appliedFors Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
         * 
         * @return builder
         * 
         */
        public Builder appliedFors(@Nullable Output<List<String>> appliedFors) {
            $.appliedFors = appliedFors;
            return this;
        }

        /**
         * @param appliedFors Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
         * 
         * @return builder
         * 
         */
        public Builder appliedFors(List<String> appliedFors) {
            return appliedFors(Output.of(appliedFors));
        }

        /**
         * @param appliedFors Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
         * 
         * @return builder
         * 
         */
        public Builder appliedFors(String... appliedFors) {
            return appliedFors(List.of(appliedFors));
        }

        /**
         * @param customRoleArn A custom IAM role to use for repository creation. Required if using repository tags or KMS encryption.
         * 
         * @return builder
         * 
         */
        public Builder customRoleArn(@Nullable Output<String> customRoleArn) {
            $.customRoleArn = customRoleArn;
            return this;
        }

        /**
         * @param customRoleArn A custom IAM role to use for repository creation. Required if using repository tags or KMS encryption.
         * 
         * @return builder
         * 
         */
        public Builder customRoleArn(String customRoleArn) {
            return customRoleArn(Output.of(customRoleArn));
        }

        /**
         * @param description The description for this template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for this template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptionConfigurations Encryption configuration for any created repositories. See below for schema.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(@Nullable Output<List<RepositoryCreationTemplateEncryptionConfigurationArgs>> encryptionConfigurations) {
            $.encryptionConfigurations = encryptionConfigurations;
            return this;
        }

        /**
         * @param encryptionConfigurations Encryption configuration for any created repositories. See below for schema.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(List<RepositoryCreationTemplateEncryptionConfigurationArgs> encryptionConfigurations) {
            return encryptionConfigurations(Output.of(encryptionConfigurations));
        }

        /**
         * @param encryptionConfigurations Encryption configuration for any created repositories. See below for schema.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(RepositoryCreationTemplateEncryptionConfigurationArgs... encryptionConfigurations) {
            return encryptionConfigurations(List.of(encryptionConfigurations));
        }

        /**
         * @param imageTagMutability The tag mutability setting for any created repositories. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
         * 
         * @return builder
         * 
         */
        public Builder imageTagMutability(@Nullable Output<String> imageTagMutability) {
            $.imageTagMutability = imageTagMutability;
            return this;
        }

        /**
         * @param imageTagMutability The tag mutability setting for any created repositories. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
         * 
         * @return builder
         * 
         */
        public Builder imageTagMutability(String imageTagMutability) {
            return imageTagMutability(Output.of(imageTagMutability));
        }

        /**
         * @param lifecyclePolicy The lifecycle policy document to apply to any created repositories. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs. Consider using the `aws.ecr.getLifecyclePolicyDocument` data_source to generate/manage the JSON document used for the `lifecycle_policy` argument.
         * 
         * @return builder
         * 
         */
        public Builder lifecyclePolicy(@Nullable Output<String> lifecyclePolicy) {
            $.lifecyclePolicy = lifecyclePolicy;
            return this;
        }

        /**
         * @param lifecyclePolicy The lifecycle policy document to apply to any created repositories. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs. Consider using the `aws.ecr.getLifecyclePolicyDocument` data_source to generate/manage the JSON document used for the `lifecycle_policy` argument.
         * 
         * @return builder
         * 
         */
        public Builder lifecyclePolicy(String lifecyclePolicy) {
            return lifecyclePolicy(Output.of(lifecyclePolicy));
        }

        /**
         * @param prefix The repository name prefix to match against. Use `ROOT` to match any prefix that doesn&#39;t explicitly match another template.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The repository name prefix to match against. Use `ROOT` to match any prefix that doesn&#39;t explicitly match another template.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param registryId The registry ID the repository creation template applies to.
         * 
         * @return builder
         * 
         */
        public Builder registryId(@Nullable Output<String> registryId) {
            $.registryId = registryId;
            return this;
        }

        /**
         * @param registryId The registry ID the repository creation template applies to.
         * 
         * @return builder
         * 
         */
        public Builder registryId(String registryId) {
            return registryId(Output.of(registryId));
        }

        public Builder repositoryPolicy(@Nullable Output<String> repositoryPolicy) {
            $.repositoryPolicy = repositoryPolicy;
            return this;
        }

        public Builder repositoryPolicy(String repositoryPolicy) {
            return repositoryPolicy(Output.of(repositoryPolicy));
        }

        /**
         * @param resourceTags A map of tags to assign to any created repositories.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(@Nullable Output<Map<String,String>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        /**
         * @param resourceTags A map of tags to assign to any created repositories.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(Map<String,String> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public RepositoryCreationTemplateState build() {
            return $;
        }
    }

}
