// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkgroupPricePerformanceTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkgroupPricePerformanceTargetArgs Empty = new WorkgroupPricePerformanceTargetArgs();

    /**
     * Whether to enable price-performance scaling.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether to enable price-performance scaling.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The price-performance scaling level. Valid values are `1` (LOW_COST), `25` (ECONOMICAL), `50` (BALANCED), `75` (RESOURCEFUL), and `100` (HIGH_PERFORMANCE).
     * 
     */
    @Import(name="level")
    private @Nullable Output<Integer> level;

    /**
     * @return The price-performance scaling level. Valid values are `1` (LOW_COST), `25` (ECONOMICAL), `50` (BALANCED), `75` (RESOURCEFUL), and `100` (HIGH_PERFORMANCE).
     * 
     */
    public Optional<Output<Integer>> level() {
        return Optional.ofNullable(this.level);
    }

    private WorkgroupPricePerformanceTargetArgs() {}

    private WorkgroupPricePerformanceTargetArgs(WorkgroupPricePerformanceTargetArgs $) {
        this.enabled = $.enabled;
        this.level = $.level;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkgroupPricePerformanceTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkgroupPricePerformanceTargetArgs $;

        public Builder() {
            $ = new WorkgroupPricePerformanceTargetArgs();
        }

        public Builder(WorkgroupPricePerformanceTargetArgs defaults) {
            $ = new WorkgroupPricePerformanceTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether to enable price-performance scaling.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to enable price-performance scaling.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param level The price-performance scaling level. Valid values are `1` (LOW_COST), `25` (ECONOMICAL), `50` (BALANCED), `75` (RESOURCEFUL), and `100` (HIGH_PERFORMANCE).
         * 
         * @return builder
         * 
         */
        public Builder level(@Nullable Output<Integer> level) {
            $.level = level;
            return this;
        }

        /**
         * @param level The price-performance scaling level. Valid values are `1` (LOW_COST), `25` (ECONOMICAL), `50` (BALANCED), `75` (RESOURCEFUL), and `100` (HIGH_PERFORMANCE).
         * 
         * @return builder
         * 
         */
        public Builder level(Integer level) {
            return level(Output.of(level));
        }

        public WorkgroupPricePerformanceTargetArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("WorkgroupPricePerformanceTargetArgs", "enabled");
            }
            return $;
        }
    }

}
