// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.SelectAllOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FreeFormLayoutElementsRenderingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FreeFormLayoutElementsRenderingRuleArgs Empty = new FreeFormLayoutElementsRenderingRuleArgs();

    @Import(name="configurationOverrides", required=true)
    private Output<SelectAllOptionsArgs> configurationOverrides;

    public Output<SelectAllOptionsArgs> configurationOverrides() {
        return this.configurationOverrides;
    }

    @Import(name="expression", required=true)
    private Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }

    private FreeFormLayoutElementsRenderingRuleArgs() {}

    private FreeFormLayoutElementsRenderingRuleArgs(FreeFormLayoutElementsRenderingRuleArgs $) {
        this.configurationOverrides = $.configurationOverrides;
        this.expression = $.expression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FreeFormLayoutElementsRenderingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FreeFormLayoutElementsRenderingRuleArgs $;

        public Builder() {
            $ = new FreeFormLayoutElementsRenderingRuleArgs();
        }

        public Builder(FreeFormLayoutElementsRenderingRuleArgs defaults) {
            $ = new FreeFormLayoutElementsRenderingRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder configurationOverrides(Output<SelectAllOptionsArgs> configurationOverrides) {
            $.configurationOverrides = configurationOverrides;
            return this;
        }

        public Builder configurationOverrides(SelectAllOptionsArgs configurationOverrides) {
            return configurationOverrides(Output.of(configurationOverrides));
        }

        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public FreeFormLayoutElementsRenderingRuleArgs build() {
            if ($.configurationOverrides == null) {
                throw new MissingRequiredPropertyException("FreeFormLayoutElementsRenderingRuleArgs", "configurationOverrides");
            }
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("FreeFormLayoutElementsRenderingRuleArgs", "expression");
            }
            return $;
        }
    }

}
