// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.outputs;

import com.pulumi.aws.secretsmanager.outputs.GetSecretRotationRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSecretResult {
    /**
     * @return ARN of the secret.
     * 
     */
    private String arn;
    /**
     * @return Description of the secret.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Key Management Service (KMS) Customer Master Key (CMK) associated with the secret.
     * 
     */
    private String kmsKeyId;
    private String name;
    /**
     * @return Resource-based policy document that&#39;s attached to the secret.
     * 
     */
    private String policy;
    /**
     * @return Whether rotation is enabled or not.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    private Boolean rotationEnabled;
    /**
     * @return Rotation Lambda function ARN if rotation is enabled.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    private String rotationLambdaArn;
    /**
     * @return Rotation rules if rotation is enabled.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    private List<GetSecretRotationRule> rotationRules;
    /**
     * @return Tags of the secret.
     * 
     */
    private Map<String,String> tags;

    private GetSecretResult() {}
    /**
     * @return ARN of the secret.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Description of the secret.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Key Management Service (KMS) Customer Master Key (CMK) associated with the secret.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Resource-based policy document that&#39;s attached to the secret.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return Whether rotation is enabled or not.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    public Boolean rotationEnabled() {
        return this.rotationEnabled;
    }
    /**
     * @return Rotation Lambda function ARN if rotation is enabled.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    public String rotationLambdaArn() {
        return this.rotationLambdaArn;
    }
    /**
     * @return Rotation rules if rotation is enabled.
     * 
     * @deprecated
     * Use the aws_secretsmanager_secret_rotation data source instead
     * 
     */
    @Deprecated /* Use the aws_secretsmanager_secret_rotation data source instead */
    public List<GetSecretRotationRule> rotationRules() {
        return this.rotationRules;
    }
    /**
     * @return Tags of the secret.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String id;
        private String kmsKeyId;
        private String name;
        private String policy;
        private Boolean rotationEnabled;
        private String rotationLambdaArn;
        private List<GetSecretRotationRule> rotationRules;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetSecretResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.rotationEnabled = defaults.rotationEnabled;
    	      this.rotationLambdaArn = defaults.rotationLambdaArn;
    	      this.rotationRules = defaults.rotationRules;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }
        @CustomType.Setter
        public Builder rotationEnabled(Boolean rotationEnabled) {
            this.rotationEnabled = Objects.requireNonNull(rotationEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder rotationLambdaArn(String rotationLambdaArn) {
            this.rotationLambdaArn = Objects.requireNonNull(rotationLambdaArn);
            return this;
        }
        @CustomType.Setter
        public Builder rotationRules(List<GetSecretRotationRule> rotationRules) {
            this.rotationRules = Objects.requireNonNull(rotationRules);
            return this;
        }
        public Builder rotationRules(GetSecretRotationRule... rotationRules) {
            return rotationRules(List.of(rotationRules));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetSecretResult build() {
            final var o = new GetSecretResult();
            o.arn = arn;
            o.description = description;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.name = name;
            o.policy = policy;
            o.rotationEnabled = rotationEnabled;
            o.rotationLambdaArn = rotationLambdaArn;
            o.rotationRules = rotationRules;
            o.tags = tags;
            return o;
        }
    }
}
