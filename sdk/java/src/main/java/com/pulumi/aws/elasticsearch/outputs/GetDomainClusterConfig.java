// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.outputs;

import com.pulumi.aws.elasticsearch.outputs.GetDomainClusterConfigColdStorageOption;
import com.pulumi.aws.elasticsearch.outputs.GetDomainClusterConfigZoneAwarenessConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainClusterConfig {
    /**
     * @return Configuration block containing cold storage configuration.
     * 
     */
    private @Nullable List<GetDomainClusterConfigColdStorageOption> coldStorageOptions;
    /**
     * @return Number of dedicated master nodes in the cluster.
     * 
     */
    private @Nullable Integer dedicatedMasterCount;
    /**
     * @return Indicates whether dedicated master nodes are enabled for the cluster.
     * 
     */
    private @Nullable Boolean dedicatedMasterEnabled;
    /**
     * @return Instance type of the dedicated master nodes in the cluster.
     * 
     */
    private @Nullable String dedicatedMasterType;
    /**
     * @return Number of instances in the cluster.
     * 
     */
    private @Nullable Integer instanceCount;
    /**
     * @return Instance type of data nodes in the cluster.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return The number of warm nodes in the cluster.
     * 
     */
    private @Nullable Integer warmCount;
    /**
     * @return Warm storage is enabled.
     * 
     */
    private @Nullable Boolean warmEnabled;
    /**
     * @return The instance type for the Elasticsearch cluster&#39;s warm nodes.
     * 
     */
    private @Nullable String warmType;
    /**
     * @return Configuration block containing zone awareness settings.
     * 
     */
    private @Nullable List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs;
    /**
     * @return Indicates whether zone awareness is enabled.
     * 
     */
    private @Nullable Boolean zoneAwarenessEnabled;

    private GetDomainClusterConfig() {}
    /**
     * @return Configuration block containing cold storage configuration.
     * 
     */
    public List<GetDomainClusterConfigColdStorageOption> coldStorageOptions() {
        return this.coldStorageOptions == null ? List.of() : this.coldStorageOptions;
    }
    /**
     * @return Number of dedicated master nodes in the cluster.
     * 
     */
    public Optional<Integer> dedicatedMasterCount() {
        return Optional.ofNullable(this.dedicatedMasterCount);
    }
    /**
     * @return Indicates whether dedicated master nodes are enabled for the cluster.
     * 
     */
    public Optional<Boolean> dedicatedMasterEnabled() {
        return Optional.ofNullable(this.dedicatedMasterEnabled);
    }
    /**
     * @return Instance type of the dedicated master nodes in the cluster.
     * 
     */
    public Optional<String> dedicatedMasterType() {
        return Optional.ofNullable(this.dedicatedMasterType);
    }
    /**
     * @return Number of instances in the cluster.
     * 
     */
    public Optional<Integer> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }
    /**
     * @return Instance type of data nodes in the cluster.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return The number of warm nodes in the cluster.
     * 
     */
    public Optional<Integer> warmCount() {
        return Optional.ofNullable(this.warmCount);
    }
    /**
     * @return Warm storage is enabled.
     * 
     */
    public Optional<Boolean> warmEnabled() {
        return Optional.ofNullable(this.warmEnabled);
    }
    /**
     * @return The instance type for the Elasticsearch cluster&#39;s warm nodes.
     * 
     */
    public Optional<String> warmType() {
        return Optional.ofNullable(this.warmType);
    }
    /**
     * @return Configuration block containing zone awareness settings.
     * 
     */
    public List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs() {
        return this.zoneAwarenessConfigs == null ? List.of() : this.zoneAwarenessConfigs;
    }
    /**
     * @return Indicates whether zone awareness is enabled.
     * 
     */
    public Optional<Boolean> zoneAwarenessEnabled() {
        return Optional.ofNullable(this.zoneAwarenessEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetDomainClusterConfigColdStorageOption> coldStorageOptions;
        private @Nullable Integer dedicatedMasterCount;
        private @Nullable Boolean dedicatedMasterEnabled;
        private @Nullable String dedicatedMasterType;
        private @Nullable Integer instanceCount;
        private @Nullable String instanceType;
        private @Nullable Integer warmCount;
        private @Nullable Boolean warmEnabled;
        private @Nullable String warmType;
        private @Nullable List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs;
        private @Nullable Boolean zoneAwarenessEnabled;
        public Builder() {}
        public Builder(GetDomainClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coldStorageOptions = defaults.coldStorageOptions;
    	      this.dedicatedMasterCount = defaults.dedicatedMasterCount;
    	      this.dedicatedMasterEnabled = defaults.dedicatedMasterEnabled;
    	      this.dedicatedMasterType = defaults.dedicatedMasterType;
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.warmCount = defaults.warmCount;
    	      this.warmEnabled = defaults.warmEnabled;
    	      this.warmType = defaults.warmType;
    	      this.zoneAwarenessConfigs = defaults.zoneAwarenessConfigs;
    	      this.zoneAwarenessEnabled = defaults.zoneAwarenessEnabled;
        }

        @CustomType.Setter
        public Builder coldStorageOptions(@Nullable List<GetDomainClusterConfigColdStorageOption> coldStorageOptions) {
            this.coldStorageOptions = coldStorageOptions;
            return this;
        }
        public Builder coldStorageOptions(GetDomainClusterConfigColdStorageOption... coldStorageOptions) {
            return coldStorageOptions(List.of(coldStorageOptions));
        }
        @CustomType.Setter
        public Builder dedicatedMasterCount(@Nullable Integer dedicatedMasterCount) {
            this.dedicatedMasterCount = dedicatedMasterCount;
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedMasterEnabled(@Nullable Boolean dedicatedMasterEnabled) {
            this.dedicatedMasterEnabled = dedicatedMasterEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedMasterType(@Nullable String dedicatedMasterType) {
            this.dedicatedMasterType = dedicatedMasterType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceCount(@Nullable Integer instanceCount) {
            this.instanceCount = instanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder warmCount(@Nullable Integer warmCount) {
            this.warmCount = warmCount;
            return this;
        }
        @CustomType.Setter
        public Builder warmEnabled(@Nullable Boolean warmEnabled) {
            this.warmEnabled = warmEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder warmType(@Nullable String warmType) {
            this.warmType = warmType;
            return this;
        }
        @CustomType.Setter
        public Builder zoneAwarenessConfigs(@Nullable List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs) {
            this.zoneAwarenessConfigs = zoneAwarenessConfigs;
            return this;
        }
        public Builder zoneAwarenessConfigs(GetDomainClusterConfigZoneAwarenessConfig... zoneAwarenessConfigs) {
            return zoneAwarenessConfigs(List.of(zoneAwarenessConfigs));
        }
        @CustomType.Setter
        public Builder zoneAwarenessEnabled(@Nullable Boolean zoneAwarenessEnabled) {
            this.zoneAwarenessEnabled = zoneAwarenessEnabled;
            return this;
        }
        public GetDomainClusterConfig build() {
            final var o = new GetDomainClusterConfig();
            o.coldStorageOptions = coldStorageOptions;
            o.dedicatedMasterCount = dedicatedMasterCount;
            o.dedicatedMasterEnabled = dedicatedMasterEnabled;
            o.dedicatedMasterType = dedicatedMasterType;
            o.instanceCount = instanceCount;
            o.instanceType = instanceType;
            o.warmCount = warmCount;
            o.warmEnabled = warmEnabled;
            o.warmType = warmType;
            o.zoneAwarenessConfigs = zoneAwarenessConfigs;
            o.zoneAwarenessEnabled = zoneAwarenessEnabled;
            return o;
        }
    }
}
