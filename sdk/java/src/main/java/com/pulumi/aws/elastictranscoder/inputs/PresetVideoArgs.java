// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PresetVideoArgs extends com.pulumi.resources.ResourceArgs {

    public static final PresetVideoArgs Empty = new PresetVideoArgs();

    @Import(name="aspectRatio")
    private @Nullable Output<String> aspectRatio;

    public Optional<Output<String>> aspectRatio() {
        return Optional.ofNullable(this.aspectRatio);
    }

    @Import(name="bitRate")
    private @Nullable Output<String> bitRate;

    public Optional<Output<String>> bitRate() {
        return Optional.ofNullable(this.bitRate);
    }

    @Import(name="codec")
    private @Nullable Output<String> codec;

    public Optional<Output<String>> codec() {
        return Optional.ofNullable(this.codec);
    }

    @Import(name="displayAspectRatio")
    private @Nullable Output<String> displayAspectRatio;

    public Optional<Output<String>> displayAspectRatio() {
        return Optional.ofNullable(this.displayAspectRatio);
    }

    @Import(name="fixedGop")
    private @Nullable Output<String> fixedGop;

    public Optional<Output<String>> fixedGop() {
        return Optional.ofNullable(this.fixedGop);
    }

    @Import(name="frameRate")
    private @Nullable Output<String> frameRate;

    public Optional<Output<String>> frameRate() {
        return Optional.ofNullable(this.frameRate);
    }

    @Import(name="keyframesMaxDist")
    private @Nullable Output<String> keyframesMaxDist;

    public Optional<Output<String>> keyframesMaxDist() {
        return Optional.ofNullable(this.keyframesMaxDist);
    }

    @Import(name="maxFrameRate")
    private @Nullable Output<String> maxFrameRate;

    public Optional<Output<String>> maxFrameRate() {
        return Optional.ofNullable(this.maxFrameRate);
    }

    @Import(name="maxHeight")
    private @Nullable Output<String> maxHeight;

    public Optional<Output<String>> maxHeight() {
        return Optional.ofNullable(this.maxHeight);
    }

    @Import(name="maxWidth")
    private @Nullable Output<String> maxWidth;

    public Optional<Output<String>> maxWidth() {
        return Optional.ofNullable(this.maxWidth);
    }

    @Import(name="paddingPolicy")
    private @Nullable Output<String> paddingPolicy;

    public Optional<Output<String>> paddingPolicy() {
        return Optional.ofNullable(this.paddingPolicy);
    }

    @Import(name="resolution")
    private @Nullable Output<String> resolution;

    public Optional<Output<String>> resolution() {
        return Optional.ofNullable(this.resolution);
    }

    @Import(name="sizingPolicy")
    private @Nullable Output<String> sizingPolicy;

    public Optional<Output<String>> sizingPolicy() {
        return Optional.ofNullable(this.sizingPolicy);
    }

    private PresetVideoArgs() {}

    private PresetVideoArgs(PresetVideoArgs $) {
        this.aspectRatio = $.aspectRatio;
        this.bitRate = $.bitRate;
        this.codec = $.codec;
        this.displayAspectRatio = $.displayAspectRatio;
        this.fixedGop = $.fixedGop;
        this.frameRate = $.frameRate;
        this.keyframesMaxDist = $.keyframesMaxDist;
        this.maxFrameRate = $.maxFrameRate;
        this.maxHeight = $.maxHeight;
        this.maxWidth = $.maxWidth;
        this.paddingPolicy = $.paddingPolicy;
        this.resolution = $.resolution;
        this.sizingPolicy = $.sizingPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PresetVideoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PresetVideoArgs $;

        public Builder() {
            $ = new PresetVideoArgs();
        }

        public Builder(PresetVideoArgs defaults) {
            $ = new PresetVideoArgs(Objects.requireNonNull(defaults));
        }

        public Builder aspectRatio(@Nullable Output<String> aspectRatio) {
            $.aspectRatio = aspectRatio;
            return this;
        }

        public Builder aspectRatio(String aspectRatio) {
            return aspectRatio(Output.of(aspectRatio));
        }

        public Builder bitRate(@Nullable Output<String> bitRate) {
            $.bitRate = bitRate;
            return this;
        }

        public Builder bitRate(String bitRate) {
            return bitRate(Output.of(bitRate));
        }

        public Builder codec(@Nullable Output<String> codec) {
            $.codec = codec;
            return this;
        }

        public Builder codec(String codec) {
            return codec(Output.of(codec));
        }

        public Builder displayAspectRatio(@Nullable Output<String> displayAspectRatio) {
            $.displayAspectRatio = displayAspectRatio;
            return this;
        }

        public Builder displayAspectRatio(String displayAspectRatio) {
            return displayAspectRatio(Output.of(displayAspectRatio));
        }

        public Builder fixedGop(@Nullable Output<String> fixedGop) {
            $.fixedGop = fixedGop;
            return this;
        }

        public Builder fixedGop(String fixedGop) {
            return fixedGop(Output.of(fixedGop));
        }

        public Builder frameRate(@Nullable Output<String> frameRate) {
            $.frameRate = frameRate;
            return this;
        }

        public Builder frameRate(String frameRate) {
            return frameRate(Output.of(frameRate));
        }

        public Builder keyframesMaxDist(@Nullable Output<String> keyframesMaxDist) {
            $.keyframesMaxDist = keyframesMaxDist;
            return this;
        }

        public Builder keyframesMaxDist(String keyframesMaxDist) {
            return keyframesMaxDist(Output.of(keyframesMaxDist));
        }

        public Builder maxFrameRate(@Nullable Output<String> maxFrameRate) {
            $.maxFrameRate = maxFrameRate;
            return this;
        }

        public Builder maxFrameRate(String maxFrameRate) {
            return maxFrameRate(Output.of(maxFrameRate));
        }

        public Builder maxHeight(@Nullable Output<String> maxHeight) {
            $.maxHeight = maxHeight;
            return this;
        }

        public Builder maxHeight(String maxHeight) {
            return maxHeight(Output.of(maxHeight));
        }

        public Builder maxWidth(@Nullable Output<String> maxWidth) {
            $.maxWidth = maxWidth;
            return this;
        }

        public Builder maxWidth(String maxWidth) {
            return maxWidth(Output.of(maxWidth));
        }

        public Builder paddingPolicy(@Nullable Output<String> paddingPolicy) {
            $.paddingPolicy = paddingPolicy;
            return this;
        }

        public Builder paddingPolicy(String paddingPolicy) {
            return paddingPolicy(Output.of(paddingPolicy));
        }

        public Builder resolution(@Nullable Output<String> resolution) {
            $.resolution = resolution;
            return this;
        }

        public Builder resolution(String resolution) {
            return resolution(Output.of(resolution));
        }

        public Builder sizingPolicy(@Nullable Output<String> sizingPolicy) {
            $.sizingPolicy = sizingPolicy;
            return this;
        }

        public Builder sizingPolicy(String sizingPolicy) {
            return sizingPolicy(Output.of(sizingPolicy));
        }

        public PresetVideoArgs build() {
            return $;
        }
    }

}
