// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub.inputs;

import com.pulumi.aws.securityhub.inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationPolicyConfigurationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationPolicyConfigurationPolicyArgs Empty = new ConfigurationPolicyConfigurationPolicyArgs();

    /**
     * A list that defines which security standards are enabled in the configuration policy.
     * 
     */
    @Import(name="enabledStandardArns", required=true)
    private Output<List<String>> enabledStandardArns;

    /**
     * @return A list that defines which security standards are enabled in the configuration policy.
     * 
     */
    public Output<List<String>> enabledStandardArns() {
        return this.enabledStandardArns;
    }

    /**
     * Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
     * 
     */
    @Import(name="securityControlsConfiguration")
    private @Nullable Output<ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs> securityControlsConfiguration;

    /**
     * @return Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
     * 
     */
    public Optional<Output<ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs>> securityControlsConfiguration() {
        return Optional.ofNullable(this.securityControlsConfiguration);
    }

    /**
     * Indicates whether Security Hub is enabled in the policy.
     * 
     */
    @Import(name="serviceEnabled", required=true)
    private Output<Boolean> serviceEnabled;

    /**
     * @return Indicates whether Security Hub is enabled in the policy.
     * 
     */
    public Output<Boolean> serviceEnabled() {
        return this.serviceEnabled;
    }

    private ConfigurationPolicyConfigurationPolicyArgs() {}

    private ConfigurationPolicyConfigurationPolicyArgs(ConfigurationPolicyConfigurationPolicyArgs $) {
        this.enabledStandardArns = $.enabledStandardArns;
        this.securityControlsConfiguration = $.securityControlsConfiguration;
        this.serviceEnabled = $.serviceEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationPolicyConfigurationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationPolicyConfigurationPolicyArgs $;

        public Builder() {
            $ = new ConfigurationPolicyConfigurationPolicyArgs();
        }

        public Builder(ConfigurationPolicyConfigurationPolicyArgs defaults) {
            $ = new ConfigurationPolicyConfigurationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabledStandardArns A list that defines which security standards are enabled in the configuration policy.
         * 
         * @return builder
         * 
         */
        public Builder enabledStandardArns(Output<List<String>> enabledStandardArns) {
            $.enabledStandardArns = enabledStandardArns;
            return this;
        }

        /**
         * @param enabledStandardArns A list that defines which security standards are enabled in the configuration policy.
         * 
         * @return builder
         * 
         */
        public Builder enabledStandardArns(List<String> enabledStandardArns) {
            return enabledStandardArns(Output.of(enabledStandardArns));
        }

        /**
         * @param enabledStandardArns A list that defines which security standards are enabled in the configuration policy.
         * 
         * @return builder
         * 
         */
        public Builder enabledStandardArns(String... enabledStandardArns) {
            return enabledStandardArns(List.of(enabledStandardArns));
        }

        /**
         * @param securityControlsConfiguration Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
         * 
         * @return builder
         * 
         */
        public Builder securityControlsConfiguration(@Nullable Output<ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs> securityControlsConfiguration) {
            $.securityControlsConfiguration = securityControlsConfiguration;
            return this;
        }

        /**
         * @param securityControlsConfiguration Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
         * 
         * @return builder
         * 
         */
        public Builder securityControlsConfiguration(ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs securityControlsConfiguration) {
            return securityControlsConfiguration(Output.of(securityControlsConfiguration));
        }

        /**
         * @param serviceEnabled Indicates whether Security Hub is enabled in the policy.
         * 
         * @return builder
         * 
         */
        public Builder serviceEnabled(Output<Boolean> serviceEnabled) {
            $.serviceEnabled = serviceEnabled;
            return this;
        }

        /**
         * @param serviceEnabled Indicates whether Security Hub is enabled in the policy.
         * 
         * @return builder
         * 
         */
        public Builder serviceEnabled(Boolean serviceEnabled) {
            return serviceEnabled(Output.of(serviceEnabled));
        }

        public ConfigurationPolicyConfigurationPolicyArgs build() {
            if ($.enabledStandardArns == null) {
                throw new MissingRequiredPropertyException("ConfigurationPolicyConfigurationPolicyArgs", "enabledStandardArns");
            }
            if ($.serviceEnabled == null) {
                throw new MissingRequiredPropertyException("ConfigurationPolicyConfigurationPolicyArgs", "serviceEnabled");
            }
            return $;
        }
    }

}
