// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.inputs;

import com.pulumi.aws.auditmanager.inputs.GetControlControlMappingSourceSourceKeyword;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetControlControlMappingSource extends com.pulumi.resources.InvokeArgs {

    public static final GetControlControlMappingSource Empty = new GetControlControlMappingSource();

    @Import(name="sourceDescription")
    private @Nullable String sourceDescription;

    public Optional<String> sourceDescription() {
        return Optional.ofNullable(this.sourceDescription);
    }

    @Import(name="sourceFrequency")
    private @Nullable String sourceFrequency;

    public Optional<String> sourceFrequency() {
        return Optional.ofNullable(this.sourceFrequency);
    }

    @Import(name="sourceId")
    private @Nullable String sourceId;

    public Optional<String> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    @Import(name="sourceKeyword")
    private @Nullable GetControlControlMappingSourceSourceKeyword sourceKeyword;

    public Optional<GetControlControlMappingSourceSourceKeyword> sourceKeyword() {
        return Optional.ofNullable(this.sourceKeyword);
    }

    @Import(name="sourceName")
    private @Nullable String sourceName;

    public Optional<String> sourceName() {
        return Optional.ofNullable(this.sourceName);
    }

    @Import(name="sourceSetUpOption")
    private @Nullable String sourceSetUpOption;

    public Optional<String> sourceSetUpOption() {
        return Optional.ofNullable(this.sourceSetUpOption);
    }

    @Import(name="sourceType")
    private @Nullable String sourceType;

    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    @Import(name="troubleshootingText")
    private @Nullable String troubleshootingText;

    public Optional<String> troubleshootingText() {
        return Optional.ofNullable(this.troubleshootingText);
    }

    private GetControlControlMappingSource() {}

    private GetControlControlMappingSource(GetControlControlMappingSource $) {
        this.sourceDescription = $.sourceDescription;
        this.sourceFrequency = $.sourceFrequency;
        this.sourceId = $.sourceId;
        this.sourceKeyword = $.sourceKeyword;
        this.sourceName = $.sourceName;
        this.sourceSetUpOption = $.sourceSetUpOption;
        this.sourceType = $.sourceType;
        this.troubleshootingText = $.troubleshootingText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetControlControlMappingSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetControlControlMappingSource $;

        public Builder() {
            $ = new GetControlControlMappingSource();
        }

        public Builder(GetControlControlMappingSource defaults) {
            $ = new GetControlControlMappingSource(Objects.requireNonNull(defaults));
        }

        public Builder sourceDescription(@Nullable String sourceDescription) {
            $.sourceDescription = sourceDescription;
            return this;
        }

        public Builder sourceFrequency(@Nullable String sourceFrequency) {
            $.sourceFrequency = sourceFrequency;
            return this;
        }

        public Builder sourceId(@Nullable String sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        public Builder sourceKeyword(@Nullable GetControlControlMappingSourceSourceKeyword sourceKeyword) {
            $.sourceKeyword = sourceKeyword;
            return this;
        }

        public Builder sourceName(@Nullable String sourceName) {
            $.sourceName = sourceName;
            return this;
        }

        public Builder sourceSetUpOption(@Nullable String sourceSetUpOption) {
            $.sourceSetUpOption = sourceSetUpOption;
            return this;
        }

        public Builder sourceType(@Nullable String sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder troubleshootingText(@Nullable String troubleshootingText) {
            $.troubleshootingText = troubleshootingText;
            return this;
        }

        public GetControlControlMappingSource build() {
            return $;
        }
    }

}
