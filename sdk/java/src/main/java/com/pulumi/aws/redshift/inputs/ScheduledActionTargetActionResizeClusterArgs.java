// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledActionTargetActionResizeClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledActionTargetActionResizeClusterArgs Empty = new ScheduledActionTargetActionResizeClusterArgs();

    @Import(name="classic")
    private @Nullable Output<Boolean> classic;

    public Optional<Output<Boolean>> classic() {
        return Optional.ofNullable(this.classic);
    }

    @Import(name="clusterIdentifier", required=true)
    private Output<String> clusterIdentifier;

    public Output<String> clusterIdentifier() {
        return this.clusterIdentifier;
    }

    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    @Import(name="numberOfNodes")
    private @Nullable Output<Integer> numberOfNodes;

    public Optional<Output<Integer>> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }

    private ScheduledActionTargetActionResizeClusterArgs() {}

    private ScheduledActionTargetActionResizeClusterArgs(ScheduledActionTargetActionResizeClusterArgs $) {
        this.classic = $.classic;
        this.clusterIdentifier = $.clusterIdentifier;
        this.clusterType = $.clusterType;
        this.nodeType = $.nodeType;
        this.numberOfNodes = $.numberOfNodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledActionTargetActionResizeClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledActionTargetActionResizeClusterArgs $;

        public Builder() {
            $ = new ScheduledActionTargetActionResizeClusterArgs();
        }

        public Builder(ScheduledActionTargetActionResizeClusterArgs defaults) {
            $ = new ScheduledActionTargetActionResizeClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder classic(@Nullable Output<Boolean> classic) {
            $.classic = classic;
            return this;
        }

        public Builder classic(Boolean classic) {
            return classic(Output.of(classic));
        }

        public Builder clusterIdentifier(Output<String> clusterIdentifier) {
            $.clusterIdentifier = clusterIdentifier;
            return this;
        }

        public Builder clusterIdentifier(String clusterIdentifier) {
            return clusterIdentifier(Output.of(clusterIdentifier));
        }

        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public Builder numberOfNodes(@Nullable Output<Integer> numberOfNodes) {
            $.numberOfNodes = numberOfNodes;
            return this;
        }

        public Builder numberOfNodes(Integer numberOfNodes) {
            return numberOfNodes(Output.of(numberOfNodes));
        }

        public ScheduledActionTargetActionResizeClusterArgs build() {
            $.clusterIdentifier = Objects.requireNonNull($.clusterIdentifier, "expected parameter 'clusterIdentifier' to be non-null");
            return $;
        }
    }

}
