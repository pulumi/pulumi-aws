// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssessmentDelegationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentDelegationArgs Empty = new AssessmentDelegationArgs();

    /**
     * Identifier for the assessment.
     * 
     */
    @Import(name="assessmentId", required=true)
    private Output<String> assessmentId;

    /**
     * @return Identifier for the assessment.
     * 
     */
    public Output<String> assessmentId() {
        return this.assessmentId;
    }

    /**
     * Comment describing the delegation request.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Comment describing the delegation request.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
     * 
     */
    @Import(name="controlSetId", required=true)
    private Output<String> controlSetId;

    /**
     * @return Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
     * 
     */
    public Output<String> controlSetId() {
        return this.controlSetId;
    }

    /**
     * Amazon Resource Name (ARN) of the IAM role.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return Amazon Resource Name (ARN) of the IAM role.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="roleType", required=true)
    private Output<String> roleType;

    /**
     * @return Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> roleType() {
        return this.roleType;
    }

    private AssessmentDelegationArgs() {}

    private AssessmentDelegationArgs(AssessmentDelegationArgs $) {
        this.assessmentId = $.assessmentId;
        this.comment = $.comment;
        this.controlSetId = $.controlSetId;
        this.roleArn = $.roleArn;
        this.roleType = $.roleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentDelegationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentDelegationArgs $;

        public Builder() {
            $ = new AssessmentDelegationArgs();
        }

        public Builder(AssessmentDelegationArgs defaults) {
            $ = new AssessmentDelegationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentId Identifier for the assessment.
         * 
         * @return builder
         * 
         */
        public Builder assessmentId(Output<String> assessmentId) {
            $.assessmentId = assessmentId;
            return this;
        }

        /**
         * @param assessmentId Identifier for the assessment.
         * 
         * @return builder
         * 
         */
        public Builder assessmentId(String assessmentId) {
            return assessmentId(Output.of(assessmentId));
        }

        /**
         * @param comment Comment describing the delegation request.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Comment describing the delegation request.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param controlSetId Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
         * 
         * @return builder
         * 
         */
        public Builder controlSetId(Output<String> controlSetId) {
            $.controlSetId = controlSetId;
            return this;
        }

        /**
         * @param controlSetId Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
         * 
         * @return builder
         * 
         */
        public Builder controlSetId(String controlSetId) {
            return controlSetId(Output.of(controlSetId));
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of the IAM role.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of the IAM role.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param roleType Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleType(Output<String> roleType) {
            $.roleType = roleType;
            return this;
        }

        /**
         * @param roleType Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleType(String roleType) {
            return roleType(Output.of(roleType));
        }

        public AssessmentDelegationArgs build() {
            if ($.assessmentId == null) {
                throw new MissingRequiredPropertyException("AssessmentDelegationArgs", "assessmentId");
            }
            if ($.controlSetId == null) {
                throw new MissingRequiredPropertyException("AssessmentDelegationArgs", "controlSetId");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("AssessmentDelegationArgs", "roleArn");
            }
            if ($.roleType == null) {
                throw new MissingRequiredPropertyException("AssessmentDelegationArgs", "roleType");
            }
            return $;
        }
    }

}
