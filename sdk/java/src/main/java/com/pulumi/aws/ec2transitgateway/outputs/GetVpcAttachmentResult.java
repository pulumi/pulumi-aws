// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetVpcAttachmentFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcAttachmentResult {
    /**
     * @return Whether Appliance Mode support is enabled.
     * 
     */
    private String applianceModeSupport;
    /**
     * @return Whether DNS support is enabled.
     * 
     */
    private String dnsSupport;
    private @Nullable List<GetVpcAttachmentFilter> filters;
    /**
     * @return EC2 Transit Gateway VPC Attachment identifier
     * 
     */
    private String id;
    /**
     * @return Whether IPv6 support is enabled.
     * 
     */
    private String ipv6Support;
    /**
     * @return Identifiers of EC2 Subnets.
     * 
     */
    private List<String> subnetIds;
    /**
     * @return Key-value tags for the EC2 Transit Gateway VPC Attachment
     * 
     */
    private Map<String,String> tags;
    /**
     * @return EC2 Transit Gateway identifier
     * 
     */
    private String transitGatewayId;
    /**
     * @return Identifier of EC2 VPC.
     * 
     */
    private String vpcId;
    /**
     * @return Identifier of the AWS account that owns the EC2 VPC.
     * 
     */
    private String vpcOwnerId;

    private GetVpcAttachmentResult() {}
    /**
     * @return Whether Appliance Mode support is enabled.
     * 
     */
    public String applianceModeSupport() {
        return this.applianceModeSupport;
    }
    /**
     * @return Whether DNS support is enabled.
     * 
     */
    public String dnsSupport() {
        return this.dnsSupport;
    }
    public List<GetVpcAttachmentFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return EC2 Transit Gateway VPC Attachment identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether IPv6 support is enabled.
     * 
     */
    public String ipv6Support() {
        return this.ipv6Support;
    }
    /**
     * @return Identifiers of EC2 Subnets.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return Key-value tags for the EC2 Transit Gateway VPC Attachment
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return EC2 Transit Gateway identifier
     * 
     */
    public String transitGatewayId() {
        return this.transitGatewayId;
    }
    /**
     * @return Identifier of EC2 VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return Identifier of the AWS account that owns the EC2 VPC.
     * 
     */
    public String vpcOwnerId() {
        return this.vpcOwnerId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applianceModeSupport;
        private String dnsSupport;
        private @Nullable List<GetVpcAttachmentFilter> filters;
        private String id;
        private String ipv6Support;
        private List<String> subnetIds;
        private Map<String,String> tags;
        private String transitGatewayId;
        private String vpcId;
        private String vpcOwnerId;
        public Builder() {}
        public Builder(GetVpcAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applianceModeSupport = defaults.applianceModeSupport;
    	      this.dnsSupport = defaults.dnsSupport;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ipv6Support = defaults.ipv6Support;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcOwnerId = defaults.vpcOwnerId;
        }

        @CustomType.Setter
        public Builder applianceModeSupport(String applianceModeSupport) {
            if (applianceModeSupport == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "applianceModeSupport");
            }
            this.applianceModeSupport = applianceModeSupport;
            return this;
        }
        @CustomType.Setter
        public Builder dnsSupport(String dnsSupport) {
            if (dnsSupport == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "dnsSupport");
            }
            this.dnsSupport = dnsSupport;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVpcAttachmentFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetVpcAttachmentFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Support(String ipv6Support) {
            if (ipv6Support == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "ipv6Support");
            }
            this.ipv6Support = ipv6Support;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            if (subnetIds == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "subnetIds");
            }
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayId(String transitGatewayId) {
            if (transitGatewayId == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "transitGatewayId");
            }
            this.transitGatewayId = transitGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcOwnerId(String vpcOwnerId) {
            if (vpcOwnerId == null) {
              throw new MissingRequiredPropertyException("GetVpcAttachmentResult", "vpcOwnerId");
            }
            this.vpcOwnerId = vpcOwnerId;
            return this;
        }
        public GetVpcAttachmentResult build() {
            final var _resultValue = new GetVpcAttachmentResult();
            _resultValue.applianceModeSupport = applianceModeSupport;
            _resultValue.dnsSupport = dnsSupport;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.ipv6Support = ipv6Support;
            _resultValue.subnetIds = subnetIds;
            _resultValue.tags = tags;
            _resultValue.transitGatewayId = transitGatewayId;
            _resultValue.vpcId = vpcId;
            _resultValue.vpcOwnerId = vpcOwnerId;
            return _resultValue;
        }
    }
}
