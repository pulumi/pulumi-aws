// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.outputs;

import com.pulumi.aws.appsync.outputs.ApiEventConfigAuthProvider;
import com.pulumi.aws.appsync.outputs.ApiEventConfigConnectionAuthMode;
import com.pulumi.aws.appsync.outputs.ApiEventConfigDefaultPublishAuthMode;
import com.pulumi.aws.appsync.outputs.ApiEventConfigDefaultSubscribeAuthMode;
import com.pulumi.aws.appsync.outputs.ApiEventConfigLogConfig;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiEventConfig {
    /**
     * @return List of authentication providers. See Auth Providers below.
     * 
     */
    private @Nullable List<ApiEventConfigAuthProvider> authProviders;
    /**
     * @return List of authentication modes for connections. See Auth Modes below.
     * 
     */
    private @Nullable List<ApiEventConfigConnectionAuthMode> connectionAuthModes;
    /**
     * @return List of default authentication modes for publishing. See Auth Modes below.
     * 
     */
    private @Nullable List<ApiEventConfigDefaultPublishAuthMode> defaultPublishAuthModes;
    /**
     * @return List of default authentication modes for subscribing. See Auth Modes below.
     * 
     */
    private @Nullable List<ApiEventConfigDefaultSubscribeAuthMode> defaultSubscribeAuthModes;
    /**
     * @return Logging configuration. See Log Config below.
     * 
     */
    private @Nullable ApiEventConfigLogConfig logConfig;

    private ApiEventConfig() {}
    /**
     * @return List of authentication providers. See Auth Providers below.
     * 
     */
    public List<ApiEventConfigAuthProvider> authProviders() {
        return this.authProviders == null ? List.of() : this.authProviders;
    }
    /**
     * @return List of authentication modes for connections. See Auth Modes below.
     * 
     */
    public List<ApiEventConfigConnectionAuthMode> connectionAuthModes() {
        return this.connectionAuthModes == null ? List.of() : this.connectionAuthModes;
    }
    /**
     * @return List of default authentication modes for publishing. See Auth Modes below.
     * 
     */
    public List<ApiEventConfigDefaultPublishAuthMode> defaultPublishAuthModes() {
        return this.defaultPublishAuthModes == null ? List.of() : this.defaultPublishAuthModes;
    }
    /**
     * @return List of default authentication modes for subscribing. See Auth Modes below.
     * 
     */
    public List<ApiEventConfigDefaultSubscribeAuthMode> defaultSubscribeAuthModes() {
        return this.defaultSubscribeAuthModes == null ? List.of() : this.defaultSubscribeAuthModes;
    }
    /**
     * @return Logging configuration. See Log Config below.
     * 
     */
    public Optional<ApiEventConfigLogConfig> logConfig() {
        return Optional.ofNullable(this.logConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiEventConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ApiEventConfigAuthProvider> authProviders;
        private @Nullable List<ApiEventConfigConnectionAuthMode> connectionAuthModes;
        private @Nullable List<ApiEventConfigDefaultPublishAuthMode> defaultPublishAuthModes;
        private @Nullable List<ApiEventConfigDefaultSubscribeAuthMode> defaultSubscribeAuthModes;
        private @Nullable ApiEventConfigLogConfig logConfig;
        public Builder() {}
        public Builder(ApiEventConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authProviders = defaults.authProviders;
    	      this.connectionAuthModes = defaults.connectionAuthModes;
    	      this.defaultPublishAuthModes = defaults.defaultPublishAuthModes;
    	      this.defaultSubscribeAuthModes = defaults.defaultSubscribeAuthModes;
    	      this.logConfig = defaults.logConfig;
        }

        @CustomType.Setter
        public Builder authProviders(@Nullable List<ApiEventConfigAuthProvider> authProviders) {

            this.authProviders = authProviders;
            return this;
        }
        public Builder authProviders(ApiEventConfigAuthProvider... authProviders) {
            return authProviders(List.of(authProviders));
        }
        @CustomType.Setter
        public Builder connectionAuthModes(@Nullable List<ApiEventConfigConnectionAuthMode> connectionAuthModes) {

            this.connectionAuthModes = connectionAuthModes;
            return this;
        }
        public Builder connectionAuthModes(ApiEventConfigConnectionAuthMode... connectionAuthModes) {
            return connectionAuthModes(List.of(connectionAuthModes));
        }
        @CustomType.Setter
        public Builder defaultPublishAuthModes(@Nullable List<ApiEventConfigDefaultPublishAuthMode> defaultPublishAuthModes) {

            this.defaultPublishAuthModes = defaultPublishAuthModes;
            return this;
        }
        public Builder defaultPublishAuthModes(ApiEventConfigDefaultPublishAuthMode... defaultPublishAuthModes) {
            return defaultPublishAuthModes(List.of(defaultPublishAuthModes));
        }
        @CustomType.Setter
        public Builder defaultSubscribeAuthModes(@Nullable List<ApiEventConfigDefaultSubscribeAuthMode> defaultSubscribeAuthModes) {

            this.defaultSubscribeAuthModes = defaultSubscribeAuthModes;
            return this;
        }
        public Builder defaultSubscribeAuthModes(ApiEventConfigDefaultSubscribeAuthMode... defaultSubscribeAuthModes) {
            return defaultSubscribeAuthModes(List.of(defaultSubscribeAuthModes));
        }
        @CustomType.Setter
        public Builder logConfig(@Nullable ApiEventConfigLogConfig logConfig) {

            this.logConfig = logConfig;
            return this;
        }
        public ApiEventConfig build() {
            final var _resultValue = new ApiEventConfig();
            _resultValue.authProviders = authProviders;
            _resultValue.connectionAuthModes = connectionAuthModes;
            _resultValue.defaultPublishAuthModes = defaultPublishAuthModes;
            _resultValue.defaultSubscribeAuthModes = defaultSubscribeAuthModes;
            _resultValue.logConfig = logConfig;
            return _resultValue;
        }
    }
}
