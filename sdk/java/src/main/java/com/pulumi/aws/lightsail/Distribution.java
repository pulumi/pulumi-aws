// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.lightsail.DistributionArgs;
import com.pulumi.aws.lightsail.inputs.DistributionState;
import com.pulumi.aws.lightsail.outputs.DistributionCacheBehavior;
import com.pulumi.aws.lightsail.outputs.DistributionCacheBehaviorSettings;
import com.pulumi.aws.lightsail.outputs.DistributionDefaultCacheBehavior;
import com.pulumi.aws.lightsail.outputs.DistributionLocation;
import com.pulumi.aws.lightsail.outputs.DistributionOrigin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Lightsail content delivery network (CDN) distribution. Use this resource to cache content at edge locations and reduce latency for users accessing your content.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.lightsail.Bucket;
 * import com.pulumi.aws.lightsail.BucketArgs;
 * import com.pulumi.aws.lightsail.Distribution;
 * import com.pulumi.aws.lightsail.DistributionArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionOriginArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionDefaultCacheBehaviorArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionCacheBehaviorSettingsArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionCacheBehaviorSettingsForwardedCookiesArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionCacheBehaviorSettingsForwardedHeadersArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionCacheBehaviorSettingsForwardedQueryStringsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .name("example-bucket")
 *             .bundleId("small_1_0")
 *             .build());
 * 
 *         var exampleDistribution = new Distribution("exampleDistribution", DistributionArgs.builder()
 *             .name("example-distribution")
 *             .bundleId("small_1_0")
 *             .origin(DistributionOriginArgs.builder()
 *                 .name(example.name())
 *                 .regionName(example.region())
 *                 .build())
 *             .defaultCacheBehavior(DistributionDefaultCacheBehaviorArgs.builder()
 *                 .behavior("cache")
 *                 .build())
 *             .cacheBehaviorSettings(DistributionCacheBehaviorSettingsArgs.builder()
 *                 .allowedHttpMethods("GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE")
 *                 .cachedHttpMethods("GET,HEAD")
 *                 .defaultTtl(86400)
 *                 .maximumTtl(31536000)
 *                 .minimumTtl(0)
 *                 .forwardedCookies(DistributionCacheBehaviorSettingsForwardedCookiesArgs.builder()
 *                     .option("none")
 *                     .build())
 *                 .forwardedHeaders(DistributionCacheBehaviorSettingsForwardedHeadersArgs.builder()
 *                     .option("default")
 *                     .build())
 *                 .forwardedQueryStrings(DistributionCacheBehaviorSettingsForwardedQueryStringsArgs.builder()
 *                     .option(false)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Instance Origin
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetAvailabilityZonesArgs;
 * import com.pulumi.aws.lightsail.StaticIp;
 * import com.pulumi.aws.lightsail.StaticIpArgs;
 * import com.pulumi.aws.lightsail.Instance;
 * import com.pulumi.aws.lightsail.InstanceArgs;
 * import com.pulumi.aws.lightsail.StaticIpAttachment;
 * import com.pulumi.aws.lightsail.StaticIpAttachmentArgs;
 * import com.pulumi.aws.lightsail.Distribution;
 * import com.pulumi.aws.lightsail.DistributionArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionOriginArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionDefaultCacheBehaviorArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var available = AwsFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
 *             .state("available")
 *             .filters(GetAvailabilityZonesFilterArgs.builder()
 *                 .name("opt-in-status")
 *                 .values("opt-in-not-required")
 *                 .build())
 *             .build());
 * 
 *         var exampleStaticIp = new StaticIp("exampleStaticIp", StaticIpArgs.builder()
 *             .name("example-static-ip")
 *             .build());
 * 
 *         var exampleInstance = new Instance("exampleInstance", InstanceArgs.builder()
 *             .name("example-instance")
 *             .availabilityZone(available.names()[0])
 *             .blueprintId("amazon_linux_2")
 *             .bundleId("micro_1_0")
 *             .build());
 * 
 *         var example = new StaticIpAttachment("example", StaticIpAttachmentArgs.builder()
 *             .staticIpName(exampleStaticIp.name())
 *             .instanceName(exampleInstance.name())
 *             .build());
 * 
 *         var exampleDistribution = new Distribution("exampleDistribution", DistributionArgs.builder()
 *             .name("example-distribution")
 *             .bundleId("small_1_0")
 *             .origin(DistributionOriginArgs.builder()
 *                 .name(exampleInstance.name())
 *                 .regionName(available.id())
 *                 .build())
 *             .defaultCacheBehavior(DistributionDefaultCacheBehaviorArgs.builder()
 *                 .behavior("cache")
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(example)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Load Balancer Origin
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetAvailabilityZonesArgs;
 * import com.pulumi.aws.lightsail.Lb;
 * import com.pulumi.aws.lightsail.LbArgs;
 * import com.pulumi.aws.lightsail.Instance;
 * import com.pulumi.aws.lightsail.InstanceArgs;
 * import com.pulumi.aws.lightsail.LbAttachment;
 * import com.pulumi.aws.lightsail.LbAttachmentArgs;
 * import com.pulumi.aws.lightsail.Distribution;
 * import com.pulumi.aws.lightsail.DistributionArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionOriginArgs;
 * import com.pulumi.aws.lightsail.inputs.DistributionDefaultCacheBehaviorArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var available = AwsFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
 *             .state("available")
 *             .filters(GetAvailabilityZonesFilterArgs.builder()
 *                 .name("opt-in-status")
 *                 .values("opt-in-not-required")
 *                 .build())
 *             .build());
 * 
 *         var example = new Lb("example", LbArgs.builder()
 *             .name("example-load-balancer")
 *             .healthCheckPath("/")
 *             .instancePort(80)
 *             .tags(Map.of("foo", "bar"))
 *             .build());
 * 
 *         var exampleInstance = new Instance("exampleInstance", InstanceArgs.builder()
 *             .name("example-instance")
 *             .availabilityZone(available.names()[0])
 *             .blueprintId("amazon_linux_2")
 *             .bundleId("nano_3_0")
 *             .build());
 * 
 *         var exampleLbAttachment = new LbAttachment("exampleLbAttachment", LbAttachmentArgs.builder()
 *             .lbName(example.name())
 *             .instanceName(exampleInstance.name())
 *             .build());
 * 
 *         var exampleDistribution = new Distribution("exampleDistribution", DistributionArgs.builder()
 *             .name("example-distribution")
 *             .bundleId("small_1_0")
 *             .origin(DistributionOriginArgs.builder()
 *                 .name(example.name())
 *                 .regionName(available.id())
 *                 .build())
 *             .defaultCacheBehavior(DistributionDefaultCacheBehaviorArgs.builder()
 *                 .behavior("cache")
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleLbAttachment)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Lightsail Distribution using the `name`. For example:
 * 
 * ```sh
 * $ pulumi import aws:lightsail/distribution:Distribution example example-distribution
 * ```
 * 
 */
@ResourceType(type="aws:lightsail/distribution:Distribution")
public class Distribution extends com.pulumi.resources.CustomResource {
    /**
     * Alternate domain names of the distribution.
     * 
     */
    @Export(name="alternativeDomainNames", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> alternativeDomainNames;

    /**
     * @return Alternate domain names of the distribution.
     * 
     */
    public Output<List<String>> alternativeDomainNames() {
        return this.alternativeDomainNames;
    }
    /**
     * ARN of the distribution.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the distribution.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Bundle ID to use for the distribution.
     * 
     */
    @Export(name="bundleId", refs={String.class}, tree="[0]")
    private Output<String> bundleId;

    /**
     * @return Bundle ID to use for the distribution.
     * 
     */
    public Output<String> bundleId() {
        return this.bundleId;
    }
    /**
     * Cache behavior settings of the distribution. See below.
     * 
     */
    @Export(name="cacheBehaviorSettings", refs={DistributionCacheBehaviorSettings.class}, tree="[0]")
    private Output</* @Nullable */ DistributionCacheBehaviorSettings> cacheBehaviorSettings;

    /**
     * @return Cache behavior settings of the distribution. See below.
     * 
     */
    public Output<Optional<DistributionCacheBehaviorSettings>> cacheBehaviorSettings() {
        return Codegen.optional(this.cacheBehaviorSettings);
    }
    /**
     * Per-path cache behavior of the distribution. See below.
     * 
     */
    @Export(name="cacheBehaviors", refs={List.class,DistributionCacheBehavior.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DistributionCacheBehavior>> cacheBehaviors;

    /**
     * @return Per-path cache behavior of the distribution. See below.
     * 
     */
    public Output<Optional<List<DistributionCacheBehavior>>> cacheBehaviors() {
        return Codegen.optional(this.cacheBehaviors);
    }
    /**
     * Name of the SSL/TLS certificate attached to the distribution.
     * 
     */
    @Export(name="certificateName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateName;

    /**
     * @return Name of the SSL/TLS certificate attached to the distribution.
     * 
     */
    public Output<Optional<String>> certificateName() {
        return Codegen.optional(this.certificateName);
    }
    /**
     * Timestamp when the distribution was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Timestamp when the distribution was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Default cache behavior of the distribution. See below.
     * 
     */
    @Export(name="defaultCacheBehavior", refs={DistributionDefaultCacheBehavior.class}, tree="[0]")
    private Output<DistributionDefaultCacheBehavior> defaultCacheBehavior;

    /**
     * @return Default cache behavior of the distribution. See below.
     * 
     */
    public Output<DistributionDefaultCacheBehavior> defaultCacheBehavior() {
        return this.defaultCacheBehavior;
    }
    /**
     * Domain name of the distribution.
     * 
     */
    @Export(name="domainName", refs={String.class}, tree="[0]")
    private Output<String> domainName;

    /**
     * @return Domain name of the distribution.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }
    /**
     * IP address type of the distribution. Valid values: `dualstack`, `ipv4`. Default: `dualstack`.
     * 
     */
    @Export(name="ipAddressType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAddressType;

    /**
     * @return IP address type of the distribution. Valid values: `dualstack`, `ipv4`. Default: `dualstack`.
     * 
     */
    public Output<Optional<String>> ipAddressType() {
        return Codegen.optional(this.ipAddressType);
    }
    /**
     * Whether the distribution is enabled. Default: `true`.
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isEnabled;

    /**
     * @return Whether the distribution is enabled. Default: `true`.
     * 
     */
    public Output<Optional<Boolean>> isEnabled() {
        return Codegen.optional(this.isEnabled);
    }
    /**
     * Location of the distribution, such as the AWS Region and Availability Zone. See below.
     * 
     */
    @Export(name="locations", refs={List.class,DistributionLocation.class}, tree="[0,1]")
    private Output<List<DistributionLocation>> locations;

    /**
     * @return Location of the distribution, such as the AWS Region and Availability Zone. See below.
     * 
     */
    public Output<List<DistributionLocation>> locations() {
        return this.locations;
    }
    /**
     * Name of the distribution.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the distribution.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. See below.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="origin", refs={DistributionOrigin.class}, tree="[0]")
    private Output<DistributionOrigin> origin;

    /**
     * @return Origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. See below.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<DistributionOrigin> origin() {
        return this.origin;
    }
    /**
     * Public DNS of the origin.
     * * `origin[0].resource_type` - Resource type of the origin resource (e.g., Instance).
     * 
     */
    @Export(name="originPublicDns", refs={String.class}, tree="[0]")
    private Output<String> originPublicDns;

    /**
     * @return Public DNS of the origin.
     * * `origin[0].resource_type` - Resource type of the origin resource (e.g., Instance).
     * 
     */
    public Output<String> originPublicDns() {
        return this.originPublicDns;
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Lightsail resource type (e.g., Distribution).
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return Lightsail resource type (e.g., Distribution).
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * Status of the distribution.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status of the distribution.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
     * 
     */
    @Export(name="supportCode", refs={String.class}, tree="[0]")
    private Output<String> supportCode;

    /**
     * @return Support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
     * 
     */
    public Output<String> supportCode() {
        return this.supportCode;
    }
    /**
     * Map of tags for the Lightsail Distribution. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags for the Lightsail Distribution. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Distribution(java.lang.String name) {
        this(name, DistributionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Distribution(java.lang.String name, DistributionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Distribution(java.lang.String name, DistributionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lightsail/distribution:Distribution", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Distribution(java.lang.String name, Output<java.lang.String> id, @Nullable DistributionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lightsail/distribution:Distribution", name, state, makeResourceOptions(options, id), false);
    }

    private static DistributionArgs makeArgs(DistributionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DistributionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Distribution get(java.lang.String name, Output<java.lang.String> id, @Nullable DistributionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Distribution(name, id, state, options);
    }
}
