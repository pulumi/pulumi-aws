// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.aws.networkfirewall.outputs.GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFirewallPolicyFirewallPolicyStatefulEngineOption {
    private List<GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout> flowTimeouts;
    private String ruleOrder;
    private String streamExceptionPolicy;

    private GetFirewallPolicyFirewallPolicyStatefulEngineOption() {}
    public List<GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout> flowTimeouts() {
        return this.flowTimeouts;
    }
    public String ruleOrder() {
        return this.ruleOrder;
    }
    public String streamExceptionPolicy() {
        return this.streamExceptionPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallPolicyFirewallPolicyStatefulEngineOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout> flowTimeouts;
        private String ruleOrder;
        private String streamExceptionPolicy;
        public Builder() {}
        public Builder(GetFirewallPolicyFirewallPolicyStatefulEngineOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.flowTimeouts = defaults.flowTimeouts;
    	      this.ruleOrder = defaults.ruleOrder;
    	      this.streamExceptionPolicy = defaults.streamExceptionPolicy;
        }

        @CustomType.Setter
        public Builder flowTimeouts(List<GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout> flowTimeouts) {
            if (flowTimeouts == null) {
              throw new MissingRequiredPropertyException("GetFirewallPolicyFirewallPolicyStatefulEngineOption", "flowTimeouts");
            }
            this.flowTimeouts = flowTimeouts;
            return this;
        }
        public Builder flowTimeouts(GetFirewallPolicyFirewallPolicyStatefulEngineOptionFlowTimeout... flowTimeouts) {
            return flowTimeouts(List.of(flowTimeouts));
        }
        @CustomType.Setter
        public Builder ruleOrder(String ruleOrder) {
            if (ruleOrder == null) {
              throw new MissingRequiredPropertyException("GetFirewallPolicyFirewallPolicyStatefulEngineOption", "ruleOrder");
            }
            this.ruleOrder = ruleOrder;
            return this;
        }
        @CustomType.Setter
        public Builder streamExceptionPolicy(String streamExceptionPolicy) {
            if (streamExceptionPolicy == null) {
              throw new MissingRequiredPropertyException("GetFirewallPolicyFirewallPolicyStatefulEngineOption", "streamExceptionPolicy");
            }
            this.streamExceptionPolicy = streamExceptionPolicy;
            return this;
        }
        public GetFirewallPolicyFirewallPolicyStatefulEngineOption build() {
            final var _resultValue = new GetFirewallPolicyFirewallPolicyStatefulEngineOption();
            _resultValue.flowTimeouts = flowTimeouts;
            _resultValue.ruleOrder = ruleOrder;
            _resultValue.streamExceptionPolicy = streamExceptionPolicy;
            return _resultValue;
        }
    }
}
