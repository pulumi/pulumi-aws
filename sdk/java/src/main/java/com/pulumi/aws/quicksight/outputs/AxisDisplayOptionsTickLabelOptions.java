// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.LabelOptions;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AxisDisplayOptionsTickLabelOptions {
    private @Nullable LabelOptions labelOptions;
    private @Nullable Double rotationAngle;

    private AxisDisplayOptionsTickLabelOptions() {}
    public Optional<LabelOptions> labelOptions() {
        return Optional.ofNullable(this.labelOptions);
    }
    public Optional<Double> rotationAngle() {
        return Optional.ofNullable(this.rotationAngle);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AxisDisplayOptionsTickLabelOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LabelOptions labelOptions;
        private @Nullable Double rotationAngle;
        public Builder() {}
        public Builder(AxisDisplayOptionsTickLabelOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labelOptions = defaults.labelOptions;
    	      this.rotationAngle = defaults.rotationAngle;
        }

        @CustomType.Setter
        public Builder labelOptions(@Nullable LabelOptions labelOptions) {

            this.labelOptions = labelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder rotationAngle(@Nullable Double rotationAngle) {

            this.rotationAngle = rotationAngle;
            return this;
        }
        public AxisDisplayOptionsTickLabelOptions build() {
            final var _resultValue = new AxisDisplayOptionsTickLabelOptions();
            _resultValue.labelOptions = labelOptions;
            _resultValue.rotationAngle = rotationAngle;
            return _resultValue;
        }
    }
}
