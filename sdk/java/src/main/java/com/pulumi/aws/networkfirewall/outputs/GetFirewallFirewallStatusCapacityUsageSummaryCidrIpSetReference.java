// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference {
    /**
     * @return Total number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    private Integer resolvedCidrCount;

    private GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference() {}
    /**
     * @return Total number of CIDR blocks used by the IP set references in a firewall.
     * 
     */
    public Integer resolvedCidrCount() {
        return this.resolvedCidrCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer resolvedCidrCount;
        public Builder() {}
        public Builder(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resolvedCidrCount = defaults.resolvedCidrCount;
        }

        @CustomType.Setter
        public Builder resolvedCidrCount(Integer resolvedCidrCount) {
            if (resolvedCidrCount == null) {
              throw new MissingRequiredPropertyException("GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference", "resolvedCidrCount");
            }
            this.resolvedCidrCount = resolvedCidrCount;
            return this;
        }
        public GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference build() {
            final var _resultValue = new GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference();
            _resultValue.resolvedCidrCount = resolvedCidrCount;
            return _resultValue;
        }
    }
}
