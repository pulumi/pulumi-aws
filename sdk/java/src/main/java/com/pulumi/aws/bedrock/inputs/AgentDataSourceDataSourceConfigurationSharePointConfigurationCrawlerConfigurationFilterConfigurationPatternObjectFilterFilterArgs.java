// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs Empty = new AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs();

    /**
     * A list of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    @Import(name="exclusionFilters")
    private @Nullable Output<List<String>> exclusionFilters;

    /**
     * @return A list of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    public Optional<Output<List<String>>> exclusionFilters() {
        return Optional.ofNullable(this.exclusionFilters);
    }

    /**
     * A list of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    @Import(name="inclusionFilters")
    private @Nullable Output<List<String>> inclusionFilters;

    /**
     * @return A list of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    public Optional<Output<List<String>>> inclusionFilters() {
        return Optional.ofNullable(this.inclusionFilters);
    }

    /**
     * The supported object type or content type of the data source.
     * 
     */
    @Import(name="objectType", required=true)
    private Output<String> objectType;

    /**
     * @return The supported object type or content type of the data source.
     * 
     */
    public Output<String> objectType() {
        return this.objectType;
    }

    private AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs() {}

    private AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs(AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs $) {
        this.exclusionFilters = $.exclusionFilters;
        this.inclusionFilters = $.inclusionFilters;
        this.objectType = $.objectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs $;

        public Builder() {
            $ = new AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs();
        }

        public Builder(AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs defaults) {
            $ = new AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusionFilters A list of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(@Nullable Output<List<String>> exclusionFilters) {
            $.exclusionFilters = exclusionFilters;
            return this;
        }

        /**
         * @param exclusionFilters A list of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(List<String> exclusionFilters) {
            return exclusionFilters(Output.of(exclusionFilters));
        }

        /**
         * @param exclusionFilters A list of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder exclusionFilters(String... exclusionFilters) {
            return exclusionFilters(List.of(exclusionFilters));
        }

        /**
         * @param inclusionFilters A list of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(@Nullable Output<List<String>> inclusionFilters) {
            $.inclusionFilters = inclusionFilters;
            return this;
        }

        /**
         * @param inclusionFilters A list of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(List<String> inclusionFilters) {
            return inclusionFilters(Output.of(inclusionFilters));
        }

        /**
         * @param inclusionFilters A list of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
         * 
         * @return builder
         * 
         */
        public Builder inclusionFilters(String... inclusionFilters) {
            return inclusionFilters(List.of(inclusionFilters));
        }

        /**
         * @param objectType The supported object type or content type of the data source.
         * 
         * @return builder
         * 
         */
        public Builder objectType(Output<String> objectType) {
            $.objectType = objectType;
            return this;
        }

        /**
         * @param objectType The supported object type or content type of the data source.
         * 
         * @return builder
         * 
         */
        public Builder objectType(String objectType) {
            return objectType(Output.of(objectType));
        }

        public AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs build() {
            if ($.objectType == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationSharePointConfigurationCrawlerConfigurationFilterConfigurationPatternObjectFilterFilterArgs", "objectType");
            }
            return $;
        }
    }

}
