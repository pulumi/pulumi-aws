// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockmodel;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.bedrockmodel.InvocationLoggingConfigurationArgs;
import com.pulumi.aws.bedrockmodel.inputs.InvocationLoggingConfigurationState;
import com.pulumi.aws.bedrockmodel.outputs.InvocationLoggingConfigurationLoggingConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Bedrock model invocation logging configuration.
 * 
 * &gt; Model invocation logging is configured per AWS region. To avoid overwriting settings, this resource should not be defined in multiple configurations.
 * 
 * ## Example Usage
 * ### Basic Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
 * import com.pulumi.aws.s3.BucketV2;
 * import com.pulumi.aws.s3.BucketV2Args;
 * import com.pulumi.aws.s3.BucketPolicy;
 * import com.pulumi.aws.s3.BucketPolicyArgs;
 * import com.pulumi.aws.bedrockmodel.InvocationLoggingConfiguration;
 * import com.pulumi.aws.bedrockmodel.InvocationLoggingConfigurationArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = AwsFunctions.getCallerIdentity();
 * 
 *         var exampleBucketV2 = new BucketV2(&#34;exampleBucketV2&#34;, BucketV2Args.builder()        
 *             .forceDestroy(true)
 *             .build());
 * 
 *         var exampleBucketPolicy = new BucketPolicy(&#34;exampleBucketPolicy&#34;, BucketPolicyArgs.builder()        
 *             .bucket(exampleBucketV2.bucket())
 *             .policy(exampleBucketV2.arn().applyValue(arn -&gt; &#34;&#34;&#34;
 * {
 *   &#34;Version&#34;: &#34;2012-10-17&#34;,
 *   &#34;Statement&#34;: [
 *     {
 *       &#34;Effect&#34;: &#34;Allow&#34;,
 *       &#34;Principal&#34;: {
 *         &#34;Service&#34;: &#34;bedrock.amazonaws.com&#34;
 *       },
 *       &#34;Action&#34;: [
 *         &#34;s3:*&#34;
 *       ],
 *       &#34;Resource&#34;: [
 *         &#34;%s/*&#34;
 *       ],
 *       &#34;Condition&#34;: {
 *         &#34;StringEquals&#34;: {
 *           &#34;aws:SourceAccount&#34;: &#34;%s&#34;
 *         },
 *         &#34;ArnLike&#34;: {
 *           &#34;aws:SourceArn&#34;: &#34;arn:aws:bedrock:us-east-1:%s:*&#34;
 *         }
 *       }
 *     }
 *   ]
 * }
 * &#34;, arn,current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId()),current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId()))))
 *             .build());
 * 
 *         var exampleInvocationLoggingConfiguration = new InvocationLoggingConfiguration(&#34;exampleInvocationLoggingConfiguration&#34;, InvocationLoggingConfigurationArgs.builder()        
 *             .loggingConfig(InvocationLoggingConfigurationLoggingConfigArgs.builder()
 *                 .embeddingDataDeliveryEnabled(true)
 *                 .imageDataDeliveryEnabled(true)
 *                 .textDataDeliveryEnabled(true)
 *                 .s3Config(InvocationLoggingConfigurationLoggingConfigS3ConfigArgs.builder()
 *                     .bucketName(exampleBucketV2.id())
 *                     .keyPrefix(&#34;bedrock&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleBucketPolicy)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Bedrock custom model using the `id` set to the AWS region. For example:
 * 
 * ```sh
 *  $ pulumi import aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration my_config us-east-1
 * ```
 * 
 */
@ResourceType(type="aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration")
public class InvocationLoggingConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * The logging configuration values to set. See `logging_config`.
     * 
     */
    @Export(name="loggingConfig", refs={InvocationLoggingConfigurationLoggingConfig.class}, tree="[0]")
    private Output</* @Nullable */ InvocationLoggingConfigurationLoggingConfig> loggingConfig;

    /**
     * @return The logging configuration values to set. See `logging_config`.
     * 
     */
    public Output<Optional<InvocationLoggingConfigurationLoggingConfig>> loggingConfig() {
        return Codegen.optional(this.loggingConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InvocationLoggingConfiguration(String name) {
        this(name, InvocationLoggingConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InvocationLoggingConfiguration(String name, @Nullable InvocationLoggingConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InvocationLoggingConfiguration(String name, @Nullable InvocationLoggingConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration", name, args == null ? InvocationLoggingConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InvocationLoggingConfiguration(String name, Output<String> id, @Nullable InvocationLoggingConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InvocationLoggingConfiguration get(String name, Output<String> id, @Nullable InvocationLoggingConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InvocationLoggingConfiguration(name, id, state, options);
    }
}
