// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDataSharesDataShare extends com.pulumi.resources.InvokeArgs {

    public static final GetDataSharesDataShare Empty = new GetDataSharesDataShare();

    /**
     * ARN (Amazon Resource Name) of the data share.
     * 
     */
    @Import(name="dataShareArn", required=true)
    private String dataShareArn;

    /**
     * @return ARN (Amazon Resource Name) of the data share.
     * 
     */
    public String dataShareArn() {
        return this.dataShareArn;
    }

    /**
     * Identifier of a datashare to show its managing entity.
     * 
     */
    @Import(name="managedBy", required=true)
    private String managedBy;

    /**
     * @return Identifier of a datashare to show its managing entity.
     * 
     */
    public String managedBy() {
        return this.managedBy;
    }

    /**
     * ARN (Amazon Resource Name) of the producer.
     * 
     */
    @Import(name="producerArn", required=true)
    private String producerArn;

    /**
     * @return ARN (Amazon Resource Name) of the producer.
     * 
     */
    public String producerArn() {
        return this.producerArn;
    }

    private GetDataSharesDataShare() {}

    private GetDataSharesDataShare(GetDataSharesDataShare $) {
        this.dataShareArn = $.dataShareArn;
        this.managedBy = $.managedBy;
        this.producerArn = $.producerArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataSharesDataShare defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataSharesDataShare $;

        public Builder() {
            $ = new GetDataSharesDataShare();
        }

        public Builder(GetDataSharesDataShare defaults) {
            $ = new GetDataSharesDataShare(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataShareArn ARN (Amazon Resource Name) of the data share.
         * 
         * @return builder
         * 
         */
        public Builder dataShareArn(String dataShareArn) {
            $.dataShareArn = dataShareArn;
            return this;
        }

        /**
         * @param managedBy Identifier of a datashare to show its managing entity.
         * 
         * @return builder
         * 
         */
        public Builder managedBy(String managedBy) {
            $.managedBy = managedBy;
            return this;
        }

        /**
         * @param producerArn ARN (Amazon Resource Name) of the producer.
         * 
         * @return builder
         * 
         */
        public Builder producerArn(String producerArn) {
            $.producerArn = producerArn;
            return this;
        }

        public GetDataSharesDataShare build() {
            if ($.dataShareArn == null) {
                throw new MissingRequiredPropertyException("GetDataSharesDataShare", "dataShareArn");
            }
            if ($.managedBy == null) {
                throw new MissingRequiredPropertyException("GetDataSharesDataShare", "managedBy");
            }
            if ($.producerArn == null) {
                throw new MissingRequiredPropertyException("GetDataSharesDataShare", "producerArn");
            }
            return $;
        }
    }

}
