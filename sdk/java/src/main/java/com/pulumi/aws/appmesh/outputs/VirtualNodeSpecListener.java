// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPool;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerHealthCheck;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetection;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerPortMapping;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerTimeout;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerTls;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualNodeSpecListener {
    private @Nullable VirtualNodeSpecListenerConnectionPool connectionPool;
    private @Nullable VirtualNodeSpecListenerHealthCheck healthCheck;
    private @Nullable VirtualNodeSpecListenerOutlierDetection outlierDetection;
    private VirtualNodeSpecListenerPortMapping portMapping;
    private @Nullable VirtualNodeSpecListenerTimeout timeout;
    private @Nullable VirtualNodeSpecListenerTls tls;

    private VirtualNodeSpecListener() {}
    public Optional<VirtualNodeSpecListenerConnectionPool> connectionPool() {
        return Optional.ofNullable(this.connectionPool);
    }
    public Optional<VirtualNodeSpecListenerHealthCheck> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }
    public Optional<VirtualNodeSpecListenerOutlierDetection> outlierDetection() {
        return Optional.ofNullable(this.outlierDetection);
    }
    public VirtualNodeSpecListenerPortMapping portMapping() {
        return this.portMapping;
    }
    public Optional<VirtualNodeSpecListenerTimeout> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    public Optional<VirtualNodeSpecListenerTls> tls() {
        return Optional.ofNullable(this.tls);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNodeSpecListener defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VirtualNodeSpecListenerConnectionPool connectionPool;
        private @Nullable VirtualNodeSpecListenerHealthCheck healthCheck;
        private @Nullable VirtualNodeSpecListenerOutlierDetection outlierDetection;
        private VirtualNodeSpecListenerPortMapping portMapping;
        private @Nullable VirtualNodeSpecListenerTimeout timeout;
        private @Nullable VirtualNodeSpecListenerTls tls;
        public Builder() {}
        public Builder(VirtualNodeSpecListener defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionPool = defaults.connectionPool;
    	      this.healthCheck = defaults.healthCheck;
    	      this.outlierDetection = defaults.outlierDetection;
    	      this.portMapping = defaults.portMapping;
    	      this.timeout = defaults.timeout;
    	      this.tls = defaults.tls;
        }

        @CustomType.Setter
        public Builder connectionPool(@Nullable VirtualNodeSpecListenerConnectionPool connectionPool) {
            this.connectionPool = connectionPool;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(@Nullable VirtualNodeSpecListenerHealthCheck healthCheck) {
            this.healthCheck = healthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder outlierDetection(@Nullable VirtualNodeSpecListenerOutlierDetection outlierDetection) {
            this.outlierDetection = outlierDetection;
            return this;
        }
        @CustomType.Setter
        public Builder portMapping(VirtualNodeSpecListenerPortMapping portMapping) {
            this.portMapping = Objects.requireNonNull(portMapping);
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable VirtualNodeSpecListenerTimeout timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder tls(@Nullable VirtualNodeSpecListenerTls tls) {
            this.tls = tls;
            return this;
        }
        public VirtualNodeSpecListener build() {
            final var o = new VirtualNodeSpecListener();
            o.connectionPool = connectionPool;
            o.healthCheck = healthCheck;
            o.outlierDetection = outlierDetection;
            o.portMapping = portMapping;
            o.timeout = timeout;
            o.tls = tls;
            return o;
        }
    }
}
