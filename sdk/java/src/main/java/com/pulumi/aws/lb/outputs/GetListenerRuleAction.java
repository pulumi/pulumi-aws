// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.aws.lb.outputs.GetListenerRuleActionAuthenticateCognito;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionAuthenticateOidc;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionFixedResponse;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionForward;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionRedirect;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerRuleAction {
    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleActionAuthenticateCognito authenticateCognito;
    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleActionAuthenticateOidc authenticateOidc;
    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleActionFixedResponse fixedResponse;
    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleActionForward forward;
    /**
     * @return The evaluation order of the action.
     * 
     */
    private Integer order;
    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    private @Nullable GetListenerRuleActionRedirect redirect;
    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    private String type;

    private GetListenerRuleAction() {}
    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleActionAuthenticateCognito> authenticateCognito() {
        return Optional.ofNullable(this.authenticateCognito);
    }
    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleActionAuthenticateOidc> authenticateOidc() {
        return Optional.ofNullable(this.authenticateOidc);
    }
    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleActionFixedResponse> fixedResponse() {
        return Optional.ofNullable(this.fixedResponse);
    }
    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleActionForward> forward() {
        return Optional.ofNullable(this.forward);
    }
    /**
     * @return The evaluation order of the action.
     * 
     */
    public Integer order() {
        return this.order;
    }
    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    public Optional<GetListenerRuleActionRedirect> redirect() {
        return Optional.ofNullable(this.redirect);
    }
    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRuleAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetListenerRuleActionAuthenticateCognito authenticateCognito;
        private @Nullable GetListenerRuleActionAuthenticateOidc authenticateOidc;
        private @Nullable GetListenerRuleActionFixedResponse fixedResponse;
        private @Nullable GetListenerRuleActionForward forward;
        private Integer order;
        private @Nullable GetListenerRuleActionRedirect redirect;
        private String type;
        public Builder() {}
        public Builder(GetListenerRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticateCognito = defaults.authenticateCognito;
    	      this.authenticateOidc = defaults.authenticateOidc;
    	      this.fixedResponse = defaults.fixedResponse;
    	      this.forward = defaults.forward;
    	      this.order = defaults.order;
    	      this.redirect = defaults.redirect;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder authenticateCognito(@Nullable GetListenerRuleActionAuthenticateCognito authenticateCognito) {

            this.authenticateCognito = authenticateCognito;
            return this;
        }
        @CustomType.Setter
        public Builder authenticateOidc(@Nullable GetListenerRuleActionAuthenticateOidc authenticateOidc) {

            this.authenticateOidc = authenticateOidc;
            return this;
        }
        @CustomType.Setter
        public Builder fixedResponse(@Nullable GetListenerRuleActionFixedResponse fixedResponse) {

            this.fixedResponse = fixedResponse;
            return this;
        }
        @CustomType.Setter
        public Builder forward(@Nullable GetListenerRuleActionForward forward) {

            this.forward = forward;
            return this;
        }
        @CustomType.Setter
        public Builder order(Integer order) {
            if (order == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleAction", "order");
            }
            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder redirect(@Nullable GetListenerRuleActionRedirect redirect) {

            this.redirect = redirect;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleAction", "type");
            }
            this.type = type;
            return this;
        }
        public GetListenerRuleAction build() {
            final var _resultValue = new GetListenerRuleAction();
            _resultValue.authenticateCognito = authenticateCognito;
            _resultValue.authenticateOidc = authenticateOidc;
            _resultValue.fixedResponse = fixedResponse;
            _resultValue.forward = forward;
            _resultValue.order = order;
            _resultValue.redirect = redirect;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
