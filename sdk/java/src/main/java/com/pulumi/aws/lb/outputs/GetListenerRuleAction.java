// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.aws.lb.outputs.GetListenerRuleActionAuthenticateCognito;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionAuthenticateOidc;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionFixedResponse;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionForward;
import com.pulumi.aws.lb.outputs.GetListenerRuleActionRedirect;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerRuleAction {
    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleActionAuthenticateCognito> authenticateCognitos;
    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleActionAuthenticateOidc> authenticateOidcs;
    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleActionFixedResponse> fixedResponses;
    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleActionForward> forwards;
    /**
     * @return The evaluation order of the action.
     * 
     */
    private Integer order;
    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    private @Nullable List<GetListenerRuleActionRedirect> redirects;
    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    private String type;

    private GetListenerRuleAction() {}
    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleActionAuthenticateCognito> authenticateCognitos() {
        return this.authenticateCognitos == null ? List.of() : this.authenticateCognitos;
    }
    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleActionAuthenticateOidc> authenticateOidcs() {
        return this.authenticateOidcs == null ? List.of() : this.authenticateOidcs;
    }
    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleActionFixedResponse> fixedResponses() {
        return this.fixedResponses == null ? List.of() : this.fixedResponses;
    }
    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleActionForward> forwards() {
        return this.forwards == null ? List.of() : this.forwards;
    }
    /**
     * @return The evaluation order of the action.
     * 
     */
    public Integer order() {
        return this.order;
    }
    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    public List<GetListenerRuleActionRedirect> redirects() {
        return this.redirects == null ? List.of() : this.redirects;
    }
    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRuleAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetListenerRuleActionAuthenticateCognito> authenticateCognitos;
        private @Nullable List<GetListenerRuleActionAuthenticateOidc> authenticateOidcs;
        private @Nullable List<GetListenerRuleActionFixedResponse> fixedResponses;
        private @Nullable List<GetListenerRuleActionForward> forwards;
        private Integer order;
        private @Nullable List<GetListenerRuleActionRedirect> redirects;
        private String type;
        public Builder() {}
        public Builder(GetListenerRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticateCognitos = defaults.authenticateCognitos;
    	      this.authenticateOidcs = defaults.authenticateOidcs;
    	      this.fixedResponses = defaults.fixedResponses;
    	      this.forwards = defaults.forwards;
    	      this.order = defaults.order;
    	      this.redirects = defaults.redirects;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder authenticateCognitos(@Nullable List<GetListenerRuleActionAuthenticateCognito> authenticateCognitos) {

            this.authenticateCognitos = authenticateCognitos;
            return this;
        }
        public Builder authenticateCognitos(GetListenerRuleActionAuthenticateCognito... authenticateCognitos) {
            return authenticateCognitos(List.of(authenticateCognitos));
        }
        @CustomType.Setter
        public Builder authenticateOidcs(@Nullable List<GetListenerRuleActionAuthenticateOidc> authenticateOidcs) {

            this.authenticateOidcs = authenticateOidcs;
            return this;
        }
        public Builder authenticateOidcs(GetListenerRuleActionAuthenticateOidc... authenticateOidcs) {
            return authenticateOidcs(List.of(authenticateOidcs));
        }
        @CustomType.Setter
        public Builder fixedResponses(@Nullable List<GetListenerRuleActionFixedResponse> fixedResponses) {

            this.fixedResponses = fixedResponses;
            return this;
        }
        public Builder fixedResponses(GetListenerRuleActionFixedResponse... fixedResponses) {
            return fixedResponses(List.of(fixedResponses));
        }
        @CustomType.Setter
        public Builder forwards(@Nullable List<GetListenerRuleActionForward> forwards) {

            this.forwards = forwards;
            return this;
        }
        public Builder forwards(GetListenerRuleActionForward... forwards) {
            return forwards(List.of(forwards));
        }
        @CustomType.Setter
        public Builder order(Integer order) {
            if (order == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleAction", "order");
            }
            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder redirects(@Nullable List<GetListenerRuleActionRedirect> redirects) {

            this.redirects = redirects;
            return this;
        }
        public Builder redirects(GetListenerRuleActionRedirect... redirects) {
            return redirects(List.of(redirects));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleAction", "type");
            }
            this.type = type;
            return this;
        }
        public GetListenerRuleAction build() {
            final var _resultValue = new GetListenerRuleAction();
            _resultValue.authenticateCognitos = authenticateCognitos;
            _resultValue.authenticateOidcs = authenticateOidcs;
            _resultValue.fixedResponses = fixedResponses;
            _resultValue.forwards = forwards;
            _resultValue.order = order;
            _resultValue.redirects = redirects;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
