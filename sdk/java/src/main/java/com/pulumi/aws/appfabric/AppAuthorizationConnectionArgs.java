// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appfabric;

import com.pulumi.aws.appfabric.inputs.AppAuthorizationConnectionAuthRequestArgs;
import com.pulumi.aws.appfabric.inputs.AppAuthorizationConnectionTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppAuthorizationConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppAuthorizationConnectionArgs Empty = new AppAuthorizationConnectionArgs();

    /**
     * The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
     * 
     */
    @Import(name="appAuthorizationArn", required=true)
    private Output<String> appAuthorizationArn;

    /**
     * @return The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
     * 
     */
    public Output<String> appAuthorizationArn() {
        return this.appAuthorizationArn;
    }

    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @Import(name="appBundleArn", required=true)
    private Output<String> appBundleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    public Output<String> appBundleArn() {
        return this.appBundleArn;
    }

    /**
     * Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
     * 
     */
    @Import(name="authRequest")
    private @Nullable Output<AppAuthorizationConnectionAuthRequestArgs> authRequest;

    /**
     * @return Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
     * 
     */
    public Optional<Output<AppAuthorizationConnectionAuthRequestArgs>> authRequest() {
        return Optional.ofNullable(this.authRequest);
    }

    @Import(name="timeouts")
    private @Nullable Output<AppAuthorizationConnectionTimeoutsArgs> timeouts;

    public Optional<Output<AppAuthorizationConnectionTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AppAuthorizationConnectionArgs() {}

    private AppAuthorizationConnectionArgs(AppAuthorizationConnectionArgs $) {
        this.appAuthorizationArn = $.appAuthorizationArn;
        this.appBundleArn = $.appBundleArn;
        this.authRequest = $.authRequest;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppAuthorizationConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppAuthorizationConnectionArgs $;

        public Builder() {
            $ = new AppAuthorizationConnectionArgs();
        }

        public Builder(AppAuthorizationConnectionArgs defaults) {
            $ = new AppAuthorizationConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appAuthorizationArn The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appAuthorizationArn(Output<String> appAuthorizationArn) {
            $.appAuthorizationArn = appAuthorizationArn;
            return this;
        }

        /**
         * @param appAuthorizationArn The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appAuthorizationArn(String appAuthorizationArn) {
            return appAuthorizationArn(Output.of(appAuthorizationArn));
        }

        /**
         * @param appBundleArn The Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(Output<String> appBundleArn) {
            $.appBundleArn = appBundleArn;
            return this;
        }

        /**
         * @param appBundleArn The Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(String appBundleArn) {
            return appBundleArn(Output.of(appBundleArn));
        }

        /**
         * @param authRequest Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
         * 
         * @return builder
         * 
         */
        public Builder authRequest(@Nullable Output<AppAuthorizationConnectionAuthRequestArgs> authRequest) {
            $.authRequest = authRequest;
            return this;
        }

        /**
         * @param authRequest Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
         * 
         * @return builder
         * 
         */
        public Builder authRequest(AppAuthorizationConnectionAuthRequestArgs authRequest) {
            return authRequest(Output.of(authRequest));
        }

        public Builder timeouts(@Nullable Output<AppAuthorizationConnectionTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AppAuthorizationConnectionTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AppAuthorizationConnectionArgs build() {
            if ($.appAuthorizationArn == null) {
                throw new MissingRequiredPropertyException("AppAuthorizationConnectionArgs", "appAuthorizationArn");
            }
            if ($.appBundleArn == null) {
                throw new MissingRequiredPropertyException("AppAuthorizationConnectionArgs", "appBundleArn");
            }
            return $;
        }
    }

}
