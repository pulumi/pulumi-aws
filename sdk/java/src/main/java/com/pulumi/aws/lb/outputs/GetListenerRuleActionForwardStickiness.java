// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetListenerRuleActionForwardStickiness {
    /**
     * @return The time period, in seconds, during which requests from a client should be routed to the same target group.
     * 
     */
    private Integer duration;
    /**
     * @return Indicates whether target group stickiness is enabled.
     * 
     */
    private Boolean enabled;

    private GetListenerRuleActionForwardStickiness() {}
    /**
     * @return The time period, in seconds, during which requests from a client should be routed to the same target group.
     * 
     */
    public Integer duration() {
        return this.duration;
    }
    /**
     * @return Indicates whether target group stickiness is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRuleActionForwardStickiness defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer duration;
        private Boolean enabled;
        public Builder() {}
        public Builder(GetListenerRuleActionForwardStickiness defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.enabled = defaults.enabled;
        }

        @CustomType.Setter
        public Builder duration(Integer duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleActionForwardStickiness", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetListenerRuleActionForwardStickiness", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        public GetListenerRuleActionForwardStickiness build() {
            final var _resultValue = new GetListenerRuleActionForwardStickiness();
            _resultValue.duration = duration;
            _resultValue.enabled = enabled;
            return _resultValue;
        }
    }
}
