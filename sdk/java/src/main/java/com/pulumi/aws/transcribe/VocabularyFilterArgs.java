// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transcribe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VocabularyFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final VocabularyFilterArgs Empty = new VocabularyFilterArgs();

    /**
     * The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
     * 
     */
    @Import(name="languageCode", required=true)
    private Output<String> languageCode;

    /**
     * @return The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
     * 
     */
    public Output<String> languageCode() {
        return this.languageCode;
    }

    /**
     * A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words`.
     * 
     */
    @Import(name="vocabularyFilterFileUri")
    private @Nullable Output<String> vocabularyFilterFileUri;

    /**
     * @return The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words`.
     * 
     */
    public Optional<Output<String>> vocabularyFilterFileUri() {
        return Optional.ofNullable(this.vocabularyFilterFileUri);
    }

    /**
     * The name of the VocabularyFilter.
     * 
     */
    @Import(name="vocabularyFilterName", required=true)
    private Output<String> vocabularyFilterName;

    /**
     * @return The name of the VocabularyFilter.
     * 
     */
    public Output<String> vocabularyFilterName() {
        return this.vocabularyFilterName;
    }

    /**
     * A list of terms to include in the vocabulary. Conflicts with `vocabulary_file_uri`
     * 
     */
    @Import(name="words")
    private @Nullable Output<List<String>> words;

    /**
     * @return A list of terms to include in the vocabulary. Conflicts with `vocabulary_file_uri`
     * 
     */
    public Optional<Output<List<String>>> words() {
        return Optional.ofNullable(this.words);
    }

    private VocabularyFilterArgs() {}

    private VocabularyFilterArgs(VocabularyFilterArgs $) {
        this.languageCode = $.languageCode;
        this.tags = $.tags;
        this.vocabularyFilterFileUri = $.vocabularyFilterFileUri;
        this.vocabularyFilterName = $.vocabularyFilterName;
        this.words = $.words;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VocabularyFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VocabularyFilterArgs $;

        public Builder() {
            $ = new VocabularyFilterArgs();
        }

        public Builder(VocabularyFilterArgs defaults) {
            $ = new VocabularyFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param languageCode The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        /**
         * @param languageCode The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        /**
         * @param tags A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vocabularyFilterFileUri The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words`.
         * 
         * @return builder
         * 
         */
        public Builder vocabularyFilterFileUri(@Nullable Output<String> vocabularyFilterFileUri) {
            $.vocabularyFilterFileUri = vocabularyFilterFileUri;
            return this;
        }

        /**
         * @param vocabularyFilterFileUri The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words`.
         * 
         * @return builder
         * 
         */
        public Builder vocabularyFilterFileUri(String vocabularyFilterFileUri) {
            return vocabularyFilterFileUri(Output.of(vocabularyFilterFileUri));
        }

        /**
         * @param vocabularyFilterName The name of the VocabularyFilter.
         * 
         * @return builder
         * 
         */
        public Builder vocabularyFilterName(Output<String> vocabularyFilterName) {
            $.vocabularyFilterName = vocabularyFilterName;
            return this;
        }

        /**
         * @param vocabularyFilterName The name of the VocabularyFilter.
         * 
         * @return builder
         * 
         */
        public Builder vocabularyFilterName(String vocabularyFilterName) {
            return vocabularyFilterName(Output.of(vocabularyFilterName));
        }

        /**
         * @param words A list of terms to include in the vocabulary. Conflicts with `vocabulary_file_uri`
         * 
         * @return builder
         * 
         */
        public Builder words(@Nullable Output<List<String>> words) {
            $.words = words;
            return this;
        }

        /**
         * @param words A list of terms to include in the vocabulary. Conflicts with `vocabulary_file_uri`
         * 
         * @return builder
         * 
         */
        public Builder words(List<String> words) {
            return words(Output.of(words));
        }

        /**
         * @param words A list of terms to include in the vocabulary. Conflicts with `vocabulary_file_uri`
         * 
         * @return builder
         * 
         */
        public Builder words(String... words) {
            return words(List.of(words));
        }

        public VocabularyFilterArgs build() {
            $.languageCode = Objects.requireNonNull($.languageCode, "expected parameter 'languageCode' to be non-null");
            $.vocabularyFilterName = Objects.requireNonNull($.vocabularyFilterName, "expected parameter 'vocabularyFilterName' to be non-null");
            return $;
        }
    }

}
