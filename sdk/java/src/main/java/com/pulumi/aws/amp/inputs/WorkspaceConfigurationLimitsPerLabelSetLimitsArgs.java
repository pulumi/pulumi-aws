// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class WorkspaceConfigurationLimitsPerLabelSetLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceConfigurationLimitsPerLabelSetLimitsArgs Empty = new WorkspaceConfigurationLimitsPerLabelSetLimitsArgs();

    /**
     * Maximum number of active time series that can be ingested for metrics matching the label set.
     * 
     */
    @Import(name="maxSeries", required=true)
    private Output<Integer> maxSeries;

    /**
     * @return Maximum number of active time series that can be ingested for metrics matching the label set.
     * 
     */
    public Output<Integer> maxSeries() {
        return this.maxSeries;
    }

    private WorkspaceConfigurationLimitsPerLabelSetLimitsArgs() {}

    private WorkspaceConfigurationLimitsPerLabelSetLimitsArgs(WorkspaceConfigurationLimitsPerLabelSetLimitsArgs $) {
        this.maxSeries = $.maxSeries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceConfigurationLimitsPerLabelSetLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceConfigurationLimitsPerLabelSetLimitsArgs $;

        public Builder() {
            $ = new WorkspaceConfigurationLimitsPerLabelSetLimitsArgs();
        }

        public Builder(WorkspaceConfigurationLimitsPerLabelSetLimitsArgs defaults) {
            $ = new WorkspaceConfigurationLimitsPerLabelSetLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxSeries Maximum number of active time series that can be ingested for metrics matching the label set.
         * 
         * @return builder
         * 
         */
        public Builder maxSeries(Output<Integer> maxSeries) {
            $.maxSeries = maxSeries;
            return this;
        }

        /**
         * @param maxSeries Maximum number of active time series that can be ingested for metrics matching the label set.
         * 
         * @return builder
         * 
         */
        public Builder maxSeries(Integer maxSeries) {
            return maxSeries(Output.of(maxSeries));
        }

        public WorkspaceConfigurationLimitsPerLabelSetLimitsArgs build() {
            if ($.maxSeries == null) {
                throw new MissingRequiredPropertyException("WorkspaceConfigurationLimitsPerLabelSetLimitsArgs", "maxSeries");
            }
            return $;
        }
    }

}
