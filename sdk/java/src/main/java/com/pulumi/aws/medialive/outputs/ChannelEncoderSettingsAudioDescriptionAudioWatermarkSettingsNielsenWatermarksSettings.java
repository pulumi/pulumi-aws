// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettings;
import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings {
    /**
     * @return Used to insert watermarks of type Nielsen CBET. See Nielsen CBET Settings for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettings nielsenCbetSettings;
    /**
     * @return Distribution types to assign to the watermarks. Options are `PROGRAM_CONTENT` and `FINAL_DISTRIBUTOR`.
     * 
     */
    private @Nullable String nielsenDistributionType;
    /**
     * @return Used to insert watermarks of type Nielsen NAES, II (N2) and Nielsen NAES VI (NW). See Nielsen NAES II NW Settings for more details.
     * 
     */
    private @Nullable List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting> nielsenNaesIiNwSettings;

    private ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings() {}
    /**
     * @return Used to insert watermarks of type Nielsen CBET. See Nielsen CBET Settings for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettings> nielsenCbetSettings() {
        return Optional.ofNullable(this.nielsenCbetSettings);
    }
    /**
     * @return Distribution types to assign to the watermarks. Options are `PROGRAM_CONTENT` and `FINAL_DISTRIBUTOR`.
     * 
     */
    public Optional<String> nielsenDistributionType() {
        return Optional.ofNullable(this.nielsenDistributionType);
    }
    /**
     * @return Used to insert watermarks of type Nielsen NAES, II (N2) and Nielsen NAES VI (NW). See Nielsen NAES II NW Settings for more details.
     * 
     */
    public List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting> nielsenNaesIiNwSettings() {
        return this.nielsenNaesIiNwSettings == null ? List.of() : this.nielsenNaesIiNwSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettings nielsenCbetSettings;
        private @Nullable String nielsenDistributionType;
        private @Nullable List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting> nielsenNaesIiNwSettings;
        public Builder() {}
        public Builder(ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nielsenCbetSettings = defaults.nielsenCbetSettings;
    	      this.nielsenDistributionType = defaults.nielsenDistributionType;
    	      this.nielsenNaesIiNwSettings = defaults.nielsenNaesIiNwSettings;
        }

        @CustomType.Setter
        public Builder nielsenCbetSettings(@Nullable ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettings nielsenCbetSettings) {

            this.nielsenCbetSettings = nielsenCbetSettings;
            return this;
        }
        @CustomType.Setter
        public Builder nielsenDistributionType(@Nullable String nielsenDistributionType) {

            this.nielsenDistributionType = nielsenDistributionType;
            return this;
        }
        @CustomType.Setter
        public Builder nielsenNaesIiNwSettings(@Nullable List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting> nielsenNaesIiNwSettings) {

            this.nielsenNaesIiNwSettings = nielsenNaesIiNwSettings;
            return this;
        }
        public Builder nielsenNaesIiNwSettings(ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSetting... nielsenNaesIiNwSettings) {
            return nielsenNaesIiNwSettings(List.of(nielsenNaesIiNwSettings));
        }
        public ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings build() {
            final var _resultValue = new ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettings();
            _resultValue.nielsenCbetSettings = nielsenCbetSettings;
            _resultValue.nielsenDistributionType = nielsenDistributionType;
            _resultValue.nielsenNaesIiNwSettings = nielsenNaesIiNwSettings;
            return _resultValue;
        }
    }
}
