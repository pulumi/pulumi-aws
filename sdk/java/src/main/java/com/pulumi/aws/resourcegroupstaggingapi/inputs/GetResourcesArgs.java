// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resourcegroupstaggingapi.inputs;

import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesTagFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourcesArgs Empty = new GetResourcesArgs();

    @Import(name="excludeCompliantResources")
    private @Nullable Output<Boolean> excludeCompliantResources;

    public Optional<Output<Boolean>> excludeCompliantResources() {
        return Optional.ofNullable(this.excludeCompliantResources);
    }

    @Import(name="includeComplianceDetails")
    private @Nullable Output<Boolean> includeComplianceDetails;

    public Optional<Output<Boolean>> includeComplianceDetails() {
        return Optional.ofNullable(this.includeComplianceDetails);
    }

    @Import(name="resourceArnLists")
    private @Nullable Output<List<String>> resourceArnLists;

    public Optional<Output<List<String>>> resourceArnLists() {
        return Optional.ofNullable(this.resourceArnLists);
    }

    @Import(name="resourceTypeFilters")
    private @Nullable Output<List<String>> resourceTypeFilters;

    public Optional<Output<List<String>>> resourceTypeFilters() {
        return Optional.ofNullable(this.resourceTypeFilters);
    }

    @Import(name="tagFilters")
    private @Nullable Output<List<GetResourcesTagFilterArgs>> tagFilters;

    public Optional<Output<List<GetResourcesTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private GetResourcesArgs() {}

    private GetResourcesArgs(GetResourcesArgs $) {
        this.excludeCompliantResources = $.excludeCompliantResources;
        this.includeComplianceDetails = $.includeComplianceDetails;
        this.resourceArnLists = $.resourceArnLists;
        this.resourceTypeFilters = $.resourceTypeFilters;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourcesArgs $;

        public Builder() {
            $ = new GetResourcesArgs();
        }

        public Builder(GetResourcesArgs defaults) {
            $ = new GetResourcesArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludeCompliantResources(@Nullable Output<Boolean> excludeCompliantResources) {
            $.excludeCompliantResources = excludeCompliantResources;
            return this;
        }

        public Builder excludeCompliantResources(Boolean excludeCompliantResources) {
            return excludeCompliantResources(Output.of(excludeCompliantResources));
        }

        public Builder includeComplianceDetails(@Nullable Output<Boolean> includeComplianceDetails) {
            $.includeComplianceDetails = includeComplianceDetails;
            return this;
        }

        public Builder includeComplianceDetails(Boolean includeComplianceDetails) {
            return includeComplianceDetails(Output.of(includeComplianceDetails));
        }

        public Builder resourceArnLists(@Nullable Output<List<String>> resourceArnLists) {
            $.resourceArnLists = resourceArnLists;
            return this;
        }

        public Builder resourceArnLists(List<String> resourceArnLists) {
            return resourceArnLists(Output.of(resourceArnLists));
        }

        public Builder resourceArnLists(String... resourceArnLists) {
            return resourceArnLists(List.of(resourceArnLists));
        }

        public Builder resourceTypeFilters(@Nullable Output<List<String>> resourceTypeFilters) {
            $.resourceTypeFilters = resourceTypeFilters;
            return this;
        }

        public Builder resourceTypeFilters(List<String> resourceTypeFilters) {
            return resourceTypeFilters(Output.of(resourceTypeFilters));
        }

        public Builder resourceTypeFilters(String... resourceTypeFilters) {
            return resourceTypeFilters(List.of(resourceTypeFilters));
        }

        public Builder tagFilters(@Nullable Output<List<GetResourcesTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(List<GetResourcesTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        public Builder tagFilters(GetResourcesTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public GetResourcesArgs build() {
            return $;
        }
    }

}
