// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog;

import com.pulumi.aws.servicecatalog.inputs.ProductProvisioningArtifactParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProductArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProductArgs Empty = new ProductArgs();

    @Import(name="acceptLanguage")
    private @Nullable Output<String> acceptLanguage;

    public Optional<Output<String>> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="distributor")
    private @Nullable Output<String> distributor;

    public Optional<Output<String>> distributor() {
        return Optional.ofNullable(this.distributor);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="owner", required=true)
    private Output<String> owner;

    public Output<String> owner() {
        return this.owner;
    }

    @Import(name="provisioningArtifactParameters", required=true)
    private Output<ProductProvisioningArtifactParametersArgs> provisioningArtifactParameters;

    public Output<ProductProvisioningArtifactParametersArgs> provisioningArtifactParameters() {
        return this.provisioningArtifactParameters;
    }

    @Import(name="supportDescription")
    private @Nullable Output<String> supportDescription;

    public Optional<Output<String>> supportDescription() {
        return Optional.ofNullable(this.supportDescription);
    }

    @Import(name="supportEmail")
    private @Nullable Output<String> supportEmail;

    public Optional<Output<String>> supportEmail() {
        return Optional.ofNullable(this.supportEmail);
    }

    @Import(name="supportUrl")
    private @Nullable Output<String> supportUrl;

    public Optional<Output<String>> supportUrl() {
        return Optional.ofNullable(this.supportUrl);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ProductArgs() {}

    private ProductArgs(ProductArgs $) {
        this.acceptLanguage = $.acceptLanguage;
        this.description = $.description;
        this.distributor = $.distributor;
        this.name = $.name;
        this.owner = $.owner;
        this.provisioningArtifactParameters = $.provisioningArtifactParameters;
        this.supportDescription = $.supportDescription;
        this.supportEmail = $.supportEmail;
        this.supportUrl = $.supportUrl;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProductArgs $;

        public Builder() {
            $ = new ProductArgs();
        }

        public Builder(ProductArgs defaults) {
            $ = new ProductArgs(Objects.requireNonNull(defaults));
        }

        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            $.acceptLanguage = acceptLanguage;
            return this;
        }

        public Builder acceptLanguage(String acceptLanguage) {
            return acceptLanguage(Output.of(acceptLanguage));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder distributor(@Nullable Output<String> distributor) {
            $.distributor = distributor;
            return this;
        }

        public Builder distributor(String distributor) {
            return distributor(Output.of(distributor));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder owner(Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder provisioningArtifactParameters(Output<ProductProvisioningArtifactParametersArgs> provisioningArtifactParameters) {
            $.provisioningArtifactParameters = provisioningArtifactParameters;
            return this;
        }

        public Builder provisioningArtifactParameters(ProductProvisioningArtifactParametersArgs provisioningArtifactParameters) {
            return provisioningArtifactParameters(Output.of(provisioningArtifactParameters));
        }

        public Builder supportDescription(@Nullable Output<String> supportDescription) {
            $.supportDescription = supportDescription;
            return this;
        }

        public Builder supportDescription(String supportDescription) {
            return supportDescription(Output.of(supportDescription));
        }

        public Builder supportEmail(@Nullable Output<String> supportEmail) {
            $.supportEmail = supportEmail;
            return this;
        }

        public Builder supportEmail(String supportEmail) {
            return supportEmail(Output.of(supportEmail));
        }

        public Builder supportUrl(@Nullable Output<String> supportUrl) {
            $.supportUrl = supportUrl;
            return this;
        }

        public Builder supportUrl(String supportUrl) {
            return supportUrl(Output.of(supportUrl));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProductArgs build() {
            $.owner = Objects.requireNonNull($.owner, "expected parameter 'owner' to be non-null");
            $.provisioningArtifactParameters = Objects.requireNonNull($.provisioningArtifactParameters, "expected parameter 'provisioningArtifactParameters' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
