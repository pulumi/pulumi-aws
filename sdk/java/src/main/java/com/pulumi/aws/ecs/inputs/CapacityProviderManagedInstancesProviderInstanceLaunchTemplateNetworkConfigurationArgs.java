// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs Empty = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs();

    /**
     * The list of security group IDs to apply to Amazon ECS Managed Instances. These security groups control the network traffic allowed to and from the instances.
     * 
     */
    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    /**
     * @return The list of security group IDs to apply to Amazon ECS Managed Instances. These security groups control the network traffic allowed to and from the instances.
     * 
     */
    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    /**
     * The list of subnet IDs where Amazon ECS can launch Amazon ECS Managed Instances. Instances are distributed across the specified subnets for high availability. All subnets must be in the same VPC.
     * 
     */
    @Import(name="subnets", required=true)
    private Output<List<String>> subnets;

    /**
     * @return The list of subnet IDs where Amazon ECS can launch Amazon ECS Managed Instances. Instances are distributed across the specified subnets for high availability. All subnets must be in the same VPC.
     * 
     */
    public Output<List<String>> subnets() {
        return this.subnets;
    }

    private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs() {}

    private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs $) {
        this.securityGroups = $.securityGroups;
        this.subnets = $.subnets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs $;

        public Builder() {
            $ = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs();
        }

        public Builder(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs defaults) {
            $ = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param securityGroups The list of security group IDs to apply to Amazon ECS Managed Instances. These security groups control the network traffic allowed to and from the instances.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        /**
         * @param securityGroups The list of security group IDs to apply to Amazon ECS Managed Instances. These security groups control the network traffic allowed to and from the instances.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        /**
         * @param securityGroups The list of security group IDs to apply to Amazon ECS Managed Instances. These security groups control the network traffic allowed to and from the instances.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        /**
         * @param subnets The list of subnet IDs where Amazon ECS can launch Amazon ECS Managed Instances. Instances are distributed across the specified subnets for high availability. All subnets must be in the same VPC.
         * 
         * @return builder
         * 
         */
        public Builder subnets(Output<List<String>> subnets) {
            $.subnets = subnets;
            return this;
        }

        /**
         * @param subnets The list of subnet IDs where Amazon ECS can launch Amazon ECS Managed Instances. Instances are distributed across the specified subnets for high availability. All subnets must be in the same VPC.
         * 
         * @return builder
         * 
         */
        public Builder subnets(List<String> subnets) {
            return subnets(Output.of(subnets));
        }

        /**
         * @param subnets The list of subnet IDs where Amazon ECS can launch Amazon ECS Managed Instances. Instances are distributed across the specified subnets for high availability. All subnets must be in the same VPC.
         * 
         * @return builder
         * 
         */
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }

        public CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs build() {
            if ($.subnets == null) {
                throw new MissingRequiredPropertyException("CapacityProviderManagedInstancesProviderInstanceLaunchTemplateNetworkConfigurationArgs", "subnets");
            }
            return $;
        }
    }

}
