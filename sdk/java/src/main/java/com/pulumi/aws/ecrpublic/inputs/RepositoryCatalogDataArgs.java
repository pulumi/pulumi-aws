// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecrpublic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryCatalogDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryCatalogDataArgs Empty = new RepositoryCatalogDataArgs();

    /**
     * A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
     * 
     */
    @Import(name="aboutText")
    private @Nullable Output<String> aboutText;

    /**
     * @return A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
     * 
     */
    public Optional<Output<String>> aboutText() {
        return Optional.ofNullable(this.aboutText);
    }

    /**
     * The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
     * 
     */
    @Import(name="architectures")
    private @Nullable Output<List<String>> architectures;

    /**
     * @return The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
     * 
     */
    public Optional<Output<List<String>>> architectures() {
        return Optional.ofNullable(this.architectures);
    }

    /**
     * A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
     * 
     */
    @Import(name="logoImageBlob")
    private @Nullable Output<String> logoImageBlob;

    /**
     * @return The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
     * 
     */
    public Optional<Output<String>> logoImageBlob() {
        return Optional.ofNullable(this.logoImageBlob);
    }

    /**
     * The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
     * 
     */
    @Import(name="operatingSystems")
    private @Nullable Output<List<String>> operatingSystems;

    /**
     * @return The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
     * 
     */
    public Optional<Output<List<String>>> operatingSystems() {
        return Optional.ofNullable(this.operatingSystems);
    }

    /**
     * Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
     * 
     */
    @Import(name="usageText")
    private @Nullable Output<String> usageText;

    /**
     * @return Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
     * 
     */
    public Optional<Output<String>> usageText() {
        return Optional.ofNullable(this.usageText);
    }

    private RepositoryCatalogDataArgs() {}

    private RepositoryCatalogDataArgs(RepositoryCatalogDataArgs $) {
        this.aboutText = $.aboutText;
        this.architectures = $.architectures;
        this.description = $.description;
        this.logoImageBlob = $.logoImageBlob;
        this.operatingSystems = $.operatingSystems;
        this.usageText = $.usageText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryCatalogDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryCatalogDataArgs $;

        public Builder() {
            $ = new RepositoryCatalogDataArgs();
        }

        public Builder(RepositoryCatalogDataArgs defaults) {
            $ = new RepositoryCatalogDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aboutText A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
         * 
         * @return builder
         * 
         */
        public Builder aboutText(@Nullable Output<String> aboutText) {
            $.aboutText = aboutText;
            return this;
        }

        /**
         * @param aboutText A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
         * 
         * @return builder
         * 
         */
        public Builder aboutText(String aboutText) {
            return aboutText(Output.of(aboutText));
        }

        /**
         * @param architectures The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
         * 
         * @return builder
         * 
         */
        public Builder architectures(@Nullable Output<List<String>> architectures) {
            $.architectures = architectures;
            return this;
        }

        /**
         * @param architectures The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
         * 
         * @return builder
         * 
         */
        public Builder architectures(List<String> architectures) {
            return architectures(Output.of(architectures));
        }

        /**
         * @param architectures The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
         * 
         * @return builder
         * 
         */
        public Builder architectures(String... architectures) {
            return architectures(List.of(architectures));
        }

        /**
         * @param description A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param logoImageBlob The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
         * 
         * @return builder
         * 
         */
        public Builder logoImageBlob(@Nullable Output<String> logoImageBlob) {
            $.logoImageBlob = logoImageBlob;
            return this;
        }

        /**
         * @param logoImageBlob The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
         * 
         * @return builder
         * 
         */
        public Builder logoImageBlob(String logoImageBlob) {
            return logoImageBlob(Output.of(logoImageBlob));
        }

        /**
         * @param operatingSystems The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
         * 
         * @return builder
         * 
         */
        public Builder operatingSystems(@Nullable Output<List<String>> operatingSystems) {
            $.operatingSystems = operatingSystems;
            return this;
        }

        /**
         * @param operatingSystems The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
         * 
         * @return builder
         * 
         */
        public Builder operatingSystems(List<String> operatingSystems) {
            return operatingSystems(Output.of(operatingSystems));
        }

        /**
         * @param operatingSystems The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
         * 
         * @return builder
         * 
         */
        public Builder operatingSystems(String... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }

        /**
         * @param usageText Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
         * 
         * @return builder
         * 
         */
        public Builder usageText(@Nullable Output<String> usageText) {
            $.usageText = usageText;
            return this;
        }

        /**
         * @param usageText Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
         * 
         * @return builder
         * 
         */
        public Builder usageText(String usageText) {
            return usageText(Output.of(usageText));
        }

        public RepositoryCatalogDataArgs build() {
            return $;
        }
    }

}
