// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecrpublic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryCatalogDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryCatalogDataArgs Empty = new RepositoryCatalogDataArgs();

    @Import(name="aboutText")
    private @Nullable Output<String> aboutText;

    public Optional<Output<String>> aboutText() {
        return Optional.ofNullable(this.aboutText);
    }

    @Import(name="architectures")
    private @Nullable Output<List<String>> architectures;

    public Optional<Output<List<String>>> architectures() {
        return Optional.ofNullable(this.architectures);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="logoImageBlob")
    private @Nullable Output<String> logoImageBlob;

    public Optional<Output<String>> logoImageBlob() {
        return Optional.ofNullable(this.logoImageBlob);
    }

    @Import(name="operatingSystems")
    private @Nullable Output<List<String>> operatingSystems;

    public Optional<Output<List<String>>> operatingSystems() {
        return Optional.ofNullable(this.operatingSystems);
    }

    @Import(name="usageText")
    private @Nullable Output<String> usageText;

    public Optional<Output<String>> usageText() {
        return Optional.ofNullable(this.usageText);
    }

    private RepositoryCatalogDataArgs() {}

    private RepositoryCatalogDataArgs(RepositoryCatalogDataArgs $) {
        this.aboutText = $.aboutText;
        this.architectures = $.architectures;
        this.description = $.description;
        this.logoImageBlob = $.logoImageBlob;
        this.operatingSystems = $.operatingSystems;
        this.usageText = $.usageText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryCatalogDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryCatalogDataArgs $;

        public Builder() {
            $ = new RepositoryCatalogDataArgs();
        }

        public Builder(RepositoryCatalogDataArgs defaults) {
            $ = new RepositoryCatalogDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder aboutText(@Nullable Output<String> aboutText) {
            $.aboutText = aboutText;
            return this;
        }

        public Builder aboutText(String aboutText) {
            return aboutText(Output.of(aboutText));
        }

        public Builder architectures(@Nullable Output<List<String>> architectures) {
            $.architectures = architectures;
            return this;
        }

        public Builder architectures(List<String> architectures) {
            return architectures(Output.of(architectures));
        }

        public Builder architectures(String... architectures) {
            return architectures(List.of(architectures));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder logoImageBlob(@Nullable Output<String> logoImageBlob) {
            $.logoImageBlob = logoImageBlob;
            return this;
        }

        public Builder logoImageBlob(String logoImageBlob) {
            return logoImageBlob(Output.of(logoImageBlob));
        }

        public Builder operatingSystems(@Nullable Output<List<String>> operatingSystems) {
            $.operatingSystems = operatingSystems;
            return this;
        }

        public Builder operatingSystems(List<String> operatingSystems) {
            return operatingSystems(Output.of(operatingSystems));
        }

        public Builder operatingSystems(String... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }

        public Builder usageText(@Nullable Output<String> usageText) {
            $.usageText = usageText;
            return this;
        }

        public Builder usageText(String usageText) {
            return usageText(Output.of(usageText));
        }

        public RepositoryCatalogDataArgs build() {
            return $;
        }
    }

}
