// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfigDestinationConnectorProperties {
    /**
     * @return Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector;
    /**
     * @return Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles;
    /**
     * @return Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge;
    /**
     * @return Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode;
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics;
    /**
     * @return Properties that are required to query Marketo. See Generic Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo;
    /**
     * @return Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift;
    /**
     * @return Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3;
    /**
     * @return Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce;
    /**
     * @return Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData;
    /**
     * @return Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake;
    /**
     * @return Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver;
    /**
     * @return Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
     * 
     */
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk;

    private FlowDestinationFlowConfigDestinationConnectorProperties() {}
    /**
     * @return Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector> customConnector() {
        return Optional.ofNullable(this.customConnector);
    }
    /**
     * @return Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles> customerProfiles() {
        return Optional.ofNullable(this.customerProfiles);
    }
    /**
     * @return Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge> eventBridge() {
        return Optional.ofNullable(this.eventBridge);
    }
    /**
     * @return Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode> honeycode() {
        return Optional.ofNullable(this.honeycode);
    }
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics> lookoutMetrics() {
        return Optional.ofNullable(this.lookoutMetrics);
    }
    /**
     * @return Properties that are required to query Marketo. See Generic Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo> marketo() {
        return Optional.ofNullable(this.marketo);
    }
    /**
     * @return Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift> redshift() {
        return Optional.ofNullable(this.redshift);
    }
    /**
     * @return Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesS3> s3() {
        return Optional.ofNullable(this.s3);
    }
    /**
     * @return Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce> salesforce() {
        return Optional.ofNullable(this.salesforce);
    }
    /**
     * @return Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData> sapoData() {
        return Optional.ofNullable(this.sapoData);
    }
    /**
     * @return Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }
    /**
     * @return Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver> upsolver() {
        return Optional.ofNullable(this.upsolver);
    }
    /**
     * @return Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk> zendesk() {
        return Optional.ofNullable(this.zendesk);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk;
        public Builder() {}
        public Builder(FlowDestinationFlowConfigDestinationConnectorProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customConnector = defaults.customConnector;
    	      this.customerProfiles = defaults.customerProfiles;
    	      this.eventBridge = defaults.eventBridge;
    	      this.honeycode = defaults.honeycode;
    	      this.lookoutMetrics = defaults.lookoutMetrics;
    	      this.marketo = defaults.marketo;
    	      this.redshift = defaults.redshift;
    	      this.s3 = defaults.s3;
    	      this.salesforce = defaults.salesforce;
    	      this.sapoData = defaults.sapoData;
    	      this.snowflake = defaults.snowflake;
    	      this.upsolver = defaults.upsolver;
    	      this.zendesk = defaults.zendesk;
        }

        @CustomType.Setter
        public Builder customConnector(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector) {
            this.customConnector = customConnector;
            return this;
        }
        @CustomType.Setter
        public Builder customerProfiles(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles) {
            this.customerProfiles = customerProfiles;
            return this;
        }
        @CustomType.Setter
        public Builder eventBridge(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge) {
            this.eventBridge = eventBridge;
            return this;
        }
        @CustomType.Setter
        public Builder honeycode(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode) {
            this.honeycode = honeycode;
            return this;
        }
        @CustomType.Setter
        public Builder lookoutMetrics(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics) {
            this.lookoutMetrics = lookoutMetrics;
            return this;
        }
        @CustomType.Setter
        public Builder marketo(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo) {
            this.marketo = marketo;
            return this;
        }
        @CustomType.Setter
        public Builder redshift(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift) {
            this.redshift = redshift;
            return this;
        }
        @CustomType.Setter
        public Builder s3(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3) {
            this.s3 = s3;
            return this;
        }
        @CustomType.Setter
        public Builder salesforce(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce) {
            this.salesforce = salesforce;
            return this;
        }
        @CustomType.Setter
        public Builder sapoData(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData) {
            this.sapoData = sapoData;
            return this;
        }
        @CustomType.Setter
        public Builder snowflake(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake) {
            this.snowflake = snowflake;
            return this;
        }
        @CustomType.Setter
        public Builder upsolver(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver) {
            this.upsolver = upsolver;
            return this;
        }
        @CustomType.Setter
        public Builder zendesk(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk) {
            this.zendesk = zendesk;
            return this;
        }
        public FlowDestinationFlowConfigDestinationConnectorProperties build() {
            final var o = new FlowDestinationFlowConfigDestinationConnectorProperties();
            o.customConnector = customConnector;
            o.customerProfiles = customerProfiles;
            o.eventBridge = eventBridge;
            o.honeycode = honeycode;
            o.lookoutMetrics = lookoutMetrics;
            o.marketo = marketo;
            o.redshift = redshift;
            o.s3 = s3;
            o.salesforce = salesforce;
            o.sapoData = sapoData;
            o.snowflake = snowflake;
            o.upsolver = upsolver;
            o.zendesk = zendesk;
            return o;
        }
    }
}
