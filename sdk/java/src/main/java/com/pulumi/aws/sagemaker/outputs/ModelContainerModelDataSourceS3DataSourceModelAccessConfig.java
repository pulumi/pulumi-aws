// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class ModelContainerModelDataSourceS3DataSourceModelAccessConfig {
    /**
     * @return Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
     * 
     */
    private Boolean acceptEula;

    private ModelContainerModelDataSourceS3DataSourceModelAccessConfig() {}
    /**
     * @return Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as `true` in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
     * 
     */
    public Boolean acceptEula() {
        return this.acceptEula;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelContainerModelDataSourceS3DataSourceModelAccessConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean acceptEula;
        public Builder() {}
        public Builder(ModelContainerModelDataSourceS3DataSourceModelAccessConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptEula = defaults.acceptEula;
        }

        @CustomType.Setter
        public Builder acceptEula(Boolean acceptEula) {
            if (acceptEula == null) {
              throw new MissingRequiredPropertyException("ModelContainerModelDataSourceS3DataSourceModelAccessConfig", "acceptEula");
            }
            this.acceptEula = acceptEula;
            return this;
        }
        public ModelContainerModelDataSourceS3DataSourceModelAccessConfig build() {
            final var _resultValue = new ModelContainerModelDataSourceS3DataSourceModelAccessConfig();
            _resultValue.acceptEula = acceptEula;
            return _resultValue;
        }
    }
}
