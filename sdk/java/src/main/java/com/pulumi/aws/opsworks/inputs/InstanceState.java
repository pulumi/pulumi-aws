// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opsworks.inputs;

import com.pulumi.aws.opsworks.inputs.InstanceEbsBlockDeviceArgs;
import com.pulumi.aws.opsworks.inputs.InstanceEphemeralBlockDeviceArgs;
import com.pulumi.aws.opsworks.inputs.InstanceRootBlockDeviceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    @Import(name="amiId")
    private @Nullable Output<String> amiId;

    public Optional<Output<String>> amiId() {
        return Optional.ofNullable(this.amiId);
    }

    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    @Import(name="autoScalingType")
    private @Nullable Output<String> autoScalingType;

    public Optional<Output<String>> autoScalingType() {
        return Optional.ofNullable(this.autoScalingType);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="deleteEbs")
    private @Nullable Output<Boolean> deleteEbs;

    public Optional<Output<Boolean>> deleteEbs() {
        return Optional.ofNullable(this.deleteEbs);
    }

    @Import(name="deleteEip")
    private @Nullable Output<Boolean> deleteEip;

    public Optional<Output<Boolean>> deleteEip() {
        return Optional.ofNullable(this.deleteEip);
    }

    @Import(name="ebsBlockDevices")
    private @Nullable Output<List<InstanceEbsBlockDeviceArgs>> ebsBlockDevices;

    public Optional<Output<List<InstanceEbsBlockDeviceArgs>>> ebsBlockDevices() {
        return Optional.ofNullable(this.ebsBlockDevices);
    }

    @Import(name="ebsOptimized")
    private @Nullable Output<Boolean> ebsOptimized;

    public Optional<Output<Boolean>> ebsOptimized() {
        return Optional.ofNullable(this.ebsOptimized);
    }

    @Import(name="ec2InstanceId")
    private @Nullable Output<String> ec2InstanceId;

    public Optional<Output<String>> ec2InstanceId() {
        return Optional.ofNullable(this.ec2InstanceId);
    }

    @Import(name="ecsClusterArn")
    private @Nullable Output<String> ecsClusterArn;

    public Optional<Output<String>> ecsClusterArn() {
        return Optional.ofNullable(this.ecsClusterArn);
    }

    @Import(name="elasticIp")
    private @Nullable Output<String> elasticIp;

    public Optional<Output<String>> elasticIp() {
        return Optional.ofNullable(this.elasticIp);
    }

    @Import(name="ephemeralBlockDevices")
    private @Nullable Output<List<InstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Optional<Output<List<InstanceEphemeralBlockDeviceArgs>>> ephemeralBlockDevices() {
        return Optional.ofNullable(this.ephemeralBlockDevices);
    }

    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    @Import(name="infrastructureClass")
    private @Nullable Output<String> infrastructureClass;

    public Optional<Output<String>> infrastructureClass() {
        return Optional.ofNullable(this.infrastructureClass);
    }

    @Import(name="installUpdatesOnBoot")
    private @Nullable Output<Boolean> installUpdatesOnBoot;

    public Optional<Output<Boolean>> installUpdatesOnBoot() {
        return Optional.ofNullable(this.installUpdatesOnBoot);
    }

    @Import(name="instanceProfileArn")
    private @Nullable Output<String> instanceProfileArn;

    public Optional<Output<String>> instanceProfileArn() {
        return Optional.ofNullable(this.instanceProfileArn);
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="lastServiceErrorId")
    private @Nullable Output<String> lastServiceErrorId;

    public Optional<Output<String>> lastServiceErrorId() {
        return Optional.ofNullable(this.lastServiceErrorId);
    }

    @Import(name="layerIds")
    private @Nullable Output<List<String>> layerIds;

    public Optional<Output<List<String>>> layerIds() {
        return Optional.ofNullable(this.layerIds);
    }

    @Import(name="os")
    private @Nullable Output<String> os;

    public Optional<Output<String>> os() {
        return Optional.ofNullable(this.os);
    }

    @Import(name="platform")
    private @Nullable Output<String> platform;

    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    @Import(name="privateDns")
    private @Nullable Output<String> privateDns;

    public Optional<Output<String>> privateDns() {
        return Optional.ofNullable(this.privateDns);
    }

    @Import(name="privateIp")
    private @Nullable Output<String> privateIp;

    public Optional<Output<String>> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }

    @Import(name="publicDns")
    private @Nullable Output<String> publicDns;

    public Optional<Output<String>> publicDns() {
        return Optional.ofNullable(this.publicDns);
    }

    @Import(name="publicIp")
    private @Nullable Output<String> publicIp;

    public Optional<Output<String>> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }

    @Import(name="registeredBy")
    private @Nullable Output<String> registeredBy;

    public Optional<Output<String>> registeredBy() {
        return Optional.ofNullable(this.registeredBy);
    }

    @Import(name="reportedAgentVersion")
    private @Nullable Output<String> reportedAgentVersion;

    public Optional<Output<String>> reportedAgentVersion() {
        return Optional.ofNullable(this.reportedAgentVersion);
    }

    @Import(name="reportedOsFamily")
    private @Nullable Output<String> reportedOsFamily;

    public Optional<Output<String>> reportedOsFamily() {
        return Optional.ofNullable(this.reportedOsFamily);
    }

    @Import(name="reportedOsName")
    private @Nullable Output<String> reportedOsName;

    public Optional<Output<String>> reportedOsName() {
        return Optional.ofNullable(this.reportedOsName);
    }

    @Import(name="reportedOsVersion")
    private @Nullable Output<String> reportedOsVersion;

    public Optional<Output<String>> reportedOsVersion() {
        return Optional.ofNullable(this.reportedOsVersion);
    }

    @Import(name="rootBlockDevices")
    private @Nullable Output<List<InstanceRootBlockDeviceArgs>> rootBlockDevices;

    public Optional<Output<List<InstanceRootBlockDeviceArgs>>> rootBlockDevices() {
        return Optional.ofNullable(this.rootBlockDevices);
    }

    @Import(name="rootDeviceType")
    private @Nullable Output<String> rootDeviceType;

    public Optional<Output<String>> rootDeviceType() {
        return Optional.ofNullable(this.rootDeviceType);
    }

    @Import(name="rootDeviceVolumeId")
    private @Nullable Output<String> rootDeviceVolumeId;

    public Optional<Output<String>> rootDeviceVolumeId() {
        return Optional.ofNullable(this.rootDeviceVolumeId);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="sshHostDsaKeyFingerprint")
    private @Nullable Output<String> sshHostDsaKeyFingerprint;

    public Optional<Output<String>> sshHostDsaKeyFingerprint() {
        return Optional.ofNullable(this.sshHostDsaKeyFingerprint);
    }

    @Import(name="sshHostRsaKeyFingerprint")
    private @Nullable Output<String> sshHostRsaKeyFingerprint;

    public Optional<Output<String>> sshHostRsaKeyFingerprint() {
        return Optional.ofNullable(this.sshHostRsaKeyFingerprint);
    }

    @Import(name="sshKeyName")
    private @Nullable Output<String> sshKeyName;

    public Optional<Output<String>> sshKeyName() {
        return Optional.ofNullable(this.sshKeyName);
    }

    @Import(name="stackId")
    private @Nullable Output<String> stackId;

    public Optional<Output<String>> stackId() {
        return Optional.ofNullable(this.stackId);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tenancy")
    private @Nullable Output<String> tenancy;

    public Optional<Output<String>> tenancy() {
        return Optional.ofNullable(this.tenancy);
    }

    @Import(name="virtualizationType")
    private @Nullable Output<String> virtualizationType;

    public Optional<Output<String>> virtualizationType() {
        return Optional.ofNullable(this.virtualizationType);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.agentVersion = $.agentVersion;
        this.amiId = $.amiId;
        this.architecture = $.architecture;
        this.autoScalingType = $.autoScalingType;
        this.availabilityZone = $.availabilityZone;
        this.createdAt = $.createdAt;
        this.deleteEbs = $.deleteEbs;
        this.deleteEip = $.deleteEip;
        this.ebsBlockDevices = $.ebsBlockDevices;
        this.ebsOptimized = $.ebsOptimized;
        this.ec2InstanceId = $.ec2InstanceId;
        this.ecsClusterArn = $.ecsClusterArn;
        this.elasticIp = $.elasticIp;
        this.ephemeralBlockDevices = $.ephemeralBlockDevices;
        this.hostname = $.hostname;
        this.infrastructureClass = $.infrastructureClass;
        this.installUpdatesOnBoot = $.installUpdatesOnBoot;
        this.instanceProfileArn = $.instanceProfileArn;
        this.instanceType = $.instanceType;
        this.lastServiceErrorId = $.lastServiceErrorId;
        this.layerIds = $.layerIds;
        this.os = $.os;
        this.platform = $.platform;
        this.privateDns = $.privateDns;
        this.privateIp = $.privateIp;
        this.publicDns = $.publicDns;
        this.publicIp = $.publicIp;
        this.registeredBy = $.registeredBy;
        this.reportedAgentVersion = $.reportedAgentVersion;
        this.reportedOsFamily = $.reportedOsFamily;
        this.reportedOsName = $.reportedOsName;
        this.reportedOsVersion = $.reportedOsVersion;
        this.rootBlockDevices = $.rootBlockDevices;
        this.rootDeviceType = $.rootDeviceType;
        this.rootDeviceVolumeId = $.rootDeviceVolumeId;
        this.securityGroupIds = $.securityGroupIds;
        this.sshHostDsaKeyFingerprint = $.sshHostDsaKeyFingerprint;
        this.sshHostRsaKeyFingerprint = $.sshHostRsaKeyFingerprint;
        this.sshKeyName = $.sshKeyName;
        this.stackId = $.stackId;
        this.state = $.state;
        this.status = $.status;
        this.subnetId = $.subnetId;
        this.tenancy = $.tenancy;
        this.virtualizationType = $.virtualizationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        public Builder amiId(@Nullable Output<String> amiId) {
            $.amiId = amiId;
            return this;
        }

        public Builder amiId(String amiId) {
            return amiId(Output.of(amiId));
        }

        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        public Builder autoScalingType(@Nullable Output<String> autoScalingType) {
            $.autoScalingType = autoScalingType;
            return this;
        }

        public Builder autoScalingType(String autoScalingType) {
            return autoScalingType(Output.of(autoScalingType));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder deleteEbs(@Nullable Output<Boolean> deleteEbs) {
            $.deleteEbs = deleteEbs;
            return this;
        }

        public Builder deleteEbs(Boolean deleteEbs) {
            return deleteEbs(Output.of(deleteEbs));
        }

        public Builder deleteEip(@Nullable Output<Boolean> deleteEip) {
            $.deleteEip = deleteEip;
            return this;
        }

        public Builder deleteEip(Boolean deleteEip) {
            return deleteEip(Output.of(deleteEip));
        }

        public Builder ebsBlockDevices(@Nullable Output<List<InstanceEbsBlockDeviceArgs>> ebsBlockDevices) {
            $.ebsBlockDevices = ebsBlockDevices;
            return this;
        }

        public Builder ebsBlockDevices(List<InstanceEbsBlockDeviceArgs> ebsBlockDevices) {
            return ebsBlockDevices(Output.of(ebsBlockDevices));
        }

        public Builder ebsBlockDevices(InstanceEbsBlockDeviceArgs... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }

        public Builder ebsOptimized(@Nullable Output<Boolean> ebsOptimized) {
            $.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder ebsOptimized(Boolean ebsOptimized) {
            return ebsOptimized(Output.of(ebsOptimized));
        }

        public Builder ec2InstanceId(@Nullable Output<String> ec2InstanceId) {
            $.ec2InstanceId = ec2InstanceId;
            return this;
        }

        public Builder ec2InstanceId(String ec2InstanceId) {
            return ec2InstanceId(Output.of(ec2InstanceId));
        }

        public Builder ecsClusterArn(@Nullable Output<String> ecsClusterArn) {
            $.ecsClusterArn = ecsClusterArn;
            return this;
        }

        public Builder ecsClusterArn(String ecsClusterArn) {
            return ecsClusterArn(Output.of(ecsClusterArn));
        }

        public Builder elasticIp(@Nullable Output<String> elasticIp) {
            $.elasticIp = elasticIp;
            return this;
        }

        public Builder elasticIp(String elasticIp) {
            return elasticIp(Output.of(elasticIp));
        }

        public Builder ephemeralBlockDevices(@Nullable Output<List<InstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            $.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }

        public Builder ephemeralBlockDevices(List<InstanceEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            return ephemeralBlockDevices(Output.of(ephemeralBlockDevices));
        }

        public Builder ephemeralBlockDevices(InstanceEphemeralBlockDeviceArgs... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }

        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder infrastructureClass(@Nullable Output<String> infrastructureClass) {
            $.infrastructureClass = infrastructureClass;
            return this;
        }

        public Builder infrastructureClass(String infrastructureClass) {
            return infrastructureClass(Output.of(infrastructureClass));
        }

        public Builder installUpdatesOnBoot(@Nullable Output<Boolean> installUpdatesOnBoot) {
            $.installUpdatesOnBoot = installUpdatesOnBoot;
            return this;
        }

        public Builder installUpdatesOnBoot(Boolean installUpdatesOnBoot) {
            return installUpdatesOnBoot(Output.of(installUpdatesOnBoot));
        }

        public Builder instanceProfileArn(@Nullable Output<String> instanceProfileArn) {
            $.instanceProfileArn = instanceProfileArn;
            return this;
        }

        public Builder instanceProfileArn(String instanceProfileArn) {
            return instanceProfileArn(Output.of(instanceProfileArn));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder lastServiceErrorId(@Nullable Output<String> lastServiceErrorId) {
            $.lastServiceErrorId = lastServiceErrorId;
            return this;
        }

        public Builder lastServiceErrorId(String lastServiceErrorId) {
            return lastServiceErrorId(Output.of(lastServiceErrorId));
        }

        public Builder layerIds(@Nullable Output<List<String>> layerIds) {
            $.layerIds = layerIds;
            return this;
        }

        public Builder layerIds(List<String> layerIds) {
            return layerIds(Output.of(layerIds));
        }

        public Builder layerIds(String... layerIds) {
            return layerIds(List.of(layerIds));
        }

        public Builder os(@Nullable Output<String> os) {
            $.os = os;
            return this;
        }

        public Builder os(String os) {
            return os(Output.of(os));
        }

        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        public Builder privateDns(@Nullable Output<String> privateDns) {
            $.privateDns = privateDns;
            return this;
        }

        public Builder privateDns(String privateDns) {
            return privateDns(Output.of(privateDns));
        }

        public Builder privateIp(@Nullable Output<String> privateIp) {
            $.privateIp = privateIp;
            return this;
        }

        public Builder privateIp(String privateIp) {
            return privateIp(Output.of(privateIp));
        }

        public Builder publicDns(@Nullable Output<String> publicDns) {
            $.publicDns = publicDns;
            return this;
        }

        public Builder publicDns(String publicDns) {
            return publicDns(Output.of(publicDns));
        }

        public Builder publicIp(@Nullable Output<String> publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        public Builder publicIp(String publicIp) {
            return publicIp(Output.of(publicIp));
        }

        public Builder registeredBy(@Nullable Output<String> registeredBy) {
            $.registeredBy = registeredBy;
            return this;
        }

        public Builder registeredBy(String registeredBy) {
            return registeredBy(Output.of(registeredBy));
        }

        public Builder reportedAgentVersion(@Nullable Output<String> reportedAgentVersion) {
            $.reportedAgentVersion = reportedAgentVersion;
            return this;
        }

        public Builder reportedAgentVersion(String reportedAgentVersion) {
            return reportedAgentVersion(Output.of(reportedAgentVersion));
        }

        public Builder reportedOsFamily(@Nullable Output<String> reportedOsFamily) {
            $.reportedOsFamily = reportedOsFamily;
            return this;
        }

        public Builder reportedOsFamily(String reportedOsFamily) {
            return reportedOsFamily(Output.of(reportedOsFamily));
        }

        public Builder reportedOsName(@Nullable Output<String> reportedOsName) {
            $.reportedOsName = reportedOsName;
            return this;
        }

        public Builder reportedOsName(String reportedOsName) {
            return reportedOsName(Output.of(reportedOsName));
        }

        public Builder reportedOsVersion(@Nullable Output<String> reportedOsVersion) {
            $.reportedOsVersion = reportedOsVersion;
            return this;
        }

        public Builder reportedOsVersion(String reportedOsVersion) {
            return reportedOsVersion(Output.of(reportedOsVersion));
        }

        public Builder rootBlockDevices(@Nullable Output<List<InstanceRootBlockDeviceArgs>> rootBlockDevices) {
            $.rootBlockDevices = rootBlockDevices;
            return this;
        }

        public Builder rootBlockDevices(List<InstanceRootBlockDeviceArgs> rootBlockDevices) {
            return rootBlockDevices(Output.of(rootBlockDevices));
        }

        public Builder rootBlockDevices(InstanceRootBlockDeviceArgs... rootBlockDevices) {
            return rootBlockDevices(List.of(rootBlockDevices));
        }

        public Builder rootDeviceType(@Nullable Output<String> rootDeviceType) {
            $.rootDeviceType = rootDeviceType;
            return this;
        }

        public Builder rootDeviceType(String rootDeviceType) {
            return rootDeviceType(Output.of(rootDeviceType));
        }

        public Builder rootDeviceVolumeId(@Nullable Output<String> rootDeviceVolumeId) {
            $.rootDeviceVolumeId = rootDeviceVolumeId;
            return this;
        }

        public Builder rootDeviceVolumeId(String rootDeviceVolumeId) {
            return rootDeviceVolumeId(Output.of(rootDeviceVolumeId));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder sshHostDsaKeyFingerprint(@Nullable Output<String> sshHostDsaKeyFingerprint) {
            $.sshHostDsaKeyFingerprint = sshHostDsaKeyFingerprint;
            return this;
        }

        public Builder sshHostDsaKeyFingerprint(String sshHostDsaKeyFingerprint) {
            return sshHostDsaKeyFingerprint(Output.of(sshHostDsaKeyFingerprint));
        }

        public Builder sshHostRsaKeyFingerprint(@Nullable Output<String> sshHostRsaKeyFingerprint) {
            $.sshHostRsaKeyFingerprint = sshHostRsaKeyFingerprint;
            return this;
        }

        public Builder sshHostRsaKeyFingerprint(String sshHostRsaKeyFingerprint) {
            return sshHostRsaKeyFingerprint(Output.of(sshHostRsaKeyFingerprint));
        }

        public Builder sshKeyName(@Nullable Output<String> sshKeyName) {
            $.sshKeyName = sshKeyName;
            return this;
        }

        public Builder sshKeyName(String sshKeyName) {
            return sshKeyName(Output.of(sshKeyName));
        }

        public Builder stackId(@Nullable Output<String> stackId) {
            $.stackId = stackId;
            return this;
        }

        public Builder stackId(String stackId) {
            return stackId(Output.of(stackId));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tenancy(@Nullable Output<String> tenancy) {
            $.tenancy = tenancy;
            return this;
        }

        public Builder tenancy(String tenancy) {
            return tenancy(Output.of(tenancy));
        }

        public Builder virtualizationType(@Nullable Output<String> virtualizationType) {
            $.virtualizationType = virtualizationType;
            return this;
        }

        public Builder virtualizationType(String virtualizationType) {
            return virtualizationType(Output.of(virtualizationType));
        }

        public InstanceState build() {
            return $;
        }
    }

}
