// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerlessCacheCacheUsageLimitsDataStorage {
    private @Nullable Integer maximum;
    private @Nullable Integer minimum;
    /**
     * @return The unit that the storage is measured in, in GB.
     * 
     */
    private String unit;

    private ServerlessCacheCacheUsageLimitsDataStorage() {}
    public Optional<Integer> maximum() {
        return Optional.ofNullable(this.maximum);
    }
    public Optional<Integer> minimum() {
        return Optional.ofNullable(this.minimum);
    }
    /**
     * @return The unit that the storage is measured in, in GB.
     * 
     */
    public String unit() {
        return this.unit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerlessCacheCacheUsageLimitsDataStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maximum;
        private @Nullable Integer minimum;
        private String unit;
        public Builder() {}
        public Builder(ServerlessCacheCacheUsageLimitsDataStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximum = defaults.maximum;
    	      this.minimum = defaults.minimum;
    	      this.unit = defaults.unit;
        }

        @CustomType.Setter
        public Builder maximum(@Nullable Integer maximum) {

            this.maximum = maximum;
            return this;
        }
        @CustomType.Setter
        public Builder minimum(@Nullable Integer minimum) {

            this.minimum = minimum;
            return this;
        }
        @CustomType.Setter
        public Builder unit(String unit) {
            if (unit == null) {
              throw new MissingRequiredPropertyException("ServerlessCacheCacheUsageLimitsDataStorage", "unit");
            }
            this.unit = unit;
            return this;
        }
        public ServerlessCacheCacheUsageLimitsDataStorage build() {
            final var _resultValue = new ServerlessCacheCacheUsageLimitsDataStorage();
            _resultValue.maximum = maximum;
            _resultValue.minimum = minimum;
            _resultValue.unit = unit;
            return _resultValue;
        }
    }
}
