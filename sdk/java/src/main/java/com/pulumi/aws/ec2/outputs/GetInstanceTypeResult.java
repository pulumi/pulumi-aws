// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetInstanceTypeFpga;
import com.pulumi.aws.ec2.outputs.GetInstanceTypeGpus;
import com.pulumi.aws.ec2.outputs.GetInstanceTypeInferenceAccelerator;
import com.pulumi.aws.ec2.outputs.GetInstanceTypeInstanceDisk;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceTypeResult {
    private Boolean autoRecoverySupported;
    private Boolean bareMetal;
    private Boolean burstablePerformanceSupported;
    private Boolean currentGeneration;
    private Boolean dedicatedHostsSupported;
    private Integer defaultCores;
    private Integer defaultThreadsPerCore;
    private Integer defaultVcpus;
    private String ebsEncryptionSupport;
    private String ebsNvmeSupport;
    private String ebsOptimizedSupport;
    private Integer ebsPerformanceBaselineBandwidth;
    private Integer ebsPerformanceBaselineIops;
    private Double ebsPerformanceBaselineThroughput;
    private Integer ebsPerformanceMaximumBandwidth;
    private Integer ebsPerformanceMaximumIops;
    private Double ebsPerformanceMaximumThroughput;
    private Boolean efaSupported;
    private String enaSupport;
    private Boolean encryptionInTransitSupported;
    private List<GetInstanceTypeFpga> fpgas;
    private Boolean freeTierEligible;
    private List<GetInstanceTypeGpus> gpuses;
    private Boolean hibernationSupported;
    private String hypervisor;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetInstanceTypeInferenceAccelerator> inferenceAccelerators;
    private List<GetInstanceTypeInstanceDisk> instanceDisks;
    private Boolean instanceStorageSupported;
    private String instanceType;
    private Boolean ipv6Supported;
    private Integer maximumIpv4AddressesPerInterface;
    private Integer maximumIpv6AddressesPerInterface;
    private Integer maximumNetworkInterfaces;
    private Integer memorySize;
    private String networkPerformance;
    private List<String> supportedArchitectures;
    private List<String> supportedPlacementStrategies;
    private List<String> supportedRootDeviceTypes;
    private List<String> supportedUsagesClasses;
    private List<String> supportedVirtualizationTypes;
    private Double sustainedClockSpeed;
    private Integer totalFpgaMemory;
    private Integer totalGpuMemory;
    private Integer totalInstanceStorage;
    private List<Integer> validCores;
    private List<Integer> validThreadsPerCores;

    private GetInstanceTypeResult() {}
    public Boolean autoRecoverySupported() {
        return this.autoRecoverySupported;
    }
    public Boolean bareMetal() {
        return this.bareMetal;
    }
    public Boolean burstablePerformanceSupported() {
        return this.burstablePerformanceSupported;
    }
    public Boolean currentGeneration() {
        return this.currentGeneration;
    }
    public Boolean dedicatedHostsSupported() {
        return this.dedicatedHostsSupported;
    }
    public Integer defaultCores() {
        return this.defaultCores;
    }
    public Integer defaultThreadsPerCore() {
        return this.defaultThreadsPerCore;
    }
    public Integer defaultVcpus() {
        return this.defaultVcpus;
    }
    public String ebsEncryptionSupport() {
        return this.ebsEncryptionSupport;
    }
    public String ebsNvmeSupport() {
        return this.ebsNvmeSupport;
    }
    public String ebsOptimizedSupport() {
        return this.ebsOptimizedSupport;
    }
    public Integer ebsPerformanceBaselineBandwidth() {
        return this.ebsPerformanceBaselineBandwidth;
    }
    public Integer ebsPerformanceBaselineIops() {
        return this.ebsPerformanceBaselineIops;
    }
    public Double ebsPerformanceBaselineThroughput() {
        return this.ebsPerformanceBaselineThroughput;
    }
    public Integer ebsPerformanceMaximumBandwidth() {
        return this.ebsPerformanceMaximumBandwidth;
    }
    public Integer ebsPerformanceMaximumIops() {
        return this.ebsPerformanceMaximumIops;
    }
    public Double ebsPerformanceMaximumThroughput() {
        return this.ebsPerformanceMaximumThroughput;
    }
    public Boolean efaSupported() {
        return this.efaSupported;
    }
    public String enaSupport() {
        return this.enaSupport;
    }
    public Boolean encryptionInTransitSupported() {
        return this.encryptionInTransitSupported;
    }
    public List<GetInstanceTypeFpga> fpgas() {
        return this.fpgas;
    }
    public Boolean freeTierEligible() {
        return this.freeTierEligible;
    }
    public List<GetInstanceTypeGpus> gpuses() {
        return this.gpuses;
    }
    public Boolean hibernationSupported() {
        return this.hibernationSupported;
    }
    public String hypervisor() {
        return this.hypervisor;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetInstanceTypeInferenceAccelerator> inferenceAccelerators() {
        return this.inferenceAccelerators;
    }
    public List<GetInstanceTypeInstanceDisk> instanceDisks() {
        return this.instanceDisks;
    }
    public Boolean instanceStorageSupported() {
        return this.instanceStorageSupported;
    }
    public String instanceType() {
        return this.instanceType;
    }
    public Boolean ipv6Supported() {
        return this.ipv6Supported;
    }
    public Integer maximumIpv4AddressesPerInterface() {
        return this.maximumIpv4AddressesPerInterface;
    }
    public Integer maximumIpv6AddressesPerInterface() {
        return this.maximumIpv6AddressesPerInterface;
    }
    public Integer maximumNetworkInterfaces() {
        return this.maximumNetworkInterfaces;
    }
    public Integer memorySize() {
        return this.memorySize;
    }
    public String networkPerformance() {
        return this.networkPerformance;
    }
    public List<String> supportedArchitectures() {
        return this.supportedArchitectures;
    }
    public List<String> supportedPlacementStrategies() {
        return this.supportedPlacementStrategies;
    }
    public List<String> supportedRootDeviceTypes() {
        return this.supportedRootDeviceTypes;
    }
    public List<String> supportedUsagesClasses() {
        return this.supportedUsagesClasses;
    }
    public List<String> supportedVirtualizationTypes() {
        return this.supportedVirtualizationTypes;
    }
    public Double sustainedClockSpeed() {
        return this.sustainedClockSpeed;
    }
    public Integer totalFpgaMemory() {
        return this.totalFpgaMemory;
    }
    public Integer totalGpuMemory() {
        return this.totalGpuMemory;
    }
    public Integer totalInstanceStorage() {
        return this.totalInstanceStorage;
    }
    public List<Integer> validCores() {
        return this.validCores;
    }
    public List<Integer> validThreadsPerCores() {
        return this.validThreadsPerCores;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoRecoverySupported;
        private Boolean bareMetal;
        private Boolean burstablePerformanceSupported;
        private Boolean currentGeneration;
        private Boolean dedicatedHostsSupported;
        private Integer defaultCores;
        private Integer defaultThreadsPerCore;
        private Integer defaultVcpus;
        private String ebsEncryptionSupport;
        private String ebsNvmeSupport;
        private String ebsOptimizedSupport;
        private Integer ebsPerformanceBaselineBandwidth;
        private Integer ebsPerformanceBaselineIops;
        private Double ebsPerformanceBaselineThroughput;
        private Integer ebsPerformanceMaximumBandwidth;
        private Integer ebsPerformanceMaximumIops;
        private Double ebsPerformanceMaximumThroughput;
        private Boolean efaSupported;
        private String enaSupport;
        private Boolean encryptionInTransitSupported;
        private List<GetInstanceTypeFpga> fpgas;
        private Boolean freeTierEligible;
        private List<GetInstanceTypeGpus> gpuses;
        private Boolean hibernationSupported;
        private String hypervisor;
        private String id;
        private List<GetInstanceTypeInferenceAccelerator> inferenceAccelerators;
        private List<GetInstanceTypeInstanceDisk> instanceDisks;
        private Boolean instanceStorageSupported;
        private String instanceType;
        private Boolean ipv6Supported;
        private Integer maximumIpv4AddressesPerInterface;
        private Integer maximumIpv6AddressesPerInterface;
        private Integer maximumNetworkInterfaces;
        private Integer memorySize;
        private String networkPerformance;
        private List<String> supportedArchitectures;
        private List<String> supportedPlacementStrategies;
        private List<String> supportedRootDeviceTypes;
        private List<String> supportedUsagesClasses;
        private List<String> supportedVirtualizationTypes;
        private Double sustainedClockSpeed;
        private Integer totalFpgaMemory;
        private Integer totalGpuMemory;
        private Integer totalInstanceStorage;
        private List<Integer> validCores;
        private List<Integer> validThreadsPerCores;
        public Builder() {}
        public Builder(GetInstanceTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRecoverySupported = defaults.autoRecoverySupported;
    	      this.bareMetal = defaults.bareMetal;
    	      this.burstablePerformanceSupported = defaults.burstablePerformanceSupported;
    	      this.currentGeneration = defaults.currentGeneration;
    	      this.dedicatedHostsSupported = defaults.dedicatedHostsSupported;
    	      this.defaultCores = defaults.defaultCores;
    	      this.defaultThreadsPerCore = defaults.defaultThreadsPerCore;
    	      this.defaultVcpus = defaults.defaultVcpus;
    	      this.ebsEncryptionSupport = defaults.ebsEncryptionSupport;
    	      this.ebsNvmeSupport = defaults.ebsNvmeSupport;
    	      this.ebsOptimizedSupport = defaults.ebsOptimizedSupport;
    	      this.ebsPerformanceBaselineBandwidth = defaults.ebsPerformanceBaselineBandwidth;
    	      this.ebsPerformanceBaselineIops = defaults.ebsPerformanceBaselineIops;
    	      this.ebsPerformanceBaselineThroughput = defaults.ebsPerformanceBaselineThroughput;
    	      this.ebsPerformanceMaximumBandwidth = defaults.ebsPerformanceMaximumBandwidth;
    	      this.ebsPerformanceMaximumIops = defaults.ebsPerformanceMaximumIops;
    	      this.ebsPerformanceMaximumThroughput = defaults.ebsPerformanceMaximumThroughput;
    	      this.efaSupported = defaults.efaSupported;
    	      this.enaSupport = defaults.enaSupport;
    	      this.encryptionInTransitSupported = defaults.encryptionInTransitSupported;
    	      this.fpgas = defaults.fpgas;
    	      this.freeTierEligible = defaults.freeTierEligible;
    	      this.gpuses = defaults.gpuses;
    	      this.hibernationSupported = defaults.hibernationSupported;
    	      this.hypervisor = defaults.hypervisor;
    	      this.id = defaults.id;
    	      this.inferenceAccelerators = defaults.inferenceAccelerators;
    	      this.instanceDisks = defaults.instanceDisks;
    	      this.instanceStorageSupported = defaults.instanceStorageSupported;
    	      this.instanceType = defaults.instanceType;
    	      this.ipv6Supported = defaults.ipv6Supported;
    	      this.maximumIpv4AddressesPerInterface = defaults.maximumIpv4AddressesPerInterface;
    	      this.maximumIpv6AddressesPerInterface = defaults.maximumIpv6AddressesPerInterface;
    	      this.maximumNetworkInterfaces = defaults.maximumNetworkInterfaces;
    	      this.memorySize = defaults.memorySize;
    	      this.networkPerformance = defaults.networkPerformance;
    	      this.supportedArchitectures = defaults.supportedArchitectures;
    	      this.supportedPlacementStrategies = defaults.supportedPlacementStrategies;
    	      this.supportedRootDeviceTypes = defaults.supportedRootDeviceTypes;
    	      this.supportedUsagesClasses = defaults.supportedUsagesClasses;
    	      this.supportedVirtualizationTypes = defaults.supportedVirtualizationTypes;
    	      this.sustainedClockSpeed = defaults.sustainedClockSpeed;
    	      this.totalFpgaMemory = defaults.totalFpgaMemory;
    	      this.totalGpuMemory = defaults.totalGpuMemory;
    	      this.totalInstanceStorage = defaults.totalInstanceStorage;
    	      this.validCores = defaults.validCores;
    	      this.validThreadsPerCores = defaults.validThreadsPerCores;
        }

        @CustomType.Setter
        public Builder autoRecoverySupported(Boolean autoRecoverySupported) {
            this.autoRecoverySupported = Objects.requireNonNull(autoRecoverySupported);
            return this;
        }
        @CustomType.Setter
        public Builder bareMetal(Boolean bareMetal) {
            this.bareMetal = Objects.requireNonNull(bareMetal);
            return this;
        }
        @CustomType.Setter
        public Builder burstablePerformanceSupported(Boolean burstablePerformanceSupported) {
            this.burstablePerformanceSupported = Objects.requireNonNull(burstablePerformanceSupported);
            return this;
        }
        @CustomType.Setter
        public Builder currentGeneration(Boolean currentGeneration) {
            this.currentGeneration = Objects.requireNonNull(currentGeneration);
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedHostsSupported(Boolean dedicatedHostsSupported) {
            this.dedicatedHostsSupported = Objects.requireNonNull(dedicatedHostsSupported);
            return this;
        }
        @CustomType.Setter
        public Builder defaultCores(Integer defaultCores) {
            this.defaultCores = Objects.requireNonNull(defaultCores);
            return this;
        }
        @CustomType.Setter
        public Builder defaultThreadsPerCore(Integer defaultThreadsPerCore) {
            this.defaultThreadsPerCore = Objects.requireNonNull(defaultThreadsPerCore);
            return this;
        }
        @CustomType.Setter
        public Builder defaultVcpus(Integer defaultVcpus) {
            this.defaultVcpus = Objects.requireNonNull(defaultVcpus);
            return this;
        }
        @CustomType.Setter
        public Builder ebsEncryptionSupport(String ebsEncryptionSupport) {
            this.ebsEncryptionSupport = Objects.requireNonNull(ebsEncryptionSupport);
            return this;
        }
        @CustomType.Setter
        public Builder ebsNvmeSupport(String ebsNvmeSupport) {
            this.ebsNvmeSupport = Objects.requireNonNull(ebsNvmeSupport);
            return this;
        }
        @CustomType.Setter
        public Builder ebsOptimizedSupport(String ebsOptimizedSupport) {
            this.ebsOptimizedSupport = Objects.requireNonNull(ebsOptimizedSupport);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceBaselineBandwidth(Integer ebsPerformanceBaselineBandwidth) {
            this.ebsPerformanceBaselineBandwidth = Objects.requireNonNull(ebsPerformanceBaselineBandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceBaselineIops(Integer ebsPerformanceBaselineIops) {
            this.ebsPerformanceBaselineIops = Objects.requireNonNull(ebsPerformanceBaselineIops);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceBaselineThroughput(Double ebsPerformanceBaselineThroughput) {
            this.ebsPerformanceBaselineThroughput = Objects.requireNonNull(ebsPerformanceBaselineThroughput);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceMaximumBandwidth(Integer ebsPerformanceMaximumBandwidth) {
            this.ebsPerformanceMaximumBandwidth = Objects.requireNonNull(ebsPerformanceMaximumBandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceMaximumIops(Integer ebsPerformanceMaximumIops) {
            this.ebsPerformanceMaximumIops = Objects.requireNonNull(ebsPerformanceMaximumIops);
            return this;
        }
        @CustomType.Setter
        public Builder ebsPerformanceMaximumThroughput(Double ebsPerformanceMaximumThroughput) {
            this.ebsPerformanceMaximumThroughput = Objects.requireNonNull(ebsPerformanceMaximumThroughput);
            return this;
        }
        @CustomType.Setter
        public Builder efaSupported(Boolean efaSupported) {
            this.efaSupported = Objects.requireNonNull(efaSupported);
            return this;
        }
        @CustomType.Setter
        public Builder enaSupport(String enaSupport) {
            this.enaSupport = Objects.requireNonNull(enaSupport);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionInTransitSupported(Boolean encryptionInTransitSupported) {
            this.encryptionInTransitSupported = Objects.requireNonNull(encryptionInTransitSupported);
            return this;
        }
        @CustomType.Setter
        public Builder fpgas(List<GetInstanceTypeFpga> fpgas) {
            this.fpgas = Objects.requireNonNull(fpgas);
            return this;
        }
        public Builder fpgas(GetInstanceTypeFpga... fpgas) {
            return fpgas(List.of(fpgas));
        }
        @CustomType.Setter
        public Builder freeTierEligible(Boolean freeTierEligible) {
            this.freeTierEligible = Objects.requireNonNull(freeTierEligible);
            return this;
        }
        @CustomType.Setter
        public Builder gpuses(List<GetInstanceTypeGpus> gpuses) {
            this.gpuses = Objects.requireNonNull(gpuses);
            return this;
        }
        public Builder gpuses(GetInstanceTypeGpus... gpuses) {
            return gpuses(List.of(gpuses));
        }
        @CustomType.Setter
        public Builder hibernationSupported(Boolean hibernationSupported) {
            this.hibernationSupported = Objects.requireNonNull(hibernationSupported);
            return this;
        }
        @CustomType.Setter
        public Builder hypervisor(String hypervisor) {
            this.hypervisor = Objects.requireNonNull(hypervisor);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inferenceAccelerators(List<GetInstanceTypeInferenceAccelerator> inferenceAccelerators) {
            this.inferenceAccelerators = Objects.requireNonNull(inferenceAccelerators);
            return this;
        }
        public Builder inferenceAccelerators(GetInstanceTypeInferenceAccelerator... inferenceAccelerators) {
            return inferenceAccelerators(List.of(inferenceAccelerators));
        }
        @CustomType.Setter
        public Builder instanceDisks(List<GetInstanceTypeInstanceDisk> instanceDisks) {
            this.instanceDisks = Objects.requireNonNull(instanceDisks);
            return this;
        }
        public Builder instanceDisks(GetInstanceTypeInstanceDisk... instanceDisks) {
            return instanceDisks(List.of(instanceDisks));
        }
        @CustomType.Setter
        public Builder instanceStorageSupported(Boolean instanceStorageSupported) {
            this.instanceStorageSupported = Objects.requireNonNull(instanceStorageSupported);
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Supported(Boolean ipv6Supported) {
            this.ipv6Supported = Objects.requireNonNull(ipv6Supported);
            return this;
        }
        @CustomType.Setter
        public Builder maximumIpv4AddressesPerInterface(Integer maximumIpv4AddressesPerInterface) {
            this.maximumIpv4AddressesPerInterface = Objects.requireNonNull(maximumIpv4AddressesPerInterface);
            return this;
        }
        @CustomType.Setter
        public Builder maximumIpv6AddressesPerInterface(Integer maximumIpv6AddressesPerInterface) {
            this.maximumIpv6AddressesPerInterface = Objects.requireNonNull(maximumIpv6AddressesPerInterface);
            return this;
        }
        @CustomType.Setter
        public Builder maximumNetworkInterfaces(Integer maximumNetworkInterfaces) {
            this.maximumNetworkInterfaces = Objects.requireNonNull(maximumNetworkInterfaces);
            return this;
        }
        @CustomType.Setter
        public Builder memorySize(Integer memorySize) {
            this.memorySize = Objects.requireNonNull(memorySize);
            return this;
        }
        @CustomType.Setter
        public Builder networkPerformance(String networkPerformance) {
            this.networkPerformance = Objects.requireNonNull(networkPerformance);
            return this;
        }
        @CustomType.Setter
        public Builder supportedArchitectures(List<String> supportedArchitectures) {
            this.supportedArchitectures = Objects.requireNonNull(supportedArchitectures);
            return this;
        }
        public Builder supportedArchitectures(String... supportedArchitectures) {
            return supportedArchitectures(List.of(supportedArchitectures));
        }
        @CustomType.Setter
        public Builder supportedPlacementStrategies(List<String> supportedPlacementStrategies) {
            this.supportedPlacementStrategies = Objects.requireNonNull(supportedPlacementStrategies);
            return this;
        }
        public Builder supportedPlacementStrategies(String... supportedPlacementStrategies) {
            return supportedPlacementStrategies(List.of(supportedPlacementStrategies));
        }
        @CustomType.Setter
        public Builder supportedRootDeviceTypes(List<String> supportedRootDeviceTypes) {
            this.supportedRootDeviceTypes = Objects.requireNonNull(supportedRootDeviceTypes);
            return this;
        }
        public Builder supportedRootDeviceTypes(String... supportedRootDeviceTypes) {
            return supportedRootDeviceTypes(List.of(supportedRootDeviceTypes));
        }
        @CustomType.Setter
        public Builder supportedUsagesClasses(List<String> supportedUsagesClasses) {
            this.supportedUsagesClasses = Objects.requireNonNull(supportedUsagesClasses);
            return this;
        }
        public Builder supportedUsagesClasses(String... supportedUsagesClasses) {
            return supportedUsagesClasses(List.of(supportedUsagesClasses));
        }
        @CustomType.Setter
        public Builder supportedVirtualizationTypes(List<String> supportedVirtualizationTypes) {
            this.supportedVirtualizationTypes = Objects.requireNonNull(supportedVirtualizationTypes);
            return this;
        }
        public Builder supportedVirtualizationTypes(String... supportedVirtualizationTypes) {
            return supportedVirtualizationTypes(List.of(supportedVirtualizationTypes));
        }
        @CustomType.Setter
        public Builder sustainedClockSpeed(Double sustainedClockSpeed) {
            this.sustainedClockSpeed = Objects.requireNonNull(sustainedClockSpeed);
            return this;
        }
        @CustomType.Setter
        public Builder totalFpgaMemory(Integer totalFpgaMemory) {
            this.totalFpgaMemory = Objects.requireNonNull(totalFpgaMemory);
            return this;
        }
        @CustomType.Setter
        public Builder totalGpuMemory(Integer totalGpuMemory) {
            this.totalGpuMemory = Objects.requireNonNull(totalGpuMemory);
            return this;
        }
        @CustomType.Setter
        public Builder totalInstanceStorage(Integer totalInstanceStorage) {
            this.totalInstanceStorage = Objects.requireNonNull(totalInstanceStorage);
            return this;
        }
        @CustomType.Setter
        public Builder validCores(List<Integer> validCores) {
            this.validCores = Objects.requireNonNull(validCores);
            return this;
        }
        public Builder validCores(Integer... validCores) {
            return validCores(List.of(validCores));
        }
        @CustomType.Setter
        public Builder validThreadsPerCores(List<Integer> validThreadsPerCores) {
            this.validThreadsPerCores = Objects.requireNonNull(validThreadsPerCores);
            return this;
        }
        public Builder validThreadsPerCores(Integer... validThreadsPerCores) {
            return validThreadsPerCores(List.of(validThreadsPerCores));
        }
        public GetInstanceTypeResult build() {
            final var o = new GetInstanceTypeResult();
            o.autoRecoverySupported = autoRecoverySupported;
            o.bareMetal = bareMetal;
            o.burstablePerformanceSupported = burstablePerformanceSupported;
            o.currentGeneration = currentGeneration;
            o.dedicatedHostsSupported = dedicatedHostsSupported;
            o.defaultCores = defaultCores;
            o.defaultThreadsPerCore = defaultThreadsPerCore;
            o.defaultVcpus = defaultVcpus;
            o.ebsEncryptionSupport = ebsEncryptionSupport;
            o.ebsNvmeSupport = ebsNvmeSupport;
            o.ebsOptimizedSupport = ebsOptimizedSupport;
            o.ebsPerformanceBaselineBandwidth = ebsPerformanceBaselineBandwidth;
            o.ebsPerformanceBaselineIops = ebsPerformanceBaselineIops;
            o.ebsPerformanceBaselineThroughput = ebsPerformanceBaselineThroughput;
            o.ebsPerformanceMaximumBandwidth = ebsPerformanceMaximumBandwidth;
            o.ebsPerformanceMaximumIops = ebsPerformanceMaximumIops;
            o.ebsPerformanceMaximumThroughput = ebsPerformanceMaximumThroughput;
            o.efaSupported = efaSupported;
            o.enaSupport = enaSupport;
            o.encryptionInTransitSupported = encryptionInTransitSupported;
            o.fpgas = fpgas;
            o.freeTierEligible = freeTierEligible;
            o.gpuses = gpuses;
            o.hibernationSupported = hibernationSupported;
            o.hypervisor = hypervisor;
            o.id = id;
            o.inferenceAccelerators = inferenceAccelerators;
            o.instanceDisks = instanceDisks;
            o.instanceStorageSupported = instanceStorageSupported;
            o.instanceType = instanceType;
            o.ipv6Supported = ipv6Supported;
            o.maximumIpv4AddressesPerInterface = maximumIpv4AddressesPerInterface;
            o.maximumIpv6AddressesPerInterface = maximumIpv6AddressesPerInterface;
            o.maximumNetworkInterfaces = maximumNetworkInterfaces;
            o.memorySize = memorySize;
            o.networkPerformance = networkPerformance;
            o.supportedArchitectures = supportedArchitectures;
            o.supportedPlacementStrategies = supportedPlacementStrategies;
            o.supportedRootDeviceTypes = supportedRootDeviceTypes;
            o.supportedUsagesClasses = supportedUsagesClasses;
            o.supportedVirtualizationTypes = supportedVirtualizationTypes;
            o.sustainedClockSpeed = sustainedClockSpeed;
            o.totalFpgaMemory = totalFpgaMemory;
            o.totalGpuMemory = totalGpuMemory;
            o.totalInstanceStorage = totalInstanceStorage;
            o.validCores = validCores;
            o.validThreadsPerCores = validThreadsPerCores;
            return o;
        }
    }
}
