// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupArgs Empty = new GroupArgs();

    /**
     * A string containing the description of the group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A string containing the description of the group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A string containing the name of the group. This value is commonly displayed when the group is referenced.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return A string containing the name of the group. This value is commonly displayed when the group is referenced.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The globally unique identifier for the identity store..
     * 
     */
    @Import(name="identityStoreId", required=true)
    private Output<String> identityStoreId;

    /**
     * @return The globally unique identifier for the identity store..
     * 
     */
    public Output<String> identityStoreId() {
        return this.identityStoreId;
    }

    private GroupArgs() {}

    private GroupArgs(GroupArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.identityStoreId = $.identityStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupArgs $;

        public Builder() {
            $ = new GroupArgs();
        }

        public Builder(GroupArgs defaults) {
            $ = new GroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A string containing the description of the group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A string containing the description of the group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName A string containing the name of the group. This value is commonly displayed when the group is referenced.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A string containing the name of the group. This value is commonly displayed when the group is referenced.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param identityStoreId The globally unique identifier for the identity store..
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(Output<String> identityStoreId) {
            $.identityStoreId = identityStoreId;
            return this;
        }

        /**
         * @param identityStoreId The globally unique identifier for the identity store..
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(String identityStoreId) {
            return identityStoreId(Output.of(identityStoreId));
        }

        public GroupArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.identityStoreId = Objects.requireNonNull($.identityStoreId, "expected parameter 'identityStoreId' to be non-null");
            return $;
        }
    }

}
