// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayRouteSpecHttpRouteActionTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecHttpRouteActionTargetArgs Empty = new GatewayRouteSpecHttpRouteActionTargetArgs();

    /**
     * The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Virtual service gateway route target.
     * 
     */
    @Import(name="virtualService", required=true)
    private Output<GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs> virtualService;

    /**
     * @return Virtual service gateway route target.
     * 
     */
    public Output<GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs> virtualService() {
        return this.virtualService;
    }

    private GatewayRouteSpecHttpRouteActionTargetArgs() {}

    private GatewayRouteSpecHttpRouteActionTargetArgs(GatewayRouteSpecHttpRouteActionTargetArgs $) {
        this.port = $.port;
        this.virtualService = $.virtualService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecHttpRouteActionTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecHttpRouteActionTargetArgs $;

        public Builder() {
            $ = new GatewayRouteSpecHttpRouteActionTargetArgs();
        }

        public Builder(GatewayRouteSpecHttpRouteActionTargetArgs defaults) {
            $ = new GatewayRouteSpecHttpRouteActionTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param virtualService Virtual service gateway route target.
         * 
         * @return builder
         * 
         */
        public Builder virtualService(Output<GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs> virtualService) {
            $.virtualService = virtualService;
            return this;
        }

        /**
         * @param virtualService Virtual service gateway route target.
         * 
         * @return builder
         * 
         */
        public Builder virtualService(GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs virtualService) {
            return virtualService(Output.of(virtualService));
        }

        public GatewayRouteSpecHttpRouteActionTargetArgs build() {
            if ($.virtualService == null) {
                throw new MissingRequiredPropertyException("GatewayRouteSpecHttpRouteActionTargetArgs", "virtualService");
            }
            return $;
        }
    }

}
