// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.aws.lakeformation.outputs.DataCellsFilterTableDataRowFilterAllRowsWildcard;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataCellsFilterTableDataRowFilter {
    /**
     * @return (Optional) A wildcard that matches all rows.
     * 
     */
    private @Nullable DataCellsFilterTableDataRowFilterAllRowsWildcard allRowsWildcard;
    /**
     * @return (Optional) A filter expression.
     * 
     */
    private @Nullable String filterExpression;

    private DataCellsFilterTableDataRowFilter() {}
    /**
     * @return (Optional) A wildcard that matches all rows.
     * 
     */
    public Optional<DataCellsFilterTableDataRowFilterAllRowsWildcard> allRowsWildcard() {
        return Optional.ofNullable(this.allRowsWildcard);
    }
    /**
     * @return (Optional) A filter expression.
     * 
     */
    public Optional<String> filterExpression() {
        return Optional.ofNullable(this.filterExpression);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCellsFilterTableDataRowFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataCellsFilterTableDataRowFilterAllRowsWildcard allRowsWildcard;
        private @Nullable String filterExpression;
        public Builder() {}
        public Builder(DataCellsFilterTableDataRowFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allRowsWildcard = defaults.allRowsWildcard;
    	      this.filterExpression = defaults.filterExpression;
        }

        @CustomType.Setter
        public Builder allRowsWildcard(@Nullable DataCellsFilterTableDataRowFilterAllRowsWildcard allRowsWildcard) {

            this.allRowsWildcard = allRowsWildcard;
            return this;
        }
        @CustomType.Setter
        public Builder filterExpression(@Nullable String filterExpression) {

            this.filterExpression = filterExpression;
            return this;
        }
        public DataCellsFilterTableDataRowFilter build() {
            final var _resultValue = new DataCellsFilterTableDataRowFilter();
            _resultValue.allRowsWildcard = allRowsWildcard;
            _resultValue.filterExpression = filterExpression;
            return _resultValue;
        }
    }
}
