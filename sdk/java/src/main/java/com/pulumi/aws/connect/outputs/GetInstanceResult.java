// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceResult {
    /**
     * @return ARN of the instance.
     * 
     */
    private @Nullable String arn;
    private @Nullable Boolean autoResolveBestVoicesEnabled;
    /**
     * @return Whether contact flow logs are enabled.
     * 
     */
    private @Nullable Boolean contactFlowLogsEnabled;
    /**
     * @return Whether contact lens is enabled.
     * 
     */
    private @Nullable Boolean contactLensEnabled;
    /**
     * @return When the instance was created.
     * 
     */
    private @Nullable String createdTime;
    /**
     * @return Whether early media for outbound calls is enabled .
     * 
     */
    private @Nullable Boolean earlyMediaEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Specifies The identity management type attached to the instance.
     * 
     */
    private @Nullable String identityManagementType;
    /**
     * @return Whether inbound calls are enabled.
     * 
     */
    private @Nullable Boolean inboundCallsEnabled;
    private @Nullable String instanceAlias;
    private @Nullable String instanceId;
    /**
     * @return Whether multi-party calls/conference is enabled.
     * 
     */
    private @Nullable Boolean multiPartyConferenceEnabled;
    /**
     * @return Whether outbound calls are enabled.
     * 
     */
    private @Nullable Boolean outboundCallsEnabled;
    /**
     * @return Service role of the instance.
     * 
     */
    private @Nullable String serviceRole;
    /**
     * @return State of the instance.
     * 
     */
    private @Nullable String status;

    private GetInstanceResult() {}
    /**
     * @return ARN of the instance.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<Boolean> autoResolveBestVoicesEnabled() {
        return Optional.ofNullable(this.autoResolveBestVoicesEnabled);
    }
    /**
     * @return Whether contact flow logs are enabled.
     * 
     */
    public Optional<Boolean> contactFlowLogsEnabled() {
        return Optional.ofNullable(this.contactFlowLogsEnabled);
    }
    /**
     * @return Whether contact lens is enabled.
     * 
     */
    public Optional<Boolean> contactLensEnabled() {
        return Optional.ofNullable(this.contactLensEnabled);
    }
    /**
     * @return When the instance was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return Whether early media for outbound calls is enabled .
     * 
     */
    public Optional<Boolean> earlyMediaEnabled() {
        return Optional.ofNullable(this.earlyMediaEnabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Specifies The identity management type attached to the instance.
     * 
     */
    public Optional<String> identityManagementType() {
        return Optional.ofNullable(this.identityManagementType);
    }
    /**
     * @return Whether inbound calls are enabled.
     * 
     */
    public Optional<Boolean> inboundCallsEnabled() {
        return Optional.ofNullable(this.inboundCallsEnabled);
    }
    public Optional<String> instanceAlias() {
        return Optional.ofNullable(this.instanceAlias);
    }
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return Whether multi-party calls/conference is enabled.
     * 
     */
    public Optional<Boolean> multiPartyConferenceEnabled() {
        return Optional.ofNullable(this.multiPartyConferenceEnabled);
    }
    /**
     * @return Whether outbound calls are enabled.
     * 
     */
    public Optional<Boolean> outboundCallsEnabled() {
        return Optional.ofNullable(this.outboundCallsEnabled);
    }
    /**
     * @return Service role of the instance.
     * 
     */
    public Optional<String> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }
    /**
     * @return State of the instance.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Boolean autoResolveBestVoicesEnabled;
        private @Nullable Boolean contactFlowLogsEnabled;
        private @Nullable Boolean contactLensEnabled;
        private @Nullable String createdTime;
        private @Nullable Boolean earlyMediaEnabled;
        private @Nullable String id;
        private @Nullable String identityManagementType;
        private @Nullable Boolean inboundCallsEnabled;
        private @Nullable String instanceAlias;
        private @Nullable String instanceId;
        private @Nullable Boolean multiPartyConferenceEnabled;
        private @Nullable Boolean outboundCallsEnabled;
        private @Nullable String serviceRole;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.autoResolveBestVoicesEnabled = defaults.autoResolveBestVoicesEnabled;
    	      this.contactFlowLogsEnabled = defaults.contactFlowLogsEnabled;
    	      this.contactLensEnabled = defaults.contactLensEnabled;
    	      this.createdTime = defaults.createdTime;
    	      this.earlyMediaEnabled = defaults.earlyMediaEnabled;
    	      this.id = defaults.id;
    	      this.identityManagementType = defaults.identityManagementType;
    	      this.inboundCallsEnabled = defaults.inboundCallsEnabled;
    	      this.instanceAlias = defaults.instanceAlias;
    	      this.instanceId = defaults.instanceId;
    	      this.multiPartyConferenceEnabled = defaults.multiPartyConferenceEnabled;
    	      this.outboundCallsEnabled = defaults.outboundCallsEnabled;
    	      this.serviceRole = defaults.serviceRole;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder autoResolveBestVoicesEnabled(@Nullable Boolean autoResolveBestVoicesEnabled) {
            this.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder contactFlowLogsEnabled(@Nullable Boolean contactFlowLogsEnabled) {
            this.contactFlowLogsEnabled = contactFlowLogsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder contactLensEnabled(@Nullable Boolean contactLensEnabled) {
            this.contactLensEnabled = contactLensEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder earlyMediaEnabled(@Nullable Boolean earlyMediaEnabled) {
            this.earlyMediaEnabled = earlyMediaEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityManagementType(@Nullable String identityManagementType) {
            this.identityManagementType = identityManagementType;
            return this;
        }
        @CustomType.Setter
        public Builder inboundCallsEnabled(@Nullable Boolean inboundCallsEnabled) {
            this.inboundCallsEnabled = inboundCallsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder instanceAlias(@Nullable String instanceAlias) {
            this.instanceAlias = instanceAlias;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder multiPartyConferenceEnabled(@Nullable Boolean multiPartyConferenceEnabled) {
            this.multiPartyConferenceEnabled = multiPartyConferenceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder outboundCallsEnabled(@Nullable Boolean outboundCallsEnabled) {
            this.outboundCallsEnabled = outboundCallsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder serviceRole(@Nullable String serviceRole) {
            this.serviceRole = serviceRole;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetInstanceResult build() {
            final var o = new GetInstanceResult();
            o.arn = arn;
            o.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            o.contactFlowLogsEnabled = contactFlowLogsEnabled;
            o.contactLensEnabled = contactLensEnabled;
            o.createdTime = createdTime;
            o.earlyMediaEnabled = earlyMediaEnabled;
            o.id = id;
            o.identityManagementType = identityManagementType;
            o.inboundCallsEnabled = inboundCallsEnabled;
            o.instanceAlias = instanceAlias;
            o.instanceId = instanceId;
            o.multiPartyConferenceEnabled = multiPartyConferenceEnabled;
            o.outboundCallsEnabled = outboundCallsEnabled;
            o.serviceRole = serviceRole;
            o.status = status;
            return o;
        }
    }
}
