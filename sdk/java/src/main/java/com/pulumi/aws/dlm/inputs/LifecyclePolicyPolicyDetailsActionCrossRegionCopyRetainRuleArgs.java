// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs Empty = new LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs();

    @Import(name="interval", required=true)
    private Output<Integer> interval;

    public Output<Integer> interval() {
        return this.interval;
    }

    @Import(name="intervalUnit", required=true)
    private Output<String> intervalUnit;

    public Output<String> intervalUnit() {
        return this.intervalUnit;
    }

    private LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs() {}

    private LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs(LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs $) {
        this.interval = $.interval;
        this.intervalUnit = $.intervalUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder interval(Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public Builder intervalUnit(Output<String> intervalUnit) {
            $.intervalUnit = intervalUnit;
            return this;
        }

        public Builder intervalUnit(String intervalUnit) {
            return intervalUnit(Output.of(intervalUnit));
        }

        public LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs build() {
            if ($.interval == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs", "interval");
            }
            if ($.intervalUnit == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsActionCrossRegionCopyRetainRuleArgs", "intervalUnit");
            }
            return $;
        }
    }

}
