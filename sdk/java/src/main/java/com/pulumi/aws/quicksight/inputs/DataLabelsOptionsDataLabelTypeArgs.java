// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs;
import com.pulumi.aws.quicksight.inputs.DataLabelsOptionsDataLabelTypeFieldLabelTypeArgs;
import com.pulumi.aws.quicksight.inputs.SelectAllOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLabelsOptionsDataLabelTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLabelsOptionsDataLabelTypeArgs Empty = new DataLabelsOptionsDataLabelTypeArgs();

    @Import(name="dataPathLabelType")
    private @Nullable Output<DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs> dataPathLabelType;

    public Optional<Output<DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs>> dataPathLabelType() {
        return Optional.ofNullable(this.dataPathLabelType);
    }

    @Import(name="fieldLabelType")
    private @Nullable Output<DataLabelsOptionsDataLabelTypeFieldLabelTypeArgs> fieldLabelType;

    public Optional<Output<DataLabelsOptionsDataLabelTypeFieldLabelTypeArgs>> fieldLabelType() {
        return Optional.ofNullable(this.fieldLabelType);
    }

    @Import(name="maximumLabelType")
    private @Nullable Output<SelectAllOptionsArgs> maximumLabelType;

    public Optional<Output<SelectAllOptionsArgs>> maximumLabelType() {
        return Optional.ofNullable(this.maximumLabelType);
    }

    @Import(name="minimumLabelType")
    private @Nullable Output<SelectAllOptionsArgs> minimumLabelType;

    public Optional<Output<SelectAllOptionsArgs>> minimumLabelType() {
        return Optional.ofNullable(this.minimumLabelType);
    }

    @Import(name="rangeEndsLabelType")
    private @Nullable Output<SelectAllOptionsArgs> rangeEndsLabelType;

    public Optional<Output<SelectAllOptionsArgs>> rangeEndsLabelType() {
        return Optional.ofNullable(this.rangeEndsLabelType);
    }

    private DataLabelsOptionsDataLabelTypeArgs() {}

    private DataLabelsOptionsDataLabelTypeArgs(DataLabelsOptionsDataLabelTypeArgs $) {
        this.dataPathLabelType = $.dataPathLabelType;
        this.fieldLabelType = $.fieldLabelType;
        this.maximumLabelType = $.maximumLabelType;
        this.minimumLabelType = $.minimumLabelType;
        this.rangeEndsLabelType = $.rangeEndsLabelType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLabelsOptionsDataLabelTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLabelsOptionsDataLabelTypeArgs $;

        public Builder() {
            $ = new DataLabelsOptionsDataLabelTypeArgs();
        }

        public Builder(DataLabelsOptionsDataLabelTypeArgs defaults) {
            $ = new DataLabelsOptionsDataLabelTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataPathLabelType(@Nullable Output<DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs> dataPathLabelType) {
            $.dataPathLabelType = dataPathLabelType;
            return this;
        }

        public Builder dataPathLabelType(DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs dataPathLabelType) {
            return dataPathLabelType(Output.of(dataPathLabelType));
        }

        public Builder fieldLabelType(@Nullable Output<DataLabelsOptionsDataLabelTypeFieldLabelTypeArgs> fieldLabelType) {
            $.fieldLabelType = fieldLabelType;
            return this;
        }

        public Builder fieldLabelType(DataLabelsOptionsDataLabelTypeFieldLabelTypeArgs fieldLabelType) {
            return fieldLabelType(Output.of(fieldLabelType));
        }

        public Builder maximumLabelType(@Nullable Output<SelectAllOptionsArgs> maximumLabelType) {
            $.maximumLabelType = maximumLabelType;
            return this;
        }

        public Builder maximumLabelType(SelectAllOptionsArgs maximumLabelType) {
            return maximumLabelType(Output.of(maximumLabelType));
        }

        public Builder minimumLabelType(@Nullable Output<SelectAllOptionsArgs> minimumLabelType) {
            $.minimumLabelType = minimumLabelType;
            return this;
        }

        public Builder minimumLabelType(SelectAllOptionsArgs minimumLabelType) {
            return minimumLabelType(Output.of(minimumLabelType));
        }

        public Builder rangeEndsLabelType(@Nullable Output<SelectAllOptionsArgs> rangeEndsLabelType) {
            $.rangeEndsLabelType = rangeEndsLabelType;
            return this;
        }

        public Builder rangeEndsLabelType(SelectAllOptionsArgs rangeEndsLabelType) {
            return rangeEndsLabelType(Output.of(rangeEndsLabelType));
        }

        public DataLabelsOptionsDataLabelTypeArgs build() {
            return $;
        }
    }

}
