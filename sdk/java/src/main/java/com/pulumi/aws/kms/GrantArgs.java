// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kms;

import com.pulumi.aws.kms.inputs.GrantConstraintArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrantArgs Empty = new GrantArgs();

    @Import(name="constraints")
    private @Nullable Output<List<GrantConstraintArgs>> constraints;

    public Optional<Output<List<GrantConstraintArgs>>> constraints() {
        return Optional.ofNullable(this.constraints);
    }

    @Import(name="grantCreationTokens")
    private @Nullable Output<List<String>> grantCreationTokens;

    public Optional<Output<List<String>>> grantCreationTokens() {
        return Optional.ofNullable(this.grantCreationTokens);
    }

    @Import(name="granteePrincipal", required=true)
    private Output<String> granteePrincipal;

    public Output<String> granteePrincipal() {
        return this.granteePrincipal;
    }

    @Import(name="keyId", required=true)
    private Output<String> keyId;

    public Output<String> keyId() {
        return this.keyId;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="operations", required=true)
    private Output<List<String>> operations;

    public Output<List<String>> operations() {
        return this.operations;
    }

    @Import(name="retireOnDelete")
    private @Nullable Output<Boolean> retireOnDelete;

    public Optional<Output<Boolean>> retireOnDelete() {
        return Optional.ofNullable(this.retireOnDelete);
    }

    @Import(name="retiringPrincipal")
    private @Nullable Output<String> retiringPrincipal;

    public Optional<Output<String>> retiringPrincipal() {
        return Optional.ofNullable(this.retiringPrincipal);
    }

    private GrantArgs() {}

    private GrantArgs(GrantArgs $) {
        this.constraints = $.constraints;
        this.grantCreationTokens = $.grantCreationTokens;
        this.granteePrincipal = $.granteePrincipal;
        this.keyId = $.keyId;
        this.name = $.name;
        this.operations = $.operations;
        this.retireOnDelete = $.retireOnDelete;
        this.retiringPrincipal = $.retiringPrincipal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrantArgs $;

        public Builder() {
            $ = new GrantArgs();
        }

        public Builder(GrantArgs defaults) {
            $ = new GrantArgs(Objects.requireNonNull(defaults));
        }

        public Builder constraints(@Nullable Output<List<GrantConstraintArgs>> constraints) {
            $.constraints = constraints;
            return this;
        }

        public Builder constraints(List<GrantConstraintArgs> constraints) {
            return constraints(Output.of(constraints));
        }

        public Builder constraints(GrantConstraintArgs... constraints) {
            return constraints(List.of(constraints));
        }

        public Builder grantCreationTokens(@Nullable Output<List<String>> grantCreationTokens) {
            $.grantCreationTokens = grantCreationTokens;
            return this;
        }

        public Builder grantCreationTokens(List<String> grantCreationTokens) {
            return grantCreationTokens(Output.of(grantCreationTokens));
        }

        public Builder grantCreationTokens(String... grantCreationTokens) {
            return grantCreationTokens(List.of(grantCreationTokens));
        }

        public Builder granteePrincipal(Output<String> granteePrincipal) {
            $.granteePrincipal = granteePrincipal;
            return this;
        }

        public Builder granteePrincipal(String granteePrincipal) {
            return granteePrincipal(Output.of(granteePrincipal));
        }

        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder operations(Output<List<String>> operations) {
            $.operations = operations;
            return this;
        }

        public Builder operations(List<String> operations) {
            return operations(Output.of(operations));
        }

        public Builder operations(String... operations) {
            return operations(List.of(operations));
        }

        public Builder retireOnDelete(@Nullable Output<Boolean> retireOnDelete) {
            $.retireOnDelete = retireOnDelete;
            return this;
        }

        public Builder retireOnDelete(Boolean retireOnDelete) {
            return retireOnDelete(Output.of(retireOnDelete));
        }

        public Builder retiringPrincipal(@Nullable Output<String> retiringPrincipal) {
            $.retiringPrincipal = retiringPrincipal;
            return this;
        }

        public Builder retiringPrincipal(String retiringPrincipal) {
            return retiringPrincipal(Output.of(retiringPrincipal));
        }

        public GrantArgs build() {
            $.granteePrincipal = Objects.requireNonNull($.granteePrincipal, "expected parameter 'granteePrincipal' to be non-null");
            $.keyId = Objects.requireNonNull($.keyId, "expected parameter 'keyId' to be non-null");
            $.operations = Objects.requireNonNull($.operations, "expected parameter 'operations' to be non-null");
            return $;
        }
    }

}
