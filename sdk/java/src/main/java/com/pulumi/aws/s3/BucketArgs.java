// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketCorsRuleArgs;
import com.pulumi.aws.s3.inputs.BucketGrantArgs;
import com.pulumi.aws.s3.inputs.BucketLifecycleRuleArgs;
import com.pulumi.aws.s3.inputs.BucketLoggingArgs;
import com.pulumi.aws.s3.inputs.BucketObjectLockConfigurationArgs;
import com.pulumi.aws.s3.inputs.BucketReplicationConfigurationArgs;
import com.pulumi.aws.s3.inputs.BucketServerSideEncryptionConfigurationArgs;
import com.pulumi.aws.s3.inputs.BucketVersioningArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketArgs Empty = new BucketArgs();

    /**
     * Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketAccelerateConfiguration` instead.
     * 
     * @deprecated
     * acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead.
     * 
     */
    @Deprecated /* acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead. */
    @Import(name="accelerationStatus")
    private @Nullable Output<String> accelerationStatus;

    /**
     * @return Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketAccelerateConfiguration` instead.
     * 
     * @deprecated
     * acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead.
     * 
     */
    @Deprecated /* acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead. */
    public Optional<Output<String>> accelerationStatus() {
        return Optional.ofNullable(this.accelerationStatus);
    }

    /**
     * The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
     * 
     * @deprecated
     * acl is deprecated. Use the aws.s3.BucketAcl resource instead.
     * 
     */
    @Deprecated /* acl is deprecated. Use the aws.s3.BucketAcl resource instead. */
    @Import(name="acl")
    private @Nullable Output<String> acl;

    /**
     * @return The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
     * 
     * @deprecated
     * acl is deprecated. Use the aws.s3.BucketAcl resource instead.
     * 
     */
    @Deprecated /* acl is deprecated. Use the aws.s3.BucketAcl resource instead. */
    public Optional<Output<String>> acl() {
        return Optional.ofNullable(this.acl);
    }

    /**
     * Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html). The name must not be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.DirectoryBucket` resource to manage S3 Express buckets.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html). The name must not be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.DirectoryBucket` resource to manage S3 Express buckets.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
     * 
     */
    @Import(name="bucketPrefix")
    private @Nullable Output<String> bucketPrefix;

    /**
     * @return Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
     * 
     */
    public Optional<Output<String>> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    /**
     * Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfiguration` instead.
     * 
     * @deprecated
     * cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead.
     * 
     */
    @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead. */
    @Import(name="corsRules")
    private @Nullable Output<List<BucketCorsRuleArgs>> corsRules;

    /**
     * @return Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfiguration` instead.
     * 
     * @deprecated
     * cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead.
     * 
     */
    @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead. */
    public Optional<Output<List<BucketCorsRuleArgs>>> corsRules() {
        return Optional.ofNullable(this.corsRules);
    }

    /**
     * Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    /**
     * @return Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    /**
     * An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
     * 
     * @deprecated
     * grant is deprecated. Use the aws.s3.BucketAcl resource instead.
     * 
     */
    @Deprecated /* grant is deprecated. Use the aws.s3.BucketAcl resource instead. */
    @Import(name="grants")
    private @Nullable Output<List<BucketGrantArgs>> grants;

    /**
     * @return An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
     * 
     * @deprecated
     * grant is deprecated. Use the aws.s3.BucketAcl resource instead.
     * 
     */
    @Deprecated /* grant is deprecated. Use the aws.s3.BucketAcl resource instead. */
    public Optional<Output<List<BucketGrantArgs>>> grants() {
        return Optional.ofNullable(this.grants);
    }

    /**
     * Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLifecycleConfiguration` instead.
     * 
     * @deprecated
     * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead.
     * 
     */
    @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead. */
    @Import(name="lifecycleRules")
    private @Nullable Output<List<BucketLifecycleRuleArgs>> lifecycleRules;

    /**
     * @return Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLifecycleConfiguration` instead.
     * 
     * @deprecated
     * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead.
     * 
     */
    @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead. */
    public Optional<Output<List<BucketLifecycleRuleArgs>>> lifecycleRules() {
        return Optional.ofNullable(this.lifecycleRules);
    }

    /**
     * Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLogging` instead.
     * 
     * @deprecated
     * logging is deprecated. Use the aws.s3.BucketLogging resource instead.
     * 
     */
    @Deprecated /* logging is deprecated. Use the aws.s3.BucketLogging resource instead. */
    @Import(name="loggings")
    private @Nullable Output<List<BucketLoggingArgs>> loggings;

    /**
     * @return Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLogging` instead.
     * 
     * @deprecated
     * logging is deprecated. Use the aws.s3.BucketLogging resource instead.
     * 
     */
    @Deprecated /* logging is deprecated. Use the aws.s3.BucketLogging resource instead. */
    public Optional<Output<List<BucketLoggingArgs>>> loggings() {
        return Optional.ofNullable(this.loggings);
    }

    /**
     * Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
     * The provider wil only perform drift detection if a configuration value is provided.
     * Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfiguration` instead.
     * 
     * @deprecated
     * object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead.
     * 
     */
    @Deprecated /* object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead. */
    @Import(name="objectLockConfiguration")
    private @Nullable Output<BucketObjectLockConfigurationArgs> objectLockConfiguration;

    /**
     * @return Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
     * The provider wil only perform drift detection if a configuration value is provided.
     * Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfiguration` instead.
     * 
     * @deprecated
     * object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead.
     * 
     */
    @Deprecated /* object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead. */
    public Optional<Output<BucketObjectLockConfigurationArgs>> objectLockConfiguration() {
        return Optional.ofNullable(this.objectLockConfiguration);
    }

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
     * 
     */
    @Import(name="objectLockEnabled")
    private @Nullable Output<Boolean> objectLockEnabled;

    /**
     * @return Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
     * 
     */
    public Optional<Output<Boolean>> objectLockEnabled() {
        return Optional.ofNullable(this.objectLockEnabled);
    }

    /**
     * Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketPolicy` instead.
     * 
     * @deprecated
     * policy is deprecated. Use the aws.s3.BucketPolicy resource instead.
     * 
     */
    @Deprecated /* policy is deprecated. Use the aws.s3.BucketPolicy resource instead. */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketPolicy` instead.
     * 
     * @deprecated
     * policy is deprecated. Use the aws.s3.BucketPolicy resource instead.
     * 
     */
    @Deprecated /* policy is deprecated. Use the aws.s3.BucketPolicy resource instead. */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketReplicationConfig` instead.
     * 
     * @deprecated
     * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
     * 
     */
    @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
    @Import(name="replicationConfigurations")
    private @Nullable Output<List<BucketReplicationConfigurationArgs>> replicationConfigurations;

    /**
     * @return Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketReplicationConfig` instead.
     * 
     * @deprecated
     * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
     * 
     */
    @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
    public Optional<Output<List<BucketReplicationConfigurationArgs>>> replicationConfigurations() {
        return Optional.ofNullable(this.replicationConfigurations);
    }

    /**
     * Specifies who should bear the cost of Amazon S3 data transfer.
     * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
     * See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketRequestPaymentConfiguration` instead.
     * 
     * @deprecated
     * request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead.
     * 
     */
    @Deprecated /* request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead. */
    @Import(name="requestPayer")
    private @Nullable Output<String> requestPayer;

    /**
     * @return Specifies who should bear the cost of Amazon S3 data transfer.
     * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
     * See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketRequestPaymentConfiguration` instead.
     * 
     * @deprecated
     * request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead.
     * 
     */
    @Deprecated /* request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead. */
    public Optional<Output<String>> requestPayer() {
        return Optional.ofNullable(this.requestPayer);
    }

    /**
     * Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketServerSideEncryptionConfiguration` instead.
     * 
     * @deprecated
     * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead.
     * 
     */
    @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead. */
    @Import(name="serverSideEncryptionConfigurations")
    private @Nullable Output<List<BucketServerSideEncryptionConfigurationArgs>> serverSideEncryptionConfigurations;

    /**
     * @return Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketServerSideEncryptionConfiguration` instead.
     * 
     * @deprecated
     * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead.
     * 
     */
    @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead. */
    public Optional<Output<List<BucketServerSideEncryptionConfigurationArgs>>> serverSideEncryptionConfigurations() {
        return Optional.ofNullable(this.serverSideEncryptionConfigurations);
    }

    /**
     * Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * The following arguments are deprecated, and will be removed in a future major version:
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * The following arguments are deprecated, and will be removed in a future major version:
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioning` instead.
     * 
     * @deprecated
     * versioning is deprecated. Use the aws.s3.BucketVersioning resource instead.
     * 
     */
    @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioning resource instead. */
    @Import(name="versionings")
    private @Nullable Output<List<BucketVersioningArgs>> versionings;

    /**
     * @return Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioning` instead.
     * 
     * @deprecated
     * versioning is deprecated. Use the aws.s3.BucketVersioning resource instead.
     * 
     */
    @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioning resource instead. */
    public Optional<Output<List<BucketVersioningArgs>>> versionings() {
        return Optional.ofNullable(this.versionings);
    }

    /**
     * Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketWebsiteConfiguration` instead.
     * 
     * @deprecated
     * website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead.
     * 
     */
    @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead. */
    @Import(name="websites")
    private @Nullable Output<List<BucketWebsiteArgs>> websites;

    /**
     * @return Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketWebsiteConfiguration` instead.
     * 
     * @deprecated
     * website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead.
     * 
     */
    @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead. */
    public Optional<Output<List<BucketWebsiteArgs>>> websites() {
        return Optional.ofNullable(this.websites);
    }

    private BucketArgs() {}

    private BucketArgs(BucketArgs $) {
        this.accelerationStatus = $.accelerationStatus;
        this.acl = $.acl;
        this.bucket = $.bucket;
        this.bucketPrefix = $.bucketPrefix;
        this.corsRules = $.corsRules;
        this.forceDestroy = $.forceDestroy;
        this.grants = $.grants;
        this.lifecycleRules = $.lifecycleRules;
        this.loggings = $.loggings;
        this.objectLockConfiguration = $.objectLockConfiguration;
        this.objectLockEnabled = $.objectLockEnabled;
        this.policy = $.policy;
        this.replicationConfigurations = $.replicationConfigurations;
        this.requestPayer = $.requestPayer;
        this.serverSideEncryptionConfigurations = $.serverSideEncryptionConfigurations;
        this.tags = $.tags;
        this.versionings = $.versionings;
        this.websites = $.websites;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketArgs $;

        public Builder() {
            $ = new BucketArgs();
        }

        public Builder(BucketArgs defaults) {
            $ = new BucketArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerationStatus Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketAccelerateConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead.
         * 
         */
        @Deprecated /* acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead. */
        public Builder accelerationStatus(@Nullable Output<String> accelerationStatus) {
            $.accelerationStatus = accelerationStatus;
            return this;
        }

        /**
         * @param accelerationStatus Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketAccelerateConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead.
         * 
         */
        @Deprecated /* acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfiguration resource instead. */
        public Builder accelerationStatus(String accelerationStatus) {
            return accelerationStatus(Output.of(accelerationStatus));
        }

        /**
         * @param acl The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * acl is deprecated. Use the aws.s3.BucketAcl resource instead.
         * 
         */
        @Deprecated /* acl is deprecated. Use the aws.s3.BucketAcl resource instead. */
        public Builder acl(@Nullable Output<String> acl) {
            $.acl = acl;
            return this;
        }

        /**
         * @param acl The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * acl is deprecated. Use the aws.s3.BucketAcl resource instead.
         * 
         */
        @Deprecated /* acl is deprecated. Use the aws.s3.BucketAcl resource instead. */
        public Builder acl(String acl) {
            return acl(Output.of(acl));
        }

        /**
         * @param bucket Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html). The name must not be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.DirectoryBucket` resource to manage S3 Express buckets.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html). The name must not be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.DirectoryBucket` resource to manage S3 Express buckets.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param bucketPrefix Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        /**
         * @param bucketPrefix Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        /**
         * @param corsRules Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead.
         * 
         */
        @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead. */
        public Builder corsRules(@Nullable Output<List<BucketCorsRuleArgs>> corsRules) {
            $.corsRules = corsRules;
            return this;
        }

        /**
         * @param corsRules Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead.
         * 
         */
        @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead. */
        public Builder corsRules(List<BucketCorsRuleArgs> corsRules) {
            return corsRules(Output.of(corsRules));
        }

        /**
         * @param corsRules Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead.
         * 
         */
        @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfiguration resource instead. */
        public Builder corsRules(BucketCorsRuleArgs... corsRules) {
            return corsRules(List.of(corsRules));
        }

        /**
         * @param forceDestroy Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        /**
         * @param forceDestroy Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        /**
         * @param grants An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * grant is deprecated. Use the aws.s3.BucketAcl resource instead.
         * 
         */
        @Deprecated /* grant is deprecated. Use the aws.s3.BucketAcl resource instead. */
        public Builder grants(@Nullable Output<List<BucketGrantArgs>> grants) {
            $.grants = grants;
            return this;
        }

        /**
         * @param grants An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * grant is deprecated. Use the aws.s3.BucketAcl resource instead.
         * 
         */
        @Deprecated /* grant is deprecated. Use the aws.s3.BucketAcl resource instead. */
        public Builder grants(List<BucketGrantArgs> grants) {
            return grants(Output.of(grants));
        }

        /**
         * @param grants An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAcl` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * grant is deprecated. Use the aws.s3.BucketAcl resource instead.
         * 
         */
        @Deprecated /* grant is deprecated. Use the aws.s3.BucketAcl resource instead. */
        public Builder grants(BucketGrantArgs... grants) {
            return grants(List.of(grants));
        }

        /**
         * @param lifecycleRules Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLifecycleConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead.
         * 
         */
        @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead. */
        public Builder lifecycleRules(@Nullable Output<List<BucketLifecycleRuleArgs>> lifecycleRules) {
            $.lifecycleRules = lifecycleRules;
            return this;
        }

        /**
         * @param lifecycleRules Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLifecycleConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead.
         * 
         */
        @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead. */
        public Builder lifecycleRules(List<BucketLifecycleRuleArgs> lifecycleRules) {
            return lifecycleRules(Output.of(lifecycleRules));
        }

        /**
         * @param lifecycleRules Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLifecycleConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead.
         * 
         */
        @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfiguration resource instead. */
        public Builder lifecycleRules(BucketLifecycleRuleArgs... lifecycleRules) {
            return lifecycleRules(List.of(lifecycleRules));
        }

        /**
         * @param loggings Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLogging` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * logging is deprecated. Use the aws.s3.BucketLogging resource instead.
         * 
         */
        @Deprecated /* logging is deprecated. Use the aws.s3.BucketLogging resource instead. */
        public Builder loggings(@Nullable Output<List<BucketLoggingArgs>> loggings) {
            $.loggings = loggings;
            return this;
        }

        /**
         * @param loggings Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLogging` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * logging is deprecated. Use the aws.s3.BucketLogging resource instead.
         * 
         */
        @Deprecated /* logging is deprecated. Use the aws.s3.BucketLogging resource instead. */
        public Builder loggings(List<BucketLoggingArgs> loggings) {
            return loggings(Output.of(loggings));
        }

        /**
         * @param loggings Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketLogging` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * logging is deprecated. Use the aws.s3.BucketLogging resource instead.
         * 
         */
        @Deprecated /* logging is deprecated. Use the aws.s3.BucketLogging resource instead. */
        public Builder loggings(BucketLoggingArgs... loggings) {
            return loggings(List.of(loggings));
        }

        /**
         * @param objectLockConfiguration Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
         * The provider wil only perform drift detection if a configuration value is provided.
         * Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead.
         * 
         */
        @Deprecated /* object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead. */
        public Builder objectLockConfiguration(@Nullable Output<BucketObjectLockConfigurationArgs> objectLockConfiguration) {
            $.objectLockConfiguration = objectLockConfiguration;
            return this;
        }

        /**
         * @param objectLockConfiguration Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
         * The provider wil only perform drift detection if a configuration value is provided.
         * Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead.
         * 
         */
        @Deprecated /* object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfiguration resource instead. */
        public Builder objectLockConfiguration(BucketObjectLockConfigurationArgs objectLockConfiguration) {
            return objectLockConfiguration(Output.of(objectLockConfiguration));
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(@Nullable Output<Boolean> objectLockEnabled) {
            $.objectLockEnabled = objectLockEnabled;
            return this;
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(Boolean objectLockEnabled) {
            return objectLockEnabled(Output.of(objectLockEnabled));
        }

        /**
         * @param policy Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketPolicy` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * policy is deprecated. Use the aws.s3.BucketPolicy resource instead.
         * 
         */
        @Deprecated /* policy is deprecated. Use the aws.s3.BucketPolicy resource instead. */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketPolicy` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * policy is deprecated. Use the aws.s3.BucketPolicy resource instead.
         * 
         */
        @Deprecated /* policy is deprecated. Use the aws.s3.BucketPolicy resource instead. */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param replicationConfigurations Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketReplicationConfig` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
         * 
         */
        @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
        public Builder replicationConfigurations(@Nullable Output<List<BucketReplicationConfigurationArgs>> replicationConfigurations) {
            $.replicationConfigurations = replicationConfigurations;
            return this;
        }

        /**
         * @param replicationConfigurations Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketReplicationConfig` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
         * 
         */
        @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
        public Builder replicationConfigurations(List<BucketReplicationConfigurationArgs> replicationConfigurations) {
            return replicationConfigurations(Output.of(replicationConfigurations));
        }

        /**
         * @param replicationConfigurations Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketReplicationConfig` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
         * 
         */
        @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
        public Builder replicationConfigurations(BucketReplicationConfigurationArgs... replicationConfigurations) {
            return replicationConfigurations(List.of(replicationConfigurations));
        }

        /**
         * @param requestPayer Specifies who should bear the cost of Amazon S3 data transfer.
         * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
         * See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketRequestPaymentConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead.
         * 
         */
        @Deprecated /* request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead. */
        public Builder requestPayer(@Nullable Output<String> requestPayer) {
            $.requestPayer = requestPayer;
            return this;
        }

        /**
         * @param requestPayer Specifies who should bear the cost of Amazon S3 data transfer.
         * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
         * See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketRequestPaymentConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead.
         * 
         */
        @Deprecated /* request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfiguration resource instead. */
        public Builder requestPayer(String requestPayer) {
            return requestPayer(Output.of(requestPayer));
        }

        /**
         * @param serverSideEncryptionConfigurations Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketServerSideEncryptionConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead.
         * 
         */
        @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead. */
        public Builder serverSideEncryptionConfigurations(@Nullable Output<List<BucketServerSideEncryptionConfigurationArgs>> serverSideEncryptionConfigurations) {
            $.serverSideEncryptionConfigurations = serverSideEncryptionConfigurations;
            return this;
        }

        /**
         * @param serverSideEncryptionConfigurations Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketServerSideEncryptionConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead.
         * 
         */
        @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead. */
        public Builder serverSideEncryptionConfigurations(List<BucketServerSideEncryptionConfigurationArgs> serverSideEncryptionConfigurations) {
            return serverSideEncryptionConfigurations(Output.of(serverSideEncryptionConfigurations));
        }

        /**
         * @param serverSideEncryptionConfigurations Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
         * The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketServerSideEncryptionConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead.
         * 
         */
        @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfiguration resource instead. */
        public Builder serverSideEncryptionConfigurations(BucketServerSideEncryptionConfigurationArgs... serverSideEncryptionConfigurations) {
            return serverSideEncryptionConfigurations(List.of(serverSideEncryptionConfigurations));
        }

        /**
         * @param tags Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * The following arguments are deprecated, and will be removed in a future major version:
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * The following arguments are deprecated, and will be removed in a future major version:
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param versionings Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioning` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * versioning is deprecated. Use the aws.s3.BucketVersioning resource instead.
         * 
         */
        @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioning resource instead. */
        public Builder versionings(@Nullable Output<List<BucketVersioningArgs>> versionings) {
            $.versionings = versionings;
            return this;
        }

        /**
         * @param versionings Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioning` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * versioning is deprecated. Use the aws.s3.BucketVersioning resource instead.
         * 
         */
        @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioning resource instead. */
        public Builder versionings(List<BucketVersioningArgs> versionings) {
            return versionings(Output.of(versionings));
        }

        /**
         * @param versionings Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioning` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * versioning is deprecated. Use the aws.s3.BucketVersioning resource instead.
         * 
         */
        @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioning resource instead. */
        public Builder versionings(BucketVersioningArgs... versionings) {
            return versionings(List.of(versionings));
        }

        /**
         * @param websites Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketWebsiteConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead.
         * 
         */
        @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead. */
        public Builder websites(@Nullable Output<List<BucketWebsiteArgs>> websites) {
            $.websites = websites;
            return this;
        }

        /**
         * @param websites Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketWebsiteConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead.
         * 
         */
        @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead. */
        public Builder websites(List<BucketWebsiteArgs> websites) {
            return websites(Output.of(websites));
        }

        /**
         * @param websites Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
         * Use the resource `aws.s3.BucketWebsiteConfiguration` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead.
         * 
         */
        @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfiguration resource instead. */
        public Builder websites(BucketWebsiteArgs... websites) {
            return websites(List.of(websites));
        }

        public BucketArgs build() {
            return $;
        }
    }

}
