// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
import com.pulumi.aws.iam.inputs.GetAccessKeysPlainArgs;
import com.pulumi.aws.iam.inputs.GetGroupArgs;
import com.pulumi.aws.iam.inputs.GetGroupPlainArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilePlainArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilesPlainArgs;
import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderPlainArgs;
import com.pulumi.aws.iam.inputs.GetPolicyArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentPlainArgs;
import com.pulumi.aws.iam.inputs.GetPolicyPlainArgs;
import com.pulumi.aws.iam.inputs.GetPrincipalPolicySimulationArgs;
import com.pulumi.aws.iam.inputs.GetPrincipalPolicySimulationPlainArgs;
import com.pulumi.aws.iam.inputs.GetRoleArgs;
import com.pulumi.aws.iam.inputs.GetRolePlainArgs;
import com.pulumi.aws.iam.inputs.GetRolesArgs;
import com.pulumi.aws.iam.inputs.GetRolesPlainArgs;
import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
import com.pulumi.aws.iam.inputs.GetSamlProviderPlainArgs;
import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
import com.pulumi.aws.iam.inputs.GetServerCertificatePlainArgs;
import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
import com.pulumi.aws.iam.inputs.GetSessionContextPlainArgs;
import com.pulumi.aws.iam.inputs.GetUserArgs;
import com.pulumi.aws.iam.inputs.GetUserPlainArgs;
import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
import com.pulumi.aws.iam.inputs.GetUserSshKeyPlainArgs;
import com.pulumi.aws.iam.inputs.GetUsersArgs;
import com.pulumi.aws.iam.inputs.GetUsersPlainArgs;
import com.pulumi.aws.iam.outputs.GetAccessKeysResult;
import com.pulumi.aws.iam.outputs.GetAccountAliasResult;
import com.pulumi.aws.iam.outputs.GetGroupResult;
import com.pulumi.aws.iam.outputs.GetInstanceProfileResult;
import com.pulumi.aws.iam.outputs.GetInstanceProfilesResult;
import com.pulumi.aws.iam.outputs.GetOpenIdConnectProviderResult;
import com.pulumi.aws.iam.outputs.GetPolicyDocumentResult;
import com.pulumi.aws.iam.outputs.GetPolicyResult;
import com.pulumi.aws.iam.outputs.GetPrincipalPolicySimulationInvokeResult;
import com.pulumi.aws.iam.outputs.GetRoleResult;
import com.pulumi.aws.iam.outputs.GetRolesResult;
import com.pulumi.aws.iam.outputs.GetSamlProviderResult;
import com.pulumi.aws.iam.outputs.GetServerCertificateResult;
import com.pulumi.aws.iam.outputs.GetSessionContextResult;
import com.pulumi.aws.iam.outputs.GetUserResult;
import com.pulumi.aws.iam.outputs.GetUserSshKeyResult;
import com.pulumi.aws.iam.outputs.GetUsersResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class IamFunctions {
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     */
    public static Output<GetAccessKeysResult> getAccessKeys(GetAccessKeysArgs args) {
        return getAccessKeys(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     */
    public static CompletableFuture<GetAccessKeysResult> getAccessKeysPlain(GetAccessKeysPlainArgs args) {
        return getAccessKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     */
    public static Output<GetAccessKeysResult> getAccessKeys(GetAccessKeysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getAccessKeys:getAccessKeys", TypeShape.of(GetAccessKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     */
    public static CompletableFuture<GetAccessKeysResult> getAccessKeysPlain(GetAccessKeysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getAccessKeys:getAccessKeys", TypeShape.of(GetAccessKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias() {
        return getAccountAlias(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain() {
        return getAccountAliasPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias(InvokeArgs args) {
        return getAccountAlias(args, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(InvokeArgs args) {
        return getAccountAliasPlain(args, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetInstanceProfileResult> getInstanceProfile(GetInstanceProfileArgs args) {
        return getInstanceProfile(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetInstanceProfileResult> getInstanceProfilePlain(GetInstanceProfilePlainArgs args) {
        return getInstanceProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetInstanceProfileResult> getInstanceProfile(GetInstanceProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getInstanceProfile:getInstanceProfile", TypeShape.of(GetInstanceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetInstanceProfileResult> getInstanceProfilePlain(GetInstanceProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getInstanceProfile:getInstanceProfile", TypeShape.of(GetInstanceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetInstanceProfilesResult> getInstanceProfiles(GetInstanceProfilesArgs args) {
        return getInstanceProfiles(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetInstanceProfilesResult> getInstanceProfilesPlain(GetInstanceProfilesPlainArgs args) {
        return getInstanceProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetInstanceProfilesResult> getInstanceProfiles(GetInstanceProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getInstanceProfiles:getInstanceProfiles", TypeShape.of(GetInstanceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetInstanceProfilesResult> getInstanceProfilesPlain(GetInstanceProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getInstanceProfiles:getInstanceProfiles", TypeShape.of(GetInstanceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider() {
        return getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain() {
        return getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider(GetOpenIdConnectProviderArgs args) {
        return getOpenIdConnectProvider(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs args) {
        return getOpenIdConnectProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider(GetOpenIdConnectProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getOpenIdConnectProvider:getOpenIdConnectProvider", TypeShape.of(GetOpenIdConnectProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getOpenIdConnectProvider:getOpenIdConnectProvider", TypeShape.of(GetOpenIdConnectProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyResult> getPolicy() {
        return getPolicy(GetPolicyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain() {
        return getPolicyPlain(GetPolicyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyResult> getPolicy(GetPolicyArgs args) {
        return getPolicy(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain(GetPolicyPlainArgs args) {
        return getPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyResult> getPolicy(GetPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPolicy:getPolicy", TypeShape.of(GetPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain(GetPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPolicy:getPolicy", TypeShape.of(GetPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument() {
        return getPolicyDocument(GetPolicyDocumentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain() {
        return getPolicyDocumentPlain(GetPolicyDocumentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args) {
        return getPolicyDocument(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args) {
        return getPolicyDocumentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulation(GetPrincipalPolicySimulationArgs args) {
        return getPrincipalPolicySimulation(args, InvokeOptions.Empty);
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulationPlain(GetPrincipalPolicySimulationPlainArgs args) {
        return getPrincipalPolicySimulationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulation(GetPrincipalPolicySimulationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPrincipalPolicySimulation:getPrincipalPolicySimulation", TypeShape.of(GetPrincipalPolicySimulationInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulationPlain(GetPrincipalPolicySimulationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPrincipalPolicySimulation:getPrincipalPolicySimulation", TypeShape.of(GetPrincipalPolicySimulationInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args) {
        return getRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     */
    public static Output<GetSamlProviderResult> getSamlProvider(GetSamlProviderArgs args) {
        return getSamlProvider(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     */
    public static CompletableFuture<GetSamlProviderResult> getSamlProviderPlain(GetSamlProviderPlainArgs args) {
        return getSamlProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     */
    public static Output<GetSamlProviderResult> getSamlProvider(GetSamlProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getSamlProvider:getSamlProvider", TypeShape.of(GetSamlProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     */
    public static CompletableFuture<GetSamlProviderResult> getSamlProviderPlain(GetSamlProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getSamlProvider:getSamlProvider", TypeShape.of(GetSamlProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate() {
        return getServerCertificate(GetServerCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain() {
        return getServerCertificatePlain(GetServerCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate(GetServerCertificateArgs args) {
        return getServerCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain(GetServerCertificatePlainArgs args) {
        return getServerCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate(GetServerCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getServerCertificate:getServerCertificate", TypeShape.of(GetServerCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain(GetServerCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getServerCertificate:getServerCertificate", TypeShape.of(GetServerCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetSessionContextResult> getSessionContext(GetSessionContextArgs args) {
        return getSessionContext(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSessionContextResult> getSessionContextPlain(GetSessionContextPlainArgs args) {
        return getSessionContextPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetSessionContextResult> getSessionContext(GetSessionContextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getSessionContext:getSessionContext", TypeShape.of(GetSessionContextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSessionContextResult> getSessionContextPlain(GetSessionContextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getSessionContext:getSessionContext", TypeShape.of(GetSessionContextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     */
    public static Output<GetUserSshKeyResult> getUserSshKey(GetUserSshKeyArgs args) {
        return getUserSshKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     */
    public static CompletableFuture<GetUserSshKeyResult> getUserSshKeyPlain(GetUserSshKeyPlainArgs args) {
        return getUserSshKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     */
    public static Output<GetUserSshKeyResult> getUserSshKey(GetUserSshKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUserSshKey:getUserSshKey", TypeShape.of(GetUserSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     */
    public static CompletableFuture<GetUserSshKeyResult> getUserSshKeyPlain(GetUserSshKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUserSshKey:getUserSshKey", TypeShape.of(GetUserSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(GetUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(GetUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
}
