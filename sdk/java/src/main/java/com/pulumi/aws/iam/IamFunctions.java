// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
import com.pulumi.aws.iam.inputs.GetAccessKeysPlainArgs;
import com.pulumi.aws.iam.inputs.GetGroupArgs;
import com.pulumi.aws.iam.inputs.GetGroupPlainArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilePlainArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
import com.pulumi.aws.iam.inputs.GetInstanceProfilesPlainArgs;
import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderPlainArgs;
import com.pulumi.aws.iam.inputs.GetPolicyArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentPlainArgs;
import com.pulumi.aws.iam.inputs.GetPolicyPlainArgs;
import com.pulumi.aws.iam.inputs.GetPrincipalPolicySimulationArgs;
import com.pulumi.aws.iam.inputs.GetPrincipalPolicySimulationPlainArgs;
import com.pulumi.aws.iam.inputs.GetRoleArgs;
import com.pulumi.aws.iam.inputs.GetRolePlainArgs;
import com.pulumi.aws.iam.inputs.GetRolesArgs;
import com.pulumi.aws.iam.inputs.GetRolesPlainArgs;
import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
import com.pulumi.aws.iam.inputs.GetSamlProviderPlainArgs;
import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
import com.pulumi.aws.iam.inputs.GetServerCertificatePlainArgs;
import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
import com.pulumi.aws.iam.inputs.GetSessionContextPlainArgs;
import com.pulumi.aws.iam.inputs.GetUserArgs;
import com.pulumi.aws.iam.inputs.GetUserPlainArgs;
import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
import com.pulumi.aws.iam.inputs.GetUserSshKeyPlainArgs;
import com.pulumi.aws.iam.inputs.GetUsersArgs;
import com.pulumi.aws.iam.inputs.GetUsersPlainArgs;
import com.pulumi.aws.iam.outputs.GetAccessKeysResult;
import com.pulumi.aws.iam.outputs.GetAccountAliasResult;
import com.pulumi.aws.iam.outputs.GetGroupResult;
import com.pulumi.aws.iam.outputs.GetInstanceProfileResult;
import com.pulumi.aws.iam.outputs.GetInstanceProfilesResult;
import com.pulumi.aws.iam.outputs.GetOpenIdConnectProviderResult;
import com.pulumi.aws.iam.outputs.GetPolicyDocumentResult;
import com.pulumi.aws.iam.outputs.GetPolicyResult;
import com.pulumi.aws.iam.outputs.GetPrincipalPolicySimulationInvokeResult;
import com.pulumi.aws.iam.outputs.GetRoleResult;
import com.pulumi.aws.iam.outputs.GetRolesResult;
import com.pulumi.aws.iam.outputs.GetSamlProviderResult;
import com.pulumi.aws.iam.outputs.GetServerCertificateResult;
import com.pulumi.aws.iam.outputs.GetSessionContextResult;
import com.pulumi.aws.iam.outputs.GetUserResult;
import com.pulumi.aws.iam.outputs.GetUserSshKeyResult;
import com.pulumi.aws.iam.outputs.GetUsersResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class IamFunctions {
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getAccessKeys(GetAccessKeysArgs.builder()
     *             .user(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccessKeysResult> getAccessKeys(GetAccessKeysArgs args) {
        return getAccessKeys(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getAccessKeys(GetAccessKeysArgs.builder()
     *             .user(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccessKeysResult> getAccessKeysPlain(GetAccessKeysPlainArgs args) {
        return getAccessKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getAccessKeys(GetAccessKeysArgs.builder()
     *             .user(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccessKeysResult> getAccessKeys(GetAccessKeysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getAccessKeys:getAccessKeys", TypeShape.of(GetAccessKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about IAM access keys of a
     * specific IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetAccessKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getAccessKeys(GetAccessKeysArgs.builder()
     *             .user(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccessKeysResult> getAccessKeysPlain(GetAccessKeysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getAccessKeys:getAccessKeys", TypeShape.of(GetAccessKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias() {
        return getAccountAlias(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain() {
        return getAccountAliasPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias(InvokeArgs args) {
        return getAccountAlias(args, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(InvokeArgs args) {
        return getAccountAliasPlain(args, InvokeOptions.Empty);
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountAliasResult> getAccountAlias(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The IAM Account Alias data source allows access to the account alias
     * for the effective account in which this provider is working.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = IamFunctions.getAccountAlias();
     * 
     *         ctx.export(&#34;accountId&#34;, current.applyValue(getAccountAliasResult -&gt; getAccountAliasResult.accountAlias()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;an_example_group_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;an_example_group_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;an_example_group_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM group. By using this data source, you can reference IAM group
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;an_example_group_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfile(GetInstanceProfileArgs.builder()
     *             .name(&#34;an_example_instance_profile_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceProfileResult> getInstanceProfile(GetInstanceProfileArgs args) {
        return getInstanceProfile(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfile(GetInstanceProfileArgs.builder()
     *             .name(&#34;an_example_instance_profile_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceProfileResult> getInstanceProfilePlain(GetInstanceProfilePlainArgs args) {
        return getInstanceProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfile(GetInstanceProfileArgs.builder()
     *             .name(&#34;an_example_instance_profile_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceProfileResult> getInstanceProfile(GetInstanceProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getInstanceProfile:getInstanceProfile", TypeShape.of(GetInstanceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM instance profile. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfile(GetInstanceProfileArgs.builder()
     *             .name(&#34;an_example_instance_profile_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceProfileResult> getInstanceProfilePlain(GetInstanceProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getInstanceProfile:getInstanceProfile", TypeShape.of(GetInstanceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfiles(GetInstanceProfilesArgs.builder()
     *             .roleName(&#34;an_example_iam_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceProfilesResult> getInstanceProfiles(GetInstanceProfilesArgs args) {
        return getInstanceProfiles(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfiles(GetInstanceProfilesArgs.builder()
     *             .roleName(&#34;an_example_iam_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceProfilesResult> getInstanceProfilesPlain(GetInstanceProfilesPlainArgs args) {
        return getInstanceProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfiles(GetInstanceProfilesArgs.builder()
     *             .roleName(&#34;an_example_iam_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceProfilesResult> getInstanceProfiles(GetInstanceProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getInstanceProfiles:getInstanceProfiles", TypeShape.of(GetInstanceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about all
     * IAM instance profiles under a role. By using this data source, you can reference IAM
     * instance profile properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetInstanceProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getInstanceProfiles(GetInstanceProfilesArgs.builder()
     *             .roleName(&#34;an_example_iam_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceProfilesResult> getInstanceProfilesPlain(GetInstanceProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getInstanceProfiles:getInstanceProfiles", TypeShape.of(GetInstanceProfilesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider() {
        return getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain() {
        return getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider(GetOpenIdConnectProviderArgs args) {
        return getOpenIdConnectProvider(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs args) {
        return getOpenIdConnectProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenIdConnectProviderResult> getOpenIdConnectProvider(GetOpenIdConnectProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getOpenIdConnectProvider:getOpenIdConnectProvider", TypeShape.of(GetOpenIdConnectProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM OpenID Connect provider. By using this data source, you can retrieve the
     * the resource information by either its `arn` or `url`.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:oidc-provider/accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetOpenIdConnectProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getOpenIdConnectProvider(GetOpenIdConnectProviderArgs.builder()
     *             .url(&#34;https://accounts.google.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenIdConnectProviderResult> getOpenIdConnectProviderPlain(GetOpenIdConnectProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getOpenIdConnectProvider:getOpenIdConnectProvider", TypeShape.of(GetOpenIdConnectProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyResult> getPolicy() {
        return getPolicy(GetPolicyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain() {
        return getPolicyPlain(GetPolicyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyResult> getPolicy(GetPolicyArgs args) {
        return getPolicy(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain(GetPolicyPlainArgs args) {
        return getPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyResult> getPolicy(GetPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPolicy:getPolicy", TypeShape.of(GetPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM policy.
     * 
     * ## Example Usage
     * ### By ARN
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789012:policy/UsersManageOwnCredentials&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### By Name
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getPolicy(GetPolicyArgs.builder()
     *             .name(&#34;test_policy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyResult> getPolicyPlain(GetPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPolicy:getPolicy", TypeShape.of(GetPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument() {
        return getPolicyDocument(GetPolicyDocumentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain() {
        return getPolicyDocumentPlain(GetPolicyDocumentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args) {
        return getPolicyDocument(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args) {
        return getPolicyDocumentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `aws.iam.Policy`.
     * 
     * Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.aws.iam.Policy;
     * import com.pulumi.aws.iam.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(String.format(&#34;arn:aws:s3:::%s&#34;, var_.s3_bucket_name()))
     *                     .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;,
     *                             &#34;home/&amp;{aws:username}/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}&#34;, var_.s3_bucket_name()),
     *                         String.format(&#34;arn:aws:s3:::%s/home/&amp;{{aws:username}}/*&#34;, var_.s3_bucket_name()))
     *                     .build())
     *             .build());
     * 
     *         var examplePolicy = new Policy(&#34;examplePolicy&#34;, PolicyArgs.builder()        
     *             .path(&#34;/&#34;)
     *             .policy(examplePolicyDocument.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * 
     * You can specify a [condition with multiple keys and values](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html) by supplying multiple `condition` blocks with the same `test` value, but differing `variable` and `values` values.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMultipleConditionKeysAndValues = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(                
     *                     &#34;kms:Decrypt&#34;,
     *                     &#34;kms:GenerateDataKey&#34;)
     *                 .conditions(                
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;pi&#34;)
     *                         .variable(&#34;kms:EncryptionContext:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(&#34;rds&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:pi:service&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;ForAnyValue:StringEquals&#34;)
     *                         .values(                        
     *                             &#34;db-AAAAABBBBBCCCCCDDDDDEEEEE&#34;,
     *                             &#34;db-EEEEEDDDDDCCCCCBBBBBAAAAA&#34;)
     *                         .variable(&#34;kms:EncryptionContext:aws:rds:db-id&#34;)
     *                         .build())
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.example_multiple_condition_keys_and_values.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Multiple Principals
     * 
     * You can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eventStreamBucketRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(                
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Service&#34;)
     *                         .identifiers(&#34;firehose.amazonaws.com&#34;)
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;AWS&#34;)
     *                         .identifiers(var_.trusted_role_arn())
     *                         .build(),
     *                     GetPolicyDocumentStatementPrincipalArgs.builder()
     *                         .type(&#34;Federated&#34;)
     *                         .identifiers(                        
     *                             String.format(&#34;arn:aws:iam::%s:saml-provider/%s&#34;, var_.account_id(),var_.provider_name()),
     *                             &#34;cognito-identity.amazonaws.com&#34;)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Example Using A Source Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(                
     *                     &#34;arn:aws:s3:::somebucket&#34;,
     *                     &#34;arn:aws:s3:::somebucket/*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.source_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Using An Override Document
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;SidToOverride&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var overridePolicyDocumentExample = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;SidToOverride&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::somebucket&#34;,
     *                         &#34;arn:aws:s3:::somebucket/*&#34;)
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.override_policy_document_example.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example with Both Source and Override Documents
     * 
     * You can also combine `source_policy_documents` and `override_policy_documents` in the same document.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var source = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;ec2:DescribeAccountAttributes&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var override = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceholder&#34;)
     *                 .actions(&#34;s3:GetObject&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var politik = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(source.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .overridePolicyDocuments(override.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.politik.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Source Documents
     * 
     * Multiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sourceOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidOne&#34;)
     *                     .actions(&#34;s3:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var sourceTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;UniqueSidTwo&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;lambda:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .sourcePolicyDocuments(            
     *                 sourceOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 sourceTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example of Merging Override Documents
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policyOne = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;s3:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var policyTwo = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;ec2:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;iam:*&#34;)
     *                     .resources(&#34;*&#34;)
     *                     .build())
     *             .build());
     * 
     *         final var policyThree = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderOne&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;logs:*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var combined = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .overridePolicyDocuments(            
     *                 policyOne.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyTwo.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()),
     *                 policyThree.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json()))
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid(&#34;OverridePlaceHolderTwo&#34;)
     *                 .effect(&#34;Deny&#34;)
     *                 .actions(&#34;*&#34;)
     *                 .resources(&#34;*&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.aws_iam_policy_document.combined.json` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulation(GetPrincipalPolicySimulationArgs args) {
        return getPrincipalPolicySimulation(args, InvokeOptions.Empty);
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulationPlain(GetPrincipalPolicySimulationPlainArgs args) {
        return getPrincipalPolicySimulationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulation(GetPrincipalPolicySimulationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getPrincipalPolicySimulation:getPrincipalPolicySimulation", TypeShape.of(GetPrincipalPolicySimulationInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Runs a simulation of the IAM policies of a particular principal against a given hypothetical request.
     * 
     * You can use this data source in conjunction with
     * Preconditions and Postconditions so that your configuration can test either whether it should have sufficient access to do its own work, or whether policies your configuration declares itself are sufficient for their intended use elsewhere.
     * 
     * &gt; **Note:** Correctly using this data source requires familiarity with various details of AWS Identity and Access Management, and how various AWS services integrate with it. For general information on the AWS IAM policy simulator, see [Testing IAM policies with the IAM policy simulator](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html). This data source wraps the `iam:SimulatePrincipalPolicy` API action described on that page.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetPrincipalPolicySimulationInvokeResult> getPrincipalPolicySimulationPlain(GetPrincipalPolicySimulationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getPrincipalPolicySimulation:getPrincipalPolicySimulation", TypeShape.of(GetPrincipalPolicySimulationInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;an_example_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;an_example_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args) {
        return getRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;an_example_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM role. By using this data source, you can reference IAM role
     * properties without having to hard code ARNs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;an_example_role_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Roles.
     * 
     * ## Example Usage
     * ### All roles in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles();
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by name regex
     * 
     * Roles whose role-name contains `project`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*project.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Roles provisioned by AWS SSO
     * 
     * Roles in the account filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * Specific role in the account filtered by name regex and path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var roles = IamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;AWSReservedSSO_permission_set_name_.*&#34;)
     *             .pathPrefix(&#34;/aws-reserved/sso.amazonaws.com/&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSamlProvider(GetSamlProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789:saml-provider/myprovider&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSamlProviderResult> getSamlProvider(GetSamlProviderArgs args) {
        return getSamlProvider(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSamlProvider(GetSamlProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789:saml-provider/myprovider&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSamlProviderResult> getSamlProviderPlain(GetSamlProviderPlainArgs args) {
        return getSamlProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSamlProvider(GetSamlProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789:saml-provider/myprovider&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSamlProviderResult> getSamlProvider(GetSamlProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getSamlProvider:getSamlProvider", TypeShape.of(GetSamlProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM SAML provider. This will allow you to easily retrieve the metadata
     * document of an existing SAML provider.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSamlProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSamlProvider(GetSamlProviderArgs.builder()
     *             .arn(&#34;arn:aws:iam::123456789:saml-provider/myprovider&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSamlProviderResult> getSamlProviderPlain(GetSamlProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getSamlProvider:getSamlProvider", TypeShape.of(GetSamlProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate() {
        return getServerCertificate(GetServerCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain() {
        return getServerCertificatePlain(GetServerCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate(GetServerCertificateArgs args) {
        return getServerCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain(GetServerCertificatePlainArgs args) {
        return getServerCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServerCertificateResult> getServerCertificate(GetServerCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getServerCertificate:getServerCertificate", TypeShape.of(GetServerCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to lookup information about IAM Server Certificates.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetServerCertificateArgs;
     * import com.pulumi.aws.elb.LoadBalancer;
     * import com.pulumi.aws.elb.LoadBalancerArgs;
     * import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-domain = IamFunctions.getServerCertificate(GetServerCertificateArgs.builder()
     *             .namePrefix(&#34;my-domain.org&#34;)
     *             .latest(true)
     *             .build());
     * 
     *         var elb = new LoadBalancer(&#34;elb&#34;, LoadBalancerArgs.builder()        
     *             .listeners(LoadBalancerListenerArgs.builder()
     *                 .instancePort(8000)
     *                 .instanceProtocol(&#34;https&#34;)
     *                 .lbPort(443)
     *                 .lbProtocol(&#34;https&#34;)
     *                 .sslCertificateId(my_domain.arn())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServerCertificateResult> getServerCertificatePlain(GetServerCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getServerCertificate:getServerCertificate", TypeShape.of(GetServerCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(&#34;arn:aws:sts::123456789012:assumed-role/Audien-Heaven/MatyNoyes&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Find the Runner&#39;s Source Role
     * 
     * Combined with `aws.getCallerIdentity`, you can get the current user&#39;s source IAM role ARN (`issuer_arn`) if you&#39;re using an assumed role. If you&#39;re not using an assumed role, the caller&#39;s (e.g., an IAM user&#39;s) ARN will simply be passed through. In environments where both IAM users and individuals using assumed roles need to apply the same configurations, this data source enables seamless use.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.AwsFunctions;
     * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = AwsFunctions.getCallerIdentity();
     * 
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.arn()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSessionContextResult> getSessionContext(GetSessionContextArgs args) {
        return getSessionContext(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(&#34;arn:aws:sts::123456789012:assumed-role/Audien-Heaven/MatyNoyes&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Find the Runner&#39;s Source Role
     * 
     * Combined with `aws.getCallerIdentity`, you can get the current user&#39;s source IAM role ARN (`issuer_arn`) if you&#39;re using an assumed role. If you&#39;re not using an assumed role, the caller&#39;s (e.g., an IAM user&#39;s) ARN will simply be passed through. In environments where both IAM users and individuals using assumed roles need to apply the same configurations, this data source enables seamless use.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.AwsFunctions;
     * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = AwsFunctions.getCallerIdentity();
     * 
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.arn()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSessionContextResult> getSessionContextPlain(GetSessionContextPlainArgs args) {
        return getSessionContextPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(&#34;arn:aws:sts::123456789012:assumed-role/Audien-Heaven/MatyNoyes&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Find the Runner&#39;s Source Role
     * 
     * Combined with `aws.getCallerIdentity`, you can get the current user&#39;s source IAM role ARN (`issuer_arn`) if you&#39;re using an assumed role. If you&#39;re not using an assumed role, the caller&#39;s (e.g., an IAM user&#39;s) ARN will simply be passed through. In environments where both IAM users and individuals using assumed roles need to apply the same configurations, this data source enables seamless use.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.AwsFunctions;
     * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = AwsFunctions.getCallerIdentity();
     * 
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.arn()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSessionContextResult> getSessionContext(GetSessionContextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getSessionContext:getSessionContext", TypeShape.of(GetSessionContextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.
     * 
     * For some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(&#34;arn:aws:sts::123456789012:assumed-role/Audien-Heaven/MatyNoyes&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Find the Runner&#39;s Source Role
     * 
     * Combined with `aws.getCallerIdentity`, you can get the current user&#39;s source IAM role ARN (`issuer_arn`) if you&#39;re using an assumed role. If you&#39;re not using an assumed role, the caller&#39;s (e.g., an IAM user&#39;s) ARN will simply be passed through. In environments where both IAM users and individuals using assumed roles need to apply the same configurations, this data source enables seamless use.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.AwsFunctions;
     * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetSessionContextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = AwsFunctions.getCallerIdentity();
     * 
     *         final var example = IamFunctions.getSessionContext(GetSessionContextArgs.builder()
     *             .arn(current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.arn()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSessionContextResult> getSessionContextPlain(GetSessionContextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getSessionContext:getSessionContext", TypeShape.of(GetSessionContextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUser(GetUserArgs.builder()
     *             .userName(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUser(GetUserArgs.builder()
     *             .userName(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUser(GetUserArgs.builder()
     *             .userName(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source can be used to fetch information about a specific
     * IAM user. By using this data source, you can reference IAM user
     * properties without having to hard code ARNs or unique IDs as input.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUser(GetUserArgs.builder()
     *             .userName(&#34;an_example_user_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUserSshKey(GetUserSshKeyArgs.builder()
     *             .encoding(&#34;SSH&#34;)
     *             .sshPublicKeyId(&#34;APKARUZ32GUTKIGARLXE&#34;)
     *             .username(&#34;test-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserSshKeyResult> getUserSshKey(GetUserSshKeyArgs args) {
        return getUserSshKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUserSshKey(GetUserSshKeyArgs.builder()
     *             .encoding(&#34;SSH&#34;)
     *             .sshPublicKeyId(&#34;APKARUZ32GUTKIGARLXE&#34;)
     *             .username(&#34;test-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserSshKeyResult> getUserSshKeyPlain(GetUserSshKeyPlainArgs args) {
        return getUserSshKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUserSshKey(GetUserSshKeyArgs.builder()
     *             .encoding(&#34;SSH&#34;)
     *             .sshPublicKeyId(&#34;APKARUZ32GUTKIGARLXE&#34;)
     *             .username(&#34;test-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserSshKeyResult> getUserSshKey(GetUserSshKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUserSshKey:getUserSshKey", TypeShape.of(GetUserSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a SSH public key associated with the specified IAM user.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUserSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IamFunctions.getUserSshKey(GetUserSshKeyArgs.builder()
     *             .encoding(&#34;SSH&#34;)
     *             .sshPublicKeyId(&#34;APKARUZ32GUTKIGARLXE&#34;)
     *             .username(&#34;test-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserSshKeyResult> getUserSshKeyPlain(GetUserSshKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUserSshKey:getUserSshKey", TypeShape.of(GetUserSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(GetUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(GetUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:iam/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the ARNs and Names of IAM Users.
     * 
     * ## Example Usage
     * ### All users in an account
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers();
     * 
     *     }
     * }
     * ```
     * ### Users filtered by name regex
     * 
     * Users whose username contains `abc`
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .nameRegex(&#34;.*abc.*&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Users filtered by path prefix
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var users = IamFunctions.getUsers(GetUsersArgs.builder()
     *             .pathPrefix(&#34;/custom-path&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:iam/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
}
