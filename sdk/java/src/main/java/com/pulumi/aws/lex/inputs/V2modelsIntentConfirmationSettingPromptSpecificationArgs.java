// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentConfirmationSettingPromptSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentConfirmationSettingPromptSpecificationArgs Empty = new V2modelsIntentConfirmationSettingPromptSpecificationArgs();

    /**
     * Whether the user can interrupt a speech prompt from the bot.
     * 
     */
    @Import(name="allowInterrupt")
    private @Nullable Output<Boolean> allowInterrupt;

    /**
     * @return Whether the user can interrupt a speech prompt from the bot.
     * 
     */
    public Optional<Output<Boolean>> allowInterrupt() {
        return Optional.ofNullable(this.allowInterrupt);
    }

    /**
     * Maximum number of times the bot tries to elicit a response from the user using this prompt.
     * 
     */
    @Import(name="maxRetries", required=true)
    private Output<Integer> maxRetries;

    /**
     * @return Maximum number of times the bot tries to elicit a response from the user using this prompt.
     * 
     */
    public Output<Integer> maxRetries() {
        return this.maxRetries;
    }

    /**
     * Configuration block for messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime. See `message_group`.
     * 
     */
    @Import(name="messageGroups")
    private @Nullable Output<List<V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs>> messageGroups;

    /**
     * @return Configuration block for messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime. See `message_group`.
     * 
     */
    public Optional<Output<List<V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs>>> messageGroups() {
        return Optional.ofNullable(this.messageGroups);
    }

    /**
     * How a message is selected from a message group among retries. Valid values are `Random` and `Ordered`.
     * 
     */
    @Import(name="messageSelectionStrategy")
    private @Nullable Output<String> messageSelectionStrategy;

    /**
     * @return How a message is selected from a message group among retries. Valid values are `Random` and `Ordered`.
     * 
     */
    public Optional<Output<String>> messageSelectionStrategy() {
        return Optional.ofNullable(this.messageSelectionStrategy);
    }

    /**
     * Configuration block for advanced settings on each attempt of the prompt. See `prompt_attempts_specification`.
     * 
     */
    @Import(name="promptAttemptsSpecifications")
    private @Nullable Output<List<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs>> promptAttemptsSpecifications;

    /**
     * @return Configuration block for advanced settings on each attempt of the prompt. See `prompt_attempts_specification`.
     * 
     */
    public Optional<Output<List<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs>>> promptAttemptsSpecifications() {
        return Optional.ofNullable(this.promptAttemptsSpecifications);
    }

    private V2modelsIntentConfirmationSettingPromptSpecificationArgs() {}

    private V2modelsIntentConfirmationSettingPromptSpecificationArgs(V2modelsIntentConfirmationSettingPromptSpecificationArgs $) {
        this.allowInterrupt = $.allowInterrupt;
        this.maxRetries = $.maxRetries;
        this.messageGroups = $.messageGroups;
        this.messageSelectionStrategy = $.messageSelectionStrategy;
        this.promptAttemptsSpecifications = $.promptAttemptsSpecifications;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentConfirmationSettingPromptSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentConfirmationSettingPromptSpecificationArgs $;

        public Builder() {
            $ = new V2modelsIntentConfirmationSettingPromptSpecificationArgs();
        }

        public Builder(V2modelsIntentConfirmationSettingPromptSpecificationArgs defaults) {
            $ = new V2modelsIntentConfirmationSettingPromptSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowInterrupt Whether the user can interrupt a speech prompt from the bot.
         * 
         * @return builder
         * 
         */
        public Builder allowInterrupt(@Nullable Output<Boolean> allowInterrupt) {
            $.allowInterrupt = allowInterrupt;
            return this;
        }

        /**
         * @param allowInterrupt Whether the user can interrupt a speech prompt from the bot.
         * 
         * @return builder
         * 
         */
        public Builder allowInterrupt(Boolean allowInterrupt) {
            return allowInterrupt(Output.of(allowInterrupt));
        }

        /**
         * @param maxRetries Maximum number of times the bot tries to elicit a response from the user using this prompt.
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(Output<Integer> maxRetries) {
            $.maxRetries = maxRetries;
            return this;
        }

        /**
         * @param maxRetries Maximum number of times the bot tries to elicit a response from the user using this prompt.
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(Integer maxRetries) {
            return maxRetries(Output.of(maxRetries));
        }

        /**
         * @param messageGroups Configuration block for messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime. See `message_group`.
         * 
         * @return builder
         * 
         */
        public Builder messageGroups(@Nullable Output<List<V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs>> messageGroups) {
            $.messageGroups = messageGroups;
            return this;
        }

        /**
         * @param messageGroups Configuration block for messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime. See `message_group`.
         * 
         * @return builder
         * 
         */
        public Builder messageGroups(List<V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs> messageGroups) {
            return messageGroups(Output.of(messageGroups));
        }

        /**
         * @param messageGroups Configuration block for messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime. See `message_group`.
         * 
         * @return builder
         * 
         */
        public Builder messageGroups(V2modelsIntentConfirmationSettingPromptSpecificationMessageGroupArgs... messageGroups) {
            return messageGroups(List.of(messageGroups));
        }

        /**
         * @param messageSelectionStrategy How a message is selected from a message group among retries. Valid values are `Random` and `Ordered`.
         * 
         * @return builder
         * 
         */
        public Builder messageSelectionStrategy(@Nullable Output<String> messageSelectionStrategy) {
            $.messageSelectionStrategy = messageSelectionStrategy;
            return this;
        }

        /**
         * @param messageSelectionStrategy How a message is selected from a message group among retries. Valid values are `Random` and `Ordered`.
         * 
         * @return builder
         * 
         */
        public Builder messageSelectionStrategy(String messageSelectionStrategy) {
            return messageSelectionStrategy(Output.of(messageSelectionStrategy));
        }

        /**
         * @param promptAttemptsSpecifications Configuration block for advanced settings on each attempt of the prompt. See `prompt_attempts_specification`.
         * 
         * @return builder
         * 
         */
        public Builder promptAttemptsSpecifications(@Nullable Output<List<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs>> promptAttemptsSpecifications) {
            $.promptAttemptsSpecifications = promptAttemptsSpecifications;
            return this;
        }

        /**
         * @param promptAttemptsSpecifications Configuration block for advanced settings on each attempt of the prompt. See `prompt_attempts_specification`.
         * 
         * @return builder
         * 
         */
        public Builder promptAttemptsSpecifications(List<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs> promptAttemptsSpecifications) {
            return promptAttemptsSpecifications(Output.of(promptAttemptsSpecifications));
        }

        /**
         * @param promptAttemptsSpecifications Configuration block for advanced settings on each attempt of the prompt. See `prompt_attempts_specification`.
         * 
         * @return builder
         * 
         */
        public Builder promptAttemptsSpecifications(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs... promptAttemptsSpecifications) {
            return promptAttemptsSpecifications(List.of(promptAttemptsSpecifications));
        }

        public V2modelsIntentConfirmationSettingPromptSpecificationArgs build() {
            if ($.maxRetries == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingPromptSpecificationArgs", "maxRetries");
            }
            return $;
        }
    }

}
