// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.MeasureFieldSchema2Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs Empty = new VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs();

    @Import(name="computationId", required=true)
    private Output<String> computationId;

    public Output<String> computationId() {
        return this.computationId;
    }

    /**
     * Display name for the dashboard.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Display name for the dashboard.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="value")
    private @Nullable Output<MeasureFieldSchema2Args> value;

    public Optional<Output<MeasureFieldSchema2Args>> value() {
        return Optional.ofNullable(this.value);
    }

    private VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs() {}

    private VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs(VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs $) {
        this.computationId = $.computationId;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs $;

        public Builder() {
            $ = new VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs();
        }

        public Builder(VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs defaults) {
            $ = new VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs(Objects.requireNonNull(defaults));
        }

        public Builder computationId(Output<String> computationId) {
            $.computationId = computationId;
            return this;
        }

        public Builder computationId(String computationId) {
            return computationId(Output.of(computationId));
        }

        /**
         * @param name Display name for the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Display name for the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder value(@Nullable Output<MeasureFieldSchema2Args> value) {
            $.value = value;
            return this;
        }

        public Builder value(MeasureFieldSchema2Args value) {
            return value(Output.of(value));
        }

        public VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs build() {
            if ($.computationId == null) {
                throw new MissingRequiredPropertyException("VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs", "computationId");
            }
            return $;
        }
    }

}
