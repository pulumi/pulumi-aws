// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codeartifact.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RepositoryUpstreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryUpstreamArgs Empty = new RepositoryUpstreamArgs();

    /**
     * The name of an upstream repository.
     * 
     */
    @Import(name="repositoryName", required=true)
    private Output<String> repositoryName;

    /**
     * @return The name of an upstream repository.
     * 
     */
    public Output<String> repositoryName() {
        return this.repositoryName;
    }

    private RepositoryUpstreamArgs() {}

    private RepositoryUpstreamArgs(RepositoryUpstreamArgs $) {
        this.repositoryName = $.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryUpstreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryUpstreamArgs $;

        public Builder() {
            $ = new RepositoryUpstreamArgs();
        }

        public Builder(RepositoryUpstreamArgs defaults) {
            $ = new RepositoryUpstreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryName The name of an upstream repository.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(Output<String> repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        /**
         * @param repositoryName The name of an upstream repository.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(String repositoryName) {
            return repositoryName(Output.of(repositoryName));
        }

        public RepositoryUpstreamArgs build() {
            $.repositoryName = Objects.requireNonNull($.repositoryName, "expected parameter 'repositoryName' to be non-null");
            return $;
        }
    }

}
