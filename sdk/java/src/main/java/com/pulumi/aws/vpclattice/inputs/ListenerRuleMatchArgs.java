// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.inputs;

import com.pulumi.aws.vpclattice.inputs.ListenerRuleMatchHttpMatchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class ListenerRuleMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerRuleMatchArgs Empty = new ListenerRuleMatchArgs();

    /**
     * The HTTP criteria that a rule must match.
     * See `http_match` Block for details.
     * 
     */
    @Import(name="httpMatch", required=true)
    private Output<ListenerRuleMatchHttpMatchArgs> httpMatch;

    /**
     * @return The HTTP criteria that a rule must match.
     * See `http_match` Block for details.
     * 
     */
    public Output<ListenerRuleMatchHttpMatchArgs> httpMatch() {
        return this.httpMatch;
    }

    private ListenerRuleMatchArgs() {}

    private ListenerRuleMatchArgs(ListenerRuleMatchArgs $) {
        this.httpMatch = $.httpMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleMatchArgs $;

        public Builder() {
            $ = new ListenerRuleMatchArgs();
        }

        public Builder(ListenerRuleMatchArgs defaults) {
            $ = new ListenerRuleMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpMatch The HTTP criteria that a rule must match.
         * See `http_match` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder httpMatch(Output<ListenerRuleMatchHttpMatchArgs> httpMatch) {
            $.httpMatch = httpMatch;
            return this;
        }

        /**
         * @param httpMatch The HTTP criteria that a rule must match.
         * See `http_match` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder httpMatch(ListenerRuleMatchHttpMatchArgs httpMatch) {
            return httpMatch(Output.of(httpMatch));
        }

        public ListenerRuleMatchArgs build() {
            if ($.httpMatch == null) {
                throw new MissingRequiredPropertyException("ListenerRuleMatchArgs", "httpMatch");
            }
            return $;
        }
    }

}
