// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketNotificationTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketNotificationTopicArgs Empty = new BucketNotificationTopicArgs();

    @Import(name="events", required=true)
    private Output<List<String>> events;

    public Output<List<String>> events() {
        return this.events;
    }

    @Import(name="filterPrefix")
    private @Nullable Output<String> filterPrefix;

    public Optional<Output<String>> filterPrefix() {
        return Optional.ofNullable(this.filterPrefix);
    }

    @Import(name="filterSuffix")
    private @Nullable Output<String> filterSuffix;

    public Optional<Output<String>> filterSuffix() {
        return Optional.ofNullable(this.filterSuffix);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="topicArn", required=true)
    private Output<String> topicArn;

    public Output<String> topicArn() {
        return this.topicArn;
    }

    private BucketNotificationTopicArgs() {}

    private BucketNotificationTopicArgs(BucketNotificationTopicArgs $) {
        this.events = $.events;
        this.filterPrefix = $.filterPrefix;
        this.filterSuffix = $.filterSuffix;
        this.id = $.id;
        this.topicArn = $.topicArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketNotificationTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketNotificationTopicArgs $;

        public Builder() {
            $ = new BucketNotificationTopicArgs();
        }

        public Builder(BucketNotificationTopicArgs defaults) {
            $ = new BucketNotificationTopicArgs(Objects.requireNonNull(defaults));
        }

        public Builder events(Output<List<String>> events) {
            $.events = events;
            return this;
        }

        public Builder events(List<String> events) {
            return events(Output.of(events));
        }

        public Builder events(String... events) {
            return events(List.of(events));
        }

        public Builder filterPrefix(@Nullable Output<String> filterPrefix) {
            $.filterPrefix = filterPrefix;
            return this;
        }

        public Builder filterPrefix(String filterPrefix) {
            return filterPrefix(Output.of(filterPrefix));
        }

        public Builder filterSuffix(@Nullable Output<String> filterSuffix) {
            $.filterSuffix = filterSuffix;
            return this;
        }

        public Builder filterSuffix(String filterSuffix) {
            return filterSuffix(Output.of(filterSuffix));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder topicArn(Output<String> topicArn) {
            $.topicArn = topicArn;
            return this;
        }

        public Builder topicArn(String topicArn) {
            return topicArn(Output.of(topicArn));
        }

        public BucketNotificationTopicArgs build() {
            $.events = Objects.requireNonNull($.events, "expected parameter 'events' to be non-null");
            $.topicArn = Objects.requireNonNull($.topicArn, "expected parameter 'topicArn' to be non-null");
            return $;
        }
    }

}
