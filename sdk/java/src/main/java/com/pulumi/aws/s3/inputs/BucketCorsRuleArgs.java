// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketCorsRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketCorsRuleArgs Empty = new BucketCorsRuleArgs();

    @Import(name="allowedHeaders")
    private @Nullable Output<List<String>> allowedHeaders;

    public Optional<Output<List<String>>> allowedHeaders() {
        return Optional.ofNullable(this.allowedHeaders);
    }

    @Import(name="allowedMethods", required=true)
    private Output<List<String>> allowedMethods;

    public Output<List<String>> allowedMethods() {
        return this.allowedMethods;
    }

    @Import(name="allowedOrigins", required=true)
    private Output<List<String>> allowedOrigins;

    public Output<List<String>> allowedOrigins() {
        return this.allowedOrigins;
    }

    @Import(name="exposeHeaders")
    private @Nullable Output<List<String>> exposeHeaders;

    public Optional<Output<List<String>>> exposeHeaders() {
        return Optional.ofNullable(this.exposeHeaders);
    }

    @Import(name="maxAgeSeconds")
    private @Nullable Output<Integer> maxAgeSeconds;

    public Optional<Output<Integer>> maxAgeSeconds() {
        return Optional.ofNullable(this.maxAgeSeconds);
    }

    private BucketCorsRuleArgs() {}

    private BucketCorsRuleArgs(BucketCorsRuleArgs $) {
        this.allowedHeaders = $.allowedHeaders;
        this.allowedMethods = $.allowedMethods;
        this.allowedOrigins = $.allowedOrigins;
        this.exposeHeaders = $.exposeHeaders;
        this.maxAgeSeconds = $.maxAgeSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketCorsRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketCorsRuleArgs $;

        public Builder() {
            $ = new BucketCorsRuleArgs();
        }

        public Builder(BucketCorsRuleArgs defaults) {
            $ = new BucketCorsRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedHeaders(@Nullable Output<List<String>> allowedHeaders) {
            $.allowedHeaders = allowedHeaders;
            return this;
        }

        public Builder allowedHeaders(List<String> allowedHeaders) {
            return allowedHeaders(Output.of(allowedHeaders));
        }

        public Builder allowedHeaders(String... allowedHeaders) {
            return allowedHeaders(List.of(allowedHeaders));
        }

        public Builder allowedMethods(Output<List<String>> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        public Builder allowedMethods(List<String> allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        public Builder allowedOrigins(Output<List<String>> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        public Builder allowedOrigins(List<String> allowedOrigins) {
            return allowedOrigins(Output.of(allowedOrigins));
        }

        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        public Builder exposeHeaders(@Nullable Output<List<String>> exposeHeaders) {
            $.exposeHeaders = exposeHeaders;
            return this;
        }

        public Builder exposeHeaders(List<String> exposeHeaders) {
            return exposeHeaders(Output.of(exposeHeaders));
        }

        public Builder exposeHeaders(String... exposeHeaders) {
            return exposeHeaders(List.of(exposeHeaders));
        }

        public Builder maxAgeSeconds(@Nullable Output<Integer> maxAgeSeconds) {
            $.maxAgeSeconds = maxAgeSeconds;
            return this;
        }

        public Builder maxAgeSeconds(Integer maxAgeSeconds) {
            return maxAgeSeconds(Output.of(maxAgeSeconds));
        }

        public BucketCorsRuleArgs build() {
            if ($.allowedMethods == null) {
                throw new MissingRequiredPropertyException("BucketCorsRuleArgs", "allowedMethods");
            }
            if ($.allowedOrigins == null) {
                throw new MissingRequiredPropertyException("BucketCorsRuleArgs", "allowedOrigins");
            }
            return $;
        }
    }

}
