// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.outputs;

import com.pulumi.aws.lex.outputs.IntentFulfillmentActivityCodeHook;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntentFulfillmentActivity {
    /**
     * @return A description of the Lambda function that is run to fulfill the intent.
     * Required if type is CodeHook. Attributes are documented under code_hook.
     * 
     */
    private @Nullable IntentFulfillmentActivityCodeHook codeHook;
    /**
     * @return How the intent should be fulfilled, either by running a Lambda function or by
     * returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
     * 
     */
    private String type;

    private IntentFulfillmentActivity() {}
    /**
     * @return A description of the Lambda function that is run to fulfill the intent.
     * Required if type is CodeHook. Attributes are documented under code_hook.
     * 
     */
    public Optional<IntentFulfillmentActivityCodeHook> codeHook() {
        return Optional.ofNullable(this.codeHook);
    }
    /**
     * @return How the intent should be fulfilled, either by running a Lambda function or by
     * returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntentFulfillmentActivity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable IntentFulfillmentActivityCodeHook codeHook;
        private String type;
        public Builder() {}
        public Builder(IntentFulfillmentActivity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeHook = defaults.codeHook;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder codeHook(@Nullable IntentFulfillmentActivityCodeHook codeHook) {

            this.codeHook = codeHook;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("IntentFulfillmentActivity", "type");
            }
            this.type = type;
            return this;
        }
        public IntentFulfillmentActivity build() {
            final var _resultValue = new IntentFulfillmentActivity();
            _resultValue.codeHook = codeHook;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
