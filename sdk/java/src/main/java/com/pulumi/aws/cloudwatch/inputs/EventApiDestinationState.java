// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventApiDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final EventApiDestinationState Empty = new EventApiDestinationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="connectionArn")
    private @Nullable Output<String> connectionArn;

    public Optional<Output<String>> connectionArn() {
        return Optional.ofNullable(this.connectionArn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="httpMethod")
    private @Nullable Output<String> httpMethod;

    public Optional<Output<String>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    @Import(name="invocationEndpoint")
    private @Nullable Output<String> invocationEndpoint;

    public Optional<Output<String>> invocationEndpoint() {
        return Optional.ofNullable(this.invocationEndpoint);
    }

    @Import(name="invocationRateLimitPerSecond")
    private @Nullable Output<Integer> invocationRateLimitPerSecond;

    public Optional<Output<Integer>> invocationRateLimitPerSecond() {
        return Optional.ofNullable(this.invocationRateLimitPerSecond);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private EventApiDestinationState() {}

    private EventApiDestinationState(EventApiDestinationState $) {
        this.arn = $.arn;
        this.connectionArn = $.connectionArn;
        this.description = $.description;
        this.httpMethod = $.httpMethod;
        this.invocationEndpoint = $.invocationEndpoint;
        this.invocationRateLimitPerSecond = $.invocationRateLimitPerSecond;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventApiDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventApiDestinationState $;

        public Builder() {
            $ = new EventApiDestinationState();
        }

        public Builder(EventApiDestinationState defaults) {
            $ = new EventApiDestinationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder connectionArn(@Nullable Output<String> connectionArn) {
            $.connectionArn = connectionArn;
            return this;
        }

        public Builder connectionArn(String connectionArn) {
            return connectionArn(Output.of(connectionArn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        public Builder invocationEndpoint(@Nullable Output<String> invocationEndpoint) {
            $.invocationEndpoint = invocationEndpoint;
            return this;
        }

        public Builder invocationEndpoint(String invocationEndpoint) {
            return invocationEndpoint(Output.of(invocationEndpoint));
        }

        public Builder invocationRateLimitPerSecond(@Nullable Output<Integer> invocationRateLimitPerSecond) {
            $.invocationRateLimitPerSecond = invocationRateLimitPerSecond;
            return this;
        }

        public Builder invocationRateLimitPerSecond(Integer invocationRateLimitPerSecond) {
            return invocationRateLimitPerSecond(Output.of(invocationRateLimitPerSecond));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public EventApiDestinationState build() {
            return $;
        }
    }

}
