// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KxEnvironmentCustomDnsConfiguration {
    /**
     * @return IP address of the DNS server.
     * 
     */
    private String customDnsServerIp;
    /**
     * @return Name of the DNS server.
     * 
     */
    private String customDnsServerName;

    private KxEnvironmentCustomDnsConfiguration() {}
    /**
     * @return IP address of the DNS server.
     * 
     */
    public String customDnsServerIp() {
        return this.customDnsServerIp;
    }
    /**
     * @return Name of the DNS server.
     * 
     */
    public String customDnsServerName() {
        return this.customDnsServerName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KxEnvironmentCustomDnsConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customDnsServerIp;
        private String customDnsServerName;
        public Builder() {}
        public Builder(KxEnvironmentCustomDnsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customDnsServerIp = defaults.customDnsServerIp;
    	      this.customDnsServerName = defaults.customDnsServerName;
        }

        @CustomType.Setter
        public Builder customDnsServerIp(String customDnsServerIp) {
            if (customDnsServerIp == null) {
              throw new MissingRequiredPropertyException("KxEnvironmentCustomDnsConfiguration", "customDnsServerIp");
            }
            this.customDnsServerIp = customDnsServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder customDnsServerName(String customDnsServerName) {
            if (customDnsServerName == null) {
              throw new MissingRequiredPropertyException("KxEnvironmentCustomDnsConfiguration", "customDnsServerName");
            }
            this.customDnsServerName = customDnsServerName;
            return this;
        }
        public KxEnvironmentCustomDnsConfiguration build() {
            final var _resultValue = new KxEnvironmentCustomDnsConfiguration();
            _resultValue.customDnsServerIp = customDnsServerIp;
            _resultValue.customDnsServerName = customDnsServerName;
            return _resultValue;
        }
    }
}
