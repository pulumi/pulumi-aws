// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class S3AccessPointAttachmentOpenzfsConfiguration {
    /**
     * @return File system user identity to use for authorizing file read and write requests that are made using the S3 access point. See `fileSystemIdentity` Block for details.
     * 
     */
    private @Nullable S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentity fileSystemIdentity;
    /**
     * @return ID of the FSx for OpenZFS volume to which the S3 access point is attached.
     * 
     */
    private String volumeId;

    private S3AccessPointAttachmentOpenzfsConfiguration() {}
    /**
     * @return File system user identity to use for authorizing file read and write requests that are made using the S3 access point. See `fileSystemIdentity` Block for details.
     * 
     */
    public Optional<S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentity> fileSystemIdentity() {
        return Optional.ofNullable(this.fileSystemIdentity);
    }
    /**
     * @return ID of the FSx for OpenZFS volume to which the S3 access point is attached.
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(S3AccessPointAttachmentOpenzfsConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentity fileSystemIdentity;
        private String volumeId;
        public Builder() {}
        public Builder(S3AccessPointAttachmentOpenzfsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileSystemIdentity = defaults.fileSystemIdentity;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder fileSystemIdentity(@Nullable S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentity fileSystemIdentity) {

            this.fileSystemIdentity = fileSystemIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            if (volumeId == null) {
              throw new MissingRequiredPropertyException("S3AccessPointAttachmentOpenzfsConfiguration", "volumeId");
            }
            this.volumeId = volumeId;
            return this;
        }
        public S3AccessPointAttachmentOpenzfsConfiguration build() {
            final var _resultValue = new S3AccessPointAttachmentOpenzfsConfiguration();
            _resultValue.fileSystemIdentity = fileSystemIdentity;
            _resultValue.volumeId = volumeId;
            return _resultValue;
        }
    }
}
