// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.inputs;

import com.pulumi.aws.costexplorer.inputs.GetTagsFilterArgs;
import com.pulumi.aws.costexplorer.inputs.GetTagsSortByArgs;
import com.pulumi.aws.costexplorer.inputs.GetTagsTimePeriodArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagsArgs Empty = new GetTagsArgs();

    /**
     * Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<GetTagsFilterArgs> filter;

    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    public Optional<Output<GetTagsFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Value that you want to search for.
     * 
     */
    @Import(name="searchString")
    private @Nullable Output<String> searchString;

    /**
     * @return Value that you want to search for.
     * 
     */
    public Optional<Output<String>> searchString() {
        return Optional.ofNullable(this.searchString);
    }

    /**
     * Configuration block for the value by which you want to sort the data. See below.
     * 
     */
    @Import(name="sortBies")
    private @Nullable Output<List<GetTagsSortByArgs>> sortBies;

    /**
     * @return Configuration block for the value by which you want to sort the data. See below.
     * 
     */
    public Optional<Output<List<GetTagsSortByArgs>>> sortBies() {
        return Optional.ofNullable(this.sortBies);
    }

    /**
     * Key of the tag that you want to return values for.
     * 
     */
    @Import(name="tagKey")
    private @Nullable Output<String> tagKey;

    /**
     * @return Key of the tag that you want to return values for.
     * 
     */
    public Optional<Output<String>> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    /**
     * Configuration block for the start and end dates for retrieving the dimension values.
     * 
     */
    @Import(name="timePeriod", required=true)
    private Output<GetTagsTimePeriodArgs> timePeriod;

    /**
     * @return Configuration block for the start and end dates for retrieving the dimension values.
     * 
     */
    public Output<GetTagsTimePeriodArgs> timePeriod() {
        return this.timePeriod;
    }

    private GetTagsArgs() {}

    private GetTagsArgs(GetTagsArgs $) {
        this.filter = $.filter;
        this.searchString = $.searchString;
        this.sortBies = $.sortBies;
        this.tagKey = $.tagKey;
        this.timePeriod = $.timePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagsArgs $;

        public Builder() {
            $ = new GetTagsArgs();
        }

        public Builder(GetTagsArgs defaults) {
            $ = new GetTagsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Configuration block for the `Expression` object used to categorize costs. See below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<GetTagsFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Configuration block for the `Expression` object used to categorize costs. See below.
         * 
         * @return builder
         * 
         */
        public Builder filter(GetTagsFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param searchString Value that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder searchString(@Nullable Output<String> searchString) {
            $.searchString = searchString;
            return this;
        }

        /**
         * @param searchString Value that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder searchString(String searchString) {
            return searchString(Output.of(searchString));
        }

        /**
         * @param sortBies Configuration block for the value by which you want to sort the data. See below.
         * 
         * @return builder
         * 
         */
        public Builder sortBies(@Nullable Output<List<GetTagsSortByArgs>> sortBies) {
            $.sortBies = sortBies;
            return this;
        }

        /**
         * @param sortBies Configuration block for the value by which you want to sort the data. See below.
         * 
         * @return builder
         * 
         */
        public Builder sortBies(List<GetTagsSortByArgs> sortBies) {
            return sortBies(Output.of(sortBies));
        }

        /**
         * @param sortBies Configuration block for the value by which you want to sort the data. See below.
         * 
         * @return builder
         * 
         */
        public Builder sortBies(GetTagsSortByArgs... sortBies) {
            return sortBies(List.of(sortBies));
        }

        /**
         * @param tagKey Key of the tag that you want to return values for.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(@Nullable Output<String> tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        /**
         * @param tagKey Key of the tag that you want to return values for.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(String tagKey) {
            return tagKey(Output.of(tagKey));
        }

        /**
         * @param timePeriod Configuration block for the start and end dates for retrieving the dimension values.
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(Output<GetTagsTimePeriodArgs> timePeriod) {
            $.timePeriod = timePeriod;
            return this;
        }

        /**
         * @param timePeriod Configuration block for the start and end dates for retrieving the dimension values.
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(GetTagsTimePeriodArgs timePeriod) {
            return timePeriod(Output.of(timePeriod));
        }

        public GetTagsArgs build() {
            $.timePeriod = Objects.requireNonNull($.timePeriod, "expected parameter 'timePeriod' to be non-null");
            return $;
        }
    }

}
