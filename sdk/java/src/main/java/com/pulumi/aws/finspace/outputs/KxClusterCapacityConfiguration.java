// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KxClusterCapacityConfiguration {
    /**
     * @return Number of instances running in a cluster. Must be at least 1 and at most 5.
     * 
     */
    private Integer nodeCount;
    /**
     * @return Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
     * 
     * You can only specify one of the following values:
     * * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
     * * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
     * * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
     * * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
     * * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
     * * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
     * * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
     * 
     */
    private String nodeType;

    private KxClusterCapacityConfiguration() {}
    /**
     * @return Number of instances running in a cluster. Must be at least 1 and at most 5.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
     * 
     * You can only specify one of the following values:
     * * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
     * * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
     * * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
     * * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
     * * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
     * * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
     * * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
     * 
     */
    public String nodeType() {
        return this.nodeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KxClusterCapacityConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer nodeCount;
        private String nodeType;
        public Builder() {}
        public Builder(KxClusterCapacityConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeType = defaults.nodeType;
        }

        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder nodeType(String nodeType) {
            this.nodeType = Objects.requireNonNull(nodeType);
            return this;
        }
        public KxClusterCapacityConfiguration build() {
            final var _resultValue = new KxClusterCapacityConfiguration();
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodeType = nodeType;
            return _resultValue;
        }
    }
}
