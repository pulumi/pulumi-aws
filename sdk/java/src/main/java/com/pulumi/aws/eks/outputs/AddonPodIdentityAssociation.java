// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AddonPodIdentityAssociation {
    /**
     * @return The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
     * 
     */
    private String roleArn;
    /**
     * @return The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
     * 
     */
    private String serviceAccount;

    private AddonPodIdentityAssociation() {}
    /**
     * @return The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonPodIdentityAssociation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String roleArn;
        private String serviceAccount;
        public Builder() {}
        public Builder(AddonPodIdentityAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.roleArn = defaults.roleArn;
    	      this.serviceAccount = defaults.serviceAccount;
        }

        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("AddonPodIdentityAssociation", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(String serviceAccount) {
            if (serviceAccount == null) {
              throw new MissingRequiredPropertyException("AddonPodIdentityAssociation", "serviceAccount");
            }
            this.serviceAccount = serviceAccount;
            return this;
        }
        public AddonPodIdentityAssociation build() {
            final var _resultValue = new AddonPodIdentityAssociation();
            _resultValue.roleArn = roleArn;
            _resultValue.serviceAccount = serviceAccount;
            return _resultValue;
        }
    }
}
