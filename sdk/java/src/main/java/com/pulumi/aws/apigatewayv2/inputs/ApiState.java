// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.inputs;

import com.pulumi.aws.apigatewayv2.inputs.ApiCorsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiState extends com.pulumi.resources.ResourceArgs {

    public static final ApiState Empty = new ApiState();

    @Import(name="apiEndpoint")
    private @Nullable Output<String> apiEndpoint;

    public Optional<Output<String>> apiEndpoint() {
        return Optional.ofNullable(this.apiEndpoint);
    }

    @Import(name="apiKeySelectionExpression")
    private @Nullable Output<String> apiKeySelectionExpression;

    public Optional<Output<String>> apiKeySelectionExpression() {
        return Optional.ofNullable(this.apiKeySelectionExpression);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="body")
    private @Nullable Output<String> body;

    public Optional<Output<String>> body() {
        return Optional.ofNullable(this.body);
    }

    @Import(name="corsConfiguration")
    private @Nullable Output<ApiCorsConfigurationArgs> corsConfiguration;

    public Optional<Output<ApiCorsConfigurationArgs>> corsConfiguration() {
        return Optional.ofNullable(this.corsConfiguration);
    }

    @Import(name="credentialsArn")
    private @Nullable Output<String> credentialsArn;

    public Optional<Output<String>> credentialsArn() {
        return Optional.ofNullable(this.credentialsArn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="disableExecuteApiEndpoint")
    private @Nullable Output<Boolean> disableExecuteApiEndpoint;

    public Optional<Output<Boolean>> disableExecuteApiEndpoint() {
        return Optional.ofNullable(this.disableExecuteApiEndpoint);
    }

    @Import(name="executionArn")
    private @Nullable Output<String> executionArn;

    public Optional<Output<String>> executionArn() {
        return Optional.ofNullable(this.executionArn);
    }

    @Import(name="failOnWarnings")
    private @Nullable Output<Boolean> failOnWarnings;

    public Optional<Output<Boolean>> failOnWarnings() {
        return Optional.ofNullable(this.failOnWarnings);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="protocolType")
    private @Nullable Output<String> protocolType;

    public Optional<Output<String>> protocolType() {
        return Optional.ofNullable(this.protocolType);
    }

    @Import(name="routeKey")
    private @Nullable Output<String> routeKey;

    public Optional<Output<String>> routeKey() {
        return Optional.ofNullable(this.routeKey);
    }

    @Import(name="routeSelectionExpression")
    private @Nullable Output<String> routeSelectionExpression;

    public Optional<Output<String>> routeSelectionExpression() {
        return Optional.ofNullable(this.routeSelectionExpression);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="target")
    private @Nullable Output<String> target;

    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ApiState() {}

    private ApiState(ApiState $) {
        this.apiEndpoint = $.apiEndpoint;
        this.apiKeySelectionExpression = $.apiKeySelectionExpression;
        this.arn = $.arn;
        this.body = $.body;
        this.corsConfiguration = $.corsConfiguration;
        this.credentialsArn = $.credentialsArn;
        this.description = $.description;
        this.disableExecuteApiEndpoint = $.disableExecuteApiEndpoint;
        this.executionArn = $.executionArn;
        this.failOnWarnings = $.failOnWarnings;
        this.name = $.name;
        this.protocolType = $.protocolType;
        this.routeKey = $.routeKey;
        this.routeSelectionExpression = $.routeSelectionExpression;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.target = $.target;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiState $;

        public Builder() {
            $ = new ApiState();
        }

        public Builder(ApiState defaults) {
            $ = new ApiState(Objects.requireNonNull(defaults));
        }

        public Builder apiEndpoint(@Nullable Output<String> apiEndpoint) {
            $.apiEndpoint = apiEndpoint;
            return this;
        }

        public Builder apiEndpoint(String apiEndpoint) {
            return apiEndpoint(Output.of(apiEndpoint));
        }

        public Builder apiKeySelectionExpression(@Nullable Output<String> apiKeySelectionExpression) {
            $.apiKeySelectionExpression = apiKeySelectionExpression;
            return this;
        }

        public Builder apiKeySelectionExpression(String apiKeySelectionExpression) {
            return apiKeySelectionExpression(Output.of(apiKeySelectionExpression));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder body(@Nullable Output<String> body) {
            $.body = body;
            return this;
        }

        public Builder body(String body) {
            return body(Output.of(body));
        }

        public Builder corsConfiguration(@Nullable Output<ApiCorsConfigurationArgs> corsConfiguration) {
            $.corsConfiguration = corsConfiguration;
            return this;
        }

        public Builder corsConfiguration(ApiCorsConfigurationArgs corsConfiguration) {
            return corsConfiguration(Output.of(corsConfiguration));
        }

        public Builder credentialsArn(@Nullable Output<String> credentialsArn) {
            $.credentialsArn = credentialsArn;
            return this;
        }

        public Builder credentialsArn(String credentialsArn) {
            return credentialsArn(Output.of(credentialsArn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder disableExecuteApiEndpoint(@Nullable Output<Boolean> disableExecuteApiEndpoint) {
            $.disableExecuteApiEndpoint = disableExecuteApiEndpoint;
            return this;
        }

        public Builder disableExecuteApiEndpoint(Boolean disableExecuteApiEndpoint) {
            return disableExecuteApiEndpoint(Output.of(disableExecuteApiEndpoint));
        }

        public Builder executionArn(@Nullable Output<String> executionArn) {
            $.executionArn = executionArn;
            return this;
        }

        public Builder executionArn(String executionArn) {
            return executionArn(Output.of(executionArn));
        }

        public Builder failOnWarnings(@Nullable Output<Boolean> failOnWarnings) {
            $.failOnWarnings = failOnWarnings;
            return this;
        }

        public Builder failOnWarnings(Boolean failOnWarnings) {
            return failOnWarnings(Output.of(failOnWarnings));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder protocolType(@Nullable Output<String> protocolType) {
            $.protocolType = protocolType;
            return this;
        }

        public Builder protocolType(String protocolType) {
            return protocolType(Output.of(protocolType));
        }

        public Builder routeKey(@Nullable Output<String> routeKey) {
            $.routeKey = routeKey;
            return this;
        }

        public Builder routeKey(String routeKey) {
            return routeKey(Output.of(routeKey));
        }

        public Builder routeSelectionExpression(@Nullable Output<String> routeSelectionExpression) {
            $.routeSelectionExpression = routeSelectionExpression;
            return this;
        }

        public Builder routeSelectionExpression(String routeSelectionExpression) {
            return routeSelectionExpression(Output.of(routeSelectionExpression));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ApiState build() {
            return $;
        }
    }

}
