// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.outputs;

import com.pulumi.aws.workspaces.outputs.GetWorkspaceWorkspaceProperty;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    private @Nullable String bundleId;
    /**
     * @return Name of the WorkSpace, as seen by the operating system.
     * 
     */
    private @Nullable String computerName;
    private @Nullable String directoryId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return IP address of the WorkSpace.
     * 
     */
    private @Nullable String ipAddress;
    private @Nullable Boolean rootVolumeEncryptionEnabled;
    /**
     * @return Operational state of the WorkSpace.
     * 
     */
    private @Nullable String state;
    private @Nullable Map<String,String> tags;
    private @Nullable String userName;
    private @Nullable Boolean userVolumeEncryptionEnabled;
    private @Nullable String volumeEncryptionKey;
    private @Nullable String workspaceId;
    private @Nullable List<GetWorkspaceWorkspaceProperty> workspaceProperties;

    private GetWorkspaceResult() {}
    public Optional<String> bundleId() {
        return Optional.ofNullable(this.bundleId);
    }
    /**
     * @return Name of the WorkSpace, as seen by the operating system.
     * 
     */
    public Optional<String> computerName() {
        return Optional.ofNullable(this.computerName);
    }
    public Optional<String> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return IP address of the WorkSpace.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    public Optional<Boolean> rootVolumeEncryptionEnabled() {
        return Optional.ofNullable(this.rootVolumeEncryptionEnabled);
    }
    /**
     * @return Operational state of the WorkSpace.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }
    public Optional<Boolean> userVolumeEncryptionEnabled() {
        return Optional.ofNullable(this.userVolumeEncryptionEnabled);
    }
    public Optional<String> volumeEncryptionKey() {
        return Optional.ofNullable(this.volumeEncryptionKey);
    }
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }
    public List<GetWorkspaceWorkspaceProperty> workspaceProperties() {
        return this.workspaceProperties == null ? List.of() : this.workspaceProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bundleId;
        private @Nullable String computerName;
        private @Nullable String directoryId;
        private @Nullable String id;
        private @Nullable String ipAddress;
        private @Nullable Boolean rootVolumeEncryptionEnabled;
        private @Nullable String state;
        private @Nullable Map<String,String> tags;
        private @Nullable String userName;
        private @Nullable Boolean userVolumeEncryptionEnabled;
        private @Nullable String volumeEncryptionKey;
        private @Nullable String workspaceId;
        private @Nullable List<GetWorkspaceWorkspaceProperty> workspaceProperties;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bundleId = defaults.bundleId;
    	      this.computerName = defaults.computerName;
    	      this.directoryId = defaults.directoryId;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.rootVolumeEncryptionEnabled = defaults.rootVolumeEncryptionEnabled;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
    	      this.userVolumeEncryptionEnabled = defaults.userVolumeEncryptionEnabled;
    	      this.volumeEncryptionKey = defaults.volumeEncryptionKey;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceProperties = defaults.workspaceProperties;
        }

        @CustomType.Setter
        public Builder bundleId(@Nullable String bundleId) {
            this.bundleId = bundleId;
            return this;
        }
        @CustomType.Setter
        public Builder computerName(@Nullable String computerName) {
            this.computerName = computerName;
            return this;
        }
        @CustomType.Setter
        public Builder directoryId(@Nullable String directoryId) {
            this.directoryId = directoryId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder rootVolumeEncryptionEnabled(@Nullable Boolean rootVolumeEncryptionEnabled) {
            this.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        @CustomType.Setter
        public Builder userVolumeEncryptionEnabled(@Nullable Boolean userVolumeEncryptionEnabled) {
            this.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder volumeEncryptionKey(@Nullable String volumeEncryptionKey) {
            this.volumeEncryptionKey = volumeEncryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(@Nullable String workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceProperties(@Nullable List<GetWorkspaceWorkspaceProperty> workspaceProperties) {
            this.workspaceProperties = workspaceProperties;
            return this;
        }
        public Builder workspaceProperties(GetWorkspaceWorkspaceProperty... workspaceProperties) {
            return workspaceProperties(List.of(workspaceProperties));
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.bundleId = bundleId;
            o.computerName = computerName;
            o.directoryId = directoryId;
            o.id = id;
            o.ipAddress = ipAddress;
            o.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled;
            o.state = state;
            o.tags = tags;
            o.userName = userName;
            o.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled;
            o.volumeEncryptionKey = volumeEncryptionKey;
            o.workspaceId = workspaceId;
            o.workspaceProperties = workspaceProperties;
            return o;
        }
    }
}
