// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.outputs;

import com.pulumi.aws.workspaces.outputs.GetWorkspaceWorkspaceProperty;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetWorkspaceResult {
    private String bundleId;
    /**
     * @return Name of the WorkSpace, as seen by the operating system.
     * 
     */
    private String computerName;
    private String directoryId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return IP address of the WorkSpace.
     * 
     */
    private String ipAddress;
    private Boolean rootVolumeEncryptionEnabled;
    /**
     * @return Operational state of the WorkSpace.
     * 
     */
    private String state;
    private Map<String,String> tags;
    private String userName;
    private Boolean userVolumeEncryptionEnabled;
    private String volumeEncryptionKey;
    private String workspaceId;
    private List<GetWorkspaceWorkspaceProperty> workspaceProperties;

    private GetWorkspaceResult() {}
    public String bundleId() {
        return this.bundleId;
    }
    /**
     * @return Name of the WorkSpace, as seen by the operating system.
     * 
     */
    public String computerName() {
        return this.computerName;
    }
    public String directoryId() {
        return this.directoryId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IP address of the WorkSpace.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    public Boolean rootVolumeEncryptionEnabled() {
        return this.rootVolumeEncryptionEnabled;
    }
    /**
     * @return Operational state of the WorkSpace.
     * 
     */
    public String state() {
        return this.state;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String userName() {
        return this.userName;
    }
    public Boolean userVolumeEncryptionEnabled() {
        return this.userVolumeEncryptionEnabled;
    }
    public String volumeEncryptionKey() {
        return this.volumeEncryptionKey;
    }
    public String workspaceId() {
        return this.workspaceId;
    }
    public List<GetWorkspaceWorkspaceProperty> workspaceProperties() {
        return this.workspaceProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bundleId;
        private String computerName;
        private String directoryId;
        private String id;
        private String ipAddress;
        private Boolean rootVolumeEncryptionEnabled;
        private String state;
        private Map<String,String> tags;
        private String userName;
        private Boolean userVolumeEncryptionEnabled;
        private String volumeEncryptionKey;
        private String workspaceId;
        private List<GetWorkspaceWorkspaceProperty> workspaceProperties;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bundleId = defaults.bundleId;
    	      this.computerName = defaults.computerName;
    	      this.directoryId = defaults.directoryId;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.rootVolumeEncryptionEnabled = defaults.rootVolumeEncryptionEnabled;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
    	      this.userVolumeEncryptionEnabled = defaults.userVolumeEncryptionEnabled;
    	      this.volumeEncryptionKey = defaults.volumeEncryptionKey;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceProperties = defaults.workspaceProperties;
        }

        @CustomType.Setter
        public Builder bundleId(String bundleId) {
            this.bundleId = Objects.requireNonNull(bundleId);
            return this;
        }
        @CustomType.Setter
        public Builder computerName(String computerName) {
            this.computerName = Objects.requireNonNull(computerName);
            return this;
        }
        @CustomType.Setter
        public Builder directoryId(String directoryId) {
            this.directoryId = Objects.requireNonNull(directoryId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder rootVolumeEncryptionEnabled(Boolean rootVolumeEncryptionEnabled) {
            this.rootVolumeEncryptionEnabled = Objects.requireNonNull(rootVolumeEncryptionEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        @CustomType.Setter
        public Builder userVolumeEncryptionEnabled(Boolean userVolumeEncryptionEnabled) {
            this.userVolumeEncryptionEnabled = Objects.requireNonNull(userVolumeEncryptionEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder volumeEncryptionKey(String volumeEncryptionKey) {
            this.volumeEncryptionKey = Objects.requireNonNull(volumeEncryptionKey);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceProperties(List<GetWorkspaceWorkspaceProperty> workspaceProperties) {
            this.workspaceProperties = Objects.requireNonNull(workspaceProperties);
            return this;
        }
        public Builder workspaceProperties(GetWorkspaceWorkspaceProperty... workspaceProperties) {
            return workspaceProperties(List.of(workspaceProperties));
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.bundleId = bundleId;
            o.computerName = computerName;
            o.directoryId = directoryId;
            o.id = id;
            o.ipAddress = ipAddress;
            o.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled;
            o.state = state;
            o.tags = tags;
            o.userName = userName;
            o.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled;
            o.volumeEncryptionKey = volumeEncryptionKey;
            o.workspaceId = workspaceId;
            o.workspaceProperties = workspaceProperties;
            return o;
        }
    }
}
