// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FiltersTimeRangeFilterExcludePeriodConfiguration {
    private Integer amount;
    private String granularity;
    /**
     * @return The dashboard creation status.
     * 
     */
    private @Nullable String status;

    private FiltersTimeRangeFilterExcludePeriodConfiguration() {}
    public Integer amount() {
        return this.amount;
    }
    public String granularity() {
        return this.granularity;
    }
    /**
     * @return The dashboard creation status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FiltersTimeRangeFilterExcludePeriodConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer amount;
        private String granularity;
        private @Nullable String status;
        public Builder() {}
        public Builder(FiltersTimeRangeFilterExcludePeriodConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.granularity = defaults.granularity;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder amount(Integer amount) {
            if (amount == null) {
              throw new MissingRequiredPropertyException("FiltersTimeRangeFilterExcludePeriodConfiguration", "amount");
            }
            this.amount = amount;
            return this;
        }
        @CustomType.Setter
        public Builder granularity(String granularity) {
            if (granularity == null) {
              throw new MissingRequiredPropertyException("FiltersTimeRangeFilterExcludePeriodConfiguration", "granularity");
            }
            this.granularity = granularity;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public FiltersTimeRangeFilterExcludePeriodConfiguration build() {
            final var _resultValue = new FiltersTimeRangeFilterExcludePeriodConfiguration();
            _resultValue.amount = amount;
            _resultValue.granularity = granularity;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
