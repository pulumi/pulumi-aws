// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.aws.datasync.inputs.LocationFsxOntapFileSystemProtocolArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocationFsxOntapFileSystemState extends com.pulumi.resources.ResourceArgs {

    public static final LocationFsxOntapFileSystemState Empty = new LocationFsxOntapFileSystemState();

    /**
     * ARN of the DataSync Location for the FSx Ontap File System.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the DataSync Location for the FSx Ontap File System.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * ARN of the FSx Ontap File System.
     * 
     */
    @Import(name="fsxFilesystemArn")
    private @Nullable Output<String> fsxFilesystemArn;

    /**
     * @return ARN of the FSx Ontap File System.
     * 
     */
    public Optional<Output<String>> fsxFilesystemArn() {
        return Optional.ofNullable(this.fsxFilesystemArn);
    }

    /**
     * The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<LocationFsxOntapFileSystemProtocolArgs> protocol;

    /**
     * @return The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
     * 
     */
    public Optional<Output<LocationFsxOntapFileSystemProtocolArgs>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The security groups that provide access to your file system&#39;s preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
     * * Network File System (NFS): TCP ports 111, 635, and 2049
     * * Server Message Block (SMB): TCP port 445
     * 
     */
    @Import(name="securityGroupArns")
    private @Nullable Output<List<String>> securityGroupArns;

    /**
     * @return The security groups that provide access to your file system&#39;s preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
     * * Network File System (NFS): TCP ports 111, 635, and 2049
     * * Server Message Block (SMB): TCP port 445
     * 
     */
    public Optional<Output<List<String>>> securityGroupArns() {
        return Optional.ofNullable(this.securityGroupArns);
    }

    /**
     * The ARN of the SVM in your file system where you want to copy data to of from.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="storageVirtualMachineArn")
    private @Nullable Output<String> storageVirtualMachineArn;

    /**
     * @return The ARN of the SVM in your file system where you want to copy data to of from.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> storageVirtualMachineArn() {
        return Optional.ofNullable(this.storageVirtualMachineArn);
    }

    /**
     * Path to the file share in the SVM where you&#39;ll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
     * 
     */
    @Import(name="subdirectory")
    private @Nullable Output<String> subdirectory;

    /**
     * @return Path to the file share in the SVM where you&#39;ll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
     * 
     */
    public Optional<Output<String>> subdirectory() {
        return Optional.ofNullable(this.subdirectory);
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * URI of the FSx ONTAP file system location
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return URI of the FSx ONTAP file system location
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private LocationFsxOntapFileSystemState() {}

    private LocationFsxOntapFileSystemState(LocationFsxOntapFileSystemState $) {
        this.arn = $.arn;
        this.creationTime = $.creationTime;
        this.fsxFilesystemArn = $.fsxFilesystemArn;
        this.protocol = $.protocol;
        this.securityGroupArns = $.securityGroupArns;
        this.storageVirtualMachineArn = $.storageVirtualMachineArn;
        this.subdirectory = $.subdirectory;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationFsxOntapFileSystemState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationFsxOntapFileSystemState $;

        public Builder() {
            $ = new LocationFsxOntapFileSystemState();
        }

        public Builder(LocationFsxOntapFileSystemState defaults) {
            $ = new LocationFsxOntapFileSystemState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the DataSync Location for the FSx Ontap File System.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the DataSync Location for the FSx Ontap File System.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        /**
         * @param fsxFilesystemArn ARN of the FSx Ontap File System.
         * 
         * @return builder
         * 
         */
        public Builder fsxFilesystemArn(@Nullable Output<String> fsxFilesystemArn) {
            $.fsxFilesystemArn = fsxFilesystemArn;
            return this;
        }

        /**
         * @param fsxFilesystemArn ARN of the FSx Ontap File System.
         * 
         * @return builder
         * 
         */
        public Builder fsxFilesystemArn(String fsxFilesystemArn) {
            return fsxFilesystemArn(Output.of(fsxFilesystemArn));
        }

        /**
         * @param protocol The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<LocationFsxOntapFileSystemProtocolArgs> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
         * 
         * @return builder
         * 
         */
        public Builder protocol(LocationFsxOntapFileSystemProtocolArgs protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param securityGroupArns The security groups that provide access to your file system&#39;s preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
         * * Network File System (NFS): TCP ports 111, 635, and 2049
         * * Server Message Block (SMB): TCP port 445
         * 
         * @return builder
         * 
         */
        public Builder securityGroupArns(@Nullable Output<List<String>> securityGroupArns) {
            $.securityGroupArns = securityGroupArns;
            return this;
        }

        /**
         * @param securityGroupArns The security groups that provide access to your file system&#39;s preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
         * * Network File System (NFS): TCP ports 111, 635, and 2049
         * * Server Message Block (SMB): TCP port 445
         * 
         * @return builder
         * 
         */
        public Builder securityGroupArns(List<String> securityGroupArns) {
            return securityGroupArns(Output.of(securityGroupArns));
        }

        /**
         * @param securityGroupArns The security groups that provide access to your file system&#39;s preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
         * * Network File System (NFS): TCP ports 111, 635, and 2049
         * * Server Message Block (SMB): TCP port 445
         * 
         * @return builder
         * 
         */
        public Builder securityGroupArns(String... securityGroupArns) {
            return securityGroupArns(List.of(securityGroupArns));
        }

        /**
         * @param storageVirtualMachineArn The ARN of the SVM in your file system where you want to copy data to of from.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder storageVirtualMachineArn(@Nullable Output<String> storageVirtualMachineArn) {
            $.storageVirtualMachineArn = storageVirtualMachineArn;
            return this;
        }

        /**
         * @param storageVirtualMachineArn The ARN of the SVM in your file system where you want to copy data to of from.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder storageVirtualMachineArn(String storageVirtualMachineArn) {
            return storageVirtualMachineArn(Output.of(storageVirtualMachineArn));
        }

        /**
         * @param subdirectory Path to the file share in the SVM where you&#39;ll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            $.subdirectory = subdirectory;
            return this;
        }

        /**
         * @param subdirectory Path to the file share in the SVM where you&#39;ll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(String subdirectory) {
            return subdirectory(Output.of(subdirectory));
        }

        /**
         * @param tags Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param uri URI of the FSx ONTAP file system location
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri URI of the FSx ONTAP file system location
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public LocationFsxOntapFileSystemState build() {
            return $;
        }
    }

}
