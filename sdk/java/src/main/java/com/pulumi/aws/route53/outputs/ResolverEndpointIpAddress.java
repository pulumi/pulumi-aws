// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResolverEndpointIpAddress {
    /**
     * @return IPv4 address in the subnet that you want to use for DNS queries.
     * 
     */
    private @Nullable String ip;
    private @Nullable String ipId;
    /**
     * @return IPv6 address in the subnet that you want to use for DNS queries.
     * 
     */
    private @Nullable String ipv6;
    /**
     * @return ID of the subnet that contains the IP address.
     * 
     */
    private String subnetId;

    private ResolverEndpointIpAddress() {}
    /**
     * @return IPv4 address in the subnet that you want to use for DNS queries.
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<String> ipId() {
        return Optional.ofNullable(this.ipId);
    }
    /**
     * @return IPv6 address in the subnet that you want to use for DNS queries.
     * 
     */
    public Optional<String> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }
    /**
     * @return ID of the subnet that contains the IP address.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverEndpointIpAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ip;
        private @Nullable String ipId;
        private @Nullable String ipv6;
        private String subnetId;
        public Builder() {}
        public Builder(ResolverEndpointIpAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.ipId = defaults.ipId;
    	      this.ipv6 = defaults.ipv6;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder ip(@Nullable String ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipId(@Nullable String ipId) {

            this.ipId = ipId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(@Nullable String ipv6) {

            this.ipv6 = ipv6;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("ResolverEndpointIpAddress", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public ResolverEndpointIpAddress build() {
            final var _resultValue = new ResolverEndpointIpAddress();
            _resultValue.ip = ip;
            _resultValue.ipId = ipId;
            _resultValue.ipv6 = ipv6;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
