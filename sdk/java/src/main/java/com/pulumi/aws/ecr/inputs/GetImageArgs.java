// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetImageArgs Empty = new GetImageArgs();

    @Import(name="imageDigest")
    private @Nullable Output<String> imageDigest;

    public Optional<Output<String>> imageDigest() {
        return Optional.ofNullable(this.imageDigest);
    }

    @Import(name="imageTag")
    private @Nullable Output<String> imageTag;

    public Optional<Output<String>> imageTag() {
        return Optional.ofNullable(this.imageTag);
    }

    @Import(name="registryId")
    private @Nullable Output<String> registryId;

    public Optional<Output<String>> registryId() {
        return Optional.ofNullable(this.registryId);
    }

    @Import(name="repositoryName", required=true)
    private Output<String> repositoryName;

    public Output<String> repositoryName() {
        return this.repositoryName;
    }

    private GetImageArgs() {}

    private GetImageArgs(GetImageArgs $) {
        this.imageDigest = $.imageDigest;
        this.imageTag = $.imageTag;
        this.registryId = $.registryId;
        this.repositoryName = $.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImageArgs $;

        public Builder() {
            $ = new GetImageArgs();
        }

        public Builder(GetImageArgs defaults) {
            $ = new GetImageArgs(Objects.requireNonNull(defaults));
        }

        public Builder imageDigest(@Nullable Output<String> imageDigest) {
            $.imageDigest = imageDigest;
            return this;
        }

        public Builder imageDigest(String imageDigest) {
            return imageDigest(Output.of(imageDigest));
        }

        public Builder imageTag(@Nullable Output<String> imageTag) {
            $.imageTag = imageTag;
            return this;
        }

        public Builder imageTag(String imageTag) {
            return imageTag(Output.of(imageTag));
        }

        public Builder registryId(@Nullable Output<String> registryId) {
            $.registryId = registryId;
            return this;
        }

        public Builder registryId(String registryId) {
            return registryId(Output.of(registryId));
        }

        public Builder repositoryName(Output<String> repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        public Builder repositoryName(String repositoryName) {
            return repositoryName(Output.of(repositoryName));
        }

        public GetImageArgs build() {
            $.repositoryName = Objects.requireNonNull($.repositoryName, "expected parameter 'repositoryName' to be non-null");
            return $;
        }
    }

}
