// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockmodel.outputs;

import com.pulumi.aws.bedrockmodel.outputs.InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InvocationLoggingConfigurationLoggingConfigCloudwatchConfig {
    /**
     * @return S3 configuration for delivering a large amount of data. See `s3_config`.
     * 
     */
    private @Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config largeDataDeliveryS3Config;
    /**
     * @return Log group name.
     * 
     */
    private @Nullable String logGroupName;
    /**
     * @return IAM Role ARN.
     * 
     * The following arguments are optional:
     * 
     */
    private @Nullable String roleArn;

    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfig() {}
    /**
     * @return S3 configuration for delivering a large amount of data. See `s3_config`.
     * 
     */
    public Optional<InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config> largeDataDeliveryS3Config() {
        return Optional.ofNullable(this.largeDataDeliveryS3Config);
    }
    /**
     * @return Log group name.
     * 
     */
    public Optional<String> logGroupName() {
        return Optional.ofNullable(this.logGroupName);
    }
    /**
     * @return IAM Role ARN.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config largeDataDeliveryS3Config;
        private @Nullable String logGroupName;
        private @Nullable String roleArn;
        public Builder() {}
        public Builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.largeDataDeliveryS3Config = defaults.largeDataDeliveryS3Config;
    	      this.logGroupName = defaults.logGroupName;
    	      this.roleArn = defaults.roleArn;
        }

        @CustomType.Setter
        public Builder largeDataDeliveryS3Config(@Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config largeDataDeliveryS3Config) {

            this.largeDataDeliveryS3Config = largeDataDeliveryS3Config;
            return this;
        }
        @CustomType.Setter
        public Builder logGroupName(@Nullable String logGroupName) {

            this.logGroupName = logGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {

            this.roleArn = roleArn;
            return this;
        }
        public InvocationLoggingConfigurationLoggingConfigCloudwatchConfig build() {
            final var _resultValue = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfig();
            _resultValue.largeDataDeliveryS3Config = largeDataDeliveryS3Config;
            _resultValue.logGroupName = logGroupName;
            _resultValue.roleArn = roleArn;
            return _resultValue;
        }
    }
}
