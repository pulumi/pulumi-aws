// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.vpc.RouteServerPeerArgs;
import com.pulumi.aws.vpc.inputs.RouteServerPeerState;
import com.pulumi.aws.vpc.outputs.RouteServerPeerBgpOptions;
import com.pulumi.aws.vpc.outputs.RouteServerPeerTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a resource for managing a VPC (Virtual Private Cloud) Route Server Peer.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.vpc.RouteServerPeer;
 * import com.pulumi.aws.vpc.RouteServerPeerArgs;
 * import com.pulumi.aws.vpc.inputs.RouteServerPeerBgpOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new RouteServerPeer("test", RouteServerPeerArgs.builder()
 *             .routeServerEndpointId(example.routeServerEndpointId())
 *             .peerAddress("10.0.1.250")
 *             .bgpOptions(RouteServerPeerBgpOptionsArgs.builder()
 *                 .peerAsn(65200)
 *                 .build())
 *             .tags(Map.of("Name", "Appliance 1"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Complete Configuration
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.vpc.RouteServer;
 * import com.pulumi.aws.vpc.RouteServerArgs;
 * import com.pulumi.aws.vpcRouteServerAssociation;
 * import com.pulumi.aws.vpcRouteServerAssociationArgs;
 * import com.pulumi.aws.vpc.RouteServerEndpoint;
 * import com.pulumi.aws.vpc.RouteServerEndpointArgs;
 * import com.pulumi.aws.vpc.RouteServerPropagation;
 * import com.pulumi.aws.vpc.RouteServerPropagationArgs;
 * import com.pulumi.aws.vpc.RouteServerPeer;
 * import com.pulumi.aws.vpc.RouteServerPeerArgs;
 * import com.pulumi.aws.vpc.inputs.RouteServerPeerBgpOptionsArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new RouteServer("test", RouteServerArgs.builder()
 *             .amazonSideAsn(4294967294)
 *             .tags(Map.of("Name", "Test"))
 *             .build());
 * 
 *         var testVpcRouteServerAssociation = new VpcRouteServerAssociation("testVpcRouteServerAssociation", VpcRouteServerAssociationArgs.builder()
 *             .routeServerId(test.routeServerId())
 *             .vpcId(testAwsVpc.id())
 *             .build());
 * 
 *         var testRouteServerEndpoint = new RouteServerEndpoint("testRouteServerEndpoint", RouteServerEndpointArgs.builder()
 *             .routeServerId(test.routeServerId())
 *             .subnetId(testAwsSubnet.id())
 *             .tags(Map.of("Name", "Test Endpoint"))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(testVpcRouteServerAssociation)
 *                 .build());
 * 
 *         var testRouteServerPropagation = new RouteServerPropagation("testRouteServerPropagation", RouteServerPropagationArgs.builder()
 *             .routeServerId(test.routeServerId())
 *             .routeTableId(testAwsRouteTable.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(testVpcRouteServerAssociation)
 *                 .build());
 * 
 *         var testRouteServerPeer = new RouteServerPeer("testRouteServerPeer", RouteServerPeerArgs.builder()
 *             .routeServerEndpointId(testRouteServerEndpoint.routeServerEndpointId())
 *             .peerAddress("10.0.1.250")
 *             .bgpOptions(RouteServerPeerBgpOptionsArgs.builder()
 *                 .peerAsn(65000)
 *                 .peerLivenessDetection("bgp-keepalive")
 *                 .build())
 *             .tags(Map.of("Name", "Test Appliance"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import VPC (Virtual Private Cloud) Route Server using the `route_server_peer_id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:vpc/routeServerPeer:RouteServerPeer example rsp-12345678
 * ```
 * 
 */
@ResourceType(type="aws:vpc/routeServerPeer:RouteServerPeer")
public class RouteServerPeer extends com.pulumi.resources.CustomResource {
    /**
     * The ARN of the route server peer.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return The ARN of the route server peer.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The BGP options for the peer, including ASN (Autonomous System Number) and BFD (Bidrectional Forwarding Detection) settings. Configuration block with BGP Options configuration Detailed below
     * 
     */
    @Export(name="bgpOptions", refs={RouteServerPeerBgpOptions.class}, tree="[0]")
    private Output</* @Nullable */ RouteServerPeerBgpOptions> bgpOptions;

    /**
     * @return The BGP options for the peer, including ASN (Autonomous System Number) and BFD (Bidrectional Forwarding Detection) settings. Configuration block with BGP Options configuration Detailed below
     * 
     */
    public Output<Optional<RouteServerPeerBgpOptions>> bgpOptions() {
        return Codegen.optional(this.bgpOptions);
    }
    /**
     * The IP address of the Elastic network interface for the route server endpoint.
     * 
     */
    @Export(name="endpointEniAddress", refs={String.class}, tree="[0]")
    private Output<String> endpointEniAddress;

    /**
     * @return The IP address of the Elastic network interface for the route server endpoint.
     * 
     */
    public Output<String> endpointEniAddress() {
        return this.endpointEniAddress;
    }
    /**
     * The ID of the Elastic network interface for the route server endpoint.
     * 
     */
    @Export(name="endpointEniId", refs={String.class}, tree="[0]")
    private Output<String> endpointEniId;

    /**
     * @return The ID of the Elastic network interface for the route server endpoint.
     * 
     */
    public Output<String> endpointEniId() {
        return this.endpointEniId;
    }
    /**
     * The IPv4 address of the peer device.
     * 
     */
    @Export(name="peerAddress", refs={String.class}, tree="[0]")
    private Output<String> peerAddress;

    /**
     * @return The IPv4 address of the peer device.
     * 
     */
    public Output<String> peerAddress() {
        return this.peerAddress;
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The ID of the route server endpoint for which to create a peer.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="routeServerEndpointId", refs={String.class}, tree="[0]")
    private Output<String> routeServerEndpointId;

    /**
     * @return The ID of the route server endpoint for which to create a peer.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> routeServerEndpointId() {
        return this.routeServerEndpointId;
    }
    /**
     * The ID of the route server associated with this peer.
     * 
     */
    @Export(name="routeServerId", refs={String.class}, tree="[0]")
    private Output<String> routeServerId;

    /**
     * @return The ID of the route server associated with this peer.
     * 
     */
    public Output<String> routeServerId() {
        return this.routeServerId;
    }
    /**
     * The unique identifier of the route server peer.
     * 
     */
    @Export(name="routeServerPeerId", refs={String.class}, tree="[0]")
    private Output<String> routeServerPeerId;

    /**
     * @return The unique identifier of the route server peer.
     * 
     */
    public Output<String> routeServerPeerId() {
        return this.routeServerPeerId;
    }
    /**
     * The ID of the subnet containing the route server peer.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The ID of the subnet containing the route server peer.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={RouteServerPeerTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ RouteServerPeerTimeouts> timeouts;

    public Output<Optional<RouteServerPeerTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * The ID of the VPC containing the route server peer.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC containing the route server peer.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RouteServerPeer(java.lang.String name) {
        this(name, RouteServerPeerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RouteServerPeer(java.lang.String name, RouteServerPeerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RouteServerPeer(java.lang.String name, RouteServerPeerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:vpc/routeServerPeer:RouteServerPeer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RouteServerPeer(java.lang.String name, Output<java.lang.String> id, @Nullable RouteServerPeerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:vpc/routeServerPeer:RouteServerPeer", name, state, makeResourceOptions(options, id), false);
    }

    private static RouteServerPeerArgs makeArgs(RouteServerPeerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouteServerPeerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RouteServerPeer get(java.lang.String name, Output<java.lang.String> id, @Nullable RouteServerPeerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RouteServerPeer(name, id, state, options);
    }
}
