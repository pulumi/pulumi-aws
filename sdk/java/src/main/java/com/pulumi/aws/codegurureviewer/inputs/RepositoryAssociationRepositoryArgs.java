// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codegurureviewer.inputs;

import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryBitbucketArgs;
import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryCodecommitArgs;
import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryGithubEnterpriseServerArgs;
import com.pulumi.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryS3BucketArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryAssociationRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryAssociationRepositoryArgs Empty = new RepositoryAssociationRepositoryArgs();

    @Import(name="bitbucket")
    private @Nullable Output<RepositoryAssociationRepositoryBitbucketArgs> bitbucket;

    public Optional<Output<RepositoryAssociationRepositoryBitbucketArgs>> bitbucket() {
        return Optional.ofNullable(this.bitbucket);
    }

    @Import(name="codecommit")
    private @Nullable Output<RepositoryAssociationRepositoryCodecommitArgs> codecommit;

    public Optional<Output<RepositoryAssociationRepositoryCodecommitArgs>> codecommit() {
        return Optional.ofNullable(this.codecommit);
    }

    @Import(name="githubEnterpriseServer")
    private @Nullable Output<RepositoryAssociationRepositoryGithubEnterpriseServerArgs> githubEnterpriseServer;

    public Optional<Output<RepositoryAssociationRepositoryGithubEnterpriseServerArgs>> githubEnterpriseServer() {
        return Optional.ofNullable(this.githubEnterpriseServer);
    }

    @Import(name="s3Bucket")
    private @Nullable Output<RepositoryAssociationRepositoryS3BucketArgs> s3Bucket;

    public Optional<Output<RepositoryAssociationRepositoryS3BucketArgs>> s3Bucket() {
        return Optional.ofNullable(this.s3Bucket);
    }

    private RepositoryAssociationRepositoryArgs() {}

    private RepositoryAssociationRepositoryArgs(RepositoryAssociationRepositoryArgs $) {
        this.bitbucket = $.bitbucket;
        this.codecommit = $.codecommit;
        this.githubEnterpriseServer = $.githubEnterpriseServer;
        this.s3Bucket = $.s3Bucket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryAssociationRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryAssociationRepositoryArgs $;

        public Builder() {
            $ = new RepositoryAssociationRepositoryArgs();
        }

        public Builder(RepositoryAssociationRepositoryArgs defaults) {
            $ = new RepositoryAssociationRepositoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder bitbucket(@Nullable Output<RepositoryAssociationRepositoryBitbucketArgs> bitbucket) {
            $.bitbucket = bitbucket;
            return this;
        }

        public Builder bitbucket(RepositoryAssociationRepositoryBitbucketArgs bitbucket) {
            return bitbucket(Output.of(bitbucket));
        }

        public Builder codecommit(@Nullable Output<RepositoryAssociationRepositoryCodecommitArgs> codecommit) {
            $.codecommit = codecommit;
            return this;
        }

        public Builder codecommit(RepositoryAssociationRepositoryCodecommitArgs codecommit) {
            return codecommit(Output.of(codecommit));
        }

        public Builder githubEnterpriseServer(@Nullable Output<RepositoryAssociationRepositoryGithubEnterpriseServerArgs> githubEnterpriseServer) {
            $.githubEnterpriseServer = githubEnterpriseServer;
            return this;
        }

        public Builder githubEnterpriseServer(RepositoryAssociationRepositoryGithubEnterpriseServerArgs githubEnterpriseServer) {
            return githubEnterpriseServer(Output.of(githubEnterpriseServer));
        }

        public Builder s3Bucket(@Nullable Output<RepositoryAssociationRepositoryS3BucketArgs> s3Bucket) {
            $.s3Bucket = s3Bucket;
            return this;
        }

        public Builder s3Bucket(RepositoryAssociationRepositoryS3BucketArgs s3Bucket) {
            return s3Bucket(Output.of(s3Bucket));
        }

        public RepositoryAssociationRepositoryArgs build() {
            return $;
        }
    }

}
