// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HsmConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final HsmConfigurationState Empty = new HsmConfigurationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="hsmConfigurationIdentifier")
    private @Nullable Output<String> hsmConfigurationIdentifier;

    public Optional<Output<String>> hsmConfigurationIdentifier() {
        return Optional.ofNullable(this.hsmConfigurationIdentifier);
    }

    @Import(name="hsmIpAddress")
    private @Nullable Output<String> hsmIpAddress;

    public Optional<Output<String>> hsmIpAddress() {
        return Optional.ofNullable(this.hsmIpAddress);
    }

    @Import(name="hsmPartitionName")
    private @Nullable Output<String> hsmPartitionName;

    public Optional<Output<String>> hsmPartitionName() {
        return Optional.ofNullable(this.hsmPartitionName);
    }

    @Import(name="hsmPartitionPassword")
    private @Nullable Output<String> hsmPartitionPassword;

    public Optional<Output<String>> hsmPartitionPassword() {
        return Optional.ofNullable(this.hsmPartitionPassword);
    }

    @Import(name="hsmServerPublicCertificate")
    private @Nullable Output<String> hsmServerPublicCertificate;

    public Optional<Output<String>> hsmServerPublicCertificate() {
        return Optional.ofNullable(this.hsmServerPublicCertificate);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private HsmConfigurationState() {}

    private HsmConfigurationState(HsmConfigurationState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.hsmConfigurationIdentifier = $.hsmConfigurationIdentifier;
        this.hsmIpAddress = $.hsmIpAddress;
        this.hsmPartitionName = $.hsmPartitionName;
        this.hsmPartitionPassword = $.hsmPartitionPassword;
        this.hsmServerPublicCertificate = $.hsmServerPublicCertificate;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HsmConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HsmConfigurationState $;

        public Builder() {
            $ = new HsmConfigurationState();
        }

        public Builder(HsmConfigurationState defaults) {
            $ = new HsmConfigurationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder hsmConfigurationIdentifier(@Nullable Output<String> hsmConfigurationIdentifier) {
            $.hsmConfigurationIdentifier = hsmConfigurationIdentifier;
            return this;
        }

        public Builder hsmConfigurationIdentifier(String hsmConfigurationIdentifier) {
            return hsmConfigurationIdentifier(Output.of(hsmConfigurationIdentifier));
        }

        public Builder hsmIpAddress(@Nullable Output<String> hsmIpAddress) {
            $.hsmIpAddress = hsmIpAddress;
            return this;
        }

        public Builder hsmIpAddress(String hsmIpAddress) {
            return hsmIpAddress(Output.of(hsmIpAddress));
        }

        public Builder hsmPartitionName(@Nullable Output<String> hsmPartitionName) {
            $.hsmPartitionName = hsmPartitionName;
            return this;
        }

        public Builder hsmPartitionName(String hsmPartitionName) {
            return hsmPartitionName(Output.of(hsmPartitionName));
        }

        public Builder hsmPartitionPassword(@Nullable Output<String> hsmPartitionPassword) {
            $.hsmPartitionPassword = hsmPartitionPassword;
            return this;
        }

        public Builder hsmPartitionPassword(String hsmPartitionPassword) {
            return hsmPartitionPassword(Output.of(hsmPartitionPassword));
        }

        public Builder hsmServerPublicCertificate(@Nullable Output<String> hsmServerPublicCertificate) {
            $.hsmServerPublicCertificate = hsmServerPublicCertificate;
            return this;
        }

        public Builder hsmServerPublicCertificate(String hsmServerPublicCertificate) {
            return hsmServerPublicCertificate(Output.of(hsmServerPublicCertificate));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public HsmConfigurationState build() {
            return $;
        }
    }

}
