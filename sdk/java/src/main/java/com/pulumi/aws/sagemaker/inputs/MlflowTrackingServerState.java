// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MlflowTrackingServerState extends com.pulumi.resources.ResourceArgs {

    public static final MlflowTrackingServerState Empty = new MlflowTrackingServerState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this MLFlow Tracking Server.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this MLFlow Tracking Server.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
     * 
     */
    @Import(name="artifactStoreUri")
    private @Nullable Output<String> artifactStoreUri;

    /**
     * @return The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
     * 
     */
    public Optional<Output<String>> artifactStoreUri() {
        return Optional.ofNullable(this.artifactStoreUri);
    }

    /**
     * A list of Member Definitions that contains objects that identify the workers that make up the work team.
     * 
     */
    @Import(name="automaticModelRegistration")
    private @Nullable Output<Boolean> automaticModelRegistration;

    /**
     * @return A list of Member Definitions that contains objects that identify the workers that make up the work team.
     * 
     */
    public Optional<Output<Boolean>> automaticModelRegistration() {
        return Optional.ofNullable(this.automaticModelRegistration);
    }

    /**
     * The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see [How it works](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html#mlflow-create-tracking-server-how-it-works).
     * 
     */
    @Import(name="mlflowVersion")
    private @Nullable Output<String> mlflowVersion;

    /**
     * @return The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see [How it works](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html#mlflow-create-tracking-server-how-it-works).
     * 
     */
    public Optional<Output<String>> mlflowVersion() {
        return Optional.ofNullable(this.mlflowVersion);
    }

    /**
     * The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see [Set up IAM permissions for MLflow](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow-create-tracking-server-iam.html).
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see [Set up IAM permissions for MLflow](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow-create-tracking-server-iam.html).
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * A unique string identifying the tracking server name. This string is part of the tracking server ARN.
     * 
     */
    @Import(name="trackingServerName")
    private @Nullable Output<String> trackingServerName;

    /**
     * @return A unique string identifying the tracking server name. This string is part of the tracking server ARN.
     * 
     */
    public Optional<Output<String>> trackingServerName() {
        return Optional.ofNullable(this.trackingServerName);
    }

    /**
     * The size of the tracking server you want to create. You can choose between &#34;Small&#34;, &#34;Medium&#34;, and &#34;Large&#34;. The default MLflow Tracking Server configuration size is &#34;Small&#34;. You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
     * 
     */
    @Import(name="trackingServerSize")
    private @Nullable Output<String> trackingServerSize;

    /**
     * @return The size of the tracking server you want to create. You can choose between &#34;Small&#34;, &#34;Medium&#34;, and &#34;Large&#34;. The default MLflow Tracking Server configuration size is &#34;Small&#34;. You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
     * 
     */
    public Optional<Output<String>> trackingServerSize() {
        return Optional.ofNullable(this.trackingServerSize);
    }

    /**
     * The URL to connect to the MLflow user interface for the described tracking server.
     * 
     */
    @Import(name="trackingServerUrl")
    private @Nullable Output<String> trackingServerUrl;

    /**
     * @return The URL to connect to the MLflow user interface for the described tracking server.
     * 
     */
    public Optional<Output<String>> trackingServerUrl() {
        return Optional.ofNullable(this.trackingServerUrl);
    }

    /**
     * The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
     * 
     */
    @Import(name="weeklyMaintenanceWindowStart")
    private @Nullable Output<String> weeklyMaintenanceWindowStart;

    /**
     * @return The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
     * 
     */
    public Optional<Output<String>> weeklyMaintenanceWindowStart() {
        return Optional.ofNullable(this.weeklyMaintenanceWindowStart);
    }

    private MlflowTrackingServerState() {}

    private MlflowTrackingServerState(MlflowTrackingServerState $) {
        this.arn = $.arn;
        this.artifactStoreUri = $.artifactStoreUri;
        this.automaticModelRegistration = $.automaticModelRegistration;
        this.mlflowVersion = $.mlflowVersion;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.trackingServerName = $.trackingServerName;
        this.trackingServerSize = $.trackingServerSize;
        this.trackingServerUrl = $.trackingServerUrl;
        this.weeklyMaintenanceWindowStart = $.weeklyMaintenanceWindowStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MlflowTrackingServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MlflowTrackingServerState $;

        public Builder() {
            $ = new MlflowTrackingServerState();
        }

        public Builder(MlflowTrackingServerState defaults) {
            $ = new MlflowTrackingServerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this MLFlow Tracking Server.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this MLFlow Tracking Server.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param artifactStoreUri The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
         * 
         * @return builder
         * 
         */
        public Builder artifactStoreUri(@Nullable Output<String> artifactStoreUri) {
            $.artifactStoreUri = artifactStoreUri;
            return this;
        }

        /**
         * @param artifactStoreUri The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
         * 
         * @return builder
         * 
         */
        public Builder artifactStoreUri(String artifactStoreUri) {
            return artifactStoreUri(Output.of(artifactStoreUri));
        }

        /**
         * @param automaticModelRegistration A list of Member Definitions that contains objects that identify the workers that make up the work team.
         * 
         * @return builder
         * 
         */
        public Builder automaticModelRegistration(@Nullable Output<Boolean> automaticModelRegistration) {
            $.automaticModelRegistration = automaticModelRegistration;
            return this;
        }

        /**
         * @param automaticModelRegistration A list of Member Definitions that contains objects that identify the workers that make up the work team.
         * 
         * @return builder
         * 
         */
        public Builder automaticModelRegistration(Boolean automaticModelRegistration) {
            return automaticModelRegistration(Output.of(automaticModelRegistration));
        }

        /**
         * @param mlflowVersion The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see [How it works](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html#mlflow-create-tracking-server-how-it-works).
         * 
         * @return builder
         * 
         */
        public Builder mlflowVersion(@Nullable Output<String> mlflowVersion) {
            $.mlflowVersion = mlflowVersion;
            return this;
        }

        /**
         * @param mlflowVersion The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see [How it works](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html#mlflow-create-tracking-server-how-it-works).
         * 
         * @return builder
         * 
         */
        public Builder mlflowVersion(String mlflowVersion) {
            return mlflowVersion(Output.of(mlflowVersion));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see [Set up IAM permissions for MLflow](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow-create-tracking-server-iam.html).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see [Set up IAM permissions for MLflow](https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow-create-tracking-server-iam.html).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param trackingServerName A unique string identifying the tracking server name. This string is part of the tracking server ARN.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerName(@Nullable Output<String> trackingServerName) {
            $.trackingServerName = trackingServerName;
            return this;
        }

        /**
         * @param trackingServerName A unique string identifying the tracking server name. This string is part of the tracking server ARN.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerName(String trackingServerName) {
            return trackingServerName(Output.of(trackingServerName));
        }

        /**
         * @param trackingServerSize The size of the tracking server you want to create. You can choose between &#34;Small&#34;, &#34;Medium&#34;, and &#34;Large&#34;. The default MLflow Tracking Server configuration size is &#34;Small&#34;. You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerSize(@Nullable Output<String> trackingServerSize) {
            $.trackingServerSize = trackingServerSize;
            return this;
        }

        /**
         * @param trackingServerSize The size of the tracking server you want to create. You can choose between &#34;Small&#34;, &#34;Medium&#34;, and &#34;Large&#34;. The default MLflow Tracking Server configuration size is &#34;Small&#34;. You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerSize(String trackingServerSize) {
            return trackingServerSize(Output.of(trackingServerSize));
        }

        /**
         * @param trackingServerUrl The URL to connect to the MLflow user interface for the described tracking server.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerUrl(@Nullable Output<String> trackingServerUrl) {
            $.trackingServerUrl = trackingServerUrl;
            return this;
        }

        /**
         * @param trackingServerUrl The URL to connect to the MLflow user interface for the described tracking server.
         * 
         * @return builder
         * 
         */
        public Builder trackingServerUrl(String trackingServerUrl) {
            return trackingServerUrl(Output.of(trackingServerUrl));
        }

        /**
         * @param weeklyMaintenanceWindowStart The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
         * 
         * @return builder
         * 
         */
        public Builder weeklyMaintenanceWindowStart(@Nullable Output<String> weeklyMaintenanceWindowStart) {
            $.weeklyMaintenanceWindowStart = weeklyMaintenanceWindowStart;
            return this;
        }

        /**
         * @param weeklyMaintenanceWindowStart The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
         * 
         * @return builder
         * 
         */
        public Builder weeklyMaintenanceWindowStart(String weeklyMaintenanceWindowStart) {
            return weeklyMaintenanceWindowStart(Output.of(weeklyMaintenanceWindowStart));
        }

        public MlflowTrackingServerState build() {
            return $;
        }
    }

}
