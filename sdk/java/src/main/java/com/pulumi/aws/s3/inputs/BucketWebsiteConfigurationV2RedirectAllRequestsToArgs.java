// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteConfigurationV2RedirectAllRequestsToArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteConfigurationV2RedirectAllRequestsToArgs Empty = new BucketWebsiteConfigurationV2RedirectAllRequestsToArgs();

    /**
     * Name of the host where requests are redirected.
     * 
     */
    @Import(name="hostName", required=true)
    private Output<String> hostName;

    /**
     * @return Name of the host where requests are redirected.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }

    /**
     * Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private BucketWebsiteConfigurationV2RedirectAllRequestsToArgs() {}

    private BucketWebsiteConfigurationV2RedirectAllRequestsToArgs(BucketWebsiteConfigurationV2RedirectAllRequestsToArgs $) {
        this.hostName = $.hostName;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteConfigurationV2RedirectAllRequestsToArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteConfigurationV2RedirectAllRequestsToArgs $;

        public Builder() {
            $ = new BucketWebsiteConfigurationV2RedirectAllRequestsToArgs();
        }

        public Builder(BucketWebsiteConfigurationV2RedirectAllRequestsToArgs defaults) {
            $ = new BucketWebsiteConfigurationV2RedirectAllRequestsToArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostName Name of the host where requests are redirected.
         * 
         * @return builder
         * 
         */
        public Builder hostName(Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Name of the host where requests are redirected.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param protocol Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public BucketWebsiteConfigurationV2RedirectAllRequestsToArgs build() {
            if ($.hostName == null) {
                throw new MissingRequiredPropertyException("BucketWebsiteConfigurationV2RedirectAllRequestsToArgs", "hostName");
            }
            return $;
        }
    }

}
