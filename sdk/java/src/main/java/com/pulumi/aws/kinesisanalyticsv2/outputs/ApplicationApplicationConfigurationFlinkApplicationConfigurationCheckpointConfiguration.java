// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration {
    private @Nullable Integer checkpointInterval;
    private @Nullable Boolean checkpointingEnabled;
    private String configurationType;
    private @Nullable Integer minPauseBetweenCheckpoints;

    private ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration() {}
    public Optional<Integer> checkpointInterval() {
        return Optional.ofNullable(this.checkpointInterval);
    }
    public Optional<Boolean> checkpointingEnabled() {
        return Optional.ofNullable(this.checkpointingEnabled);
    }
    public String configurationType() {
        return this.configurationType;
    }
    public Optional<Integer> minPauseBetweenCheckpoints() {
        return Optional.ofNullable(this.minPauseBetweenCheckpoints);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer checkpointInterval;
        private @Nullable Boolean checkpointingEnabled;
        private String configurationType;
        private @Nullable Integer minPauseBetweenCheckpoints;
        public Builder() {}
        public Builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkpointInterval = defaults.checkpointInterval;
    	      this.checkpointingEnabled = defaults.checkpointingEnabled;
    	      this.configurationType = defaults.configurationType;
    	      this.minPauseBetweenCheckpoints = defaults.minPauseBetweenCheckpoints;
        }

        @CustomType.Setter
        public Builder checkpointInterval(@Nullable Integer checkpointInterval) {
            this.checkpointInterval = checkpointInterval;
            return this;
        }
        @CustomType.Setter
        public Builder checkpointingEnabled(@Nullable Boolean checkpointingEnabled) {
            this.checkpointingEnabled = checkpointingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            this.configurationType = Objects.requireNonNull(configurationType);
            return this;
        }
        @CustomType.Setter
        public Builder minPauseBetweenCheckpoints(@Nullable Integer minPauseBetweenCheckpoints) {
            this.minPauseBetweenCheckpoints = minPauseBetweenCheckpoints;
            return this;
        }
        public ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration build() {
            final var o = new ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration();
            o.checkpointInterval = checkpointInterval;
            o.checkpointingEnabled = checkpointingEnabled;
            o.configurationType = configurationType;
            o.minPauseBetweenCheckpoints = minPauseBetweenCheckpoints;
            return o;
        }
    }
}
