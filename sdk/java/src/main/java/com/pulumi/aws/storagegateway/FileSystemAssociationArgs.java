// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway;

import com.pulumi.aws.storagegateway.inputs.FileSystemAssociationCacheAttributesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileSystemAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileSystemAssociationArgs Empty = new FileSystemAssociationArgs();

    @Import(name="auditDestinationArn")
    private @Nullable Output<String> auditDestinationArn;

    public Optional<Output<String>> auditDestinationArn() {
        return Optional.ofNullable(this.auditDestinationArn);
    }

    @Import(name="cacheAttributes")
    private @Nullable Output<FileSystemAssociationCacheAttributesArgs> cacheAttributes;

    public Optional<Output<FileSystemAssociationCacheAttributesArgs>> cacheAttributes() {
        return Optional.ofNullable(this.cacheAttributes);
    }

    @Import(name="gatewayArn", required=true)
    private Output<String> gatewayArn;

    public Output<String> gatewayArn() {
        return this.gatewayArn;
    }

    @Import(name="locationArn", required=true)
    private Output<String> locationArn;

    public Output<String> locationArn() {
        return this.locationArn;
    }

    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private FileSystemAssociationArgs() {}

    private FileSystemAssociationArgs(FileSystemAssociationArgs $) {
        this.auditDestinationArn = $.auditDestinationArn;
        this.cacheAttributes = $.cacheAttributes;
        this.gatewayArn = $.gatewayArn;
        this.locationArn = $.locationArn;
        this.password = $.password;
        this.tags = $.tags;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileSystemAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileSystemAssociationArgs $;

        public Builder() {
            $ = new FileSystemAssociationArgs();
        }

        public Builder(FileSystemAssociationArgs defaults) {
            $ = new FileSystemAssociationArgs(Objects.requireNonNull(defaults));
        }

        public Builder auditDestinationArn(@Nullable Output<String> auditDestinationArn) {
            $.auditDestinationArn = auditDestinationArn;
            return this;
        }

        public Builder auditDestinationArn(String auditDestinationArn) {
            return auditDestinationArn(Output.of(auditDestinationArn));
        }

        public Builder cacheAttributes(@Nullable Output<FileSystemAssociationCacheAttributesArgs> cacheAttributes) {
            $.cacheAttributes = cacheAttributes;
            return this;
        }

        public Builder cacheAttributes(FileSystemAssociationCacheAttributesArgs cacheAttributes) {
            return cacheAttributes(Output.of(cacheAttributes));
        }

        public Builder gatewayArn(Output<String> gatewayArn) {
            $.gatewayArn = gatewayArn;
            return this;
        }

        public Builder gatewayArn(String gatewayArn) {
            return gatewayArn(Output.of(gatewayArn));
        }

        public Builder locationArn(Output<String> locationArn) {
            $.locationArn = locationArn;
            return this;
        }

        public Builder locationArn(String locationArn) {
            return locationArn(Output.of(locationArn));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public FileSystemAssociationArgs build() {
            $.gatewayArn = Objects.requireNonNull($.gatewayArn, "expected parameter 'gatewayArn' to be non-null");
            $.locationArn = Objects.requireNonNull($.locationArn, "expected parameter 'locationArn' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
