// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc;

import com.pulumi.aws.vpc.inputs.RouteServerVpcAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteServerVpcAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteServerVpcAssociationArgs Empty = new RouteServerVpcAssociationArgs();

    /**
     * The unique identifier for the route server to be associated.
     * 
     */
    @Import(name="routeServerId", required=true)
    private Output<String> routeServerId;

    /**
     * @return The unique identifier for the route server to be associated.
     * 
     */
    public Output<String> routeServerId() {
        return this.routeServerId;
    }

    @Import(name="timeouts")
    private @Nullable Output<RouteServerVpcAssociationTimeoutsArgs> timeouts;

    public Optional<Output<RouteServerVpcAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The ID of the VPC to associate with the route server.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC to associate with the route server.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private RouteServerVpcAssociationArgs() {}

    private RouteServerVpcAssociationArgs(RouteServerVpcAssociationArgs $) {
        this.routeServerId = $.routeServerId;
        this.timeouts = $.timeouts;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteServerVpcAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteServerVpcAssociationArgs $;

        public Builder() {
            $ = new RouteServerVpcAssociationArgs();
        }

        public Builder(RouteServerVpcAssociationArgs defaults) {
            $ = new RouteServerVpcAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param routeServerId The unique identifier for the route server to be associated.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(Output<String> routeServerId) {
            $.routeServerId = routeServerId;
            return this;
        }

        /**
         * @param routeServerId The unique identifier for the route server to be associated.
         * 
         * @return builder
         * 
         */
        public Builder routeServerId(String routeServerId) {
            return routeServerId(Output.of(routeServerId));
        }

        public Builder timeouts(@Nullable Output<RouteServerVpcAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(RouteServerVpcAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param vpcId The ID of the VPC to associate with the route server.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC to associate with the route server.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public RouteServerVpcAssociationArgs build() {
            if ($.routeServerId == null) {
                throw new MissingRequiredPropertyException("RouteServerVpcAssociationArgs", "routeServerId");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("RouteServerVpcAssociationArgs", "vpcId");
            }
            return $;
        }
    }

}
