// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkInsightsAnalysisAlternatePathHint {
    private String componentArn;
    private String componentId;

    private GetNetworkInsightsAnalysisAlternatePathHint() {}
    public String componentArn() {
        return this.componentArn;
    }
    public String componentId() {
        return this.componentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInsightsAnalysisAlternatePathHint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String componentArn;
        private String componentId;
        public Builder() {}
        public Builder(GetNetworkInsightsAnalysisAlternatePathHint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentArn = defaults.componentArn;
    	      this.componentId = defaults.componentId;
        }

        @CustomType.Setter
        public Builder componentArn(String componentArn) {
            if (componentArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisAlternatePathHint", "componentArn");
            }
            this.componentArn = componentArn;
            return this;
        }
        @CustomType.Setter
        public Builder componentId(String componentId) {
            if (componentId == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisAlternatePathHint", "componentId");
            }
            this.componentId = componentId;
            return this;
        }
        public GetNetworkInsightsAnalysisAlternatePathHint build() {
            final var _resultValue = new GetNetworkInsightsAnalysisAlternatePathHint();
            _resultValue.componentArn = componentArn;
            _resultValue.componentId = componentId;
            return _resultValue;
        }
    }
}
