// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ColorScaleColor;
import com.pulumi.aws.quicksight.outputs.ColorScaleNullValueColor;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ColorScale {
    private String colorFillType;
    private List<ColorScaleColor> colors;
    private @Nullable ColorScaleNullValueColor nullValueColor;

    private ColorScale() {}
    public String colorFillType() {
        return this.colorFillType;
    }
    public List<ColorScaleColor> colors() {
        return this.colors;
    }
    public Optional<ColorScaleNullValueColor> nullValueColor() {
        return Optional.ofNullable(this.nullValueColor);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ColorScale defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String colorFillType;
        private List<ColorScaleColor> colors;
        private @Nullable ColorScaleNullValueColor nullValueColor;
        public Builder() {}
        public Builder(ColorScale defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colorFillType = defaults.colorFillType;
    	      this.colors = defaults.colors;
    	      this.nullValueColor = defaults.nullValueColor;
        }

        @CustomType.Setter
        public Builder colorFillType(String colorFillType) {
            if (colorFillType == null) {
              throw new MissingRequiredPropertyException("ColorScale", "colorFillType");
            }
            this.colorFillType = colorFillType;
            return this;
        }
        @CustomType.Setter
        public Builder colors(List<ColorScaleColor> colors) {
            if (colors == null) {
              throw new MissingRequiredPropertyException("ColorScale", "colors");
            }
            this.colors = colors;
            return this;
        }
        public Builder colors(ColorScaleColor... colors) {
            return colors(List.of(colors));
        }
        @CustomType.Setter
        public Builder nullValueColor(@Nullable ColorScaleNullValueColor nullValueColor) {

            this.nullValueColor = nullValueColor;
            return this;
        }
        public ColorScale build() {
            final var _resultValue = new ColorScale();
            _resultValue.colorFillType = colorFillType;
            _resultValue.colors = colors;
            _resultValue.nullValueColor = nullValueColor;
            return _resultValue;
        }
    }
}
