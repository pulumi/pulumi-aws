// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFaqPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFaqPlainArgs Empty = new GetFaqPlainArgs();

    /**
     * Identifier of the FAQ.
     * 
     */
    @Import(name="faqId", required=true)
    private String faqId;

    /**
     * @return Identifier of the FAQ.
     * 
     */
    public String faqId() {
        return this.faqId;
    }

    /**
     * Identifier of the index that contains the FAQ.
     * 
     */
    @Import(name="indexId", required=true)
    private String indexId;

    /**
     * @return Identifier of the index that contains the FAQ.
     * 
     */
    public String indexId() {
        return this.indexId;
    }

    /**
     * Metadata that helps organize the FAQs you create.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Metadata that helps organize the FAQs you create.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetFaqPlainArgs() {}

    private GetFaqPlainArgs(GetFaqPlainArgs $) {
        this.faqId = $.faqId;
        this.indexId = $.indexId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFaqPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFaqPlainArgs $;

        public Builder() {
            $ = new GetFaqPlainArgs();
        }

        public Builder(GetFaqPlainArgs defaults) {
            $ = new GetFaqPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param faqId Identifier of the FAQ.
         * 
         * @return builder
         * 
         */
        public Builder faqId(String faqId) {
            $.faqId = faqId;
            return this;
        }

        /**
         * @param indexId Identifier of the index that contains the FAQ.
         * 
         * @return builder
         * 
         */
        public Builder indexId(String indexId) {
            $.indexId = indexId;
            return this;
        }

        /**
         * @param tags Metadata that helps organize the FAQs you create.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetFaqPlainArgs build() {
            if ($.faqId == null) {
                throw new MissingRequiredPropertyException("GetFaqPlainArgs", "faqId");
            }
            if ($.indexId == null) {
                throw new MissingRequiredPropertyException("GetFaqPlainArgs", "indexId");
            }
            return $;
        }
    }

}
