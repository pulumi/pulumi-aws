// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.outputs;

import com.pulumi.aws.codepipeline.outputs.PipelineStageOnFailureConditionRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineStageOnFailureCondition {
    /**
     * @return The action to be done when the condition is met. For example, rolling back an execution for a failure condition. Possible values are `ROLLBACK`, `FAIL`, `RETRY` and `SKIP`.
     * 
     */
    private @Nullable String result;
    /**
     * @return The rules that make up the condition. Defined as a `rule` block below.
     * 
     */
    private List<PipelineStageOnFailureConditionRule> rules;

    private PipelineStageOnFailureCondition() {}
    /**
     * @return The action to be done when the condition is met. For example, rolling back an execution for a failure condition. Possible values are `ROLLBACK`, `FAIL`, `RETRY` and `SKIP`.
     * 
     */
    public Optional<String> result() {
        return Optional.ofNullable(this.result);
    }
    /**
     * @return The rules that make up the condition. Defined as a `rule` block below.
     * 
     */
    public List<PipelineStageOnFailureConditionRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineStageOnFailureCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String result;
        private List<PipelineStageOnFailureConditionRule> rules;
        public Builder() {}
        public Builder(PipelineStageOnFailureCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.result = defaults.result;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder result(@Nullable String result) {

            this.result = result;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<PipelineStageOnFailureConditionRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("PipelineStageOnFailureCondition", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(PipelineStageOnFailureConditionRule... rules) {
            return rules(List.of(rules));
        }
        public PipelineStageOnFailureCondition build() {
            final var _resultValue = new PipelineStageOnFailureCondition();
            _resultValue.result = result;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
