// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersApiKeyArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersBasicArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersInvocationHttpParametersArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventConnectionAuthParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersArgs Empty = new EventConnectionAuthParametersArgs();

    @Import(name="apiKey")
    private @Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey;

    public Optional<Output<EventConnectionAuthParametersApiKeyArgs>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    @Import(name="basic")
    private @Nullable Output<EventConnectionAuthParametersBasicArgs> basic;

    public Optional<Output<EventConnectionAuthParametersBasicArgs>> basic() {
        return Optional.ofNullable(this.basic);
    }

    @Import(name="invocationHttpParameters")
    private @Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters;

    public Optional<Output<EventConnectionAuthParametersInvocationHttpParametersArgs>> invocationHttpParameters() {
        return Optional.ofNullable(this.invocationHttpParameters);
    }

    @Import(name="oauth")
    private @Nullable Output<EventConnectionAuthParametersOauthArgs> oauth;

    public Optional<Output<EventConnectionAuthParametersOauthArgs>> oauth() {
        return Optional.ofNullable(this.oauth);
    }

    private EventConnectionAuthParametersArgs() {}

    private EventConnectionAuthParametersArgs(EventConnectionAuthParametersArgs $) {
        this.apiKey = $.apiKey;
        this.basic = $.basic;
        this.invocationHttpParameters = $.invocationHttpParameters;
        this.oauth = $.oauth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventConnectionAuthParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventConnectionAuthParametersArgs $;

        public Builder() {
            $ = new EventConnectionAuthParametersArgs();
        }

        public Builder(EventConnectionAuthParametersArgs defaults) {
            $ = new EventConnectionAuthParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKey(@Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(EventConnectionAuthParametersApiKeyArgs apiKey) {
            return apiKey(Output.of(apiKey));
        }

        public Builder basic(@Nullable Output<EventConnectionAuthParametersBasicArgs> basic) {
            $.basic = basic;
            return this;
        }

        public Builder basic(EventConnectionAuthParametersBasicArgs basic) {
            return basic(Output.of(basic));
        }

        public Builder invocationHttpParameters(@Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters) {
            $.invocationHttpParameters = invocationHttpParameters;
            return this;
        }

        public Builder invocationHttpParameters(EventConnectionAuthParametersInvocationHttpParametersArgs invocationHttpParameters) {
            return invocationHttpParameters(Output.of(invocationHttpParameters));
        }

        public Builder oauth(@Nullable Output<EventConnectionAuthParametersOauthArgs> oauth) {
            $.oauth = oauth;
            return this;
        }

        public Builder oauth(EventConnectionAuthParametersOauthArgs oauth) {
            return oauth(Output.of(oauth));
        }

        public EventConnectionAuthParametersArgs build() {
            return $;
        }
    }

}
