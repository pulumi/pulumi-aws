// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class QueryLoggingConfigurationDestinationFilters {
    /**
     * @return The Query Samples Processed (QSP) threshold above which queries will be logged. Queries processing more samples than this threshold will be captured in logs.
     * 
     */
    private Integer qspThreshold;

    private QueryLoggingConfigurationDestinationFilters() {}
    /**
     * @return The Query Samples Processed (QSP) threshold above which queries will be logged. Queries processing more samples than this threshold will be captured in logs.
     * 
     */
    public Integer qspThreshold() {
        return this.qspThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueryLoggingConfigurationDestinationFilters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer qspThreshold;
        public Builder() {}
        public Builder(QueryLoggingConfigurationDestinationFilters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.qspThreshold = defaults.qspThreshold;
        }

        @CustomType.Setter
        public Builder qspThreshold(Integer qspThreshold) {
            if (qspThreshold == null) {
              throw new MissingRequiredPropertyException("QueryLoggingConfigurationDestinationFilters", "qspThreshold");
            }
            this.qspThreshold = qspThreshold;
            return this;
        }
        public QueryLoggingConfigurationDestinationFilters build() {
            final var _resultValue = new QueryLoggingConfigurationDestinationFilters();
            _resultValue.qspThreshold = qspThreshold;
            return _resultValue;
        }
    }
}
