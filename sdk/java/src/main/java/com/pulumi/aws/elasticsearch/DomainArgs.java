// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch;

import com.pulumi.aws.elasticsearch.inputs.DomainAdvancedSecurityOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainAutoTuneOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainClusterConfigArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainCognitoOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainDomainEndpointOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainEbsOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainEncryptAtRestArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainLogPublishingOptionArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainNodeToNodeEncryptionArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainSnapshotOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainVpcOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    @Import(name="accessPolicies")
    private @Nullable Output<String> accessPolicies;

    public Optional<Output<String>> accessPolicies() {
        return Optional.ofNullable(this.accessPolicies);
    }

    @Import(name="advancedOptions")
    private @Nullable Output<Map<String,String>> advancedOptions;

    public Optional<Output<Map<String,String>>> advancedOptions() {
        return Optional.ofNullable(this.advancedOptions);
    }

    @Import(name="advancedSecurityOptions")
    private @Nullable Output<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions;

    public Optional<Output<DomainAdvancedSecurityOptionsArgs>> advancedSecurityOptions() {
        return Optional.ofNullable(this.advancedSecurityOptions);
    }

    @Import(name="autoTuneOptions")
    private @Nullable Output<DomainAutoTuneOptionsArgs> autoTuneOptions;

    public Optional<Output<DomainAutoTuneOptionsArgs>> autoTuneOptions() {
        return Optional.ofNullable(this.autoTuneOptions);
    }

    @Import(name="clusterConfig")
    private @Nullable Output<DomainClusterConfigArgs> clusterConfig;

    public Optional<Output<DomainClusterConfigArgs>> clusterConfig() {
        return Optional.ofNullable(this.clusterConfig);
    }

    @Import(name="cognitoOptions")
    private @Nullable Output<DomainCognitoOptionsArgs> cognitoOptions;

    public Optional<Output<DomainCognitoOptionsArgs>> cognitoOptions() {
        return Optional.ofNullable(this.cognitoOptions);
    }

    @Import(name="domainEndpointOptions")
    private @Nullable Output<DomainDomainEndpointOptionsArgs> domainEndpointOptions;

    public Optional<Output<DomainDomainEndpointOptionsArgs>> domainEndpointOptions() {
        return Optional.ofNullable(this.domainEndpointOptions);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    @Import(name="ebsOptions")
    private @Nullable Output<DomainEbsOptionsArgs> ebsOptions;

    public Optional<Output<DomainEbsOptionsArgs>> ebsOptions() {
        return Optional.ofNullable(this.ebsOptions);
    }

    @Import(name="elasticsearchVersion")
    private @Nullable Output<String> elasticsearchVersion;

    public Optional<Output<String>> elasticsearchVersion() {
        return Optional.ofNullable(this.elasticsearchVersion);
    }

    @Import(name="encryptAtRest")
    private @Nullable Output<DomainEncryptAtRestArgs> encryptAtRest;

    public Optional<Output<DomainEncryptAtRestArgs>> encryptAtRest() {
        return Optional.ofNullable(this.encryptAtRest);
    }

    @Import(name="logPublishingOptions")
    private @Nullable Output<List<DomainLogPublishingOptionArgs>> logPublishingOptions;

    public Optional<Output<List<DomainLogPublishingOptionArgs>>> logPublishingOptions() {
        return Optional.ofNullable(this.logPublishingOptions);
    }

    @Import(name="nodeToNodeEncryption")
    private @Nullable Output<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption;

    public Optional<Output<DomainNodeToNodeEncryptionArgs>> nodeToNodeEncryption() {
        return Optional.ofNullable(this.nodeToNodeEncryption);
    }

    @Import(name="snapshotOptions")
    private @Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions;

    public Optional<Output<DomainSnapshotOptionsArgs>> snapshotOptions() {
        return Optional.ofNullable(this.snapshotOptions);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcOptions")
    private @Nullable Output<DomainVpcOptionsArgs> vpcOptions;

    public Optional<Output<DomainVpcOptionsArgs>> vpcOptions() {
        return Optional.ofNullable(this.vpcOptions);
    }

    private DomainArgs() {}

    private DomainArgs(DomainArgs $) {
        this.accessPolicies = $.accessPolicies;
        this.advancedOptions = $.advancedOptions;
        this.advancedSecurityOptions = $.advancedSecurityOptions;
        this.autoTuneOptions = $.autoTuneOptions;
        this.clusterConfig = $.clusterConfig;
        this.cognitoOptions = $.cognitoOptions;
        this.domainEndpointOptions = $.domainEndpointOptions;
        this.domainName = $.domainName;
        this.ebsOptions = $.ebsOptions;
        this.elasticsearchVersion = $.elasticsearchVersion;
        this.encryptAtRest = $.encryptAtRest;
        this.logPublishingOptions = $.logPublishingOptions;
        this.nodeToNodeEncryption = $.nodeToNodeEncryption;
        this.snapshotOptions = $.snapshotOptions;
        this.tags = $.tags;
        this.vpcOptions = $.vpcOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainArgs $;

        public Builder() {
            $ = new DomainArgs();
        }

        public Builder(DomainArgs defaults) {
            $ = new DomainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessPolicies(@Nullable Output<String> accessPolicies) {
            $.accessPolicies = accessPolicies;
            return this;
        }

        public Builder accessPolicies(String accessPolicies) {
            return accessPolicies(Output.of(accessPolicies));
        }

        public Builder advancedOptions(@Nullable Output<Map<String,String>> advancedOptions) {
            $.advancedOptions = advancedOptions;
            return this;
        }

        public Builder advancedOptions(Map<String,String> advancedOptions) {
            return advancedOptions(Output.of(advancedOptions));
        }

        public Builder advancedSecurityOptions(@Nullable Output<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions) {
            $.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }

        public Builder advancedSecurityOptions(DomainAdvancedSecurityOptionsArgs advancedSecurityOptions) {
            return advancedSecurityOptions(Output.of(advancedSecurityOptions));
        }

        public Builder autoTuneOptions(@Nullable Output<DomainAutoTuneOptionsArgs> autoTuneOptions) {
            $.autoTuneOptions = autoTuneOptions;
            return this;
        }

        public Builder autoTuneOptions(DomainAutoTuneOptionsArgs autoTuneOptions) {
            return autoTuneOptions(Output.of(autoTuneOptions));
        }

        public Builder clusterConfig(@Nullable Output<DomainClusterConfigArgs> clusterConfig) {
            $.clusterConfig = clusterConfig;
            return this;
        }

        public Builder clusterConfig(DomainClusterConfigArgs clusterConfig) {
            return clusterConfig(Output.of(clusterConfig));
        }

        public Builder cognitoOptions(@Nullable Output<DomainCognitoOptionsArgs> cognitoOptions) {
            $.cognitoOptions = cognitoOptions;
            return this;
        }

        public Builder cognitoOptions(DomainCognitoOptionsArgs cognitoOptions) {
            return cognitoOptions(Output.of(cognitoOptions));
        }

        public Builder domainEndpointOptions(@Nullable Output<DomainDomainEndpointOptionsArgs> domainEndpointOptions) {
            $.domainEndpointOptions = domainEndpointOptions;
            return this;
        }

        public Builder domainEndpointOptions(DomainDomainEndpointOptionsArgs domainEndpointOptions) {
            return domainEndpointOptions(Output.of(domainEndpointOptions));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder ebsOptions(@Nullable Output<DomainEbsOptionsArgs> ebsOptions) {
            $.ebsOptions = ebsOptions;
            return this;
        }

        public Builder ebsOptions(DomainEbsOptionsArgs ebsOptions) {
            return ebsOptions(Output.of(ebsOptions));
        }

        public Builder elasticsearchVersion(@Nullable Output<String> elasticsearchVersion) {
            $.elasticsearchVersion = elasticsearchVersion;
            return this;
        }

        public Builder elasticsearchVersion(String elasticsearchVersion) {
            return elasticsearchVersion(Output.of(elasticsearchVersion));
        }

        public Builder encryptAtRest(@Nullable Output<DomainEncryptAtRestArgs> encryptAtRest) {
            $.encryptAtRest = encryptAtRest;
            return this;
        }

        public Builder encryptAtRest(DomainEncryptAtRestArgs encryptAtRest) {
            return encryptAtRest(Output.of(encryptAtRest));
        }

        public Builder logPublishingOptions(@Nullable Output<List<DomainLogPublishingOptionArgs>> logPublishingOptions) {
            $.logPublishingOptions = logPublishingOptions;
            return this;
        }

        public Builder logPublishingOptions(List<DomainLogPublishingOptionArgs> logPublishingOptions) {
            return logPublishingOptions(Output.of(logPublishingOptions));
        }

        public Builder logPublishingOptions(DomainLogPublishingOptionArgs... logPublishingOptions) {
            return logPublishingOptions(List.of(logPublishingOptions));
        }

        public Builder nodeToNodeEncryption(@Nullable Output<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption) {
            $.nodeToNodeEncryption = nodeToNodeEncryption;
            return this;
        }

        public Builder nodeToNodeEncryption(DomainNodeToNodeEncryptionArgs nodeToNodeEncryption) {
            return nodeToNodeEncryption(Output.of(nodeToNodeEncryption));
        }

        public Builder snapshotOptions(@Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions) {
            $.snapshotOptions = snapshotOptions;
            return this;
        }

        public Builder snapshotOptions(DomainSnapshotOptionsArgs snapshotOptions) {
            return snapshotOptions(Output.of(snapshotOptions));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpcOptions(@Nullable Output<DomainVpcOptionsArgs> vpcOptions) {
            $.vpcOptions = vpcOptions;
            return this;
        }

        public Builder vpcOptions(DomainVpcOptionsArgs vpcOptions) {
            return vpcOptions(Output.of(vpcOptions));
        }

        public DomainArgs build() {
            return $;
        }
    }

}
