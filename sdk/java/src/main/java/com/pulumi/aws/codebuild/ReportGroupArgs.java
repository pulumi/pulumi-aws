// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild;

import com.pulumi.aws.codebuild.inputs.ReportGroupExportConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReportGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReportGroupArgs Empty = new ReportGroupArgs();

    @Import(name="deleteReports")
    private @Nullable Output<Boolean> deleteReports;

    public Optional<Output<Boolean>> deleteReports() {
        return Optional.ofNullable(this.deleteReports);
    }

    @Import(name="exportConfig", required=true)
    private Output<ReportGroupExportConfigArgs> exportConfig;

    public Output<ReportGroupExportConfigArgs> exportConfig() {
        return this.exportConfig;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ReportGroupArgs() {}

    private ReportGroupArgs(ReportGroupArgs $) {
        this.deleteReports = $.deleteReports;
        this.exportConfig = $.exportConfig;
        this.name = $.name;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportGroupArgs $;

        public Builder() {
            $ = new ReportGroupArgs();
        }

        public Builder(ReportGroupArgs defaults) {
            $ = new ReportGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder deleteReports(@Nullable Output<Boolean> deleteReports) {
            $.deleteReports = deleteReports;
            return this;
        }

        public Builder deleteReports(Boolean deleteReports) {
            return deleteReports(Output.of(deleteReports));
        }

        public Builder exportConfig(Output<ReportGroupExportConfigArgs> exportConfig) {
            $.exportConfig = exportConfig;
            return this;
        }

        public Builder exportConfig(ReportGroupExportConfigArgs exportConfig) {
            return exportConfig(Output.of(exportConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ReportGroupArgs build() {
            $.exportConfig = Objects.requireNonNull($.exportConfig, "expected parameter 'exportConfig' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
