// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.outputs;

import com.pulumi.aws.auditmanager.outputs.GetFrameworkControlSetControl;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFrameworkControlSet {
    private @Nullable List<GetFrameworkControlSetControl> controls;
    private @Nullable String id;
    /**
     * @return Name of the framework.
     * 
     */
    private @Nullable String name;

    private GetFrameworkControlSet() {}
    public List<GetFrameworkControlSetControl> controls() {
        return this.controls == null ? List.of() : this.controls;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Name of the framework.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFrameworkControlSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetFrameworkControlSetControl> controls;
        private @Nullable String id;
        private @Nullable String name;
        public Builder() {}
        public Builder(GetFrameworkControlSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controls = defaults.controls;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder controls(@Nullable List<GetFrameworkControlSetControl> controls) {
            this.controls = controls;
            return this;
        }
        public Builder controls(GetFrameworkControlSetControl... controls) {
            return controls(List.of(controls));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public GetFrameworkControlSet build() {
            final var o = new GetFrameworkControlSet();
            o.controls = controls;
            o.id = id;
            o.name = name;
            return o;
        }
    }
}
