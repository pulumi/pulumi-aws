// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.inputs;

import com.pulumi.aws.fsx.inputs.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs Empty = new S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs();

    /**
     * UID and GIDs of the file system POSIX user. See `posix_user` Block for details.
     * 
     */
    @Import(name="posixUser")
    private @Nullable Output<S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs> posixUser;

    /**
     * @return UID and GIDs of the file system POSIX user. See `posix_user` Block for details.
     * 
     */
    public Optional<Output<S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs>> posixUser() {
        return Optional.ofNullable(this.posixUser);
    }

    /**
     * FSx for OpenZFS user identity type. Valid values: `POSIX`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return FSx for OpenZFS user identity type. Valid values: `POSIX`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs() {}

    private S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs(S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs $) {
        this.posixUser = $.posixUser;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs $;

        public Builder() {
            $ = new S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs();
        }

        public Builder(S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs defaults) {
            $ = new S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param posixUser UID and GIDs of the file system POSIX user. See `posix_user` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder posixUser(@Nullable Output<S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs> posixUser) {
            $.posixUser = posixUser;
            return this;
        }

        /**
         * @param posixUser UID and GIDs of the file system POSIX user. See `posix_user` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder posixUser(S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs posixUser) {
            return posixUser(Output.of(posixUser));
        }

        /**
         * @param type FSx for OpenZFS user identity type. Valid values: `POSIX`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type FSx for OpenZFS user identity type. Valid values: `POSIX`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs", "type");
            }
            return $;
        }
    }

}
