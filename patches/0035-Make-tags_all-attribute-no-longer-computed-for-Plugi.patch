From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anton Tayanovskyy <anton@pulumi.com>
Date: Fri, 3 Nov 2023 15:44:33 -0400
Subject: [PATCH 35/35] Make tags_all attribute no longer computed for Plugin
 Framework


diff --git a/internal/service/appconfig/environment.go b/internal/service/appconfig/environment.go
index 258bb7c907..e129655da6 100644
--- a/internal/service/appconfig/environment.go
+++ b/internal/service/appconfig/environment.go
@@ -105,7 +105,7 @@ func (r *resourceEnvironment) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"monitor": schema.SetNestedBlock{
diff --git a/internal/service/auditmanager/assessment.go b/internal/service/auditmanager/assessment.go
index 0a27df1500..d2f9ecb1e4 100644
--- a/internal/service/auditmanager/assessment.go
+++ b/internal/service/auditmanager/assessment.go
@@ -95,7 +95,7 @@ func (r *resourceAssessment) Schema(ctx context.Context, req resource.SchemaRequ
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"assessment_reports_destination": schema.ListNestedBlock{
diff --git a/internal/service/auditmanager/control.go b/internal/service/auditmanager/control.go
index 01631e3e96..75d963c13c 100644
--- a/internal/service/auditmanager/control.go
+++ b/internal/service/auditmanager/control.go
@@ -67,7 +67,7 @@ func (r *resourceControl) Schema(ctx context.Context, req resource.SchemaRequest
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"testing_information": schema.StringAttribute{
 				Optional: true,
 			},
diff --git a/internal/service/batch/job_queue.go b/internal/service/batch/job_queue.go
index 7346ce6877..41f470bd76 100644
--- a/internal/service/batch/job_queue.go
+++ b/internal/service/batch/job_queue.go
@@ -96,7 +96,7 @@ func (r *resourceJobQueue) Schema(ctx context.Context, request resource.SchemaRe
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 
diff --git a/internal/service/batch/job_queue_schema.go b/internal/service/batch/job_queue_schema.go
index bd19814922..45c6b8cadc 100644
--- a/internal/service/batch/job_queue_schema.go
+++ b/internal/service/batch/job_queue_schema.go
@@ -58,7 +58,7 @@ func jobQueueSchema0(ctx context.Context) schema.Schema {
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"timeouts": timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/ec2/ec2_instance_connect_endpoint.go b/internal/service/ec2/ec2_instance_connect_endpoint.go
index b01be4bf72..bd5e235ada 100644
--- a/internal/service/ec2/ec2_instance_connect_endpoint.go
+++ b/internal/service/ec2/ec2_instance_connect_endpoint.go
@@ -115,7 +115,7 @@ func (r *resourceInstanceConnectEndpoint) Schema(ctx context.Context, req resour
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"vpc_id": schema.StringAttribute{
 				Computed: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/ec2/vpc_security_group_ingress_rule.go b/internal/service/ec2/vpc_security_group_ingress_rule.go
index 0b867c6616..0bf0c7ec63 100644
--- a/internal/service/ec2/vpc_security_group_ingress_rule.go
+++ b/internal/service/ec2/vpc_security_group_ingress_rule.go
@@ -149,7 +149,7 @@ func (r *resourceSecurityGroupRule) Schema(ctx context.Context, req resource.Sch
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"to_port": schema.Int64Attribute{
 				Optional: true,
 				Validators: []validator.Int64{
diff --git a/internal/service/lexv2models/bot.go b/internal/service/lexv2models/bot.go
index 83fdc88023..be3a67f26a 100644
--- a/internal/service/lexv2models/bot.go
+++ b/internal/service/lexv2models/bot.go
@@ -78,7 +78,7 @@ func (r *resourceBot) Schema(ctx context.Context, req resource.SchemaRequest, re
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"role_arn": schema.StringAttribute{
 				CustomType: fwtypes.ARNType,
 				Required:   true,
diff --git a/internal/service/opensearchserverless/collection.go b/internal/service/opensearchserverless/collection.go
index e661616cd7..7744b48ac4 100644
--- a/internal/service/opensearchserverless/collection.go
+++ b/internal/service/opensearchserverless/collection.go
@@ -111,7 +111,7 @@ func (r *resourceCollection) Schema(ctx context.Context, req resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"type": schema.StringAttribute{
 				Optional: true,
 				Computed: true,
diff --git a/internal/service/quicksight/namespace.go b/internal/service/quicksight/namespace.go
index 3fc8abec7a..08ad530a09 100644
--- a/internal/service/quicksight/namespace.go
+++ b/internal/service/quicksight/namespace.go
@@ -93,7 +93,7 @@ func (r *resourceNamespace) Schema(ctx context.Context, req resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"timeouts": timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/quicksight/vpc_connection.go b/internal/service/quicksight/vpc_connection.go
index 6009a572b9..88eb0c4fab 100644
--- a/internal/service/quicksight/vpc_connection.go
+++ b/internal/service/quicksight/vpc_connection.go
@@ -142,7 +142,7 @@ func (r *resourceVPCConnection) Schema(ctx context.Context, req resource.SchemaR
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"timeouts": timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/resourceexplorer2/index.go b/internal/service/resourceexplorer2/index.go
index 1a750b6343..0adf3acfd1 100644
--- a/internal/service/resourceexplorer2/index.go
+++ b/internal/service/resourceexplorer2/index.go
@@ -56,7 +56,7 @@ func (r *resourceIndex) Schema(ctx context.Context, request resource.SchemaReque
 			names.AttrARN:     framework.ARNAttributeComputedOnly(),
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"type": schema.StringAttribute{
 				Required: true,
 				Validators: []validator.String{
diff --git a/internal/service/resourceexplorer2/view.go b/internal/service/resourceexplorer2/view.go
index 55b4d8f072..9395c30110 100644
--- a/internal/service/resourceexplorer2/view.go
+++ b/internal/service/resourceexplorer2/view.go
@@ -77,7 +77,7 @@ func (r *resourceView) Schema(ctx context.Context, request resource.SchemaReques
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"filters": schema.ListNestedBlock{
diff --git a/internal/service/workspaces/connection_alias.go b/internal/service/workspaces/connection_alias.go
index 33d374f4e2..b2e1c97096 100644
--- a/internal/service/workspaces/connection_alias.go
+++ b/internal/service/workspaces/connection_alias.go
@@ -82,7 +82,7 @@ func (r *resourceConnectionAlias) Schema(ctx context.Context, req resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"timeouts": timeouts.Block(ctx, timeouts.Opts{
