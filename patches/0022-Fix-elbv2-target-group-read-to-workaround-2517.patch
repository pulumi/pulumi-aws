From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anton Tayanovskyy <anton@pulumi.com>
Date: Fri, 19 Jan 2024 17:36:47 -0500
Subject: [PATCH 22/46] Fix elbv2 target group read to workaround #2517


diff --git a/internal/service/elbv2/target_group.go b/internal/service/elbv2/target_group.go
index 2ff5a14f0f..8f20da9ca9 100644
--- a/internal/service/elbv2/target_group.go
+++ b/internal/service/elbv2/target_group.go
@@ -568,15 +568,15 @@ func resourceTargetGroupRead(ctx context.Context, d *schema.ResourceData, meta i
 		return sdkdiag.AppendErrorf(diags, "reading ELBv2 Target Group (%s) attributes: %s", d.Id(), err)
 	}
 
-	if err := d.Set("stickiness", []interface{}{flattenTargetGroupStickinessAttributes(attributes, protocol)}); err != nil {
+	if err := d.Set("stickiness", fix2517(flattenTargetGroupStickinessAttributes(attributes, protocol))); err != nil {
 		return sdkdiag.AppendErrorf(diags, "setting stickiness: %s", err)
 	}
 
-	if err := d.Set("target_failover", []interface{}{flattenTargetGroupTargetFailoverAttributes(attributes, protocol)}); err != nil {
+	if err := d.Set("target_failover", fix2517(flattenTargetGroupTargetFailoverAttributes(attributes, protocol))); err != nil {
 		return sdkdiag.AppendErrorf(diags, "setting target_failover: %s", err)
 	}
 
-	if err := d.Set("target_health_state", []interface{}{flattenTargetGroupTargetHealthStateAttributes(attributes, protocol)}); err != nil {
+	if err := d.Set("target_health_state", fix2517(flattenTargetGroupTargetHealthStateAttributes(attributes, protocol))); err != nil {
 		return sdkdiag.AppendErrorf(diags, "setting target_health_state: %s", err)
 	}
 
@@ -1346,3 +1346,13 @@ func targetGroupRuntimeValidation(d *schema.ResourceData, diags *diag.Diagnostic
 		}
 	}
 }
+
+// Workaround for https://github.com/pulumi/pulumi-aws/issues/2517
+//
+// Don't return single empty map. Return empty list instead.
+func fix2517(m map[string]interface{}) []interface{} {
+	if len(m) == 0 {
+		return []interface{}{}
+	}
+	return []interface{}{m}
+}
