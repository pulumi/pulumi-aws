From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anton Tayanovskyy <anton@pulumi.com>
Date: Wed, 6 Dec 2023 23:44:25 -0500
Subject: [PATCH 33/33] DisableTagSchemaCheck for PF provider


diff --git a/internal/provider/fwprovider/provider.go b/internal/provider/fwprovider/provider.go
index acde512855..f277744dbf 100644
--- a/internal/provider/fwprovider/provider.go
+++ b/internal/provider/fwprovider/provider.go
@@ -408,8 +408,7 @@ func (p *fwprovider) Resources(ctx context.Context) []func() resource.Resource {
 			if v.Tags != nil {
 				// The resource has opted in to transparent tagging.
 				// Ensure that the schema look OK.
-				schemaResponse := resource.SchemaResponse{}
-				inner.Schema(ctx, resource.SchemaRequest{}, &schemaResponse)
+				schemaResponse := schemaResponseForTagsChecking(ctx, inner)
 
 				if v, ok := schemaResponse.Schema.Attributes[names.AttrTags]; ok {
 					if v.IsComputed() {
diff --git a/internal/provider/fwprovider/provider_tagscheck.go b/internal/provider/fwprovider/provider_tagscheck.go
new file mode 100644
index 0000000000..f790acb4e2
--- /dev/null
+++ b/internal/provider/fwprovider/provider_tagscheck.go
@@ -0,0 +1,43 @@
+package fwprovider
+
+import (
+	"context"
+
+	"github.com/hashicorp/terraform-plugin-framework/resource"
+	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
+
+	"github.com/hashicorp/terraform-provider-aws/names"
+)
+
+type disableTagsSchemaCheckKey struct{}
+
+func DisableTagSchemaCheck(ctx context.Context) context.Context {
+	return context.WithValue(ctx, disableTagsSchemaCheckKey{}, true)
+}
+
+func schemaResponseForTagsChecking(
+	ctx context.Context,
+	r resource.ResourceWithConfigure,
+) *resource.SchemaResponse {
+	flag := ctx.Value(disableTagsSchemaCheckKey{})
+	switch flag := flag.(type) {
+	case bool:
+		if flag {
+			return &resource.SchemaResponse{
+				Schema: schema.Schema{
+					Attributes: map[string]schema.Attribute{
+						names.AttrTags: schema.MapAttribute{
+							Computed: true,
+						},
+						names.AttrTagsAll: schema.MapAttribute{
+							Computed: false,
+						},
+					},
+				},
+			}
+		}
+	}
+	var resp resource.SchemaResponse
+	r.Schema(ctx, resource.SchemaRequest{}, &resp)
+	return &resp
+}
diff --git a/shim/shim.go b/shim/shim.go
index 00297dbe77..9ef51a5245 100644
--- a/shim/shim.go
+++ b/shim/shim.go
@@ -18,6 +18,7 @@ type UpstreamProvider struct {
 }
 
 func NewUpstreamProvider(ctx context.Context) (UpstreamProvider, error) {
+	ctx = fwprovider.DisableTagSchemaCheck(ctx)
 	primary, err := provider.New(provider.DisableTagSchemaCheck(ctx))
 	if err != nil {
 		return UpstreamProvider{}, err
