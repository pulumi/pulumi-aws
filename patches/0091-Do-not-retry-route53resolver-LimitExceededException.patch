From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anton Tayanovskyy <anton@pulumi.com>
Date: Fri, 28 Mar 2025 10:11:28 -0400
Subject: [PATCH] Do not retry route53resolver LimitExceededException


diff --git a/internal/service/route53resolver/service_package_extra_options.go b/internal/service/route53resolver/service_package_extra_options.go
new file mode 100644
index 0000000000..e35a2237a4
--- /dev/null
+++ b/internal/service/route53resolver/service_package_extra_options.go
@@ -0,0 +1,49 @@
+package route53resolver
+
+import (
+	"context"
+	"errors"
+
+	aws_sdkv2 "github.com/aws/aws-sdk-go-v2/aws"
+	retry_sdkv2 "github.com/aws/aws-sdk-go-v2/aws/retry"
+	"github.com/aws/aws-sdk-go-v2/service/route53resolver"
+	smithy "github.com/aws/smithy-go"
+	"github.com/hashicorp/terraform-provider-aws/internal/conns"
+)
+
+// service_package_gen.go is a generated file but the behavior can be extended in another file by defining this
+// function which NewClient will call. Use this to customize error retries.
+func (p *servicePackage) withExtraOptions(
+	ctx context.Context,
+	config map[string]any,
+) []func(*route53resolver.Options) {
+	retryer := findRetryer(config)
+	return []func(*route53resolver.Options){func(o *route53resolver.Options) {
+		o.Retryer = conns.AddIsErrorRetryables(retryer, doNotRetryLimitExceededException())
+	}}
+
+}
+
+func findRetryer(config map[string]any) aws_sdkv2.RetryerV2 {
+	var retryer aws_sdkv2.RetryerV2
+	if cfg, ok := config["aws_sdkv2_config"]; ok {
+		if cfgp, ok := cfg.(*aws_sdkv2.Config); ok {
+			if r, ok := cfgp.Retryer().(aws_sdkv2.RetryerV2); ok {
+				retryer = r
+			}
+		}
+	}
+	return retryer
+}
+
+func doNotRetryLimitExceededException() retry_sdkv2.IsErrorRetryable {
+	return retry_sdkv2.IsErrorRetryableFunc(func(err error) aws_sdkv2.Ternary {
+		var smithyErr smithy.APIError
+		if ok := errors.As(err, &smithyErr); ok {
+			if smithyErr.ErrorCode() == "LimitExceededException" {
+				return aws_sdkv2.FalseTernary
+			}
+		}
+		return aws_sdkv2.UnknownTernary // Delegate to the configured Retryer.
+	})
+}
