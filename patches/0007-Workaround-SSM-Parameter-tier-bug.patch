From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Bradley <daniel@pulumi.com>
Date: Fri, 4 Nov 2022 17:24:42 +0000
Subject: [PATCH 07/48] Workaround SSM Parameter tier bug

- Disable "computed".
- Disable diff suppression & counteractions

diff --git a/internal/service/ssm/parameter.go b/internal/service/ssm/parameter.go
index 4b267ceccb..b47638308f 100644
--- a/internal/service/ssm/parameter.go
+++ b/internal/service/ssm/parameter.go
@@ -95,15 +95,17 @@ func ResourceParameter() *schema.Resource {
 			names.AttrTags:    tftags.TagsSchema(),
 			names.AttrTagsAll: tftags.TagsSchemaComputed(),
 			"tier": {
-				Type:         schema.TypeString,
-				Optional:     true,
-				Computed:     true,
+				Type:     schema.TypeString,
+				Optional: true,
+				//Computed:     true,
+				Default:      ssm.ParameterTierStandard,
 				ValidateFunc: validation.StringInSlice(ssm.ParameterTier_Values(), false),
 				DiffSuppressFunc: func(k, old, new string, d *schema.ResourceData) bool {
-					if old != "" {
-						return new == ssm.ParameterTierIntelligentTiering
-					}
-					return false
+					return d.Get("tier").(string) == ssm.ParameterTierIntelligentTiering
+					//if old != "" {
+					//	return new == ssm.ParameterTierIntelligentTiering
+					//}
+					//return false
 				},
 			},
 			"type": {
@@ -319,11 +321,13 @@ func resourceParameterUpdate(ctx context.Context, d *schema.ResourceData, meta i
 			AllowedPattern: aws.String(d.Get("allowed_pattern").(string)),
 		}
 
+		// FORK: Stack72 to undo this Tier comment out below when associated bridge issue is solved
+
 		// Retrieve the value set in the config directly to counteract the DiffSuppressFunc above
-		tier := d.GetRawConfig().GetAttr("tier")
-		if tier.IsKnown() && !tier.IsNull() {
-			paramInput.Tier = aws.String(tier.AsString())
-		}
+		//tier := d.GetRawConfig().GetAttr("tier")
+		//if tier.IsKnown() && !tier.IsNull() {
+		//	paramInput.Tier = aws.String(tier.AsString())
+		//}
 
 		if d.HasChange("data_type") {
 			paramInput.DataType = aws.String(d.Get("data_type").(string))
