From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anton Tayanovskyy <anton@pulumi.com>
Date: Wed, 7 Feb 2024 12:24:44 -0500
Subject: [PATCH] Fix tags_all Computed for PF resources


diff --git a/internal/service/amp/scraper.go b/internal/service/amp/scraper.go
index b6d8c71ef73..f78c4502b0e 100644
--- a/internal/service/amp/scraper.go
+++ b/internal/service/amp/scraper.go
@@ -84,7 +84,7 @@ func (r *scraperResource) Schema(ctx context.Context, req resource.SchemaRequest
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrDestination: schema.ListNestedBlock{
diff --git a/internal/service/bedrock/custom_model.go b/internal/service/bedrock/custom_model.go
index daba31c85d1..8ce47d77205 100644
--- a/internal/service/bedrock/custom_model.go
+++ b/internal/service/bedrock/custom_model.go
@@ -136,7 +136,7 @@ func (r *customModelResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:       tftags.TagsAttribute(),
-			names.AttrTagsAll:    tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll:    tftags.TagsAttribute(),
 			"training_metrics":   framework.ResourceComputedListOfObjectAttribute[trainingMetricsModel](ctx),
 			"validation_metrics": framework.ResourceComputedListOfObjectAttribute[validatorMetricModel](ctx),
 		},
diff --git a/internal/service/codeguruprofiler/profiling_group.go b/internal/service/codeguruprofiler/profiling_group.go
index 6e8d8de302c..af481272426 100644
--- a/internal/service/codeguruprofiler/profiling_group.go
+++ b/internal/service/codeguruprofiler/profiling_group.go
@@ -73,7 +73,7 @@ func (r *resourceProfilingGroup) Schema(ctx context.Context, req resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"agent_orchestration_config": schema.ListNestedBlock{
diff --git a/internal/service/elasticache/serverless_cache.go b/internal/service/elasticache/serverless_cache.go
index bb7f36bf1ea..fe8ed6366b7 100644
--- a/internal/service/elasticache/serverless_cache.go
+++ b/internal/service/elasticache/serverless_cache.go
@@ -181,7 +181,7 @@ func (r *serverlessCacheResource) Schema(ctx context.Context, request resource.S
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"user_group_id": schema.StringAttribute{
 				Optional: true,
 			},
diff --git a/internal/service/rekognition/collection.go b/internal/service/rekognition/collection.go
index a9bb3bb3278..9f68386f3a8 100644
--- a/internal/service/rekognition/collection.go
+++ b/internal/service/rekognition/collection.go
@@ -77,7 +77,7 @@ func (r *resourceCollection) Schema(ctx context.Context, req resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 
diff --git a/internal/service/securityhub/automation_rule.go b/internal/service/securityhub/automation_rule.go
index 979de8b5bd9..4c1f5dc7065 100644
--- a/internal/service/securityhub/automation_rule.go
+++ b/internal/service/securityhub/automation_rule.go
@@ -78,7 +78,7 @@ func (r *automationRuleResource) Schema(ctx context.Context, request resource.Sc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrActions: schema.SetNestedBlock{
diff --git a/internal/service/securitylake/data_lake.go b/internal/service/securitylake/data_lake.go
index 2a36dacdc97..56e99b5bc80 100644
--- a/internal/service/securitylake/data_lake.go
+++ b/internal/service/securitylake/data_lake.go
@@ -75,7 +75,7 @@ func (r *dataLakeResource) Schema(ctx context.Context, request resource.SchemaRe
 			},
 			"s3_bucket_arn":   framework.ARNAttributeComputedOnly(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrConfiguration: schema.ListNestedBlock{
diff --git a/internal/service/ssmcontacts/rotation.go b/internal/service/ssmcontacts/rotation.go
index 11948143a78..e8f145f886b 100644
--- a/internal/service/ssmcontacts/rotation.go
+++ b/internal/service/ssmcontacts/rotation.go
@@ -72,7 +72,7 @@ func (r *resourceRotation) Schema(ctx context.Context, request resource.SchemaRe
 				Optional:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"time_zone_id": schema.StringAttribute{
 				Required: true,
 			},
diff --git a/internal/service/ssoadmin/application.go b/internal/service/ssoadmin/application.go
index 63a02f6ed6b..ae5c3b3b8a4 100644
--- a/internal/service/ssoadmin/application.go
+++ b/internal/service/ssoadmin/application.go
@@ -96,7 +96,7 @@ func (r *resourceApplication) Schema(ctx context.Context, req resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"portal_options": schema.ListNestedBlock{
diff --git a/internal/service/ssoadmin/trusted_token_issuer.go b/internal/service/ssoadmin/trusted_token_issuer.go
index 2d53c30eb35..cac1815b0f9 100644
--- a/internal/service/ssoadmin/trusted_token_issuer.go
+++ b/internal/service/ssoadmin/trusted_token_issuer.go
@@ -86,7 +86,7 @@ func (r *resourceTrustedTokenIssuer) Schema(ctx context.Context, req resource.Sc
 			},
 
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"trusted_token_issuer_configuration": schema.ListNestedBlock{
