From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: corymhall <43035978+corymhall@users.noreply.github.com>
Date: Fri, 18 Apr 2025 11:13:45 -0400
Subject: [PATCH] Apply tags patches


diff --git a/internal/provider/fwprovider/provider.go b/internal/provider/fwprovider/provider.go
index 717d7f2f54..e571e489a4 100644
--- a/internal/provider/fwprovider/provider.go
+++ b/internal/provider/fwprovider/provider.go
@@ -421,8 +421,8 @@ func (p *fwprovider) Resources(ctx context.Context) []func() resource.Resource {
 					continue
 				}
 				if v, ok := schemaResponse.Schema.Attributes[names.AttrTagsAll]; ok {
-					if !v.IsComputed() {
-						errs = append(errs, fmt.Errorf("`%s` attribute must be Computed: %s", names.AttrTagsAll, typeName))
+					if v.IsComputed() {
+						errs = append(errs, fmt.Errorf("`%s` attribute must not be Computed: %s", names.AttrTagsAll, typeName))
 						continue
 					}
 				} else {
diff --git a/internal/service/amp/scraper.go b/internal/service/amp/scraper.go
index 1e7b516880..a0e509ab99 100644
--- a/internal/service/amp/scraper.go
+++ b/internal/service/amp/scraper.go
@@ -76,7 +76,7 @@ func (r *scraperResource) Schema(ctx context.Context, request resource.SchemaReq
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrDestination: schema.ListNestedBlock{
diff --git a/internal/service/apigateway/domain_name_access_association.go b/internal/service/apigateway/domain_name_access_association.go
index b846a7e19b..62293d1324 100644
--- a/internal/service/apigateway/domain_name_access_association.go
+++ b/internal/service/apigateway/domain_name_access_association.go
@@ -71,7 +71,7 @@ func (r *domainNameAccessAssociationResource) Schema(ctx context.Context, reques
 			},
 			names.AttrID:      framework.IDAttributeDeprecatedWithAlternate(path.Root(names.AttrARN)),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/appconfig/environment.go b/internal/service/appconfig/environment.go
index 387ec284ef..0be585776b 100644
--- a/internal/service/appconfig/environment.go
+++ b/internal/service/appconfig/environment.go
@@ -85,7 +85,7 @@ func (r *environmentResource) Schema(ctx context.Context, request resource.Schem
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"monitor": schema.SetNestedBlock{
diff --git a/internal/service/appfabric/app_authorization.go b/internal/service/appfabric/app_authorization.go
index a57e8f07cf..71a3d5b387 100644
--- a/internal/service/appfabric/app_authorization.go
+++ b/internal/service/appfabric/app_authorization.go
@@ -105,7 +105,7 @@ func (r *appAuthorizationResource) Schema(ctx context.Context, request resource.
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"updated_at": schema.StringAttribute{
 				CustomType: timetypes.RFC3339Type{},
 				Computed:   true,
diff --git a/internal/service/appfabric/app_bundle.go b/internal/service/appfabric/app_bundle.go
index 601ff93cc8..e9ccb2fa37 100644
--- a/internal/service/appfabric/app_bundle.go
+++ b/internal/service/appfabric/app_bundle.go
@@ -57,7 +57,7 @@ func (r *appBundleResource) Schema(ctx context.Context, request resource.SchemaR
 			},
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/appfabric/ingestion.go b/internal/service/appfabric/ingestion.go
index 1105abeaec..365d8275f8 100644
--- a/internal/service/appfabric/ingestion.go
+++ b/internal/service/appfabric/ingestion.go
@@ -77,7 +77,7 @@ func (r *ingestionResource) Schema(ctx context.Context, request resource.SchemaR
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"tenant_id": schema.StringAttribute{
 				Required: true,
 				Validators: []validator.String{
diff --git a/internal/service/appfabric/ingestion_destination.go b/internal/service/appfabric/ingestion_destination.go
index faebd921b1..990c090077 100644
--- a/internal/service/appfabric/ingestion_destination.go
+++ b/internal/service/appfabric/ingestion_destination.go
@@ -81,7 +81,7 @@ func (r *ingestionDestinationResource) Schema(ctx context.Context, request resou
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"destination_configuration": schema.ListNestedBlock{
diff --git a/internal/service/athena/capacity_reservation.go b/internal/service/athena/capacity_reservation.go
index 8d4fe30cb1..d327ce048c 100644
--- a/internal/service/athena/capacity_reservation.go
+++ b/internal/service/athena/capacity_reservation.go
@@ -69,7 +69,7 @@ func (r *resourceCapacityReservation) Schema(ctx context.Context, req resource.S
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"target_dpus": schema.Int32Attribute{
 				Required: true,
 				Validators: []validator.Int32{
diff --git a/internal/service/auditmanager/assessment.go b/internal/service/auditmanager/assessment.go
index d7100e8193..e8139a048a 100644
--- a/internal/service/auditmanager/assessment.go
+++ b/internal/service/auditmanager/assessment.go
@@ -91,7 +91,7 @@ func (r *resourceAssessment) Schema(ctx context.Context, req resource.SchemaRequ
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"assessment_reports_destination": schema.ListNestedBlock{
diff --git a/internal/service/auditmanager/control.go b/internal/service/auditmanager/control.go
index a92da515fe..5aca63a43e 100644
--- a/internal/service/auditmanager/control.go
+++ b/internal/service/auditmanager/control.go
@@ -63,7 +63,7 @@ func (r *resourceControl) Schema(ctx context.Context, req resource.SchemaRequest
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"testing_information": schema.StringAttribute{
 				Optional: true,
 			},
diff --git a/internal/service/auditmanager/framework.go b/internal/service/auditmanager/framework.go
index 0e92b05365..08051ccf5e 100644
--- a/internal/service/auditmanager/framework.go
+++ b/internal/service/auditmanager/framework.go
@@ -65,7 +65,7 @@ func (r *resourceFramework) Schema(ctx context.Context, req resource.SchemaReque
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"control_sets": schema.SetNestedBlock{
diff --git a/internal/service/backup/logically_air_gapped_vault.go b/internal/service/backup/logically_air_gapped_vault.go
index b5ee4980fd..014b28470e 100644
--- a/internal/service/backup/logically_air_gapped_vault.go
+++ b/internal/service/backup/logically_air_gapped_vault.go
@@ -84,7 +84,7 @@ func (r *logicallyAirGappedVaultResource) Schema(ctx context.Context, request re
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/backup/restore_testing_plan.go b/internal/service/backup/restore_testing_plan.go
index e19d23122a..550c9fa3da 100644
--- a/internal/service/backup/restore_testing_plan.go
+++ b/internal/service/backup/restore_testing_plan.go
@@ -85,7 +85,7 @@ func (r *restoreTestingPlanResource) Schema(ctx context.Context, request resourc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"recovery_point_selection": schema.ListNestedBlock{
diff --git a/internal/service/batch/job_queue.go b/internal/service/batch/job_queue.go
index 1b99732c45..0ee48b941b 100644
--- a/internal/service/batch/job_queue.go
+++ b/internal/service/batch/job_queue.go
@@ -93,7 +93,7 @@ func (r *jobQueueResource) Schema(ctx context.Context, request resource.SchemaRe
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/batch/job_queue_migrate.go b/internal/service/batch/job_queue_migrate.go
index 3d442ce442..d4c8454958 100644
--- a/internal/service/batch/job_queue_migrate.go
+++ b/internal/service/batch/job_queue_migrate.go
@@ -39,7 +39,7 @@ func jobQueueSchema0(ctx context.Context) schema.Schema {
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/bcmdataexports/export.go b/internal/service/bcmdataexports/export.go
index 7614e5e3f8..d3151199f4 100644
--- a/internal/service/bcmdataexports/export.go
+++ b/internal/service/bcmdataexports/export.go
@@ -166,7 +166,7 @@ func (r *resourceExport) Schema(ctx context.Context, req resource.SchemaRequest,
 		Attributes: map[string]schema.Attribute{
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"export": schema.ListNestedBlock{
diff --git a/internal/service/bedrock/custom_model.go b/internal/service/bedrock/custom_model.go
index 8ceb2c254c..c0dd56e718 100644
--- a/internal/service/bedrock/custom_model.go
+++ b/internal/service/bedrock/custom_model.go
@@ -135,7 +135,7 @@ func (r *customModelResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:       tftags.TagsAttribute(),
-			names.AttrTagsAll:    tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll:    tftags.TagsAttribute(),
 			"training_metrics":   framework.ResourceComputedListOfObjectsAttribute[trainingMetricsModel](ctx),
 			"validation_metrics": framework.ResourceComputedListOfObjectsAttribute[validatorMetricModel](ctx),
 		},
diff --git a/internal/service/bedrock/guardrail.go b/internal/service/bedrock/guardrail.go
index 7572fb3a8c..f6b7c760e8 100644
--- a/internal/service/bedrock/guardrail.go
+++ b/internal/service/bedrock/guardrail.go
@@ -118,7 +118,7 @@ func (r *resourceGuardrail) Schema(ctx context.Context, req resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVersion: schema.StringAttribute{
 				Computed: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/bedrock/inference_profile.go b/internal/service/bedrock/inference_profile.go
index d845419991..09e450421a 100644
--- a/internal/service/bedrock/inference_profile.go
+++ b/internal/service/bedrock/inference_profile.go
@@ -115,7 +115,7 @@ func (r *resourceInferenceProfile) Schema(ctx context.Context, req resource.Sche
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"model_source": schema.ListNestedBlock{
diff --git a/internal/service/bedrock/provisioned_model_throughput.go b/internal/service/bedrock/provisioned_model_throughput.go
index 80b20ee4a0..9b6c6952d3 100644
--- a/internal/service/bedrock/provisioned_model_throughput.go
+++ b/internal/service/bedrock/provisioned_model_throughput.go
@@ -82,7 +82,7 @@ func (r *resourceProvisionedModelThroughput) Schema(ctx context.Context, request
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/bedrockagent/agent.go b/internal/service/bedrockagent/agent.go
index 6c712905f0..0a6e4d03a6 100644
--- a/internal/service/bedrockagent/agent.go
+++ b/internal/service/bedrockagent/agent.go
@@ -155,7 +155,7 @@ func (r *agentResource) Schema(ctx context.Context, request resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/bedrockagent/agent_alias.go b/internal/service/bedrockagent/agent_alias.go
index 7537fb953a..74b9fcf403 100644
--- a/internal/service/bedrockagent/agent_alias.go
+++ b/internal/service/bedrockagent/agent_alias.go
@@ -93,7 +93,7 @@ func (r *agentAliasResource) Schema(ctx context.Context, request resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/bedrockagent/knowledge_base.go b/internal/service/bedrockagent/knowledge_base.go
index 9fa97250f9..ce80d13571 100644
--- a/internal/service/bedrockagent/knowledge_base.go
+++ b/internal/service/bedrockagent/knowledge_base.go
@@ -85,7 +85,7 @@ func (r *knowledgeBaseResource) Schema(ctx context.Context, request resource.Sch
 				Required:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"updated_at": schema.StringAttribute{
 				CustomType: timetypes.RFC3339Type{},
 				Computed:   true,
diff --git a/internal/service/chatbot/slack_channel_configuration.go b/internal/service/chatbot/slack_channel_configuration.go
index deee388f6e..9ea984e5b2 100644
--- a/internal/service/chatbot/slack_channel_configuration.go
+++ b/internal/service/chatbot/slack_channel_configuration.go
@@ -101,7 +101,7 @@ func (r *slackChannelConfigurationResource) Schema(ctx context.Context, request
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"user_authorization_required": schema.BoolAttribute{
 				Optional: true,
 				Computed: true,
diff --git a/internal/service/chatbot/teams_channel_configuration.go b/internal/service/chatbot/teams_channel_configuration.go
index b054becb89..06c278fdb0 100644
--- a/internal/service/chatbot/teams_channel_configuration.go
+++ b/internal/service/chatbot/teams_channel_configuration.go
@@ -98,7 +98,7 @@ func (r *teamsChannelConfigurationResource) Schema(ctx context.Context, request
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"team_id": schema.StringAttribute{
 				Required: true,
 			},
diff --git a/internal/service/cleanrooms/membership.go b/internal/service/cleanrooms/membership.go
index 1fa5d36703..52ae08c582 100644
--- a/internal/service/cleanrooms/membership.go
+++ b/internal/service/cleanrooms/membership.go
@@ -111,7 +111,7 @@ func (r *resourceMembership) Schema(ctx context.Context, _ resource.SchemaReques
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"update_time": schema.StringAttribute{
 				CustomType: timetypes.RFC3339Type{},
 				Computed:   true,
diff --git a/internal/service/cloudfront/vpc_origin.go b/internal/service/cloudfront/vpc_origin.go
index 5e997ee4b7..defec04a64 100644
--- a/internal/service/cloudfront/vpc_origin.go
+++ b/internal/service/cloudfront/vpc_origin.go
@@ -56,7 +56,7 @@ func (r *vpcOriginResource) Schema(ctx context.Context, request resource.SchemaR
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"vpc_origin_endpoint_config": schema.ListNestedBlock{
diff --git a/internal/service/cloudwatch/contributor_insight_rule.go b/internal/service/cloudwatch/contributor_insight_rule.go
index 8e077de1e9..a4318698d4 100644
--- a/internal/service/cloudwatch/contributor_insight_rule.go
+++ b/internal/service/cloudwatch/contributor_insight_rule.go
@@ -62,7 +62,7 @@ func (r *resourceContributorInsightRule) Schema(ctx context.Context, req resourc
 				CustomType: fwtypes.StringEnumType[stateValue](),
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/cloudwatch/contributor_managed_insight_rule.go b/internal/service/cloudwatch/contributor_managed_insight_rule.go
index b4e1a4de14..ff346c07ec 100644
--- a/internal/service/cloudwatch/contributor_managed_insight_rule.go
+++ b/internal/service/cloudwatch/contributor_managed_insight_rule.go
@@ -85,7 +85,7 @@ func (r *resourceContributorManagedInsightRule) Schema(ctx context.Context, req
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/codeconnections/connection.go b/internal/service/codeconnections/connection.go
index df5fb0bc14..8d249e28b0 100644
--- a/internal/service/codeconnections/connection.go
+++ b/internal/service/codeconnections/connection.go
@@ -104,7 +104,7 @@ func (r *connectionResource) Schema(ctx context.Context, req resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/codeconnections/host.go b/internal/service/codeconnections/host.go
index 1a07f8a48f..487966f1d2 100644
--- a/internal/service/codeconnections/host.go
+++ b/internal/service/codeconnections/host.go
@@ -83,7 +83,7 @@ func (r *hostResource) Schema(ctx context.Context, req resource.SchemaRequest, r
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrVPCConfiguration: schema.ListNestedBlock{
diff --git a/internal/service/codeguruprofiler/profiling_group.go b/internal/service/codeguruprofiler/profiling_group.go
index ba3d204d75..b16fc33f0b 100644
--- a/internal/service/codeguruprofiler/profiling_group.go
+++ b/internal/service/codeguruprofiler/profiling_group.go
@@ -69,7 +69,7 @@ func (r *resourceProfilingGroup) Schema(ctx context.Context, req resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"agent_orchestration_config": schema.ListNestedBlock{
diff --git a/internal/service/datazone/domain.go b/internal/service/datazone/domain.go
index 4a1d1122a0..c0eb374ec5 100644
--- a/internal/service/datazone/domain.go
+++ b/internal/service/datazone/domain.go
@@ -93,7 +93,7 @@ func (r *resourceDomain) Schema(ctx context.Context, req resource.SchemaRequest,
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"single_sign_on": schema.ListNestedBlock{
diff --git a/internal/service/docdbelastic/cluster.go b/internal/service/docdbelastic/cluster.go
index 2d0c9e9114..1834e8e258 100644
--- a/internal/service/docdbelastic/cluster.go
+++ b/internal/service/docdbelastic/cluster.go
@@ -143,7 +143,7 @@ func (r *resourceCluster) Schema(ctx context.Context, _ resource.SchemaRequest,
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVPCSecurityGroupIDs: schema.SetAttribute{
 				CustomType: fwtypes.SetOfStringType,
 				Optional:   true,
diff --git a/internal/service/drs/replication_configuration_template.go b/internal/service/drs/replication_configuration_template.go
index 1046d96871..3f8448d649 100644
--- a/internal/service/drs/replication_configuration_template.go
+++ b/internal/service/drs/replication_configuration_template.go
@@ -99,7 +99,7 @@ func (r *replicationConfigurationTemplateResource) Schema(ctx context.Context, r
 
 			"staging_area_tags": tftags.TagsAttributeRequired(),
 			names.AttrTags:      tftags.TagsAttribute(),
-			names.AttrTagsAll:   tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 
 			"use_dedicated_replication_server": schema.BoolAttribute{
 				Required: true,
diff --git a/internal/service/ec2/ec2_capacity_block_reservation.go b/internal/service/ec2/ec2_capacity_block_reservation.go
index 2dc713e4eb..9a7973fba8 100644
--- a/internal/service/ec2/ec2_capacity_block_reservation.go
+++ b/internal/service/ec2/ec2_capacity_block_reservation.go
@@ -142,7 +142,7 @@ func (r *capacityBlockReservationResource) Schema(ctx context.Context, _ resourc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"tenancy": schema.StringAttribute{
 				Computed: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/ec2/ec2_instance_connect_endpoint.go b/internal/service/ec2/ec2_instance_connect_endpoint.go
index c18a27c103..caf5b73210 100644
--- a/internal/service/ec2/ec2_instance_connect_endpoint.go
+++ b/internal/service/ec2/ec2_instance_connect_endpoint.go
@@ -114,7 +114,7 @@ func (r *instanceConnectEndpointResource) Schema(ctx context.Context, req resour
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVPCID: schema.StringAttribute{
 				Computed: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/ec2/vpc_block_public_access_exclusion.go b/internal/service/ec2/vpc_block_public_access_exclusion.go
index 0dde8cfc90..56c79690c3 100644
--- a/internal/service/ec2/vpc_block_public_access_exclusion.go
+++ b/internal/service/ec2/vpc_block_public_access_exclusion.go
@@ -67,7 +67,7 @@ func (r *vpcBlockPublicAccessExclusionResource) Schema(ctx context.Context, requ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVPCID: schema.StringAttribute{
 				Optional: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/ec2/vpc_security_group_ingress_rule.go b/internal/service/ec2/vpc_security_group_ingress_rule.go
index 6b991afb0a..133991c9aa 100644
--- a/internal/service/ec2/vpc_security_group_ingress_rule.go
+++ b/internal/service/ec2/vpc_security_group_ingress_rule.go
@@ -225,7 +225,7 @@ func (r *securityGroupRuleResource) Schema(ctx context.Context, request resource
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"to_port": schema.Int64Attribute{
 				Optional: true,
 				Validators: []validator.Int64{
diff --git a/internal/service/eks/pod_identity_association.go b/internal/service/eks/pod_identity_association.go
index 58e5a9fa34..3c1c3ca6d0 100644
--- a/internal/service/eks/pod_identity_association.go
+++ b/internal/service/eks/pod_identity_association.go
@@ -101,7 +101,7 @@ func (r *podIdentityAssociationResource) Schema(ctx context.Context, req resourc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/elasticache/reserved_cache_node.go b/internal/service/elasticache/reserved_cache_node.go
index 75afcdc027..1f054798ed 100644
--- a/internal/service/elasticache/reserved_cache_node.go
+++ b/internal/service/elasticache/reserved_cache_node.go
@@ -109,7 +109,7 @@ func (r *resourceReservedCacheNode) Schema(ctx context.Context, request resource
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"usage_price": schema.Float64Attribute{
 				Computed: true,
 			},
diff --git a/internal/service/elasticache/serverless_cache.go b/internal/service/elasticache/serverless_cache.go
index cc5c312598..f453619c2c 100644
--- a/internal/service/elasticache/serverless_cache.go
+++ b/internal/service/elasticache/serverless_cache.go
@@ -181,7 +181,7 @@ func (r *serverlessCacheResource) Schema(ctx context.Context, request resource.S
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"user_group_id": schema.StringAttribute{
 				Optional: true,
 			},
diff --git a/internal/service/fms/resource_set.go b/internal/service/fms/resource_set.go
index 5670f96828..7e1473b0f7 100644
--- a/internal/service/fms/resource_set.go
+++ b/internal/service/fms/resource_set.go
@@ -101,7 +101,7 @@ func (r *resourceResourceSet) Schema(ctx context.Context, req resource.SchemaReq
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrARN:     framework.ARNAttributeComputedOnly(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"resource_set": resourceSetLNB,
diff --git a/internal/service/globalaccelerator/cross_account_attachment.go b/internal/service/globalaccelerator/cross_account_attachment.go
index 98d394572c..efa2142397 100644
--- a/internal/service/globalaccelerator/cross_account_attachment.go
+++ b/internal/service/globalaccelerator/cross_account_attachment.go
@@ -68,7 +68,7 @@ func (r *crossAccountAttachmentResource) Schema(ctx context.Context, request res
 				ElementType: types.StringType,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"resource": schema.SetNestedBlock{
diff --git a/internal/service/guardduty/malware_protection_plan.go b/internal/service/guardduty/malware_protection_plan.go
index 3d58b61b78..9fc9eeb030 100644
--- a/internal/service/guardduty/malware_protection_plan.go
+++ b/internal/service/guardduty/malware_protection_plan.go
@@ -85,7 +85,7 @@ func (r *resourceMalwareProtectionPlan) Schema(ctx context.Context, req resource
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"protected_resource": schema.ListNestedBlock{
diff --git a/internal/service/imagebuilder/lifecycle_policy.go b/internal/service/imagebuilder/lifecycle_policy.go
index 3af7466167..cec5d52e0b 100644
--- a/internal/service/imagebuilder/lifecycle_policy.go
+++ b/internal/service/imagebuilder/lifecycle_policy.go
@@ -85,7 +85,7 @@ func (r *lifecyclePolicyResource) Schema(ctx context.Context, request resource.S
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"policy_detail": schema.SetNestedBlock{
diff --git a/internal/service/iot/billing_group.go b/internal/service/iot/billing_group.go
index d5c83e14d9..a9bddf5773 100644
--- a/internal/service/iot/billing_group.go
+++ b/internal/service/iot/billing_group.go
@@ -71,7 +71,7 @@ func (r *resourceBillingGroup) Schema(ctx context.Context, request resource.Sche
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVersion: schema.Int64Attribute{
 				Computed: true,
 			},
diff --git a/internal/service/lexv2models/bot.go b/internal/service/lexv2models/bot.go
index a97ae5a1e3..c8bd13c6d7 100644
--- a/internal/service/lexv2models/bot.go
+++ b/internal/service/lexv2models/bot.go
@@ -78,7 +78,7 @@ func (r *resourceBot) Schema(ctx context.Context, req resource.SchemaRequest, re
 				Required:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"test_bot_alias_tags": schema.MapAttribute{
 				ElementType: types.StringType,
 				Optional:    true,
diff --git a/internal/service/logs/anomaly_detector.go b/internal/service/logs/anomaly_detector.go
index d69e4e44c8..d1a6eae711 100644
--- a/internal/service/logs/anomaly_detector.go
+++ b/internal/service/logs/anomaly_detector.go
@@ -85,7 +85,7 @@ func (r *anomalyDetectorResource) Schema(ctx context.Context, request resource.S
 				ElementType: types.StringType,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/logs/delivery.go b/internal/service/logs/delivery.go
index d749138f74..29e6891331 100644
--- a/internal/service/logs/delivery.go
+++ b/internal/service/logs/delivery.go
@@ -93,7 +93,7 @@ func (r *deliveryResource) Schema(ctx context.Context, request resource.SchemaRe
 			},
 			"s3_delivery_configuration": framework.ResourceOptionalComputedListOfObjectsAttribute[s3DeliveryConfigurationModel](ctx, 1, s3DeliveryConfigurationListOptions, listplanmodifier.UseStateForUnknown()),
 			names.AttrTags:              tftags.TagsAttribute(),
-			names.AttrTagsAll:           tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll:           tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/logs/delivery_destination.go b/internal/service/logs/delivery_destination.go
index 5eb2035058..e48697cc2f 100644
--- a/internal/service/logs/delivery_destination.go
+++ b/internal/service/logs/delivery_destination.go
@@ -69,7 +69,7 @@ func (r *deliveryDestinationResource) Schema(ctx context.Context, request resour
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"delivery_destination_configuration": schema.ListNestedBlock{
diff --git a/internal/service/logs/delivery_source.go b/internal/service/logs/delivery_source.go
index 3b172ef95a..16b9173d00 100644
--- a/internal/service/logs/delivery_source.go
+++ b/internal/service/logs/delivery_source.go
@@ -83,7 +83,7 @@ func (r *deliverySourceResource) Schema(ctx context.Context, request resource.Sc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/m2/application.go b/internal/service/m2/application.go
index 8f7232da00..a6c940b3f8 100644
--- a/internal/service/m2/application.go
+++ b/internal/service/m2/application.go
@@ -101,7 +101,7 @@ func (r *applicationResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"definition": schema.ListNestedBlock{
diff --git a/internal/service/m2/environment.go b/internal/service/m2/environment.go
index 5811a6d41a..7927c04604 100644
--- a/internal/service/m2/environment.go
+++ b/internal/service/m2/environment.go
@@ -170,7 +170,7 @@ func (r *environmentResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"high_availability_config": schema.ListNestedBlock{
diff --git a/internal/service/mediapackagev2/channel_group.go b/internal/service/mediapackagev2/channel_group.go
index c945c0140f..151fab8454 100644
--- a/internal/service/mediapackagev2/channel_group.go
+++ b/internal/service/mediapackagev2/channel_group.go
@@ -66,7 +66,7 @@ func (r *resourceChannelGroup) Schema(ctx context.Context, request resource.Sche
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 
diff --git a/internal/service/memorydb/multi_region_cluster.go b/internal/service/memorydb/multi_region_cluster.go
index 041bbcea55..dac1c7c369 100644
--- a/internal/service/memorydb/multi_region_cluster.go
+++ b/internal/service/memorydb/multi_region_cluster.go
@@ -122,7 +122,7 @@ func (r *multiRegionClusterResource) Schema(ctx context.Context, request resourc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"tls_enabled": schema.BoolAttribute{
 				Optional: true,
 				Computed: true,
diff --git a/internal/service/neptunegraph/graph.go b/internal/service/neptunegraph/graph.go
index b68cc661f6..b2885f3616 100644
--- a/internal/service/neptunegraph/graph.go
+++ b/internal/service/neptunegraph/graph.go
@@ -144,7 +144,7 @@ func (r *graphResource) Schema(ctx context.Context, request resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/networkfirewall/tls_inspection_configuration.go b/internal/service/networkfirewall/tls_inspection_configuration.go
index 5c0212e8d3..27105536c3 100644
--- a/internal/service/networkfirewall/tls_inspection_configuration.go
+++ b/internal/service/networkfirewall/tls_inspection_configuration.go
@@ -114,7 +114,7 @@ func (r *tlsInspectionConfigurationResource) Schema(ctx context.Context, request
 				},
 			},
 			names.AttrTags:                    tftags.TagsAttribute(),
-			names.AttrTagsAll:                 tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll:                 tftags.TagsAttribute(),
 			"tls_inspection_configuration_id": framework.IDAttribute(),
 			"update_token": schema.StringAttribute{
 				Computed: true,
diff --git a/internal/service/networkmanager/dx_gateway_attachment.go b/internal/service/networkmanager/dx_gateway_attachment.go
index ffb5a2574a..92d6dcbe21 100644
--- a/internal/service/networkmanager/dx_gateway_attachment.go
+++ b/internal/service/networkmanager/dx_gateway_attachment.go
@@ -107,7 +107,7 @@ func (r *directConnectGatewayAttachmentResource) Schema(ctx context.Context, req
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/networkmonitor/monitor.go b/internal/service/networkmonitor/monitor.go
index 929ff1c97d..49686c485f 100644
--- a/internal/service/networkmonitor/monitor.go
+++ b/internal/service/networkmonitor/monitor.go
@@ -70,7 +70,7 @@ func (r *monitorResource) Schema(ctx context.Context, request resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/networkmonitor/probe.go b/internal/service/networkmonitor/probe.go
index f773ee50a0..48008bd8bf 100644
--- a/internal/service/networkmonitor/probe.go
+++ b/internal/service/networkmonitor/probe.go
@@ -105,7 +105,7 @@ func (r *probeResource) Schema(ctx context.Context, request resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVPCID: schema.StringAttribute{
 				Computed: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/opensearchserverless/collection.go b/internal/service/opensearchserverless/collection.go
index 30ecec3d52..072b191ce2 100644
--- a/internal/service/opensearchserverless/collection.go
+++ b/internal/service/opensearchserverless/collection.go
@@ -120,7 +120,7 @@ func (r *resourceCollection) Schema(ctx context.Context, req resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrType: schema.StringAttribute{
 				Optional: true,
 				Computed: true,
diff --git a/internal/service/osis/pipeline.go b/internal/service/osis/pipeline.go
index f39ac603c9..88f515d1f9 100644
--- a/internal/service/osis/pipeline.go
+++ b/internal/service/osis/pipeline.go
@@ -97,7 +97,7 @@ func (r *pipelineResource) Schema(ctx context.Context, request resource.SchemaRe
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"buffer_options": schema.ListNestedBlock{
diff --git a/internal/service/paymentcryptography/key.go b/internal/service/paymentcryptography/key.go
index 0c50161ab1..53c35f3c1c 100644
--- a/internal/service/paymentcryptography/key.go
+++ b/internal/service/paymentcryptography/key.go
@@ -113,7 +113,7 @@ func (r *resourceKey) Schema(ctx context.Context, request resource.SchemaRequest
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"key_attributes": schema.SingleNestedBlock{ // nosemgrep:ci.avoid-SingleNestedBlock pre-existing, will be converted
diff --git a/internal/service/pinpoint/email_template.go b/internal/service/pinpoint/email_template.go
index 41e80a3a8c..2c2e6548d1 100644
--- a/internal/service/pinpoint/email_template.go
+++ b/internal/service/pinpoint/email_template.go
@@ -59,7 +59,7 @@ func (r *resourceEmailTemplate) Schema(ctx context.Context, req resource.SchemaR
 				Required: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"email_template": schema.ListNestedBlock{
diff --git a/internal/service/pinpointsmsvoicev2/configuration_set.go b/internal/service/pinpointsmsvoicev2/configuration_set.go
index b1bd5bcd79..2a7e5669b7 100644
--- a/internal/service/pinpointsmsvoicev2/configuration_set.go
+++ b/internal/service/pinpointsmsvoicev2/configuration_set.go
@@ -71,7 +71,7 @@ func (r *configurationSetResource) Schema(ctx context.Context, request resource.
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/pinpointsmsvoicev2/opt_out_list.go b/internal/service/pinpointsmsvoicev2/opt_out_list.go
index 6fe1f2daa7..8684b9a0d2 100644
--- a/internal/service/pinpointsmsvoicev2/opt_out_list.go
+++ b/internal/service/pinpointsmsvoicev2/opt_out_list.go
@@ -58,7 +58,7 @@ func (r *optOutListResource) Schema(ctx context.Context, request resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/pinpointsmsvoicev2/phone_number.go b/internal/service/pinpointsmsvoicev2/phone_number.go
index b95bd9ddbb..40ec333341 100644
--- a/internal/service/pinpointsmsvoicev2/phone_number.go
+++ b/internal/service/pinpointsmsvoicev2/phone_number.go
@@ -120,7 +120,7 @@ func (r *phoneNumberResource) Schema(ctx context.Context, request resource.Schem
 				Default:  booldefault.StaticBool(false),
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"two_way_channel_arn": schema.StringAttribute{
 				CustomType: fwtypes.ARNType,
 				Optional:   true,
diff --git a/internal/service/qbusiness/application.go b/internal/service/qbusiness/application.go
index 358f57c369..cce782b4e7 100644
--- a/internal/service/qbusiness/application.go
+++ b/internal/service/qbusiness/application.go
@@ -89,7 +89,7 @@ func (r *resourceApplication) Schema(ctx context.Context, req resource.SchemaReq
 				Required:    true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"attachments_configuration": schema.ListNestedBlock{
diff --git a/internal/service/quicksight/namespace.go b/internal/service/quicksight/namespace.go
index eeaf0e4d0b..9a22b58102 100644
--- a/internal/service/quicksight/namespace.go
+++ b/internal/service/quicksight/namespace.go
@@ -94,7 +94,7 @@ func (r *namespaceResource) Schema(ctx context.Context, req resource.SchemaReque
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/quicksight/vpc_connection.go b/internal/service/quicksight/vpc_connection.go
index c71d94f6db..2295d26c20 100644
--- a/internal/service/quicksight/vpc_connection.go
+++ b/internal/service/quicksight/vpc_connection.go
@@ -137,7 +137,7 @@ func (r *vpcConnectionResource) Schema(ctx context.Context, req resource.SchemaR
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/rds/cluster_snapshot_copy.go b/internal/service/rds/cluster_snapshot_copy.go
index 12086429c8..50db21df14 100644
--- a/internal/service/rds/cluster_snapshot_copy.go
+++ b/internal/service/rds/cluster_snapshot_copy.go
@@ -142,7 +142,7 @@ func (r *resourceClusterSnapshotCopy) Schema(ctx context.Context, req resource.S
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"target_db_cluster_snapshot_identifier": schema.StringAttribute{
 				Required: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/rds/integration.go b/internal/service/rds/integration.go
index df045d6592..0552099a31 100644
--- a/internal/service/rds/integration.go
+++ b/internal/service/rds/integration.go
@@ -104,7 +104,7 @@ func (r *integrationResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrTargetARN: schema.StringAttribute{
 				CustomType: fwtypes.ARNType,
 				Required:   true,
diff --git a/internal/service/rds/shard_group.go b/internal/service/rds/shard_group.go
index ab15481439..5326cc21cd 100644
--- a/internal/service/rds/shard_group.go
+++ b/internal/service/rds/shard_group.go
@@ -113,7 +113,7 @@ func (r *shardGroupResource) Schema(ctx context.Context, request resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/redshift/integration.go b/internal/service/redshift/integration.go
index 691478c7af..e0745b2847 100644
--- a/internal/service/redshift/integration.go
+++ b/internal/service/redshift/integration.go
@@ -81,7 +81,7 @@ func (r *integrationResource) Schema(ctx context.Context, req resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrTargetARN: schema.StringAttribute{
 				CustomType: fwtypes.ARNType,
 				Required:   true,
diff --git a/internal/service/rekognition/collection.go b/internal/service/rekognition/collection.go
index 5561f7ecff..07a3c8d32d 100644
--- a/internal/service/rekognition/collection.go
+++ b/internal/service/rekognition/collection.go
@@ -73,7 +73,7 @@ func (r *resourceCollection) Schema(ctx context.Context, req resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 
diff --git a/internal/service/rekognition/project.go b/internal/service/rekognition/project.go
index 306723da2a..c88dbe1aa9 100644
--- a/internal/service/rekognition/project.go
+++ b/internal/service/rekognition/project.go
@@ -77,7 +77,7 @@ func (r *resourceProject) Schema(ctx context.Context, req resource.SchemaRequest
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/rekognition/stream_processor.go b/internal/service/rekognition/stream_processor.go
index c0c032841c..5ec05e288a 100644
--- a/internal/service/rekognition/stream_processor.go
+++ b/internal/service/rekognition/stream_processor.go
@@ -134,7 +134,7 @@ func (r *resourceStreamProcessor) Schema(ctx context.Context, req resource.Schem
 				DeprecationMessage: "Use 'arn' instead. This attribute will be removed in a future version of the provider.",
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"data_sharing_preference": schema.ListNestedBlock{
diff --git a/internal/service/resiliencehub/resiliency_policy.go b/internal/service/resiliencehub/resiliency_policy.go
index 2e557a2fe5..bacd699eca 100644
--- a/internal/service/resiliencehub/resiliency_policy.go
+++ b/internal/service/resiliencehub/resiliency_policy.go
@@ -126,7 +126,7 @@ func (r *resourceResiliencyPolicy) Schema(ctx context.Context, req resource.Sche
 				Computed:    true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrPolicy: schema.SingleNestedBlock{ // nosemgrep:ci.avoid-SingleNestedBlock pre-existing, will be converted
diff --git a/internal/service/resourceexplorer2/index.go b/internal/service/resourceexplorer2/index.go
index 4de81bb813..873c485df3 100644
--- a/internal/service/resourceexplorer2/index.go
+++ b/internal/service/resourceexplorer2/index.go
@@ -54,7 +54,7 @@ func (r *indexResource) Schema(ctx context.Context, request resource.SchemaReque
 			names.AttrARN:     framework.ARNAttributeComputedOnly(),
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrType: schema.StringAttribute{
 				CustomType: fwtypes.StringEnumType[awstypes.IndexType](),
 				Required:   true,
diff --git a/internal/service/resourceexplorer2/view.go b/internal/service/resourceexplorer2/view.go
index 3ae60f804c..40934ffb79 100644
--- a/internal/service/resourceexplorer2/view.go
+++ b/internal/service/resourceexplorer2/view.go
@@ -77,7 +77,7 @@ func (r *viewResource) Schema(ctx context.Context, request resource.SchemaReques
 				Computed: true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"filters": schema.ListNestedBlock{
diff --git a/internal/service/route53domains/domain.go b/internal/service/route53domains/domain.go
index a01d217309..5210dee09f 100644
--- a/internal/service/route53domains/domain.go
+++ b/internal/service/route53domains/domain.go
@@ -145,7 +145,7 @@ func (r *domainResource) Schema(ctx context.Context, request resource.SchemaRequ
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"tech_privacy": schema.BoolAttribute{
 				Optional: true,
 				Computed: true,
diff --git a/internal/service/route53profiles/association.go b/internal/service/route53profiles/association.go
index 77ad722ee8..b827a6ba7f 100644
--- a/internal/service/route53profiles/association.go
+++ b/internal/service/route53profiles/association.go
@@ -109,7 +109,7 @@ func (r *resourceAssociation) Schema(ctx context.Context, req resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/route53profiles/profile.go b/internal/service/route53profiles/profile.go
index 6c0b3d3e0a..3f90c6dc65 100644
--- a/internal/service/route53profiles/profile.go
+++ b/internal/service/route53profiles/profile.go
@@ -90,7 +90,7 @@ func (r *resourceProfile) Schema(ctx context.Context, req resource.SchemaRequest
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/s3control/access_grant.go b/internal/service/s3control/access_grant.go
index 6ba18f627c..56ea3d4aef 100644
--- a/internal/service/s3control/access_grant.go
+++ b/internal/service/s3control/access_grant.go
@@ -98,7 +98,7 @@ func (r *accessGrantResource) Schema(ctx context.Context, request resource.Schem
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"access_grants_location_configuration": schema.ListNestedBlock{
diff --git a/internal/service/s3control/access_grants_instance.go b/internal/service/s3control/access_grants_instance.go
index 57bc880e57..70981a8c02 100644
--- a/internal/service/s3control/access_grants_instance.go
+++ b/internal/service/s3control/access_grants_instance.go
@@ -78,7 +78,7 @@ func (r *accessGrantsInstanceResource) Schema(ctx context.Context, request resou
 				Optional:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/s3control/access_grants_location.go b/internal/service/s3control/access_grants_location.go
index 3707248eef..41c28a8503 100644
--- a/internal/service/s3control/access_grants_location.go
+++ b/internal/service/s3control/access_grants_location.go
@@ -79,7 +79,7 @@ func (r *accessGrantsLocationResource) Schema(ctx context.Context, request resou
 			},
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/securityhub/automation_rule.go b/internal/service/securityhub/automation_rule.go
index 6360711508..75e0a82ccb 100644
--- a/internal/service/securityhub/automation_rule.go
+++ b/internal/service/securityhub/automation_rule.go
@@ -74,7 +74,7 @@ func (r *automationRuleResource) Schema(ctx context.Context, request resource.Sc
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrActions: schema.SetNestedBlock{
diff --git a/internal/service/securitylake/data_lake.go b/internal/service/securitylake/data_lake.go
index c639d89b86..c4acedf082 100644
--- a/internal/service/securitylake/data_lake.go
+++ b/internal/service/securitylake/data_lake.go
@@ -71,7 +71,7 @@ func (r *dataLakeResource) Schema(ctx context.Context, request resource.SchemaRe
 			},
 			"s3_bucket_arn":   framework.ARNAttributeComputedOnly(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrConfiguration: schema.ListNestedBlock{
diff --git a/internal/service/securitylake/subscriber.go b/internal/service/securitylake/subscriber.go
index 4f260b1da7..4b9e148c7c 100644
--- a/internal/service/securitylake/subscriber.go
+++ b/internal/service/securitylake/subscriber.go
@@ -94,7 +94,7 @@ func (r *subscriberResource) Schema(ctx context.Context, request resource.Schema
 			},
 			names.AttrID:      framework.IDAttribute(),
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrSource: schema.SetNestedBlock{
diff --git a/internal/service/servicecatalogappregistry/application.go b/internal/service/servicecatalogappregistry/application.go
index 56e6db789f..058f43711b 100644
--- a/internal/service/servicecatalogappregistry/application.go
+++ b/internal/service/servicecatalogappregistry/application.go
@@ -66,7 +66,7 @@ func (r *resourceApplication) Schema(ctx context.Context, req resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/servicecatalogappregistry/attribute_group.go b/internal/service/servicecatalogappregistry/attribute_group.go
index a89b455ba3..5c86908c7c 100644
--- a/internal/service/servicecatalogappregistry/attribute_group.go
+++ b/internal/service/servicecatalogappregistry/attribute_group.go
@@ -72,7 +72,7 @@ func (r *resourceAttributeGroup) Schema(ctx context.Context, req resource.Schema
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 	}
 }
diff --git a/internal/service/ssmcontacts/rotation.go b/internal/service/ssmcontacts/rotation.go
index 8c90e48854..ff5c702ea9 100644
--- a/internal/service/ssmcontacts/rotation.go
+++ b/internal/service/ssmcontacts/rotation.go
@@ -68,7 +68,7 @@ func (r *resourceRotation) Schema(ctx context.Context, request resource.SchemaRe
 				Optional:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"time_zone_id": schema.StringAttribute{
 				Required: true,
 			},
diff --git a/internal/service/ssmquicksetup/configuration_manager.go b/internal/service/ssmquicksetup/configuration_manager.go
index c93e02feee..374788f690 100644
--- a/internal/service/ssmquicksetup/configuration_manager.go
+++ b/internal/service/ssmquicksetup/configuration_manager.go
@@ -75,7 +75,7 @@ func (r *resourceConfigurationManager) Schema(ctx context.Context, req resource.
 				ElementType: fwtypes.NewObjectTypeOf[statusSummaryModel](ctx),
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"configuration_definition": schema.ListNestedBlock{
diff --git a/internal/service/ssoadmin/application.go b/internal/service/ssoadmin/application.go
index c339159fbe..797b807ed3 100644
--- a/internal/service/ssoadmin/application.go
+++ b/internal/service/ssoadmin/application.go
@@ -92,7 +92,7 @@ func (r *resourceApplication) Schema(ctx context.Context, req resource.SchemaReq
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"portal_options": schema.ListNestedBlock{
diff --git a/internal/service/ssoadmin/trusted_token_issuer.go b/internal/service/ssoadmin/trusted_token_issuer.go
index 28ce5529de..c462b619c6 100644
--- a/internal/service/ssoadmin/trusted_token_issuer.go
+++ b/internal/service/ssoadmin/trusted_token_issuer.go
@@ -82,7 +82,7 @@ func (r *resourceTrustedTokenIssuer) Schema(ctx context.Context, req resource.Sc
 			},
 
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"trusted_token_issuer_configuration": schema.ListNestedBlock{
diff --git a/internal/service/timestreaminfluxdb/db_instance.go b/internal/service/timestreaminfluxdb/db_instance.go
index 90de5c14cc..a9801dc11a 100644
--- a/internal/service/timestreaminfluxdb/db_instance.go
+++ b/internal/service/timestreaminfluxdb/db_instance.go
@@ -191,7 +191,7 @@ func (r *resourceDBInstance) Schema(ctx context.Context, req resource.SchemaRequ
 					over both IPv4 and IPv6 protocols.`,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			"organization": schema.StringAttribute{
 				Required: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/timestreamquery/scheduled_query.go b/internal/service/timestreamquery/scheduled_query.go
index 07d7145722..0822d5d68a 100644
--- a/internal/service/timestreamquery/scheduled_query.go
+++ b/internal/service/timestreamquery/scheduled_query.go
@@ -87,7 +87,7 @@ func (r *resourceScheduledQuery) Schema(ctx context.Context, req resource.Schema
 				Computed:   true,
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			"error_report_configuration": schema.ListNestedBlock{
diff --git a/internal/service/vpclattice/resource_configuration.go b/internal/service/vpclattice/resource_configuration.go
index 29937b2a74..fce607c87d 100644
--- a/internal/service/vpclattice/resource_configuration.go
+++ b/internal/service/vpclattice/resource_configuration.go
@@ -122,7 +122,7 @@ func (r *resourceConfigurationResource) Schema(ctx context.Context, request reso
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrType: schema.StringAttribute{
 				CustomType: typeType,
 				Optional:   true,
diff --git a/internal/service/vpclattice/resource_gateway.go b/internal/service/vpclattice/resource_gateway.go
index 8804bbffbc..7ad2a4e5c1 100644
--- a/internal/service/vpclattice/resource_gateway.go
+++ b/internal/service/vpclattice/resource_gateway.go
@@ -98,7 +98,7 @@ func (r *resourceGatewayResource) Schema(ctx context.Context, request resource.S
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 			names.AttrVPCID: schema.StringAttribute{
 				Required: true,
 				PlanModifiers: []planmodifier.String{
diff --git a/internal/service/vpclattice/service_network_resource_association.go b/internal/service/vpclattice/service_network_resource_association.go
index 5fd0293b63..99a70c77f5 100644
--- a/internal/service/vpclattice/service_network_resource_association.go
+++ b/internal/service/vpclattice/service_network_resource_association.go
@@ -70,7 +70,7 @@ func (r *serviceNetworkResourceAssociationResource) Schema(ctx context.Context,
 				},
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
diff --git a/internal/service/workspaces/connection_alias.go b/internal/service/workspaces/connection_alias.go
index f343ca3b29..70db910245 100644
--- a/internal/service/workspaces/connection_alias.go
+++ b/internal/service/workspaces/connection_alias.go
@@ -71,7 +71,7 @@ func (r *connectionAliasResource) Schema(ctx context.Context, request resource.S
 				Description: "The current state of the connection alias.",
 			},
 			names.AttrTags:    tftags.TagsAttribute(),
-			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
+			names.AttrTagsAll: tftags.TagsAttribute(),
 		},
 		Blocks: map[string]schema.Block{
 			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
