// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Creates an entry (a rule) in a network ACL with the specified rule number.
 */
export class NetworkAclRule extends pulumi.Resource {
    /**
     * The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).
     */
    public readonly cidrBlock?: pulumi.Computed<string>;
    /**
     * Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet). Default `false`.
     */
    public readonly egress?: pulumi.Computed<boolean>;
    /**
     * The from port to match.
     */
    public readonly fromPort?: pulumi.Computed<number>;
    /**
     * ICMP protocol: The ICMP code. Required if specifying ICMP for the protocol. e.g. -1
     */
    public readonly icmpCode?: pulumi.Computed<string>;
    /**
     * ICMP protocol: The ICMP type. Required if specifying ICMP for the protocol. e.g. -1
     */
    public readonly icmpType?: pulumi.Computed<string>;
    /**
     * The IPv6 CIDR block to allow or deny.
     */
    public readonly ipv6CidrBlock?: pulumi.Computed<string>;
    /**
     * The ID of the network ACL.
     */
    public readonly networkAclId: pulumi.Computed<string>;
    /**
     * The protocol. A value of -1 means all protocols.
     */
    public readonly protocol: pulumi.Computed<string>;
    /**
     * Indicates whether to allow or deny the traffic that matches the rule. Accepted values: `allow` | `deny`
     */
    public readonly ruleAction: pulumi.Computed<string>;
    /**
     * The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.
     */
    public readonly ruleNumber: pulumi.Computed<number>;
    /**
     * The to port to match.
     */
    public readonly toPort?: pulumi.Computed<number>;

    /**
     * Create a NetworkAclRule resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this NetworkAclRule instance
     * @param args A collection of arguments for creating this NetworkAclRule intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: NetworkAclRuleArgs, dependsOn?: pulumi.Resource[]) {
        if (args.networkAclId === undefined) {
            throw new Error("Missing required property 'networkAclId'");
        }
        if (args.protocol === undefined) {
            throw new Error("Missing required property 'protocol'");
        }
        if (args.ruleAction === undefined) {
            throw new Error("Missing required property 'ruleAction'");
        }
        if (args.ruleNumber === undefined) {
            throw new Error("Missing required property 'ruleNumber'");
        }
        super("aws:ec2/networkAclRule:NetworkAclRule", urnName, {
            "cidrBlock": args.cidrBlock,
            "egress": args.egress,
            "fromPort": args.fromPort,
            "icmpCode": args.icmpCode,
            "icmpType": args.icmpType,
            "ipv6CidrBlock": args.ipv6CidrBlock,
            "networkAclId": args.networkAclId,
            "protocol": args.protocol,
            "ruleAction": args.ruleAction,
            "ruleNumber": args.ruleNumber,
            "toPort": args.toPort,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a NetworkAclRule resource.
 */
export interface NetworkAclRuleArgs {
    /**
     * The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).
     */
    readonly cidrBlock?: pulumi.ComputedValue<string>;
    /**
     * Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet). Default `false`.
     */
    readonly egress?: pulumi.ComputedValue<boolean>;
    /**
     * The from port to match.
     */
    readonly fromPort?: pulumi.ComputedValue<number>;
    /**
     * ICMP protocol: The ICMP code. Required if specifying ICMP for the protocol. e.g. -1
     */
    readonly icmpCode?: pulumi.ComputedValue<string>;
    /**
     * ICMP protocol: The ICMP type. Required if specifying ICMP for the protocol. e.g. -1
     */
    readonly icmpType?: pulumi.ComputedValue<string>;
    /**
     * The IPv6 CIDR block to allow or deny.
     */
    readonly ipv6CidrBlock?: pulumi.ComputedValue<string>;
    /**
     * The ID of the network ACL.
     */
    readonly networkAclId: pulumi.ComputedValue<string>;
    /**
     * The protocol. A value of -1 means all protocols.
     */
    readonly protocol: pulumi.ComputedValue<string>;
    /**
     * Indicates whether to allow or deny the traffic that matches the rule. Accepted values: `allow` | `deny`
     */
    readonly ruleAction: pulumi.ComputedValue<string>;
    /**
     * The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.
     */
    readonly ruleNumber: pulumi.ComputedValue<number>;
    /**
     * The to port to match.
     */
    readonly toPort?: pulumi.ComputedValue<number>;
}

