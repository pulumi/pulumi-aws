// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

/**
 * Provides a VPC/Subnet/ENI Flow Log to capture IP traffic for a specific network
 * interface, subnet, or VPC. Logs are sent to a CloudWatch Log Group.
 * 
 * ```
 * resource "aws_flow_log" "test_flow_log" {
 *   log_group_name = "${aws_cloudwatch_log_group.test_log_group.name}"
 *   iam_role_arn   = "${aws_iam_role.test_role.arn}"
 *   vpc_id         = "${aws_vpc.default.id}"
 *   traffic_type   = "ALL"
 * }
 * 
 * resource "aws_cloudwatch_log_group" "test_log_group" {
 *   name = "test_log_group"
 * }
 * 
 * resource "aws_iam_role" "test_role" {
 *   name = "test_role"
 * 
 *   assume_role_policy = <<EOF
 * {
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Sid": "",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "Service": "vpc-flow-logs.amazonaws.com"
 *       },
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * EOF
 * }
 * 
 * resource "aws_iam_role_policy" "test_policy" {
 *   name = "test_policy"
 *   role = "${aws_iam_role.test_role.id}"
 * 
 *   policy = <<EOF
 * {
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": [
 *         "logs:CreateLogGroup",
 *         "logs:CreateLogStream",
 *         "logs:PutLogEvents",
 *         "logs:DescribeLogGroups",
 *         "logs:DescribeLogStreams"
 *       ],
 *       "Effect": "Allow",
 *       "Resource": "*"
 *     }
 *   ]
 * }
 * EOF
 * }
 * ```
 */
export class FlowLog extends fabric.Resource {
    /**
     * Elastic Network Interface ID to attach to
     */
    public readonly eniId?: fabric.Computed<string>;
    /**
     * The ARN for the IAM role that's used to post flow
     * logs to a CloudWatch Logs log group
     */
    public readonly iamRoleArn: fabric.Computed<string>;
    /**
     * The name of the CloudWatch log group
     */
    public readonly logGroupName: fabric.Computed<string>;
    /**
     * Subnet ID to attach to
     */
    public readonly subnetId?: fabric.Computed<string>;
    /**
     * The type of traffic to capture. Valid values:
     * `ACCEPT`,`REJECT`, `ALL`
     */
    public readonly trafficType: fabric.Computed<string>;
    /**
     * VPC ID to attach to
     */
    public readonly vpcId?: fabric.Computed<string>;

    /**
     * Create a FlowLog resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this FlowLog instance
     * @param args A collection of arguments for creating this FlowLog intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: FlowLogArgs, dependsOn?: fabric.Resource[]) {
        if (args.iamRoleArn === undefined) {
            throw new Error("Missing required property 'iamRoleArn'");
        }
        if (args.logGroupName === undefined) {
            throw new Error("Missing required property 'logGroupName'");
        }
        if (args.trafficType === undefined) {
            throw new Error("Missing required property 'trafficType'");
        }
        super("aws:ec2/flowLog:FlowLog", urnName, {
            "eniId": args.eniId,
            "iamRoleArn": args.iamRoleArn,
            "logGroupName": args.logGroupName,
            "subnetId": args.subnetId,
            "trafficType": args.trafficType,
            "vpcId": args.vpcId,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a FlowLog resource.
 */
export interface FlowLogArgs {
    /**
     * Elastic Network Interface ID to attach to
     */
    readonly eniId?: fabric.ComputedValue<string>;
    /**
     * The ARN for the IAM role that's used to post flow
     * logs to a CloudWatch Logs log group
     */
    readonly iamRoleArn: fabric.ComputedValue<string>;
    /**
     * The name of the CloudWatch log group
     */
    readonly logGroupName: fabric.ComputedValue<string>;
    /**
     * Subnet ID to attach to
     */
    readonly subnetId?: fabric.ComputedValue<string>;
    /**
     * The type of traffic to capture. Valid values:
     * `ACCEPT`,`REJECT`, `ALL`
     */
    readonly trafficType: fabric.ComputedValue<string>;
    /**
     * VPC ID to attach to
     */
    readonly vpcId?: fabric.ComputedValue<string>;
}

