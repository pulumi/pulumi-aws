// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class VpcPeeringConnection extends fabric.Resource {
    public /*out*/ readonly acceptStatus: fabric.Computed<string>;
    public readonly accepter: fabric.Computed<{ allowClassicLinkToRemoteVpc?: boolean, allowRemoteVpcDnsResolution?: boolean, allowVpcToRemoteClassicLink?: boolean }[]>;
    public readonly autoAccept?: fabric.Computed<boolean>;
    public readonly peerOwnerId: fabric.Computed<string>;
    public readonly peerVpcId: fabric.Computed<string>;
    public readonly requester: fabric.Computed<{ allowClassicLinkToRemoteVpc?: boolean, allowRemoteVpcDnsResolution?: boolean, allowVpcToRemoteClassicLink?: boolean }[]>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly vpcId: fabric.Computed<string>;

    constructor(urnName: string, args: VpcPeeringConnectionArgs, dependsOn?: fabric.Resource[]) {
        if (args.peerVpcId === undefined) {
            throw new Error("Missing required property 'peerVpcId'");
        }
        if (args.vpcId === undefined) {
            throw new Error("Missing required property 'vpcId'");
        }
        super("aws:ec2/vpcPeeringConnection:VpcPeeringConnection", urnName, {
            "accepter": args.accepter,
            "autoAccept": args.autoAccept,
            "peerOwnerId": args.peerOwnerId,
            "peerVpcId": args.peerVpcId,
            "requester": args.requester,
            "tags": args.tags,
            "vpcId": args.vpcId,
            "acceptStatus": undefined,
        }, dependsOn);
    }
}

export interface VpcPeeringConnectionArgs {
    readonly accepter?: fabric.ComputedValue<{ allowClassicLinkToRemoteVpc?: fabric.ComputedValue<boolean>, allowRemoteVpcDnsResolution?: fabric.ComputedValue<boolean>, allowVpcToRemoteClassicLink?: fabric.ComputedValue<boolean> }>[];
    readonly autoAccept?: fabric.ComputedValue<boolean>;
    readonly peerOwnerId?: fabric.ComputedValue<string>;
    readonly peerVpcId: fabric.ComputedValue<string>;
    readonly requester?: fabric.ComputedValue<{ allowClassicLinkToRemoteVpc?: fabric.ComputedValue<boolean>, allowRemoteVpcDnsResolution?: fabric.ComputedValue<boolean>, allowVpcToRemoteClassicLink?: fabric.ComputedValue<boolean> }>[];
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
    readonly vpcId: fabric.ComputedValue<string>;
}

