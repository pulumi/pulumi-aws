// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an EC2 Spot Fleet Request resource. This allows a fleet of Spot
 * instances to be requested on the Spot market.
 */
export class SpotFleetRequest extends pulumi.Resource {
    /**
     * Indicates how to allocate the target capacity across
     * the Spot pools specified by the Spot fleet request. The default is
     * lowestPrice.
     */
    public readonly allocationStrategy?: pulumi.Computed<string>;
    public /*out*/ readonly clientToken: pulumi.Computed<string>;
    /**
     * Indicates whether running Spot
     * instances should be terminated if the target capacity of the Spot fleet
     * request is decreased below the current size of the Spot fleet.
     */
    public readonly excessCapacityTerminationPolicy?: pulumi.Computed<string>;
    /**
     * Grants the Spot fleet permission to terminate
     * Spot instances on your behalf when you cancel its Spot fleet request using
     * CancelSpotFleetRequests or when the Spot fleet request expires, if you set
     * terminateInstancesWithExpiration.
     */
    public readonly iamFleetRole: pulumi.Computed<string>;
    /**
     * Used to define the launch configuration of the
     * spot-fleet request. Can be specified multiple times to define different bids
     * across different markets and instance types.
     */
    public readonly launchSpecification: pulumi.Computed<{ ami: string, associatePublicIpAddress?: boolean, availabilityZone: string, ebsBlockDevice: { deleteOnTermination?: boolean, deviceName: string, encrypted: boolean, iops: number, snapshotId: string, volumeSize: number, volumeType: string }[], ebsOptimized?: boolean, ephemeralBlockDevice: { deviceName: string, virtualName: string }[], iamInstanceProfile?: string, instanceType: string, keyName: string, monitoring?: boolean, placementGroup: string, placementTenancy?: string, rootBlockDevice: { deleteOnTermination?: boolean, iops: number, volumeSize: number, volumeType: string }[], spotPrice?: string, subnetId: string, userData?: string, vpcSecurityGroupIds: string[], weightedCapacity?: string }[]>;
    /**
     * Indicates whether Spot fleet should replace unhealthy instances. Default `false`.
     */
    public readonly replaceUnhealthyInstances?: pulumi.Computed<boolean>;
    /**
     * The bid price per unit hour.
     */
    public readonly spotPrice: pulumi.Computed<string>;
    /**
     * The state of the Spot fleet request.
     */
    public /*out*/ readonly spotRequestState: pulumi.Computed<string>;
    /**
     * The number of units to request. You can choose to set the
     * target capacity in terms of instances or a performance characteristic that is
     * important to your application workload, such as vCPUs, memory, or I/O.
     */
    public readonly targetCapacity: pulumi.Computed<number>;
    /**
     * Indicates whether running Spot
     * instances should be terminated when the Spot fleet request expires.
     */
    public readonly terminateInstancesWithExpiration?: pulumi.Computed<boolean>;
    public readonly validFrom?: pulumi.Computed<string>;
    /**
     * The end date and time of the request, in UTC ISO8601 format
     * (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance
     * requests are placed or enabled to fulfill the request. Defaults to 24 hours.
     */
    public readonly validUntil?: pulumi.Computed<string>;

    /**
     * Create a SpotFleetRequest resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this SpotFleetRequest instance
     * @param args A collection of arguments for creating this SpotFleetRequest intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: SpotFleetRequestArgs, dependsOn?: pulumi.Resource[]) {
        if (args.iamFleetRole === undefined) {
            throw new Error("Missing required property 'iamFleetRole'");
        }
        if (args.launchSpecification === undefined) {
            throw new Error("Missing required property 'launchSpecification'");
        }
        if (args.spotPrice === undefined) {
            throw new Error("Missing required property 'spotPrice'");
        }
        if (args.targetCapacity === undefined) {
            throw new Error("Missing required property 'targetCapacity'");
        }
        super("aws:ec2/spotFleetRequest:SpotFleetRequest", urnName, {
            "allocationStrategy": args.allocationStrategy,
            "excessCapacityTerminationPolicy": args.excessCapacityTerminationPolicy,
            "iamFleetRole": args.iamFleetRole,
            "launchSpecification": args.launchSpecification,
            "replaceUnhealthyInstances": args.replaceUnhealthyInstances,
            "spotPrice": args.spotPrice,
            "targetCapacity": args.targetCapacity,
            "terminateInstancesWithExpiration": args.terminateInstancesWithExpiration,
            "validFrom": args.validFrom,
            "validUntil": args.validUntil,
            "clientToken": undefined,
            "spotRequestState": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a SpotFleetRequest resource.
 */
export interface SpotFleetRequestArgs {
    /**
     * Indicates how to allocate the target capacity across
     * the Spot pools specified by the Spot fleet request. The default is
     * lowestPrice.
     */
    readonly allocationStrategy?: pulumi.ComputedValue<string>;
    /**
     * Indicates whether running Spot
     * instances should be terminated if the target capacity of the Spot fleet
     * request is decreased below the current size of the Spot fleet.
     */
    readonly excessCapacityTerminationPolicy?: pulumi.ComputedValue<string>;
    /**
     * Grants the Spot fleet permission to terminate
     * Spot instances on your behalf when you cancel its Spot fleet request using
     * CancelSpotFleetRequests or when the Spot fleet request expires, if you set
     * terminateInstancesWithExpiration.
     */
    readonly iamFleetRole: pulumi.ComputedValue<string>;
    /**
     * Used to define the launch configuration of the
     * spot-fleet request. Can be specified multiple times to define different bids
     * across different markets and instance types.
     */
    readonly launchSpecification: pulumi.ComputedValue<{ ami: pulumi.ComputedValue<string>, associatePublicIpAddress?: pulumi.ComputedValue<boolean>, availabilityZone?: pulumi.ComputedValue<string>, ebsBlockDevice?: pulumi.ComputedValue<{ deleteOnTermination?: pulumi.ComputedValue<boolean>, deviceName: pulumi.ComputedValue<string>, encrypted?: pulumi.ComputedValue<boolean>, iops?: pulumi.ComputedValue<number>, snapshotId?: pulumi.ComputedValue<string>, volumeSize?: pulumi.ComputedValue<number>, volumeType?: pulumi.ComputedValue<string> }>[], ebsOptimized?: pulumi.ComputedValue<boolean>, ephemeralBlockDevice?: pulumi.ComputedValue<{ deviceName: pulumi.ComputedValue<string>, virtualName: pulumi.ComputedValue<string> }>[], iamInstanceProfile?: pulumi.ComputedValue<string>, instanceType: pulumi.ComputedValue<string>, keyName?: pulumi.ComputedValue<string>, monitoring?: pulumi.ComputedValue<boolean>, placementGroup?: pulumi.ComputedValue<string>, placementTenancy?: pulumi.ComputedValue<string>, rootBlockDevice?: pulumi.ComputedValue<{ deleteOnTermination?: pulumi.ComputedValue<boolean>, iops?: pulumi.ComputedValue<number>, volumeSize?: pulumi.ComputedValue<number>, volumeType?: pulumi.ComputedValue<string> }>[], spotPrice?: pulumi.ComputedValue<string>, subnetId?: pulumi.ComputedValue<string>, userData?: pulumi.ComputedValue<string>, vpcSecurityGroupIds?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], weightedCapacity?: pulumi.ComputedValue<string> }>[];
    /**
     * Indicates whether Spot fleet should replace unhealthy instances. Default `false`.
     */
    readonly replaceUnhealthyInstances?: pulumi.ComputedValue<boolean>;
    /**
     * The bid price per unit hour.
     */
    readonly spotPrice: pulumi.ComputedValue<string>;
    /**
     * The number of units to request. You can choose to set the
     * target capacity in terms of instances or a performance characteristic that is
     * important to your application workload, such as vCPUs, memory, or I/O.
     */
    readonly targetCapacity: pulumi.ComputedValue<number>;
    /**
     * Indicates whether running Spot
     * instances should be terminated when the Spot fleet request expires.
     */
    readonly terminateInstancesWithExpiration?: pulumi.ComputedValue<boolean>;
    readonly validFrom?: pulumi.ComputedValue<string>;
    /**
     * The end date and time of the request, in UTC ISO8601 format
     * (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance
     * requests are placed or enabled to fulfill the request. Defaults to 24 hours.
     */
    readonly validUntil?: pulumi.ComputedValue<string>;
}

