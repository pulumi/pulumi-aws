// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

import {InstanceType} from "./instanceType";

/**
 * Provides an EC2 instance resource. This allows instances to be created, updated,
 * and deleted. Instances also support [provisioning](/docs/provisioners/index.html).
 */
export class Instance extends fabric.Resource {
    /**
     * The AMI to use for the instance.
     */
    public readonly ami: fabric.Computed<string>;
    /**
     * Associate a public ip address with an instance in a VPC.  Boolean value.
     */
    public readonly associatePublicIpAddress: fabric.Computed<boolean>;
    /**
     * The AZ to start the instance in.
     */
    public readonly availabilityZone: fabric.Computed<string>;
    /**
     * If true, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     */
    public readonly disableApiTermination?: fabric.Computed<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  See [Block Devices](#block-devices) below for details.
     */
    public readonly ebsBlockDevice: fabric.Computed<{ deleteOnTermination?: boolean, deviceName: string, encrypted: boolean, iops: number, snapshotId: string, volumeSize: number, volumeType: string }[]>;
    /**
     * If true, the launched EC2 instance will be
     * EBS-optimized.
     */
    public readonly ebsOptimized?: fabric.Computed<boolean>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See [Block Devices](#block-devices) below for details.
     */
    public readonly ephemeralBlockDevice: fabric.Computed<{ deviceName: string, noDevice?: boolean, virtualName?: string }[]>;
    /**
     * The IAM Instance Profile to
     * launch the instance with. Specified as the name of the Instance Profile.
     * * `ipv6_address_count`- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     */
    public readonly iamInstanceProfile?: fabric.Computed<string>;
    /**
     * Shutdown behavior for the
     * instance. Amazon defaults this to `stop` for EBS-backed instances and
     * `terminate` for instance-store instances. Cannot be set on instance-store
     * instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     */
    public readonly instanceInitiatedShutdownBehavior?: fabric.Computed<string>;
    public /*out*/ readonly instanceState: fabric.Computed<string>;
    /**
     * The type of instance to start
     */
    public readonly instanceType: fabric.Computed<InstanceType>;
    public readonly ipv6AddressCount: fabric.Computed<number>;
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     */
    public readonly ipv6Addresses: fabric.Computed<string[]>;
    /**
     * The key name to use for the instance.
     */
    public readonly keyName: fabric.Computed<string>;
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     */
    public readonly monitoring?: fabric.Computed<boolean>;
    /**
     * Customize network interfaces to be attached at instance boot time. See [Network Interfaces](#network-interfaces) below for more details.
     */
    public readonly networkInterface: fabric.Computed<{ deleteOnTermination?: boolean, deviceIndex: number, networkInterfaceId: string }[]>;
    /**
     * The ID of the network interface to attach.
     */
    public /*out*/ readonly networkInterfaceId: fabric.Computed<string>;
    /**
     * The Placement Group to start the instance in.
     */
    public readonly placementGroup: fabric.Computed<string>;
    /**
     * The ID of the instance's primary network interface.
     */
    public /*out*/ readonly primaryNetworkInterfaceId: fabric.Computed<string>;
    /**
     * The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     */
    public /*out*/ readonly privateDns: fabric.Computed<string>;
    /**
     * Private IP address to associate with the
     * instance in a VPC.
     */
    public readonly privateIp: fabric.Computed<string>;
    /**
     * The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     */
    public /*out*/ readonly publicDns: fabric.Computed<string>;
    /**
     * The public IP address assigned to the instance, if applicable. **NOTE**: If you are using an [`aws_eip`](/docs/providers/aws/r/eip.html) with your instance, you should refer to the EIP's address directly and not use `public_ip`, as this field will change after the EIP is attached.
     */
    public /*out*/ readonly publicIp: fabric.Computed<string>;
    /**
     * Customize details about the root block
     * device of the instance. See [Block Devices](#block-devices) below for details.
     */
    public readonly rootBlockDevice: fabric.Computed<{ deleteOnTermination?: boolean, iops: number, volumeSize: number, volumeType: string }[]>;
    /**
     * A list of security group names to associate with.
     * If you are creating Instances in a VPC, use `vpc_security_group_ids` instead.
     */
    public readonly securityGroups: fabric.Computed<string[]>;
    /**
     * Controls if traffic is routed to the instance when
     * the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     */
    public readonly sourceDestCheck?: fabric.Computed<boolean>;
    /**
     * The VPC Subnet ID to launch in.
     */
    public readonly subnetId: fabric.Computed<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     */
    public readonly tenancy: fabric.Computed<string>;
    /**
     * The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     */
    public readonly userData?: fabric.Computed<string>;
    /**
     * A mapping of tags to assign to the devices created by the instance at launch time.
     */
    public readonly volumeTags: fabric.Computed<{[key: string]: any}>;
    /**
     * A list of security group IDs to associate with.
     */
    public readonly vpcSecurityGroupIds: fabric.Computed<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Instance instance
     * @param args A collection of arguments for creating this Instance intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: InstanceArgs, dependsOn?: fabric.Resource[]) {
        if (args.ami === undefined) {
            throw new Error("Missing required property 'ami'");
        }
        if (args.instanceType === undefined) {
            throw new Error("Missing required property 'instanceType'");
        }
        super("aws:ec2/instance:Instance", urnName, {
            "ami": args.ami,
            "associatePublicIpAddress": args.associatePublicIpAddress,
            "availabilityZone": args.availabilityZone,
            "disableApiTermination": args.disableApiTermination,
            "ebsBlockDevice": args.ebsBlockDevice,
            "ebsOptimized": args.ebsOptimized,
            "ephemeralBlockDevice": args.ephemeralBlockDevice,
            "iamInstanceProfile": args.iamInstanceProfile,
            "instanceInitiatedShutdownBehavior": args.instanceInitiatedShutdownBehavior,
            "instanceType": args.instanceType,
            "ipv6AddressCount": args.ipv6AddressCount,
            "ipv6Addresses": args.ipv6Addresses,
            "keyName": args.keyName,
            "monitoring": args.monitoring,
            "networkInterface": args.networkInterface,
            "placementGroup": args.placementGroup,
            "privateIp": args.privateIp,
            "rootBlockDevice": args.rootBlockDevice,
            "securityGroups": args.securityGroups,
            "sourceDestCheck": args.sourceDestCheck,
            "subnetId": args.subnetId,
            "tags": args.tags,
            "tenancy": args.tenancy,
            "userData": args.userData,
            "volumeTags": args.volumeTags,
            "vpcSecurityGroupIds": args.vpcSecurityGroupIds,
            "instanceState": undefined,
            "networkInterfaceId": undefined,
            "primaryNetworkInterfaceId": undefined,
            "privateDns": undefined,
            "publicDns": undefined,
            "publicIp": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The AMI to use for the instance.
     */
    readonly ami: fabric.ComputedValue<string>;
    /**
     * Associate a public ip address with an instance in a VPC.  Boolean value.
     */
    readonly associatePublicIpAddress?: fabric.ComputedValue<boolean>;
    /**
     * The AZ to start the instance in.
     */
    readonly availabilityZone?: fabric.ComputedValue<string>;
    /**
     * If true, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     */
    readonly disableApiTermination?: fabric.ComputedValue<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  See [Block Devices](#block-devices) below for details.
     */
    readonly ebsBlockDevice?: fabric.ComputedValue<{ deleteOnTermination?: fabric.ComputedValue<boolean>, deviceName: fabric.ComputedValue<string>, encrypted?: fabric.ComputedValue<boolean>, iops?: fabric.ComputedValue<number>, snapshotId?: fabric.ComputedValue<string>, volumeSize?: fabric.ComputedValue<number>, volumeType?: fabric.ComputedValue<string> }>[];
    /**
     * If true, the launched EC2 instance will be
     * EBS-optimized.
     */
    readonly ebsOptimized?: fabric.ComputedValue<boolean>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See [Block Devices](#block-devices) below for details.
     */
    readonly ephemeralBlockDevice?: fabric.ComputedValue<{ deviceName: fabric.ComputedValue<string>, noDevice?: fabric.ComputedValue<boolean>, virtualName?: fabric.ComputedValue<string> }>[];
    /**
     * The IAM Instance Profile to
     * launch the instance with. Specified as the name of the Instance Profile.
     * * `ipv6_address_count`- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     */
    readonly iamInstanceProfile?: fabric.ComputedValue<string>;
    /**
     * Shutdown behavior for the
     * instance. Amazon defaults this to `stop` for EBS-backed instances and
     * `terminate` for instance-store instances. Cannot be set on instance-store
     * instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     */
    readonly instanceInitiatedShutdownBehavior?: fabric.ComputedValue<string>;
    /**
     * The type of instance to start
     */
    readonly instanceType: fabric.ComputedValue<InstanceType>;
    readonly ipv6AddressCount?: fabric.ComputedValue<number>;
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     */
    readonly ipv6Addresses?: fabric.ComputedValue<fabric.ComputedValue<string>>[];
    /**
     * The key name to use for the instance.
     */
    readonly keyName?: fabric.ComputedValue<string>;
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     */
    readonly monitoring?: fabric.ComputedValue<boolean>;
    /**
     * Customize network interfaces to be attached at instance boot time. See [Network Interfaces](#network-interfaces) below for more details.
     */
    readonly networkInterface?: fabric.ComputedValue<{ deleteOnTermination?: fabric.ComputedValue<boolean>, deviceIndex: fabric.ComputedValue<number>, networkInterfaceId: fabric.ComputedValue<string> }>[];
    /**
     * The Placement Group to start the instance in.
     */
    readonly placementGroup?: fabric.ComputedValue<string>;
    /**
     * Private IP address to associate with the
     * instance in a VPC.
     */
    readonly privateIp?: fabric.ComputedValue<string>;
    /**
     * Customize details about the root block
     * device of the instance. See [Block Devices](#block-devices) below for details.
     */
    readonly rootBlockDevice?: fabric.ComputedValue<{ deleteOnTermination?: fabric.ComputedValue<boolean>, iops?: fabric.ComputedValue<number>, volumeSize?: fabric.ComputedValue<number>, volumeType?: fabric.ComputedValue<string> }>[];
    /**
     * A list of security group names to associate with.
     * If you are creating Instances in a VPC, use `vpc_security_group_ids` instead.
     */
    readonly securityGroups?: fabric.ComputedValue<fabric.ComputedValue<string>>[];
    /**
     * Controls if traffic is routed to the instance when
     * the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     */
    readonly sourceDestCheck?: fabric.ComputedValue<boolean>;
    /**
     * The VPC Subnet ID to launch in.
     */
    readonly subnetId?: fabric.ComputedValue<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     */
    readonly tenancy?: fabric.ComputedValue<string>;
    /**
     * The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     */
    readonly userData?: fabric.ComputedValue<string>;
    /**
     * A mapping of tags to assign to the devices created by the instance at launch time.
     */
    readonly volumeTags?: fabric.ComputedValue<{[key: string]: any}>;
    /**
     * A list of security group IDs to associate with.
     */
    readonly vpcSecurityGroupIds?: fabric.ComputedValue<fabric.ComputedValue<string>>[];
}

