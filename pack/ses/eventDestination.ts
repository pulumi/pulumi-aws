// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an SES event destination
 */
export class EventDestination extends pulumi.Resource {
    /**
     * CloudWatch destination for the events
     */
    public readonly cloudwatchDestination?: pulumi.Computed<{ defaultValue: string, dimensionName: string, valueSource: string }[]>;
    /**
     * The name of the configuration set
     */
    public readonly configurationSetName: pulumi.Computed<string>;
    /**
     * If true, the event destination will be enabled
     */
    public readonly enabled?: pulumi.Computed<boolean>;
    /**
     * Send the events to a kinesis firehose destination
     */
    public readonly kinesisDestination?: pulumi.Computed<{ roleArn: string, streamArn: string }[]>;
    /**
     * A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, or `"delivery"`.
     */
    public readonly matchingTypes: pulumi.Computed<string[]>;
    /**
     * The name of the event destination
     */
    public readonly name: pulumi.Computed<string>;

    /**
     * Create a EventDestination resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this EventDestination instance
     * @param args A collection of arguments for creating this EventDestination intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: EventDestinationArgs, dependsOn?: pulumi.Resource[]) {
        if (args.configurationSetName === undefined) {
            throw new Error("Missing required property 'configurationSetName'");
        }
        if (args.matchingTypes === undefined) {
            throw new Error("Missing required property 'matchingTypes'");
        }
        super("aws:ses/eventDestination:EventDestination", urnName, {
            "cloudwatchDestination": args.cloudwatchDestination,
            "configurationSetName": args.configurationSetName,
            "enabled": args.enabled,
            "kinesisDestination": args.kinesisDestination,
            "matchingTypes": args.matchingTypes,
            "name": args.name,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a EventDestination resource.
 */
export interface EventDestinationArgs {
    /**
     * CloudWatch destination for the events
     */
    readonly cloudwatchDestination?: pulumi.ComputedValue<{ defaultValue: pulumi.ComputedValue<string>, dimensionName: pulumi.ComputedValue<string>, valueSource: pulumi.ComputedValue<string> }>[];
    /**
     * The name of the configuration set
     */
    readonly configurationSetName: pulumi.ComputedValue<string>;
    /**
     * If true, the event destination will be enabled
     */
    readonly enabled?: pulumi.ComputedValue<boolean>;
    /**
     * Send the events to a kinesis firehose destination
     */
    readonly kinesisDestination?: pulumi.ComputedValue<{ roleArn: pulumi.ComputedValue<string>, streamArn: pulumi.ComputedValue<string> }>[];
    /**
     * A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, or `"delivery"`.
     */
    readonly matchingTypes: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * The name of the event destination
     */
    readonly name?: pulumi.ComputedValue<string>;
}

