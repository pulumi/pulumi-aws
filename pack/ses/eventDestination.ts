// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class EventDestination extends fabric.Resource {
    public readonly cloudwatchDestination?: fabric.Computed<{ defaultValue: string, dimensionName: string, valueSource: string }[]>;
    public readonly configurationSetName: fabric.Computed<string>;
    public readonly enabled?: fabric.Computed<boolean>;
    public readonly kinesisDestination?: fabric.Computed<{ roleArn: string, streamArn: string }[]>;
    public readonly matchingTypes: fabric.Computed<string[]>;
    public readonly name: fabric.Computed<string>;

    /**
     * Create a EventDestination resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this EventDestination instance
     * @param args A collection of arguments for creating this EventDestination intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: EventDestinationArgs, dependsOn?: fabric.Resource[]) {
        if (args.configurationSetName === undefined) {
            throw new Error("Missing required property 'configurationSetName'");
        }
        if (args.matchingTypes === undefined) {
            throw new Error("Missing required property 'matchingTypes'");
        }
        super("aws:ses/eventDestination:EventDestination", urnName, {
            "cloudwatchDestination": args.cloudwatchDestination,
            "configurationSetName": args.configurationSetName,
            "enabled": args.enabled,
            "kinesisDestination": args.kinesisDestination,
            "matchingTypes": args.matchingTypes,
            "name": args.name,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a EventDestination resource.
 */
export interface EventDestinationArgs {
    readonly cloudwatchDestination?: fabric.MaybeComputed<{ defaultValue: fabric.MaybeComputed<string>, dimensionName: fabric.MaybeComputed<string>, valueSource: fabric.MaybeComputed<string> }>[];
    readonly configurationSetName: fabric.MaybeComputed<string>;
    readonly enabled?: fabric.MaybeComputed<boolean>;
    readonly kinesisDestination?: fabric.MaybeComputed<{ roleArn: fabric.MaybeComputed<string>, streamArn: fabric.MaybeComputed<string> }>[];
    readonly matchingTypes: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    readonly name?: fabric.MaybeComputed<string>;
}

