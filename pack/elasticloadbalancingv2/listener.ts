// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an Application Load Balancer Listener resource.
 */
export class Listener extends pulumi.Resource {
    /**
     * The ARN of the listener (matches `id`)
     */
    public /*out*/ readonly arn: pulumi.Computed<string>;
    /**
     * The ARN of the SSL server certificate. Exactly one certificate is required if the protocol is HTTPS.
     */
    public readonly certificateArn?: pulumi.Computed<string>;
    /**
     * An Action block. Action blocks are documented below.
     */
    public readonly defaultActions: pulumi.Computed<{ targetGroupArn: string, type: string }[]>;
    /**
     * The ARN of the load balancer.
     */
    public readonly loadBalancerArn: pulumi.Computed<string>;
    /**
     * The port on which the load balancer is listening.
     */
    public readonly port: pulumi.Computed<number>;
    /**
     * The protocol for connections from clients to the load balancer. Valid values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
     */
    public readonly protocol?: pulumi.Computed<string>;
    /**
     * The name of the SSL Policy for the listener. Required if `protocol` is `HTTPS`.
     */
    public readonly sslPolicy: pulumi.Computed<string>;

    /**
     * Create a Listener resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Listener instance
     * @param args A collection of arguments for creating this Listener intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: ListenerArgs, dependsOn?: pulumi.Resource[]) {
        if (args.defaultActions === undefined) {
            throw new Error("Missing required property 'defaultActions'");
        }
        if (args.loadBalancerArn === undefined) {
            throw new Error("Missing required property 'loadBalancerArn'");
        }
        if (args.port === undefined) {
            throw new Error("Missing required property 'port'");
        }
        super("aws:elasticloadbalancingv2/listener:Listener", urnName, {
            "certificateArn": args.certificateArn,
            "defaultActions": args.defaultActions,
            "loadBalancerArn": args.loadBalancerArn,
            "port": args.port,
            "protocol": args.protocol,
            "sslPolicy": args.sslPolicy,
            "arn": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Listener resource.
 */
export interface ListenerArgs {
    /**
     * The ARN of the SSL server certificate. Exactly one certificate is required if the protocol is HTTPS.
     */
    readonly certificateArn?: pulumi.ComputedValue<string>;
    /**
     * An Action block. Action blocks are documented below.
     */
    readonly defaultActions: pulumi.ComputedValue<{ targetGroupArn: pulumi.ComputedValue<string>, type: pulumi.ComputedValue<string> }>[];
    /**
     * The ARN of the load balancer.
     */
    readonly loadBalancerArn: pulumi.ComputedValue<string>;
    /**
     * The port on which the load balancer is listening.
     */
    readonly port: pulumi.ComputedValue<number>;
    /**
     * The protocol for connections from clients to the load balancer. Valid values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
     */
    readonly protocol?: pulumi.ComputedValue<string>;
    /**
     * The name of the SSL Policy for the listener. Required if `protocol` is `HTTPS`.
     */
    readonly sslPolicy?: pulumi.ComputedValue<string>;
}

