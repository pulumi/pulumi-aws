// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Domain extends fabric.Resource {
    public readonly accessPolicies: fabric.Computed<string>;
    public readonly advancedOptions: fabric.Computed<{[key: string]: any}>;
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly clusterConfig: fabric.Computed<{ dedicatedMasterCount?: number, dedicatedMasterEnabled?: boolean, dedicatedMasterType?: string, instanceCount?: number, instanceType?: string, zoneAwarenessEnabled?: boolean }[]>;
    public /*out*/ readonly domainId: fabric.Computed<string>;
    public readonly domainName: fabric.Computed<string>;
    public readonly ebsOptions: fabric.Computed<{ ebsEnabled: boolean, iops?: number, volumeSize?: number, volumeType: string }[]>;
    public readonly elasticsearchVersion?: fabric.Computed<string>;
    public /*out*/ readonly endpoint: fabric.Computed<string>;
    public readonly snapshotOptions?: fabric.Computed<{ automatedSnapshotStartHour: number }[]>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;

    constructor(urnName: string, args: DomainArgs, dependsOn?: fabric.Resource[]) {
        if (args.domainName === undefined) {
            throw new Error("Missing required property 'domainName'");
        }
        super("aws:elasticsearch/domain:Domain", urnName, {
            "accessPolicies": args.accessPolicies,
            "advancedOptions": args.advancedOptions,
            "clusterConfig": args.clusterConfig,
            "domainName": args.domainName,
            "ebsOptions": args.ebsOptions,
            "elasticsearchVersion": args.elasticsearchVersion,
            "snapshotOptions": args.snapshotOptions,
            "tags": args.tags,
            "arn": undefined,
            "domainId": undefined,
            "endpoint": undefined,
        }, dependsOn);
    }
}

export interface DomainArgs {
    readonly accessPolicies?: fabric.ComputedValue<string>;
    readonly advancedOptions?: fabric.ComputedValue<{[key: string]: any}>;
    readonly clusterConfig?: fabric.ComputedValue<{ dedicatedMasterCount?: fabric.ComputedValue<number>, dedicatedMasterEnabled?: fabric.ComputedValue<boolean>, dedicatedMasterType?: fabric.ComputedValue<string>, instanceCount?: fabric.ComputedValue<number>, instanceType?: fabric.ComputedValue<string>, zoneAwarenessEnabled?: fabric.ComputedValue<boolean> }>[];
    readonly domainName: fabric.ComputedValue<string>;
    readonly ebsOptions?: fabric.ComputedValue<{ ebsEnabled: fabric.ComputedValue<boolean>, iops?: fabric.ComputedValue<number>, volumeSize?: fabric.ComputedValue<number>, volumeType?: fabric.ComputedValue<string> }>[];
    readonly elasticsearchVersion?: fabric.ComputedValue<string>;
    readonly snapshotOptions?: fabric.ComputedValue<{ automatedSnapshotStartHour: fabric.ComputedValue<number> }>[];
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
}

