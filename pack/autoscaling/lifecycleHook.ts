// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an AutoScaling Lifecycle Hook resource.
 * 
 * ~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via
 * the `initial_lifecycle_hook` attribute from the
 * [`aws_autoscaling_group`](/docs/providers/aws/r/autoscaling_group.html)
 * resource, or via this one. Hooks added via this resource will not be added
 * until the autoscaling group has been created, and depending on your
 * [capacity](/docs/providers/aws/r/autoscaling_group.html#waiting-for-capacity)
 * settings, after the initial instances have been launched, creating unintended
 * behavior. If you need hooks to run on all instances, add them with
 * `initial_lifecycle_hook` in
 * [`aws_autoscaling_group`](/docs/providers/aws/r/autoscaling_group.html),
 * but take care to not duplicate those hooks with this resource.
 */
export class LifecycleHook extends pulumi.Resource {
    /**
     * The name of the Auto Scaling group to which you want to assign the lifecycle hook
     */
    public readonly autoscalingGroupName: pulumi.Computed<string>;
    /**
     * Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.
     */
    public readonly defaultResult: pulumi.Computed<string>;
    /**
     * Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter
     */
    public readonly heartbeatTimeout?: pulumi.Computed<number>;
    /**
     * The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see [describe-lifecycle-hook-types](https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-lifecycle-hook-types.html#examples)
     */
    public readonly lifecycleTransition: pulumi.Computed<string>;
    /**
     * The name of the lifecycle hook.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
     */
    public readonly notificationMetadata?: pulumi.Computed<string>;
    /**
     * The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.
     */
    public readonly notificationTargetArn?: pulumi.Computed<string>;
    /**
     * The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
     */
    public readonly roleArn?: pulumi.Computed<string>;

    /**
     * Create a LifecycleHook resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this LifecycleHook instance
     * @param args A collection of arguments for creating this LifecycleHook intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: LifecycleHookArgs, dependsOn?: pulumi.Resource[]) {
        if (args.autoscalingGroupName === undefined) {
            throw new Error("Missing required property 'autoscalingGroupName'");
        }
        if (args.lifecycleTransition === undefined) {
            throw new Error("Missing required property 'lifecycleTransition'");
        }
        super("aws:autoscaling/lifecycleHook:LifecycleHook", urnName, {
            "autoscalingGroupName": args.autoscalingGroupName,
            "defaultResult": args.defaultResult,
            "heartbeatTimeout": args.heartbeatTimeout,
            "lifecycleTransition": args.lifecycleTransition,
            "name": args.name,
            "notificationMetadata": args.notificationMetadata,
            "notificationTargetArn": args.notificationTargetArn,
            "roleArn": args.roleArn,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a LifecycleHook resource.
 */
export interface LifecycleHookArgs {
    /**
     * The name of the Auto Scaling group to which you want to assign the lifecycle hook
     */
    readonly autoscalingGroupName: pulumi.ComputedValue<string>;
    /**
     * Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.
     */
    readonly defaultResult?: pulumi.ComputedValue<string>;
    /**
     * Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter
     */
    readonly heartbeatTimeout?: pulumi.ComputedValue<number>;
    /**
     * The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see [describe-lifecycle-hook-types](https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-lifecycle-hook-types.html#examples)
     */
    readonly lifecycleTransition: pulumi.ComputedValue<string>;
    /**
     * The name of the lifecycle hook.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
     */
    readonly notificationMetadata?: pulumi.ComputedValue<string>;
    /**
     * The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.
     */
    readonly notificationTargetArn?: pulumi.ComputedValue<string>;
    /**
     * The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
     */
    readonly roleArn?: pulumi.ComputedValue<string>;
}

