// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class IdentityPool extends fabric.Resource {
    public readonly allowUnauthenticatedIdentities?: fabric.Computed<boolean>;
    public readonly cognitoIdentityProviders?: fabric.Computed<{ clientId?: string, providerName?: string, serverSideTokenCheck?: boolean }[]>;
    public readonly developerProviderName?: fabric.Computed<string>;
    public readonly identityPoolName: fabric.Computed<string>;
    public readonly openidConnectProviderArns?: fabric.Computed<string[]>;
    public readonly samlProviderArns?: fabric.Computed<string[]>;
    public readonly supportedLoginProviders?: fabric.Computed<{[key: string]: string}>;

    /**
     * Create a IdentityPool resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this IdentityPool instance
     * @param args A collection of arguments for creating this IdentityPool intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: IdentityPoolArgs, dependsOn?: fabric.Resource[]) {
        if (args.identityPoolName === undefined) {
            throw new Error("Missing required property 'identityPoolName'");
        }
        super("aws:cognito/identityPool:IdentityPool", urnName, {
            "allowUnauthenticatedIdentities": args.allowUnauthenticatedIdentities,
            "cognitoIdentityProviders": args.cognitoIdentityProviders,
            "developerProviderName": args.developerProviderName,
            "identityPoolName": args.identityPoolName,
            "openidConnectProviderArns": args.openidConnectProviderArns,
            "samlProviderArns": args.samlProviderArns,
            "supportedLoginProviders": args.supportedLoginProviders,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a IdentityPool resource.
 */
export interface IdentityPoolArgs {
    readonly allowUnauthenticatedIdentities?: fabric.MaybeComputed<boolean>;
    readonly cognitoIdentityProviders?: fabric.MaybeComputed<{ clientId?: fabric.MaybeComputed<string>, providerName?: fabric.MaybeComputed<string>, serverSideTokenCheck?: fabric.MaybeComputed<boolean> }>[];
    readonly developerProviderName?: fabric.MaybeComputed<string>;
    readonly identityPoolName: fabric.MaybeComputed<string>;
    readonly openidConnectProviderArns?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    readonly samlProviderArns?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    readonly supportedLoginProviders?: fabric.MaybeComputed<{[key: string]: fabric.MaybeComputed<string>}>;
}

