// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an OpsWorks instance resource.
 */
export class Instance extends pulumi.Resource {
    /**
     * The AWS OpsWorks agent to install.  Defaults to `"INHERIT"`.
     */
    public readonly agentVersion?: pulumi.Computed<string>;
    /**
     * The AMI to use for the instance.  If an AMI is specified, `os` must be `"Custom"`.
     */
    public readonly amiId: pulumi.Computed<string>;
    /**
     * Machine architecture for created instances.  Can be either `"x86_64"` (the default) or `"i386"`
     */
    public readonly architecture?: pulumi.Computed<string>;
    /**
     * Creates load-based or time-based instances.  If set, can be either: `"load"` or `"timer"`.
     */
    public readonly autoScalingType?: pulumi.Computed<string>;
    /**
     * Name of the availability zone where instances will be created
     * by default.
     */
    public readonly availabilityZone: pulumi.Computed<string>;
    public readonly createdAt: pulumi.Computed<string>;
    public readonly deleteEbs?: pulumi.Computed<boolean>;
    public readonly deleteEip?: pulumi.Computed<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  See [Block Devices](#block-devices) below for details.
     */
    public readonly ebsBlockDevice: pulumi.Computed<{ deleteOnTermination?: boolean, deviceName: string, iops: number, snapshotId: string, volumeSize: number, volumeType: string }[]>;
    /**
     * If true, the launched EC2 instance will be EBS-optimized.
     */
    public readonly ebsOptimized?: pulumi.Computed<boolean>;
    public readonly ec2InstanceId: pulumi.Computed<string>;
    public readonly ecsClusterArn: pulumi.Computed<string>;
    public readonly elasticIp: pulumi.Computed<string>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See [Block Devices](#block-devices) below for details.
     */
    public readonly ephemeralBlockDevice: pulumi.Computed<{ deviceName: string, virtualName: string }[]>;
    /**
     * The instance's host name.
     */
    public readonly hostname: pulumi.Computed<string>;
    /**
     * The id of the OpsWorks instance.
     */
    public /*out*/ readonly instanceId: pulumi.Computed<string>;
    public readonly infrastructureClass: pulumi.Computed<string>;
    /**
     * Controls where to install OS and package updates when the instance boots.  Defaults to `true`.
     */
    public readonly installUpdatesOnBoot?: pulumi.Computed<boolean>;
    public readonly instanceProfileArn: pulumi.Computed<string>;
    /**
     * The type of instance to start
     */
    public readonly instanceType?: pulumi.Computed<string>;
    public readonly lastServiceErrorId: pulumi.Computed<string>;
    /**
     * The ids of the layers the instance will belong to.
     */
    public readonly layerIds: pulumi.Computed<string[]>;
    /**
     * Name of operating system that will be installed.
     */
    public readonly os: pulumi.Computed<string>;
    public readonly platform: pulumi.Computed<string>;
    /**
     * The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     */
    public readonly privateDns: pulumi.Computed<string>;
    /**
     * The private IP address assigned to the instance
     */
    public readonly privateIp: pulumi.Computed<string>;
    /**
     * The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     */
    public readonly publicDns: pulumi.Computed<string>;
    /**
     * The public IP address assigned to the instance, if applicable.
     */
    public readonly publicIp: pulumi.Computed<string>;
    public readonly registeredBy: pulumi.Computed<string>;
    public readonly reportedAgentVersion: pulumi.Computed<string>;
    public readonly reportedOsFamily: pulumi.Computed<string>;
    public readonly reportedOsName: pulumi.Computed<string>;
    public readonly reportedOsVersion: pulumi.Computed<string>;
    /**
     * Customize details about the root block
     * device of the instance. See [Block Devices](#block-devices) below for details.
     */
    public readonly rootBlockDevice: pulumi.Computed<{ deleteOnTermination?: boolean, iops: number, volumeSize: number, volumeType: string }[]>;
    /**
     * Name of the type of root device instances will have by default.  Can be either `"ebs"` or `"instance-store"`
     */
    public readonly rootDeviceType: pulumi.Computed<string>;
    public readonly rootDeviceVolumeId: pulumi.Computed<string>;
    /**
     * The associated security groups.
     */
    public readonly securityGroupIds: pulumi.Computed<string[]>;
    public readonly sshHostDsaKeyFingerprint: pulumi.Computed<string>;
    public readonly sshHostRsaKeyFingerprint: pulumi.Computed<string>;
    /**
     * Name of the SSH keypair that instances will have by default.
     */
    public readonly sshKeyName: pulumi.Computed<string>;
    /**
     * The id of the stack the instance will belong to.
     */
    public readonly stackId: pulumi.Computed<string>;
    /**
     * The desired state of the instance.  Can be either `"running"` or `"stopped"`.
     */
    public readonly state?: pulumi.Computed<string>;
    public readonly status: pulumi.Computed<string>;
    /**
     * Subnet ID to attach to
     */
    public readonly subnetId: pulumi.Computed<string>;
    /**
     * Instance tenancy to use. Can be one of `"default"`, `"dedicated"` or `"host"`
     */
    public readonly tenancy: pulumi.Computed<string>;
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either `"paravirtual"` or `"hvm"`.
     */
    public readonly virtualizationType: pulumi.Computed<string>;

    /**
     * Create a Instance resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Instance instance
     * @param args A collection of arguments for creating this Instance intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: InstanceArgs, dependsOn?: pulumi.Resource[]) {
        if (args.layerIds === undefined) {
            throw new Error("Missing required property 'layerIds'");
        }
        if (args.stackId === undefined) {
            throw new Error("Missing required property 'stackId'");
        }
        super("aws:opsworks/instance:Instance", urnName, {
            "agentVersion": args.agentVersion,
            "amiId": args.amiId,
            "architecture": args.architecture,
            "autoScalingType": args.autoScalingType,
            "availabilityZone": args.availabilityZone,
            "createdAt": args.createdAt,
            "deleteEbs": args.deleteEbs,
            "deleteEip": args.deleteEip,
            "ebsBlockDevice": args.ebsBlockDevice,
            "ebsOptimized": args.ebsOptimized,
            "ec2InstanceId": args.ec2InstanceId,
            "ecsClusterArn": args.ecsClusterArn,
            "elasticIp": args.elasticIp,
            "ephemeralBlockDevice": args.ephemeralBlockDevice,
            "hostname": args.hostname,
            "infrastructureClass": args.infrastructureClass,
            "installUpdatesOnBoot": args.installUpdatesOnBoot,
            "instanceProfileArn": args.instanceProfileArn,
            "instanceType": args.instanceType,
            "lastServiceErrorId": args.lastServiceErrorId,
            "layerIds": args.layerIds,
            "os": args.os,
            "platform": args.platform,
            "privateDns": args.privateDns,
            "privateIp": args.privateIp,
            "publicDns": args.publicDns,
            "publicIp": args.publicIp,
            "registeredBy": args.registeredBy,
            "reportedAgentVersion": args.reportedAgentVersion,
            "reportedOsFamily": args.reportedOsFamily,
            "reportedOsName": args.reportedOsName,
            "reportedOsVersion": args.reportedOsVersion,
            "rootBlockDevice": args.rootBlockDevice,
            "rootDeviceType": args.rootDeviceType,
            "rootDeviceVolumeId": args.rootDeviceVolumeId,
            "securityGroupIds": args.securityGroupIds,
            "sshHostDsaKeyFingerprint": args.sshHostDsaKeyFingerprint,
            "sshHostRsaKeyFingerprint": args.sshHostRsaKeyFingerprint,
            "sshKeyName": args.sshKeyName,
            "stackId": args.stackId,
            "state": args.state,
            "status": args.status,
            "subnetId": args.subnetId,
            "tenancy": args.tenancy,
            "virtualizationType": args.virtualizationType,
            "instanceId": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The AWS OpsWorks agent to install.  Defaults to `"INHERIT"`.
     */
    readonly agentVersion?: pulumi.ComputedValue<string>;
    /**
     * The AMI to use for the instance.  If an AMI is specified, `os` must be `"Custom"`.
     */
    readonly amiId?: pulumi.ComputedValue<string>;
    /**
     * Machine architecture for created instances.  Can be either `"x86_64"` (the default) or `"i386"`
     */
    readonly architecture?: pulumi.ComputedValue<string>;
    /**
     * Creates load-based or time-based instances.  If set, can be either: `"load"` or `"timer"`.
     */
    readonly autoScalingType?: pulumi.ComputedValue<string>;
    /**
     * Name of the availability zone where instances will be created
     * by default.
     */
    readonly availabilityZone?: pulumi.ComputedValue<string>;
    readonly createdAt?: pulumi.ComputedValue<string>;
    readonly deleteEbs?: pulumi.ComputedValue<boolean>;
    readonly deleteEip?: pulumi.ComputedValue<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  See [Block Devices](#block-devices) below for details.
     */
    readonly ebsBlockDevice?: pulumi.ComputedValue<{ deleteOnTermination?: pulumi.ComputedValue<boolean>, deviceName: pulumi.ComputedValue<string>, iops?: pulumi.ComputedValue<number>, snapshotId?: pulumi.ComputedValue<string>, volumeSize?: pulumi.ComputedValue<number>, volumeType?: pulumi.ComputedValue<string> }>[];
    /**
     * If true, the launched EC2 instance will be EBS-optimized.
     */
    readonly ebsOptimized?: pulumi.ComputedValue<boolean>;
    readonly ec2InstanceId?: pulumi.ComputedValue<string>;
    readonly ecsClusterArn?: pulumi.ComputedValue<string>;
    readonly elasticIp?: pulumi.ComputedValue<string>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See [Block Devices](#block-devices) below for details.
     */
    readonly ephemeralBlockDevice?: pulumi.ComputedValue<{ deviceName: pulumi.ComputedValue<string>, virtualName: pulumi.ComputedValue<string> }>[];
    /**
     * The instance's host name.
     */
    readonly hostname?: pulumi.ComputedValue<string>;
    readonly infrastructureClass?: pulumi.ComputedValue<string>;
    /**
     * Controls where to install OS and package updates when the instance boots.  Defaults to `true`.
     */
    readonly installUpdatesOnBoot?: pulumi.ComputedValue<boolean>;
    readonly instanceProfileArn?: pulumi.ComputedValue<string>;
    /**
     * The type of instance to start
     */
    readonly instanceType?: pulumi.ComputedValue<string>;
    readonly lastServiceErrorId?: pulumi.ComputedValue<string>;
    /**
     * The ids of the layers the instance will belong to.
     */
    readonly layerIds: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * Name of operating system that will be installed.
     */
    readonly os?: pulumi.ComputedValue<string>;
    readonly platform?: pulumi.ComputedValue<string>;
    readonly privateDns?: pulumi.ComputedValue<string>;
    readonly privateIp?: pulumi.ComputedValue<string>;
    readonly publicDns?: pulumi.ComputedValue<string>;
    readonly publicIp?: pulumi.ComputedValue<string>;
    readonly registeredBy?: pulumi.ComputedValue<string>;
    readonly reportedAgentVersion?: pulumi.ComputedValue<string>;
    readonly reportedOsFamily?: pulumi.ComputedValue<string>;
    readonly reportedOsName?: pulumi.ComputedValue<string>;
    readonly reportedOsVersion?: pulumi.ComputedValue<string>;
    /**
     * Customize details about the root block
     * device of the instance. See [Block Devices](#block-devices) below for details.
     */
    readonly rootBlockDevice?: pulumi.ComputedValue<{ deleteOnTermination?: pulumi.ComputedValue<boolean>, iops?: pulumi.ComputedValue<number>, volumeSize?: pulumi.ComputedValue<number>, volumeType?: pulumi.ComputedValue<string> }>[];
    /**
     * Name of the type of root device instances will have by default.  Can be either `"ebs"` or `"instance-store"`
     */
    readonly rootDeviceType?: pulumi.ComputedValue<string>;
    readonly rootDeviceVolumeId?: pulumi.ComputedValue<string>;
    readonly securityGroupIds?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    readonly sshHostDsaKeyFingerprint?: pulumi.ComputedValue<string>;
    readonly sshHostRsaKeyFingerprint?: pulumi.ComputedValue<string>;
    /**
     * Name of the SSH keypair that instances will have by default.
     */
    readonly sshKeyName?: pulumi.ComputedValue<string>;
    /**
     * The id of the stack the instance will belong to.
     */
    readonly stackId: pulumi.ComputedValue<string>;
    /**
     * The desired state of the instance.  Can be either `"running"` or `"stopped"`.
     */
    readonly state?: pulumi.ComputedValue<string>;
    readonly status?: pulumi.ComputedValue<string>;
    /**
     * Subnet ID to attach to
     */
    readonly subnetId?: pulumi.ComputedValue<string>;
    /**
     * Instance tenancy to use. Can be one of `"default"`, `"dedicated"` or `"host"`
     */
    readonly tenancy?: pulumi.ComputedValue<string>;
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either `"paravirtual"` or `"hvm"`.
     */
    readonly virtualizationType?: pulumi.ComputedValue<string>;
}

