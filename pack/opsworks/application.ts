// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an OpsWorks application resource.
 */
export class Application extends pulumi.Resource {
    /**
     * SCM configuration of the app as described below.
     */
    public readonly appSource: pulumi.Computed<{ password?: string, revision?: string, sshKey?: string, type: string, url?: string, username?: string }[]>;
    /**
     * Run bundle install when deploying for application of type `rails`.
     */
    public readonly autoBundleOnDeploy?: pulumi.Computed<string>;
    /**
     * Specify activity and workflow workers for your app using the aws-flow gem.
     */
    public readonly awsFlowRubySettings?: pulumi.Computed<string>;
    /**
     * The data source's ARN.
     */
    public readonly dataSourceArn?: pulumi.Computed<string>;
    /**
     * The database name.
     */
    public readonly dataSourceDatabaseName?: pulumi.Computed<string>;
    /**
     * The data source's type one of `AutoSelectOpsworksMysqlInstance`, `OpsworksMysqlInstance`, or `RdsDbInstance`.
     */
    public readonly dataSourceType?: pulumi.Computed<string>;
    /**
     * A description of the app.
     */
    public readonly description?: pulumi.Computed<string>;
    /**
     * Subfolder for the document root for application of type `rails`.
     */
    public readonly documentRoot?: pulumi.Computed<string>;
    /**
     * A list of virtual host alias.
     */
    public readonly domains?: pulumi.Computed<string[]>;
    /**
     * Whether to enable SSL for the app. This must be set in order to let `ssl_configuration.private_key`, `ssl_configuration.certificate` and `ssl_configuration.chain` take effect.
     */
    public readonly enableSsl?: pulumi.Computed<boolean>;
    /**
     * Object to define environment variables.  Object is described below.
     */
    public readonly environment?: pulumi.Computed<{ key: string, secure?: boolean, value: string }[]>;
    /**
     * The id of the application.
     */
    public /*out*/ readonly applicationId: pulumi.Computed<string>;
    /**
     * A human-readable name for the application.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * The name of the Rails environment for application of type `rails`.
     */
    public readonly railsEnv?: pulumi.Computed<string>;
    /**
     * A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
     */
    public readonly shortName: pulumi.Computed<string>;
    /**
     * The SSL configuration of the app. Object is described below.
     */
    public readonly sslConfiguration?: pulumi.Computed<{ certificate: string, chain?: string, privateKey: string }[]>;
    /**
     * The id of the stack the application will belong to.
     */
    public readonly stackId: pulumi.Computed<string>;
    /**
     * The type of source to use. For example, "archive".
     */
    public readonly type: pulumi.Computed<string>;

    /**
     * Create a Application resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Application instance
     * @param args A collection of arguments for creating this Application intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: ApplicationArgs, dependsOn?: pulumi.Resource[]) {
        if (args.stackId === undefined) {
            throw new Error("Missing required property 'stackId'");
        }
        if (args.type === undefined) {
            throw new Error("Missing required property 'type'");
        }
        super("aws:opsworks/application:Application", urnName, {
            "appSource": args.appSource,
            "autoBundleOnDeploy": args.autoBundleOnDeploy,
            "awsFlowRubySettings": args.awsFlowRubySettings,
            "dataSourceArn": args.dataSourceArn,
            "dataSourceDatabaseName": args.dataSourceDatabaseName,
            "dataSourceType": args.dataSourceType,
            "description": args.description,
            "documentRoot": args.documentRoot,
            "domains": args.domains,
            "enableSsl": args.enableSsl,
            "environment": args.environment,
            "name": args.name,
            "railsEnv": args.railsEnv,
            "shortName": args.shortName,
            "sslConfiguration": args.sslConfiguration,
            "stackId": args.stackId,
            "type": args.type,
            "applicationId": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * SCM configuration of the app as described below.
     */
    readonly appSource?: pulumi.ComputedValue<{ password?: pulumi.ComputedValue<string>, revision?: pulumi.ComputedValue<string>, sshKey?: pulumi.ComputedValue<string>, type: pulumi.ComputedValue<string>, url?: pulumi.ComputedValue<string>, username?: pulumi.ComputedValue<string> }>[];
    /**
     * Run bundle install when deploying for application of type `rails`.
     */
    readonly autoBundleOnDeploy?: pulumi.ComputedValue<string>;
    /**
     * Specify activity and workflow workers for your app using the aws-flow gem.
     */
    readonly awsFlowRubySettings?: pulumi.ComputedValue<string>;
    /**
     * The data source's ARN.
     */
    readonly dataSourceArn?: pulumi.ComputedValue<string>;
    /**
     * The database name.
     */
    readonly dataSourceDatabaseName?: pulumi.ComputedValue<string>;
    /**
     * The data source's type one of `AutoSelectOpsworksMysqlInstance`, `OpsworksMysqlInstance`, or `RdsDbInstance`.
     */
    readonly dataSourceType?: pulumi.ComputedValue<string>;
    /**
     * A description of the app.
     */
    readonly description?: pulumi.ComputedValue<string>;
    /**
     * Subfolder for the document root for application of type `rails`.
     */
    readonly documentRoot?: pulumi.ComputedValue<string>;
    /**
     * A list of virtual host alias.
     */
    readonly domains?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * Whether to enable SSL for the app. This must be set in order to let `ssl_configuration.private_key`, `ssl_configuration.certificate` and `ssl_configuration.chain` take effect.
     */
    readonly enableSsl?: pulumi.ComputedValue<boolean>;
    /**
     * Object to define environment variables.  Object is described below.
     */
    readonly environment?: pulumi.ComputedValue<{ key: pulumi.ComputedValue<string>, secure?: pulumi.ComputedValue<boolean>, value: pulumi.ComputedValue<string> }>[];
    /**
     * A human-readable name for the application.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * The name of the Rails environment for application of type `rails`.
     */
    readonly railsEnv?: pulumi.ComputedValue<string>;
    /**
     * A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
     */
    readonly shortName?: pulumi.ComputedValue<string>;
    /**
     * The SSL configuration of the app. Object is described below.
     */
    readonly sslConfiguration?: pulumi.ComputedValue<{ certificate: pulumi.ComputedValue<string>, chain?: pulumi.ComputedValue<string>, privateKey: pulumi.ComputedValue<string> }>[];
    /**
     * The id of the stack the application will belong to.
     */
    readonly stackId: pulumi.ComputedValue<string>;
    /**
     * The type of source to use. For example, "archive".
     */
    readonly type: pulumi.ComputedValue<string>;
}

