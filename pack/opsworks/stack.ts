// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Stack extends fabric.Resource {
    public readonly agentVersion: fabric.Computed<string>;
    public readonly berkshelfVersion?: fabric.Computed<string>;
    public readonly color?: fabric.Computed<string>;
    public readonly configurationManagerName?: fabric.Computed<string>;
    public readonly configurationManagerVersion?: fabric.Computed<string>;
    public readonly customCookbooksSource: fabric.Computed<{ password?: string, revision?: string, sshKey?: string, type: string, url: string, username?: string }[]>;
    public readonly customJson?: fabric.Computed<string>;
    public readonly defaultAvailabilityZone: fabric.Computed<string>;
    public readonly defaultInstanceProfileArn: fabric.Computed<string>;
    public readonly defaultOs?: fabric.Computed<string>;
    public readonly defaultRootDeviceType?: fabric.Computed<string>;
    public readonly defaultSshKeyName?: fabric.Computed<string>;
    public readonly defaultSubnetId: fabric.Computed<string>;
    public readonly hostnameTheme?: fabric.Computed<string>;
    public /*out*/ readonly stackId: fabric.Computed<string>;
    public readonly manageBerkshelf?: fabric.Computed<boolean>;
    public readonly name: fabric.Computed<string>;
    public readonly region: fabric.Computed<string>;
    public readonly serviceRoleArn: fabric.Computed<string>;
    public /*out*/ readonly stackEndpoint: fabric.Computed<string>;
    public readonly useCustomCookbooks?: fabric.Computed<boolean>;
    public readonly useOpsworksSecurityGroups?: fabric.Computed<boolean>;
    public readonly vpcId: fabric.Computed<string>;

    constructor(urnName: string, args: StackArgs, dependsOn?: fabric.Resource[]) {
        if (args.defaultInstanceProfileArn === undefined) {
            throw new Error("Missing required property 'defaultInstanceProfileArn'");
        }
        if (args.region === undefined) {
            throw new Error("Missing required property 'region'");
        }
        if (args.serviceRoleArn === undefined) {
            throw new Error("Missing required property 'serviceRoleArn'");
        }
        super("aws:opsworks/stack:Stack", urnName, {
            "agentVersion": args.agentVersion,
            "berkshelfVersion": args.berkshelfVersion,
            "color": args.color,
            "configurationManagerName": args.configurationManagerName,
            "configurationManagerVersion": args.configurationManagerVersion,
            "customCookbooksSource": args.customCookbooksSource,
            "customJson": args.customJson,
            "defaultAvailabilityZone": args.defaultAvailabilityZone,
            "defaultInstanceProfileArn": args.defaultInstanceProfileArn,
            "defaultOs": args.defaultOs,
            "defaultRootDeviceType": args.defaultRootDeviceType,
            "defaultSshKeyName": args.defaultSshKeyName,
            "defaultSubnetId": args.defaultSubnetId,
            "hostnameTheme": args.hostnameTheme,
            "manageBerkshelf": args.manageBerkshelf,
            "name": args.name,
            "region": args.region,
            "serviceRoleArn": args.serviceRoleArn,
            "useCustomCookbooks": args.useCustomCookbooks,
            "useOpsworksSecurityGroups": args.useOpsworksSecurityGroups,
            "vpcId": args.vpcId,
            "stackId": undefined,
            "stackEndpoint": undefined,
        }, dependsOn);
    }
}

export interface StackArgs {
    readonly agentVersion?: fabric.ComputedValue<string>;
    readonly berkshelfVersion?: fabric.ComputedValue<string>;
    readonly color?: fabric.ComputedValue<string>;
    readonly configurationManagerName?: fabric.ComputedValue<string>;
    readonly configurationManagerVersion?: fabric.ComputedValue<string>;
    readonly customCookbooksSource?: fabric.ComputedValue<{ password?: fabric.ComputedValue<string>, revision?: fabric.ComputedValue<string>, sshKey?: fabric.ComputedValue<string>, type: fabric.ComputedValue<string>, url: fabric.ComputedValue<string>, username?: fabric.ComputedValue<string> }>[];
    readonly customJson?: fabric.ComputedValue<string>;
    readonly defaultAvailabilityZone?: fabric.ComputedValue<string>;
    readonly defaultInstanceProfileArn: fabric.ComputedValue<string>;
    readonly defaultOs?: fabric.ComputedValue<string>;
    readonly defaultRootDeviceType?: fabric.ComputedValue<string>;
    readonly defaultSshKeyName?: fabric.ComputedValue<string>;
    readonly defaultSubnetId?: fabric.ComputedValue<string>;
    readonly hostnameTheme?: fabric.ComputedValue<string>;
    readonly manageBerkshelf?: fabric.ComputedValue<boolean>;
    readonly name?: fabric.ComputedValue<string>;
    readonly region: fabric.ComputedValue<string>;
    readonly serviceRoleArn: fabric.ComputedValue<string>;
    readonly useCustomCookbooks?: fabric.ComputedValue<boolean>;
    readonly useOpsworksSecurityGroups?: fabric.ComputedValue<boolean>;
    readonly vpcId?: fabric.ComputedValue<string>;
}

