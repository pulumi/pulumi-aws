// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides a CodePipeline.
 * 
 * ~> **NOTE on `aws_codepipeline`:** - the `GITHUB_TOKEN` environment variable must be set if the GitHub provider is specified.
 */
export class Pipeline extends pulumi.Resource {
    /**
     * An artifact_store block. Artifact stores are documented below.
     */
    public readonly artifactStore: pulumi.Computed<{ encryptionKey?: { id: string, type: string }[], location: string, type: string }[]>;
    /**
     * The action declaration's name.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
     */
    public readonly roleArn: pulumi.Computed<string>;
    /**
     * A stage block. Stages are documented below.
     */
    public readonly stage: pulumi.Computed<{ action: { category: string, configuration?: {[key: string]: any}, inputArtifacts?: string[], name: string, outputArtifacts?: string[], owner: string, provider: string, roleArn?: string, runOrder: number, version: string }[], name: string }[]>;

    /**
     * Create a Pipeline resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Pipeline instance
     * @param args A collection of arguments for creating this Pipeline intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: PipelineArgs, dependsOn?: pulumi.Resource[]) {
        if (args.artifactStore === undefined) {
            throw new Error("Missing required property 'artifactStore'");
        }
        if (args.roleArn === undefined) {
            throw new Error("Missing required property 'roleArn'");
        }
        if (args.stage === undefined) {
            throw new Error("Missing required property 'stage'");
        }
        super("aws:codepipeline/pipeline:Pipeline", urnName, {
            "artifactStore": args.artifactStore,
            "name": args.name,
            "roleArn": args.roleArn,
            "stage": args.stage,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * An artifact_store block. Artifact stores are documented below.
     */
    readonly artifactStore: pulumi.ComputedValue<{ encryptionKey?: pulumi.ComputedValue<{ id: pulumi.ComputedValue<string>, type: pulumi.ComputedValue<string> }>[], location: pulumi.ComputedValue<string>, type: pulumi.ComputedValue<string> }>[];
    /**
     * The action declaration's name.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
     */
    readonly roleArn: pulumi.ComputedValue<string>;
    /**
     * A stage block. Stages are documented below.
     */
    readonly stage: pulumi.ComputedValue<{ action: pulumi.ComputedValue<{ category: pulumi.ComputedValue<string>, configuration?: pulumi.ComputedValue<{[key: string]: any}>, inputArtifacts?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], name: pulumi.ComputedValue<string>, outputArtifacts?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], owner: pulumi.ComputedValue<string>, provider: pulumi.ComputedValue<string>, roleArn?: pulumi.ComputedValue<string>, runOrder?: pulumi.ComputedValue<number>, version: pulumi.ComputedValue<string> }>[], name: pulumi.ComputedValue<string> }>[];
}

