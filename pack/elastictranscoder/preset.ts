// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Preset extends fabric.Resource {
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly audio?: fabric.Computed<{ audioPackingMode?: string, bitRate?: string, channels?: string, codec?: string, sampleRate?: string }[]>;
    public readonly audioCodecOptions?: fabric.Computed<{ bitDepth?: string, bitOrder?: string, profile?: string, signed?: string }[]>;
    public readonly container: fabric.Computed<string>;
    public readonly description?: fabric.Computed<string>;
    public readonly name: fabric.Computed<string>;
    public readonly thumbnails?: fabric.Computed<{ aspectRatio?: string, format?: string, interval?: string, maxHeight?: string, maxWidth?: string, paddingPolicy?: string, resolution?: string, sizingPolicy?: string }[]>;
    public readonly type: fabric.Computed<string>;
    public readonly video?: fabric.Computed<{ aspectRatio?: string, bitRate?: string, codec?: string, displayAspectRatio?: string, fixedGop?: string, frameRate?: string, keyframesMaxDist?: string, maxFrameRate?: string, maxHeight?: string, maxWidth?: string, paddingPolicy?: string, resolution?: string, sizingPolicy?: string }[]>;
    public readonly videoCodecOptions?: fabric.Computed<{[key: string]: any}>;
    public readonly videoWatermarks?: fabric.Computed<{ horizontalAlign?: string, horizontalOffset?: string, id?: string, maxHeight?: string, maxWidth?: string, opacity?: string, sizingPolicy?: string, target?: string, verticalAlign?: string, verticalOffset?: string }[]>;

    /**
     * Create a Preset resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Preset instance
     * @param args A collection of arguments for creating this Preset intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: PresetArgs, dependsOn?: fabric.Resource[]) {
        if (args.container === undefined) {
            throw new Error("Missing required property 'container'");
        }
        super("aws:elastictranscoder/preset:Preset", urnName, {
            "audio": args.audio,
            "audioCodecOptions": args.audioCodecOptions,
            "container": args.container,
            "description": args.description,
            "name": args.name,
            "thumbnails": args.thumbnails,
            "type": args.type,
            "video": args.video,
            "videoCodecOptions": args.videoCodecOptions,
            "videoWatermarks": args.videoWatermarks,
            "arn": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Preset resource.
 */
export interface PresetArgs {
    readonly audio?: fabric.MaybeComputed<{ audioPackingMode?: fabric.MaybeComputed<string>, bitRate?: fabric.MaybeComputed<string>, channels?: fabric.MaybeComputed<string>, codec?: fabric.MaybeComputed<string>, sampleRate?: fabric.MaybeComputed<string> }>[];
    readonly audioCodecOptions?: fabric.MaybeComputed<{ bitDepth?: fabric.MaybeComputed<string>, bitOrder?: fabric.MaybeComputed<string>, profile?: fabric.MaybeComputed<string>, signed?: fabric.MaybeComputed<string> }>[];
    readonly container: fabric.MaybeComputed<string>;
    readonly description?: fabric.MaybeComputed<string>;
    readonly name?: fabric.MaybeComputed<string>;
    readonly thumbnails?: fabric.MaybeComputed<{ aspectRatio?: fabric.MaybeComputed<string>, format?: fabric.MaybeComputed<string>, interval?: fabric.MaybeComputed<string>, maxHeight?: fabric.MaybeComputed<string>, maxWidth?: fabric.MaybeComputed<string>, paddingPolicy?: fabric.MaybeComputed<string>, resolution?: fabric.MaybeComputed<string>, sizingPolicy?: fabric.MaybeComputed<string> }>[];
    readonly type?: fabric.MaybeComputed<string>;
    readonly video?: fabric.MaybeComputed<{ aspectRatio?: fabric.MaybeComputed<string>, bitRate?: fabric.MaybeComputed<string>, codec?: fabric.MaybeComputed<string>, displayAspectRatio?: fabric.MaybeComputed<string>, fixedGop?: fabric.MaybeComputed<string>, frameRate?: fabric.MaybeComputed<string>, keyframesMaxDist?: fabric.MaybeComputed<string>, maxFrameRate?: fabric.MaybeComputed<string>, maxHeight?: fabric.MaybeComputed<string>, maxWidth?: fabric.MaybeComputed<string>, paddingPolicy?: fabric.MaybeComputed<string>, resolution?: fabric.MaybeComputed<string>, sizingPolicy?: fabric.MaybeComputed<string> }>[];
    readonly videoCodecOptions?: fabric.MaybeComputed<{[key: string]: any}>;
    readonly videoWatermarks?: fabric.MaybeComputed<{ horizontalAlign?: fabric.MaybeComputed<string>, horizontalOffset?: fabric.MaybeComputed<string>, id?: fabric.MaybeComputed<string>, maxHeight?: fabric.MaybeComputed<string>, maxWidth?: fabric.MaybeComputed<string>, opacity?: fabric.MaybeComputed<string>, sizingPolicy?: fabric.MaybeComputed<string>, target?: fabric.MaybeComputed<string>, verticalAlign?: fabric.MaybeComputed<string>, verticalOffset?: fabric.MaybeComputed<string> }>[];
}

