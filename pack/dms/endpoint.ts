// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides a DMS (Data Migration Service) endpoint resource. DMS endpoints can be created, updated, deleted, and imported.
 * 
 * ~> **Note:** All arguments including the password will be stored in the raw state as plain-text.
 * [Read more about sensitive data in state](/docs/state/sensitive-data.html).
 */
export class Endpoint extends pulumi.Resource {
    /**
     * The Amazon Resource Name (ARN) for the certificate.
     */
    public readonly certificateArn: pulumi.Computed<string>;
    /**
     * The name of the endpoint database.
     */
    public readonly databaseName?: pulumi.Computed<string>;
    /**
     * The Amazon Resource Name (ARN) for the endpoint.
     */
    public /*out*/ readonly endpointArn: pulumi.Computed<string>;
    /**
     * The database endpoint identifier.
     */
    public readonly endpointId: pulumi.Computed<string>;
    /**
     * The type of endpoint. Can be one of `source | target`.
     */
    public readonly endpointType: pulumi.Computed<string>;
    /**
     * The type of engine for the endpoint. Can be one of `mysql | oracle | postgres | mariadb | aurora | redshift | sybase | sqlserver | dynamodb`.
     */
    public readonly engineName: pulumi.Computed<string>;
    /**
     * Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.ConnectionAttributes.html).
     */
    public readonly extraConnectionAttributes: pulumi.Computed<string>;
    /**
     * The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     */
    public readonly kmsKeyArn: pulumi.Computed<string>;
    /**
     * The password to be used to login to the endpoint database.
     */
    public readonly password?: pulumi.Computed<string>;
    /**
     * The port used by the endpoint database.
     */
    public readonly port?: pulumi.Computed<number>;
    /**
     * The host name of the server.
     */
    public readonly serverName?: pulumi.Computed<string>;
    public readonly serviceAccessRole?: pulumi.Computed<string>;
    /**
     * The SSL mode to use for the connection. Can be one of `none | require | verify-ca | verify-full`
     */
    public readonly sslMode: pulumi.Computed<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags?: pulumi.Computed<{[key: string]: any}>;
    /**
     * The user name to be used to login to the endpoint database.
     */
    public readonly username?: pulumi.Computed<string>;

    /**
     * Create a Endpoint resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Endpoint instance
     * @param args A collection of arguments for creating this Endpoint intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: EndpointArgs, dependsOn?: pulumi.Resource[]) {
        if (args.endpointId === undefined) {
            throw new Error("Missing required property 'endpointId'");
        }
        if (args.endpointType === undefined) {
            throw new Error("Missing required property 'endpointType'");
        }
        if (args.engineName === undefined) {
            throw new Error("Missing required property 'engineName'");
        }
        super("aws:dms/endpoint:Endpoint", urnName, {
            "certificateArn": args.certificateArn,
            "databaseName": args.databaseName,
            "endpointId": args.endpointId,
            "endpointType": args.endpointType,
            "engineName": args.engineName,
            "extraConnectionAttributes": args.extraConnectionAttributes,
            "kmsKeyArn": args.kmsKeyArn,
            "password": args.password,
            "port": args.port,
            "serverName": args.serverName,
            "serviceAccessRole": args.serviceAccessRole,
            "sslMode": args.sslMode,
            "tags": args.tags,
            "username": args.username,
            "endpointArn": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    /**
     * The Amazon Resource Name (ARN) for the certificate.
     */
    readonly certificateArn?: pulumi.ComputedValue<string>;
    /**
     * The name of the endpoint database.
     */
    readonly databaseName?: pulumi.ComputedValue<string>;
    /**
     * The database endpoint identifier.
     */
    readonly endpointId: pulumi.ComputedValue<string>;
    /**
     * The type of endpoint. Can be one of `source | target`.
     */
    readonly endpointType: pulumi.ComputedValue<string>;
    /**
     * The type of engine for the endpoint. Can be one of `mysql | oracle | postgres | mariadb | aurora | redshift | sybase | sqlserver | dynamodb`.
     */
    readonly engineName: pulumi.ComputedValue<string>;
    /**
     * Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.ConnectionAttributes.html).
     */
    readonly extraConnectionAttributes?: pulumi.ComputedValue<string>;
    /**
     * The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     */
    readonly kmsKeyArn?: pulumi.ComputedValue<string>;
    /**
     * The password to be used to login to the endpoint database.
     */
    readonly password?: pulumi.ComputedValue<string>;
    /**
     * The port used by the endpoint database.
     */
    readonly port?: pulumi.ComputedValue<number>;
    /**
     * The host name of the server.
     */
    readonly serverName?: pulumi.ComputedValue<string>;
    readonly serviceAccessRole?: pulumi.ComputedValue<string>;
    /**
     * The SSL mode to use for the connection. Can be one of `none | require | verify-ca | verify-full`
     */
    readonly sslMode?: pulumi.ComputedValue<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.ComputedValue<{[key: string]: any}>;
    /**
     * The user name to be used to login to the endpoint database.
     */
    readonly username?: pulumi.ComputedValue<string>;
}

