// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Endpoint extends fabric.Resource {
    public readonly certificateArn: fabric.Computed<string>;
    public readonly databaseName?: fabric.Computed<string>;
    public /*out*/ readonly endpointArn: fabric.Computed<string>;
    public readonly endpointId: fabric.Computed<string>;
    public readonly endpointType: fabric.Computed<string>;
    public readonly engineName: fabric.Computed<string>;
    public readonly extraConnectionAttributes: fabric.Computed<string>;
    public readonly kmsKeyArn: fabric.Computed<string>;
    public readonly password?: fabric.Computed<string>;
    public readonly port?: fabric.Computed<number>;
    public readonly serverName?: fabric.Computed<string>;
    public readonly serviceAccessRole?: fabric.Computed<string>;
    public readonly sslMode: fabric.Computed<string>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly username?: fabric.Computed<string>;

    constructor(urnName: string, args: EndpointArgs, dependsOn?: fabric.Resource[]) {
        if (args.endpointId === undefined) {
            throw new Error("Missing required property 'endpointId'");
        }
        if (args.endpointType === undefined) {
            throw new Error("Missing required property 'endpointType'");
        }
        if (args.engineName === undefined) {
            throw new Error("Missing required property 'engineName'");
        }
        super("aws:dms/endpoint:Endpoint", urnName, {
            "certificateArn": args.certificateArn,
            "databaseName": args.databaseName,
            "endpointId": args.endpointId,
            "endpointType": args.endpointType,
            "engineName": args.engineName,
            "extraConnectionAttributes": args.extraConnectionAttributes,
            "kmsKeyArn": args.kmsKeyArn,
            "password": args.password,
            "port": args.port,
            "serverName": args.serverName,
            "serviceAccessRole": args.serviceAccessRole,
            "sslMode": args.sslMode,
            "tags": args.tags,
            "username": args.username,
            "endpointArn": undefined,
        }, dependsOn);
    }
}

export interface EndpointArgs {
    readonly certificateArn?: fabric.ComputedValue<string>;
    readonly databaseName?: fabric.ComputedValue<string>;
    readonly endpointId: fabric.ComputedValue<string>;
    readonly endpointType: fabric.ComputedValue<string>;
    readonly engineName: fabric.ComputedValue<string>;
    readonly extraConnectionAttributes?: fabric.ComputedValue<string>;
    readonly kmsKeyArn?: fabric.ComputedValue<string>;
    readonly password?: fabric.ComputedValue<string>;
    readonly port?: fabric.ComputedValue<number>;
    readonly serverName?: fabric.ComputedValue<string>;
    readonly serviceAccessRole?: fabric.ComputedValue<string>;
    readonly sslMode?: fabric.ComputedValue<string>;
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
    readonly username?: fabric.ComputedValue<string>;
}

