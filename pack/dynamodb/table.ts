// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Table extends fabric.Resource {
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly attribute: fabric.Computed<{ name: string, type: string }[]>;
    public readonly globalSecondaryIndex?: fabric.Computed<{ hashKey: string, name: string, nonKeyAttributes?: string[], projectionType: string, rangeKey?: string, readCapacity: number, writeCapacity: number }[]>;
    public readonly hashKey: fabric.Computed<string>;
    public readonly localSecondaryIndex?: fabric.Computed<{ name: string, nonKeyAttributes?: string[], projectionType: string, rangeKey: string }[]>;
    public readonly name: fabric.Computed<string>;
    public readonly rangeKey?: fabric.Computed<string>;
    public readonly readCapacity: fabric.Computed<number>;
    public /*out*/ readonly streamArn: fabric.Computed<string>;
    public readonly streamEnabled: fabric.Computed<boolean>;
    public /*out*/ readonly streamLabel: fabric.Computed<string>;
    public readonly streamViewType: fabric.Computed<string>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly ttl?: fabric.Computed<{ attributeName: string, enabled: boolean }[]>;
    public readonly writeCapacity: fabric.Computed<number>;

    constructor(urnName: string, args: TableArgs, dependsOn?: fabric.Resource[]) {
        if (args.attribute === undefined) {
            throw new Error("Missing required property 'attribute'");
        }
        if (args.hashKey === undefined) {
            throw new Error("Missing required property 'hashKey'");
        }
        if (args.readCapacity === undefined) {
            throw new Error("Missing required property 'readCapacity'");
        }
        if (args.writeCapacity === undefined) {
            throw new Error("Missing required property 'writeCapacity'");
        }
        super("aws:dynamodb/table:Table", urnName, {
            "attribute": args.attribute,
            "globalSecondaryIndex": args.globalSecondaryIndex,
            "hashKey": args.hashKey,
            "localSecondaryIndex": args.localSecondaryIndex,
            "name": args.name,
            "rangeKey": args.rangeKey,
            "readCapacity": args.readCapacity,
            "streamEnabled": args.streamEnabled,
            "streamViewType": args.streamViewType,
            "tags": args.tags,
            "ttl": args.ttl,
            "writeCapacity": args.writeCapacity,
            "arn": undefined,
            "streamArn": undefined,
            "streamLabel": undefined,
        }, dependsOn);
    }
}

export interface TableArgs {
    readonly attribute: fabric.ComputedValue<{ name: fabric.ComputedValue<string>, type: fabric.ComputedValue<string> }>[];
    readonly globalSecondaryIndex?: fabric.ComputedValue<{ hashKey: fabric.ComputedValue<string>, name: fabric.ComputedValue<string>, nonKeyAttributes?: fabric.ComputedValue<fabric.ComputedValue<string>>[], projectionType: fabric.ComputedValue<string>, rangeKey?: fabric.ComputedValue<string>, readCapacity: fabric.ComputedValue<number>, writeCapacity: fabric.ComputedValue<number> }>[];
    readonly hashKey: fabric.ComputedValue<string>;
    readonly localSecondaryIndex?: fabric.ComputedValue<{ name: fabric.ComputedValue<string>, nonKeyAttributes?: fabric.ComputedValue<fabric.ComputedValue<string>>[], projectionType: fabric.ComputedValue<string>, rangeKey: fabric.ComputedValue<string> }>[];
    readonly name?: fabric.ComputedValue<string>;
    readonly rangeKey?: fabric.ComputedValue<string>;
    readonly readCapacity: fabric.ComputedValue<number>;
    readonly streamEnabled?: fabric.ComputedValue<boolean>;
    readonly streamViewType?: fabric.ComputedValue<string>;
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
    readonly ttl?: fabric.ComputedValue<{ attributeName: fabric.ComputedValue<string>, enabled: fabric.ComputedValue<boolean> }>[];
    readonly writeCapacity: fabric.ComputedValue<number>;
}

