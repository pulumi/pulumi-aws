// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides a S3 bucket notification resource.
 */
export class BucketNotification extends pulumi.Resource {
    /**
     * The name of the bucket to put notification configuration.
     */
    public readonly bucket: pulumi.Computed<string>;
    /**
     * Used to configure notifications to a Lambda Function (documented below).
     */
    public readonly lambdaFunction?: pulumi.Computed<{ events: string[], filterPrefix?: string, filterSuffix?: string, id: string, lambdaFunctionArn?: string }[]>;
    /**
     * The notification configuration to SQS Queue (documented below).
     */
    public readonly queue?: pulumi.Computed<{ events: string[], filterPrefix?: string, filterSuffix?: string, id: string, queueArn: string }[]>;
    /**
     * The notification configuration to SNS Topic (documented below).
     */
    public readonly topic?: pulumi.Computed<{ events: string[], filterPrefix?: string, filterSuffix?: string, id: string, topicArn: string }[]>;

    /**
     * Create a BucketNotification resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this BucketNotification instance
     * @param args A collection of arguments for creating this BucketNotification intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: BucketNotificationArgs, dependsOn?: pulumi.Resource[]) {
        if (args.bucket === undefined) {
            throw new Error("Missing required property 'bucket'");
        }
        super("aws:s3/bucketNotification:BucketNotification", urnName, {
            "bucket": args.bucket,
            "lambdaFunction": args.lambdaFunction,
            "queue": args.queue,
            "topic": args.topic,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a BucketNotification resource.
 */
export interface BucketNotificationArgs {
    /**
     * The name of the bucket to put notification configuration.
     */
    readonly bucket: pulumi.ComputedValue<string>;
    /**
     * Used to configure notifications to a Lambda Function (documented below).
     */
    readonly lambdaFunction?: pulumi.ComputedValue<{ events: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], filterPrefix?: pulumi.ComputedValue<string>, filterSuffix?: pulumi.ComputedValue<string>, id?: pulumi.ComputedValue<string>, lambdaFunctionArn?: pulumi.ComputedValue<string> }>[];
    /**
     * The notification configuration to SQS Queue (documented below).
     */
    readonly queue?: pulumi.ComputedValue<{ events: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], filterPrefix?: pulumi.ComputedValue<string>, filterSuffix?: pulumi.ComputedValue<string>, id?: pulumi.ComputedValue<string>, queueArn: pulumi.ComputedValue<string> }>[];
    /**
     * The notification configuration to SNS Topic (documented below).
     */
    readonly topic?: pulumi.ComputedValue<{ events: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], filterPrefix?: pulumi.ComputedValue<string>, filterSuffix?: pulumi.ComputedValue<string>, id?: pulumi.ComputedValue<string>, topicArn: pulumi.ComputedValue<string> }>[];
}

