// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Volume extends fabric.Resource {
    public readonly availabilityZone: fabric.Computed<string>;
    public readonly encrypted: fabric.Computed<boolean>;
    public readonly iops: fabric.Computed<number>;
    public readonly kmsKeyId: fabric.Computed<string>;
    public readonly size: fabric.Computed<number>;
    public readonly snapshotId: fabric.Computed<string>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly type: fabric.Computed<string>;

    /**
     * Create a Volume resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Volume instance
     * @param args A collection of arguments for creating this Volume intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: VolumeArgs, dependsOn?: fabric.Resource[]) {
        if (args.availabilityZone === undefined) {
            throw new Error("Missing required property 'availabilityZone'");
        }
        super("aws:ebs/volume:Volume", urnName, {
            "availabilityZone": args.availabilityZone,
            "encrypted": args.encrypted,
            "iops": args.iops,
            "kmsKeyId": args.kmsKeyId,
            "size": args.size,
            "snapshotId": args.snapshotId,
            "tags": args.tags,
            "type": args.type,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Volume resource.
 */
export interface VolumeArgs {
    readonly availabilityZone: fabric.MaybeComputed<string>;
    readonly encrypted?: fabric.MaybeComputed<boolean>;
    readonly iops?: fabric.MaybeComputed<number>;
    readonly kmsKeyId?: fabric.MaybeComputed<string>;
    readonly size?: fabric.MaybeComputed<number>;
    readonly snapshotId?: fabric.MaybeComputed<string>;
    readonly tags?: fabric.MaybeComputed<{[key: string]: any}>;
    readonly type?: fabric.MaybeComputed<string>;
}

