// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides a Route53 record resource.
 */
export class Record extends pulumi.Resource {
    /**
     * An alias block. Conflicts with `ttl` & `records`.
     * Alias record documented below.
     */
    public readonly alias?: pulumi.Computed<{ evaluateTargetHealth: boolean, name: string, zoneId: string }[]>;
    /**
     * A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
     */
    public readonly failoverRoutingPolicy?: pulumi.Computed<{ type: string }[]>;
    /**
     * [FQDN](https://en.wikipedia.org/wiki/Fully_qualified_domain_name) built using the zone domain and `name`
     */
    public /*out*/ readonly fqdn: pulumi.Computed<string>;
    /**
     * A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
     */
    public readonly geolocationRoutingPolicy?: pulumi.Computed<{ continent?: string, country?: string, subdivision?: string }[]>;
    /**
     * The health check the record should be associated with.
     */
    public readonly healthCheckId?: pulumi.Computed<string>;
    /**
     * A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
     */
    public readonly latencyRoutingPolicy?: pulumi.Computed<{ region: string }[]>;
    /**
     * DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * A string list of records.
     */
    public readonly records?: pulumi.Computed<string[]>;
    /**
     * Unique identifier to differentiate records with routing policies from one another. Required if using `failover`, `geolocation`, `latency`, or `weighted` routing policies documented below.
     */
    public readonly setIdentifier?: pulumi.Computed<string>;
    /**
     * The TTL of the record.
     */
    public readonly ttl?: pulumi.Computed<number>;
    /**
     * `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
     */
    public readonly type: pulumi.Computed<string>;
    /**
     * A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
     */
    public readonly weightedRoutingPolicy?: pulumi.Computed<{ weight: number }[]>;
    /**
     * Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](/docs/providers/aws/r/elb.html#zone_id) for example.
     */
    public readonly zoneId: pulumi.Computed<string>;

    /**
     * Create a Record resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Record instance
     * @param args A collection of arguments for creating this Record intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: RecordArgs, dependsOn?: pulumi.Resource[]) {
        if (args.type === undefined) {
            throw new Error("Missing required property 'type'");
        }
        if (args.zoneId === undefined) {
            throw new Error("Missing required property 'zoneId'");
        }
        super("aws:route53/record:Record", urnName, {
            "alias": args.alias,
            "failoverRoutingPolicy": args.failoverRoutingPolicy,
            "geolocationRoutingPolicy": args.geolocationRoutingPolicy,
            "healthCheckId": args.healthCheckId,
            "latencyRoutingPolicy": args.latencyRoutingPolicy,
            "name": args.name,
            "records": args.records,
            "setIdentifier": args.setIdentifier,
            "ttl": args.ttl,
            "type": args.type,
            "weightedRoutingPolicy": args.weightedRoutingPolicy,
            "zoneId": args.zoneId,
            "fqdn": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Record resource.
 */
export interface RecordArgs {
    /**
     * An alias block. Conflicts with `ttl` & `records`.
     * Alias record documented below.
     */
    readonly alias?: pulumi.ComputedValue<{ evaluateTargetHealth: pulumi.ComputedValue<boolean>, name: pulumi.ComputedValue<string>, zoneId: pulumi.ComputedValue<string> }>[];
    /**
     * A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
     */
    readonly failoverRoutingPolicy?: pulumi.ComputedValue<{ type: pulumi.ComputedValue<string> }>[];
    /**
     * A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
     */
    readonly geolocationRoutingPolicy?: pulumi.ComputedValue<{ continent?: pulumi.ComputedValue<string>, country?: pulumi.ComputedValue<string>, subdivision?: pulumi.ComputedValue<string> }>[];
    /**
     * The health check the record should be associated with.
     */
    readonly healthCheckId?: pulumi.ComputedValue<string>;
    /**
     * A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
     */
    readonly latencyRoutingPolicy?: pulumi.ComputedValue<{ region: pulumi.ComputedValue<string> }>[];
    /**
     * DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * A string list of records.
     */
    readonly records?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * Unique identifier to differentiate records with routing policies from one another. Required if using `failover`, `geolocation`, `latency`, or `weighted` routing policies documented below.
     */
    readonly setIdentifier?: pulumi.ComputedValue<string>;
    /**
     * The TTL of the record.
     */
    readonly ttl?: pulumi.ComputedValue<number>;
    /**
     * `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
     */
    readonly type: pulumi.ComputedValue<string>;
    /**
     * A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
     */
    readonly weightedRoutingPolicy?: pulumi.ComputedValue<{ weight: pulumi.ComputedValue<number> }>[];
    /**
     * Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](/docs/providers/aws/r/elb.html#zone_id) for example.
     */
    readonly zoneId: pulumi.ComputedValue<string>;
}

