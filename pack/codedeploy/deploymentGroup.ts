// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

/**
 * Provides a CodeDeploy deployment group for an application
 */
export class DeploymentGroup extends fabric.Resource {
    /**
     * A list of alarms associated with the deployment group, documented below.
     */
    public readonly alarmConfiguration?: fabric.Computed<{ alarms?: string[], enabled?: boolean, ignorePollAlarmFailure?: boolean }[]>;
    /**
     * The name of the application.
     */
    public readonly appName: fabric.Computed<string>;
    /**
     * The automatic rollback configuration associated with the deployment group, documented below.
     */
    public readonly autoRollbackConfiguration?: fabric.Computed<{ enabled?: boolean, events?: string[] }[]>;
    /**
     * Autoscaling groups associated with the deployment group.
     */
    public readonly autoscalingGroups?: fabric.Computed<string[]>;
    /**
     * The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
     */
    public readonly deploymentConfigName?: fabric.Computed<string>;
    /**
     * The name of the deployment group.
     */
    public readonly deploymentGroupName: fabric.Computed<string>;
    /**
     * Tag filters associated with the group. See the AWS docs for details.
     */
    public readonly ec2TagFilter?: fabric.Computed<{ key?: string, type?: string, value?: string }[]>;
    /**
     * On premise tag filters associated with the group. See the AWS docs for details.
     */
    public readonly onPremisesInstanceTagFilter?: fabric.Computed<{ key?: string, type?: string, value?: string }[]>;
    /**
     * The service role ARN that allows deployments.
     */
    public readonly serviceRoleArn: fabric.Computed<string>;
    /**
     * A Trigger Configuration block. Trigger Configurations are documented below.
     */
    public readonly triggerConfiguration?: fabric.Computed<{ triggerEvents: string[], triggerName: string, triggerTargetArn: string }[]>;

    /**
     * Create a DeploymentGroup resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this DeploymentGroup instance
     * @param args A collection of arguments for creating this DeploymentGroup intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: DeploymentGroupArgs, dependsOn?: fabric.Resource[]) {
        if (args.appName === undefined) {
            throw new Error("Missing required property 'appName'");
        }
        if (args.deploymentGroupName === undefined) {
            throw new Error("Missing required property 'deploymentGroupName'");
        }
        if (args.serviceRoleArn === undefined) {
            throw new Error("Missing required property 'serviceRoleArn'");
        }
        super("aws:codedeploy/deploymentGroup:DeploymentGroup", urnName, {
            "alarmConfiguration": args.alarmConfiguration,
            "appName": args.appName,
            "autoRollbackConfiguration": args.autoRollbackConfiguration,
            "autoscalingGroups": args.autoscalingGroups,
            "deploymentConfigName": args.deploymentConfigName,
            "deploymentGroupName": args.deploymentGroupName,
            "ec2TagFilter": args.ec2TagFilter,
            "onPremisesInstanceTagFilter": args.onPremisesInstanceTagFilter,
            "serviceRoleArn": args.serviceRoleArn,
            "triggerConfiguration": args.triggerConfiguration,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a DeploymentGroup resource.
 */
export interface DeploymentGroupArgs {
    /**
     * A list of alarms associated with the deployment group, documented below.
     */
    readonly alarmConfiguration?: fabric.MaybeComputed<{ alarms?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[], enabled?: fabric.MaybeComputed<boolean>, ignorePollAlarmFailure?: fabric.MaybeComputed<boolean> }>[];
    /**
     * The name of the application.
     */
    readonly appName: fabric.MaybeComputed<string>;
    /**
     * The automatic rollback configuration associated with the deployment group, documented below.
     */
    readonly autoRollbackConfiguration?: fabric.MaybeComputed<{ enabled?: fabric.MaybeComputed<boolean>, events?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[] }>[];
    /**
     * Autoscaling groups associated with the deployment group.
     */
    readonly autoscalingGroups?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    /**
     * The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
     */
    readonly deploymentConfigName?: fabric.MaybeComputed<string>;
    /**
     * The name of the deployment group.
     */
    readonly deploymentGroupName: fabric.MaybeComputed<string>;
    /**
     * Tag filters associated with the group. See the AWS docs for details.
     */
    readonly ec2TagFilter?: fabric.MaybeComputed<{ key?: fabric.MaybeComputed<string>, type?: fabric.MaybeComputed<string>, value?: fabric.MaybeComputed<string> }>[];
    /**
     * On premise tag filters associated with the group. See the AWS docs for details.
     */
    readonly onPremisesInstanceTagFilter?: fabric.MaybeComputed<{ key?: fabric.MaybeComputed<string>, type?: fabric.MaybeComputed<string>, value?: fabric.MaybeComputed<string> }>[];
    /**
     * The service role ARN that allows deployments.
     */
    readonly serviceRoleArn: fabric.MaybeComputed<string>;
    /**
     * A Trigger Configuration block. Trigger Configurations are documented below.
     */
    readonly triggerConfiguration?: fabric.MaybeComputed<{ triggerEvents: fabric.MaybeComputed<fabric.MaybeComputed<string>>[], triggerName: fabric.MaybeComputed<string>, triggerTargetArn: fabric.MaybeComputed<string> }>[];
}

