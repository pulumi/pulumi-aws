// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides a settings of an API Gateway Account. Settings is applied region-wide per `provider` block.
 * 
 * -> **Note:** As there is no API method for deleting account settings or resetting it to defaults, destroying this resource will keep your account settings intact
 */
export class Account extends pulumi.Resource {
    /**
     * The ARN of an IAM role for CloudWatch (to allow logging & monitoring).
     * See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console).
     * Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
     */
    public readonly cloudwatchRoleArn?: pulumi.Computed<string>;
    /**
     * Account-Level throttle settings. See exported fields below.
     */
    public /*out*/ readonly throttleSettings: pulumi.Computed<{ burstLimit: number, rateLimit: number }[]>;

    /**
     * Create a Account resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Account instance
     * @param args A collection of arguments for creating this Account intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args?: AccountArgs, dependsOn?: pulumi.Resource[]) {
        super("aws:apigateway/account:Account", urnName, {
            "cloudwatchRoleArn": args.cloudwatchRoleArn,
            "throttleSettings": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The ARN of an IAM role for CloudWatch (to allow logging & monitoring).
     * See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console).
     * Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
     */
    readonly cloudwatchRoleArn?: pulumi.ComputedValue<string>;
}

