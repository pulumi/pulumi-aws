// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

import {RestApi} from "./restApi";

/**
 * Provides an API Gateway Deployment.
 * 
 * -> **Note:** Depends on having `aws_api_gateway_integration` inside your rest api (which in turn depends on `aws_api_gateway_method`). To avoid race conditions
 * you might need to add an explicit `depends_on = ["aws_api_gateway_integration.name"]`.
 */
export class Deployment extends pulumi.Resource {
    /**
     * The creation date of the deployment
     */
    public /*out*/ readonly createdDate: pulumi.Computed<string>;
    /**
     * The description of the deployment
     */
    public readonly description?: pulumi.Computed<string>;
    /**
     * The execution ARN to be used in [`lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn`
     * when allowing API Gateway to invoke a Lambda function,
     * e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
     */
    public /*out*/ readonly executionArn: pulumi.Computed<string>;
    /**
     * The URL to invoke the API pointing to the stage,
     * e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
     */
    public /*out*/ readonly invokeUrl: pulumi.Computed<string>;
    /**
     * The ID of the associated REST API
     */
    public readonly restApi: pulumi.Computed<RestApi>;
    /**
     * The description of the stage
     */
    public readonly stageDescription?: pulumi.Computed<string>;
    /**
     * The name of the stage
     */
    public readonly stageName: pulumi.Computed<string>;
    /**
     * A map that defines variables for the stage
     */
    public readonly variables?: pulumi.Computed<{[key: string]: string}>;

    /**
     * Create a Deployment resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Deployment instance
     * @param args A collection of arguments for creating this Deployment intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: DeploymentArgs, dependsOn?: pulumi.Resource[]) {
        if (args.restApi === undefined) {
            throw new Error("Missing required property 'restApi'");
        }
        if (args.stageName === undefined) {
            throw new Error("Missing required property 'stageName'");
        }
        super("aws:apigateway/deployment:Deployment", urnName, {
            "description": args.description,
            "restApi": args.restApi,
            "stageDescription": args.stageDescription,
            "stageName": args.stageName,
            "variables": args.variables,
            "createdDate": undefined,
            "executionArn": undefined,
            "invokeUrl": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * The description of the deployment
     */
    readonly description?: pulumi.ComputedValue<string>;
    /**
     * The ID of the associated REST API
     */
    readonly restApi: pulumi.ComputedValue<RestApi>;
    /**
     * The description of the stage
     */
    readonly stageDescription?: pulumi.ComputedValue<string>;
    /**
     * The name of the stage
     */
    readonly stageName: pulumi.ComputedValue<string>;
    /**
     * A map that defines variables for the stage
     */
    readonly variables?: pulumi.ComputedValue<{[key: string]: pulumi.ComputedValue<string>}>;
}

