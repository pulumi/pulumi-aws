// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

import {ARN} from "../index";

export class Function extends fabric.Resource {
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly deadLetterConfig?: fabric.Computed<{ targetArn: string }[]>;
    public readonly description?: fabric.Computed<string>;
    public readonly environment?: fabric.Computed<{ variables?: {[key: string]: string} }[]>;
    public readonly code?: fabric.Computed<fabric.asset.Archive>;
    public readonly name: fabric.Computed<string>;
    public readonly handler: fabric.Computed<string>;
    public /*out*/ readonly invokeArn: fabric.Computed<string>;
    public readonly kmsKeyArn?: fabric.Computed<string>;
    public /*out*/ readonly lastModified: fabric.Computed<string>;
    public readonly memorySize?: fabric.Computed<number>;
    public readonly publish?: fabric.Computed<boolean>;
    public /*out*/ readonly qualifiedArn: fabric.Computed<string>;
    public readonly role: fabric.Computed<ARN>;
    public readonly runtime: fabric.Computed<string>;
    public readonly s3Bucket?: fabric.Computed<string>;
    public readonly s3Key?: fabric.Computed<string>;
    public readonly s3ObjectVersion?: fabric.Computed<string>;
    public readonly sourceCodeHash: fabric.Computed<string>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly timeout?: fabric.Computed<number>;
    public readonly tracingConfig: fabric.Computed<{ mode: string }[]>;
    public /*out*/ readonly version: fabric.Computed<string>;
    public readonly vpcConfig?: fabric.Computed<{ securityGroupIds: string[], subnetIds: string[], vpcId: string }[]>;

    constructor(urnName: string, args: FunctionArgs, dependsOn?: fabric.Resource[]) {
        if (args.handler === undefined) {
            throw new Error("Missing required property 'handler'");
        }
        if (args.role === undefined) {
            throw new Error("Missing required property 'role'");
        }
        if (args.runtime === undefined) {
            throw new Error("Missing required property 'runtime'");
        }
        super("aws:lambda/function:Function", urnName, {
            "deadLetterConfig": args.deadLetterConfig,
            "description": args.description,
            "environment": args.environment,
            "code": args.code,
            "name": args.name,
            "handler": args.handler,
            "kmsKeyArn": args.kmsKeyArn,
            "memorySize": args.memorySize,
            "publish": args.publish,
            "role": args.role,
            "runtime": args.runtime,
            "s3Bucket": args.s3Bucket,
            "s3Key": args.s3Key,
            "s3ObjectVersion": args.s3ObjectVersion,
            "sourceCodeHash": args.sourceCodeHash,
            "tags": args.tags,
            "timeout": args.timeout,
            "tracingConfig": args.tracingConfig,
            "vpcConfig": args.vpcConfig,
            "arn": undefined,
            "invokeArn": undefined,
            "lastModified": undefined,
            "qualifiedArn": undefined,
            "version": undefined,
        }, dependsOn);
    }
}

export interface FunctionArgs {
    readonly deadLetterConfig?: fabric.ComputedValue<{ targetArn: fabric.ComputedValue<string> }>[];
    readonly description?: fabric.ComputedValue<string>;
    readonly environment?: fabric.ComputedValue<{ variables?: fabric.ComputedValue<{[key: string]: fabric.ComputedValue<string>}> }>[];
    readonly code?: fabric.asset.Archive;
    readonly name?: fabric.ComputedValue<string>;
    readonly handler: fabric.ComputedValue<string>;
    readonly kmsKeyArn?: fabric.ComputedValue<string>;
    readonly memorySize?: fabric.ComputedValue<number>;
    readonly publish?: fabric.ComputedValue<boolean>;
    readonly role: fabric.ComputedValue<ARN>;
    readonly runtime: fabric.ComputedValue<string>;
    readonly s3Bucket?: fabric.ComputedValue<string>;
    readonly s3Key?: fabric.ComputedValue<string>;
    readonly s3ObjectVersion?: fabric.ComputedValue<string>;
    readonly sourceCodeHash?: fabric.ComputedValue<string>;
    readonly tags?: fabric.ComputedValue<{[key: string]: any}>;
    readonly timeout?: fabric.ComputedValue<number>;
    readonly tracingConfig?: fabric.ComputedValue<{ mode: fabric.ComputedValue<string> }>[];
    readonly vpcConfig?: fabric.ComputedValue<{ securityGroupIds: fabric.ComputedValue<fabric.ComputedValue<string>>[], subnetIds: fabric.ComputedValue<fabric.ComputedValue<string>>[], vpcId?: fabric.ComputedValue<string> }>[];
}

