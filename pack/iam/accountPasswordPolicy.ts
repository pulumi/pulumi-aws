// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * -> **Note:** There is only a single policy allowed per AWS account. An existing policy will be lost when using this resource as an effect of this limitation.
 * 
 * Manages Password Policy for the AWS Account.
 * See more about [Account Password Policy](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html)
 * in the official AWS docs.
 */
export class AccountPasswordPolicy extends pulumi.Resource {
    /**
     * Whether to allow users to change their own password
     */
    public readonly allowUsersToChangePassword?: pulumi.Computed<boolean>;
    /**
     * Indicates whether passwords in the account expire.
     * Returns `true` if `max_password_age` contains a value greater than `0`.
     * Returns `false` if it is `0` or _not present_.
     */
    public /*out*/ readonly expirePasswords: pulumi.Computed<boolean>;
    /**
     * Whether users are prevented from setting a new password after their password has expired
     * (i.e. require administrator reset)
     */
    public readonly hardExpiry: pulumi.Computed<boolean>;
    /**
     * The number of days that an user password is valid.
     */
    public readonly maxPasswordAge: pulumi.Computed<number>;
    /**
     * Minimum length to require for user passwords.
     */
    public readonly minimumPasswordLength?: pulumi.Computed<number>;
    /**
     * The number of previous passwords that users are prevented from reusing.
     */
    public readonly passwordReusePrevention: pulumi.Computed<number>;
    /**
     * Whether to require lowercase characters for user passwords.
     */
    public readonly requireLowercaseCharacters: pulumi.Computed<boolean>;
    /**
     * Whether to require numbers for user passwords.
     */
    public readonly requireNumbers: pulumi.Computed<boolean>;
    /**
     * Whether to require symbols for user passwords.
     */
    public readonly requireSymbols: pulumi.Computed<boolean>;
    /**
     * Whether to require uppercase characters for user passwords.
     */
    public readonly requireUppercaseCharacters: pulumi.Computed<boolean>;

    /**
     * Create a AccountPasswordPolicy resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this AccountPasswordPolicy instance
     * @param args A collection of arguments for creating this AccountPasswordPolicy intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args?: AccountPasswordPolicyArgs, dependsOn?: pulumi.Resource[]) {
        super("aws:iam/accountPasswordPolicy:AccountPasswordPolicy", urnName, {
            "allowUsersToChangePassword": args.allowUsersToChangePassword,
            "hardExpiry": args.hardExpiry,
            "maxPasswordAge": args.maxPasswordAge,
            "minimumPasswordLength": args.minimumPasswordLength,
            "passwordReusePrevention": args.passwordReusePrevention,
            "requireLowercaseCharacters": args.requireLowercaseCharacters,
            "requireNumbers": args.requireNumbers,
            "requireSymbols": args.requireSymbols,
            "requireUppercaseCharacters": args.requireUppercaseCharacters,
            "expirePasswords": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a AccountPasswordPolicy resource.
 */
export interface AccountPasswordPolicyArgs {
    /**
     * Whether to allow users to change their own password
     */
    readonly allowUsersToChangePassword?: pulumi.ComputedValue<boolean>;
    /**
     * Whether users are prevented from setting a new password after their password has expired
     * (i.e. require administrator reset)
     */
    readonly hardExpiry?: pulumi.ComputedValue<boolean>;
    /**
     * The number of days that an user password is valid.
     */
    readonly maxPasswordAge?: pulumi.ComputedValue<number>;
    /**
     * Minimum length to require for user passwords.
     */
    readonly minimumPasswordLength?: pulumi.ComputedValue<number>;
    /**
     * The number of previous passwords that users are prevented from reusing.
     */
    readonly passwordReusePrevention?: pulumi.ComputedValue<number>;
    /**
     * Whether to require lowercase characters for user passwords.
     */
    readonly requireLowercaseCharacters?: pulumi.ComputedValue<boolean>;
    /**
     * Whether to require numbers for user passwords.
     */
    readonly requireNumbers?: pulumi.ComputedValue<boolean>;
    /**
     * Whether to require symbols for user passwords.
     */
    readonly requireSymbols?: pulumi.ComputedValue<boolean>;
    /**
     * Whether to require uppercase characters for user passwords.
     */
    readonly requireUppercaseCharacters?: pulumi.ComputedValue<boolean>;
}

