// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

import {ARN} from "../index";

/**
 * Provides an IAM role.
 */
export class Role extends pulumi.Resource {
    /**
     * The Amazon Resource Name (ARN) specifying the role.
     */
    public /*out*/ readonly arn: pulumi.Computed<string>;
    /**
     * The policy that grants an entity permission to assume the role.
     */
    public readonly assumeRolePolicy: pulumi.Computed<string>;
    /**
     * The creation date of the IAM role.
     */
    public /*out*/ readonly createDate: pulumi.Computed<string>;
    /**
     * The description of the role.
     */
    public readonly description?: pulumi.Computed<string>;
    /**
     * Specifies to force detaching any policies the role has before destroying it. Defaults to `false`.
     */
    public readonly forceDetachPolicies?: pulumi.Computed<boolean>;
    /**
     * The name of the role. If omitted, Terraform will assign a random, unique name.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    public readonly namePrefix?: pulumi.Computed<string>;
    /**
     * The path to the role.
     * See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
     */
    public readonly path?: pulumi.Computed<string>;
    /**
     * The stable and unique string identifying the role.
     */
    public /*out*/ readonly uniqueId: pulumi.Computed<string>;

    /**
     * Create a Role resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this Role instance
     * @param args A collection of arguments for creating this Role intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: RoleArgs, dependsOn?: pulumi.Resource[]) {
        if (args.assumeRolePolicy === undefined) {
            throw new Error("Missing required property 'assumeRolePolicy'");
        }
        super("aws:iam/role:Role", urnName, {
            "assumeRolePolicy": args.assumeRolePolicy,
            "description": args.description,
            "forceDetachPolicies": args.forceDetachPolicies,
            "name": args.name,
            "namePrefix": args.namePrefix,
            "path": args.path,
            "arn": undefined,
            "createDate": undefined,
            "uniqueId": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * The policy that grants an entity permission to assume the role.
     */
    readonly assumeRolePolicy: pulumi.ComputedValue<string>;
    /**
     * The description of the role.
     */
    readonly description?: pulumi.ComputedValue<string>;
    /**
     * Specifies to force detaching any policies the role has before destroying it. Defaults to `false`.
     */
    readonly forceDetachPolicies?: pulumi.ComputedValue<boolean>;
    /**
     * The name of the role. If omitted, Terraform will assign a random, unique name.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.ComputedValue<string>;
    /**
     * The path to the role.
     * See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
     */
    readonly path?: pulumi.ComputedValue<string>;
}

