// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

/**
 * Attaches a load balancer policy to an ELB backend server.
 * 
 */
export class LoadBalancerBackendServerPolicy extends fabric.Resource {
    /**
     * The instance port to apply the policy to.
     */
    public readonly instancePort: fabric.Computed<number>;
    /**
     * The load balancer to attach the policy to.
     */
    public readonly loadBalancerName: fabric.Computed<string>;
    /**
     * List of Policy Names to apply to the backend server.
     */
    public readonly policyNames?: fabric.Computed<string[]>;

    /**
     * Create a LoadBalancerBackendServerPolicy resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this LoadBalancerBackendServerPolicy instance
     * @param args A collection of arguments for creating this LoadBalancerBackendServerPolicy intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: LoadBalancerBackendServerPolicyArgs, dependsOn?: fabric.Resource[]) {
        if (args.instancePort === undefined) {
            throw new Error("Missing required property 'instancePort'");
        }
        if (args.loadBalancerName === undefined) {
            throw new Error("Missing required property 'loadBalancerName'");
        }
        super("aws:elasticloadbalancing/loadBalancerBackendServerPolicy:LoadBalancerBackendServerPolicy", urnName, {
            "instancePort": args.instancePort,
            "loadBalancerName": args.loadBalancerName,
            "policyNames": args.policyNames,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a LoadBalancerBackendServerPolicy resource.
 */
export interface LoadBalancerBackendServerPolicyArgs {
    /**
     * The instance port to apply the policy to.
     */
    readonly instancePort: fabric.ComputedValue<number>;
    /**
     * The load balancer to attach the policy to.
     */
    readonly loadBalancerName: fabric.ComputedValue<string>;
    /**
     * List of Policy Names to apply to the backend server.
     */
    readonly policyNames?: fabric.ComputedValue<fabric.ComputedValue<string>>[];
}

