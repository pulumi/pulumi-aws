// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an ElastiCache Replication Group resource.
 */
export class ReplicationGroup extends pulumi.Resource {
    /**
     * Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
     */
    public readonly applyImmediately: pulumi.Computed<boolean>;
    /**
     * Specifies whether a minor engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window. Defaults to `true`.
     */
    public readonly autoMinorVersionUpgrade?: pulumi.Computed<boolean>;
    /**
     * Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. Defaults to `false`.
     */
    public readonly automaticFailoverEnabled?: pulumi.Computed<boolean>;
    /**
     * A list of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is not important.
     */
    public readonly availabilityZones?: pulumi.Computed<string[]>;
    /**
     * Create a native redis cluster. `automatic_failover_enabled` must be set to true. Cluster Mode documented below. Only 1 `cluster_mode` block is allowed.
     */
    public readonly clusterMode?: pulumi.Computed<{ numNodeGroups: number, replicasPerNodeGroup: number }[]>;
    /**
     * (Redis only) The address of the replication group configuration endpoint when cluster mode is enabled.
     */
    public /*out*/ readonly configurationEndpointAddress: pulumi.Computed<string>;
    public readonly engine?: pulumi.Computed<string>;
    /**
     * The version number of the cache engine to be used for the cache clusters in this replication group.
     */
    public readonly engineVersion: pulumi.Computed<string>;
    public readonly maintenanceWindow: pulumi.Computed<string>;
    /**
     * The compute and memory capacity of the nodes in the node group.
     */
    public readonly nodeType: pulumi.Computed<string>;
    public readonly notificationTopicArn?: pulumi.Computed<string>;
    /**
     * The number of cache clusters this replication group will have.
     * If Multi-AZ is enabled , the value of this parameter must be at least 2. Changing this number will force a new resource
     */
    public readonly numberCacheClusters: pulumi.Computed<number>;
    /**
     * The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.
     */
    public readonly parameterGroupName: pulumi.Computed<string>;
    /**
     * The port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
     */
    public readonly port: pulumi.Computed<number>;
    /**
     * The address of the endpoint for the primary node in the replication group. If Redis, only present when cluster mode is disabled.
     */
    public /*out*/ readonly primaryEndpointAddress: pulumi.Computed<string>;
    /**
     * A user-created description for the replication group.
     */
    public readonly replicationGroupDescription: pulumi.Computed<string>;
    /**
     * The replication group identifier. This parameter is stored as a lowercase string.
     */
    public readonly replicationGroupId: pulumi.Computed<string>;
    /**
     * One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
     * * `snapshot_arns` – (Optional) A single-element string list containing an
     * Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3.
     * Example: `arn:aws:s3:::my_bucket/snapshot1.rdb`
     */
    public readonly securityGroupIds: pulumi.Computed<string[]>;
    /**
     * A list of cache security group names to associate with this replication group.
     */
    public readonly securityGroupNames: pulumi.Computed<string[]>;
    public readonly snapshotArns?: pulumi.Computed<string[]>;
    /**
     * The name of a snapshot from which to restore data into the new node group. Changing the `snapshot_name` forces a new resource.
     * * `maintenance_window` – (Optional) Specifies the weekly time range for when maintenance
     * on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC).
     * The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
     * * `notification_topic_arn` – (Optional) An Amazon Resource Name (ARN) of an
     * SNS topic to send ElastiCache notifications to. Example:
     * `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
     */
    public readonly snapshotName?: pulumi.Computed<string>;
    /**
     * The number of days for which ElastiCache will
     * retain automatic cache cluster snapshots before deleting them. For example, if you set
     * SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days
     * before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.
     * Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro or cache.t2.* cache nodes
     */
    public readonly snapshotRetentionLimit?: pulumi.Computed<number>;
    /**
     * The daily time range (in UTC) during which ElastiCache will
     * begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
     */
    public readonly snapshotWindow: pulumi.Computed<string>;
    /**
     * The name of the cache subnet group to be used for the replication group.
     */
    public readonly subnetGroupName: pulumi.Computed<string>;
    /**
     * A mapping of tags to assign to the resource
     */
    public readonly tags?: pulumi.Computed<{[key: string]: any}>;

    /**
     * Create a ReplicationGroup resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this ReplicationGroup instance
     * @param args A collection of arguments for creating this ReplicationGroup intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: ReplicationGroupArgs, dependsOn?: pulumi.Resource[]) {
        if (args.nodeType === undefined) {
            throw new Error("Missing required property 'nodeType'");
        }
        if (args.port === undefined) {
            throw new Error("Missing required property 'port'");
        }
        if (args.replicationGroupDescription === undefined) {
            throw new Error("Missing required property 'replicationGroupDescription'");
        }
        if (args.replicationGroupId === undefined) {
            throw new Error("Missing required property 'replicationGroupId'");
        }
        super("aws:elasticache/replicationGroup:ReplicationGroup", urnName, {
            "applyImmediately": args.applyImmediately,
            "autoMinorVersionUpgrade": args.autoMinorVersionUpgrade,
            "automaticFailoverEnabled": args.automaticFailoverEnabled,
            "availabilityZones": args.availabilityZones,
            "clusterMode": args.clusterMode,
            "engine": args.engine,
            "engineVersion": args.engineVersion,
            "maintenanceWindow": args.maintenanceWindow,
            "nodeType": args.nodeType,
            "notificationTopicArn": args.notificationTopicArn,
            "numberCacheClusters": args.numberCacheClusters,
            "parameterGroupName": args.parameterGroupName,
            "port": args.port,
            "replicationGroupDescription": args.replicationGroupDescription,
            "replicationGroupId": args.replicationGroupId,
            "securityGroupIds": args.securityGroupIds,
            "securityGroupNames": args.securityGroupNames,
            "snapshotArns": args.snapshotArns,
            "snapshotName": args.snapshotName,
            "snapshotRetentionLimit": args.snapshotRetentionLimit,
            "snapshotWindow": args.snapshotWindow,
            "subnetGroupName": args.subnetGroupName,
            "tags": args.tags,
            "configurationEndpointAddress": undefined,
            "primaryEndpointAddress": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a ReplicationGroup resource.
 */
export interface ReplicationGroupArgs {
    /**
     * Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
     */
    readonly applyImmediately?: pulumi.ComputedValue<boolean>;
    /**
     * Specifies whether a minor engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window. Defaults to `true`.
     */
    readonly autoMinorVersionUpgrade?: pulumi.ComputedValue<boolean>;
    /**
     * Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. Defaults to `false`.
     */
    readonly automaticFailoverEnabled?: pulumi.ComputedValue<boolean>;
    /**
     * A list of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is not important.
     */
    readonly availabilityZones?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * Create a native redis cluster. `automatic_failover_enabled` must be set to true. Cluster Mode documented below. Only 1 `cluster_mode` block is allowed.
     */
    readonly clusterMode?: pulumi.ComputedValue<{ numNodeGroups: pulumi.ComputedValue<number>, replicasPerNodeGroup: pulumi.ComputedValue<number> }>[];
    readonly engine?: pulumi.ComputedValue<string>;
    /**
     * The version number of the cache engine to be used for the cache clusters in this replication group.
     */
    readonly engineVersion?: pulumi.ComputedValue<string>;
    readonly maintenanceWindow?: pulumi.ComputedValue<string>;
    /**
     * The compute and memory capacity of the nodes in the node group.
     */
    readonly nodeType: pulumi.ComputedValue<string>;
    readonly notificationTopicArn?: pulumi.ComputedValue<string>;
    /**
     * The number of cache clusters this replication group will have.
     * If Multi-AZ is enabled , the value of this parameter must be at least 2. Changing this number will force a new resource
     */
    readonly numberCacheClusters?: pulumi.ComputedValue<number>;
    /**
     * The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.
     */
    readonly parameterGroupName?: pulumi.ComputedValue<string>;
    /**
     * The port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
     */
    readonly port: pulumi.ComputedValue<number>;
    /**
     * A user-created description for the replication group.
     */
    readonly replicationGroupDescription: pulumi.ComputedValue<string>;
    /**
     * The replication group identifier. This parameter is stored as a lowercase string.
     */
    readonly replicationGroupId: pulumi.ComputedValue<string>;
    /**
     * One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
     * * `snapshot_arns` – (Optional) A single-element string list containing an
     * Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3.
     * Example: `arn:aws:s3:::my_bucket/snapshot1.rdb`
     */
    readonly securityGroupIds?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * A list of cache security group names to associate with this replication group.
     */
    readonly securityGroupNames?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    readonly snapshotArns?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * The name of a snapshot from which to restore data into the new node group. Changing the `snapshot_name` forces a new resource.
     * * `maintenance_window` – (Optional) Specifies the weekly time range for when maintenance
     * on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC).
     * The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
     * * `notification_topic_arn` – (Optional) An Amazon Resource Name (ARN) of an
     * SNS topic to send ElastiCache notifications to. Example:
     * `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
     */
    readonly snapshotName?: pulumi.ComputedValue<string>;
    /**
     * The number of days for which ElastiCache will
     * retain automatic cache cluster snapshots before deleting them. For example, if you set
     * SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days
     * before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.
     * Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro or cache.t2.* cache nodes
     */
    readonly snapshotRetentionLimit?: pulumi.ComputedValue<number>;
    /**
     * The daily time range (in UTC) during which ElastiCache will
     * begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
     */
    readonly snapshotWindow?: pulumi.ComputedValue<string>;
    /**
     * The name of the cache subnet group to be used for the replication group.
     */
    readonly subnetGroupName?: pulumi.ComputedValue<string>;
    /**
     * A mapping of tags to assign to the resource
     */
    readonly tags?: pulumi.ComputedValue<{[key: string]: any}>;
}

