// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

import {Topic} from "../sns/topic";

/**
 * Provides a CloudWatch Metric Alarm resource.
 */
export class MetricAlarm extends pulumi.Resource {
    /**
     * Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to `true`.
     */
    public readonly actionsEnabled?: pulumi.Computed<boolean>;
    /**
     * The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    public readonly alarmActions?: pulumi.Computed<Topic[]>;
    /**
     * The description for the alarm.
     */
    public readonly alarmDescription?: pulumi.Computed<string>;
    /**
     * The descriptive name for the alarm. This name must be unique within the user's AWS account
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`.
     */
    public readonly comparisonOperator: pulumi.Computed<string>;
    /**
     * The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    public readonly dimensions?: pulumi.Computed<{[key: string]: any}>;
    /**
     * Used only for alarms
     * based on percentiles. If you specify `ignore`, the alarm state will not
     * change during periods with too few data points to be statistically significant.
     * If you specify `evaluate` or omit this parameter, the alarm will always be
     * evaluated and possibly change state no matter how many data points are available.
     * The following values are supported: `ignore`, and `evaluate`.
     */
    public readonly evaluateLowSampleCountPercentiles: pulumi.Computed<string>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    public readonly evaluationPeriods: pulumi.Computed<number>;
    /**
     * The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
     */
    public readonly extendedStatistic?: pulumi.Computed<string>;
    /**
     * The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    public readonly insufficientDataActions?: pulumi.Computed<Topic[]>;
    /**
     * The name for the alarm's associated metric.
     * See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    public readonly metricName: pulumi.Computed<string>;
    /**
     * The namespace for the alarm's associated metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
     * See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    public readonly namespace: pulumi.Computed<string>;
    /**
     * The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    public readonly okActions?: pulumi.Computed<Topic[]>;
    /**
     * The period in seconds over which the specified `statistic` is applied.
     */
    public readonly period: pulumi.Computed<number>;
    /**
     * The statistic to apply to the alarm's associated metric.
     * Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
     */
    public readonly statistic?: pulumi.Computed<string>;
    /**
     * The value against which the specified statistic is compared.
     */
    public readonly threshold: pulumi.Computed<number>;
    /**
     * Sets how this alarm is to handle missing data points. The following values are supported: `missing`, `ignore`, `breaching` and `notBreaching`. Defaults to `missing`.
     */
    public readonly treatMissingData?: pulumi.Computed<string>;
    /**
     * The unit for the alarm's associated metric.
     */
    public readonly unit?: pulumi.Computed<string>;

    /**
     * Create a MetricAlarm resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this MetricAlarm instance
     * @param args A collection of arguments for creating this MetricAlarm intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: MetricAlarmArgs, dependsOn?: pulumi.Resource[]) {
        if (args.comparisonOperator === undefined) {
            throw new Error("Missing required property 'comparisonOperator'");
        }
        if (args.evaluationPeriods === undefined) {
            throw new Error("Missing required property 'evaluationPeriods'");
        }
        if (args.metricName === undefined) {
            throw new Error("Missing required property 'metricName'");
        }
        if (args.namespace === undefined) {
            throw new Error("Missing required property 'namespace'");
        }
        if (args.period === undefined) {
            throw new Error("Missing required property 'period'");
        }
        if (args.threshold === undefined) {
            throw new Error("Missing required property 'threshold'");
        }
        super("aws:cloudwatch/metricAlarm:MetricAlarm", urnName, {
            "actionsEnabled": args.actionsEnabled,
            "alarmActions": args.alarmActions,
            "alarmDescription": args.alarmDescription,
            "name": args.name,
            "comparisonOperator": args.comparisonOperator,
            "dimensions": args.dimensions,
            "evaluateLowSampleCountPercentiles": args.evaluateLowSampleCountPercentiles,
            "evaluationPeriods": args.evaluationPeriods,
            "extendedStatistic": args.extendedStatistic,
            "insufficientDataActions": args.insufficientDataActions,
            "metricName": args.metricName,
            "namespace": args.namespace,
            "okActions": args.okActions,
            "period": args.period,
            "statistic": args.statistic,
            "threshold": args.threshold,
            "treatMissingData": args.treatMissingData,
            "unit": args.unit,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a MetricAlarm resource.
 */
export interface MetricAlarmArgs {
    /**
     * Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to `true`.
     */
    readonly actionsEnabled?: pulumi.ComputedValue<boolean>;
    /**
     * The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    readonly alarmActions?: pulumi.ComputedValue<pulumi.ComputedValue<Topic>>[];
    /**
     * The description for the alarm.
     */
    readonly alarmDescription?: pulumi.ComputedValue<string>;
    /**
     * The descriptive name for the alarm. This name must be unique within the user's AWS account
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`.
     */
    readonly comparisonOperator: pulumi.ComputedValue<string>;
    /**
     * The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    readonly dimensions?: pulumi.ComputedValue<{[key: string]: any}>;
    /**
     * Used only for alarms
     * based on percentiles. If you specify `ignore`, the alarm state will not
     * change during periods with too few data points to be statistically significant.
     * If you specify `evaluate` or omit this parameter, the alarm will always be
     * evaluated and possibly change state no matter how many data points are available.
     * The following values are supported: `ignore`, and `evaluate`.
     */
    readonly evaluateLowSampleCountPercentiles?: pulumi.ComputedValue<string>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    readonly evaluationPeriods: pulumi.ComputedValue<number>;
    /**
     * The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
     */
    readonly extendedStatistic?: pulumi.ComputedValue<string>;
    /**
     * The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    readonly insufficientDataActions?: pulumi.ComputedValue<pulumi.ComputedValue<Topic>>[];
    /**
     * The name for the alarm's associated metric.
     * See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    readonly metricName: pulumi.ComputedValue<string>;
    /**
     * The namespace for the alarm's associated metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
     * See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
     */
    readonly namespace: pulumi.ComputedValue<string>;
    /**
     * The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Number (ARN).
     */
    readonly okActions?: pulumi.ComputedValue<pulumi.ComputedValue<Topic>>[];
    /**
     * The period in seconds over which the specified `statistic` is applied.
     */
    readonly period: pulumi.ComputedValue<number>;
    /**
     * The statistic to apply to the alarm's associated metric.
     * Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
     */
    readonly statistic?: pulumi.ComputedValue<string>;
    /**
     * The value against which the specified statistic is compared.
     */
    readonly threshold: pulumi.ComputedValue<number>;
    /**
     * Sets how this alarm is to handle missing data points. The following values are supported: `missing`, `ignore`, `breaching` and `notBreaching`. Defaults to `missing`.
     */
    readonly treatMissingData?: pulumi.ComputedValue<string>;
    /**
     * The unit for the alarm's associated metric.
     */
    readonly unit?: pulumi.ComputedValue<string>;
}

